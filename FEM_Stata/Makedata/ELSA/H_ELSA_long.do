clear all
set more off
set maxvar 10000

**************************************************
*Title: H_ELSA_long
*Summary: converts data from the ELSA to create the Harmonized ELSA
*Version: Version F (2002-2016)
*Authors: Sidney Beaumaster, Sandy Chien, Alexandra Crosswell, Ashley Lin, Drystan Phillips, Marieta Valev, Jenny Wilkens, Victoria Yonter & Jinkook Lee
*Date Published: November 2018
**************************************************

***define folder locations***
local stataraw "/home/luke/Documents/E_FEM_clean/ELSA/UKDA-5050-stata/stata/stata13_se/"
local output "/home/luke/Documents/E_FEM_clean/E_FEM/input_data/"

***define raw files***
global index "`stataraw'/index_file_wave_0-wave_5_v2.dta"
global wave_0_1998 "`stataraw'/wave_0_1998_data.dta"
global wave_0_1999 "`stataraw'/wave_0_1999_data.dta"
global wave_0_2001 "`stataraw'/wave_0_2001_data.dta"
global wave_0_comn "`stataraw'/wave_0_common_variables_v2.dta"
global wave_1_core "`stataraw'/wave_1_core_data_v3.dta"
global wave_1_fina "`stataraw'/wave_1_financial_derived_variables.dta"
global wave_1_pens "`stataraw'/wave_1_pension_grid.dta"
global wave_1_derv "`stataraw'/wave_1_ifs_derived_variables.dta"
global wave_2_core "`stataraw'/wave_2_core_data_v4.dta"
global wave_2_fina "`stataraw'/wave_2_financial_derived_variables.dta"
global wave_2_derv "`stataraw'/wave_2_derived_variables.dta"
global wave_2_derv2 "`stataraw'/wave_2_ifs_derived_variables.dta"
global wave_2_nurs "`stataraw'/wave_2_nurse_data_v2.dta"
global wave_2_pens "`stataraw'/wave_2_pension_grid_v3.dta"
global wave_3_core "`stataraw'/wave_3_elsa_data_v4.dta"
global wave_3_fina "`stataraw'/wave_3_financial_derived_variables.dta"
global wave_3_hist "`stataraw'/wave_3_life_history_data.dta"
global wave_3_pens "`stataraw'/wave_3_pensiongrid_v4.dta"
global wave_3_derv "`stataraw'/wave_3_ifs_derived_variables.dta"
global wave_4_core "`stataraw'/wave_4_elsa_data_v3.dta"
global wave_4_fina "`stataraw'/wave_4_financial_derived_variables.dta"
global wave_4_nurs "`stataraw'/wave_4_nurse_data.dta"
global wave_4_pens "`stataraw'/wave_4_pension_grid_v1.dta"
global wave_4_derv "`stataraw'/wave_4_ifs_derived_variables.dta"
global wave_5_core "`stataraw'/wave_5_elsa_data_v4.dta"
global wave_5_fina "`stataraw'/wave_5_financial_derived_variables.dta"
global wave_5_pens "`stataraw'/wave_5_pension_grid_v3.dta"
global wave_5_derv "`stataraw'/wave_5_ifs_derived_variables.dta"
global wave_6_core "`stataraw'/wave_6_elsa_data_v2.dta"
global wave_6_fina "`stataraw'/wave_6_financial_derived_variables.dta"
global wave_6_nurs "`stataraw'/wave_6_elsa_nurse_data_v2.dta"
global wave_6_pens "`stataraw'/wave_6_pensiongrid_archive_v1.dta"
global wave_6_endl "`stataraw'/elsa_endoflife_w6archive.dta"
global wave_6_derv "`stataraw'/wave_6_ifs_derived_variables.dta"
global wave_7_core "`stataraw'/wave_7_elsa_data.dta"
global wave_7_fina "`stataraw'/wave_7_financial_derived_variables.dta"
global wave_7_derv "`stataraw'/wave_7_ifs_derived_variables.dta"
global wave_8_core "`stataraw'/wave_8_elsa_data_eul_v2.dta"
global wave_8_fina "`stataraw'/wave_8_elsa_financial_dvs_eul_v1.dta"
global wave_8_nurs "`stataraw'/wave_8_elsa_nurse_data_eul_v1.dta"
global wave_8_derv "`stataraw'/wave_8_elsa_ifs_dvs_eul_v1.dta"

***define programs***
*generate spouse variables
***spouse
***this is a program that creates spouse variables from respondent information
***
*** the program is called as follows
***		spouse varname, result(result) wave(wave)
***			where:
***				varname - name of respondent variable
***				result 	- name of spouse variable, must be generated before program
***				wave		-	number of the wave
capture program drop spouse
program define spouse
syntax varname, result(varname) wave(integer)
	replace `result' = .u if w`wave'spouse==0 & s`wave'idauniq==0
	replace `result' = .v if w`wave'spouse==1 & s`wave'idauniq==0
	bysort h`wave'coupid: replace `result' = `varlist'[_n+1] if !missing(h`wave'coupid) & `varlist'[_n+1] !=.
	bysort h`wave'coupid: replace `result' = `varlist'[_n-1] if !missing(h`wave'coupid) & `varlist'[_n-1] !=.
end


*create special missing codes

***missing_w0
***this is a program that creates special missing codes for wave 1 variables
***
*** the program is called as follows
***		missing_w1 varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_w0
program define missing_w0
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if (`v' == -1 | `v' == .m) & !inlist(`result',.d,.r) & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = .d if (`v' == -8 | `v' == .d) & `result'!=.r & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = .r if (`v' == -9 | `v' == .r) & (`touse')
		}
	}
end

***missing_w1
***this is a program that creates special missing codes for wave 1 variables
***
*** the program is called as follows
***		missing_w1 varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_w1
program define missing_w1
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if (`v' == -1 | `v' == .m) & !inlist(`result',.d,.r)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = .d if (`v' == -8 | `v' == .d) & `result'!=.r & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = .r if (`v' == -9 | `v' == .r) & (`touse')
		}
	}
end

***missing_w2
***this is a program that creates special missing codes for wave 2 variables
***
*** the program is called as follows
***		missing_w2 varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_w2
program define missing_w2
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if (`v' == -1 | `v' == .m) & !inlist(`result',.d,.r)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = .d if (`v' == -8 | `v' == .d) & `result'!=.r & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = .r if (`v' == -9 | `v' == .r) & (`touse')
		}
	}
end

***missing_w3
***this is a program that creates special missing codes for wave 3 variables
***
*** the program is called as follows
***		missing_w3 varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_w3
program define missing_w3
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if (`v' == -1 | `v' == -2 | `v' == .m) & !inlist(`result',.d,.r)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = .d if (`v' == -8 | `v' == .d) & `result'!=.r & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = .r if (`v' == -9 | `v' == .r) & (`touse')
		}
	}
end

***missing_w4
***this is a program that creates special missing codes for wave 4 variables
***
*** the program is called as follows
***		missing_w4 varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_w4
program define missing_w4
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if (`v' == -1 | `v' == -2 | `v' == .m) & !inlist(`result',.d,.r)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = .d if (`v' == -8 | `v' == .d) & `result'!=.r & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = .r if (`v' == -9 | `v' == .r) & (`touse')
		}
	}
end

***missing_w5
***this is a program that creates special missing codes for wave 5 variables
***
*** the program is called as follows
***		missing_w5 varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_w5
program define missing_w5
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if (`v' == -1 | `v' == -2 | `v' == .m) & !inlist(`result',.d,.r)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = .d if (`v' == -8 | `v' == .d) & `result'!=.r & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = .r if (`v' == -9 | `v' == .r) & (`touse')
		}
	}
end

***missing_w6
***this is a program that creates special missing codes for wave 6 variables
***
*** the program is called as follows
***		missing_w6 varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_w6
program define missing_w6
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if (`v' == -1 | `v' == -2 | `v' == .m) & !inlist(`result',.d,.r)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = .d if (`v' == -8 | `v' == .d) & `result'!=.r & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = .r if (`v' == -9 | `v' == .r) & (`touse')
		}
	}
end

***missing_w7
***this is a program that creates special missing codes for wave 7 variables
***
*** the program is called as follows
***		missing_w7 varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_w7
program define missing_w7
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if (`v' == -1 | `v' == -2 | `v' == .m) & !inlist(`result',.d,.r)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = .d if (`v' == -8 | `v' == .d) & `result'!=.r & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = .r if (`v' == -9 | `v' == .r) & (`touse')
		}
	}
end

***missing_w8
***this is a program that creates special missing codes for wave 7 variables
***
*** the program is called as follows
***		missing_w8 varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_w8
program define missing_w8
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if (`v' == -1 | `v' == -2 | `v' == .m) & !inlist(`result',.d,.r)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = .d if (`v' == -8 | `v' == .d) & `result'!=.r & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = .r if (`v' == -9 | `v' == .r) & (`touse')
		}
	}
end

***missing_H
***this is a program that creates special missing codes for RAND Harmonized variables
***
*** the program is called as follows
***		missing_H varlist, result(result)
***			where:
***				varlist - list of variables which should influence missing codes
***				result 	- name of harmonized variable, must be generated before program
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop missing_H
program define missing_H
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = .m if `v' == .m & !inlist(`result',.d,.r)  & (`touse') // this is the lowest category
	}
	foreach v of varlist `varlist' {
		replace `result' = .d if `v' == .d & `result'!=.r & (`touse')
	}
	foreach v of varlist `varlist' {
		replace `result' = .r if `v' == .r & (`touse')
	}
}
end


*create income flags
***combine_inc_flags1
***this is program that combines imputation flags from multiple income variables.
***			this flag program makes these categorical transformations
***		-10. institutional interview    to 10. institutional interview
***		 -3. has non-responding spouse	to	9. non-responding spouse
***		 -2. non-sample member   	      to	8. non-sample member
***			0. zero												to	6. no income
***			1. continuous 								to  1. continuous value
***			2. closed band 								to  2. complete bracket
***			3. open band								  to  3. incomplete bracket
***			4. missing, positive					to	5. no value/bracket
***			5. missing completely					to	7. dk
***			7. missing, has asset					to	5. no value/bracket
***			8. misisng, has an isa				to  5. no value/bracket
***
*** the program is called as follows
***		combine_inc_flags1 varlist [if] [in], result(varname)
***			where:
***				varlist - list of the income flags to be combined
***				result - the name of the desired combined flag variable which must be pre-generated
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop combine_inc_flags1
program define combine_inc_flags1
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = 6 if `v' == 0  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = 1 if `v' == 1 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 2 if `v' == 2 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 3 if `v' == 3 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 5 if (`v' == 4 | `v' == 7 | `v' == 8) & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 7 if `v' == 5 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 9 if `v' == -3 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 10 if `v' == -10 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 8 if `v' == -2 & (`touse')
		}
	label values `result' incflag
	}
end

***combine_inc_flags2
***this is program that combines imputation flags from multiple income variables.
***			this flag program makes these categorical transformations
***	 -995. institutional interview                    to 10. institutional interview
***	 -999. has non-responding spouse                  to	9. non-responding spouse
***	 -998. non-sample member         	                to	8. non-sample member
***		 -1. receoved, but ben amt included elsewwhere 	to	6. no income
***			0. zero												                to	6. no income
***			1. continuous 								                to  1. continuous value
***			2. closed band 								                to  2. complete bracket
***			3. open band								                  to  3. incomplete bracket
***			4. missing, positive					                to	5. no value/bracket
***			5. missing completely					                to	7. dk
***			6. missing, rec'd benefit in last yr          to	5. no value/bracket
***			7. missing, has asset                         to	5. no value/bracket
***			8. missing, has an isa                        to	5. no value/bracket
***
*** the program is called as follows
***		combine_inc_flags2 varlist [if] [in], result(varname)
***			where:
***				varlist - list of the income flags to be combined
***				result - the name of the desired combined flag variable which must be pre-generated
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop combine_inc_flags2
program define combine_inc_flags2
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = 6 if (`v' == -1 | `v' == 0)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = 1 if `v' == 1 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 2 if `v' == 2 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 3 if `v' == 3 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 5 if (`v' == 4 | `v' == 6 | `v' == 7 | `v' == 8) & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 7 if `v' == 5 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 9 if `v' == -999 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 10 if `v' == -995 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 8 if `v' == -998 & (`touse')
		}
	label values `result' incflag
	}
end


***combine_inc_flags9
***this is program that combines imputation flags from multiple income imputation flag variables.
***			this flag program assumes that categories are and will remain:
***				1. continuous value
***				2. complete bracket
***				3. incomplete bracket
***				5. no value/bracket
***				6. no income
***				7. dk
***				9. non-responding spouse
***				8. non-sample member
***			 10. institutional interview

***
*** the program is called as follows
***		combine_inc_flags9 varlist [if] [in], result(varname)
***			where:
***				varlist - list of the multiple income imputation flag variables to be combined
***				result - the name of the desired combined flag variable which must be pre-generated
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop combine_inc_flags9
program define combine_inc_flags9
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = 6 if `v' == 6  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = 1 if `v' == 1 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 2 if `v' == 2 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 3 if `v' == 3 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 5 if `v' == 5 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 7 if `v' == 7 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 9 if `v' == 9 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 10 if `v' == 10 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 8 if `v' == 8 & (`touse')
		}
	label values `result' incflag
	}
end


*create assest flags
***combine_ass_flags1
***this is program that combines imputation flags from multiple asset variables.
***			this flag program makes these categorical transformations
***		-10. institutional interview    to 10. institutional interview
***		 -3. has non-responding spouse	to	9. non-responding spouse
***		 -2. non-sample member   	      to	8. non-sample member
***			0. zero												to	6. no asset
***			1. continuous 								to  1. continuous value
***			2. closed band 								to  2. complete bracket
***			3. open band								  to  3. incomplete bracket
***			4. missing, positive					to	5. no value/bracket
***			5. missing completely					to	7. dk
***			7. missing, has asset				  to	5. no value/bracket
***			8. missing, has an isa				to	5. no value/bracket
***
*** the program is called as follows
***		combine_ass_flags1 varlist [if] [in], result(varname)
***			where:
***				varlist - list of the asset flags to be combined
***				result - the name of the desired combined flag variable which must be pre-generated
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop combine_ass_flags1
program define combine_ass_flags1
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = 6 if `v' == 0  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = 1 if `v' == 1 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 2 if `v' == 2 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 3 if `v' == 3 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 5 if (`v' == 4 | `v' == 7 | `v' == 8) & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 7 if `v' == 5 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 9 if `v' == -3 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 10 if `v' == -10 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 8 if `v' == -2 & (`touse')
		}
	label values `result' assflag
	}
end

***combine_ass_flags2
***this is program that combines imputation flags from multiple asset variables.
***			this flag program makes these categorical transformations
***	 -995. institutional interview                      to 10. institutional interview
***	 -999. has non-responding spouse                    to	9. non-responding spouse
***	 -998. non-sample member         	                to	8. non-sample member
***	   -1. receoved, but ben amt included elsewwhere 	to	6. no asset
***		0. zero										    to	6. no asset
***		1. continuous 								    to  1. continuous value
***		2. closed band 								    to  2. complete bracket
***		3. open band								    to  3. incomplete bracket
***		4. missing, positive					        to	5. no value/bracket
***		5. missing completely					        to	7. dk
***		6. missing, rec'd benefit in last yr            to	5. no value/bracket
***		7. missing, has asset				            to	5. no value/bracket
***		8. missing, has an isa				            to	5. no value/bracket
***
*** the program is called as follows
***		combine_ass_flags1 varlist [if] [in], result(varname)
***			where:
***				varlist - list of the asset flags to be combined
***				result - the name of the desired combined flag variable which must be pre-generated
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop combine_ass_flags2
program define combine_ass_flags2
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = 6 if (`v' == -1 | `v' == 0)  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = 1 if `v' == 1 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 2 if `v' == 2 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 3 if `v' == 3 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 5 if (`v' == 4 | `v' == 6 | `v' == 7 | `v' == 8) & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 7 if `v' == 5 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 9 if `v' == -999 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 10 if `v' == -995 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 8 if `v' == -998 & (`touse')
		}
	label values `result' assflag
	}
end


***combine_ass_flags9
***this is program that combines imputation flags from multiple asset imputation flag variables.
***			this flag program assumes that categories are and will remain:
***				1. continuous value
***				2. complete bracket
***				3. incomplete bracket
***				5. no value/bracket
***				6. no asset
***				7. dk ownership
***				9. non-responding spouse
***				8. non-sample member
***			 10. institutional interview

***
*** the program is called as follows
***		combine_ass_flags9 varlist [if] [in], result(varname)
***			where:
***				varlist - list of the multiple asset imputation flag variables to be combined
***				result - the name of the desired combined flag variable which must be pre-generated
***				[if] and [in] allow limitation of the program to a subsample using an if or in statement, both are optional
capture program drop combine_ass_flags9
program define combine_ass_flags9
syntax varlist [if] [in], result(varname)

marksample touse, novarlist // process if and in statements

quietly {
	foreach v of varlist `varlist' {
		replace `result' = 6 if `v' == 6  & (`touse') // this is the lowest category
		}
	foreach v of varlist `varlist' {
		replace `result' = 1 if `v' == 1 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 2 if `v' == 2 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 3 if `v' == 3 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 5 if `v' == 5 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 7 if `v' == 7 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 9 if `v' == 9 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 10 if `v' == 10 & (`touse')
		}
	foreach v of varlist `varlist' {
		replace `result' = 8 if `v' == 8 & (`touse')
		}
	label values `result' assflag
	}
end


*feed forward parent age from household grid
***H_ELSA_wave_0_hh_parent_age
***this is a program that feeds in the age of a parent for parents living in the household in wave 0
***
*** the program is called as follows
***		H_ELSA_wave_0_hh_parent_age varname, [mom dad]
***			where:
***				varname - name of already created H ELSA variable  
***				mom 	- all categorical original ELSA variables used in creation of varname
***				dad 	- all continuous original ELSA variables used in creation of varname

capture program drop H_ELSA_wave_0_hh_parent_age
program define H_ELSA_wave_0_hh_parent_age
syntax varname, flag(varname) [Mom Dad]
	if "`mom'"=="mom" & "`dad'"=="dad" {
		di as error "cannot specify both options 'mom' and 'dad'"
		exit 198
	}
	else if "`mom'"=="mom" {
		di "(replacing `varlist' with mother's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/12 {
			if `p'<10 {
				local p2 0`p'
			}
			else {
				local p2 `p'
			}
			local dhr2 relto`p2'
			replace par1_num=`p' if `dhr2'==3 & natmab==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & natmab==1 & par1_num!=`p'
		}
		*1st parent mentioned
		bysort hh0hhid: egen w0_par1_num = min(par1_num) if !mi(hh0hhid)
		gen child1_inty=yintb if w0_par1_num==par1_num
		bysort hh0hhid: replace child1_inty=child1_inty[_n-1] if !mi(hh0hhid) & child1_inty[_n-1]!=.
		bysort hh0hhid: replace child1_inty=child1_inty[_N] if !mi(hh0hhid)
		
		*2nd parent mentioned
		bysort hh0hhid: egen w0_par2_num = min(par2_num) if !mi(hh0hhid)
		gen child2_inty=yintb if w0_par2_num==par2_num
		bysort hh0hhid: replace child2_inty=child2_inty[_n-1] if !mi(hh0hhid) & child2_inty[_n-1]!=.
		bysort hh0hhid: replace child2_inty=child2_inty[_N] if !mi(hh0hhid)
		
		*3rd parent mentioned
		bysort hh0hhid: egen w0_par3_num = max(par1_num) if !mi(hh0hhid)
		gen child3_inty=yintb if w0_par3_num==par1_num
		bysort hh0hhid: replace child3_inty=child3_inty[_n-1] if !mi(hh0hhid) & child3_inty[_n-1]!=.
		bysort hh0hhid: replace child3_inty=child3_inty[_N] if !mi(hh0hhid)
		
		*4th parent mentioned
		bysort hh0hhid: egen w0_par4_num = max(par2_num) if !mi(hh0hhid)
		gen child4_inty=yintb if w0_par4_num==par2_num
		bysort hh0hhid: replace child4_inty=child4_inty[_n-1] if !mi(hh0hhid) & child4_inty[_n-1]!=.
		bysort hh0hhid: replace child4_inty=child4_inty[_N] if !mi(hh0hhid)
		
		*1st mother mentioned
		gen mom1_age=.
		gen mom1_fage=.
		replace mom1_age = child1_inty-1916 if dobyear==-7 & persno==w0_par1_num  & sex==2
		replace mom1_age = child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w0_par1_num & sex==2
		replace mom1_fage = 2 if dobyear==-7 & persno==w0_par1_num & sex==2
		replace mom1_age = ager if inrange(ager,10,90) & persno==w0_par1_num & sex==2
		replace mom1_age = 90 if ager==99 & persno==w0_par1_num & sex==2
		replace mom1_fage = 1 if ager==99 & persno==w0_par1_num & sex==2
		bysort hh0hhid: replace mom1_age=mom1_age[_n-1] if !mi(hh0hhid) & mom1_age[_n-1]!=.
		bysort hh0hhid: replace mom1_age=mom1_age[_N] if !mi(hh0hhid)
		bysort hh0hhid: replace mom1_fage=mom1_fage[_n-1] if !mi(hh0hhid) & mom1_fage[_n-1]!=.
		bysort hh0hhid: replace mom1_fage=mom1_fage[_N] if !mi(hh0hhid)
		
		replace `varlist' = mom1_age if mom1_age!=. & w0_par1_num==par1_num
		replace `flag' = mom1_fage if mom1_fage!=. & w0_par1_num==par1_num
		
		*2nd mother mentioned
		gen mom2_age=.
        gen mom2_fage=.
		replace mom2_age = child2_inty-1916 if dobyear==-7 & persno==w0_par2_num  & sex==2
		replace mom2_fage = 2 if dobyear==-7 & persno==w0_par2_num & sex==2
		replace mom2_age = child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w0_par2_num & sex==2
		replace mom2_age = ager if inrange(ager,10,90) & persno==w0_par2_num & sex==2
		replace mom2_age = 90 if ager==99 & persno==w0_par2_num & sex==2
		replace mom2_fage = 1 if ager==99 & persno==w0_par2_num & sex==2
		bysort hh0hhid: replace mom2_age=mom2_age[_n-1] if !mi(hh0hhid) & mom2_age[_n-1]!=.
		bysort hh0hhid: replace mom2_age=mom2_age[_N] if !mi(hh0hhid)
		bysort hh0hhid: replace mom2_fage=mom2_fage[_n-1] if !mi(hh0hhid) & mom2_fage[_n-1]!=.
		bysort hh0hhid: replace mom2_fage=mom2_fage[_N] if !mi(hh0hhid)
		
		replace `varlist' = mom2_age if mom2_age!=. & w0_par2_num==par2_num
		replace `flag' = mom2_fage if mom2_fage!=. & w0_par2_num==par2_num
		
		*3rd mother mentioned
		gen mom3_age=.
        gen mom3_fage=.
		replace mom3_age = child3_inty-1916 if dobyear==-7 & persno==w0_par3_num & sex==2
		replace mom3_fage = 2 if dobyear==-7 & persno==w0_par3_num & sex==2
		replace mom3_age = child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w0_par3_num & sex==2
		replace mom3_age = ager if inrange(ager,10,90) & persno==w0_par3_num & sex==2
		replace mom3_age = 90 if ager==99 & persno==w0_par3_num & sex==2
		replace mom3_fage = 1 if ager==99 & persno==w0_par3_num & sex==2
		bysort hh0hhid: replace mom3_age=mom3_age[_n-1] if !mi(hh0hhid) & mom3_age[_n-1]!=.
		bysort hh0hhid: replace mom3_age=mom3_age[_N] if !mi(hh0hhid)
		bysort hh0hhid: replace mom3_fage=mom3_fage[_n-1] if !mi(hh0hhid) & mom3_fage[_n-1]!=.
		bysort hh0hhid: replace mom3_fage=mom3_fage[_N] if !mi(hh0hhid)
		
		replace `varlist' = mom3_age if mom3_age!=. & w0_par3_num==par1_num
		replace `flag' = mom3_fage if mom3_fage!=. & w0_par3_num==par1_num
		
		*4th mother mentioned
		gen mom4_age=.
        gen mom4_fage=.
		replace mom4_age = child4_inty-1916 if dobyear==-7 & persno==w0_par4_num & sex==2
		replace mom4_fage = 2 if dobyear==-7 & persno==w0_par4_num & sex==2
		replace mom4_age = child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w0_par4_num & sex==2
		replace mom4_age = ager if inrange(ager,10,90) & persno==w0_par4_num & sex==2
		replace mom4_age = 90 if ager==99 & persno==w0_par4_num & sex==2
		replace mom4_fage = 1 if ager==99 & persno==w0_par4_num & sex==2
		bysort hh0hhid: replace mom4_age=mom4_age[_n-1] if !mi(hh0hhid) & mom4_age[_n-1]!=.
		bysort hh0hhid: replace mom4_age=mom4_age[_N] if !mi(hh0hhid)
		bysort hh0hhid: replace mom4_fage=mom4_fage[_n-1] if !mi(hh0hhid) & mom4_fage[_n-1]!=.
		bysort hh0hhid: replace mom4_fage=mom4_fage[_N] if !mi(hh0hhid)
		
		replace `varlist' = mom4_age if mom4_age!=. & w0_par4_num==par2_num
		replace `flag' = mom4_fage if mom4_fage!=. & w0_par4_num==par2_num
		
		drop par1_num par2_num w0_par1_num child1_inty w0_par2_num child2_inty w0_par3_num child3_inty w0_par4_num child4_inty mom1_age mom2_age mom3_age mom4_age mom1_fage mom2_fage mom3_fage mom4_fage
	}
	else if "`dad'"=="dad" {
		di "(replacing `varlist' with father's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/12 {
			if `p'<10 {
				local p2 0`p'
			}
			else {
				local p2 `p'
			}
			local dhr2 relto`p2'
			replace par1_num=`p' if `dhr2'==3 & natpab==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & natpab==1 & par1_num!=`p'
		}
		*1st parent mentioned
		bysort hh0hhid: egen w0_par1_num = min(par1_num) if !mi(hh0hhid)
		gen child1_inty=yintb if w0_par1_num==par1_num
		bysort hh0hhid: replace child1_inty=child1_inty[_n-1] if !mi(hh0hhid) & child1_inty[_n-1]!=.
		bysort hh0hhid: replace child1_inty=child1_inty[_N] if !mi(hh0hhid)
		
		*2nd parent mentioned
		bysort hh0hhid: egen w0_par2_num = min(par2_num) if !mi(hh0hhid)
		gen child2_inty=yintb if w0_par2_num==par2_num
		bysort hh0hhid: replace child2_inty=child2_inty[_n-1] if !mi(hh0hhid) & child2_inty[_n-1]!=.
		bysort hh0hhid: replace child2_inty=child2_inty[_N] if !mi(hh0hhid)
		
		*3rd parent mentioned
		bysort hh0hhid: egen w0_par3_num = max(par1_num) if !mi(hh0hhid)
		gen child3_inty=yintb if w0_par3_num==par1_num
		bysort hh0hhid: replace child3_inty=child3_inty[_n-1] if !mi(hh0hhid) & child3_inty[_n-1]!=.
		bysort hh0hhid: replace child3_inty=child3_inty[_N] if !mi(hh0hhid)
		
		*4th parent mentioned
		bysort hh0hhid: egen w0_par4_num = max(par2_num) if !mi(hh0hhid)
		gen child4_inty=yintb if w0_par4_num==par2_num
		bysort hh0hhid: replace child4_inty=child4_inty[_n-1] if !mi(hh0hhid) & child4_inty[_n-1]!=.
		bysort hh0hhid: replace child4_inty=child4_inty[_N] if !mi(hh0hhid)
		
		*1st father mentioned
		gen dad1_age=.
        gen dad1_fage=.
		replace dad1_age = child1_inty-1916 if dobyear==-7 & persno==w0_par1_num  & sex==1
		replace dad1_fage = 2 if dobyear==-7 & persno==w0_par1_num & sex==1
		replace dad1_age = child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w0_par1_num & sex==1
		replace dad1_age = ager if inrange(ager,10,90) & persno==w0_par1_num & sex==1
		replace dad1_age = 90 if ager==99 & persno==w0_par1_num & sex==1
		replace dad1_fage = 1 if ager==99 & persno==w0_par1_num & sex==1
		bysort hh0hhid: replace dad1_age=dad1_age[_n-1] if !mi(hh0hhid) & dad1_age[_n-1]!=.
		bysort hh0hhid: replace dad1_age=dad1_age[_N] if !mi(hh0hhid)
		bysort hh0hhid: replace dad1_fage=dad1_fage[_n-1] if !mi(hh0hhid) & dad1_fage[_n-1]!=.
		bysort hh0hhid: replace dad1_fage=dad1_fage[_N] if !mi(hh0hhid)
		
		replace `varlist' = dad1_age if dad1_age!=. & w0_par1_num==par1_num
		replace `flag' = dad1_fage if dad1_fage!=. & w0_par1_num==par1_num
		
		*2nd father mentioned
		gen dad2_age=.
        gen dad2_fage=.
		replace dad2_age = child2_inty-1916 if dobyear==-7 & persno==w0_par2_num  & sex==1
		replace dad2_fage = 2 if dobyear==-7 & persno==w0_par2_num & sex==1
		replace dad2_age = child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w0_par2_num & sex==1
		replace dad2_age = ager if inrange(ager,10,90) & persno==w0_par2_num & sex==1
		replace dad2_age = 90 if ager==99 & persno==w0_par2_num & sex==1
		replace dad2_fage = 1 if ager==99 & persno==w0_par2_num & sex==1
		bysort hh0hhid: replace dad2_age=dad2_age[_n-1] if !mi(hh0hhid) & dad2_age[_n-1]!=.
		bysort hh0hhid: replace dad2_age=dad2_age[_N] if !mi(hh0hhid)
		bysort hh0hhid: replace dad2_fage=dad2_fage[_n-1] if !mi(hh0hhid) & dad2_fage[_n-1]!=.
		bysort hh0hhid: replace dad2_fage=dad2_fage[_N] if !mi(hh0hhid)
		
		replace `varlist' = dad2_age if dad2_age!=. & w0_par2_num==par2_num
		replace `flag' = dad2_fage if dad2_fage!=. & w0_par2_num==par2_num
		
		*3rd father mentioned
		gen dad3_age=.
        gen dad3_fage=.
		replace dad3_age = child3_inty-1916 if dobyear==-7 & persno==w0_par3_num & sex==1
		replace dad3_fage = 2 if dobyear==-7 & persno==w0_par3_num & sex==1
		replace dad3_age = child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w0_par3_num & sex==1
		replace dad3_age = ager if inrange(ager,10,90) & persno==w0_par3_num & sex==1
		replace dad3_age = 90 if ager==99 & persno==w0_par3_num & sex==1
		replace dad3_fage = 1 if ager==99 & persno==w0_par3_num & sex==1
		bysort hh0hhid: replace dad3_age=dad3_age[_n-1] if !mi(hh0hhid) & dad3_age[_n-1]!=.
		bysort hh0hhid: replace dad3_age=dad3_age[_N] if !mi(hh0hhid)
		bysort hh0hhid: replace dad3_fage=dad3_fage[_n-1] if !mi(hh0hhid) & dad3_fage[_n-1]!=.
		bysort hh0hhid: replace dad3_fage=dad3_fage[_N] if !mi(hh0hhid)
		
		replace `varlist' = dad3_age if dad3_age!=. & w0_par3_num==par1_num
		
		*4th father mentioned
		gen dad4_age=.
        gen dad4_fage=.
		replace dad4_age = child4_inty-1916 if dobyear==-7 & persno==w0_par4_num & sex==1
		replace dad4_fage = 2 if dobyear==-7 & persno==w0_par4_num & sex==1
		replace dad4_age = child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w0_par4_num & sex==1
		replace dad4_age = ager if inrange(ager,10,90) & persno==w0_par4_num & sex==1
		replace dad4_age = 90 if ager==99 & persno==w0_par4_num & sex==1
		replace dad4_fage = 1 if ager==99 & persno==w0_par4_num & sex==1
		bysort hh0hhid: replace dad4_age=dad4_age[_n-1] if !mi(hh0hhid) & dad4_age[_n-1]!=.
		bysort hh0hhid: replace dad4_age=dad4_age[_N] if !mi(hh0hhid)
		bysort hh0hhid: replace dad4_fage=dad4_fage[_n-1] if !mi(hh0hhid) & dad4_fage[_n-1]!=.
		bysort hh0hhid: replace dad4_fage=dad4_fage[_N] if !mi(hh0hhid)
		
		replace `varlist' = dad4_age if dad4_age!=. & w0_par4_num==par2_num
		replace `flag' = dad4_fage if dad4_fage!=. & w0_par4_num==par2_num
		
		drop par1_num par2_num w0_par1_num child1_inty w0_par2_num child2_inty w0_par3_num child3_inty w0_par4_num child4_inty dad1_age dad2_age dad3_age dad4_age dad1_fage dad2_fage dad3_fage dad4_fage
	}
	else {
		di as error "must specify either option 'mom' or option 'dad'"
		exit 198
	}
end


***H_ELSA_wave_1_hh_parent_age
***this is a program that feeds in the age of a parent for parents living in the household in wave 1
***
*** the program is called as follows
***		H_ELSA_wave_1_hh_parent_age varname, [mom dad]
***			where:
***				varname - name of already created H ELSA variable  
***				mom 	- all categorical original ELSA variables used in creation of varname
***				dad 	- all continuous original ELSA variables used in creation of varname

capture program drop H_ELSA_wave_1_hh_parent_age
program define H_ELSA_wave_1_hh_parent_age
syntax varname, flag(varname) [ Mom Dad]
	if "`mom'"=="mom" & "`dad'"=="dad" {
		di as error "cannot specify both options 'mom' and 'dad'"
		exit 198
	}
	else if "`mom'"=="mom" {
		di "(replacing `varlist' with mother's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/13 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 dhr`p2'
			replace par1_num=`p' if `dhr2'==3 & mainhh1==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & mainhh1==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/1 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=intdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=intdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=intdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=intdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st mother mentioned
		gen mom1_age=.
		gen mom1_fage=.
		forvalues w=0/1 {
			replace mom1_age = w`w'_child1_inty-1916 if dobyear==-7 & persno==w`w'_par1_num  & sex==2
			replace mom1_fage = 2 if dobyear==-7 & persno==w`w'_par1_num & sex==2
			replace mom1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par1_num & sex==2
			replace mom1_age = indager if inrange(indager,10,90) & persno==w`w'_par1_num & sex==2
			replace mom1_age = 90 if indager==99 & persno==w`w'_par1_num & sex==2
			replace mom1_fage = 1 if indager==99 & persno==w`w'_par1_num & sex==2
			bysort hh`w'hhid: replace mom1_age=mom1_age[_n-1] if !mi(hh`w'hhid) & mom1_age[_n-1]!=.
			bysort hh`w'hhid: replace mom1_age=mom1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_n-1] if !mi(hh`w'hhid) & mom1_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom1_age if mom1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = mom1_fage if mom1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd mother mentioned
		gen mom2_age=.
        gen mom2_fage=.
		forvalues w=0/1 {
			replace mom2_age = w`w'_child2_inty-1916 if dobyear==-7 & persno==w`w'_par2_num  & sex==2
			replace mom2_fage = 2 if dobyear==-7 & persno==w`w'_par2_num & sex==2
			replace mom2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par2_num & sex==2
			replace mom2_age = indager if inrange(indager,10,90) & persno==w`w'_par2_num & sex==2
			replace mom2_age = 90 if indager==99 & persno==w`w'_par2_num & sex==2
			replace mom2_fage = 1 if indager==99 & persno==w`w'_par2_num & sex==2
			bysort hh`w'hhid: replace mom2_age=mom2_age[_n-1] if !mi(hh`w'hhid) & mom2_age[_n-1]!=.
			bysort hh`w'hhid: replace mom2_age=mom2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_n-1] if !mi(hh`w'hhid) & mom2_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom2_age if mom2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = mom2_fage if mom2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd mother mentioned
		gen mom3_age=.
        gen mom3_fage=.
		forvalues w=0/1 {
			replace mom3_age = w`w'_child3_inty-1916 if dobyear==-7 & persno==w`w'_par3_num & sex==2
			replace mom3_fage = 2 if dobyear==-7 & persno==w`w'_par3_num & sex==2
			replace mom3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par3_num & sex==2
			replace mom3_age = indager if inrange(indager,10,90) & persno==w`w'_par3_num & sex==2
			replace mom3_age = 90 if indager==99 & persno==w`w'_par3_num & sex==2
			replace mom3_fage = 1 if indager==99 & persno==w`w'_par3_num & sex==2
			bysort hh`w'hhid: replace mom3_age=mom3_age[_n-1] if !mi(hh`w'hhid) & mom3_age[_n-1]!=.
			bysort hh`w'hhid: replace mom3_age=mom3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_n-1] if !mi(hh`w'hhid) & mom3_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom3_age if mom3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = mom3_fage if mom3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th mother mentioned
		gen mom4_age=.
        gen mom4_fage=.
		forvalues w=0/1 {
			replace mom4_age = w`w'_child4_inty-1916 if dobyear==-7 & persno==w`w'_par4_num & sex==2
			replace mom4_fage = 2 if dobyear==-7 & persno==w`w'_par4_num & sex==2
			replace mom4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par4_num & sex==2
			replace mom4_age = indager if inrange(indager,10,90) & persno==w`w'_par4_num & sex==2
			replace mom4_age = 90 if indager==99 & persno==w`w'_par4_num & sex==2
			replace mom4_fage = 1 if indager==99 & persno==w`w'_par4_num & sex==2
			bysort hh`w'hhid: replace mom4_age=mom4_age[_n-1] if !mi(hh`w'hhid) & mom4_age[_n-1]!=.
			bysort hh`w'hhid: replace mom4_age=mom4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_n-1] if !mi(hh`w'hhid) & mom4_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom4_age if mom4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = mom4_fage if mom4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num mom1_age mom2_age mom3_age mom4_age mom1_fage mom2_fage mom3_fage mom4_fage
		forvalues w=0/1 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else if "`dad'"=="dad" {
		di "(replacing `varlist' with father's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/13 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 dhr`p2'
			replace par1_num=`p' if `dhr2'==3 & painhh1==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & painhh1==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/1 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=intdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=intdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=intdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=intdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st father mentioned
		gen dad1_age=.
        gen dad1_fage=.
		forvalues w=0/1 {
			replace dad1_age = w`w'_child1_inty-1916 if dobyear==-7 & persno==w`w'_par1_num  & sex==1
			replace dad1_fage = 2 if dobyear==-7 & persno==w`w'_par1_num & sex==1
			replace dad1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par1_num & sex==1
			replace dad1_age = indager if inrange(indager,10,90) & persno==w`w'_par1_num & sex==1
			replace dad1_age = 90 if indager==99 & persno==w`w'_par1_num & sex==1
			replace dad1_fage = 1 if indager==99 & persno==w`w'_par1_num & sex==1
			bysort hh`w'hhid: replace dad1_age=dad1_age[_n-1] if !mi(hh`w'hhid) & dad1_age[_n-1]!=.
			bysort hh`w'hhid: replace dad1_age=dad1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_n-1] if !mi(hh`w'hhid) & dad1_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad1_age if dad1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = dad1_fage if dad1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd father mentioned
		gen dad2_age=.
        gen dad2_fage=.
		forvalues w=0/1 {
			replace dad2_age = w`w'_child2_inty-1916 if dobyear==-7 & persno==w`w'_par2_num  & sex==1
			replace dad2_fage = 2 if dobyear==-7 & persno==w`w'_par2_num & sex==1
			replace dad2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par2_num & sex==1
			replace dad2_age = indager if inrange(indager,10,90) & persno==w`w'_par2_num & sex==1
			replace dad2_age = 90 if indager==99 & persno==w`w'_par2_num & sex==1
			replace dad2_fage = 1 if indager==99 & persno==w`w'_par2_num & sex==1
			bysort hh`w'hhid: replace dad2_age=dad2_age[_n-1] if !mi(hh`w'hhid) & dad2_age[_n-1]!=.
			bysort hh`w'hhid: replace dad2_age=dad2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_n-1] if !mi(hh`w'hhid) & dad2_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad2_age if dad2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = dad2_fage if dad2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd father mentioned
		gen dad3_age=.
        gen dad3_fage=.
		forvalues w=0/1 {
			replace dad3_age = w`w'_child3_inty-1916 if dobyear==-7 & persno==w`w'_par3_num & sex==1
			replace dad3_fage = 2 if dobyear==-7 & persno==w`w'_par3_num & sex==1
			replace dad3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par3_num & sex==1
			replace dad3_age = indager if inrange(indager,10,90) & persno==w`w'_par3_num & sex==1
			replace dad3_age = 90 if indager==99 & persno==w`w'_par3_num & sex==1
			replace dad3_fage = 1 if indager==99 & persno==w`w'_par3_num & sex==1
			bysort hh`w'hhid: replace dad3_age=dad3_age[_n-1] if !mi(hh`w'hhid) & dad3_age[_n-1]!=.
			bysort hh`w'hhid: replace dad3_age=dad3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_n-1] if !mi(hh`w'hhid) & dad3_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad3_age if dad3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = dad3_fage if dad3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th father mentioned
		gen dad4_age=.
        gen dad4_fage=.
		forvalues w=0/1 {
			replace dad4_age = w`w'_child4_inty-1916 if dobyear==-7 & persno==w`w'_par4_num & sex==1
			replace dad4_fage = 2 if dobyear==-7 & persno==w`w'_par4_num & sex==1
			replace dad4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par4_num & sex==1
			replace dad4_age = indager if inrange(indager,10,90) & persno==w`w'_par4_num & sex==1
			replace dad4_age = 90 if indager==99 & persno==w`w'_par4_num & sex==1
			replace dad4_fage = 1 if indager==99 & persno==w`w'_par4_num & sex==1
			bysort hh`w'hhid: replace dad4_age=dad4_age[_n-1] if !mi(hh`w'hhid) & dad4_age[_n-1]!=.
			bysort hh`w'hhid: replace dad4_age=dad4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_n-1] if !mi(hh`w'hhid) & dad4_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad4_age if dad4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = dad4_fage if dad4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num dad1_age dad2_age dad3_age dad4_age dad1_fage dad2_fage dad3_fage dad4_fage
		forvalues w=0/1 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else {
		di as error "must specify either option 'mom' or option 'dad'"
		exit 198
	}
end

***H_ELSA_wave_2_hh_parent_age
***this is a program that feeds in the age of a parent for parents living in the household in wave 2
***
*** the program is called as follows
***		H_ELSA_wave_2_hh_parent_age varname, [mom dad]
***			where:
***				varname - name of already created H ELSA variable  
***				mom 	- all categorical original ELSA variables used in creation of varname
***				dad 	- all continuous original ELSA variables used in creation of varname

capture program drop H_ELSA_wave_2_hh_parent_age
program define H_ELSA_wave_2_hh_parent_age
syntax varname, flag(varname) [Mom Dad]
	if "`mom'"=="mom" & "`dad'"=="dad" {
		di as error "cannot specify both options 'mom' and 'dad'"
		exit 198
	}
	else if "`mom'"=="mom" {
		di "(replacing `varlist' with mother's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/12 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 DhR`p2'
			replace par1_num=`p' if `dhr2'==3 & mainhh1==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & mainhh1==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/2 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=intdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=intdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=intdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=intdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st mother mentioned
		gen mom1_age=.
		gen mom1_fage=.
		forvalues w=0/2 {
			replace mom1_age = w`w'_child1_inty-1916 if dobyear==-7 & i_persno==w`w'_par1_num  & sex==2
			replace mom1_fage = 2 if dobyear==-7 & i_persno==w`w'_par1_num  & sex==2
			replace mom1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & i_persno==w`w'_par1_num & sex==2
			replace mom1_age = indager if inrange(indager,10,90) & i_persno==w`w'_par1_num & sex==2
			replace mom1_age = 90 if indager==99 & i_persno==w`w'_par1_num & sex==2
			replace mom1_fage = 1 if indager==99 & i_persno==w`w'_par1_num & sex==2
			bysort hh`w'hhid: replace mom1_age=mom1_age[_n-1] if !mi(hh`w'hhid) & mom1_age[_n-1]!=.
			bysort hh`w'hhid: replace mom1_age=mom1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_n-1] if !mi(hh`w'hhid) & mom1_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom1_age if mom1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = mom1_fage if mom1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd mother mentioned
		gen mom2_age=.
        gen mom2_fage=.
		forvalues w=0/2 {
			replace mom2_age = w`w'_child2_inty-1916 if dobyear==-7 & i_persno==w`w'_par2_num  & sex==2
			replace mom2_fage = 2 if dobyear==-7 & i_persno==w`w'_par2_num  & sex==2
			replace mom2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & i_persno==w`w'_par2_num & sex==2
			replace mom2_age = indager if inrange(indager,10,90) & i_persno==w`w'_par2_num & sex==2
			replace mom2_age = 90 if indager==99 & i_persno==w`w'_par2_num & sex==2
			replace mom2_fage = 1 if indager==99 & i_persno==w`w'_par2_num & sex==2
			bysort hh`w'hhid: replace mom2_age=mom2_age[_n-1] if !mi(hh`w'hhid) & mom2_age[_n-1]!=.
			bysort hh`w'hhid: replace mom2_age=mom2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_n-1] if !mi(hh`w'hhid) & mom2_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom2_age if mom2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = mom2_fage if mom2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd mother mentioned
		gen mom3_age=.
        gen mom3_fage=.
		forvalues w=0/2 {
			replace mom3_age = w`w'_child3_inty-1916 if dobyear==-7 & i_persno==w`w'_par3_num & sex==2
			replace mom3_fage = 2 if dobyear==-7 & i_persno==w`w'_par3_num & sex==2
			replace mom3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & i_persno==w`w'_par3_num & sex==2
			replace mom3_age = indager if inrange(indager,10,90) & i_persno==w`w'_par3_num & sex==2
			replace mom3_age = 90 if indager==99 & i_persno==w`w'_par3_num & sex==2
			replace mom3_fage = 1 if indager==99 & i_persno==w`w'_par3_num & sex==2
			bysort hh`w'hhid: replace mom3_age=mom3_age[_n-1] if !mi(hh`w'hhid) & mom3_age[_n-1]!=.
			bysort hh`w'hhid: replace mom3_age=mom3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_n-1] if !mi(hh`w'hhid) & mom3_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom3_age if mom3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = mom3_fage if mom3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th mother mentioned
		gen mom4_age=.
        gen mom4_fage=.
		forvalues w=0/2 {
			replace mom4_age = w`w'_child4_inty-1916 if dobyear==-7 & i_persno==w`w'_par4_num & sex==2
			replace mom4_fage = 2 if dobyear==-7 & i_persno==w`w'_par4_num & sex==2
			replace mom4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & i_persno==w`w'_par4_num & sex==2
			replace mom4_age = indager if inrange(indager,10,90) & i_persno==w`w'_par4_num & sex==2
			replace mom4_age = 90 if indager==99 & i_persno==w`w'_par4_num & sex==2
			replace mom4_fage = 1 if indager==99 & i_persno==w`w'_par4_num & sex==2
			bysort hh`w'hhid: replace mom4_age=mom4_age[_n-1] if !mi(hh`w'hhid) & mom4_age[_n-1]!=.
			bysort hh`w'hhid: replace mom4_age=mom4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_n-1] if !mi(hh`w'hhid) & mom4_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom4_age if mom4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = mom4_fage if mom4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num mom1_age mom2_age mom3_age mom4_age mom1_fage mom2_fage mom3_fage mom4_fage
		forvalues w=0/2 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else if "`dad'"=="dad" {
		di "(replacing `varlist' with father's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/12 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 DhR`p2'
			replace par1_num=`p' if `dhr2'==3 & painhh1==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & painhh1==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/2 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=intdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=intdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=intdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=intdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st father mentioned
		gen dad1_age=.
        gen dad1_fage=.
		forvalues w=0/2 {
			replace dad1_age = w`w'_child1_inty-1916 if dobyear==-7 & i_persno==w`w'_par1_num  & sex==1
			replace dad1_fage = 2 if dobyear==-7 & i_persno==w`w'_par1_num  & sex==1
			replace dad1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & i_persno==w`w'_par1_num & sex==1
			replace dad1_age = indager if inrange(indager,10,90) & i_persno==w`w'_par1_num & sex==1
			replace dad1_age = 90 if indager==99 & i_persno==w`w'_par1_num & sex==1
			replace dad1_fage = 1 if indager==99 & i_persno==w`w'_par1_num & sex==1
			bysort hh`w'hhid: replace dad1_age=dad1_age[_n-1] if !mi(hh`w'hhid) & dad1_age[_n-1]!=.
			bysort hh`w'hhid: replace dad1_age=dad1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_n-1] if !mi(hh`w'hhid) & dad1_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad1_age if dad1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = dad1_fage if dad1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd father mentioned
		gen dad2_age=.
        gen dad2_fage=.
		forvalues w=0/2 {
			replace dad2_age = w`w'_child2_inty-1916 if dobyear==-7 & i_persno==w`w'_par2_num  & sex==1
			replace dad2_fage = 2 if dobyear==-7 & i_persno==w`w'_par2_num  & sex==1
			replace dad2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & i_persno==w`w'_par2_num & sex==1
			replace dad2_age = indager if inrange(indager,10,90) & i_persno==w`w'_par2_num & sex==1
			replace dad2_age = 90 if indager==99 & i_persno==w`w'_par2_num & sex==1
			replace dad2_fage = 1 if indager==99 & i_persno==w`w'_par2_num & sex==1
			bysort hh`w'hhid: replace dad2_age=dad2_age[_n-1] if !mi(hh`w'hhid) & dad2_age[_n-1]!=.
			bysort hh`w'hhid: replace dad2_age=dad2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_n-1] if !mi(hh`w'hhid) & dad2_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad2_age if dad2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = dad2_fage if dad2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd father mentioned
		gen dad3_age=.
        gen dad3_fage=.
		forvalues w=0/2 {
			replace dad3_age = w`w'_child3_inty-1916 if dobyear==-7 & i_persno==w`w'_par3_num & sex==1
			replace dad3_fage = 2 if dobyear==-7 & i_persno==w`w'_par3_num & sex==1
			replace dad3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & i_persno==w`w'_par3_num & sex==1
			replace dad3_age = indager if inrange(indager,10,90) & i_persno==w`w'_par3_num & sex==1
			replace dad3_age = 90 if indager==99 & i_persno==w`w'_par3_num & sex==1
			replace dad3_fage = 1 if indager==99 & i_persno==w`w'_par3_num & sex==1
			bysort hh`w'hhid: replace dad3_age=dad3_age[_n-1] if !mi(hh`w'hhid) & dad3_age[_n-1]!=.
			bysort hh`w'hhid: replace dad3_age=dad3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_n-1] if !mi(hh`w'hhid) & dad3_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad3_age if dad3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = dad3_fage if dad3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th father mentioned
		gen dad4_age=.
        gen dad4_fage=.
		forvalues w=0/2 {
			replace dad4_age = w`w'_child4_inty-1916 if dobyear==-7 & i_persno==w`w'_par4_num & sex==1
			replace dad4_fage = 2 if dobyear==-7 & i_persno==w`w'_par4_num & sex==1
			replace dad4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & i_persno==w`w'_par4_num & sex==1
			replace dad4_age = indager if inrange(indager,10,90) & i_persno==w`w'_par4_num & sex==1
			replace dad4_age = 90 if indager==99 & i_persno==w`w'_par4_num & sex==1
			replace dad4_fage = 1 if indager==99 & i_persno==w`w'_par4_num & sex==1
			bysort hh`w'hhid: replace dad4_age=dad4_age[_n-1] if !mi(hh`w'hhid) & dad4_age[_n-1]!=.
			bysort hh`w'hhid: replace dad4_age=dad4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_n-1] if !mi(hh`w'hhid) & dad4_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad4_age if dad4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = dad4_fage if dad4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num dad1_age dad2_age dad3_age dad4_age dad1_fage dad2_fage dad3_fage dad4_fage
		forvalues w=0/2 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else {
		di as error "must specify either option 'mom' or option 'dad'"
		exit 198
	}
end
	
		
***H_ELSA_wave_3_hh_parent_age
***this is a program that feeds in the age of a parent for parents living in the household in wave 3
***
*** the program is called as follows
***		H_ELSA_wave_3_hh_parent_age varname, [mom dad]
***			where:
***				varname - name of already created H ELSA variable  
***				mom 	- all categorical original ELSA variables used in creation of varname
***				dad 	- all continuous original ELSA variables used in creation of varname

capture program drop H_ELSA_wave_3_hh_parent_age
program define H_ELSA_wave_3_hh_parent_age
syntax varname, flag(varname) [Mom Dad]
	if "`mom'"=="mom" & "`dad'"=="dad" {
		di as error "cannot specify both options 'mom' and 'dad'"
		exit 198
	}
	else if "`mom'"=="mom" {
		di "(replacing `varlist' with mother's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/12 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 dhr`p2'
			replace par1_num=`p' if `dhr2'==3 & mainhh==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & mainhh==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/3 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=intdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=intdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=intdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=intdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st mother mentioned
		gen mom1_age=.
		gen mom1_fage=.
		forvalues w=0/3 {
			replace mom1_age = w`w'_child1_inty-1916 if dobyear==-7 & persno==w`w'_par1_num  & sex==2
			replace mom1_fage = 2 if dobyear==-7 & persno==w`w'_par1_num & sex==2
			replace mom1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par1_num & sex==2
			replace mom1_age = indager if inrange(indager,10,90) & persno==w`w'_par1_num & sex==2
			replace mom1_age = 90 if indager==99 & persno==w`w'_par1_num & sex==2
			replace mom1_fage = 1 if indager==99 & persno==w`w'_par1_num & sex==2
			bysort hh`w'hhid: replace mom1_age=mom1_age[_n-1] if !mi(hh`w'hhid) & mom1_age[_n-1]!=.
			bysort hh`w'hhid: replace mom1_age=mom1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_n-1] if !mi(hh`w'hhid) & mom1_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom1_age if mom1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = mom1_fage if mom1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd mother mentioned
		gen mom2_age=.
        gen mom2_fage=.
		forvalues w=0/3 {
			replace mom2_age = w`w'_child2_inty-1916 if dobyear==-7 & persno==w`w'_par2_num  & sex==2
			replace mom2_fage = 2 if dobyear==-7 & persno==w`w'_par2_num & sex==2
			replace mom2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par2_num & sex==2
			replace mom2_age = indager if inrange(indager,10,90) & persno==w`w'_par2_num & sex==2
			replace mom2_age = 90 if indager==99 & persno==w`w'_par2_num & sex==2
			replace mom2_fage = 1 if indager==99 & persno==w`w'_par2_num & sex==2
			bysort hh`w'hhid: replace mom2_age=mom2_age[_n-1] if !mi(hh`w'hhid) & mom2_age[_n-1]!=.
			bysort hh`w'hhid: replace mom2_age=mom2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_n-1] if !mi(hh`w'hhid) & mom2_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom2_age if mom2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = mom2_fage if mom2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd mother mentioned
		gen mom3_age=.
        gen mom3_fage=.
		forvalues w=0/3 {
			replace mom3_age = w`w'_child3_inty-1916 if dobyear==-7 & persno==w`w'_par3_num & sex==2
			replace mom3_fage = 2 if dobyear==-7 & persno==w`w'_par3_num & sex==2
			replace mom3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par3_num & sex==2
			replace mom3_age = indager if inrange(indager,10,90) & persno==w`w'_par3_num & sex==2
			replace mom3_age = 90 if indager==99 & persno==w`w'_par3_num & sex==2
			replace mom3_fage = 1 if indager==99 & persno==w`w'_par3_num & sex==2
			bysort hh`w'hhid: replace mom3_age=mom3_age[_n-1] if !mi(hh`w'hhid) & mom3_age[_n-1]!=.
			bysort hh`w'hhid: replace mom3_age=mom3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_n-1] if !mi(hh`w'hhid) & mom3_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom3_age if mom3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = mom3_fage if mom3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th mother mentioned
		gen mom4_age=.
        gen mom4_fage=.
		forvalues w=0/3 {
			replace mom4_age = w`w'_child4_inty-1916 if dobyear==-7 & persno==w`w'_par4_num & sex==2
			replace mom4_fage = 2 if dobyear==-7 & persno==w`w'_par4_num & sex==2
			replace mom4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par4_num & sex==2
			replace mom4_age = indager if inrange(indager,10,90) & persno==w`w'_par4_num & sex==2
			replace mom4_age = 90 if indager==99 & persno==w`w'_par4_num & sex==2
			replace mom4_fage = 1 if indager==99 & persno==w`w'_par4_num & sex==2
			bysort hh`w'hhid: replace mom4_age=mom4_age[_n-1] if !mi(hh`w'hhid) & mom4_age[_n-1]!=.
			bysort hh`w'hhid: replace mom4_age=mom4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_n-1] if !mi(hh`w'hhid) & mom4_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom4_age if mom4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = mom4_fage if mom4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num mom1_age mom2_age mom3_age mom4_age mom1_fage mom2_fage mom3_fage mom4_fage
		forvalues w=0/3 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else if "`dad'"=="dad" {
		di "(replacing `varlist' with father's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/12 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 dhr`p2'
			replace par1_num=`p' if `dhr2'==3 & painhh==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & painhh==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/3 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=intdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=intdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=intdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=intdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st father mentioned
		gen dad1_age=.
        gen dad1_fage=.
		forvalues w=0/3 {
			replace dad1_age = w`w'_child1_inty-1916 if dobyear==-7 & persno==w`w'_par1_num  & sex==1
			replace dad1_fage = 2 if dobyear==-7 & persno==w`w'_par1_num & sex==1
			replace dad1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par1_num & sex==1
			replace dad1_age = indager if inrange(indager,10,90) & persno==w`w'_par1_num & sex==1
			replace dad1_age = 90 if indager==99 & persno==w`w'_par1_num & sex==1
			replace dad1_fage = 1 if indager==99 & persno==w`w'_par1_num & sex==1
			bysort hh`w'hhid: replace dad1_age=dad1_age[_n-1] if !mi(hh`w'hhid) & dad1_age[_n-1]!=.
			bysort hh`w'hhid: replace dad1_age=dad1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_n-1] if !mi(hh`w'hhid) & dad1_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad1_age if dad1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = dad1_fage if dad1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd father mentioned
		gen dad2_age=.
        gen dad2_fage=.
		forvalues w=0/3 {
			replace dad2_age = w`w'_child2_inty-1916 if dobyear==-7 & persno==w`w'_par2_num  & sex==1
			replace dad2_fage = 2 if dobyear==-7 & persno==w`w'_par2_num & sex==1
			replace dad2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par2_num & sex==1
			replace dad2_age = indager if inrange(indager,10,90) & persno==w`w'_par2_num & sex==1
			replace dad2_age = 90 if indager==99 & persno==w`w'_par2_num & sex==1
			replace dad2_fage = 1 if indager==99 & persno==w`w'_par2_num & sex==1
			bysort hh`w'hhid: replace dad2_age=dad2_age[_n-1] if !mi(hh`w'hhid) & dad2_age[_n-1]!=.
			bysort hh`w'hhid: replace dad2_age=dad2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_n-1] if !mi(hh`w'hhid) & dad2_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad2_age if dad2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = dad2_fage if dad2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd father mentioned
		gen dad3_age=.
        gen dad3_fage=.
		forvalues w=0/3 {
			replace dad3_age = w`w'_child3_inty-1916 if dobyear==-7 & persno==w`w'_par3_num & sex==1
			replace dad3_fage = 2 if dobyear==-7 & persno==w`w'_par3_num & sex==1
			replace dad3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par3_num & sex==1
			replace dad3_age = indager if inrange(indager,10,90) & persno==w`w'_par3_num & sex==1
			replace dad3_age = 90 if indager==99 & persno==w`w'_par3_num & sex==1
			replace dad3_fage = 1 if indager==99 & persno==w`w'_par3_num & sex==1
			bysort hh`w'hhid: replace dad3_age=dad3_age[_n-1] if !mi(hh`w'hhid) & dad3_age[_n-1]!=.
			bysort hh`w'hhid: replace dad3_age=dad3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_n-1] if !mi(hh`w'hhid) & dad3_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad3_age if dad3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = dad3_fage if dad3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th father mentioned
		gen dad4_age=.
        gen dad4_fage=.
		forvalues w=0/3 {
			replace dad4_age = w`w'_child4_inty-1916 if dobyear==-7 & persno==w`w'_par4_num & sex==1
			replace dad4_fage = 2 if dobyear==-7 & persno==w`w'_par4_num & sex==1
			replace dad4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par4_num & sex==1
			replace dad4_age = indager if inrange(indager,10,90) & persno==w`w'_par4_num & sex==1
			replace dad4_age = 90 if indager==99 & persno==w`w'_par4_num & sex==1
			replace dad4_fage = 1 if indager==99 & persno==w`w'_par4_num & sex==1
			bysort hh`w'hhid: replace dad4_age=dad4_age[_n-1] if !mi(hh`w'hhid) & dad4_age[_n-1]!=.
			bysort hh`w'hhid: replace dad4_age=dad4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_n-1] if !mi(hh`w'hhid) & dad4_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad4_age if dad4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = dad4_fage if dad4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num dad1_age dad2_age dad3_age dad4_age dad1_fage dad2_fage dad3_fage dad4_fage
		forvalues w=0/3 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else {
		di as error "must specify either option 'mom' or option 'dad'"
		exit 198
	}
end

***H_ELSA_wave_4_hh_parent_age
***this is a program that feeds in the age of a parent for parents living in the household in wave 4
***
*** the program is called as follows
***		H_ELSA_wave_4_hh_parent_age varname, [mom dad]
***			where:
***				varname - name of already created H ELSA variable  
***				mom 	- all categorical original ELSA variables used in creation of varname
***				dad 	- all continuous original ELSA variables used in creation of varname

capture program drop H_ELSA_wave_4_hh_parent_age
program define H_ELSA_wave_4_hh_parent_age
syntax varname, flag(varname) [Mom Dad]
	if "`mom'"=="mom" & "`dad'"=="dad" {
		di as error "cannot specify both options 'mom' and 'dad'"
		exit 198
	}
	else if "`mom'"=="mom" {
		di "(replacing `varlist' with mother's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/16 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 dhr`p2'
			replace par1_num=`p' if `dhr2'==3 & mainhh==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & mainhh==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/4 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=intdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=intdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=intdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=intdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st mother mentioned
		gen mom1_age=.
		gen mom1_fage=.
		forvalues w=0/4 {
			replace mom1_age = w`w'_child1_inty-1916 if dobyear==-7 & persno==w`w'_par1_num & sex==2
			replace mom1_fage = 2 if dobyear==-7 & persno==w`w'_par1_num & sex==2
			replace mom1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par1_num & sex==2
			replace mom1_age = indager if inrange(indager,10,90) & persno==w`w'_par1_num & sex==2
			replace mom1_age = 90 if indager==99 & persno==w`w'_par1_num & sex==2
			replace mom1_fage = 1 if indager==99 & persno==w`w'_par1_num & sex==2
			bysort hh`w'hhid: replace mom1_age=mom1_age[_n-1] if !mi(hh`w'hhid) & mom1_age[_n-1]!=.
			bysort hh`w'hhid: replace mom1_age=mom1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_n-1] if !mi(hh`w'hhid) & mom1_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom1_age if mom1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = mom1_fage if mom1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd mother mentioned
		gen mom2_age=.
        gen mom2_fage=.
		forvalues w=0/4 {
			replace mom2_age = w`w'_child2_inty-1916 if dobyear==-7 & persno==w`w'_par2_num  & sex==2
			replace mom2_fage = 2 if dobyear==-7 & persno==w`w'_par2_num  & sex==2
			replace mom2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par2_num & sex==2
			replace mom2_age = indager if inrange(indager,10,90) & persno==w`w'_par2_num & sex==2
			replace mom2_age = 90 if indager==99 & persno==w`w'_par2_num & sex==2
			replace mom2_fage = 1 if indager==99 & persno==w`w'_par2_num & sex==2
			bysort hh`w'hhid: replace mom2_age=mom2_age[_n-1] if !mi(hh`w'hhid) & mom2_age[_n-1]!=.
			bysort hh`w'hhid: replace mom2_age=mom2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_n-1] if !mi(hh`w'hhid) & mom2_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom2_age if mom2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = mom2_fage if mom2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd mother mentioned
		gen mom3_age=.
        gen mom3_fage=.
		forvalues w=0/4 {
			replace mom3_age = w`w'_child3_inty-1916 if dobyear==-7 & persno==w`w'_par3_num & sex==2
			replace mom3_fage = 2 if dobyear==-7 & persno==w`w'_par3_num & sex==2
			replace mom3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par3_num & sex==2
			replace mom3_age = indager if inrange(indager,10,90) & persno==w`w'_par3_num & sex==2
			replace mom3_age = 90 if indager==99 & persno==w`w'_par3_num & sex==2
			replace mom3_fage = 1 if indager==99 & persno==w`w'_par3_num & sex==2
			bysort hh`w'hhid: replace mom3_age=mom3_age[_n-1] if !mi(hh`w'hhid) & mom3_age[_n-1]!=.
			bysort hh`w'hhid: replace mom3_age=mom3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_n-1] if !mi(hh`w'hhid) & mom3_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom3_age if mom3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = mom3_fage if mom3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th mother mentioned
		gen mom4_age=.
        gen mom4_fage=.
		forvalues w=0/4 {
			replace mom4_age = w`w'_child4_inty-1916 if dobyear==-7 & persno==w`w'_par4_num & sex==2
			replace mom4_fage = 2 if dobyear==-7 & persno==w`w'_par4_num & sex==2
			replace mom4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par4_num & sex==2
			replace mom4_age = indager if inrange(indager,10,90) & persno==w`w'_par4_num & sex==2
			replace mom4_age = 90 if indager==99 & persno==w`w'_par4_num & sex==2
			replace mom4_fage = 1 if indager==99 & persno==w`w'_par4_num & sex==2
			bysort hh`w'hhid: replace mom4_age=mom4_age[_n-1] if !mi(hh`w'hhid) & mom4_age[_n-1]!=.
			bysort hh`w'hhid: replace mom4_age=mom4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_n-1] if !mi(hh`w'hhid) & mom4_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom4_age if mom4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = mom4_fage if mom4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num mom1_age mom2_age mom3_age mom4_age mom1_fage mom2_fage mom3_fage mom4_fage
		forvalues w=0/4 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else if "`dad'"=="dad" {
		di "(replacing `varlist' with father's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/16 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 dhr`p2'
			replace par1_num=`p' if `dhr2'==3 & painhh==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & painhh==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/4 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=intdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=intdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=intdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=intdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st father mentioned
		gen dad1_age=.
        gen dad1_fage=.
		forvalues w=0/4 {
			replace dad1_age = w`w'_child1_inty-1916 if dobyear==-7 & persno==w`w'_par1_num  & sex==1
			replace dad1_fage = 2 if dobyear==-7 & persno==w`w'_par1_num  & sex==1
			replace dad1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par1_num & sex==1
			replace dad1_age = indager if inrange(indager,10,90) & persno==w`w'_par1_num & sex==1
			replace dad1_age = 90 if indager==99 & persno==w`w'_par1_num & sex==1
			replace dad1_fage = 1 if indager==99 & persno==w`w'_par1_num & sex==1
			bysort hh`w'hhid: replace dad1_age=dad1_age[_n-1] if !mi(hh`w'hhid) & dad1_age[_n-1]!=.
			bysort hh`w'hhid: replace dad1_age=dad1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_n-1] if !mi(hh`w'hhid) & dad1_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad1_age if dad1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = dad1_fage if dad1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd father mentioned
		gen dad2_age=.
        gen dad2_fage=.
		forvalues w=0/4 {
			replace dad2_age = w`w'_child2_inty-1916 if dobyear==-7 & persno==w`w'_par2_num  & sex==1
			replace dad2_fage = 2 if dobyear==-7 & persno==w`w'_par2_num  & sex==1
			replace dad2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par2_num & sex==1
			replace dad2_age = indager if inrange(indager,10,90) & persno==w`w'_par2_num & sex==1
			replace dad2_age = 90 if indager==99 & persno==w`w'_par2_num & sex==1
			replace dad2_fage = 1 if indager==99 & persno==w`w'_par2_num & sex==1
			bysort hh`w'hhid: replace dad2_age=dad2_age[_n-1] if !mi(hh`w'hhid) & dad2_age[_n-1]!=.
			bysort hh`w'hhid: replace dad2_age=dad2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_n-1] if !mi(hh`w'hhid) & dad2_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad2_age if dad2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = dad2_fage if dad2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd father mentioned
		gen dad3_age=.
        gen dad3_fage=.
		forvalues w=0/4 {
			replace dad3_age = w`w'_child3_inty-1916 if dobyear==-7 & persno==w`w'_par3_num & sex==1
			replace dad3_fage = 2 if dobyear==-7 & persno==w`w'_par3_num & sex==1
			replace dad3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par3_num & sex==1
			replace dad3_age = indager if inrange(indager,10,90) & persno==w`w'_par3_num & sex==1
			replace dad3_age = 90 if indager==99 & persno==w`w'_par3_num & sex==1
			replace dad3_fage = 1 if indager==99 & persno==w`w'_par3_num & sex==1
			bysort hh`w'hhid: replace dad3_age=dad3_age[_n-1] if !mi(hh`w'hhid) & dad3_age[_n-1]!=.
			bysort hh`w'hhid: replace dad3_age=dad3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_n-1] if !mi(hh`w'hhid) & dad3_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad3_age if dad3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = dad3_fage if dad3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th father mentioned
		gen dad4_age=.
        gen dad4_fage=.
		forvalues w=0/4 {
			replace dad4_age = w`w'_child4_inty-1916 if dobyear==-7 & persno==w`w'_par4_num & sex==1
			replace dad4_fage = 2 if dobyear==-7 & persno==w`w'_par4_num & sex==1
			replace dad4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par4_num & sex==1
			replace dad4_age = indager if inrange(indager,10,90) & persno==w`w'_par4_num & sex==1
			replace dad4_age = 90 if indager==99 & persno==w`w'_par4_num & sex==1
			replace dad4_fage = 1 if indager==99 & persno==w`w'_par4_num & sex==1
			bysort hh`w'hhid: replace dad4_age=dad4_age[_n-1] if !mi(hh`w'hhid) & dad4_age[_n-1]!=.
			bysort hh`w'hhid: replace dad4_age=dad4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_n-1] if !mi(hh`w'hhid) & dad4_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad4_age if dad4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = dad4_fage if dad4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num dad1_age dad2_age dad3_age dad4_age dad1_fage dad2_fage dad3_fage dad4_fage
		forvalues w=0/4 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else {
		di as error "must specify either option 'mom' or option 'dad'"
		exit 198
	}
end
	

***H_ELSA_wave_5_hh_parent_age
***this is a program that feeds in the age of a parent for parents living in the household in wave 4
***
*** the program is called as follows
***		H_ELSA_wave_5_hh_parent_age varname, [mom dad]
***			where:
***				varname - name of already created H ELSA variable  
***				mom 	- all categorical original ELSA variables used in creation of varname
***				dad 	- all continuous original ELSA variables used in creation of varname

capture program drop H_ELSA_wave_5_hh_parent_age
program define H_ELSA_wave_5_hh_parent_age
syntax varname, flag(varname) [Mom Dad]
	if "`mom'"=="mom" & "`dad'"=="dad" {
		di as error "cannot specify both options 'mom' and 'dad'"
		exit 198
	}
	else if "`mom'"=="mom" {
		di "(replacing `varlist' with mother's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/16 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 dhr`p2'
			replace par1_num=`p' if `dhr2'==3 & mainhh==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & mainhh==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/5 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=iintdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=iintdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=iintdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=iintdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st mother mentioned
		gen mom1_age=.
		gen mom1_fage=.
		forvalues w=0/5 {
			replace mom1_age = w`w'_child1_inty-1916 if dobyear==-7 & persno==w`w'_par1_num & sex==2
			replace mom1_fage = 2 if dobyear==-7 & persno==w`w'_par1_num & sex==2
			replace mom1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par1_num & sex==2
			replace mom1_age = indager if inrange(indager,10,90) & persno==w`w'_par1_num & sex==2
			replace mom1_age = 90 if indager==99 & persno==w`w'_par1_num & sex==2
			replace mom1_fage = 1 if indager==99 & persno==w`w'_par1_num & sex==2
			bysort hh`w'hhid: replace mom1_age=mom1_age[_n-1] if !mi(hh`w'hhid) & mom1_age[_n-1]!=.
			bysort hh`w'hhid: replace mom1_age=mom1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_n-1] if !mi(hh`w'hhid) & mom1_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom1_fage=mom1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom1_age if mom1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = mom1_fage if mom1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd mother mentioned
		gen mom2_age=.
        gen mom2_fage=.
		forvalues w=0/5 {
			replace mom2_age = w`w'_child2_inty-1916 if dobyear==-7 & persno==w`w'_par2_num  & sex==2
			replace mom2_fage = 2 if dobyear==-7 & persno==w`w'_par2_num  & sex==2
			replace mom2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par2_num & sex==2
			replace mom2_age = indager if inrange(indager,10,90) & persno==w`w'_par2_num & sex==2
			replace mom2_age = 90 if indager==99 & persno==w`w'_par2_num & sex==2
			replace mom2_fage = 1 if indager==99 & persno==w`w'_par2_num & sex==2
			bysort hh`w'hhid: replace mom2_age=mom2_age[_n-1] if !mi(hh`w'hhid) & mom2_age[_n-1]!=.
			bysort hh`w'hhid: replace mom2_age=mom2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_n-1] if !mi(hh`w'hhid) & mom2_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom2_fage=mom2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom2_age if mom2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = mom2_fage if mom2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd mother mentioned
		gen mom3_age=.
        gen mom3_fage=.
		forvalues w=0/5 {
			replace mom3_age = w`w'_child3_inty-1916 if dobyear==-7 & persno==w`w'_par3_num & sex==2
			replace mom3_fage = 2 if dobyear==-7 & persno==w`w'_par3_num & sex==2
			replace mom3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par3_num & sex==2
			replace mom3_age = indager if inrange(indager,10,90) & persno==w`w'_par3_num & sex==2
			replace mom3_age = 90 if indager==99 & persno==w`w'_par3_num & sex==2
			replace mom3_fage = 1 if indager==99 & persno==w`w'_par3_num & sex==2
			bysort hh`w'hhid: replace mom3_age=mom3_age[_n-1] if !mi(hh`w'hhid) & mom3_age[_n-1]!=.
			bysort hh`w'hhid: replace mom3_age=mom3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_n-1] if !mi(hh`w'hhid) & mom3_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom3_fage=mom3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom3_age if mom3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = mom3_fage if mom3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th mother mentioned
		gen mom4_age=.
        gen mom4_fage=.
		forvalues w=0/5 {
			replace mom4_age = w`w'_child4_inty-1916 if dobyear==-7 & persno==w`w'_par4_num & sex==2
			replace mom4_fage = 2 if dobyear==-7 & persno==w`w'_par4_num & sex==2
			replace mom4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par4_num & sex==2
			replace mom4_age = indager if inrange(indager,10,90) & persno==w`w'_par4_num & sex==2
			replace mom4_age = 90 if indager==99 & persno==w`w'_par4_num & sex==2
			replace mom4_fage = 1 if indager==99 & persno==w`w'_par4_num & sex==2
			bysort hh`w'hhid: replace mom4_age=mom4_age[_n-1] if !mi(hh`w'hhid) & mom4_age[_n-1]!=.
			bysort hh`w'hhid: replace mom4_age=mom4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_n-1] if !mi(hh`w'hhid) & mom4_fage[_n-1]!=.
			bysort hh`w'hhid: replace mom4_fage=mom4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = mom4_age if mom4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = mom4_fage if mom4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num mom1_age mom2_age mom3_age mom4_age mom1_fage mom2_fage mom3_fage mom4_fage
		forvalues w=0/5 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else if "`dad'"=="dad" {
		di "(replacing `varlist' with father's age from hh grid)"
		gen par1_num=.
		gen par2_num=.
		forvalues p=1/16 {
			if `p'==1 {
				local p2
			}
			else {
				local p2 `p'
			}
			local dhr2 dhr`p2'
			replace par1_num=`p' if `dhr2'==3 & painhh==1 & mi(par1_num)
			replace par2_num=`p' if `dhr2'==3 & painhh==1 & par1_num!=`p'
		}
		*1st parent mentioned
		forvalues w=0/5 {
			bysort hh`w'hhid: egen w`w'_par1_num = min(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child1_inty=iintdaty if w`w'_par1_num==par1_num
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child1_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child1_inty=w`w'_child1_inty[_N] if !mi(hh`w'hhid)
		
			*2nd parent mentioned
			bysort hh`w'hhid: egen w`w'_par2_num = min(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child2_inty=iintdaty if w`w'_par2_num==par2_num
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child2_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child2_inty=w`w'_child2_inty[_N] if !mi(hh`w'hhid)
			
			*3rd parent mentioned
			bysort hh`w'hhid: egen w`w'_par3_num = max(par1_num) if !mi(hh`w'hhid)
			gen w`w'_child3_inty=iintdaty if w`w'_par3_num==par1_num
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child3_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child3_inty=w`w'_child3_inty[_N] if !mi(hh`w'hhid)
			
			*4th parent mentioned
			bysort hh`w'hhid: egen w`w'_par4_num = max(par2_num) if !mi(hh`w'hhid)
			gen w`w'_child4_inty=iintdaty if w`w'_par4_num==par2_num
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_n-1] if !mi(hh`w'hhid) & w`w'_child4_inty[_n-1]!=.
			bysort hh`w'hhid: replace w`w'_child4_inty=w`w'_child4_inty[_N] if !mi(hh`w'hhid)
		}
		
		*1st father mentioned
		gen dad1_age=.
        gen dad1_fage=.
		forvalues w=0/5 {
			replace dad1_age = w`w'_child1_inty-1916 if dobyear==-7 & persno==w`w'_par1_num  & sex==1
			replace dad1_fage = 2 if dobyear==-7 & persno==w`w'_par1_num  & sex==1
			replace dad1_age = w`w'_child1_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par1_num & sex==1
			replace dad1_age = indager if inrange(indager,10,90) & persno==w`w'_par1_num & sex==1
			replace dad1_age = 90 if indager==99 & persno==w`w'_par1_num & sex==1
			replace dad1_fage = 1 if indager==99 & persno==w`w'_par1_num & sex==1
			bysort hh`w'hhid: replace dad1_age=dad1_age[_n-1] if !mi(hh`w'hhid) & dad1_age[_n-1]!=.
			bysort hh`w'hhid: replace dad1_age=dad1_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_n-1] if !mi(hh`w'hhid) & dad1_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad1_fage=dad1_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad1_age if dad1_age!=. & w`w'_par1_num==par1_num
			replace `flag' = dad1_fage if dad1_fage!=. & w`w'_par1_num==par1_num
		}
		
		*2nd father mentioned
		gen dad2_age=.
        gen dad2_fage=.
		forvalues w=0/5 {
			replace dad2_age = w`w'_child2_inty-1916 if dobyear==-7 & persno==w`w'_par2_num  & sex==1
			replace dad2_fage = 2 if dobyear==-7 & persno==w`w'_par2_num  & sex==1
			replace dad2_age = w`w'_child2_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par2_num & sex==1
			replace dad2_age = indager if inrange(indager,10,90) & persno==w`w'_par2_num & sex==1
			replace dad2_age = 90 if indager==99 & persno==w`w'_par2_num & sex==1
			replace dad2_fage = 1 if indager==99 & persno==w`w'_par2_num & sex==1
			bysort hh`w'hhid: replace dad2_age=dad2_age[_n-1] if !mi(hh`w'hhid) & dad2_age[_n-1]!=.
			bysort hh`w'hhid: replace dad2_age=dad2_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_n-1] if !mi(hh`w'hhid) & dad2_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad2_fage=dad2_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad2_age if dad2_age!=. & w`w'_par2_num==par2_num
			replace `flag' = dad2_fage if dad2_fage!=. & w`w'_par2_num==par2_num
		}
		
		*3rd father mentioned
		gen dad3_age=.
        gen dad3_fage=.
		forvalues w=0/5 {
			replace dad3_age = w`w'_child3_inty-1916 if dobyear==-7 & persno==w`w'_par3_num & sex==1
			replace dad3_fage = 2 if dobyear==-7 & persno==w`w'_par3_num & sex==1
			replace dad3_age = w`w'_child3_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par3_num & sex==1
			replace dad3_age = indager if inrange(indager,10,90) & persno==w`w'_par3_num & sex==1
			replace dad3_age = 90 if indager==99 & persno==w`w'_par3_num & sex==1
			replace dad3_fage = 1 if indager==99 & persno==w`w'_par3_num & sex==1
			bysort hh`w'hhid: replace dad3_age=dad3_age[_n-1] if !mi(hh`w'hhid) & dad3_age[_n-1]!=.
			bysort hh`w'hhid: replace dad3_age=dad3_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_n-1] if !mi(hh`w'hhid) & dad3_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad3_fage=dad3_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad3_age if dad3_age!=. & w`w'_par3_num==par1_num
			replace `flag' = dad3_fage if dad3_fage!=. & w`w'_par3_num==par1_num
		}
		
		*4th father mentioned
		gen dad4_age=.
        gen dad4_fage=.
		forvalues w=0/5 {
			replace dad4_age = w`w'_child4_inty-1916 if dobyear==-7 & persno==w`w'_par4_num & sex==1
			replace dad4_fage = 2 if dobyear==-7 & persno==w`w'_par4_num & sex==1
			replace dad4_age = w`w'_child4_inty-dobyear if inrange(dobyear,1900,2010) & persno==w`w'_par4_num & sex==1
			replace dad4_age = indager if inrange(indager,10,90) & persno==w`w'_par4_num & sex==1
			replace dad4_age = 90 if indager==99 & persno==w`w'_par4_num & sex==1
			replace dad4_fage = 1 if indager==99 & persno==w`w'_par4_num & sex==1
			bysort hh`w'hhid: replace dad4_age=dad4_age[_n-1] if !mi(hh`w'hhid) & dad4_age[_n-1]!=.
			bysort hh`w'hhid: replace dad4_age=dad4_age[_N] if !mi(hh`w'hhid)
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_n-1] if !mi(hh`w'hhid) & dad4_fage[_n-1]!=.
			bysort hh`w'hhid: replace dad4_fage=dad4_fage[_N] if !mi(hh`w'hhid)
			
			replace `varlist' = dad4_age if dad4_age!=. & w`w'_par4_num==par2_num
			replace `flag' = dad4_fage if dad4_fage!=. & w`w'_par4_num==par2_num
		}
		
		drop par1_num par2_num dad1_age dad2_age dad3_age dad4_age dad1_fage dad2_fage dad3_fage dad4_fage
		forvalues w=0/5 {
			drop w`w'_par1_num w`w'_par2_num w`w'_par3_num w`w'_par4_num ///
			w`w'_child1_inty w`w'_child2_inty w`w'_child3_inty w`w'_child4_inty
		}
	}
	else {
		di as error "must specify either option 'mom' or option 'dad'"
		exit 198
	}
end
	
*create summation variables with count of missings variable
capture program drop H_ELSA_summary_v
program define H_ELSA_summary_v, rclass
syntax anything, wave(integer) [add(varlist) add_rev(varlist) proxy]
    local count = wordcount("`add' `add_rev'")
    local count_m = `count' - 1
    local underscore = strpos("`anything'","_")
    if `underscore' > 0 {
        local string = substr("`anything'",1,`underscore' - 1)
        local append = substr("`anything'",`underscore',.)
    }
    else {
         local string `anything'
    }
    egen r`wave'`string'm`append' = rowmiss(`add' `add_rev') if inw`wave' == 1
    
    local varlist_m
    foreach v of varlist `add' `add_rev' {
    	recode `v' (miss = 0), generate(`v'_m)
    	local varlist_m `varlist_m' `v'_m
    }
    return local varlist_m = "`varlist_m'"
    
    gen r`wave'`anything'=.
    missing_H `add' `add_rev', result(r`wave'`anything')
    if "`proxy'"=="proxy" {
        replace r`wave'`anything' =.p if r`wave'proxy == 1
    }
    replace r`wave'`anything' = 0 if inrange(r`wave'`string'm`append',0,`count_m')
    if "`add'" != "" {
        foreach v of varlist `add' {
            replace r`wave'`anything' = r`wave'`anything' + `v'_m if !mi(r`wave'`anything') & !mi(`v'_m)
        }
    }
    if "`add_rev'" != "" {
        foreach v of varlist `add_rev' {
            replace r`wave'`anything' = r`wave'`anything' + (1 - `v'_m) if !mi(r`wave'`anything') & !mi(`v'_m)
        }
    }
end

****load full set of ELSA respodents***
use idauniq using "$index"
merge 1:1 idauniq using "$wave_6_core", keepusing(idauniq) nogen // *remove once index file includes Wave 6 respondents
merge 1:1 idauniq using "$wave_7_core", keepusing(idauniq) nogen // *remove once index file includes Wave 7 respondents
merge 1:1 idauniq using "$wave_8_core", keepusing(idauniq) nogen // *remove once index file includes Wave 8 respondents

********************************************************************************************************************
********************************************************************************************************************

***specify order of creation programs***
***list programs and dependencies

***wave status: response indicator***
label define inw ///
   0 "0.nonresp" ///
   1 "1.resp,alive" 

***self-completion status: response indicator***   
label define inwsc ///
   0 "0.nonresp" ///
   1 "1.self-completion resp"  

***wave status: interview status***   
label define wstat ///
   0 "0.inap." ///
   1 "1.resp, alive"  ///
   3 "3.nr, died before wv1" ///
   4 "4.nr, alive" ///
   5 "5.nr, died this wv" ///
   6 "6.nr, died prev wv" ///
   7 "7.nr, dropped from samp" ///
   9 "9.nr, dk if alive or died"

***sample cohort***   
label define cohort_e ///
   1 "1.original HSE sample (HSE 1998-2001)"  ///
   2 "2.partners of original sample" ///
   3 "3.young partner of original sample" ///
   4 "4.w3 refreshment sample (HSE 2001-2004)" ///
   5 "5.partners of w3 refreshment sample" ///
   6 "6.young partner of w3 refreshment sample" ///
   7 "7.older partner of w3 refreshment sample" ///
   8 "8.w4 refreshment sample (HSE 2006)" ///
   9 "9.partners of w4 refreshment sample" ///
   10 "10.young partner of w4 refreshment sample" ///
   11 "11.older partner of w4 refreshment sample" ///
   12 "12.w6 refreshment sample (HSE 2009-2011)" ///
   13 "13.partners of w6 refreshment sample" ///
   14 "14.young partner of w6 refreshment sample" ///
   15 "15.older partner of w6 refreshment sample" ///
   16 "16.w7 refreshment sample (HSE 2011-2012)" ///
   17 "17.partners of w7 refreshment sample" ///
   18 "18.young partner of w7 refreshment sample" ///
   19 "19.older partner of w7 refreshment sample" 
   

***whether eligible for the ELSA sample***   
label define elsaamp ///
   0 "0.not in sample" ///
   1 "1.in sample, ELSA Wave 1" 

***whether couple household***   
label define cpl ///
   0 "0.not coupled" ///
   1 "1.coupled" 

***financial, family respondent***   
label define finr ///
   0 "0.no" ///
   1 "1.yes" 

***household, family respondent***
label define hhr ///
   0 "0.no" ///
   1 "1.yes" 
   
***housing, family respondent***
label define hor ///
   0 "0.no" ///
   1 "1.yes" ///
   .d ".d:DK"
   
***whether proxy interview***
label define proxy ///
   0 "0.not proxy" ///
   1 "1.proxy" 
   
***interview dates***
label define dateflag ///
   0 "0.m/y ok" ///
   1 "1.month miss"  ///
   2 "2.mon/yr miss"
   
***birth year flag***
label define fbyear ///
    0 "0. =year" ///
    1 "1. =1912 if 90 or older at Wave 1" ///
    2 "2. =1914 if 90 or older at Wave 2" ///
    3 "3. =1916 if 90 or older at Wave 3" ///
    4 "4. =1918 if 90 or older at Wave 4" ///
    5 "5. =1920 if 90 or older at Wave 5" ///
    6 "6. =1922 if 90 or older at Wave 6" ///
    7 "7. =1924 if 90 or older at Wave 7" ///
    8 "8. =1926 if 90 or older at Wave 8" ///
    9 "9. =1916 if 99 or older as of 2013"
    
***age flag***
label define fagey ///
    0 "0. =age" ///
    1 "1. =90, age>=90"
    
***parent age flag***
label define pfagey ///
    0 "0. =age" ///
    1 "1. =90, age>=90" ///
    2 "2. =iwindy-1916, birth<=02/29/1916" ///
    .m ".m:Oth missing" ///
    .n ".n:not asked"

***gender***
label define gender ///
   1 "1.male"  ///
   2 "2.female" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
   
label define genderflag ///
	 0 "0.no gender problem" ///
   1 "1.gender prob, used first"
   
***race, ethnicity: race***
label define race ///
   1 "1.white"  ///
   4 "4.non-white" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
   
label define raceflag ///
	 0 "0.no race problem" ///
   1 "1.race prob, used first"
   
***education: years of education***
label define educyrs ///
   0 "0.none"  ///
   16 "16.16+ yrs" ///
   .o ".o:other" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
   
***education: categorical summary***
label define educcats ///
	 0 "0.no qualifications mentioned"  ///
   1 "1.lt high-school"  ///
   3 "3.high-school graduate" ///
   4 "4.some college" ///
   5 "5.college and above" ///
   .h ".h:missing hse value" ///
   .o ".o:other" ///
   .r ".r:Refuse" ///
   .m ".m:Oth missing" ///
   .d ".d:DK"
   
 ***education: harmonized categories***
label define educharm ///
	1 "1.less than secondary" ///
	2 "2.upper secondary and vocational training" ///
	3 "3.tertiary" ///
	.o ".o:other" ///
	.r ".r:refuse" ///
	.m ".m:oth missing" ///
	.d ".d:DK" ///
	.h ".h:missing HSE value"
   
***current marital status: with implied partnerships***
label define marwpart ///
   1 "1.married"  ///
   2 "2.Married, spouse absent" ///
   3 "3.partnered" ///
   4 "4.separated" ///
   5 "5.divorced" ///
   7 "7.widowed" ///
   8 "8.never married" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
   
***current marital status: current implied partnership status***
label define part ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
   
***current marital status: without implied partnerships***
label define marwopart ///
   1 "1.married or civil partner"  ///
   2 "2.Married, spouse absent" ///
   3 "3.civil partner" ///
   4 "4.separated" ///
   5 "5.divorced" ///
   7 "7.widowed" ///
   8 "8.never married" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
   

***flag for current marital status: without partnership***
label define mstatf ///
	 0 "0.no discrepancy" ///
	 1 "1.ms=nev, marhis=evmar" ///
	 2 "2.ms=evmar, marhis=nev" ///
	 .l ".l:No Life History" ///
	 .b ".b:break in panel, skipped wave"
   
***marital history: never married***
label define mnev ///
	 0 "0.ever married" ///
	 1 "1.never married" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	 .l ".l:No Life History" ///
	 .b ".b:break in panel, skipped wave"
	 
***place of birth***
label define place ///
   1 "1.uk"  ///
   11 "11.elsewhere outside of uk" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
	 
***whether born in country of interview***
label define bornin ///
	0 "0.out of country" ///
	1 "1.in country" 
	 
*****ISCED***	 
label define educisced                ///
	1 "1.Primary education"                    ///
	2 "2.Lower secondary education"                   ///
	3 "3.Upper secondary education"                   ///
	4 "4.Post-secondary non tertiary education"                  ///
  5 "5.First stage of tertiary education"                  ///
  6 "5.Second stage of tertiary education"                  ///
  .n ".n:No Qualification / Not Applicable"   ////
  .h ".h:missing hse value" ///
  .o ".o:Other" ///
	.u ".u.unmar"    ///
  .v ".v.Sp NR"   ///
  .m ".m:oth missing" ///
 	.d ".d:DK" ///
 	.r ".r:RF"   
	 
***religion***
label define religion ///
	1 "1.Christian" ///
	2 "2.Buddhist" ///
	3 "3.Hindu" ///
	4 "4.Jewish" ///
	5 "5.Muslim" ///
	6 "6.Sikh" ///
	7 "7.Other non-christian" ///
	8 "8.None" ///
	.w ".w:not in Wave 5" ///
	.m ".m:Oth missing" ///
	.d ".d:DK" ///
	.r ".r:Refuse" ///
	.i ".i:Irrelevant answer" ///
	.p ".p:proxy"
   
******************************************************************************************

***merge with index file***
local demo_w1_index idahhw0 idahhw1 persno outindw0 outindw1 outscw1 finstatw1 dobyear yrdeath // w1wgt scw1wgt
merge 1:1 idauniq using "$index", keepusing(`demo_w1_index') nogen

***merge with wave 0 common data***
local demo_w0_comn indout ager sex ethnic relto0? relto1? hseyr topqual2 topqual3
merge 1:1 idauniq using "$wave_0_comn", keepusing(`demo_w0_comn') nogen

***merge with wave 0 1998 data***
local demo_w0_1998 livemab agema agemab livepab agepa agepab  natmab natpab mainhh painhh 
merge 1:1 idauniq using "$wave_0_1998", keepusing(`demo_w0_1998' yintb) nogen
rename yintb w0_1998_yintb

***merge with wave 0 1999 data***
merge 1:1 idauniq using "$wave_0_1999", keepusing(yintb) nogen
rename yintb w0_1999_yintb

***merge with wave 0 2001 data***
merge 1:1 idauniq using "$wave_0_2001", keepusing(yintb) nogen
rename yintb w0_2001_yintb

gen yintb =.
replace yintb = w0_1998_yintb if !mi(w0_1998_yintb)
replace yintb = w0_1999_yintb if !mi(w0_1999_yintb)
replace yintb = w0_2001_yintb if !mi(w0_2001_yintb)
replace yintb = 2002 if hseyr == 2002
replace yintb = 2003 if hseyr == 2003
replace yintb = 2004 if hseyr == 2004
replace yintb = 2006 if hseyr == 2006

***merge with wave 1 core data***
local demo_w1_core perid iapid dhr dhr? dhr1? astratif ahsecls2 hopid askpx1 hhresp ///
                   intdaty intdatm iintdty iintdtm indobyr ///
                   indager indsex fqethnr ///
                   edqual dimar apobr fqcbthr ///
                   dinma dinfa dianm dimad dianf difad ///
                   mainhh1 painhh1 w1wgt 
merge 1:1 idauniq using "$wave_1_core", keepusing(`demo_w1_core') nogen

***merge with wave 1 financial derived variables data***
local demo_w1_fina coupid
merge 1:1 idauniq using "$wave_1_fina", keepusing(`demo_w1_fina') nogen

***merge with wave 3 life history data***
local demo_w1_hist rpyrma rpyrma? rpmarst rpmarst? rpdiv rpdiv? rpdyr rpdyr? rpfin rpfin? rpdiy rpdiy? 
merge 1:1 idauniq using "$wave_3_hist", keepusing(`demo_w1_hist') nogen


***person specific identifier***
*wave 0 household id
gen hh0hhid =.
replace hh0hhid = idahhw0 if !inlist(idahhw0,-5,-2,.)
label variable hh0hhid "wave 0 specific household serial number /num"

*wave 1 household id
gen hh1hhid =.
replace hh1hhid = idahhw1 if !inlist(idahhw1,-2,.)
label variable hh1hhid "wave 1 specific household serial number /num"

*check

gen hh1hhidc = string(hh1hhid)
label variable hh1hhidc "wave 1 specific household serial number /5-char"

*person number
gen pn =.
replace pn = persno if !missing(persno)
label variable pn "person number within household"

*merge id
label variable idauniq "unique individual serial number /num"

***wave status: response indicator***
*wave 0 core response indicator
gen inw0 =0
replace inw0 = 1 if inlist(indout,51,52,53) 
label variable inw0 "inw0: =1 if respondent w0 core"

*value labels
label values inw0 inw

***wave status: response indicator***
*wave 1 core response indicator
gen inw1 =0
replace inw1 = 1 if inlist(outindw1,11,13,21,23)
label variable inw1 "inw1: =1 if respondent w1"

*value labels
label values inw1 inw

*check

***self-completion status: response indicator***
*wave 1 self-completion response indicator
gen inw1sc =0
replace inw1sc = 1 if outscw1==1
label variable inw1sc "inw1sc: =1 if respondent w1 self-completion"

*value labels
label values inw1sc inwsc

*check

***create temporary indicator of wave 1 spouse***
gen w1spouse=.
replace w1spouse = 0 if inw1==1
replace w1spouse = 1 if inlist(dhr ,1,2) | ///
											inlist(dhr2,1,2) | ///
											inlist(dhr3,1,2) | ///
											inlist(dhr4,1,2) | ///
											inlist(dhr5,1,2) | ///
											inlist(dhr6,1,2) | ///
											inlist(dhr7,1,2) | ///
											inlist(dhr8,1,2) | ///
											inlist(dhr9,1,2) | ///
											inlist(dhr10,1,2) | ///
											inlist(dhr11,1,2) | ///
											inlist(dhr12,1,2) | ///
											inlist(dhr13,1,2)

***couple identifier***
*wave 1 couple id
gen h1coupid =.
replace h1coupid = coupid if !missing(coupid)
label variable h1coupid "wave 1 specific couple id number /num"

*check

*wave 1 couple id (character)
gen str5 h1coupidc = string(h1coupid)
label variable h1coupidc "wave 1 specific couple id number /5-char"

***spouse identifier***
*wave 1 spouse id
gen s1idauniq =.
bysort coupid: replace s1idauniq = 0 if missing(idauniq[_n+1]) & _n==1 & inw1==1
bysort coupid: replace s1idauniq = idauniq[_n+1] if !missing(idauniq[_n+1], coupid)
bysort coupid: replace s1idauniq = idauniq[_n-1] if !missing(idauniq[_n-1], coupid)
label variable s1idauniq "s1idauniq:w1 spouse idauniq"

***wave status: interview status***
*wave 1 interview status
gen r1iwstat =.
replace r1iwstat = 0 if inlist(outindw1,-993,-992,-991) | mi(outindw1)
replace r1iwstat = 1 if inlist(outindw1,11,13,21,23)
replace r1iwstat = 3 if inlist(outindw1,79,99)
replace r1iwstat = 4 if inrange(outindw1,31,56) | inlist(outindw1,510,520,530,540)
replace r1iwstat = 7 if inlist(outindw1, 791,792,793,999)
replace r1iwstat = 9 if inrange(outindw1,310,450) | inrange(outindw1,550,783)
label variable r1iwstat "r1iwstat:w1 r interview status"

*wave 1 spouse interview status
gen s1iwstat =.
spouse r1iwstat, result(s1iwstat) wave(1)
label variable s1iwstat "s1iwstat:w1 s interview status"

*value labels
label values r1iwstat wstat
label values s1iwstat wstat

*check 

***sample cohort***
*wave 1 respondent cohort
gen r1cohort_e =.
replace r1cohort_e = 1 if inlist(finstatw1,1,2,3)
replace r1cohort_e = 2 if inlist(finstatw1,5)
replace r1cohort_e = 3 if inlist(finstatw1,4)
label variable r1cohort_e "r1cohort_e:w1 r sample cohort, ELSA specific"

*wave 1 spouse cohort
gen s1cohort_e=.
spouse r1cohort_e, result(s1cohort_e) wave(1)
label variable s1cohort_e "s1cohort_e:w1 s sample cohort, ELSA specific"

*value labels
label values r1cohort_e cohort_e
label values s1cohort_e cohort_e

*check

***whether eligible for the ELSA sample***
*wave 1 respondent eligibility
gen raelsamp = 0
replace raelsamp = 1 if inlist(finstatw1,1,2,3,5) & inw1 == 1
label variable raelsamp "raelsamp:ELSA r sample-age eligible/Wave 1 Resp"

*wave 1 spouse eligibility
gen s1elsamp =.
spouse raelsamp, result(s1elsamp) wave(1)
label variable s1elsamp "s1elsamp:ELSA s sample-age eligible/Wave 1 Resp"

*value labels
label values raelsamp elsaamp
label values s1elsamp elsaamp

*check

****person-level cross-sectional weight, core sample***
**wave 1 respondent cross-sectional weight, core sample
gen r1cwtresp =.
replace r1cwtresp = w1wgt
label variable r1cwtresp "r1cwtresp:w1 r person-level cross-sectional weight, core sample"

*wave 1 spouse cross-sectional weight, core
gen s1cwtresp =.
spouse r1cwtresp, result(s1cwtresp) wave(1)
label variable s1cwtresp "s1cwtresp:w1 s person-level cross-sectional weight, core sample"

*check

***person-level weight, self-completion sample***
*wave 1 respondent weight, self-completion sample
*gen r1scwtresp =.
*replace r1scwtresp = scw1wgt
*label variable r1scwtresp "r1scwtresp:w1 person-level weight, self-completion sample"
*
**wave 1 spouse weight, self-completion
*gen s1scwtresp =.
*spouse r1scwtresp, result(s1scwtresp) wave(1)
*label variable s1scwtresp "s1scwtresp:w1 person-level weight, self-completion sample"

*check

***spouse identifier***
*respondent number of spouse id's
gen raspct =.
replace raspct = 0 if s1idauniq == 0
replace raspct = 1 if !inlist(s1idauniq,0,.)
label variable raspct "raspct: # of spouses with pn"

*check

*respondent first spouse id
gen raspid1 =.
replace raspid1 = s1idauniq if s1idauniq != 0
label variable raspid1 "raspid1: idauniq of 1st spouse"

*check

*respondent second spouse id
gen raspid2 =.
label variable raspid2 "raspid2: idauniq of 2nd spouse"

*respondent third spouse id
gen raspid3 =.
label variable raspid3 "raspid3: idauniq of 3rd spouse"

*respondent forth spouse id
gen raspid4 =.
label variable raspid4 "raspid4: idauniq of 4th spouse"

***sampling weight***
*wave 1 respondent stratification variable
gen r1strat =.
replace r1strat = astratif
label variable r1strat "r1strat:w1 hse stratification variable"

*check 

*respondent clustering variable
gen r1clust = .
replace r1clust = ahsecls2
label variable r1clust "r1clust:w1 hse clustering variable"

*check
                                                         
***number of household respondents***     
*wave 1 household number of respondents      
egen hh1hhresp = sum(inw1==1) if inw1==1, by(hh1hhid)
label variable hh1hhresp "hh1hhresp:w1 # core respondents in hh"

*check

***whether couple household***
*wave 1 couple indicator
egen h1cpl = sum(inw1==1), by(coupid)
recode h1cpl (0=.) (1=0) (2=1)
label variable h1cpl "h1cpl:w1 whether coupled"

*value labels
label values h1cpl cpl

*check

***financial, family respondent***
*wave 1 respondent financial respondent indicator
gen r1finr =.
replace r1finr = 1 if perid == iapid & !inlist(iapid,0,.,-1,-9,-8)
replace r1finr = 0 if perid != iapid & inw1 ==1
label variable r1finr "r1finr:w1 r whether financial resp"

*wave 1 spouse financial respondent indicator
gen s1finr =.
spouse r1finr, result(s1finr) wave(1)
label variable s1finr "s1finr:w1 s whether financial resp"

*wave 1 couple financial respondent indicator
gen h1anyfin =.
replace h1anyfin = 0 if iapid==0
replace h1anyfin = 1 if !inlist(iapid,0,.,-1) & inw1 ==1
label variable h1anyfin "h1anyfin:w1 whether any finr in couple"

*value labels
label values r1finr finr
label values s1finr finr
label values h1anyfin finr

*check 

***household, family respondent***
*wave 1 respondent household respondent indicator
gen r1hhr =.
replace r1hhr = 1 if perid == hhresp & !inlist(hhresp,.,-1,-9,-8,97)
replace r1hhr = 0 if perid != hhresp & inw1 ==1
label variable r1hhr "r1hhr:w1 r whether hh resp"

*wave 1 spouse household respondent indicator
gen s1hhr =.
spouse r1hhr, result(s1hhr) wave(1)
label variable s1hhr "s1hhr:w1 s whether hh resp"

*value labels
label values r1hhr hhr
label values s1hhr hhr

*check

***housing, family respondent***
*wave 1 respondent housing respondent indicator
gen r1hor =.
replace r1hor = 1 if perid == hopid & !inlist(hopid,0,.,-1.,-9,-8)
replace r1hor = 0 if perid != hopid & inw1 ==1
label variable r1hor "r1hor:w1 r whether housing resp"

*wave 1 spouse housing respondent indicator
gen s1hor =.
spouse r1hor, result(s1hor) wave(1)
label variable s1hor "s1hor:w1 s whether housing resp"

*wave 1 household housing respondent indicator
gen hh1anyho =.
replace hh1anyho = 0 if hopid==0
replace hh1anyho = 1 if !inlist(hopid,0,.,-1.) & inw1 ==1
label variable hh1anyho "hh1anyho:w1 whether any hor in hh"

*value labels
label values r1hor hor
label values s1hor hor
label values hh1anyho hor

*check


***whether proxy interview***
*wave 1 respondent proxy indicator
gen r1proxy =.
replace r1proxy = 1 if askpx1 ==1
replace r1proxy = 0 if inlist(askpx1,-1,2)
label variable r1proxy "r1proxy:w1 r whether proxy interview"

*wave 1 spouse proxy indicator
gen s1proxy =.
spouse r1proxy, result(s1proxy) wave(1)
label variable s1proxy "s1proxy:w1 s whether proxy interview"

*value labels
label values r1proxy proxy
label values s1proxy proxy

*check

***interview dates***
*wave 1 household interview date
gen hh1iwhh =.
replace hh1iwhh = ym(intdaty, intdatm) if inrange(intdaty, 2000, 2010) & inrange(intdatm, 1, 12)
label variable hh1iwhh "hh1iwhh:w1 household interview date"

*wave 1 household interview date flag
gen hh1iwhhf =.
replace hh1iwhhf = 0 if inrange(intdaty,2000, 2010) & inrange(intdatm,1,12)
replace hh1iwhhf = 1 if ! inrange(intdatm,1,12) & inw1 ==1
replace hh1iwhhf = 2 if ! inrange(intdaty,2000, 2010) & inw1 ==1
label variable hh1iwhhf "hh1iwhhf:w1 household interview date flag"

*wave 1 household interview month
gen hh1iwhhm =.
replace hh1iwhhm = intdatm if inrange(intdatm,1,12)
label variable hh1iwhhm "hh1iwhhm:w1 household interview month"

*wave 1 household interview year
gen hh1iwhhy =.
replace hh1iwhhy = intdaty if inrange(intdaty,2000, 2010)
label variable hh1iwhhy "hh1iwhhy:w1 household interview year"

*wave 1 respondent individual interview date
gen r1iwind =.
replace r1iwind = ym(iintdty, iintdtm) if inrange(iintdty, 2000, 2010) & inrange(iintdtm, 1, 12)
label variable r1iwind "r1iwind:w1 r individual interview date"

*wave 1 spouse individual interview date
gen s1iwind =.
spouse r1iwind, result(s1iwind) wave(1)
label variable s1iwind "s1iwind:w1 s individual interview date"

*wave 1 respondent individual interview date flag
gen r1iwindf =.
replace r1iwindf = 0 if inrange(iintdty,2000, 2010) & inrange(iintdtm,1,12)
replace r1iwindf = 1 if ! inrange(iintdtm,1,12) & inw1 ==1
replace r1iwindf = 2 if ! inrange(iintdty,2000, 2010) & inw1 ==1
label variable r1iwindf "r1iwindf:w1 r individual interview date flag"

*wave 1 spouse individual interview date flag
gen s1iwindf =.
spouse r1iwindf, result(s1iwindf) wave(1)
label variable s1iwindf "s1iwindf:w1 s individual interview date flag"

*wave 1 respondent individual interview month
gen r1iwindm =.
replace r1iwindm = iintdtm if inrange(iintdtm,1,12)
label variable r1iwindm "r1iwindm:w1 r individual interview month"

*wave 1 spouse individual interview month
gen s1iwindm =.
spouse r1iwindm, result(s1iwindm) wave(1)
label variable s1iwindm "s1iwindm:w1 s individual interview month"

*wave 1 respondent individual interview year
gen r1iwindy =.
replace r1iwindy = iintdty if inrange(iintdty,2000, 2010)
label variable r1iwindy "r1iwindy:w1 r individual interview year"

*wave 1 spouse individual interview year
gen s1iwindy =.
spouse r1iwindy, result(s1iwindy) wave(1)
label variable s1iwindy "s1iwindy:w1 s individual interview year"

*value labels
label values hh1iwhhf dateflag
label values r1iwindf dateflag
label values s1iwindf dateflag

*check


***birth date: year***
*respondent birth year
gen rabyear =.
replace rabyear = indobyr if inrange(indobyr,1900,2020)
replace rabyear = 1912 if indobyr==-7
label variable rabyear "rabyear: r birth year"

*wave 1 spouse birth year
gen s1byear =.
spouse rabyear, result(s1byear) wave(1)
label variable s1byear "s1byear:w1 s birth year"

*respondent birth year flag
gen rafbyear =.
replace rafbyear = 0 if inrange(indobyr,1900,2020)
replace rafbyear = 1 if indobyr == -7
label variable rafbyear "rafbyear: r flag birth year bottom-coded"
label values rafbyear fbyear

*wave 1 spouse birth year flag
gen s1fbyear =.
spouse rafbyear, result(s1fbyear) wave(1)
label variable s1fbyear "s1fbyear:w1 s flag birth year bottom-coded"
label values s1fbyear fbyear

*check 

***age at interview (in years)***
*wave 1 respondent age in years
gen r1agey=.
replace r1agey = indager if inrange(indager,10,90)
replace r1agey = 90 if indager==99
label variable r1agey "r1agey:w1 r age (years) at ivw"

*wave 1 spouse age in years
gen s1agey=.
spouse r1agey, result(s1agey) wave(1)
label variable s1agey "s1agey:w1 s age (years) at ivw"

*wave 1 respondent age in years flag
gen r1fagey=.
replace r1fagey = 0 if inrange(indager,10,90)
replace r1fagey = 1 if indager == 99
label variable r1fagey "r1fagey:w1 r flag age at iwv top-coded"
label values r1fagey fagey

*wave 1 spouse age in years flag
gen s1fagey=.
spouse r1fagey, result(s1fagey) wave(1)
label variable s1fagey "s1fagey:w1 s flag age at iwv top-coded"
label values s1fagey fagey

*check

***gender***
*respondent gender
gen ragender =.
missing_w0 sex, result(ragender)
missing_w1 indsex, result(ragender)
replace ragender = 1 if indsex == 1 | sex == 1
replace ragender = 2 if indsex == 2 | sex == 2
label variable ragender "ragender: r gender"

*wave 1 spouse gender
gen s1gender =.
spouse ragender, result(s1gender) wave(1)
label variable s1gender "s1gender:w1 s gender"

*respondent gender flag
gen rafgendr = 0 if inw1 == 1
label variable rafgendr "rafgendr: flag if problem with r gender"

*wave 1 spouse gender flag
gen s1fgendr = .
spouse rafgendr, result(s1fgendr) wave(1)
label variable s1fgendr "s1fgendr:w1 flag if problem with s gender"

*value labels
label values ragender gender
label values s1gender gender

label values rafgendr genderflag
label values s1fgendr genderflag

*check

***race, ethnicity: race***
*respondent race
gen raracem =.
missing_w0 ethnic, result(raracem)
replace raracem = 1 if ethnic == 1
replace raracem = 4 if ethnic == 2
missing_w1 fqethnr if missing(raracem), result(raracem)
replace raracem = 1 if fqethnr == 1 & missing(raracem)
replace raracem = 4 if fqethnr == 2 & missing(raracem)
label variable raracem "raracem: r race - masked"

*wave 1 spouse race
gen s1racem =.
spouse raracem, result(s1racem) wave(1)
label variable s1racem "s1racem:w1 s race - masked"

*respondent race flag
gen raracef = 0 if inw1 == 1
label variable raracef "raracef: flag if problem with r race"

*wave 2 spouse race flag
gen s1racef =.
spouse raracef, result(s1racef) wave(1)
label variable s1racef "s1racef:w1 flag if problem with s race"

*value labels
label values raracem race
label values s1racem race

label values raracef raceflag
label values s1racef raceflag

*check


***education: categorical summary***
*respondent education categorically
gen raeduc_e =.
missing_w1 edqual, result(raeduc_e)
replace raeduc_e = .o if edqual == 6
replace raeduc_e = 1 if inlist(edqual,7,5)
replace raeduc_e = 3 if edqual == 4
replace raeduc_e = 4 if inlist(edqual, 2, 3)
replace raeduc_e = 5 if edqual == 1
label variable raeduc_e "raeduc_e: r education (categ)"
label values raeduc_e educcats

*wave 1 spouse education categorically
gen s1educ_e =.
spouse raeduc_e, result(s1educ_e) wave(1)
label variable s1educ_e "s1educ_e:w1 s education (categ)"
label values s1educ_e educcats

*check

***education: isced category***
*wave 1 respondent education isced category (update)
gen raedisced=.
replace raedisced = .m if edqual == -1
replace raedisced = .d if edqual == -8
replace raedisced = .r if edqual == -9
replace raedisced = .n if edqual == 7
replace raedisced = .o if edqual == 6
replace raedisced = 3  if inlist(edqual,3,4,5)
replace raedisced = 4  if edqual == 2
replace raedisced = 5  if edqual == 1
label variable raedisced "raedisced:R education ISCED"
label val raedisced educisced

*wave 1 spouse education isced category (update)
gen s1edisced =.
spouse raedisced, result(s1edisced) wave(1)
label variable s1edisced "s1edisced:w1 S education ISCED"
label val s1edisced educisced

***education: harmonized education category***
*wave 1 respondent education harmonized category
gen raeducl = .
replace raeducl = .m if edqual==-1
replace raeducl = .d if edqual==-8
replace raeducl = .r if edqual==-9
replace raeducl = .o if edqual==6
replace raeducl = 1 if edqual==7
replace raeducl = 2 if inlist(edqual,2,3,4,5)
replace raeducl = 3 if edqual==1
label variable raeducl "raeducl:R harmonized education"
label values raeducl educharm

*wave 1 spouse education harmonized category
gen s1educl = .
spouse raeducl, result(s1educl) wave(1)
label variable s1educl "s1educl:w1 S harmonized education"
label values s1educl educharm

***current marital status: with implied partnerships***
*wave 1 respondent marital status with implied partnership
gen r1mstat=.
missing_w1 dimar, result(r1mstat)
replace r1mstat = 1 if inlist(dimar, 2, 3)
replace r1mstat = 4 if dimar == 4
replace r1mstat = 5 if dimar == 5
replace r1mstat = 7 if dimar == 6
replace r1mstat = 8 if dimar == 1
replace r1mstat = 3 if inlist(dimar, 1, 5, 6) & !inlist(s1idauniq,0,.)
label variable r1mstat "r1mstat:w1 r marital status w/partners, filled"

*wave 1 spouse marital status with implied partnership
gen s1mstat=.
spouse r1mstat, result(s1mstat) wave(1)
label variable s1mstat "s1mstat:w1 s marital status w/partners, filled"

*value labels
label values r1mstat marwpart
label values s1mstat marwpart

*check

***current marital status: current implied partnership status***
*wave 1 respondent partnership status
gen r1mpart =.
missing_w1 dimar, result(r1mpart)
replace r1mpart = 0 if inw1==1
replace r1mpart = 1 if inlist(dimar, 1, 5, 6) & !inlist(s1idauniq,0,.)
label variable r1mpart "r1mpart:w1 r implied partnership status"

*wave 1 spouse partnership status
gen s1mpart =.
spouse r1mpart, result(s1mpart) wave(1)
label variable s1mpart "s1mpart:w1 s implied partnership status"

*value labels
label values r1mpart part
label values s1mpart part

*check

***current marital status: without implied partnerships***
*wave 1 respondent marital status without implied partnership
gen r1mstath =.
missing_w1 dimar, result(r1mstath)
replace r1mstath = 1 if inlist(dimar, 2, 3)
replace r1mstath = 4 if dimar == 4
replace r1mstath = 5 if dimar == 5
replace r1mstath = 7 if dimar == 6
replace r1mstath = 8 if dimar == 1
label variable r1mstath "r1mstath:w1 r marital status"

*wave 1 spouse marital status without partnership
gen s1mstath =.
spouse r1mstath, result(s1mstath) wave(1)
label variable s1mstath "s1mstath:w1 s marital status"

*value labels
label values r1mstath marwopart
label values s1mstath marwopart

*check

***number of marriages***
*wave 1 respondent number of marriages
gen r1mrct =.
replace r1mrct = .l if rpmarst==. & inw1==1
replace r1mrct = 0 if rpmarst!=. & inw1==1
replace r1mrct = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw1==1
replace r1mrct = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw1==1
replace r1mrct = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw1==1
replace r1mrct = r1mrct+1 if rpmarst==1 & rpyrma<=r1iwindy & !inlist(r1mrct,.d,.m,.r) & rpyrma>0 & !missing(r1iwindy)
replace r1mrct = r1mrct+1 if rpmarst2==1 & rpyrma2<=r1iwindy & !inlist(r1mrct,.d,.m,.r) & rpyrma2>0 & !missing(r1iwindy)
replace r1mrct = r1mrct+1 if rpmarst3==1 & rpyrma3<=r1iwindy & !inlist(r1mrct,.d,.m,.r) & rpyrma3>0 & !missing(r1iwindy)
replace r1mrct = r1mrct+1 if rpmarst4==1 & rpyrma4<=r1iwindy & !inlist(r1mrct,.d,.m,.r) & rpyrma4>0 & !missing(r1iwindy)
replace r1mrct = r1mrct+1 if rpmarst5==1 & rpyrma5<=r1iwindy & !inlist(r1mrct,.d,.m,.r) & rpyrma5>0 & !missing(r1iwindy)
replace r1mrct = r1mrct+1 if rpmarst6==1 & rpyrma6<=r1iwindy & !inlist(r1mrct,.d,.m,.r) & rpyrma6>0 & !missing(r1iwindy)
replace r1mrct = r1mrct+1 if rpmarst7==1 & rpyrma7<=r1iwindy & !inlist(r1mrct,.d,.m,.r) & rpyrma7>0 & !missing(r1iwindy)
label variable r1mrct "r1mrct:w1 r # marriages"

*wave 1 spouse number of marriages
gen s1mrct =.
spouse r1mrct, result(s1mrct) wave(1)
label variable s1mrct "s1mrct:w1 s # marriages"

*check

***marital history: never married***
*wave 1 respondent never married indicator
gen r1mnev =.
replace r1mnev = .l if rpmarst==. & inw1==1
replace r1mnev = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw1==1
replace r1mnev = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw1==1
replace r1mnev = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw1==1
replace r1mnev = 1 if (inlist(rpmarst,2,-1) | inlist(rpmarst2,2,-1) | inlist(rpmarst3,2,-1) | inlist(rpmarst4,2,-1) | inlist(rpmarst5,2,-1) | inlist(rpmarst6,2,-1) | inlist(rpmarst7,2,-1)) & inw1==1
replace r1mnev = 0 if rpmarst==1 & rpyrma<=r1iwindy & rpyrma>0 & !inlist(r1mnev,.d,.m,.r) & !missing(r1iwindy)
replace r1mnev = 0 if rpmarst2==1 & rpyrma2<=r1iwindy & rpyrma2>0 & !inlist(r1mnev,.d,.m,.r) & !missing(r1iwindy)
replace r1mnev = 0 if rpmarst3==1 & rpyrma3<=r1iwindy & rpyrma3>0 & !inlist(r1mnev,.d,.m,.r) & !missing(r1iwindy)
replace r1mnev = 0 if rpmarst4==1 & rpyrma4<=r1iwindy & rpyrma4>0 & !inlist(r1mnev,.d,.m,.r) & !missing(r1iwindy)
replace r1mnev = 0 if rpmarst5==1 & rpyrma5<=r1iwindy & rpyrma5>0 & !inlist(r1mnev,.d,.m,.r) & !missing(r1iwindy)
replace r1mnev = 0 if rpmarst6==1 & rpyrma6<=r1iwindy & rpyrma6>0 & !inlist(r1mnev,.d,.m,.r) & !missing(r1iwindy)
replace r1mnev = 0 if rpmarst7==1 & rpyrma7<=r1iwindy & rpyrma7>0 & !inlist(r1mnev,.d,.m,.r) & !missing(r1iwindy)
label variable r1mnev "r1mnev:w1 r never married"

*wave 1 spouse never married indicator
gen s1mnev =.
spouse r1mnev, result(s1mnev) wave(1)
label variable s1mnev "s1mnev:w1 s never married"

*value labels
label values r1mnev mnev
label values s1mnev mnev

*check

***marital history: # times divorced***
*wave 1 respondent number of times divorced
gen r1mdiv =.
replace r1mdiv = .l if rpmarst==. & inw1==1
replace r1mdiv = 0 if rpmarst!=. & inw1==1
replace r1mdiv = .d if (rpdiv==-8 | rpdiv2==-8 | rpdiv3==-8 | rpdiv4==-8 | rpdiv5==-8 | rpdiv6==-8 | rpdiv7==-8) & inw1==1
replace r1mdiv = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw1==1
replace r1mdiv = .m if missing(rpdiv, rpdiv2, rpdiv3, rpdiv4, rpdiv5, rpdiv6, rpdiv7) & rpmarst!=. & inw1==1
replace r1mdiv = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw1==1
replace r1mdiv = .r if (rpdiv==-9 | rpdiv2==-9 | rpdiv3==-9 | rpdiv4==-9 | rpdiv5==-9 | rpdiv6==-9 | rpdiv7==-9) & inw1==1
replace r1mdiv = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw1==1
replace r1mdiv = r1mdiv+1 if rpdiv==1 & rpdyr<=r1iwindy & !inlist(r1mdiv,.d,.m,.r) & rpdyr>0 & !missing(r1iwindy)
replace r1mdiv = r1mdiv+1 if rpdiv2==1 & rpdyr2<=r1iwindy & !inlist(r1mdiv,.d,.m,.r) & rpdyr2>0 & !missing(r1iwindy)
replace r1mdiv = r1mdiv+1 if rpdiv3==1 & rpdyr3<=r1iwindy & !inlist(r1mdiv,.d,.m,.r) & rpdyr3>0 & !missing(r1iwindy)
replace r1mdiv = r1mdiv+1 if rpdiv4==1 & rpdyr4<=r1iwindy & !inlist(r1mdiv,.d,.m,.r) & rpdyr4>0 & !missing(r1iwindy)
replace r1mdiv = r1mdiv+1 if rpdiv5==1 & rpdyr5<=r1iwindy & !inlist(r1mdiv,.d,.m,.r) & rpdyr5>0 & !missing(r1iwindy)
replace r1mdiv = r1mdiv+1 if rpdiv6==1 & rpdyr6<=r1iwindy & !inlist(r1mdiv,.d,.m,.r) & rpdyr6>0 & !missing(r1iwindy)
replace r1mdiv = r1mdiv+1 if rpdiv7==1 & rpdyr7<=r1iwindy & !inlist(r1mdiv,.d,.m,.r) & rpdyr7>0 & !missing(r1iwindy)
label variable r1mdiv "r1mdiv:w1 r # times divorced"

*wave 1 spouse number of times divorced
gen s1mdiv =.
spouse r1mdiv, result(s1mdiv) wave(1)
label variable s1mdiv "s1mdiv:w1 s # times divorced"

*check

***marital history: # times widowed***
*wave 1 respondent number of times widowed
gen r1mwid =.
replace r1mwid = .l if rpmarst==. & inw1==1
replace r1mwid = 0 if rpmarst!=. & inw1==1
replace r1mwid = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw1==1
replace r1mwid = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw1==1
replace r1mwid = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=.==3 & inw1==1
replace r1mwid = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=.==3 & inw1==1
replace r1mwid = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw1==1
replace r1mwid = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw1==1
replace r1mwid = r1mwid+1 if rpfin==2 & rpmarst==1 & rpdiy<=r1iwindy & !inlist(r1mwid,.d,.m,.r) & rpdiy>0 & !missing(r1iwindy)
replace r1mwid = r1mwid+1 if rpfin2==2 & rpmarst2==1 & rpdiy2<=r1iwindy & !inlist(r1mwid,.d,.m,.r) & rpdiy2>0 & !missing(r1iwindy)
replace r1mwid = r1mwid+1 if rpfin3==2 & rpmarst3==1 & rpdiy3<=r1iwindy & !inlist(r1mwid,.d,.m,.r) & rpdiy3>0 & !missing(r1iwindy)
replace r1mwid = r1mwid+1 if rpfin4==2 & rpmarst4==1 & rpdiy4<=r1iwindy & !inlist(r1mwid,.d,.m,.r) & rpdiy4>0 & !missing(r1iwindy)
replace r1mwid = r1mwid+1 if rpfin5==2 & rpmarst5==1 & rpdiy5<=r1iwindy & !inlist(r1mwid,.d,.m,.r) & rpdiy5>0 & !missing(r1iwindy)
replace r1mwid = r1mwid+1 if rpfin6==2 & rpmarst6==1 & rpdiy6<=r1iwindy & !inlist(r1mwid,.d,.m,.r) & rpdiy6>0 & !missing(r1iwindy)
replace r1mwid = r1mwid+1 if rpfin7==2 & rpmarst7==1 & rpdiy7<=r1iwindy & !inlist(r1mwid,.d,.m,.r) & rpdiy7>0 & !missing(r1iwindy)
label variable r1mwid "r1mwid:w1 r # times widowed"

*wave 1 spouse number of times widowed
gen s1mwid =.
spouse r1mwid, result(s1mwid) wave(1)
label variable s1mwid "s1mwid:w1 s # times widowed"

*check

***marital history: #times don't know how marriage ended***
*wave 1 respondent number of times dk marriage end
gen r1mend =.
replace r1mend = .l if rpmarst==. & inw1==1
replace r1mend = 0 if rpmarst!=. & inw1==1
replace r1mend = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw1==1
replace r1mend = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw1==1
replace r1mend = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw1==1
replace r1mend = r1mend+1 if !inlist(rpyrma,-9,-8,-1,.) ///
														 & !inlist(rpfin,1,2) ///
														 & (( ( (rpyrma<=rpyrma2) & (rpyrma2<=r1iwindy) ) ///
															 | ( (rpyrma<=rpyrma3) & (rpyrma3<=r1iwindy) ) ///
															 | ( (rpyrma<=rpyrma4) & (rpyrma4<=r1iwindy) ) ///
															 | ( (rpyrma<=rpyrma5) & (rpyrma5<=r1iwindy) ) ///
															 | ( (rpyrma<=rpyrma6) & (rpyrma6<=r1iwindy) ) ///
															 | ( (rpyrma<=rpyrma7) & (rpyrma7<=r1iwindy) ) ) | inlist(rpfin,85,95) ) ///
														 & rpyrma<=r1iwindy ///
														 & !missing(r1iwindy) ///
														 & !inlist(r1mend,.d,.m,.r) 
replace r1mend = r1mend+1 if !inlist(rpyrma2,-9,-8,-1,.) ///
														 & !inlist(rpfin2,1,2) ///
														 & (( ( (rpyrma2<=rpyrma) & (rpyrma<=r1iwindy) ) ///
															 | ( (rpyrma2<=rpyrma3) & (rpyrma3<=r1iwindy) ) ///
															 | ( (rpyrma2<=rpyrma4) & (rpyrma4<=r1iwindy) ) ///
															 | ( (rpyrma2<=rpyrma5) & (rpyrma5<=r1iwindy) ) ///
															 | ( (rpyrma2<=rpyrma6) & (rpyrma6<=r1iwindy) ) ///
															 | ( (rpyrma2<=rpyrma7) & (rpyrma7<=r1iwindy) ) ) | inlist(rpfin2,85,95) )  ///
														 & rpyrma2<=r1iwindy ///
														 & !missing(r1iwindy) ///
														 & !inlist(r1mend,.d,.m,.r) 
replace r1mend = r1mend+1 if !inlist(rpyrma3,-9,-8,-1,.) ///
														 & !inlist(rpfin3,1,2) ///
														 & (( ( (rpyrma3<=rpyrma) & (rpyrma<=r1iwindy) ) ///
															 | ( (rpyrma3<=rpyrma2) & (rpyrma2<=r1iwindy) ) ///
															 | ( (rpyrma3<=rpyrma4) & (rpyrma4<=r1iwindy) ) ///
															 | ( (rpyrma3<=rpyrma5) & (rpyrma5<=r1iwindy) ) ///
															 | ( (rpyrma3<=rpyrma6) & (rpyrma6<=r1iwindy) ) ///
															 | ( (rpyrma3<=rpyrma7) & (rpyrma7<=r1iwindy) ) )  | inlist(rpfin3,85,95) ) ///
														 & rpyrma3<=r1iwindy ///
														 & !missing(r1iwindy) ///
														 & !inlist(r1mend,.d,.m,.r) 														 
replace r1mend = r1mend+1 if !inlist(rpyrma4,-9,-8,-1,.) ///
														 & !inlist(rpfin4,1,2) ///
														 & (( ( (rpyrma4<=rpyrma) & (rpyrma<=r1iwindy) ) ///
															 | ( (rpyrma4<=rpyrma2) & (rpyrma2<=r1iwindy) ) ///
															 | ( (rpyrma4<=rpyrma3) & (rpyrma3<=r1iwindy) ) ///
															 | ( (rpyrma4<=rpyrma5) & (rpyrma5<=r1iwindy) ) ///
															 | ( (rpyrma4<=rpyrma6) & (rpyrma6<=r1iwindy) ) ///
															 | ( (rpyrma4<=rpyrma7) & (rpyrma7<=r1iwindy) ) ) | inlist(rpfin4,85,95) )  ///
														 & rpyrma4<=r1iwindy ///
														 & !missing(r1iwindy) ///
														 & !inlist(r1mend,.d,.m,.r) 	
replace r1mend = r1mend+1 if !inlist(rpyrma5,-9,-8,-1,.) ///
														 & !inlist(rpfin5,1,2) ///
														 & (( ( (rpyrma5<=rpyrma) & (rpyrma<=r1iwindy) ) ///
															 | ( (rpyrma5<=rpyrma2) & (rpyrma2<=r1iwindy) ) ///
															 | ( (rpyrma5<=rpyrma3) & (rpyrma3<=r1iwindy) ) ///
															 | ( (rpyrma5<=rpyrma4) & (rpyrma4<=r1iwindy) ) ///
															 | ( (rpyrma5<=rpyrma6) & (rpyrma6<=r1iwindy) ) ///
															 | ( (rpyrma5<=rpyrma7) & (rpyrma7<=r1iwindy) ) )  | inlist(rpfin5,85,95) ) ///
														 & rpyrma5<=r1iwindy ///
														 & !missing(r1iwindy) ///
														 & !inlist(r1mend,.d,.m,.r) 	
replace r1mend = r1mend+1 if !inlist(rpyrma6,-9,-8,-1,.) ///
														 & !inlist(rpfin6,1,2) ///
														 & (( ( (rpyrma6<=rpyrma) & (rpyrma<=r1iwindy) ) ///
															 | ( (rpyrma6<=rpyrma2) & (rpyrma2<=r1iwindy) ) ///
															 | ( (rpyrma6<=rpyrma3) & (rpyrma3<=r1iwindy) ) ///
															 | ( (rpyrma6<=rpyrma4) & (rpyrma4<=r1iwindy) ) ///
															 | ( (rpyrma6<=rpyrma5) & (rpyrma5<=r1iwindy) ) ///
															 | ( (rpyrma6<=rpyrma7) & (rpyrma7<=r1iwindy) ) )  | inlist(rpfin6,85,95) ) ///
														 & rpyrma6<=r1iwindy ///
														 & !missing(r1iwindy) ///
														 & !inlist(r1mend,.d,.m,.r) 	
replace r1mend = r1mend+1 if !inlist(rpyrma7,-9,-8,-1,.) ///
														 & !inlist(rpfin7,1,2) ///
														 & (( ( (rpyrma7<=rpyrma) & (rpyrma<=r1iwindy) ) ///
															 | ( (rpyrma7<=rpyrma2) & (rpyrma2<=r1iwindy) ) ///
															 | ( (rpyrma7<=rpyrma3) & (rpyrma3<=r1iwindy) ) ///
															 | ( (rpyrma7<=rpyrma4) & (rpyrma4<=r1iwindy) ) ///
															 | ( (rpyrma7<=rpyrma5) & (rpyrma5<=r1iwindy) ) ///
															 | ( (rpyrma7<=rpyrma6) & (rpyrma6<=r1iwindy) ) ) | inlist(rpfin7,85,95) )  ///
														 & rpyrma7<=r1iwindy ///
														 & !missing(r1iwindy) ///
														 & !inlist(r1mend,.d,.m,.r)
replace r1mend = r1mend-1 if ( ( (rpyrma7==rpyrma) & (rpyrma7<=r1iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma2) & (rpyrma7<=r1iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma3) & (rpyrma7<=r1iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma4) & (rpyrma7<=r1iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin4,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma5) & (rpyrma7<=r1iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin5,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma6) & (rpyrma7<=r1iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin6,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma) & (rpyrma6<=r1iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma2) & (rpyrma6<=r1iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma3) & (rpyrma6<=r1iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma4) & (rpyrma6<=r1iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin4,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma5) & (rpyrma6<=r1iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin5,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma) & (rpyrma5<=r1iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma2) & (rpyrma5<=r1iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma3) & (rpyrma5<=r1iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma4) & (rpyrma5<=r1iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin4,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma4==rpyrma) & (rpyrma4<=r1iwindy) & !inlist(rpfin4,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma4,-9,-8,-1,.) ) ///
															 | ( (rpyrma4==rpyrma2) & (rpyrma4<=r1iwindy) & !inlist(rpfin4,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma4,-9,-8,-1,.) ) ///
															 | ( (rpyrma4==rpyrma3) & (rpyrma4<=r1iwindy) & !inlist(rpfin4,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma4,-9,-8,-1,.) ) ///
															 | ( (rpyrma3==rpyrma) & (rpyrma3<=r1iwindy) & !inlist(rpfin3,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma3,-9,-8,-1,.) ) ///
															 | ( (rpyrma3==rpyrma2) & (rpyrma3<=r1iwindy) & !inlist(rpfin3,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma3,-9,-8,-1,.) ) ///
															 | ( (rpyrma2==rpyrma) & (rpyrma2<=r1iwindy) & !inlist(rpfin2,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma2,-9,-8,-1,.) ) ) ///
														 & !missing(r1iwindy) ///
														 & !inlist(r1mend,.d,.m,.r)														 
label variable r1mend "r1mend:w1 r # times unknown end marriage"

*wave 1 spouse number of times dk marriage end
gen s1mend =.
spouse r1mend, result(s1mend) wave(1)
label variable s1mend "s1mend:w1 s # times unknown end marriage"

*check

***length of current marriage***
*wave 1 respondent length of current marriage
gen r1mcurln =.
replace r1mcurln = .l if rpmarst==. & inw1==1
replace r1mcurln = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw1==1
replace r1mcurln = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw1==1
replace r1mcurln = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw1==1
replace r1mcurln = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw1==1
replace r1mcurln = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw1==1
replace r1mcurln = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw1==1
replace r1mcurln = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw1==1
replace r1mcurln = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw1==1
replace r1mcurln = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw1==1
replace r1mcurln = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw1==1
replace r1mcurln = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw1==1
replace r1mcurln = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw1==1
replace r1mcurln = r1iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																			& ( (rpyrma>=rpyrma2) | (rpyrma2>r1iwindy) | inlist(rpyrma2,-1,.) ) ///
																			& ( (rpyrma>=rpyrma3) | (rpyrma3>r1iwindy) | inlist(rpyrma3,-1,.) ) ///
																			& ( (rpyrma>=rpyrma4) | (rpyrma4>r1iwindy) | inlist(rpyrma4,-1,.) ) ///
																			& ( (rpyrma>=rpyrma5) | (rpyrma5>r1iwindy) | inlist(rpyrma5,-1,.) ) ///
																			& ( (rpyrma>=rpyrma6) | (rpyrma6>r1iwindy) | inlist(rpyrma6,-1,.) ) ///
																			& ( (rpyrma>=rpyrma7) | (rpyrma7>r1iwindy) | inlist(rpyrma7,-1,.) ) ///
																			& rpyrma<=r1iwindy ///
																			& ( rpfin==-1 | ((rpdyr>=r1iwindy) & rpfin==1) | ((rpdiy>=r1iwindy) & rpfin==2) ) ///
																			& !missing(r1iwindy) ///
																			& !inlist(r1mcurln,.d,.m,.r,.l)
replace r1mcurln = r1iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
 																			 & ( (rpyrma2>=rpyrma) | (rpyrma>r1iwindy) | inlist(rpyrma,-1,.) ) ///
	 																		 & ( (rpyrma2>=rpyrma3) | (rpyrma3>r1iwindy) | inlist(rpyrma3,-1,.) ) ///
		 																	 & ( (rpyrma2>=rpyrma4) | (rpyrma4>r1iwindy) | inlist(rpyrma4,-1,.) ) ///
			 																 & ( (rpyrma2>=rpyrma5) | (rpyrma5>r1iwindy) | inlist(rpyrma5,-1,.) ) ///
				 															 & ( (rpyrma2>=rpyrma6) | (rpyrma6>r1iwindy) | inlist(rpyrma6,-1,.) ) ///
					 														 & ( (rpyrma2>=rpyrma7) | (rpyrma7>r1iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma2<=r1iwindy ///
																			 & ( rpfin2==-1 | ((rpdyr2>=r1iwindy) & rpfin2==1) | ((rpdiy2>=r1iwindy) & rpfin2==2) ) ///
																			 & !missing(r1iwindy) ///
																			 & !inlist(r1mcurln,.d,.m,.r,.l)
replace r1mcurln = r1iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																			 & ( (rpyrma3>=rpyrma) | (rpyrma>r1iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma2) | (rpyrma2>r1iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma4) | (rpyrma4>r1iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma5) | (rpyrma5>r1iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma6) | (rpyrma6>r1iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma7) | (rpyrma7>r1iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma3<=r1iwindy ///
																			 & ( rpfin3==-1 | ((rpdyr3>=r1iwindy) & rpfin3==1) | ((rpdiy3>=r1iwindy) & rpfin3==2) ) ///
																			 & !missing(r1iwindy) ///
																			 & !inlist(r1mcurln,.d,.m,.r,.l)
replace r1mcurln = r1iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																			 & ( (rpyrma4>=rpyrma) | (rpyrma>r1iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma2) | (rpyrma2>r1iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma3) | (rpyrma3>r1iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma5) | (rpyrma5>r1iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma6) | (rpyrma6>r1iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma7) | (rpyrma7>r1iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & rpyrma4<=r1iwindy ///
																			 & ( rpfin4==-1 | ((rpdyr4>=r1iwindy) & rpfin4==1) | ((rpdiy4>=r1iwindy) & rpfin4==2) ) ///
																			 & !missing(r1iwindy) ///
																			 & !inlist(r1mcurln,.d,.m,.r,.l)
replace r1mcurln = r1iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																			 & ( (rpyrma5>=rpyrma) | (rpyrma>r1iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma2) | (rpyrma2>r1iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma3) | (rpyrma3>r1iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma4) | (rpyrma4>r1iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | (rpyrma6>r1iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | (rpyrma7>r1iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma5<=r1iwindy ///
																			 & ( rpfin5==-1 | ((rpdyr5>=r1iwindy) & rpfin5==1) | ((rpdiy5>=r1iwindy) & rpfin5==2) ) ///
																			 & !missing(r1iwindy) ///
																			 & !inlist(r1mcurln,.d,.m,.r,.l)
replace r1mcurln = r1iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																			 & ( (rpyrma6>=rpyrma) | (rpyrma>r1iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma2) | (rpyrma2>r1iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma3) | (rpyrma3>r1iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma4) | (rpyrma4>r1iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma5) | (rpyrma5>r1iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | (rpyrma7>r1iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma6<=r1iwindy ///
																			 & ( rpfin6==-1 | ((rpdyr6>=r1iwindy) & rpfin6==1) | ((rpdiy6>=r1iwindy) & rpfin6==2) ) ///
																			 & !missing(r1iwindy) ///
																			 & !inlist(r1mcurln,.d,.m,.r,.l)
replace r1mcurln = r1iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																			 & ( (rpyrma7>=rpyrma) | (rpyrma>r1iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma2) | (rpyrma2>r1iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma3) | (rpyrma3>r1iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma4) | (rpyrma4>r1iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma5) | (rpyrma5>r1iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | (rpyrma6>r1iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & rpyrma7<=r1iwindy ///
																			 & ( rpfin7==-1 | ((rpdyr7>=r1iwindy) & rpfin7==1) | ((rpdiy7>=r1iwindy) & rpfin7==2) ) ///
																			 & !missing(r1iwindy) ///
																			 & !inlist(r1mcurln,.d,.m,.r,.l)
label variable r1mcurln "r1mcurln:w1 r length of current marriage"

*wave 1 spouse length of current marriage
gen s1mcurln =.
spouse r1mcurln, result(s1mcurln) wave(1)
label variable s1mcurln "s1mcurln:w1 s length of current marriage"

*check

***length of longest marriage (including current)***
*generate wave 1 marriage lengths for each loop: 1-7
gen length1w1 = .
replace length1w1 = r1iwindy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !missing(r1iwindy) & ///
										(!inlist(rpfin,1,2,85,95) ///
											| ((rpdyr>=r1iwindy) & rpfin==1 & !inlist(rpdyr,-9,-8,-2,-1,.)) ///
											| ((rpdiy>=r1iwindy) & rpfin==2 & !inlist(rpdiy,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma<=rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpyrma<=rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpyrma<=rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpyrma<=rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpyrma<=rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpyrma<=rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma<=r1iwindy
replace length1w1 = rpdyr - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdyr,-9,-8,-2,-1,.) & rpdiv==1 & ! ( ///
										((rpdyr>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdyr>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdyr>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdyr>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdyr>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdyr>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma<=r1iwindy ///
										& rpdyr<=r1iwindy ///
										& !missing(r1iwindy)
replace length1w1 = rpdiy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdiy,-9,-8,-2,-1,.) & rpfin==2 & ! ( ///
										((rpdiy>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdiy>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdiy>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdiy>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdiy>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdiy>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma<=r1iwindy ///
										& rpdiy<=r1iwindy ///
										& !missing(r1iwindy)
										
gen length2w1 = .
replace length2w1 = r1iwindy - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !missing(r1iwindy) & ///
										(!inlist(rpfin2,1,2,85,95) ///
											| ((rpdyr2>=r1iwindy) & rpfin2==1 & !inlist(rpdyr2,-9,-8,-2,-1,.)) ///
											| ((rpdiy2>=r1iwindy) & rpfin2==2 & !inlist(rpdiy2,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma2<=rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpyrma2<=rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpyrma2<=rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpyrma2<=rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpyrma2<=rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpyrma2<=rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma2<=r1iwindy
replace length2w1 = rpdyr2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdyr2,-9,-8,-2,-1,.) & rpdiv2==1 & ! ( ///
										((rpdyr2>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdyr2>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdyr2>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdyr2>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdyr2>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdyr2>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma2<=r1iwindy ///
										& rpdyr2<=r1iwindy ///
										& !missing(r1iwindy)
replace length2w1 = rpdiy2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdiy2,-9,-8,-2,-1,.) & rpfin2==2 & ! ( ///
										((rpdiy2>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdiy2>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdiy2>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdiy2>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdiy2>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdiy2>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma2<=r1iwindy ///
										& rpdiy2<=r1iwindy ///
										& !missing(r1iwindy)

gen length3w1 = .
replace length3w1 = r1iwindy - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !missing(r1iwindy) & ///
										(!inlist(rpfin3,1,2,85,95) ///
											| ((rpdyr3>=r1iwindy) & rpfin3==1 & !inlist(rpdyr3,-9,-8,-2,-1,.)) ///
											| ((rpdiy3>=r1iwindy) & rpfin3==2 & !inlist(rpdiy3,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma3<=rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpyrma3<=rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpyrma3<=rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpyrma3<=rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpyrma3<=rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpyrma3<=rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma3<=r1iwindy
replace length3w1 = rpdyr3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdyr3,-9,-8,-2,-1,.) & rpdiv3==1 & ! ( ///
										((rpdyr3>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdyr3>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdyr3>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdyr3>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdyr3>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdyr3>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma3<=r1iwindy ///
										& rpdyr3<=r1iwindy ///
										& !missing(r1iwindy)
replace length3w1 = rpdiy3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdiy3,-9,-8,-2,-1,.) & rpfin3==2 & ! ( ///
										((rpdiy3>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdiy3>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdiy3>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdiy3>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdiy3>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdiy3>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma3<=r1iwindy ///
										& rpdiy3<=r1iwindy ///
										& !missing(r1iwindy)

gen length4w1 = .
replace length4w1 = r1iwindy - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !missing(r1iwindy) & ///
										(!inlist(rpfin4,1,2,85,95) ///
											| ((rpdyr4>=r1iwindy) & rpfin4==1 & !inlist(rpdyr4,-9,-8,-2,-1,.)) ///
											| ((rpdiy4>=r1iwindy) & rpfin4==2 & !inlist(rpdiy4,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma4<=rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpyrma4<=rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpyrma4<=rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpyrma4<=rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpyrma4<=rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpyrma4<=rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma4<=r1iwindy
replace length4w1 = rpdyr4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdyr4,-9,-8,-2,-1,.) & rpdiv4==1 & ! ( ///
										((rpdyr4>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdyr4>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdyr4>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdyr4>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdyr4>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdyr4>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma4<=r1iwindy ///
										& rpdyr4<=r1iwindy ///
										& !missing(r1iwindy)
replace length4w1 = rpdiy4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdiy4,-9,-8,-2,-1,.) & rpfin4==2 & ! ( ///
										((rpdiy4>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdiy4>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdiy4>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdiy4>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdiy4>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdiy4>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma4<=r1iwindy ///
										& rpdiy4<=r1iwindy ///
										& !missing(r1iwindy)

gen length5w1 = .
replace length5w1 = r1iwindy - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !missing(r1iwindy) & ///
										(!inlist(rpfin5,1,2,85,95) ///
											| ((rpdyr5>=r1iwindy) & rpfin5==1 & !inlist(rpdyr5,-9,-8,-2,-1,.)) ///
											| ((rpdiy5>=r1iwindy) & rpfin5==2 & !inlist(rpdiy5,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma5<=rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpyrma5<=rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpyrma5<=rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpyrma5<=rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpyrma5<=rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpyrma5<=rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma5<=r1iwindy
replace length5w1 = rpdyr5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdyr5,-9,-8,-2,-1,.) & rpdiv5==1 & ! ( ///
										((rpdyr5>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdyr5>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdyr5>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdyr5>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdyr5>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdyr5>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma5<=r1iwindy ///
										& rpdyr5<=r1iwindy ///
										& !missing(r1iwindy)
replace length5w1 = rpdiy5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdiy5,-9,-8,-2,-1,.) & rpfin5==2 & ! ( ///
										((rpdiy5>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdiy5>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdiy5>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdiy5>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdiy5>rpyrma6) & (rpyrma6<=r1iwindy) ) | ///
										((rpdiy5>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma5<=r1iwindy ///
										& rpdiy5<=r1iwindy ///
										& !missing(r1iwindy)

gen length6w1 = .
replace length6w1 = r1iwindy - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !missing(r1iwindy) & ///
										(!inlist(rpfin6,1,2,85,95) ///
											| ((rpdyr6>=r1iwindy) & rpfin6==1 & !inlist(rpdyr6,-9,-8,-2,-1,.)) ///
											| ((rpdiy6>=r1iwindy) & rpfin6==2 & !inlist(rpdiy6,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma6<=rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpyrma6<=rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpyrma6<=rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpyrma6<=rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpyrma6<=rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpyrma6<=rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma6<=r1iwindy
replace length6w1 = rpdyr6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdyr6,-9,-8,-2,-1,.) & rpdiv6==1 & ! ( ///
										((rpdyr6>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdyr6>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdyr6>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdyr6>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdyr6>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdyr6>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma6<=r1iwindy ///
										& rpdyr6<=r1iwindy ///
										& !missing(r1iwindy)
replace length6w1 = rpdiy6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdiy6,-9,-8,-2,-1,.) & rpfin6==2 & ! ( ///
										((rpdiy6>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdiy6>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdiy6>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdiy6>rpyrma4) & (rpyrma5<=r1iwindy) ) | ///
										((rpdiy6>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdiy6>rpyrma7) & (rpyrma7<=r1iwindy) ) ) ///
										& rpyrma6<=r1iwindy ///
										& rpdiy6<=r1iwindy ///
										& !missing(r1iwindy)

gen length7w1 = .
replace length7w1 = r1iwindy - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !missing(r1iwindy) & ///
										(!inlist(rpfin7,1,2,85,95) ///
											| ((rpdyr7>=r1iwindy) & rpfin7==1 & !inlist(rpdyr7,-9,-8,-2,-1,.)) ///
											| ((rpdiy7>=r1iwindy) & rpfin7==2 & !inlist(rpdiy7,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma7<=rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpyrma7<=rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpyrma7<=rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpyrma7<=rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpyrma7<=rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpyrma7<=rpyrma6) & (rpyrma6<=r1iwindy) ) ) ///
										& rpyrma7<=r1iwindy
replace length7w1 = rpdyr7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdyr7,-9,-8,-2,-1,.) & rpdiv7==1 & ! ( ///
										((rpdyr7>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdyr7>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdyr7>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdyr7>rpyrma4) & (rpyrma4<=r1iwindy) ) | ///
										((rpdyr7>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdyr7>rpyrma6) & (rpyrma6<=r1iwindy) ) ) ///
										& rpyrma7<=r1iwindy ///
										& rpdyr7<=r1iwindy ///
										& !missing(r1iwindy)
replace length7w1 = rpdiy7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdiy7,-9,-8,-2,-1,.) & rpfin7==2 & ! ( ///
										((rpdiy7>rpyrma) & (rpyrma<=r1iwindy) ) | ///
										((rpdiy7>rpyrma2) & (rpyrma2<=r1iwindy) ) | ///
										((rpdiy7>rpyrma3) & (rpyrma3<=r1iwindy) ) | ///
										((rpdiy7>rpyrma4) & (rpyrma5<=r1iwindy) ) | ///
										((rpdiy7>rpyrma5) & (rpyrma5<=r1iwindy) ) | ///
										((rpdiy7>rpyrma6) & (rpyrma6<=r1iwindy) ) ) ///
										& rpyrma7<=r1iwindy ///
										& rpdiy7<=r1iwindy ///
										& !missing(r1iwindy)

*wave 1 respondent length of longest marriage
gen r1mlen =.
replace r1mlen = .l if rpmarst==. & inw1==1
replace r1mlen = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw1==1
replace r1mlen = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw1==1
replace r1mlen = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw1==1
replace r1mlen = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw1==1
replace r1mlen = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw1==1
replace r1mlen = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw1==1
replace r1mlen = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw1==1
replace r1mlen = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw1==1
replace r1mlen = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw1==1
replace r1mlen = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw1==1
replace r1mlen = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw1==1
replace r1mlen = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw1==1
replace r1mlen = max(length1w1, length2w1, length3w1, length4w1, length5w1, length6w1, length7w1) if !inlist(r1mlen,.d,.m,.r,.l)
label variable r1mlen "r1mlen:w1 r length of longest marriage"
drop length1w1-length7w1

*wave 1 spouse length of longest marriage
gen s1mlen =.
spouse r1mlen, result(s1mlen) wave(1)
label variable s1mlen "s1mlen:w1 s length of longest marriage"

*check

***flag for current marital status: without partnership***
*wave 1 respondent current marital status flag
gen r1mstatf =.
replace r1mstatf = .l if rpmarst==. & inw1==1
replace r1mstatf = 0 if (inlist(r1mstath,1,4,5,7) & r1mnev == 0) | ( r1mstath == 8 & r1mnev == 1 )
replace r1mstatf = 1 if r1mstath == 8 & r1mnev == 0 & !missing(r1mstath, r1mnev)
replace r1mstatf = 2 if inlist(r1mstath,1,4,5,7) & r1mnev == 1 & !missing(r1mstath, r1mnev)
replace r1mstatf = .m if r1mstath==.r
label variable r1mstatf "r1mstatf:w1 r mstath-flag diff w/marhist"

*wave 1 spouse current marital status flag
gen s1mstatf =.
spouse r1mstatf, result(s1mstatf) wave(1)
label variable s1mstatf "s1mstatf:w1 s mstath-flag diff w/marhist"

*value labels
label values r1mstatf mstatf
label values s1mstatf mstatf

*check

***place of birth***
*respondent place of birth
gen rabplace =.
missing_w1 apobr fqcbthr, result(rabplace)
replace rabplace = 1 if apobr == 1 | fqcbthr==1
replace rabplace = 11 if apobr == 2 | fqcbthr==2
label variable rabplace "rabplace: r place of birth"

*wave 1 spouse place of birth
gen s1bplace =.
spouse rabplace, result(s1bplace) wave(1)
label variable s1bplace "s1bplace:w1 s place of birth"

*value labels
label values rabplace place
label values s1bplace place

*check

***whether born in country of interview***
*respondent whether born in country of interview
gen rabcountry = .
missing_w1 apobr fqcbthr, result(rabcountry)
replace rabcountry = 0 if apobr==2 | fqcbthr==2
replace rabcountry = 1 if apobr==1 | fqcbthr==1
label variable rabcountry "rabcountry: r born in country of interview"
label values rabcountry bornin

*wave 1 spouse whether born in country of interview
gen s1bcountry = .
spouse rabcountry, result(s1bcountry) wave(1)
label variable s1bcountry "s1bcountry:w1 s born in country of interview"
label values s1bcountry bornin

*check 

***death date***
*respondent death year
gen radyear =.
replace radyear = .x   if yrdeath == -2
replace radyear =  yrdeath if inrange(yrdeath,1990,2020)
label variable radyear "radyear: r death year"

*wave 1 spouse death year
gen s1dyear =.
spouse radyear, result(s1dyear) wave(1)
label variable s1dyear "s1dyear:w1 s death year"



***drop ELSA index file raw variables***
drop `demo_w1_index'

***drop ELSA wave 0 common file raw variables***
drop `demo_w0_comn' yintb

***drop ELSA wave 0 1998 file raw variables***
drop `demo_w0_1998' w0_1998_yintb

***drop ELSA wave 0 1999 file raw variables***
drop w0_1999_yintb

***drop ELSA wave 0 2001 file raw variables***
drop w0_2001_yintb

***drop ELSA wave 1 core file raw variables***
drop `demo_w1_core' 

***drop ELSA wave 1 financial derived file raw variables***
drop `demo_w1_fina'

***drop ELSA wave 3 life history data variables***
drop `demo_w1_hist'

*******************************************************************************************

***merge with index file***
local demo_w2_index idahhw2 outindw2 mortwave outscw2 finstatw2 dobyear sex // w2wgt scw2wgt
merge 1:1 idauniq using "$index", keepusing(`demo_w2_index' persno) nogen

*index persno
gen i_persno=persno
drop persno

***merge with wave 2 core data***
local demo_w2_core PersNo iapid DhR DhR? DhR1? astratif hseclst hopid askpx1 hhresp ///
                   intdaty intdatm iintdty iintdtm indobyr ///
                   indager indsex fqethnr fqcbthr ///
                   FqMqua FqAQua fqquzm1 fqquzm2   ///
                   DiMar DiNMA DiNFA DiANM DiMaD DiANF DiFAD ///
                   mainhh1 painhh1 w2wgt scw2wgt
merge 1:1 idauniq using "$wave_2_core", keepusing(`demo_w2_core') nogen

***merge with wave 2 financial derived variables data***
local demo_w2_fina coupid
merge 1:1 idauniq using "$wave_2_fina", keepusing(`demo_w2_fina') nogen

***merge with wave 3 life history data***
local demo_w2_hist rpyrma rpyrma? rpmarst rpmarst? rpdiv rpdiv? rpdyr rpdyr? rpfin rpfin? rpdiy rpdiy? 
merge 1:1 idauniq using "$wave_3_hist", keepusing(`demo_w2_hist') nogen


***person specific identifier***
*wave 2 household id
gen hh2hhid =.
replace hh2hhid = idahhw2 if !inlist(idahhw2,-2,.)
label variable hh2hhid "wave 2 specific household serial number /num"

*check

gen hh2hhidc = string(hh2hhid)
label variable hh2hhidc "wave 2 specific household serial number /5-char"

***wave status: response indicator***
*wave 2 response indicator
gen inw2 =0
replace inw2 = 1 if inlist(outindw2,11,13,21,23)
label variable inw2 "inw2: =1 if respondent w2"

*value labels
label values inw2 inw

*check

***self-completion status: response indicator***
*wave 2 self-completion response indicator
gen inw2sc =0
replace inw2sc = 1 if outscw2==1
label variable inw2sc "inw2sc: =1 if respondent w2 self-completion"

*value labels
label values inw2sc inwsc

*check

***create temporary indicator of wave 2 spouse***
gen w2spouse=.
replace w2spouse = 0 if inw2==1
replace w2spouse = 1 if inlist(DhR ,1,2) | ///
											inlist(DhR2,1,2) | ///
											inlist(DhR3,1,2) | ///
											inlist(DhR4,1,2) | ///
											inlist(DhR5,1,2) | ///
											inlist(DhR6,1,2) | ///
											inlist(DhR7,1,2) | ///
											inlist(DhR8,1,2) | ///
											inlist(DhR9,1,2) | ///
											inlist(DhR10,1,2) | ///
											inlist(DhR11,1,2) | ///
											inlist(DhR12,1,2)
											
***couple identifier***
*wave 2 household id
gen h2coupid =.
replace h2coupid = coupid if !missing(coupid)
label variable h2coupid "wave 2 specific couple id number /num"

*check

*wave 2 household id (character)
gen str5 h2coupidc = string(h2coupid)
label variable h2coupidc "wave 2 specific couple id number /5-char"

***spouse identifier***
*wave 2 spouse id
gen s2idauniq =.
bysort coupid: replace s2idauniq = 0 if missing(idauniq[_n+1]) & _n==1 & inw2 ==1
bysort coupid: replace s2idauniq = idauniq[_n+1] if !missing(idauniq[_n+1], coupid)
bysort coupid: replace s2idauniq = idauniq[_n-1] if !missing(idauniq[_n-1], coupid)
label variable s2idauniq "s2idauniq:w2 spouse idauniq"

***wave status: interview status***
*wave 2 interview status
gen r2iwstat =.
replace r2iwstat = 0 if inlist(outindw2,-993,-992,-991) | mi(outindw2)
replace r2iwstat = 1 if inlist(outindw2,11,13,21,23)
replace r2iwstat = 4 if inlist(outindw2,51,52,53,54,71) | (!inlist(outindw2,11,13,21,23) & inlist(mortwave,31,32,33,41,42,43,51,52,53,61,63))
replace r2iwstat = 5 if inlist(mortwave,21,22,23)
replace r2iwstat = 9 if inlist(outindw2,-2,-1,31,43,44,45,46,56,60,68,78,79) & !inrange(mortwave,11,63)
label variable r2iwstat "r2iwstat:w2 r interview status"

*wave 2 spouse interview status
gen s2iwstat =.
spouse r2iwstat, result(s2iwstat) wave(2)
label variable s2iwstat "s2iwstat:w2 s interview status"

*value labels
label values r2iwstat wstat
label values s2iwstat wstat

*check 

***sample cohort***
*wave 2 respondent cohort
gen r2cohort_e=.
replace r2cohort_e = 1 if inlist(finstatw2,1,2,3)
replace r2cohort_e = 2 if inlist(finstatw2,5,6)
replace r2cohort_e = 3 if inlist(finstatw2,4)
label variable r2cohort_e "r2cohort_e:w2 r sample cohort, ELSA specific"

*wave 2 spouse cohort
gen s2cohort_e=.
spouse r2cohort_e, result(s2cohort_e) wave(2)
label variable s2cohort_e "s2cohort_e:w2 s sample cohort, ELSA specific"

*value labels
label values r2cohort_e cohort_e
label values s2cohort_e cohort_e

*check

***whether eligible for the elsa sample***
*wave 2 spouse eligibility
gen s2elsamp =.
spouse raelsamp, result(s2elsamp) wave(2)
label variable s2elsamp "s2elsamp:ELSA s sample-age eligible/Wave 1 Resp"

*value labels
label values s2elsamp elsaamp

***person-level cross-sectional weight, core sample***(Note: same as longitudinal weight only for wave 2)
*wave 2 respondent cross-sectional weight, core
gen r2cwtresp =.
replace r2cwtresp = w2wgt
label variable r2cwtresp "r2cwtresp:w2 r person-level cross-sectional weight, core sample"

*wave 2 spouse cross-sectional weight, core
gen s2cwtresp =.
spouse r2cwtresp, result(s2cwtresp) wave(2)
label variable s2cwtresp "s2cwtresp:w2 s person-level cross-sectional weight, core sample"

***person-level longitudinal weight, core sample***(Note: same as cross-sectional weight only for wave 2)
*wave 2 respondent longitudinal weight, core
gen r2lwtresp =.
replace r2lwtresp = w2wgt
label variable r2lwtresp "r2lwtresp:w2 r person-level longitudinal weight, core sample"

*wave 2 spouse longitudinal weight, core
gen s2lwtresp =.
spouse r2lwtresp, result(s2lwtresp) wave(2)
label variable s2lwtresp "s2lwtresp:w2 s person-level longitudinal weight, core sample"

*check

***person-level weight, self-completion sample***
*wave 2 respondent weight, self-completion sample
gen r2scwtresp =.
replace r2scwtresp = scw2wgt
label variable r2scwtresp "r2scwtresp:w2 r person-level weight, self-completion sample"

*wave 2 spouse weight, self-completion
gen s2scwtresp =.
spouse r2scwtresp, result(s2scwtresp) wave(2)
label variable s2scwtresp "s2scwtresp:w2 s person-level weight, self-completion sample"

*check

***spouse identifier***
*respondent number of spouse id's (update)
replace raspct = raspct +1 if s2idauniq != s1idauniq & !inlist(s2idauniq,0,.)
replace raspct = 0 if s2idauniq == 0 & missing(raspct)
replace raspct = 1 if !inlist(s2idauniq,0,.) & missing(raspct)

*check

*respondent first spouse id (update)
replace raspid1 = s2idauniq if !inlist(s2idauniq,0,.) & missing(raspid1)

*check

*respondent second spouse id (update)
replace raspid2 = s2idauniq if s2idauniq != raspid1 & !inlist(s2idauniq,0,.) & !inlist(raspid1,0,.)

*check

***sampling weight***
*wave 2 respondent stratification variable
gen r2strat =.
replace r2strat = astratif if astratif !=-5
label variable r2strat "r2strat:w2 hse stratification variable"

*check 

*respondent clustering variable
gen r2clust = .
replace r2clust = hseclst 
label variable r2clust "r2clust:w2 hse clustering variable"

*check

***number of household respondents*** 
*wave 2 household number of respondents
egen hh2hhresp = sum(inw2==1) if inw2==1, by(hh2hhid)
label variable hh2hhresp "hh2hhresp:w2 # core respondents in hh"

*check

***whether couple household***
*wave 2 household couple indicator
egen h2cpl = sum(inw2==1), by(coupid)
recode h2cpl (0=.) (1=0) (2=1)
label variable h2cpl "h2cpl:w2 whether coupled"

*value labels
label values h2cpl cpl

*check

***financial, family respondent***
*wave 2 respondent financial respondent indicator
gen r2finr =.
replace r2finr = 1 if PersNo == iapid & !inlist(iapid,.,-1,-9,-8)
replace r2finr = 0 if PersNo != iapid & inw2==1
label variable r2finr "r2finr:w2 r whether financial resp"

*wave 2 spouse financial respondent indicator
gen s2finr =.
spouse r2finr, result(s2finr) wave(2)
label variable s2finr "s2finr:w2 s whether financial resp"

*wave 2 couple financial respondent indicator
gen h2anyfin =.
replace h2anyfin = 0 if iapid==-1
replace h2anyfin = 1 if !inlist(iapid,.,-1) & inw2 ==1
label variable h2anyfin "h2anyfin:w2 whether any finr in couple"

*value labels
label values r2finr finr
label values s2finr  finr
label values h2anyfin finr

*check 

***household, family respondent***
*wave 2 respondent household respondent indicator
gen r2hhr =.
replace r2hhr = 1 if PersNo == hhresp & !inlist(hhresp,.,-1,-9,-8,97)
replace r2hhr = 0 if PersNo != hhresp & inw2==1
label variable r2hhr "r2hhr:w2 r whether hh resp"

*wave 2 spouse household respondent indicator
gen s2hhr =.
spouse r2hhr, result(s2hhr) wave(2)
label variable s2hhr "s2hhr:w2 s whether hh resp"

*value labels
label values r2hhr hhr
label values s2hhr hhr

*check

***housing, family respondent***
*wave 2 respondent housing respondent indicator
gen r2hor =.
replace r2hor = 1 if PersNo == hopid & !inlist(hopid,.,-1,-9,-8,98,99)
replace r2hor = 0 if PersNo != hopid & inw2 ==1
label variable r2hor "r2hor:w2 r whether housing resp"

*wave 2 spouse housing respondent indicator
gen s2hor =.
spouse r2hor, result(s2hor) wave(2)
label variable s2hor "s2hor:w2 s whether housing resp"

*wave 2 household housing respondent indicator
gen hh2anyho =.
replace hh2anyho = 0 if hopid==-1
replace hh2anyho = 1 if !inlist(hopid,.,-1) & inw2==1
label variable hh2anyho "hh2anyho:w2 whether any hor in hh"

*value labels
label values r2hor hor
label values s2hor hor
label values hh2anyho hor

*check

***whether proxy interview***
*wave 2 respondent proxy indicator
gen r2proxy =.
replace r2proxy = 1 if askpx1 ==1
replace r2proxy = 0 if askpx1 ==0
label variable r2proxy "r2proxy:w2 r whether proxy interview"

*wave 2 spouse proxy indicator
gen s2proxy =.
spouse r2proxy, result(s2proxy) wave(2)
label variable s2proxy "s2proxy:w2 s whether proxy interview"

*value labels
label values r2proxy proxy
label values s2proxy proxy

*check

***interview dates***
*wave 2 household interview date
gen hh2iwhh =.
replace hh2iwhh = ym(intdaty, intdatm) if inrange(intdaty, 2000, 2010) & inrange(intdatm, 1, 12)
label variable hh2iwhh "hh2iwhh:w2 household interview date"

*wave 2 household interview date flag
gen hh2iwhhf =.
replace hh2iwhhf = 0 if inrange(intdaty,2000, 2010) & inrange(intdatm,1,12)
replace hh2iwhhf = 1 if !inrange(intdatm,1,12) & inw2 ==1
replace hh2iwhhf = 2 if !inrange(intdaty,2000, 2010) & inw2 ==1
label variable hh2iwhhf "hh2iwhhf:w2 household interview date flag"

*wave 2 respondent individual interview date
gen r2iwind =.
replace r2iwind = ym(iintdty, iintdtm) if inrange(iintdty, 2000, 2010) & inrange(iintdtm, 1, 12)
label variable r2iwind "r2iwind:w2 r individual interview date"

*wave 2 spouse individual interview date
gen s2iwind =.
spouse r2iwind, result(s2iwind) wave(2)
label variable s2iwind "s2iwind:w2 s individual interview date"

*wave 2 respondent individual interview date flag
gen r2iwindf =.
replace r2iwindf = 0 if inrange(iintdty,2000, 2010) & inrange(iintdtm,1,12)
replace r2iwindf = 1 if !inrange(iintdtm,1,12) & inw2 ==1
replace r2iwindf = 2 if !inrange(iintdty,2000, 2010) & inw2 ==1
label variable r2iwindf "r2iwindf:w2 r individual interview date flag"

*wave 2 spouse individual interview date flag
gen s2iwindf =.
spouse r2iwindf, result(s2iwindf) wave(2)
label variable s2iwindf "s2iwindf:w2 s individual interview date flag"

*wave 2 household interview month
gen hh2iwhhm =.
replace hh2iwhhm = intdatm if inrange(intdatm,1,12)
label variable hh2iwhhm "hh2iwhhm:w2 household interview month"

*wave 2 household interview year
gen hh2iwhhy =.
replace hh2iwhhy = intdaty if inrange(intdaty,2000, 2010)
label variable hh2iwhhy "hh2iwhhy:w2 household interview year"

*wave 2 respondent individual interview month
gen r2iwindm =.
replace r2iwindm = iintdtm if inrange(iintdtm,1,12)
label variable r2iwindm "r2iwindm:w2 r individual interview month"

*wave 2 respondent individual interview year
gen r2iwindy =.
replace r2iwindy = iintdty if inrange(iintdty,2000, 2010)
label variable r2iwindy "r2iwindy:w2 r individual interview year"

*wave 2 spouse individual interview month
gen s2iwindm =.
spouse r2iwindm, result(s2iwindm) wave(2)
label variable s2iwindm "s2iwindm:w2 s individual interview month"

*wave 2 spouse individual interview year
gen s2iwindy =.
spouse r2iwindy, result(s2iwindy) wave(2)
label variable s2iwindy "s2iwindy:w2 s individual interview year"

*value labels
label values hh2iwhhf dateflag
label values r2iwindf dateflag
label values s2iwindf dateflag

*check


***birth date: year***
*respondent birth year (update)
replace rabyear = indobyr if inrange(indobyr,1900,2000) & (missing(rabyear) | rafbyear != 0)
replace rabyear = 1914 if indobyr == -7 & missing(rabyear)

*wave 2 spouse birth year
gen s2byear =.
spouse rabyear, result(s2byear) wave(2)
label variable s2byear "s2byear:w2 s birth year"

*respondent birth year flag
replace rafbyear = 0 if inrange(indobyr,1900,2000) & (mi(rafbyear) | rafbyear != 0)
replace rafbyear = 2 if indobyr == -7 & mi(rafbyear)

*wave 2 spouse birth year flag
gen s2fbyear =.
spouse rafbyear, result(s2fbyear) wave(2)
label variable s2fbyear "s2fbyear:w2 s flag birth year bottom-coded"
label values s2fbyear fbyear

*check 

***age at interview (in years)***
*wave 2 respondent age in years
gen r2agey=.
replace r2agey = indager if inrange(indager,10,90)
replace r2agey = 90 if indager==99
label variable r2agey "r2agey:w2 r age (years) at ivw"

*wave 2 spouse age in years
gen s2agey=.
spouse r2agey, result(s2agey) wave(2)
label variable s2agey "s2agey:w2 s age (years) at ivw"

*wave 2 respondent age in years flag
gen r2fagey=.
replace r2fagey = 0 if inrange(indager,10,90)
replace r2fagey = 1 if indager == 99
label variable r2fagey "r2fagey:w2 r flag age at iwv top-coded"
label values r2fagey fagey

*wave 2 spouse age in years flag
gen s2fagey=.
spouse r2fagey, result(s2fagey) wave(2)
label variable s2fagey "s2fagey:w2 s flag age at iwv top-coded"
label values s2fagey fagey

*check

***gender***
*respondent gender (update)
missing_w2 indsex if missing(ragender), result(ragender)
replace ragender = 1 if indsex == 1 & missing(ragender)
replace ragender = 2 if indsex == 2 & missing(ragender)

*wave 2 spouse gender
gen s2gender =.
spouse ragender, result(s2gender) wave(2)
label variable s2gender "s2gender:w2 s gender"

*respondent gender flag
replace rafgendr = 0 if (ragender == 1 & indsex == 1) | (ragender == 2 & indsex == 2)
replace rafgendr = 1 if (ragender == 1 & indsex == 2) | (ragender == 2 & indsex == 1)

*wave 2 spouse gender flag
gen s2fgendr = .
spouse rafgendr, result(s2fgendr) wave(2)
label variable s2fgendr "s2fgendr:w2 flag if problem with s gender"

*value labels
label values s2gender gender

label values rafgendr genderflag
label values s2fgendr genderflag

*check

***race, ethnicity: race***
*respondent race (update)
missing_w2 fqethnr if missing(raracem), result(raracem)
replace raracem = 1 if fqethnr == 1 & missing(raracem)
replace raracem = 4 if fqethnr == 4 & missing(raracem)
replace raracem = 4 if fqethnr == 2 & missing(raracem)

*wave 2 spouse race
gen s2racem =.
spouse raracem, result(s2racem) wave(2)
label variable s2racem "s2racem:w2 s race - masked"

*respondent race flag
replace raracef = 0 if (raracem == 1 & fqethnr == 1) | (raracem == 4 & fqethnr == 2)
replace raracef = 1 if (raracem == 1 & fqethnr == 2) | (raracem == 4 & fqethnr == 1)
replace raracef = .m if fqethnr==-1

*wave 2 spouse race flag
gen s2racef =.
spouse raracef, result(s2racef) wave(2)
label variable s2racef "s2racef:w2 flag if problem with s race"

*value labels
label values s2racem race
label values s2racef raceflag

*check

***education: categorical summary***
*respondent education categorically (update)
replace raeduc_e = 5 if (FqMqua == 1 | FqAQua == 1) & ( ///
														(fqquzm1 == 1 | fqquzm2 == 1) | ///
														(fqquzm1 == 2 | fqquzm2 == 2) | ///
														(fqquzm1 == 3 | fqquzm2 == 3) | ///
														(fqquzm1 == 23 | fqquzm2 == 23) | ///
														(fqquzm1 == 24 | fqquzm2 == 24) ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 4 if (FqMqua == 1 | FqAQua == 1) & ( ///
														(fqquzm1 == 4 | fqquzm2 == 4) | ///
														(fqquzm1 == 5 | fqquzm2 == 5) | ///
														(fqquzm1 == 6 | fqquzm2 == 6) | ///
														(fqquzm1 == 7 | fqquzm2 == 7) | ///
														(fqquzm1 == 9 | fqquzm2 == 9) | ///
														(fqquzm1 == 10 | fqquzm2 == 10) | ///
														(fqquzm1 == 11 | fqquzm2 == 11) | ///
														(fqquzm1 == 25 | fqquzm2 == 25) ) & (mi(raeduc_e) & raeduc_e != .o)													
replace raeduc_e = 3 if (FqMqua == 1 | FqAQua == 1) & ( ///
														(fqquzm1 == 8 | fqquzm2 == 8) | ///
														(fqquzm1 == 12 | fqquzm2 == 12) | ///
														(fqquzm1 == 13 | fqquzm2 == 13) | ///
														(fqquzm1 == 14 | fqquzm2 == 14) | ///
														(fqquzm1 == 15 | fqquzm2 == 15) | ///
														(fqquzm1 == 16 | fqquzm2 == 16) | ///
														(fqquzm1 == 26 | fqquzm2 == 26) ) & (mi(raeduc_e) & raeduc_e != .o)														
replace raeduc_e = 1 if (((FqMqua == 1 | FqAQua == 1) & ( ///
														(fqquzm1 == 17 | fqquzm2 == 17) | ///
														(fqquzm1 == 18 | fqquzm2 == 18) | ///
														(fqquzm1 == 19 | fqquzm2 == 19) | ///
														(fqquzm1 == 20 | fqquzm2 == 20) | ///
														(fqquzm1 == 21 | fqquzm2 == 21) | ///
														(fqquzm1 == 22 | fqquzm2 == 22) | ///
														(fqquzm1 == 27 | fqquzm2 == 27) )) | FqAQua == 2 )& (mi(raeduc_e) & raeduc_e != .o)													
missing_w2 FqMqua FqAQua fqquzm1 fqquzm2 if (mi(raeduc_e) & raeduc_e != .o), result(raeduc_e)
replace raeduc_e = .o if (FqMqua == 1 | FqAQua == 1) & ( ///
												 		(fqquzm1 ==28 | fqquzm2 ==28) | ///
												 		(fqquzm1 ==29 | fqquzm2 ==29) | ///
												 		(fqquzm1 ==95 | fqquzm2 ==95) ) & (mi(raeduc_e) & raeduc_e != .o)
														
*wave 2 spouse education categorically
gen s2educ_e =.
spouse raeduc_e, result(s2educ_e) wave(2)
label variable s2educ_e "s2educ_e:w2 s education (categ)"

*value labels
label values s2educ_e educcats

*check

***education: isced category***
*wave 2 respondent education isced category (update)
replace raedisced = .n if FqAQua == 2 & mi(raedisced) & !inlist(raedisced,.n,.o)
replace raedisced = 5 if (FqMqua == 1 | FqAQua == 1) & ( ///
														(fqquzm1 == 1 | fqquzm2 == 1) | ///
														(fqquzm1 == 23 | fqquzm2 == 23) | ///
														(fqquzm1 == 24 | fqquzm2 == 24) ) & (mi(raedisced) & !inlist(raedisced,.n,.o))
replace raedisced = 4 if (FqMqua == 1 | FqAQua == 1) & ( ///
														(fqquzm1 == 2 | fqquzm2 == 2) | ///
														(fqquzm1 == 3 | fqquzm2 == 3) | ///
														(fqquzm1 == 4 | fqquzm2 == 4) | ///
														(fqquzm1 == 6 | fqquzm2 == 6) )	& (mi(raedisced) & !inlist(raedisced,.n,.o))												
replace raedisced = 3 if (FqMqua == 1 | FqAQua == 1) & ( ///								
														(fqquzm1 == 5 | fqquzm2 == 5) | ///
													  (fqquzm1 == 7 | fqquzm2 == 7) | ///
													  (fqquzm1 == 8 | fqquzm2 == 8) | ///
														(fqquzm1 == 9 | fqquzm2 == 9) | ///
														(fqquzm1 == 10 | fqquzm2 == 10) | ///
														(fqquzm1 == 11 | fqquzm2 == 11) | ///
														(fqquzm1 == 25 | fqquzm2 == 25) | ///
														(fqquzm1 == 12 | fqquzm2 == 12) | ///
														(fqquzm1 == 13 | fqquzm2 == 13) | ///
														(fqquzm1 == 14 | fqquzm2 == 14) | ///
														(fqquzm1 == 15 | fqquzm2 == 15) | ///
														(fqquzm1 == 16 | fqquzm2 == 16) | ///
														(fqquzm1 == 26 | fqquzm2 == 26) | ///													
														(fqquzm1 == 17 | fqquzm2 == 17) | ///
														(fqquzm1 == 18 | fqquzm2 == 18) | ///
														(fqquzm1 == 19 | fqquzm2 == 19) | ///
														(fqquzm1 == 20 | fqquzm2 == 20) | ///
														(fqquzm1 == 21 | fqquzm2 == 21) | ///
														(fqquzm1 == 22 | fqquzm2 == 22) | ///
														(fqquzm1 == 27 | fqquzm2 == 27) ) & (mi(raedisced) & !inlist(raedisced,.n,.o))													
missing_w2 FqMqua FqAQua fqquzm1 fqquzm2 if (mi(raedisced) & !inlist(raedisced,.n,.o)), result(raedisced)
replace raedisced = .o if (FqMqua == 1 | FqAQua == 1) & ( ///
												 		(fqquzm1 ==28 | fqquzm2 ==28) | ///
												 		(fqquzm1 ==29 | fqquzm2 ==29) | ///
												 		(fqquzm1 ==95 | fqquzm2 ==95) ) & (mi(raedisced) & !inlist(raedisced,.n,.o))															 		
*wave 2 spouse education isced category
gen s2edisced =.
spouse raedisced, result(s2edisced) wave(2)
label variable s2edisced "s2edisced:w2 S education ISCED"
label val s2edisced educisced


***education: harmonized education category***
*wave 2 respondent education harmonized category (update)
replace raeducl = 3 if (FqMqua == 1 | FqAQua == 1) & ( ///
														(fqquzm1 == 1 | fqquzm2 == 1) | ///
														(fqquzm1 == 23 | fqquzm2 == 23) | ///
														(fqquzm1 == 24 | fqquzm2 == 24) ) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = 2 if (FqMqua == 1 | FqAQua == 1) & ( ///								
														(fqquzm1 == 2 | fqquzm2 == 2) | ///
														(fqquzm1 == 3 | fqquzm2 == 3) | ///
														(fqquzm1 == 4 | fqquzm2 == 4) | ///
														(fqquzm1 == 5 | fqquzm2 == 5) | ///
														(fqquzm1 == 6 | fqquzm2 == 6) | ///
													  (fqquzm1 == 7 | fqquzm2 == 7) | ///
													  (fqquzm1 == 8 | fqquzm2 == 8) | ///
														(fqquzm1 == 9 | fqquzm2 == 9) | ///
														(fqquzm1 == 10 | fqquzm2 == 10) | ///
														(fqquzm1 == 11 | fqquzm2 == 11) | ///
														(fqquzm1 == 25 | fqquzm2 == 25) | ///
														(fqquzm1 == 12 | fqquzm2 == 12) | ///
														(fqquzm1 == 13 | fqquzm2 == 13) | ///
														(fqquzm1 == 14 | fqquzm2 == 14) | ///
														(fqquzm1 == 15 | fqquzm2 == 15) | ///
														(fqquzm1 == 16 | fqquzm2 == 16) | ///
														(fqquzm1 == 26 | fqquzm2 == 26) | ///													
														(fqquzm1 == 17 | fqquzm2 == 17) | ///
														(fqquzm1 == 18 | fqquzm2 == 18) | ///
														(fqquzm1 == 19 | fqquzm2 == 19) | ///
														(fqquzm1 == 20 | fqquzm2 == 20) | ///
														(fqquzm1 == 21 | fqquzm2 == 21) | ///
														(fqquzm1 == 22 | fqquzm2 == 22) | ///
														(fqquzm1 == 27 | fqquzm2 == 27) ) & (mi(raeducl) & !inlist(raeducl,.o))												
replace raeducl = 1 if FqAQua == 2 & mi(raeducl) & !inlist(raeducl,.o)
missing_w2 FqMqua FqAQua fqquzm1 fqquzm2 if (mi(raeducl) & !inlist(raeducl,.o)), result(raeducl)
replace raeducl = .o if (FqMqua == 1 | FqAQua == 1) & ( ///
												 		(fqquzm1 ==28 | fqquzm2 ==28) | ///
												 		(fqquzm1 ==29 | fqquzm2 ==29) | ///
												 		(fqquzm1 ==95 | fqquzm2 ==95) ) & (mi(raeducl) & !inlist(raeducl,.o))															 		
label variable raeducl "raeducl:R harmonized education"
label values raeducl educharm

*wave 2 spouse education harmonized category
gen s2educl = .
spouse raeducl, result(s2educl) wave(2)
label variable s2educl "s2educl:w2 S harmonized education"
label values s2educl educharm

***current marital status: with implied partnerships***
*wave 2 respondent marital status with implied partnership
gen r2mstat=.
missing_w2 DiMar, result(r2mstat)
replace r2mstat = 1 if inlist(DiMar, 2, 3)
replace r2mstat = 4 if DiMar == 4
replace r2mstat = 5 if DiMar == 5
replace r2mstat = 7 if DiMar == 6
replace r2mstat = 8 if DiMar == 1
replace r2mstat = 3 if inlist(DiMar, 1, 5, 6) & !inlist(s2idauniq,0,.)
label variable r2mstat "r2mstat:w2 r marital status w/partners, filled"

*wave 2 spouse marital status with implied partnership
gen s2mstat=.
spouse r2mstat, result(s2mstat) wave(2)
label variable s2mstat "s2mstat:w2 s marital status w/partners, filled"

*value labels
label values r2mstat marwpart
label values s2mstat marwpart

*check

***current marital status: current implied partnership status***
*wave 2 respondent implied partnership status
gen r2mpart =.
missing_w2 DiMar, result(r2mpart)
replace r2mpart = 0 if inw2==1
replace r2mpart = 1 if inlist(DiMar, 1, 5, 6) & !inlist(s2idauniq,0,.)
label variable r2mpart "r2mpart:w2 r implied partnership status"

*wave 2 spouse implied partnership status
gen s2mpart =.
spouse r2mpart, result(s2mpart) wave(2)
label variable s2mpart "s2mpart:w2 s implied partnership status"

*value labels
label values r2mpart part
label values s2mpart part

*check

***current marital status: without implied partnerships***
*wave 2 respondent marital status without implied partnership
gen r2mstath =.
missing_w2 DiMar, result(r2mstath)
replace r2mstath = 1 if inlist(DiMar, 2, 3)
replace r2mstath = 4 if DiMar == 4
replace r2mstath = 5 if DiMar == 5
replace r2mstath = 7 if DiMar == 6
replace r2mstath = 8 if DiMar == 1
label variable r2mstath "r2mstath:w2 r marital status"

*wave 2 spouse marital status without partnership
gen s2mstath =.
spouse r2mstath, result(s2mstath) wave(2)
label variable s2mstath "s2mstath:w2 s marital status"

*value labels
label values r2mstath marwopart
label values s2mstath marwopart

*check

***flag for current marital status: without partnership

***number of marriages***
*wave 2 respondent number of marriages
gen r2mrct =.
replace r2mrct = .l if rpmarst==. & inw2==1
replace r2mrct = 0 if rpmarst!=. & inw2==1
replace r2mrct = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw2==1
replace r2mrct = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw2==1
replace r2mrct = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw2==1
replace r2mrct = r2mrct+1 if rpmarst==1 & rpyrma<=r2iwindy & !inlist(r2mrct,.d,.m,.r) & rpyrma>0 & !missing(r2iwindy)
replace r2mrct = r2mrct+1 if rpmarst2==1 & rpyrma2<=r2iwindy & !inlist(r2mrct,.d,.m,.r) & rpyrma2>0 & !missing(r2iwindy)
replace r2mrct = r2mrct+1 if rpmarst3==1 & rpyrma3<=r2iwindy & !inlist(r2mrct,.d,.m,.r) & rpyrma3>0 & !missing(r2iwindy)
replace r2mrct = r2mrct+1 if rpmarst4==1 & rpyrma4<=r2iwindy & !inlist(r2mrct,.d,.m,.r) & rpyrma4>0 & !missing(r2iwindy)
replace r2mrct = r2mrct+1 if rpmarst5==1 & rpyrma5<=r2iwindy & !inlist(r2mrct,.d,.m,.r) & rpyrma5>0 & !missing(r2iwindy)
replace r2mrct = r2mrct+1 if rpmarst6==1 & rpyrma6<=r2iwindy & !inlist(r2mrct,.d,.m,.r) & rpyrma6>0 & !missing(r2iwindy)
replace r2mrct = r2mrct+1 if rpmarst7==1 & rpyrma7<=r2iwindy & !inlist(r2mrct,.d,.m,.r) & rpyrma7>0 & !missing(r2iwindy)
label variable r2mrct "r2mrct:w2 r # marriages"

*wave 2 spouse number of marriages
gen s2mrct =.
spouse r2mrct, result(s2mrct) wave(2)
label variable s2mrct "s2mrct:w2 s # marriages"

*check

***marital history: never married***
*wave 2 respondent never married indicator
gen r2mnev =.
replace r2mnev = .l if rpmarst==. & inw2==1
replace r2mnev = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw2==1
replace r2mnev = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw2==1
replace r2mnev = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw2==1
replace r2mnev = 1 if (inlist(rpmarst,2,-1) | inlist(rpmarst2,2,-1) | inlist(rpmarst3,2,-1) | inlist(rpmarst4,2,-1) | inlist(rpmarst5,2,-1) | inlist(rpmarst6,2,-1) | inlist(rpmarst7,2,-1)) & inw2==1
replace r2mnev = 0 if rpmarst==1 & rpyrma<=r2iwindy & rpyrma>0 & !inlist(r2mnev,.d,.m,.r) & !missing(r2iwindy)
replace r2mnev = 0 if rpmarst2==1 & rpyrma2<=r2iwindy & rpyrma2>0 & !inlist(r2mnev,.d,.m,.r) & !missing(r2iwindy)
replace r2mnev = 0 if rpmarst3==1 & rpyrma3<=r2iwindy & rpyrma3>0 & !inlist(r2mnev,.d,.m,.r) & !missing(r2iwindy)
replace r2mnev = 0 if rpmarst4==1 & rpyrma4<=r2iwindy & rpyrma4>0 & !inlist(r2mnev,.d,.m,.r) & !missing(r2iwindy)
replace r2mnev = 0 if rpmarst5==1 & rpyrma5<=r2iwindy & rpyrma5>0 & !inlist(r2mnev,.d,.m,.r) & !missing(r2iwindy)
replace r2mnev = 0 if rpmarst6==1 & rpyrma6<=r2iwindy & rpyrma6>0 & !inlist(r2mnev,.d,.m,.r) & !missing(r2iwindy)
replace r2mnev = 0 if rpmarst7==1 & rpyrma7<=r2iwindy & rpyrma7>0 & !inlist(r2mnev,.d,.m,.r) & !missing(r2iwindy)
label variable r2mnev "r2mnev:w2 r never married"

*wave 2 spouse never married indicator
gen s2mnev =.
spouse r2mnev, result(s2mnev) wave(2)
label variable s2mnev "s2mnev:w2 s never married"

*value labels
label values r2mnev mnev
label values s2mnev mnev

*check

***marital history: # times divorced***
*wave 2 respondent number of times divorced
gen r2mdiv =.
replace r2mdiv = .l if rpmarst==. & inw2==1
replace r2mdiv = 0 if rpmarst!=. & inw2==1
replace r2mdiv = .d if (rpdiv==-8 | rpdiv2==-8 | rpdiv3==-8 | rpdiv4==-8 | rpdiv5==-8 | rpdiv6==-8 | rpdiv7==-8) & inw2==1
replace r2mdiv = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw2==1
replace r2mdiv = .m if missing(rpdiv, rpdiv2, rpdiv3, rpdiv4, rpdiv5, rpdiv6, rpdiv7) & rpmarst!=. & inw2==1
replace r2mdiv = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw2==1
replace r2mdiv = .r if (rpdiv==-9 | rpdiv2==-9 | rpdiv3==-9 | rpdiv4==-9 | rpdiv5==-9 | rpdiv6==-9 | rpdiv7==-9) & inw2==1
replace r2mdiv = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw2==1
replace r2mdiv = r2mdiv+1 if rpdiv==1 & rpdyr<=r2iwindy & !inlist(r1mdiv,.d,.m,.r) & rpdyr>0 & !missing(r2iwindy)
replace r2mdiv = r2mdiv+1 if rpdiv2==1 & rpdyr2<=r2iwindy & !inlist(r2mdiv,.d,.m,.r) & rpdyr2>0 & !missing(r2iwindy)
replace r2mdiv = r2mdiv+1 if rpdiv3==1 & rpdyr3<=r2iwindy & !inlist(r2mdiv,.d,.m,.r) & rpdyr3>0 & !missing(r2iwindy)
replace r2mdiv = r2mdiv+1 if rpdiv4==1 & rpdyr4<=r2iwindy & !inlist(r2mdiv,.d,.m,.r) & rpdyr4>0 & !missing(r2iwindy)
replace r2mdiv = r2mdiv+1 if rpdiv5==1 & rpdyr5<=r2iwindy & !inlist(r2mdiv,.d,.m,.r) & rpdyr5>0 & !missing(r2iwindy)
replace r2mdiv = r2mdiv+1 if rpdiv6==1 & rpdyr6<=r2iwindy & !inlist(r2mdiv,.d,.m,.r) & rpdyr6>0 & !missing(r2iwindy)
replace r2mdiv = r2mdiv+1 if rpdiv7==1 & rpdyr7<=r2iwindy & !inlist(r2mdiv,.d,.m,.r) & rpdyr7>0 & !missing(r2iwindy)
label variable r2mdiv "r2mdiv:w2 r # times divorced"

*wave 2 spouse number of times divorced
gen s2mdiv =.
spouse r2mdiv, result(s2mdiv) wave(2)
label variable s2mdiv "s2mdiv:w2 s # times divorced"

*check

***marital history: # times widowed***
*wave 2 respondent number of times widowed
gen r2mwid =.
replace r2mwid = .l if rpmarst==. & inw2==1
replace r2mwid = 0 if rpmarst!=. & inw2==1
replace r2mwid = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw2==1
replace r2mwid = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw2==1
replace r2mwid = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw2==1
replace r2mwid = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw2==1
replace r2mwid = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw2==1
replace r2mwid = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw2==1
replace r2mwid = r2mwid+1 if rpfin==2 & rpmarst==1 & rpdiy<=r2iwindy & !inlist(r2mwid,.d,.m,.r) & rpdiy>0 & !missing(r2iwindy)
replace r2mwid = r2mwid+1 if rpfin2==2 & rpmarst2==1 & rpdiy2<=r2iwindy & !inlist(r2mwid,.d,.m,.r) & rpdiy2>0 & !missing(r2iwindy)
replace r2mwid = r2mwid+1 if rpfin3==2 & rpmarst3==1 & rpdiy3<=r2iwindy & !inlist(r2mwid,.d,.m,.r) & rpdiy3>0 & !missing(r2iwindy)
replace r2mwid = r2mwid+1 if rpfin4==2 & rpmarst4==1 & rpdiy4<=r2iwindy & !inlist(r2mwid,.d,.m,.r) & rpdiy4>0 & !missing(r2iwindy)
replace r2mwid = r2mwid+1 if rpfin5==2 & rpmarst5==1 & rpdiy5<=r2iwindy & !inlist(r2mwid,.d,.m,.r) & rpdiy5>0 & !missing(r2iwindy)
replace r2mwid = r2mwid+1 if rpfin6==2 & rpmarst6==1 & rpdiy6<=r2iwindy & !inlist(r2mwid,.d,.m,.r) & rpdiy6>0 & !missing(r2iwindy)
replace r2mwid = r2mwid+1 if rpfin7==2 & rpmarst7==1 & rpdiy7<=r2iwindy & !inlist(r2mwid,.d,.m,.r) & rpdiy7>0 & !missing(r2iwindy)
label variable r2mwid "r2mwid:w2 r # times widowed"

*wave 2 spouse number of times widowed
gen s2mwid =.
spouse r2mwid, result(s2mwid) wave(2)
label variable s2mwid "s2mwid:w2 s # times widowed"

*check

***marital history: #times don't know how marriage ended***
*wave 2 respondent number of times dk marriage end
gen r2mend =.
replace r2mend = .l if rpmarst==. & inw2==1
replace r2mend = 0 if rpmarst!=. & inw2==1
replace r2mend = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw2==1
replace r2mend = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw2==1
replace r2mend = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw2==1
replace r2mend = r2mend+1 if !inlist(rpyrma,-9,-8,-1,.) ///
														 & !inlist(rpfin,1,2) ///
														 & (( ( (rpyrma<=rpyrma2) & (rpyrma2<=r2iwindy) ) ///
															 | ( (rpyrma<=rpyrma3) & (rpyrma3<=r2iwindy) ) ///
															 | ( (rpyrma<=rpyrma4) & (rpyrma4<=r2iwindy) ) ///
															 | ( (rpyrma<=rpyrma5) & (rpyrma5<=r2iwindy) ) ///
															 | ( (rpyrma<=rpyrma6) & (rpyrma6<=r2iwindy) ) ///
															 | ( (rpyrma<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) | inlist(rpfin,85,95) )  ///
														 & rpyrma<=r2iwindy ///
														 & !missing(r2iwindy) ///
														 & !inlist(r2mend,.d,.m,.r) 
replace r2mend = r2mend+1 if !inlist(rpyrma2,-9,-8,-1,.) ///
														 & !inlist(rpfin2,1,2) ///
														 & (( ( (rpyrma2<=rpyrma) & (rpyrma<=r2iwindy) ) ///
															 | ( (rpyrma2<=rpyrma3) & (rpyrma3<=r2iwindy) ) ///
															 | ( (rpyrma2<=rpyrma4) & (rpyrma4<=r2iwindy) ) ///
															 | ( (rpyrma2<=rpyrma5) & (rpyrma5<=r2iwindy) ) ///
															 | ( (rpyrma2<=rpyrma6) & (rpyrma6<=r2iwindy) ) ///
															 | ( (rpyrma2<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) | inlist(rpfin2,85,95) )  ///
														 & rpyrma2<=r2iwindy ///
														 & !missing(r2iwindy) ///
														 & !inlist(r2mend,.d,.m,.r) 
replace r2mend = r2mend+1 if !inlist(rpyrma3,-9,-8,-1,.) ///
														 & !inlist(rpfin3,1,2) ///
														 & (( ( (rpyrma3<=rpyrma) & (rpyrma<=r2iwindy) ) ///
															 | ( (rpyrma3<=rpyrma2) & (rpyrma2<=r2iwindy) ) ///
															 | ( (rpyrma3<=rpyrma4) & (rpyrma4<=r2iwindy) ) ///
															 | ( (rpyrma3<=rpyrma5) & (rpyrma5<=r2iwindy) ) ///
															 | ( (rpyrma3<=rpyrma6) & (rpyrma6<=r2iwindy) ) ///
															 | ( (rpyrma3<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) | inlist(rpfin3,85,95) )  ///
														 & rpyrma3<=r2iwindy ///
														 & !missing(r2iwindy) ///
														 & !inlist(r2mend,.d,.m,.r) 														 
replace r2mend = r2mend+1 if !inlist(rpyrma4,-9,-8,-1,.) ///
														 & !inlist(rpfin4,1,2) ///
														 & (( ( (rpyrma4<=rpyrma) & (rpyrma<=r2iwindy) ) ///
															 | ( (rpyrma4<=rpyrma2) & (rpyrma2<=r2iwindy) ) ///
															 | ( (rpyrma4<=rpyrma3) & (rpyrma3<=r2iwindy) ) ///
															 | ( (rpyrma4<=rpyrma5) & (rpyrma5<=r2iwindy) ) ///
															 | ( (rpyrma4<=rpyrma6) & (rpyrma6<=r2iwindy) ) ///
															 | ( (rpyrma4<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) | inlist(rpfin4,85,95) )  ///
														 & rpyrma4<=r2iwindy ///
														 & !missing(r2iwindy) ///
														 & !inlist(r2mend,.d,.m,.r) 	
replace r2mend = r2mend+1 if !inlist(rpyrma5,-9,-8,-1,.) ///
														 & !inlist(rpfin5,1,2) ///
														 & (( ( (rpyrma5<=rpyrma) & (rpyrma<=r2iwindy) ) ///
															 | ( (rpyrma5<=rpyrma2) & (rpyrma2<=r2iwindy) ) ///
															 | ( (rpyrma5<=rpyrma3) & (rpyrma3<=r2iwindy) ) ///
															 | ( (rpyrma5<=rpyrma4) & (rpyrma4<=r2iwindy) ) ///
															 | ( (rpyrma5<=rpyrma6) & (rpyrma6<=r2iwindy) ) ///
															 | ( (rpyrma5<=rpyrma7) & (rpyrma7<=r2iwindy) ) )  | inlist(rpfin5,85,95) ) ///
														 & rpyrma5<=r2iwindy ///
														 & !missing(r2iwindy) ///
														 & !inlist(r2mend,.d,.m,.r) 	
replace r2mend = r2mend+1 if !inlist(rpyrma6,-9,-8,-1,.) ///
														 & !inlist(rpfin6,1,2) ///
														 & (( ( (rpyrma6<=rpyrma) & (rpyrma<=r2iwindy) ) ///
															 | ( (rpyrma6<=rpyrma2) & (rpyrma2<=r2iwindy) ) ///
															 | ( (rpyrma6<=rpyrma3) & (rpyrma3<=r2iwindy) ) ///
															 | ( (rpyrma6<=rpyrma4) & (rpyrma4<=r2iwindy) ) ///
															 | ( (rpyrma6<=rpyrma5) & (rpyrma5<=r2iwindy) ) ///
															 | ( (rpyrma6<=rpyrma7) & (rpyrma7<=r2iwindy) ) )  | inlist(rpfin6,85,95) ) ///
														 & rpyrma6<=r2iwindy ///
														 & !missing(r2iwindy) ///
														 & !inlist(r2mend,.d,.m,.r) 	
replace r2mend = r2mend+1 if !inlist(rpyrma7,-9,-8,-1,.) ///
														 & !inlist(rpfin7,1,2) ///
														 & (( ( (rpyrma7<=rpyrma) & (rpyrma<=r2iwindy) ) ///
															 | ( (rpyrma7<=rpyrma2) & (rpyrma2<=r2iwindy) ) ///
															 | ( (rpyrma7<=rpyrma3) & (rpyrma3<=r2iwindy) ) ///
															 | ( (rpyrma7<=rpyrma4) & (rpyrma4<=r2iwindy) ) ///
															 | ( (rpyrma7<=rpyrma5) & (rpyrma5<=r2iwindy) ) ///
															 | ( (rpyrma7<=rpyrma6) & (rpyrma6<=r2iwindy) ) ) | inlist(rpfin7,85,95) )  ///
														 & rpyrma7<=r2iwindy ///
														 & !missing(r2iwindy) ///
														 & !inlist(r2mend,.d,.m,.r)
replace r2mend = r2mend-1 if ( ( (rpyrma7==rpyrma) & (rpyrma7<=r2iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma2) & (rpyrma7<=r2iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma3) & (rpyrma7<=r2iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma4) & (rpyrma7<=r2iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin4,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma5) & (rpyrma7<=r2iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin5,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma6) & (rpyrma7<=r2iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin6,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma) & (rpyrma6<=r2iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma2) & (rpyrma6<=r2iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma3) & (rpyrma6<=r2iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma4) & (rpyrma6<=r2iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin4,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma5) & (rpyrma6<=r2iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin5,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma) & (rpyrma5<=r2iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma2) & (rpyrma5<=r2iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma3) & (rpyrma5<=r2iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma4) & (rpyrma5<=r2iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin4,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma4==rpyrma) & (rpyrma4<=r2iwindy) & !inlist(rpfin4,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma4,-9,-8,-1,.) ) ///
															 | ( (rpyrma4==rpyrma2) & (rpyrma4<=r2iwindy) & !inlist(rpfin4,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma4,-9,-8,-1,.) ) ///
															 | ( (rpyrma4==rpyrma3) & (rpyrma4<=r2iwindy) & !inlist(rpfin4,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma4,-9,-8,-1,.) ) ///
															 | ( (rpyrma3==rpyrma) & (rpyrma3<=r2iwindy) & !inlist(rpfin3,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma3,-9,-8,-1,.) ) ///
															 | ( (rpyrma3==rpyrma2) & (rpyrma3<=r2iwindy) & !inlist(rpfin3,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma3,-9,-8,-1,.) ) ///
															 | ( (rpyrma2==rpyrma) & (rpyrma2<=r2iwindy) & !inlist(rpfin2,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma2,-9,-8,-1,.) ) ) ///
														 & !missing(r2iwindy) ///
														 & !inlist(r2mend,.d,.m,.r)															 
label variable r2mend "r2mend:w2 r # times unknown end marriage"

*wave 2 spouse number of times dk marriage end
gen s2mend =.
spouse r2mend, result(s2mend) wave(2)
label variable s2mend "s2mend:w2 s # times unknown end marriage"

*check

***length of current marriage***
*wave 2 respondent length of current marriage
gen r2mcurln =.
replace r2mcurln = .l if rpmarst==. & inw2==1
replace r2mcurln = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw2==1
replace r2mcurln = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw2==1
replace r2mcurln = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw2==1
replace r2mcurln = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw2==1
replace r2mcurln = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw2==1
replace r2mcurln = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw2==1
replace r2mcurln = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw2==1
replace r2mcurln = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw2==1
replace r2mcurln = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw2==1
replace r2mcurln = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw2==1
replace r2mcurln = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw2==1
replace r2mcurln = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw2==1
replace r2mcurln = r2iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																			& ( (rpyrma>=rpyrma2) | (rpyrma2>r2iwindy) | inlist(rpyrma2,-1,.) ) ///
																			& ( (rpyrma>=rpyrma3) | (rpyrma3>r2iwindy) | inlist(rpyrma3,-1,.) ) ///
																			& ( (rpyrma>=rpyrma4) | (rpyrma4>r2iwindy) | inlist(rpyrma4,-1,.) ) ///
																			& ( (rpyrma>=rpyrma5) | (rpyrma5>r2iwindy) | inlist(rpyrma5,-1,.) ) ///
																			& ( (rpyrma>=rpyrma6) | (rpyrma6>r2iwindy) | inlist(rpyrma6,-1,.) ) ///
																			& ( (rpyrma>=rpyrma7) | (rpyrma7>r2iwindy) | inlist(rpyrma7,-1,.) ) ///
																			& rpyrma<=r2iwindy ///
																			& ( rpfin==-1 | ((rpdyr>=r2iwindy) & rpfin==1) | ((rpdiy>=r2iwindy) & rpfin==2) ) ///
																			& !missing(r2iwindy) ///
																			& !inlist(r2mcurln,.d,.m,.r,.l)
replace r2mcurln = r2iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
 																			 & ( (rpyrma2>=rpyrma) | (rpyrma>r2iwindy) | inlist(rpyrma,-1,.) ) ///
	 																		 & ( (rpyrma2>=rpyrma3) | (rpyrma3>r2iwindy) | inlist(rpyrma3,-1,.) ) ///
		 																	 & ( (rpyrma2>=rpyrma4) | (rpyrma4>r2iwindy) | inlist(rpyrma4,-1,.) ) ///
			 																 & ( (rpyrma2>=rpyrma5) | (rpyrma5>r2iwindy) | inlist(rpyrma5,-1,.) ) ///
				 															 & ( (rpyrma2>=rpyrma6) | (rpyrma6>r2iwindy) | inlist(rpyrma6,-1,.) ) ///
					 														 & ( (rpyrma2>=rpyrma7) | (rpyrma7>r2iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma2<=r2iwindy ///
																			 & ( rpfin2==-1 | ((rpdyr2>=r2iwindy) & rpfin2==1) | ((rpdiy2>=r2iwindy) & rpfin2==2) ) ///
																			 & !missing(r2iwindy) ///
																			 & !inlist(r2mcurln,.d,.m,.r,.l)
replace r2mcurln = r2iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																			 & ( (rpyrma3>=rpyrma) | (rpyrma>r2iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma2) | (rpyrma2>r2iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma4) | (rpyrma4>r2iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma5) | (rpyrma5>r2iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma6) | (rpyrma6>r2iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma7) | (rpyrma7>r2iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma3<=r2iwindy ///
																			 & ( rpfin3==-1 | ((rpdyr3>=r2iwindy) & rpfin3==1) | ((rpdiy3>=r2iwindy) & rpfin3==2) ) ///
																			 & !missing(r2iwindy) ///
																			 & !inlist(r2mcurln,.d,.m,.r,.l)
replace r2mcurln = r2iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																			 & ( (rpyrma4>=rpyrma) | (rpyrma>r2iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma2) | (rpyrma2>r2iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma3) | (rpyrma3>r2iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma5) | (rpyrma5>r2iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma6) | (rpyrma6>r2iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma7) | (rpyrma7>r2iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & rpyrma4<=r2iwindy ///
																			 & ( rpfin4==-1 | ((rpdyr4>=r2iwindy) & rpfin4==1) | ((rpdiy4>=r2iwindy) & rpfin4==2) ) ///
																			 & !missing(r2iwindy) ///
																			 & !inlist(r2mcurln,.d,.m,.r,.l)
replace r2mcurln = r2iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																			 & ( (rpyrma5>=rpyrma) | (rpyrma>r2iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma2) | (rpyrma2>r2iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma3) | (rpyrma3>r2iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma4) | (rpyrma4>r2iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | (rpyrma6>r2iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | (rpyrma7>r2iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma5<=r2iwindy ///
																			 & ( rpfin5==-1 | ((rpdyr5>=r2iwindy) & rpfin5==1) | ((rpdiy5>=r2iwindy) & rpfin5==2) ) ///
																			 & !missing(r2iwindy) ///
																			 & !inlist(r2mcurln,.d,.m,.r,.l)
replace r2mcurln = r2iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																			 & ( (rpyrma6>=rpyrma) | (rpyrma>r2iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma2) | (rpyrma2>r2iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma3) | (rpyrma3>r2iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma4) | (rpyrma4>r2iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma5) | (rpyrma5>r2iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | (rpyrma7>r2iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma6<=r2iwindy ///
																			 & ( rpfin6==-1 | ((rpdyr6>=r2iwindy) & rpfin6==1) | ((rpdiy6>=r2iwindy) & rpfin6==2) ) ///
																			 & !missing(r2iwindy) ///
																			 & !inlist(r2mcurln,.d,.m,.r,.l)
replace r2mcurln = r2iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																			 & ( (rpyrma7>=rpyrma) | (rpyrma>r2iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma2) | (rpyrma2>r2iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma3) | (rpyrma3>r2iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma4) | (rpyrma4>r2iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma5) | (rpyrma5>r2iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | (rpyrma6>r2iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & rpyrma7<=r2iwindy ///
																			 & ( rpfin7==-1 | ((rpdyr7>=r2iwindy) & rpfin7==1) | ((rpdiy7>=r2iwindy) & rpfin7==2) ) ///
																			 & !missing(r2iwindy) ///
																			 & !inlist(r2mcurln,.d,.m,.r,.l)
label variable r2mcurln "r2mcurln:w2 r length of current marriage"

*wave 2 spouse length of current marriage
gen s2mcurln =.
spouse r2mcurln, result(s2mcurln) wave(2)
label variable s2mcurln "s2mcurln:w2 s length of current marriage"

*check

***length of  marriage (including current)***
*generate wave 2 marriage lengths for each loop: 1-7
gen	length1w2 =.											
replace length1w2 = r2iwindy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !missing(r2iwindy) & ///
										(!inlist(rpfin,1,2,85,95) ///
											| ((rpdyr>=r2iwindy) & rpfin==1 & !inlist(rpdyr,-9,-8,-2,-1,.)) ///
											| ((rpdiy>=r2iwindy) & rpfin==2 & !inlist(rpdiy,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma<=rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpyrma<=rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpyrma<=rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpyrma<=rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpyrma<=rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpyrma<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma<=r2iwindy
replace length1w2 = rpdyr - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdyr,-9,-8,-2,-1,.) & rpdiv==1 & ! ( ///
										((rpdyr>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdyr>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdyr>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdyr>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdyr>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdyr>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma<=r2iwindy ///
										& rpdyr<=r2iwindy ///
										& !missing(r2iwindy)
replace length1w2 = rpdiy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdiy,-9,-8,-2,-1,.) & rpfin==2 & ! ( ///
										((rpdiy>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdiy>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdiy>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdiy>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdiy>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdiy>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma<=r2iwindy ///
										& rpdiy<=r2iwindy ///
										& !missing(r2iwindy)

gen	length2w2 =.											
replace length2w2 = r2iwindy - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !missing(r2iwindy) & ///
										(!inlist(rpfin2,1,2,85,95) ///
											| ((rpdyr2>=r2iwindy) & rpfin2==1 & !inlist(rpdyr2,-9,-8,-2,-1,.)) ///
											| ((rpdiy2>=r2iwindy) & rpfin2==2 & !inlist(rpdiy2,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma2<=rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpyrma2<=rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpyrma2<=rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpyrma2<=rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpyrma2<=rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpyrma2<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma2<=r2iwindy
replace length2w2 = rpdyr2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdyr2,-9,-8,-2,-1,.) & rpdiv2==1 & ! ( ///
										((rpdyr2>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdyr2>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdyr2>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdyr2>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdyr2>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdyr2>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma2<=r2iwindy ///
										& rpdyr2<=r2iwindy ///
										& !missing(r2iwindy)
replace length2w2 = rpdiy2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdiy2,-9,-8,-2,-1,.) & rpfin2==2 & ! ( ///
										((rpdiy2>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdiy2>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdiy2>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdiy2>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdiy2>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdiy2>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma2<=r2iwindy ///
										& rpdiy2<=r2iwindy ///
										& !missing(r2iwindy)

gen	length3w2 =.											
replace length3w2 = r2iwindy - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !missing(r2iwindy) & ///
										(!inlist(rpfin3,1,2,85,95) ///
											| ((rpdyr3>=r2iwindy) & rpfin3==1 & !inlist(rpdyr3,-9,-8,-2,-1,.)) ///
											| ((rpdiy3>=r2iwindy) & rpfin3==2 & !inlist(rpdiy3,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma3<=rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpyrma3<=rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpyrma3<=rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpyrma3<=rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpyrma3<=rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpyrma3<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma3<=r2iwindy
replace length3w2 = rpdyr3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdyr3,-9,-8,-2,-1,.) & rpdiv3==1 & ! ( ///
										((rpdyr3>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdyr3>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdyr3>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdyr3>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdyr3>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdyr3>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma3<=r2iwindy ///
										& rpdyr3<=r2iwindy ///
										& !missing(r2iwindy)
replace length3w2 = rpdiy3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdiy3,-9,-8,-2,-1,.) & rpfin3==2 & ! ( ///
										((rpdiy3>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdiy3>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdiy3>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdiy3>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdiy3>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdiy3>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma3<=r2iwindy ///
										& rpdiy3<=r2iwindy ///
										& !missing(r2iwindy)

gen	length4w2 =.											
replace length4w2 = r2iwindy - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !missing(r2iwindy) & ///
										(!inlist(rpfin4,1,2,85,95) ///
											| ((rpdyr4>=r2iwindy) & rpfin4==1 & !inlist(rpdyr4,-9,-8,-2,-1,.)) ///
											| ((rpdiy4>=r2iwindy) & rpfin4==2 & !inlist(rpdiy4,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma4<=rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpyrma4<=rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpyrma4<=rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpyrma4<=rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpyrma4<=rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpyrma4<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma4<=r2iwindy
replace length4w2 = rpdyr4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdyr4,-9,-8,-2,-1,.) & rpdiv4==1 & ! ( ///
										((rpdyr4>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdyr4>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdyr4>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdyr4>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdyr4>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdyr4>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma4<=r2iwindy ///
										& rpdyr4<=r2iwindy ///
										& !missing(r2iwindy)
replace length4w2 = rpdiy4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdiy4,-9,-8,-2,-1,.) & rpfin4==2 & ! ( ///
										((rpdiy4>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdiy4>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdiy4>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdiy4>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdiy4>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdiy4>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma4<=r2iwindy ///
										& rpdiy4<=r2iwindy ///
										& !missing(r2iwindy)

gen	length5w2 =.											
replace length5w2 = r2iwindy - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !missing(r2iwindy) & ///
										(!inlist(rpfin5,1,2,85,95) ///
											| ((rpdyr5>=r2iwindy) & rpfin5==1 & !inlist(rpdyr5,-9,-8,-2,-1,.)) ///
											| ((rpdiy5>=r2iwindy) & rpfin5==2 & !inlist(rpdiy5,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma5<=rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpyrma5<=rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpyrma5<=rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpyrma5<=rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpyrma5<=rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpyrma5<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma5<=r2iwindy
replace length5w2 = rpdyr5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdyr5,-9,-8,-2,-1,.) & rpdiv5==1 & ! ( ///
										((rpdyr5>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdyr5>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdyr5>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdyr5>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdyr5>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdyr5>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma5<=r2iwindy ///
										& rpdyr5<=r2iwindy ///
										& !missing(r2iwindy)
replace length5w2 = rpdiy5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdiy5,-9,-8,-2,-1,.) & rpfin5==2 & ! ( ///
										((rpdiy5>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdiy5>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdiy5>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdiy5>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdiy5>rpyrma6) & (rpyrma6<=r2iwindy) ) | ///
										((rpdiy5>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma5<=r2iwindy ///
										& rpdiy5<=r2iwindy ///
										& !missing(r2iwindy)
										
gen	length6w2 =.											
replace length6w2 = r2iwindy - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !missing(r2iwindy) & ///
										(!inlist(rpfin6,1,2,85,95) ///
											| ((rpdyr6>=r2iwindy) & rpfin6==1 & !inlist(rpdyr6,-9,-8,-2,-1,.)) ///
											| ((rpdiy6>=r2iwindy) & rpfin6==2 & !inlist(rpdiy6,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma6<=rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpyrma6<=rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpyrma6<=rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpyrma6<=rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpyrma6<=rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpyrma6<=rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma6<=r2iwindy
replace length6w2 = rpdyr6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdyr6,-9,-8,-2,-1,.) & rpdiv6==1 & ! ( ///
										((rpdyr6>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdyr6>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdyr6>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdyr6>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdyr6>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdyr6>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma6<=r2iwindy ///
										& rpdyr6<=r2iwindy ///
										& !missing(r2iwindy)
replace length6w2 = rpdiy6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdiy6,-9,-8,-2,-1,.) & rpfin6==2 & ! ( ///
										((rpdiy6>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdiy6>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdiy6>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdiy6>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdiy6>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdiy6>rpyrma7) & (rpyrma7<=r2iwindy) ) ) ///
										& rpyrma6<=r2iwindy ///
										& rpdiy6<=r2iwindy ///
										& !missing(r2iwindy)
										
gen	length7w2 =.											
replace length7w2 = r2iwindy - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !missing(r2iwindy) & ///
										(!inlist(rpfin7,1,2,85,95) ///
											| ((rpdyr7>=r2iwindy) & rpfin7==1 & !inlist(rpdyr7,-9,-8,-2,-1,.)) ///
											| ((rpdiy7>=r2iwindy) & rpfin7==2 & !inlist(rpdiy7,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma7<=rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpyrma7<=rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpyrma7<=rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpyrma7<=rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpyrma7<=rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpyrma7<=rpyrma6) & (rpyrma6<=r2iwindy) ) ) ///
										& rpyrma7<=r2iwindy
replace length7w2 = rpdyr7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdyr7,-9,-8,-2,-1,.) & rpdiv7==1 & ! ( ///
										((rpdyr7>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdyr7>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdyr7>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdyr7>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdyr7>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdyr7>rpyrma6) & (rpyrma6<=r2iwindy) ) ) ///
										& rpyrma7<=r2iwindy ///
										& rpdyr7<=r2iwindy ///
										& !missing(r2iwindy)
replace length7w2 = rpdiy7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdiy7,-9,-8,-2,-1,.) & rpfin7==2 & ! ( ///
										((rpdiy7>rpyrma) & (rpyrma<=r2iwindy) ) | ///
										((rpdiy7>rpyrma2) & (rpyrma2<=r2iwindy) ) | ///
										((rpdiy7>rpyrma3) & (rpyrma3<=r2iwindy) ) | ///
										((rpdiy7>rpyrma4) & (rpyrma4<=r2iwindy) ) | ///
										((rpdiy7>rpyrma5) & (rpyrma5<=r2iwindy) ) | ///
										((rpdiy7>rpyrma6) & (rpyrma6<=r2iwindy) ) ) ///
										& rpyrma7<=r2iwindy ///
										& rpdiy7<=r2iwindy ///
										& !missing(r2iwindy)

*wave 2 respondent length of longest marriage
gen r2mlen =.
replace r2mlen = .l if rpmarst==. & inw2==1
replace r2mlen = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw2==1
replace r2mlen = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw2==1
replace r2mlen = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw2==1
replace r2mlen = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw2==1
replace r2mlen = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw2==1
replace r2mlen = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw2==1
replace r2mlen = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw2==1
replace r2mlen = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw2==1
replace r2mlen = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw2==1
replace r2mlen = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw2==1
replace r2mlen = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw2==1
replace r2mlen = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw2==1
replace r2mlen = max(length1w2, length2w2, length3w2, length4w2, length5w2, length6w2, length7w2) if !inlist(r2mlen,.d,.m,.r,.l)
label variable r2mlen "r2mlen:w2 r length of longest marriage"
drop length1w2-length7w2

*wave 2 spouse length of longest marriage
gen s2mlen =.
spouse r2mlen, result(s2mlen) wave(2)
label variable s2mlen "s2mlen:w2 s length of longest marriage"

*check

***flag for current marital status: without partnership***
*wave 2 respondent current marital status flag
gen r2mstatf =.
replace r2mstatf = .l if rpmarst==. & inw2==1
replace r2mstatf = 0 if (inlist(r2mstath,1,4,5,7) & r2mnev == 0) | ( r2mstath == 8 & r2mnev == 1 )
replace r2mstatf = 1 if r2mstath == 8 & r2mnev == 0 & !missing(r2mstath, r2mnev)
replace r2mstatf = 2 if inlist(r2mstath,1,4,5,7) & r2mnev == 1 
replace r2mstatf = .d if r2mstath==.d
label variable r2mstatf "r2mstatf:w2 r mstath-flag diff w/marhist"

*wave 2 spouse current marital status flag
gen s2mstatf =.
spouse r2mstatf, result(s2mstatf) wave(2)
label variable s2mstatf "s2mstatf:w2 s mstath-flag diff w/marhist"

*value labels
label values r2mstatf mstatf
label values s2mstatf mstatf

*check

***place of birth***
*respondent place of birth (update)
missing_w2 fqcbthr if missing(rabplace), result(rabplace)
replace rabplace = 1 if fqcbthr == 1 & missing(rabplace)
replace rabplace = 11 if fqcbthr == 2 & missing(rabplace)

*wave 2 spouse place of birth
gen s2bplace =.
spouse rabplace, result(s2bplace) wave(2)
label variable s2bplace "s2bplace:w2 s place of birth"

*value labels
label values s2bplace place

*check

***whether born in country of interview***
*respondent whether born in country of interview (update)
missing_w2 fqcbthr if missing(rabcountry), result(rabcountry)
replace rabcountry = 0 if fqcbthr==2 & mi(rabcountry)
replace rabcountry = 1 if fqcbthr==1 & mi(rabcountry)

*wave 2 spouse whether born in country of interview
gen s2bcountry = .
spouse rabcountry, result(s2bcountry) wave(2)
label variable s2bcountry "s2bcountry:w2 s born in country of interview"
label values s2bcountry bornin


***death date***
*wave 2 spouse death year
gen s2dyear =.
spouse radyear, result(s2dyear) wave(2)
label variable s2dyear "s2dyear:w2 s death year"

*check 


***drop ELSA index file raw variables***
drop `demo_w2_index' i_persno

***drop ELSA wave 2 core file raw variables***
drop `demo_w2_core'

***drop ELSA wave 2 financial derived file raw variables***
drop `demo_w2_fina'

***drop ELSA wave 3 life history data variables***
drop `demo_w2_hist'

******************************************************************************************

*set wave number
local wavenum=3

***merge with index file***
local demo_w`wavenum'_index idahhw3 persno outindw3 mortwave outscw3 finstatw3 ///
                    dobyear sex // w3lwgt w3xwgt scw3wgt
merge 1:1 idauniq using "$index", keepusing(`demo_w`wavenum'_index') nogen

***merge with wave 3 core data***
local demo_w`wavenum'_core perid iapid dhr dhr? dhr1? hopid askpx hhresp ///
                   intdaty intdatm iintdaty iintdatm indobyr ///
                   indager indsex fqethnr fqcbthr ///
                   fqmqua fqaqua fqqumdeg fqqumtea fqqumnur fqqumhnc fqqumonc ///
		 		   fqqumcgf fqqumcga fqqumcgo fqqumale fqqumasl fqqumslc ///
		 		   fqqumolp fqqumola fqqumold fqqumgca fqqumgcd fqqumcs1 ///
		 		   fqqumcs2 fqqumcsu fqqumsll fqqumsup fqqummat fqqumnv5 ///
		           fqqumnv4 fqqumnv3 fqqumnv2 fqqumnv1 fqqumtra fqqumcle ///
		           fqqumfor fqqumovo fqqumnvz fqqumnne fqqummil fqqumdip ///
		           fqqumoac fqqumopr fqqum85 fqqum86 ///
                   dimar dinma dinfa dianm dimad dianf difad ///
                   mainhh painhh w3lwgt w3xwgt GOR 
merge 1:1 idauniq using "$wave_3_core", keepusing(`demo_w`wavenum'_core') nogen

***merge with wave 3 financial derived variables data***
local demo_w`wavenum'_fina coupid
merge 1:1 idauniq using "$wave_3_fina", keepusing(`demo_w`wavenum'_fina') nogen

***merge with wave 3 life history data***
local demo_w`wavenum'_hist rpyrma rpyrma? rpmarst rpmarst? rpdiv rpdiv? rpdyr rpdyr? rpfin rpfin? rpdiy rpdiy? 
merge 1:1 idauniq using "$wave_3_hist", keepusing(`demo_w`wavenum'_hist') nogen


***person specific identifier***
*wave household id
gen hh`wavenum'hhid =.
replace hh`wavenum'hhid = idahhw3 if !inlist(idahhw3,-2,.)
label variable hh`wavenum'hhid "wave `wavenum' specific household serial number /num"

*check

gen hh`wavenum'hhidc = string(hh`wavenum'hhid)
label variable hh`wavenum'hhidc "wave `wavenum' specific household serial number /5-char"

***wave status: response indicator***
*wave response indicator
gen inw`wavenum' =0
replace inw`wavenum' = 1 if inlist(outindw3,11,13,21,23,24,25)
label variable inw`wavenum' "inw`wavenum': =1 if respondent w`wavenum'"

*temporary fix as emailed with ELSA about on 8/9/2012
replace inw3 = 0 if idauniq==112584

************temporary fix for nonresponding person
replace inw3 = 0 if idauniq==150589

*value labels
label values inw`wavenum' inw

*check

***self-completion status: response indicator***
*wave self-completion response indicator
gen inw`wavenum'sc =0
replace inw`wavenum'sc = 1 if outscw3==1
label variable inw`wavenum'sc "inw`wavenum'sc: =1 if respondent w`wavenum' self-completion"

*value labels
label values inw`wavenum'sc inwsc

*check

****create temporary indicator of wave spouse***
gen w`wavenum'spouse=.
replace w`wavenum'spouse = 0 if inw`wavenum'==1
replace w`wavenum'spouse = 1 if inlist(dhr ,1,2) | ///
																inlist(dhr2,1,2) | ///
																inlist(dhr3,1,2) | ///
																inlist(dhr4,1,2) | ///
																inlist(dhr5,1,2) | ///
																inlist(dhr6,1,2) | ///
																inlist(dhr7,1,2) | ///
																inlist(dhr8,1,2) | ///
																inlist(dhr9,1,2) | ///
																inlist(dhr10,1,2) | ///
																inlist(dhr11,1,2) | ///
																inlist(dhr12,1,2)
											
***couple identifier***
*wave couple id
gen h`wavenum'coupid =.
replace h`wavenum'coupid = coupid if !inlist(coupid,.,-10)
label variable h`wavenum'coupid "wave `wavenum' specific couple id number /num"

*check

*wave couple id (character)
gen str5 h`wavenum'coupidc = string(h`wavenum'coupid)
label variable h`wavenum'coupidc "wave `wavenum' specific couple id number /5-char"

***spouse identifier***
*wave spouse id
gen s`wavenum'idauniq =.
bysort coupid: replace s`wavenum'idauniq = 0 if missing(idauniq[_n+1]) & _n==1 & inw`wavenum' ==1
bysort coupid: replace s`wavenum'idauniq = idauniq[_n+1] if !inlist(coupid,.,-10) & idauniq[_n+1]!=.
bysort coupid: replace s`wavenum'idauniq = idauniq[_n-1] if !inlist(coupid,.,-10) & idauniq[_n-1]!=.
label variable s`wavenum'idauniq "s`wavenum'idauniq:w`wavenum' spouse idauniq"

***wave status: interview status***
*wave interview status
gen r`wavenum'iwstat =.
replace r`wavenum'iwstat = 0 if inlist(outindw3,-993,-992,-991) | mi(outindw3)
replace r`wavenum'iwstat = 1 if inlist(outindw3,11,13,21,24,25)
replace r`wavenum'iwstat = 4 if inlist(outindw3,51,52,53,54,71) | (!inlist(outindw3,11,13,21,24,25) & inlist(mortwave,41,42,43,51,52,53,61,63))
replace r`wavenum'iwstat = 5 if inlist(mortwave,31,32,33)
replace r`wavenum'iwstat = 6 if inlist(mortwave,21,22,23)
replace r`wavenum'iwstat = 7 if inlist(outindw3,77,79) & !inrange(mortwave,11,63)
replace r`wavenum'iwstat = 9 if inlist(outindw3,-2,-1,31,43,44,45,46,55,56,60,78) & !inrange(mortwave,11,63)
label variable r`wavenum'iwstat "r`wavenum'iwstat:w`wavenum' r interview status"

*wave spouse interview status
gen s`wavenum'iwstat =.
spouse r`wavenum'iwstat, result(s`wavenum'iwstat) wave(`wavenum')
label variable s`wavenum'iwstat "s`wavenum'iwstat:w`wavenum' s interview status"

*value labels
label values r`wavenum'iwstat wstat
label values s`wavenum'iwstat wstat

*check 

***sample cohort***
*wave respondent cohort
gen r`wavenum'cohort_e=.
replace r`wavenum'cohort_e = 1 if inlist(finstatw3,1,2,3)
replace r`wavenum'cohort_e = 2 if inlist(finstatw3,5,6,13)
replace r`wavenum'cohort_e = 3 if inlist(finstatw3,4)
replace r`wavenum'cohort_e = 4 if inlist(finstatw3,7,8,9)
replace r`wavenum'cohort_e = 5 if inlist(finstatw3,12)
replace r`wavenum'cohort_e = 6 if inlist(finstatw3,10)
replace r`wavenum'cohort_e = 7 if inlist(finstatw3,11)
label variable r`wavenum'cohort_e "r`wavenum'cohort_e:w`wavenum' r sample cohort, ELSA specific"

*wave spouse cohort
gen s`wavenum'cohort_e=.
spouse r`wavenum'cohort_e, result(s`wavenum'cohort_e) wave(`wavenum')
label variable s`wavenum'cohort_e "s`wavenum'cohort_e:w`wavenum' s sample cohort, ELSA specific"

*value labels
label values r`wavenum'cohort_e cohort_e
label values s`wavenum'cohort_e cohort_e

*check

***whether eligible for the elsa sample***
*wave spouse eligibility
gen s`wavenum'elsamp =.
spouse raelsamp, result(s`wavenum'elsamp) wave(`wavenum')
label variable s`wavenum'elsamp "s`wavenum'elsamp:ELSA s sample-age eligible/Wave 1 Resp"

*value labels
label values s`wavenum'elsamp elsaamp

***person-level longitudinal weight, core sample***
*wave respondent longitudinal weight
gen r`wavenum'lwtresp =.
replace r`wavenum'lwtresp = w3lwgt
label variable r`wavenum'lwtresp "r`wavenum'lwtresp:w`wavenum' r person-level longitudinal weight, core sample"

*wave spouse longitudinal weight, core
gen s`wavenum'lwtresp =.
spouse r`wavenum'lwtresp, result(s`wavenum'lwtresp) wave(`wavenum')
label variable s`wavenum'lwtresp "s`wavenum'lwtresp:w`wavenum' s person-level longitudinal weight, core sample"

*check

***person-level cross-sectional weight, core sample***
*wave respondent cross-sectional weight, core
gen r`wavenum'cwtresp =.
replace r`wavenum'cwtresp = w3xwgt
label variable r`wavenum'cwtresp "r`wavenum'cwtresp:w`wavenum' r person-level cross-sectional weight, core sample"

*wave spouse cross-sectional weight, core
gen s`wavenum'cwtresp =.
spouse r`wavenum'cwtresp, result(s`wavenum'cwtresp) wave(`wavenum')
label variable s`wavenum'cwtresp "s`wavenum'cwtresp:w`wavenum' s person-level cross-sectional weight, core sample"

*check

****person-level weight, self-completion sample***
**wave respondent weight, self-completion sample
*gen r`wavenum'scwtresp =.
*replace r`wavenum'scwtresp = scw3wgt
*label variable r`wavenum'scwtresp "r`wavenum'scwtresp:w`wavenum' person-level weight, self-completion sample"
*
**wave spouse weight, self-completion
*gen s`wavenum'scwtresp =.
*spouse r`wavenum'scwtresp, result(s`wavenum'scwtresp) wave(`wavenum')
*label variable s`wavenum'scwtresp "s`wavenum'scwtresp:w`wavenum' person-level weight, self-completion sample"

*check

***spouse identifier***
*respondent number of spouse id's (update)
replace raspct = raspct +1 if s`wavenum'idauniq != s1idauniq & s`wavenum'idauniq != s1idauniq & !inlist(s`wavenum'idauniq,0,.)
replace raspct = 0 if s`wavenum'idauniq == 0 & missing(raspct)
replace raspct = 1 if !inlist(s`wavenum'idauniq,0,.) & missing(raspct)

*check

*respondent first spouse id (update)
replace raspid1 = s`wavenum'idauniq if !inlist(s`wavenum'idauniq,0,.) & missing(raspid1)

*check

*respondent second spouse id (update)
replace raspid2 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.)

*check

*respondent third spouse id (update)
replace raspid3 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.)

*check

***sampling weight***
*wave 3 respondent stratification variable
gen r3strat =.
replace r3strat = idahhw3 if idahhw3!=-2
label variable r3strat "r3strat:w3 hse stratification variable"

*check 

*respondent clustering variable
gen r3clust = ""
replace r3clust = GOR if !inlist(GOR,"-2","")
label variable r3clust "r3clust:w3 hse clustering variable"

***number of household respondents***
*wave household number of respondents   
egen hh`wavenum'hhresp = sum(inw`wavenum'==1) if inw`wavenum'==1, by(hh`wavenum'hhid)
label variable hh`wavenum'hhresp "hh`wavenum'hhresp:w`wavenum' # core respondents in hh"

*check

***whether couple household***
*wave household couple indicator
egen h`wavenum'cpl = sum(inw`wavenum'==1) if !mi(coupid) & coupid != -10, by(coupid)
recode h`wavenum'cpl (0=.) (1=0) (2=1)
label variable h`wavenum'cpl "h`wavenum'cpl:w`wavenum' whether coupled"

*value labels
label values h`wavenum'cpl cpl

*check

***financial, family respondent***
*wave respondent financial respondent indicator
gen r`wavenum'finr =.
replace r`wavenum'finr = 1 if perid == iapid & !inlist(iapid,.,-1,-9,-8)
replace r`wavenum'finr = 0 if perid != iapid & inw`wavenum'==1
label variable r`wavenum'finr "r`wavenum'finr:w`wavenum' r whether financial resp"

*wave spouse financial respondent indicator
gen s`wavenum'finr =.
spouse r`wavenum'finr, result(s`wavenum'finr) wave(`wavenum')
label variable s`wavenum'finr "s`wavenum'finr:w`wavenum' s whether financial resp"

*wave couple financial respondent indicator
gen h`wavenum'anyfin =.
replace h`wavenum'anyfin = 0 if iapid==-1
replace h`wavenum'anyfin = 1 if !inlist(iapid,.,-1) & inw`wavenum' ==1
label variable h`wavenum'anyfin "h`wavenum'anyfin:w`wavenum' whether any finr in couple"

*value labels
label values r`wavenum'finr finr
label values s`wavenum'finr finr
label values h`wavenum'anyfin finr

*check 

***household, family respondent***
*wave respondent household respondent indicator
gen r`wavenum'hhr =.
replace r`wavenum'hhr = 1 if perid == hhresp & !inlist(hhresp,.,-1,-9,-8,97)
replace r`wavenum'hhr = 0 if perid != hhresp & inw`wavenum'==1
label variable r`wavenum'hhr "r`wavenum'hhr:w`wavenum' r whether hh resp"

*wave spouse household respondent indicator
gen s`wavenum'hhr =.
spouse r`wavenum'hhr, result(s`wavenum'hhr) wave(`wavenum')
label variable s`wavenum'hhr "s`wavenum'hhr:w`wavenum' s whether hh resp"

*value labels
label values r`wavenum'hhr hhr
label values s`wavenum'hhr hhr

*check

***housing, family respondent***
*wave respondent housing respondent indicator
gen r`wavenum'hor =.
replace r`wavenum'hor = 1 if perid == hopid & !inlist(hopid,.,-1,-9,-8)
replace r`wavenum'hor = 0 if perid != hopid & inw`wavenum' ==1
label variable r`wavenum'hor "r`wavenum'hor:w`wavenum' r whether housing resp"

*wave spouse housing respondent indicator
gen s`wavenum'hor =.
spouse r`wavenum'hor, result(s`wavenum'hor) wave(`wavenum')
label variable s`wavenum'hor "s`wavenum'hor:w`wavenum' s whether housing resp"

*wave household housing respondent indicator
gen hh`wavenum'anyho =.
replace hh`wavenum'anyho = 0 if hopid==-1
replace hh`wavenum'anyho = 1 if !inlist(hopid,.,-1) & inw`wavenum'==1
label variable hh`wavenum'anyho "hh`wavenum'anyho:w`wavenum' whether any hor in hh"

*value labels
label values r`wavenum'hor   hor
label values s`wavenum'hor   hor
label values hh`wavenum'anyho hor

*check

***whether proxy interview***
*wave respondent proxy indicator
gen r`wavenum'proxy =.
replace r`wavenum'proxy = 1 if askpx ==1
replace r`wavenum'proxy = 0 if askpx ==0
label variable r`wavenum'proxy "r`wavenum'proxy:w`wavenum' r whether proxy interview"

*wave spouse proxy indicator
gen s`wavenum'proxy =.
spouse r`wavenum'proxy, result(s`wavenum'proxy) wave(`wavenum')
label variable s`wavenum'proxy "s`wavenum'proxy:w`wavenum' s whether proxy interview"

*value labels
label values r`wavenum'proxy proxy
label values s`wavenum'proxy proxy

*check

***interview dates***
*wave household interview date
gen hh`wavenum'iwhh =.
replace hh`wavenum'iwhh = ym(intdaty, intdatm) if inrange(intdaty, 2000, 2010) & inrange(intdatm, 1, 12)
label variable hh`wavenum'iwhh "hh`wavenum'iwhh:w`wavenum' household interview date"

*wave household interview date flag
gen hh`wavenum'iwhhf =.
replace hh`wavenum'iwhhf = 0 if inrange(intdaty,2000, 2010) & inrange(intdatm,1,12)
replace hh`wavenum'iwhhf = 1 if !inrange(intdatm,1,12) & inw`wavenum' ==1
replace hh`wavenum'iwhhf = 2 if !inrange(intdaty,2000, 2010) & inw`wavenum' ==1
label variable hh`wavenum'iwhhf "hh`wavenum'iwhhf:w`wavenum' household interview date flag"

*wave respondent individual interview date
gen r`wavenum'iwind =.
replace r`wavenum'iwind = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2010) & inrange(iintdatm, 1, 12)
label variable r`wavenum'iwind "r`wavenum'iwind:w`wavenum' r individual interview date"

*wave spouse individual interview date
gen s`wavenum'iwind =.
spouse r`wavenum'iwind, result(s`wavenum'iwind) wave(`wavenum')
label variable s`wavenum'iwind "s`wavenum'iwind:w`wavenum' s individual interview date"

*wave respondent individual interview date flag
gen r`wavenum'iwindf =.
replace r`wavenum'iwindf = 0 if inrange(iintdaty,2000, 2010) & inrange(iintdatm,1,12)
replace r`wavenum'iwindf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
replace r`wavenum'iwindf = 2 if !inrange(iintdaty,2000, 2010) & inw`wavenum' ==1
label variable r`wavenum'iwindf "r`wavenum'iwindf:w`wavenum' r individual interview date flag"

*wave spouse individual interview flag
gen s`wavenum'iwindf =.
spouse r`wavenum'iwindf, result(s`wavenum'iwindf) wave(`wavenum')
label variable s`wavenum'iwindf "s`wavenum'iwindf:w`wavenum' s individual interview date flag"

*wave household interview month
gen hh`wavenum'iwhhm =.
replace hh`wavenum'iwhhm = intdatm if inrange(intdatm,1,12)
label variable hh`wavenum'iwhhm "hh`wavenum'iwhhm:w`wavenum' household interview month"

*wave household interview year
gen hh`wavenum'iwhhy =.
replace hh`wavenum'iwhhy = intdaty if inrange(intdaty,2000, 2010)
label variable hh`wavenum'iwhhy "hh`wavenum'iwhhy:w`wavenum' household interview year"

*wave respondent individual interview month
gen r`wavenum'iwindm =.
replace r`wavenum'iwindm = iintdatm if inrange(iintdatm,1,12)
label variable r`wavenum'iwindm "r`wavenum'iwindm:w`wavenum' r individual interview month"

*wave respondent individual interview year
gen r`wavenum'iwindy =.
replace r`wavenum'iwindy = iintdaty if inrange(iintdaty,2000, 2010)
label variable r`wavenum'iwindy "r`wavenum'iwindy:w`wavenum' r individual interview year"

*wave spouse individual interview year
gen s`wavenum'iwindm =.
spouse r`wavenum'iwindm, result(s`wavenum'iwindm) wave(`wavenum')
label variable s`wavenum'iwindm "s`wavenum'iwindm:w`wavenum' s individual interview month"

*wave spouse individual interview year
gen s`wavenum'iwindy =.
spouse r`wavenum'iwindy, result(s`wavenum'iwindy) wave(`wavenum')
label variable s`wavenum'iwindy "s`wavenum'iwindy:w`wavenum' s individual interview year"

*value labels
label values hh`wavenum'iwhhf dateflag
label values r`wavenum'iwindf dateflag
label values s`wavenum'iwindf dateflag

*check


***birth date: year***
*respondent birth year (update)
replace rabyear = indobyr if inrange(indobyr,1900,2000) & (missing(rabyear) | rafbyear != 0)
replace rabyear = 1916 if indobyr == -7 & missing(rabyear)
replace rabyear = dobyear if inrange(dobyear,1900,2020) & (mi(rabyear) | rafbyear !=0 )
replace rabyear = 1916   if dobyear==-7 & mi(rabyear)
replace rabyear = .d if indobyr==-8 & dobyear==-8

*wave spouse birth year
gen s`wavenum'byear =.
spouse rabyear, result(s`wavenum'byear) wave(`wavenum')
label variable s`wavenum'byear "s`wavenum'byear:w`wavenum' s birth year"

*respondent birth year flag
replace rafbyear = 0 if inrange(indobyr,1900,2000) & (mi(rafbyear) | rafbyear != 0)
replace rafbyear = 3 if indobyr == -7 & mi(rafbyear)
replace rafbyear = 0 if inrange(dobyear,1900,2020) & (mi(rafbyear) | rafbyear != 0)
replace rafbyear = 9 if indobyr == -7 & mi(rabyear)
replace rafbyear = .d if rabyear==.d

*wave spouse birth year flag
gen s`wavenum'fbyear =.
spouse rafbyear, result(s`wavenum'fbyear) wave(`wavenum')
label variable s`wavenum'fbyear "s`wavenum'fbyear:w`wavenum' s flag birth year bottom-coded"
label values s`wavenum'fbyear fbyear

*check 

***age at interview (in years)***
*wave respondent age in years
gen r`wavenum'agey=.
replace r`wavenum'agey = indager if inrange(indager,10,90)
replace r`wavenum'agey = 90 if indager==99
replace r`wavenum'agey = .d if indager==-8
label variable r`wavenum'agey "r`wavenum'agey:w`wavenum' r age (years) at ivw"

*wave spouse age in years
gen s`wavenum'agey=.
spouse r`wavenum'agey, result(s`wavenum'agey) wave(`wavenum')
label variable s`wavenum'agey "s`wavenum'agey:w`wavenum' s age (years) at ivw"

*wave respondent age in years flag
gen r`wavenum'fagey=.
replace r`wavenum'fagey = 0 if inrange(indager,10,90)
replace r`wavenum'fagey = 1 if indager == 99
replace r`wavenum'fagey = .d if r`wavenum'agey==.d
label variable r`wavenum'fagey "r`wavenum'fagey:w`wavenum' r flag age at iwv top-coded"
label values r`wavenum'fagey fagey

*wave spouse age in years flag
gen s`wavenum'fagey=.
spouse r`wavenum'fagey, result(s`wavenum'fagey) wave(`wavenum')
label variable s`wavenum'fagey "s`wavenum'fagey:w`wavenum' s flag age at iwv top-coded"
label values s`wavenum'fagey fagey

*check

***gender***
*respondent gender (update)
missing_w`wavenum' indsex if missing(ragender), result(ragender)
replace ragender = 1 if indsex == 1 & missing(ragender)
replace ragender = 2 if indsex == 2 & missing(ragender)

*wave spouse gender
gen s`wavenum'gender =.
spouse ragender, result(s`wavenum'gender) wave(`wavenum')
label variable s`wavenum'gender "s`wavenum'gender:w`wavenum' s gender"

*respondent gender flag (update)
replace rafgendr = 0 if ( (ragender == 1 & indsex == 1) | (ragender == 2 & indsex == 2) ) & rafgendr!=1
replace rafgendr = 1 if (ragender == 1 & indsex == 2) | (ragender == 2 & indsex == 1)

*wave spouse gender flag
gen s`wavenum'fgendr = .
spouse rafgendr, result(s`wavenum'fgendr) wave(`wavenum')
label variable s`wavenum'fgendr "s`wavenum'fgendr:w`wavenum' flag if problem with s gender"

*value labels
label values s`wavenum'gender gender
label values s`wavenum'fgendr genderflag

*check

***race, ethnicity: race***
*respondent race (update)
missing_w`wavenum' fqethnr if missing(raracem), result(raracem)
replace raracem = 1 if fqethnr == 1 & missing(raracem)
replace raracem = 4 if fqethnr == 2 & missing(raracem)

*wave spouse race
gen s`wavenum'racem =.
spouse raracem, result(s`wavenum'racem) wave(`wavenum')
label variable s`wavenum'racem "s`wavenum'racem:w`wavenum' s race - masked"

*respondent race flag (update)
replace raracef = 0 if ( (raracem == 1 & fqethnr == 1) | (raracem == 4 & fqethnr == 2) ) & raracef!=1
replace raracef = 1 if (raracem == 1 & fqethnr == 2) | (raracem == 4 & fqethnr == 1)
replace raracef = .m if fqethnr==-1 | (raracem==.r & fqethnr==-9)

*wave spouse race flag
gen s`wavenum'racef =.
spouse raracef, result(s`wavenum'racef) wave(`wavenum')
label variable s`wavenum'racef "s`wavenum'racef:w`wavenum' flag if problem with s race"

*value labels
label values s`wavenum'racem race
label values s`wavenum'racef raceflag

*check

***education: categorical summary***
*respondent education categorically (update)
replace raeduc_e = 5 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 4 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumhnc == 1 | ///
														fqqumonc == 1 | ///
														fqqumcgf == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumnv2 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)											
replace raeduc_e = 1 if (((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumcs1 == 1 | ///
														fqqumcs2 == 1 | ///
														fqqumcsu == 1 | ///
														fqqumsll == 1 | ///
														fqqumsup == 1 | ///
														fqqummat == 1 | ///
														fqqumnv1 == 1 )) | fqaqua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
									   fqqumonc == 0 & ///
									   fqqumcgf == 0 & ///
									   fqqumcga == 0 & ///
									   fqqumcgo == 0 & ///
									   fqqumale == 0 & ///
									   fqqumasl == 0 & ///
									   fqqumslc == 0 & ///
									   fqqumolp == 0 & ///
									   fqqumola == 0 & ///
									   fqqumold == 0 & ///
									   fqqumgca == 0 & ///
									   fqqumgcd == 0 & ///
									   fqqumcs1 == 0 & ///
									   fqqumcs2 == 0 & ///
									   fqqumcsu == 0 & ///
									   fqqumsll == 0 & ///
									   fqqumsup == 0 & ///
									   fqqummat == 0 & ///
									   fqqumnv5 == 0 & ///
									   fqqumnv4 == 0 & ///
									   fqqumnv3 == 0 & ///
									   fqqumnv2 == 0 & ///
									   fqqumnv1 == 0))& (mi(raeduc_e) & raeduc_e != .o)											
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeduc_e) & raeduc_e != .o), result(raeduc_e)
replace raeduc_e = .o if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)				 																			 
																			 																											
*wave spouse education categorically
gen s`wavenum'educ_e =.
spouse raeduc_e, result(s`wavenum'educ_e) wave(`wavenum')
label variable s`wavenum'educ_e "s`wavenum'educ_e:w`wavenum' s education (categ)"

label values s`wavenum'educ_e educcats

*check

***Education: ISCED category***
*wave 3 respondent education isced category (update)
replace raedisced = .n if ( fqaqua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
									   fqqumonc == 0 & ///
									   fqqumcgf == 0 & ///
									   fqqumcga == 0 & ///
									   fqqumcgo == 0 & ///
									   fqqumale == 0 & ///
									   fqqumasl == 0 & ///
									   fqqumslc == 0 & ///
									   fqqumolp == 0 & ///
									   fqqumola == 0 & ///
									   fqqumold == 0 & ///
									   fqqumgca == 0 & ///
									   fqqumgcd == 0 & ///
									   fqqumcs1 == 0 & ///
									   fqqumcs2 == 0 & ///
									   fqqumcsu == 0 & ///
									   fqqumsll == 0 & ///
									   fqqumsup == 0 & ///
									   fqqummat == 0 & ///
									   fqqumnv5 == 0 & ///
									   fqqumnv4 == 0 & ///
									   fqqumnv3 == 0 & ///
									   fqqumnv2 == 0 & ///
									   fqqumnv1 == 0)) & (mi(raedisced) & !inlist(raedisced,.n,.o))

replace raedisced = 5 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))
replace raedisced = 4 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))
replace raedisced = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
													 fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raedisced) & !inlist(raedisced,.n,.o))																				

missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raedisced) & !inlist(raedisced,.n,.o)), result(raedisced)
replace raedisced = .o if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raedisced) & !inlist(raedisced,.n,.o))	 																			 
																																	 																											
*wave 3 spouse education isced category
gen s`wavenum'edisced =.
spouse raedisced, result(s`wavenum'edisced) wave(`wavenum')
label variable s`wavenum'edisced "s`wavenum'edisced:w`wavenum' s education isced"
label values s`wavenum'edisced educisced 

***education: harmonized education category***
*wave 3 respondent education harmonized category (update)
replace raeducl = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = 2 if (fqmqua == 1 | fqaqua == 1) & ( ///
													 fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 | ///
													  fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1)  & (mi(raeducl) & !inlist(raeducl,.o))											
replace raeducl = 1 if ( fqaqua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
									   fqqumonc == 0 & ///
									   fqqumcgf == 0 & ///
									   fqqumcga == 0 & ///
									   fqqumcgo == 0 & ///
									   fqqumale == 0 & ///
									   fqqumasl == 0 & ///
									   fqqumslc == 0 & ///
									   fqqumolp == 0 & ///
									   fqqumola == 0 & ///
									   fqqumold == 0 & ///
									   fqqumgca == 0 & ///
									   fqqumgcd == 0 & ///
									   fqqumcs1 == 0 & ///
									   fqqumcs2 == 0 & ///
									   fqqumcsu == 0 & ///
									   fqqumsll == 0 & ///
									   fqqumsup == 0 & ///
									   fqqummat == 0 & ///
									   fqqumnv5 == 0 & ///
									   fqqumnv4 == 0 & ///
									   fqqumnv3 == 0 & ///
									   fqqumnv2 == 0 & ///
									   fqqumnv1 == 0)) & (mi(raeducl) & !inlist(raeducl,.o))
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeducl) & !inlist(raeducl,.o)), result(raeducl)
replace raeducl = .o if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raeducl) & !inlist(raeducl,.o))	 		
label variable raeducl "raeducl:R harmonized education"
label values raeducl educharm

*wave 3 spouse education harmonized category
gen s3educl = .
spouse raeducl, result(s3educl) wave(3)
label variable s3educl "s3educl:w3 S harmonized education"
label values s3educl educharm

***current marital status: with implied partnerships***
*wave respondent marital status with partnership
gen r`wavenum'mstat=.
missing_w`wavenum' dimar, result(r`wavenum'mstat)
replace r`wavenum'mstat = 1 if inlist(dimar, 2,3,4,11)
replace r`wavenum'mstat = 4 if inlist(dimar, 5, 8)
replace r`wavenum'mstat = 5 if inlist(dimar, 6, 9)
replace r`wavenum'mstat = 7 if inlist(dimar, 7, 10)
replace r`wavenum'mstat = 8 if dimar == 1
replace r`wavenum'mstat = 3 if (inlist(dimar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.))
label variable r`wavenum'mstat "r`wavenum'mstat:w`wavenum' r marital status w/partners, filled"

*wave spouse marital status with implied partnership
gen s`wavenum'mstat=.
spouse r`wavenum'mstat, result(s`wavenum'mstat) wave(`wavenum')
label variable s`wavenum'mstat "s`wavenum'mstat:w`wavenum' s marital status w/partners, filled"

*value labels
label values r`wavenum'mstat marwpart
label values s`wavenum'mstat marwpart

*check

***current marital status: current implied partnership status***
*wave respondent implied partnership status
gen r`wavenum'mpart =.
missing_w`wavenum' dimar, result(r`wavenum'mpart)
replace r`wavenum'mpart = 0 if inw`wavenum'==1
replace r`wavenum'mpart = 1 if inlist(dimar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.)
label variable r`wavenum'mpart "r`wavenum'mpart:w`wavenum' r implied partnership status"

*wave spouse partnership status
gen s`wavenum'mpart =.
spouse r`wavenum'mpart, result(s`wavenum'mpart) wave(`wavenum')
label variable s`wavenum'mpart "s`wavenum'mpart:w`wavenum' s implied partnership status"

*value labels
label values r`wavenum'mpart part
label values s`wavenum'mpart part

*check


***current marital status: without implied partnerships***
*wave respondent marital status without implied partnership
gen r`wavenum'mstath =.
missing_w`wavenum' dimar, result(r`wavenum'mstath)
replace r`wavenum'mstath = 1 if inlist(dimar, 2,3,4,11)
replace r`wavenum'mstath = 4 if inlist(dimar, 5, 8)
replace r`wavenum'mstath = 5 if inlist(dimar, 6, 9)
replace r`wavenum'mstath = 7 if inlist(dimar, 7, 10)
replace r`wavenum'mstath = 8 if dimar == 1
label variable r`wavenum'mstath "r`wavenum'mstath:w`wavenum' r marital status"

*wave spouse marital status without implied partnership
gen s`wavenum'mstath =.
spouse r`wavenum'mstath, result(s`wavenum'mstath) wave(`wavenum')
label variable s`wavenum'mstath "s`wavenum'mstath:w`wavenum' s marital status"

*value labels
label values r`wavenum'mstath marwopart
label values s`wavenum'mstath marwopart

*check

***number of marriages***
*wave respondent number of marriages
gen r`wavenum'mrct =.
replace r`wavenum'mrct = .l if rpmarst==. & inw3==1
replace r`wavenum'mrct = 0 if rpmarst!=. & inw3==1
replace r`wavenum'mrct = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw3==1
replace r`wavenum'mrct = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=.
replace r`wavenum'mrct = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw3==1
replace r`wavenum'mrct = r`wavenum'mrct+1 if rpmarst==1  & rpyrma<=r`wavenum'iwindy & !inlist(r`wavenum'mrct,.d,.m,.r) & rpyrma>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mrct = r`wavenum'mrct+1 if rpmarst2==1 & rpyrma2<=r`wavenum'iwindy & !inlist(r`wavenum'mrct,.d,.m,.r) & rpyrma2>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mrct = r`wavenum'mrct+1 if rpmarst3==1 & rpyrma3<=r`wavenum'iwindy & !inlist(r`wavenum'mrct,.d,.m,.r) & rpyrma3>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mrct = r`wavenum'mrct+1 if rpmarst4==1 & rpyrma4<=r`wavenum'iwindy & !inlist(r`wavenum'mrct,.d,.m,.r) & rpyrma4>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mrct = r`wavenum'mrct+1 if rpmarst5==1 & rpyrma5<=r`wavenum'iwindy & !inlist(r`wavenum'mrct,.d,.m,.r) & rpyrma5>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mrct = r`wavenum'mrct+1 if rpmarst6==1 & rpyrma6<=r`wavenum'iwindy & !inlist(r`wavenum'mrct,.d,.m,.r) & rpyrma6>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mrct = r`wavenum'mrct+1 if rpmarst7==1 & rpyrma7<=r`wavenum'iwindy & !inlist(r`wavenum'mrct,.d,.m,.r) & rpyrma7>0 & !missing(r`wavenum'iwindy)
label variable r`wavenum'mrct "r`wavenum'mrct:w`wavenum' r # marriages"

*wave spouse number of marriages
gen s`wavenum'mrct =.
spouse r`wavenum'mrct, result(s`wavenum'mrct) wave(`wavenum')
label variable s`wavenum'mrct "s`wavenum'mrct:w`wavenum' s # marriages"

*check

***marital history: never married***
*wave respondent never married indicator
gen r`wavenum'mnev =.
replace r`wavenum'mnev = .l if rpmarst==. & inw3==1
replace r`wavenum'mnev = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw3==1
replace r`wavenum'mnev = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw3==1
replace r`wavenum'mnev = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw3==1
replace r`wavenum'mnev = 1 if (inlist(rpmarst,2,-1) | inlist(rpmarst2,2,-1) | inlist(rpmarst3,2,-1) | inlist(rpmarst4,2,-1) | inlist(rpmarst5,2,-1) | inlist(rpmarst6,2,-1) | inlist(rpmarst7,2,-1)) & inw3==1
replace r`wavenum'mnev = 0 if rpmarst==1 & rpyrma<=r`wavenum'iwindy & rpyrma>0 & !inlist(r`wavenum'mnev,.d,.m,.r) & !missing(r`wavenum'iwindy)
replace r`wavenum'mnev = 0 if rpmarst2==1 & rpyrma2<=r`wavenum'iwindy & rpyrma2>0 & !inlist(r`wavenum'mnev,.d,.m,.r) & !missing(r`wavenum'iwindy)
replace r`wavenum'mnev = 0 if rpmarst3==1 & rpyrma3<=r`wavenum'iwindy & rpyrma3>0 & !inlist(r`wavenum'mnev,.d,.m,.r) & !missing(r`wavenum'iwindy)
replace r`wavenum'mnev = 0 if rpmarst4==1 & rpyrma4<=r`wavenum'iwindy & rpyrma4>0 & !inlist(r`wavenum'mnev,.d,.m,.r) & !missing(r`wavenum'iwindy)
replace r`wavenum'mnev = 0 if rpmarst5==1 & rpyrma5<=r`wavenum'iwindy & rpyrma5>0 & !inlist(r`wavenum'mnev,.d,.m,.r) & !missing(r`wavenum'iwindy)
replace r`wavenum'mnev = 0 if rpmarst6==1 & rpyrma6<=r`wavenum'iwindy & rpyrma6>0 & !inlist(r`wavenum'mnev,.d,.m,.r) & !missing(r`wavenum'iwindy)
replace r`wavenum'mnev = 0 if rpmarst7==1 & rpyrma7<=r`wavenum'iwindy & rpyrma7>0 & !inlist(r`wavenum'mnev,.d,.m,.r) & !missing(r`wavenum'iwindy)
label variable r`wavenum'mnev "r`wavenum'mnev:w`wavenum' r never married"

*wave spouse never married indicator
gen s`wavenum'mnev =.
spouse r`wavenum'mnev, result(s`wavenum'mnev) wave(`wavenum')
label variable s`wavenum'mnev "s`wavenum'mnev:w`wavenum' s never married"

*value labels
label values r`wavenum'mnev mnev
label values s`wavenum'mnev mnev

*check


***marital history: # times divorced***
*wave respondent number of times divorced
gen r`wavenum'mdiv =.
replace r`wavenum'mdiv = .l if rpmarst==. & inw3==1
replace r`wavenum'mdiv = 0 if rpmarst!=. & inw3==1
replace r`wavenum'mdiv = .d if (rpdiv==-8 | rpdiv2==-8 | rpdiv3==-8 | rpdiv4==-8 | rpdiv5==-8 | rpdiv6==-8 | rpdiv7==-8) & inw3==1
replace r`wavenum'mdiv = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw3==1
replace r`wavenum'mdiv = .m if missing(rpdiv, rpdiv2, rpdiv3, rpdiv4, rpdiv5, rpdiv6, rpdiv7) & rpmarst!=. & inw3==1
replace r`wavenum'mdiv = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw3==1
replace r`wavenum'mdiv = .r if (rpdiv==-9 | rpdiv2==-9 | rpdiv3==-9 | rpdiv4==-9 | rpdiv5==-9 | rpdiv6==-9 | rpdiv7==-9) & inw3==1
replace r`wavenum'mdiv = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw3==1
replace r`wavenum'mdiv = r`wavenum'mdiv+1 if rpdiv==1 & rpdyr<=r`wavenum'iwindy & !inlist(r`wavenum'mdiv,.d,.m,.r) & rpdyr>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mdiv = r`wavenum'mdiv+1 if rpdiv2==1 & rpdyr2<=r`wavenum'iwindy & !inlist(r`wavenum'mdiv,.d,.m,.r) & rpdyr2>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mdiv = r`wavenum'mdiv+1 if rpdiv3==1 & rpdyr3<=r`wavenum'iwindy & !inlist(r`wavenum'mdiv,.d,.m,.r) & rpdyr3>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mdiv = r`wavenum'mdiv+1 if rpdiv4==1 & rpdyr4<=r`wavenum'iwindy & !inlist(r`wavenum'mdiv,.d,.m,.r) & rpdyr4>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mdiv = r`wavenum'mdiv+1 if rpdiv5==1 & rpdyr5<=r`wavenum'iwindy & !inlist(r`wavenum'mdiv,.d,.m,.r) & rpdyr5>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mdiv = r`wavenum'mdiv+1 if rpdiv6==1 & rpdyr6<=r`wavenum'iwindy & !inlist(r`wavenum'mdiv,.d,.m,.r) & rpdyr6>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mdiv = r`wavenum'mdiv+1 if rpdiv7==1 & rpdyr7<=r`wavenum'iwindy & !inlist(r`wavenum'mdiv,.d,.m,.r) & rpdyr7>0 & !missing(r`wavenum'iwindy)
label variable r`wavenum'mdiv "r`wavenum'mdiv:w`wavenum' r # times divorced"

*wave spouse number of times divorced
gen s`wavenum'mdiv =.
spouse r`wavenum'mdiv, result(s`wavenum'mdiv) wave(`wavenum')
label variable s`wavenum'mdiv "s`wavenum'mdiv:w`wavenum' s # times divorced"

*check

***marital history: # times widowed***
*wave respondent number of times widowed
gen r`wavenum'mwid =.
replace r`wavenum'mwid = .l if rpmarst==. & inw3==1
replace r`wavenum'mwid = 0 if rpmarst!=. & inw3==1
replace r`wavenum'mwid = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw3==1
replace r`wavenum'mwid = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw3==1
replace r`wavenum'mwid = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw3==1
replace r`wavenum'mwid = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw3==1
replace r`wavenum'mwid = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw3==1
replace r`wavenum'mwid = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw3==1
replace r`wavenum'mwid = r`wavenum'mwid+1 if rpfin==2 & rpmarst==1 & rpdiy<=r`wavenum'iwindy & !inlist(r`wavenum'mwid,.d,.m,.r) & rpdiy>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mwid = r`wavenum'mwid+1 if rpfin2==2 & rpmarst2==1 & rpdiy2<=r`wavenum'iwindy & !inlist(r`wavenum'mwid,.d,.m,.r) & rpdiy2>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mwid = r`wavenum'mwid+1 if rpfin3==2 & rpmarst3==1 & rpdiy3<=r`wavenum'iwindy & !inlist(r`wavenum'mwid,.d,.m,.r) & rpdiy3>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mwid = r`wavenum'mwid+1 if rpfin4==2 & rpmarst4==1 & rpdiy4<=r`wavenum'iwindy & !inlist(r`wavenum'mwid,.d,.m,.r) & rpdiy4>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mwid = r`wavenum'mwid+1 if rpfin5==2 & rpmarst5==1 & rpdiy5<=r`wavenum'iwindy & !inlist(r`wavenum'mwid,.d,.m,.r) & rpdiy5>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mwid = r`wavenum'mwid+1 if rpfin6==2 & rpmarst6==1 & rpdiy6<=r`wavenum'iwindy & !inlist(r`wavenum'mwid,.d,.m,.r) & rpdiy6>0 & !missing(r`wavenum'iwindy)
replace r`wavenum'mwid = r`wavenum'mwid+1 if rpfin7==2 & rpmarst7==1 & rpdiy7<=r`wavenum'iwindy & !inlist(r`wavenum'mwid,.d,.m,.r) & rpdiy7>0 & !missing(r`wavenum'iwindy)
label variable r`wavenum'mwid "r`wavenum'mwid:w`wavenum' r # times widowed"

*wave spouse number of times widowed
gen s`wavenum'mwid =.
spouse r`wavenum'mwid, result(s`wavenum'mwid) wave(`wavenum')
label variable s`wavenum'mwid "s`wavenum'mwid:w`wavenum' s # times widowed"

*check

***marital history: #times don't know how marriage ended***
*wave respondent number of times dk marriage end
gen r`wavenum'mend =.
replace r`wavenum'mend = .l if rpmarst==. & inw3==1
replace r`wavenum'mend = 0 if rpmarst!=. & inw3==1
replace r`wavenum'mend = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw3==1
replace r`wavenum'mend = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw3==1
replace r`wavenum'mend = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw3==1
replace r`wavenum'mend = r`wavenum'mend+1 if !inlist(rpyrma,-9,-8,-1,.) ///
														 & !inlist(rpfin,1,2) ///
														 & (( ( (rpyrma<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) )  | inlist(rpfin,85,95) ) ///
														 & rpyrma<=r`wavenum'iwindy ///
														 & !missing(r`wavenum'iwindy) ///
														 & !inlist(r`wavenum'mend,.d,.m,.r) 
replace r`wavenum'mend = r`wavenum'mend+1 if !inlist(rpyrma2,-9,-8,-1,.) ///
														 & !inlist(rpfin2,1,2) ///
														 & (( ( (rpyrma2<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma2<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma2<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma2<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma2<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma2<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) )  | inlist(rpfin2,85,95) ) ///
														 & rpyrma2<=r`wavenum'iwindy ///
														 & !missing(r`wavenum'iwindy) ///
														 & !inlist(r`wavenum'mend,.d,.m,.r) 
replace r`wavenum'mend = r`wavenum'mend+1 if !inlist(rpyrma3,-9,-8,-1,.) ///
														 & !inlist(rpfin3,1,2) ///
														 & (( ( (rpyrma3<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma3<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma3<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma3<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma3<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma3<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) )  | inlist(rpfin3,85,95) ) ///
														 & rpyrma3<=r`wavenum'iwindy ///
														 & !missing(r`wavenum'iwindy) ///
														 & !inlist(r`wavenum'mend,.d,.m,.r) 														 
replace r`wavenum'mend = r`wavenum'mend+1 if !inlist(rpyrma4,-9,-8,-1,.) ///
														 & !inlist(rpfin4,1,2) ///
														 & (( ( (rpyrma4<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma4<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma4<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma4<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma4<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma4<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) )  | inlist(rpfin4,85,95) ) ///
														 & rpyrma4<=r`wavenum'iwindy ///
														 & !missing(r`wavenum'iwindy) ///
														 & !inlist(r`wavenum'mend,.d,.m,.r) 	
replace r`wavenum'mend = r`wavenum'mend+1 if !inlist(rpyrma5,-9,-8,-1,.) ///
														 & !inlist(rpfin5,1,2) ///
														 & (( ( (rpyrma5<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma5<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma5<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma5<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma5<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma5<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) )  | inlist(rpfin5,85,95) ) ///
														 & rpyrma5<=r`wavenum'iwindy ///
														 & !missing(r`wavenum'iwindy) ///
														 & !inlist(r`wavenum'mend,.d,.m,.r) 	
replace r`wavenum'mend = r`wavenum'mend+1 if !inlist(rpyrma6,-9,-8,-1,.) ///
														 & !inlist(rpfin6,1,2) ///
														 & (( ( (rpyrma6<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma6<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma6<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma6<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma6<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma6<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) )  | inlist(rpfin6,85,95) ) ///
														 & rpyrma6<=r`wavenum'iwindy ///
														 & !missing(r`wavenum'iwindy) ///
														 & !inlist(r`wavenum'mend,.d,.m,.r) 	
replace r`wavenum'mend = r`wavenum'mend+1 if !inlist(rpyrma7,-9,-8,-1,.) ///
														 & !inlist(rpfin7,1,2) ///
														 & (( ( (rpyrma7<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma7<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma7<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma7<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma7<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) ///
															 | ( (rpyrma7<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) )  | inlist(rpfin7,85,95) ) ///
														 & rpyrma7<=r`wavenum'iwindy ///
														 & !missing(r`wavenum'iwindy) ///
														 & !inlist(r`wavenum'mend,.d,.m,.r)
replace r`wavenum'mend = r`wavenum'mend-1 if ( ( (rpyrma7==rpyrma) & (rpyrma7<=r`wavenum'iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma2) & (rpyrma7<=r`wavenum'iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma3) & (rpyrma7<=r`wavenum'iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma4) & (rpyrma7<=r`wavenum'iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin4,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma5) & (rpyrma7<=r`wavenum'iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin5,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma7==rpyrma6) & (rpyrma7<=r`wavenum'iwindy) & !inlist(rpfin7,1,2) & !inlist(rpfin6,1,2) & !inlist(rpyrma7,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma) & (rpyrma6<=r`wavenum'iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma2) & (rpyrma6<=r`wavenum'iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma3) & (rpyrma6<=r`wavenum'iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma4) & (rpyrma6<=r`wavenum'iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin4,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma6==rpyrma5) & (rpyrma6<=r`wavenum'iwindy) & !inlist(rpfin6,1,2) & !inlist(rpfin5,1,2) & !inlist(rpyrma6,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma) & (rpyrma5<=r`wavenum'iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma2) & (rpyrma5<=r`wavenum'iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma3) & (rpyrma5<=r`wavenum'iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma5==rpyrma4) & (rpyrma5<=r`wavenum'iwindy) & !inlist(rpfin5,1,2) & !inlist(rpfin4,1,2) & !inlist(rpyrma5,-9,-8,-1,.) ) ///
															 | ( (rpyrma4==rpyrma) & (rpyrma4<=r`wavenum'iwindy) & !inlist(rpfin4,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma4,-9,-8,-1,.) ) ///
															 | ( (rpyrma4==rpyrma2) & (rpyrma4<=r`wavenum'iwindy) & !inlist(rpfin4,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma4,-9,-8,-1,.) ) ///
															 | ( (rpyrma4==rpyrma3) & (rpyrma4<=r`wavenum'iwindy) & !inlist(rpfin4,1,2) & !inlist(rpfin3,1,2) & !inlist(rpyrma4,-9,-8,-1,.) ) ///
															 | ( (rpyrma3==rpyrma) & (rpyrma3<=r`wavenum'iwindy) & !inlist(rpfin3,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma3,-9,-8,-1,.) ) ///
															 | ( (rpyrma3==rpyrma2) & (rpyrma3<=r`wavenum'iwindy) & !inlist(rpfin3,1,2) & !inlist(rpfin2,1,2) & !inlist(rpyrma3,-9,-8,-1,.) ) ///
															 | ( (rpyrma2==rpyrma) & (rpyrma2<=r`wavenum'iwindy) & !inlist(rpfin2,1,2) & !inlist(rpfin,1,2) & !inlist(rpyrma2,-9,-8,-1,.) ) ) ///
														 & !missing(r`wavenum'iwindy) ///
														 & !inlist(r`wavenum'mend,.d,.m,.r)																		 
label variable r`wavenum'mend "r`wavenum'mend:w`wavenum' r # times unknown end marriage"

*wave spouse number of times dk marriage end
gen s`wavenum'mend =.
spouse r`wavenum'mend, result(s`wavenum'mend) wave(`wavenum')
label variable s`wavenum'mend "s`wavenum'mend:w`wavenum' s # times unknown end marriage"

*check

***length of current marriage***
*wave respondent length of current marriage
gen r`wavenum'mcurln =.
replace r`wavenum'mcurln = .l if rpmarst==. & inw3==1
replace r`wavenum'mcurln = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw3==1
replace r`wavenum'mcurln = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw3==1
replace r`wavenum'mcurln = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw3==1
replace r`wavenum'mcurln = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw3==1
replace r`wavenum'mcurln = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw3==1
replace r`wavenum'mcurln = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw3==1
replace r`wavenum'mcurln = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw3==1
replace r`wavenum'mcurln = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw3==1
replace r`wavenum'mcurln = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw3==1
replace r`wavenum'mcurln = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw3==1
replace r`wavenum'mcurln = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw3==1
replace r`wavenum'mcurln = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw3==1
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																			& ( (rpyrma>=rpyrma2) | (rpyrma2>r`wavenum'iwindy) | inlist(rpyrma2,-1,.) ) ///
																			& ( (rpyrma>=rpyrma3) | (rpyrma3>r`wavenum'iwindy) | inlist(rpyrma3,-1,.) ) ///
																			& ( (rpyrma>=rpyrma4) | (rpyrma4>r`wavenum'iwindy) | inlist(rpyrma4,-1,.) ) ///
																			& ( (rpyrma>=rpyrma5) | (rpyrma5>r`wavenum'iwindy) | inlist(rpyrma5,-1,.) ) ///
																			& ( (rpyrma>=rpyrma6) | (rpyrma6>r`wavenum'iwindy) | inlist(rpyrma6,-1,.) ) ///
																			& ( (rpyrma>=rpyrma7) | (rpyrma7>r`wavenum'iwindy) | inlist(rpyrma7,-1,.) ) ///
																			& rpyrma<=r`wavenum'iwindy ///
																			& ( rpfin==-1 | ((rpdyr>=r`wavenum'iwindy) & rpfin==1) | ((rpdiy>=r`wavenum'iwindy) & rpfin==2) ) ///
																			& !missing(r`wavenum'iwindy) ///
																			& !inlist(r`wavenum'mcurln,.d,.m,.r,.l)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
 																			 & ( (rpyrma2>=rpyrma) | (rpyrma>r`wavenum'iwindy) | inlist(rpyrma,-1,.) ) ///
	 																		 & ( (rpyrma2>=rpyrma3) | (rpyrma3>r`wavenum'iwindy) | inlist(rpyrma3,-1,.) ) ///
		 																	 & ( (rpyrma2>=rpyrma4) | (rpyrma4>r`wavenum'iwindy) | inlist(rpyrma4,-1,.) ) ///
			 																 & ( (rpyrma2>=rpyrma5) | (rpyrma5>r`wavenum'iwindy) | inlist(rpyrma5,-1,.) ) ///
				 															 & ( (rpyrma2>=rpyrma6) | (rpyrma6>r`wavenum'iwindy) | inlist(rpyrma6,-1,.) ) ///
					 														 & ( (rpyrma2>=rpyrma7) | (rpyrma7>r`wavenum'iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma2<=r`wavenum'iwindy ///
																			 & ( rpfin2==-1 | ((rpdyr2>=r`wavenum'iwindy) & rpfin2==1) | ((rpdiy2>=r`wavenum'iwindy) & rpfin2==2) ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.d,.m,.r,.l)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																			 & ( (rpyrma3>=rpyrma) | (rpyrma>r`wavenum'iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma2) | (rpyrma2>r`wavenum'iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma4) | (rpyrma4>r`wavenum'iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma5) | (rpyrma5>r`wavenum'iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma6) | (rpyrma6>r`wavenum'iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma7) | (rpyrma7>r`wavenum'iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma3<=r`wavenum'iwindy ///
																			 & ( rpfin3==-1 | ((rpdyr3>=r`wavenum'iwindy) & rpfin3==1) | ((rpdiy3>=r`wavenum'iwindy) & rpfin3==2) ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.d,.m,.r,.l)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																			 & ( (rpyrma4>=rpyrma) | (rpyrma>r`wavenum'iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma2) | (rpyrma2>r`wavenum'iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma3) | (rpyrma3>r`wavenum'iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma5) | (rpyrma5>r`wavenum'iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma6) | (rpyrma6>r`wavenum'iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma7) | (rpyrma7>r`wavenum'iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & rpyrma4<=r`wavenum'iwindy ///
																			 & ( rpfin4==-1 | ((rpdyr4>=r`wavenum'iwindy) & rpfin4==1) | ((rpdiy4>=r`wavenum'iwindy) & rpfin4==2) ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.d,.m,.r,.l)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																			 & ( (rpyrma5>=rpyrma) | (rpyrma>r`wavenum'iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma2) | (rpyrma2>r`wavenum'iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma3) | (rpyrma3>r`wavenum'iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma4) | (rpyrma4>r`wavenum'iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | (rpyrma6>r`wavenum'iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | (rpyrma7>r`wavenum'iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma5<=r`wavenum'iwindy ///
																			 & ( rpfin5==-1 | ((rpdyr5>=r`wavenum'iwindy) & rpfin5==1) | ((rpdiy5>=r`wavenum'iwindy) & rpfin5==2) ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.d,.m,.r,.l)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																			 & ( (rpyrma6>=rpyrma) | (rpyrma>r`wavenum'iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma2) | (rpyrma2>r`wavenum'iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma3) | (rpyrma3>r`wavenum'iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma4) | (rpyrma4>r`wavenum'iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma5) | (rpyrma5>r`wavenum'iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | (rpyrma7>r`wavenum'iwindy) | inlist(rpyrma7,-1,.) ) ///
																			 & rpyrma6<=r`wavenum'iwindy ///
																			 & ( rpfin6==-1 | ((rpdyr6>=r`wavenum'iwindy) & rpfin6==1) | ((rpdiy6>=r`wavenum'iwindy) & rpfin6==2) ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.d,.m,.r,.l)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																			 & ( (rpyrma7>=rpyrma) | (rpyrma>r`wavenum'iwindy) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma2) | (rpyrma2>r`wavenum'iwindy) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma3) | (rpyrma3>r`wavenum'iwindy) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma4) | (rpyrma4>r`wavenum'iwindy) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma5) | (rpyrma5>r`wavenum'iwindy) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | (rpyrma6>r`wavenum'iwindy) | inlist(rpyrma6,-1,.) ) ///
																			 & rpyrma7<=r`wavenum'iwindy ///
																			 & ( rpfin7==-1 | ((rpdyr7>=r`wavenum'iwindy) & rpfin7==1) | ((rpdiy7>=r`wavenum'iwindy) & rpfin7==2) ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.d,.m,.r,.l)
label variable r`wavenum'mcurln "r`wavenum'mcurln:w`wavenum' r length of current marriage"

*wave spouse length of current marriage
gen s`wavenum'mcurln =.
spouse r`wavenum'mcurln, result(s`wavenum'mcurln) wave(`wavenum')
label variable s`wavenum'mcurln "s`wavenum'mcurln:w`wavenum' s length of current marriage"

*check

***length of longest marriage (including current)***
*generate wave marriage lengths for each loop: 1-7
gen	length1w`wavenum' =.									
replace length1w`wavenum' = r`wavenum'iwindy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !missing(r`wavenum'iwindy) & ///
										(!inlist(rpfin,1,2,85,95) ///
											| ((rpdyr>=r`wavenum'iwindy) & rpfin==1 & !inlist(rpdyr,-9,-8,-2,-1,.)) ///
											| ((rpdiy>=r`wavenum'iwindy) & rpfin==2 & !inlist(rpdiy,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpyrma<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpyrma<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpyrma<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpyrma<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpyrma<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma<=r`wavenum'iwindy
replace length1w`wavenum' = rpdyr - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdyr,-9,-8,-2,-1,.) & rpdiv==1 & ! ( ///
										((rpdyr>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdyr>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdyr>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdyr>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdyr>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdyr>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma<=r`wavenum'iwindy ///
										& rpdyr<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
replace length1w`wavenum' = rpdiy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdiy,-9,-8,-2,-1,.) & rpfin==2 & ! ( ///
										((rpdiy>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdiy>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdiy>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdiy>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdiy>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdiy>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma<=r`wavenum'iwindy ///
										& rpdiy<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)

gen	length2w`wavenum' =.									
replace length2w`wavenum' = r`wavenum'iwindy - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !missing(r`wavenum'iwindy) & ///
										(!inlist(rpfin2,1,2,85,95) ///
											| ((rpdyr2>=r`wavenum'iwindy) & rpfin2==1 & !inlist(rpdyr2,-9,-8,-2,-1,.)) ///
											| ((rpdiy2>=r`wavenum'iwindy) & rpfin2==2 & !inlist(rpdiy2,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma2<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpyrma2<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpyrma2<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpyrma2<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpyrma2<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpyrma2<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma2<=r`wavenum'iwindy
replace length2w`wavenum' = rpdyr2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdyr2,-9,-8,-2,-1,.) & rpdiv2==1 & ! ( ///
										((rpdyr2>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdyr2>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdyr2>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdyr2>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdyr2>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdyr2>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma2<=r`wavenum'iwindy ///
										& rpdyr2<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
replace length2w`wavenum' = rpdiy2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdiy2,-9,-8,-2,-1,.) & rpfin2==2 & ! ( ///
										((rpdiy2>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdiy2>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdiy2>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdiy2>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdiy2>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdiy2>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma2<=r`wavenum'iwindy ///
										& rpdiy2<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)

gen	length3w`wavenum' =.									
replace length3w`wavenum' = r`wavenum'iwindy - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !missing(r`wavenum'iwindy) & ///
										(!inlist(rpfin3,1,2,85,95) ///
											| ((rpdyr3>=r`wavenum'iwindy) & rpfin3==1 & !inlist(rpdyr3,-9,-8,-2,-1,.)) ///
											| ((rpdiy3>=r`wavenum'iwindy) & rpfin3==2 & !inlist(rpdiy3,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma3<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpyrma3<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpyrma3<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpyrma3<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpyrma3<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpyrma3<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma3<=r`wavenum'iwindy
replace length3w`wavenum' = rpdyr3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdyr3,-9,-8,-2,-1,.) & rpdiv3==1 & ! ( ///
										((rpdyr3>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdyr3>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdyr3>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdyr3>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdyr3>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdyr3>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma3<=r`wavenum'iwindy ///
										& rpdyr3<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
replace length3w`wavenum' = rpdiy3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdiy3,-9,-8,-2,-1,.) & rpfin3==2 & ! ( ///
										((rpdiy3>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdiy3>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdiy3>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdiy3>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdiy3>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdiy3>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma3<=r`wavenum'iwindy ///
										& rpdiy3<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
										
gen	length4w`wavenum' =.									
replace length4w`wavenum' = r`wavenum'iwindy - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !missing(r`wavenum'iwindy) & ///
										(!inlist(rpfin4,1,2,85,95) ///
											| ((rpdyr4>=r`wavenum'iwindy) & rpfin4==1 & !inlist(rpdyr4,-9,-8,-2,-1,.)) ///
											| ((rpdiy4>=r`wavenum'iwindy) & rpfin4==2 & !inlist(rpdiy4,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma4<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpyrma4<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpyrma4<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpyrma4<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpyrma4<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpyrma4<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma4<=r`wavenum'iwindy
replace length4w`wavenum' = rpdyr4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdyr4,-9,-8,-2,-1,.) & rpdiv4==1 & ! ( ///
										((rpdyr4>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdyr4>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdyr4>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdyr4>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdyr4>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdyr4>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma4<=r`wavenum'iwindy ///
										& rpdyr4<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
replace length4w`wavenum' = rpdiy4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdiy4,-9,-8,-2,-1,.) & rpfin4==2 & ! ( ///
										((rpdiy4>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdiy4>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdiy4>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdiy4>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdiy4>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdiy4>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma4<=r`wavenum'iwindy ///
										& rpdiy4<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
										
gen	length5w`wavenum' =.									
replace length5w`wavenum' = r`wavenum'iwindy - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !missing(r`wavenum'iwindy) & ///
										(!inlist(rpfin5,1,2,85,95) ///
											| ((rpdyr5>=r`wavenum'iwindy) & rpfin5==1 & !inlist(rpdyr5,-9,-8,-2,-1,.)) ///
											| ((rpdiy5>=r`wavenum'iwindy) & rpfin5==2 & !inlist(rpdiy5,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma5<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpyrma5<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpyrma5<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpyrma5<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpyrma5<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpyrma5<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma5<=r`wavenum'iwindy
replace length5w`wavenum' = rpdyr5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdyr5,-9,-8,-2,-1,.) & rpdiv5==1 & ! ( ///
										((rpdyr5>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdyr5>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdyr5>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdyr5>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdyr5>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdyr5>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma5<=r`wavenum'iwindy ///
										& rpdyr5<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
replace length5w`wavenum' = rpdiy5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdiy5,-9,-8,-2,-1,.) & rpfin5==2 & ! ( ///
										((rpdiy5>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdiy5>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdiy5>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdiy5>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdiy5>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) | ///
										((rpdiy5>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma5<=r`wavenum'iwindy ///
										& rpdiy5<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
										
gen	length6w`wavenum' =.									
replace length6w`wavenum' = r`wavenum'iwindy - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !missing(r`wavenum'iwindy) & ///
										(!inlist(rpfin6,1,2,85,95) ///
											| ((rpdyr6>=r`wavenum'iwindy) & rpfin6==1 & !inlist(rpdyr6,-9,-8,-2,-1,.)) ///
											| ((rpdiy6>=r`wavenum'iwindy) & rpfin6==2 & !inlist(rpdiy6,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma6<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpyrma6<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpyrma6<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpyrma6<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpyrma6<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpyrma6<=rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma6<=r`wavenum'iwindy
replace length6w`wavenum' = rpdyr6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdyr6,-9,-8,-2,-1,.) & rpdiv6==1 & ! ( ///
										((rpdyr6>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdyr6>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdyr6>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdyr6>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdyr6>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdyr6>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma6<=r`wavenum'iwindy ///
										& rpdyr6<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
replace length6w`wavenum' = rpdiy6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdiy6,-9,-8,-2,-1,.) & rpfin6==2 & ! ( ///
										((rpdiy6>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdiy6>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdiy6>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdiy6>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdiy6>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdiy6>rpyrma7) & (rpyrma7<=r`wavenum'iwindy) ) ) ///
										& rpyrma6<=r`wavenum'iwindy ///
										& rpdiy6<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
										
gen	length7w`wavenum' =.									
replace length7w`wavenum' = r`wavenum'iwindy - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !missing(r`wavenum'iwindy) & ///
										(!inlist(rpfin7,1,2,85,95) ///
											| ((rpdyr7>=r`wavenum'iwindy) & rpfin7==1 & !inlist(rpdyr7,-9,-8,-2,-1,.)) ///
											| ((rpdiy7>=r`wavenum'iwindy) & rpfin7==2 & !inlist(rpdiy7,-9,-8,-2,-1,.)) ) ///
										& !( ///
										((rpyrma7<=rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpyrma7<=rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpyrma7<=rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpyrma7<=rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpyrma7<=rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpyrma7<=rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) ) ///
										& rpyrma7<=r`wavenum'iwindy
replace length7w`wavenum' = rpdyr7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdyr7,-9,-8,-2,-1,.) & rpdiv7==1 & ! ( ///
										((rpdyr7>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdyr7>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdyr7>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdyr7>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdyr7>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdyr7>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) ) ///
										& rpyrma7<=r`wavenum'iwindy ///
										& rpdyr7<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)
replace length7w`wavenum' = rpdiy7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdiy7,-9,-8,-2,-1,.) & rpfin7==2 & ! ( ///
										((rpdiy7>rpyrma) & (rpyrma<=r`wavenum'iwindy) ) | ///
										((rpdiy7>rpyrma2) & (rpyrma2<=r`wavenum'iwindy) ) | ///
										((rpdiy7>rpyrma3) & (rpyrma3<=r`wavenum'iwindy) ) | ///
										((rpdiy7>rpyrma4) & (rpyrma4<=r`wavenum'iwindy) ) | ///
										((rpdiy7>rpyrma5) & (rpyrma5<=r`wavenum'iwindy) ) | ///
										((rpdiy7>rpyrma6) & (rpyrma6<=r`wavenum'iwindy) ) ) ///
										& rpyrma7<=r`wavenum'iwindy ///
										& rpdiy7<=r`wavenum'iwindy ///
										& !missing(r`wavenum'iwindy)

*wave respondent length of longest marriage
gen r`wavenum'mlen =.
replace r`wavenum'mlen = .l if rpmarst==. & inw3==1
replace r`wavenum'mlen = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw3==1
replace r`wavenum'mlen = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw3==1
replace r`wavenum'mlen = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw3==1
replace r`wavenum'mlen = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw3==1
replace r`wavenum'mlen = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw3==1
replace r`wavenum'mlen = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw3==1
replace r`wavenum'mlen = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw3==1
replace r`wavenum'mlen = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw3==1
replace r`wavenum'mlen = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw3==1
replace r`wavenum'mlen = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw3==1
replace r`wavenum'mlen = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw3==1
replace r`wavenum'mlen = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw3==1
replace r`wavenum'mlen = max(length1w`wavenum', length2w`wavenum', length3w`wavenum', length4w`wavenum', length5w`wavenum', length6w`wavenum', length7w`wavenum') if !inlist(r`wavenum'mlen,.d,.m,.r,.l)
label variable r`wavenum'mlen "r`wavenum'mlen:w`wavenum' r length of longest marriage"
drop length1w`wavenum'-length7w`wavenum'

*wave spouse length of longest marriage
gen s`wavenum'mlen =.	
spouse r`wavenum'mlen, result(s`wavenum'mlen) wave(`wavenum')
label variable s`wavenum'mlen "s`wavenum'mlen:w`wavenum' s length of longest marriage"

*check

***flag for current marital status: without partnership***
*wave 3 respondent current marital status flag
gen r`wavenum'mstatf =.
replace r`wavenum'mstatf = .l if rpmarst==. & inw3==1
replace r`wavenum'mstatf = 0 if (inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 0) | ( r`wavenum'mstath == 8 & r`wavenum'mnev == 1 )
replace r`wavenum'mstatf = 1 if r`wavenum'mstath == 8 & r`wavenum'mnev == 0 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = 2 if inlist(r`wavenum'mstath,1,4,5,7) & r`wavenum'mnev == 1 & !missing(r`wavenum'mstath, r`wavenum'mnev)
label variable r`wavenum'mstatf "r`wavenum'mstatf:w`wavenum' r mstath-flag diff w/marhist"

*wave 3 spouse current marital status flag
gen s`wavenum'mstatf =.
spouse r`wavenum'mstatf, result(s`wavenum'mstatf) wave(3)
label variable s`wavenum'mstatf "s`wavenum'mstatf:w`wavenum' s mstath-flag diff w/marhist"

*value labels
label values r`wavenum'mstatf mstatf
label values s`wavenum'mstatf mstatf

*check

***place of birth***
*respondent place of birth (update)
missing_w`wavenum' fqcbthr if missing(rabplace), result(rabplace)
replace rabplace = 1 if fqcbthr == 1 & missing(rabplace)
replace rabplace = 11 if fqcbthr == 2 & missing(rabplace)

*wave spouse place of birth
gen s`wavenum'bplace =.
spouse rabplace, result(s`wavenum'bplace) wave(`wavenum')
label variable s`wavenum'bplace "s`wavenum'bplace:w`wavenum' s place of birth"

*value labels
label values s`wavenum'bplace place

*check

***whether born in country of interview***
*respondent whether born in country of interview (update)
missing_w`wavenum' fqcbthr if missing(rabcountry), result(rabcountry)
replace rabcountry = 0 if fqcbthr==2 & mi(rabcountry)
replace rabcountry = 1 if fqcbthr==1 & mi(rabcountry)

*wave 3 spouse whether born in country of interview
gen s`wavenum'bcountry = .
spouse rabcountry, result(s`wavenum'bcountry) wave(`wavenum')
label variable s`wavenum'bcountry "s`wavenum'bcountry:w`wavenum' s born in country of interview"
label values s`wavenum'bcountry bornin

***death date***
*wave 3 spouse death year
gen s3dyear =.
spouse radyear, result(s3dyear) wave(3)
label variable s3dyear "s3dyear:w3 s death year"


***drop ELSA index file raw variables***
drop `demo_w`wavenum'_index'

***drop ELSA wave specific core file raw variables***
drop `demo_w`wavenum'_core'

***drop ELSA wave specific financial derived file raw variables***
drop `demo_w`wavenum'_fina'

***drop ELSA wave specific life history data variables***
drop `demo_w`wavenum'_hist'

******************************************************************************************


	

*set wave number
local wavenum=4
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with index file***
local demo_w`wavenum'_index idahhw4 persno outindw4 mortwave outscw4 finstatw4 ///
                     dobyear sex // w4lwgt w4xwgt w4scwt
merge 1:1 idauniq using "$index", keepusing(`demo_w`wavenum'_index') nogen

***merge with previous wave specific core data***
merge 1:1 idauniq using "$wave_3_core", keepusing(dhr dhr? dhr1? dimar) nogen

*relationship statuses
foreach v of varlist dhr dhr? dhr1? {
	gen pre_`v'=`v'
}
drop dhr dhr? dhr1?

*marriage status
gen pre_dimar=dimar
drop dimar

***merge with wave specific core data***
local demo_w`wavenum'_core dhr dhr? dhr1? dimar perid iapid hopid askpx hhresp ///
                   intdaty intdatm iintdaty iintdatm indobyr ///
                   indager indsex fqethnr fqcbthr ///
                   fqmqua fqaqua fqqumdeg fqqumtea fqqumnur fqqumhnc fqqumonc ///
 				   fqqumcgf fqqumcga fqqumcgo fqqumale fqqumasl fqqumslc ///
 				   fqqumolp fqqumola fqqumold fqqumgca fqqumgcd fqqumcs1 ///
 				   fqqumcs2 fqqumcsu fqqumsll fqqumsup fqqummat fqqumnv5 ///
		           fqqumnv4 fqqumnv3 fqqumnv2 fqqumnv1 fqqumtra fqqumcle ///
		           fqqumfor fqqumovo fqqumnvz fqqumnne fqqummil fqqumdip ///
		           fqqumoac fqqumopr fqqum85 fqqum86 ///
                   dinma dinfa dianm dimad dianf difad ///
                   mainhh painhh w4lwgt w4xwgt w4scwt disib disibc didob didbny GOR
merge 1:1 idauniq using "$wave_4_core", keepusing(`demo_w`wavenum'_core') nogen

***merge with wave specific financial derived variables data***
local demo_w`wavenum'_fina coupid
merge 1:1 idauniq using "$wave_4_fina", keepusing(`demo_w`wavenum'_fina') nogen

***merge with wave 3 life history data***
local demo_w`wavenum'_hist rpyrma rpyrma? rpmarst rpmarst? rpdiv rpdiv? rpdyr rpdyr? rpfin rpfin? rpdiy rpdiy? 
merge 1:1 idauniq using "$wave_3_hist", keepusing(`demo_w`wavenum'_hist') nogen


***person specific identifier***
*wave household id
gen hh`wavenum'hhid =.
replace hh`wavenum'hhid = idahhw4 if !inlist(idahhw4,-2,.)
label variable hh`wavenum'hhid "wave `wavenum' specific household serial number /num"

*check

gen hh`wavenum'hhidc = string(hh`wavenum'hhid)
label variable hh`wavenum'hhidc "wave `wavenum' specific household serial number /5-char"

*person number
replace pn = perid if !missing(perid)

***wave status: response indicator***
*wave response indicator
gen inw`wavenum' =0
replace inw`wavenum' = 1 if inlist(outindw4,11,13,21,23,24,25)
label variable inw`wavenum' "inw`wavenum': =1 if respondent w`wavenum'"

*value labels
label values inw`wavenum' inw

*check

***self-completion status: response indicator***
*wave self-completion response indicator
gen inw`wavenum'sc =0
replace inw`wavenum'sc = 1 if outscw4==1
label variable inw`wavenum'sc "inw`wavenum'sc: =1 if respondent w`wavenum' self-completion"

*value labels
label values inw`wavenum'sc inwsc

*check

****create temporary indicator of wave spouse***
gen w`wavenum'spouse=.
replace w`wavenum'spouse = 0 if inw`wavenum'==1
replace w`wavenum'spouse = 1 if inlist(dhr ,1,2) | ///
																inlist(dhr2,1,2) | ///
																inlist(dhr3,1,2) | ///
																inlist(dhr4,1,2) | ///
																inlist(dhr5,1,2) | ///
																inlist(dhr6,1,2) | ///
																inlist(dhr7,1,2) | ///
																inlist(dhr8,1,2) | ///
																inlist(dhr9,1,2) | ///
																inlist(dhr10,1,2) | ///
																inlist(dhr11,1,2) | ///
																inlist(dhr12,1,2) | ///
																inlist(dhr13,1,2) | ///
																inlist(dhr14,1,2) | ///
																inlist(dhr15,1,2) | ///
																inlist(dhr16,1,2)
											
***couple identifier***
*wave couple id
gen h`wavenum'coupid =.
replace h`wavenum'coupid = coupid if !inlist(coupid,.,-10)
label variable h`wavenum'coupid "wave `wavenum' specific couple id number /num"

*check

*wave couple id (character)
gen str5 h`wavenum'coupidc = string(h`wavenum'coupid)
label variable h`wavenum'coupidc "wave `wavenum' specific couple id number /5-char"

***spouse identifier***
*wave spouse id
gen s`wavenum'idauniq =.
bysort coupid: replace s`wavenum'idauniq = 0 if missing(idauniq[_n+1]) & _n==1 & inw`wavenum' ==1
bysort coupid: replace s`wavenum'idauniq = idauniq[_n+1] if !inlist(coupid,.,-10) & idauniq[_n+1]!=.
bysort coupid: replace s`wavenum'idauniq = idauniq[_n-1] if !inlist(coupid,.,-10) & idauniq[_n-1]!=.
label variable s`wavenum'idauniq "s`wavenum'idauniq:w`wavenum' spouse idauniq"

***wave status: interview status***
*wave interview status
gen r`wavenum'iwstat =.
replace r`wavenum'iwstat = 0 if inlist(outindw4,-993,-992,-991) | mi(outindw4)
replace r`wavenum'iwstat = 1 if inlist(outindw4,11,13,21,23,24,25)
replace r`wavenum'iwstat = 4 if inlist(outindw4,51,52,53,54,57,59,71) | (!inlist(outindw4,11,13,21,23,24,25) & inlist(mortwave,51,52,53,61,63))
replace r`wavenum'iwstat = 5 if inlist(mortwave,41,42,43)
replace r`wavenum'iwstat = 6 if inlist(mortwave,21,22,23,31,32,33)
replace r`wavenum'iwstat = 7 if inlist(outindw4,77,79) & !inrange(mortwave,11,63)
replace r`wavenum'iwstat = 9 if inlist(outindw4,-2,-1,31,43,44,45,46,55,56,60,78) & !inrange(mortwave,11,63)
label variable r`wavenum'iwstat "r`wavenum'iwstat:w`wavenum' r interview status"

*wave spouse interview status
gen s`wavenum'iwstat =.
spouse r`wavenum'iwstat, result(s`wavenum'iwstat) wave(`wavenum')
label variable s`wavenum'iwstat "s`wavenum'iwstat:w`wavenum' s interview status"

*value labels
label values r`wavenum'iwstat wstat
label values s`wavenum'iwstat wstat

*check 

***sample cohort***
*wave respondent cohort
gen r`wavenum'cohort_e=.
replace r`wavenum'cohort_e = 1 if inlist(finstatw4,1,2,3)
replace r`wavenum'cohort_e = 2 if inlist(finstatw4,5,6,13,21)
replace r`wavenum'cohort_e = 3 if inlist(finstatw4,4)
replace r`wavenum'cohort_e = 4 if inlist(finstatw4,7,8,9)
replace r`wavenum'cohort_e = 5 if inlist(finstatw4,12,20)
replace r`wavenum'cohort_e = 6 if inlist(finstatw4,10)
replace r`wavenum'cohort_e = 7 if inlist(finstatw4,11)
replace r`wavenum'cohort_e = 8 if inlist(finstatw4,14,15,16)
replace r`wavenum'cohort_e = 9 if inlist(finstatw4,19)
replace r`wavenum'cohort_e = 10 if inlist(finstatw4,17)
replace r`wavenum'cohort_e = 11 if inlist(finstatw4,18)
label variable r`wavenum'cohort_e "r`wavenum'cohort_e:w`wavenum' r sample cohort, ELSA specific"

*wave spouse cohort
gen s`wavenum'cohort_e=.
spouse r`wavenum'cohort_e, result(s`wavenum'cohort_e) wave(`wavenum')
label variable s`wavenum'cohort_e "s`wavenum'cohort_e:w`wavenum' s sample cohort, ELSA specific"

*value labels
label values r`wavenum'cohort_e cohort_e
label values s`wavenum'cohort_e cohort_e

*check

***whether eligible for the elsa sample***
*wave spouse eligibility
gen s`wavenum'elsamp =.
spouse raelsamp, result(s`wavenum'elsamp) wave(`wavenum')
label variable s`wavenum'elsamp "s`wavenum'elsamp:ELSA s sample-age eligible/Wave 1 Resp"

*value labels
label values s`wavenum'elsamp elsaamp


***person-level longitudinal weight, core sample***
*wave respondent longitudinal weight
gen r`wavenum'lwtresp =.
replace r`wavenum'lwtresp = w4lwgt
label variable r`wavenum'lwtresp "r`wavenum'lwtresp:w`wavenum' r person-level longitudinal weight, core sample"

*wave spouse longitudinal weight, core
gen s`wavenum'lwtresp =.
spouse r`wavenum'lwtresp, result(s`wavenum'lwtresp) wave(`wavenum')
label variable s`wavenum'lwtresp "s`wavenum'lwtresp:w`wavenum' s person-level longitudinal weight, core sample"

*check

***person-level cross-sectional weight, core sample***
*wave respondent cross-sectional weight, core
gen r`wavenum'cwtresp =.
replace r`wavenum'cwtresp = w4xwgt
label variable r`wavenum'cwtresp "r`wavenum'cwtresp:w`wavenum' r person-level cross-sectional weight, core sample"

*wave spouse cross-sectional weight, core
gen s`wavenum'cwtresp =.
spouse r`wavenum'cwtresp, result(s`wavenum'cwtresp) wave(`wavenum')
label variable s`wavenum'cwtresp "s`wavenum'cwtresp:w`wavenum' s person-level cross-sectional weight, core sample"

*check

***person-level weight, self-completion sample***
*wave respondent weight, self-completion sample
gen r`wavenum'scwtresp =.
replace r`wavenum'scwtresp = w4scwt
label variable r`wavenum'scwtresp "r`wavenum'scwtresp:w`wavenum' r person-level weight, self-completion sample"

*wave spouse weight, self-completion
gen s`wavenum'scwtresp =.
spouse r`wavenum'scwtresp, result(s`wavenum'scwtresp) wave(`wavenum')
label variable s`wavenum'scwtresp "s`wavenum'scwtresp:w`wavenum' s person-level weight, self-completion sample"

*check

***spouse identifier***
*respondent number of spouse id's (update)
replace raspct = raspct +1 if s`wavenum'idauniq != s1idauniq & s`wavenum'idauniq != s1idauniq & !inlist(s`wavenum'idauniq,0,.)
replace raspct = 0 if s`wavenum'idauniq == 0 & missing(raspct)
replace raspct = 1 if !inlist(s`wavenum'idauniq,0,.) & missing(raspct)

*check

*respondent first spouse id (update)
replace raspid1 = s`wavenum'idauniq if !inlist(s`wavenum'idauniq,0,.) & missing(raspid1)

*check

*respondent second spouse id (update)
replace raspid2 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.)

*check

*respondent third spouse id (update)
replace raspid3 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.)

*check

*respondent fourth spouse id (update)
replace raspid4 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2  & s`wavenum'idauniq != raspid3 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.) & !inlist(raspid3,0,.)

*check

***sampling weight***
*wave 4 respondent stratification variable
gen r4strat =.
replace r4strat = idahhw4 if idahhw4!=-2
label variable r4strat "r4strat:w4 hse stratification variable"

*check 

*respondent clustering variable
gen r4clust = ""
replace r4clust = GOR if !inlist(GOR,"-2","")
label variable r4clust "r4clust:w4 hse clustering variable"

***number of household respondents***
*wave household number of respondents   
egen hh`wavenum'hhresp = sum(inw`wavenum'==1) if inw`wavenum'==1, by(hh`wavenum'hhid)
label variable hh`wavenum'hhresp "hh`wavenum'hhresp:w`wavenum' # core respondents in hh"

*check

***whether couple household***
*wave household couple indicator
egen h`wavenum'cpl = sum(inw`wavenum'==1), by(coupid)
recode h`wavenum'cpl (0=.) (1=0) (2=1)
label variable h`wavenum'cpl "h`wavenum'cpl:w`wavenum' whether coupled"

*value labels
label values h`wavenum'cpl cpl

*check

***financial, family respondent***
*wave respondent financial respondent indicator
gen r`wavenum'finr =.
replace r`wavenum'finr = 1 if perid == iapid & !inlist(iapid,.,-1,-9,-8)
replace r`wavenum'finr = 0 if perid != iapid & inw`wavenum'==1
label variable r`wavenum'finr "r`wavenum'finr:w`wavenum' r whether financial resp"

*wave spouse financial respondent indicator
gen s`wavenum'finr =.
spouse r`wavenum'finr, result(s`wavenum'finr) wave(`wavenum')
label variable s`wavenum'finr "s`wavenum'finr:w`wavenum' s whether financial resp"

*wave couple financial respondent indicator
gen h`wavenum'anyfin =.
replace h`wavenum'anyfin = 0 if iapid==-1
replace h`wavenum'anyfin = 1 if !inlist(iapid,.,-1) & inw`wavenum' ==1
label variable h`wavenum'anyfin "h`wavenum'anyfin:w`wavenum' whether any finr in couple"

*value labels
label values r`wavenum'finr finr
label values s`wavenum'finr finr
label values h`wavenum'anyfin finr

*check 

***household, family respondent***
*wave respondent household respondent indicator
gen r`wavenum'hhr =.
replace r`wavenum'hhr = 1 if perid == hhresp & !inlist(hhresp,.,-1,-9,-8,97)
replace r`wavenum'hhr = 0 if perid != hhresp & inw`wavenum'==1
label variable r`wavenum'hhr "r`wavenum'hhr:w`wavenum' r whether hh resp"

*wave spouse household respondent indicator
gen s`wavenum'hhr =.
spouse r`wavenum'hhr, result(s`wavenum'hhr) wave(`wavenum')
label variable s`wavenum'hhr "s`wavenum'hhr:w`wavenum' s whether hh resp"

*value labels
label values r`wavenum'hhr hhr
label values s`wavenum'hhr hhr

*check

***housing, family respondent***
*wave respondent housing respondent indicator
gen r`wavenum'hor =.
replace r`wavenum'hor = 1 if perid == hopid & !inlist(hopid,.,-1,-9,-8)
replace r`wavenum'hor = 0 if perid != hopid & inw`wavenum' ==1
label variable r`wavenum'hor "r`wavenum'hor:w`wavenum' r whether housing resp"

*wave spouse housing respondent indicator
gen s`wavenum'hor =.
spouse r`wavenum'hor, result(s`wavenum'hor) wave(`wavenum')
label variable s`wavenum'hor "s`wavenum'hor:w`wavenum' s whether housing resp"

*wave household housing respondent indicator
gen hh`wavenum'anyho =.
replace hh`wavenum'anyho = 0 if inlist(hopid,-1)
replace hh`wavenum'anyho = 1 if !inlist(hopid,.,-1) & inw`wavenum'==1
label variable hh`wavenum'anyho "hh`wavenum'anyho:w`wavenum' whether any hor in hh"

*value labels
label values r`wavenum'hor   hor
label values s`wavenum'hor   hor
label values hh`wavenum'anyho hor

*check

***whether proxy interview***
*wave respondent proxy indicator
gen r`wavenum'proxy =.
replace r`wavenum'proxy = 1 if askpx ==1
replace r`wavenum'proxy = 0 if askpx ==0
label variable r`wavenum'proxy "r`wavenum'proxy:w`wavenum' r whether proxy interview"

*wave spouse proxy indicator
gen s`wavenum'proxy =.
spouse r`wavenum'proxy, result(s`wavenum'proxy) wave(`wavenum')
label variable s`wavenum'proxy "s`wavenum'proxy:w`wavenum' s whether proxy interview"

*value labels
label values r`wavenum'proxy proxy
label values s`wavenum'proxy proxy

*check

***interview dates***
*wave household interview date
gen hh`wavenum'iwhh =.
replace hh`wavenum'iwhh = ym(intdaty, intdatm) if inrange(intdaty, 2000, 2010) & inrange(intdatm, 1, 12)
label variable hh`wavenum'iwhh "hh`wavenum'iwhh:w`wavenum' household interview date"

*wave household interview date flag
gen hh`wavenum'iwhhf =.
replace hh`wavenum'iwhhf = 0 if inrange(intdaty,2000, 2010) & inrange(intdatm,1,12)
replace hh`wavenum'iwhhf = 1 if !inrange(intdatm,1,12) & inw`wavenum' ==1
replace hh`wavenum'iwhhf = 2 if !inrange(intdaty,2000, 2010) & inw`wavenum' ==1
label variable hh`wavenum'iwhhf "hh`wavenum'iwhhf:w`wavenum' household interview date flag"

*wave respondent individual interview date
gen r`wavenum'iwind =.
replace r`wavenum'iwind = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2010) & inrange(iintdatm, 1, 12)
label variable r`wavenum'iwind "r`wavenum'iwind:w`wavenum' r individual interview date"

*wave spouse individual interview date
gen s`wavenum'iwind =.
spouse r`wavenum'iwind, result(s`wavenum'iwind) wave(`wavenum')
label variable s`wavenum'iwind "s`wavenum'iwind:w`wavenum' s individual interview date"

*wave respondent individual interview date flag
gen r`wavenum'iwindf =.
replace r`wavenum'iwindf = 0 if inrange(iintdaty,2000, 2010) & inrange(iintdatm,1,12)
replace r`wavenum'iwindf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
replace r`wavenum'iwindf = 2 if !inrange(iintdaty,2000, 2010) & inw`wavenum' ==1
label variable r`wavenum'iwindf "r`wavenum'iwindf:w`wavenum' r individual interview date flag"

*wave spouse individual interview flag
gen s`wavenum'iwindf =.
spouse r`wavenum'iwindf, result(s`wavenum'iwindf) wave(`wavenum')
label variable s`wavenum'iwindf "s`wavenum'iwindf:w`wavenum' s individual interview date flag"

*wave household interview month
gen hh`wavenum'iwhhm =.
replace hh`wavenum'iwhhm = intdatm if inrange(intdatm,1,12)
label variable hh`wavenum'iwhhm "hh`wavenum'iwhhm:w`wavenum' household interview month"

*wave household interview year
gen hh`wavenum'iwhhy =.
replace hh`wavenum'iwhhy = intdaty if inrange(intdaty,2000, 2010)
label variable hh`wavenum'iwhhy "hh`wavenum'iwhhy:w`wavenum' household interview year"

*wave respondent individual interview month
gen r`wavenum'iwindm =.
replace r`wavenum'iwindm = iintdatm if inrange(iintdatm,1,12)
label variable r`wavenum'iwindm "r`wavenum'iwindm:w`wavenum' r individual interview month"

*wave respondent individual interview year
gen r`wavenum'iwindy =.
replace r`wavenum'iwindy = iintdaty if inrange(iintdaty,2000, 2010)
label variable r`wavenum'iwindy "r`wavenum'iwindy:w`wavenum' r individual interview year"

*wave spouse individual interview year
gen s`wavenum'iwindm =.
spouse r`wavenum'iwindm, result(s`wavenum'iwindm) wave(`wavenum')
label variable s`wavenum'iwindm "s`wavenum'iwindm:w`wavenum' s individual interview month"

*wave spouse individual interview year
gen s`wavenum'iwindy =.
spouse r`wavenum'iwindy, result(s`wavenum'iwindy) wave(`wavenum')
label variable s`wavenum'iwindy "s`wavenum'iwindy:w`wavenum' s individual interview year"

*value labels
label values hh`wavenum'iwhhf dateflag
label values r`wavenum'iwindf dateflag
label values s`wavenum'iwindf dateflag

*check


***birth date: year***
*respondent birth year (update)
replace rabyear = indobyr if inrange(indobyr,1900,2000) & (missing(rabyear) | rafbyear != 0)
replace rabyear = 1918 if indobyr == -7 & missing(rabyear)

*wave spouse birth year
gen s`wavenum'byear =.
spouse rabyear, result(s`wavenum'byear) wave(`wavenum')
label variable s`wavenum'byear "s`wavenum'byear:w`wavenum' s birth year"

*respondent birth year flag
replace rafbyear = 0 if inrange(indobyr,1900,2000) & (mi(rafbyear) | rafbyear != 0)
replace rafbyear = 4 if indobyr == -7 & mi(rafbyear)

*wave spouse birth year flag
gen s`wavenum'fbyear =.
spouse rafbyear, result(s`wavenum'fbyear) wave(`wavenum')
label variable s`wavenum'fbyear "s`wavenum'fbyear:w`wavenum' s flag birth year bottom-coded"
label values s`wavenum'fbyear fbyear

*check 

***age at interview (in years)***
*wave respondent age in years
gen r`wavenum'agey=.
replace r`wavenum'agey = indager if inrange(indager,10,90)
replace r`wavenum'agey = 90 if indager==99
label variable r`wavenum'agey "r`wavenum'agey:w`wavenum' r age (years) at ivw"

*wave spouse age in years
gen s`wavenum'agey=.
spouse r`wavenum'agey, result(s`wavenum'agey) wave(`wavenum')
label variable s`wavenum'agey "s`wavenum'agey:w`wavenum' s age (years) at ivw"

*wave respondent age in years flag
gen r`wavenum'fagey=.
replace r`wavenum'fagey = 0 if inrange(indager,10,90)
replace r`wavenum'fagey = 1 if indager == 99
label variable r`wavenum'fagey "r`wavenum'fagey:w`wavenum' r flag age at iwv top-coded"
label values r`wavenum'fagey fagey

*wave spouse age in years flag
gen s`wavenum'fagey=.
spouse r`wavenum'fagey, result(s`wavenum'fagey) wave(`wavenum')
label variable s`wavenum'fagey "s`wavenum'fagey:w`wavenum' s flag age at iwv top-coded"
label values s`wavenum'fagey fagey

*check

***gender***
*respondent gender (update)
missing_w`wavenum' indsex if missing(ragender), result(ragender)
replace ragender = 1 if indsex == 1 & missing(ragender)
replace ragender = 2 if indsex == 2 & missing(ragender)

*wave spouse gender
gen s`wavenum'gender =.
spouse ragender, result(s`wavenum'gender) wave(`wavenum')
label variable s`wavenum'gender "s`wavenum'gender:w`wavenum' s gender"

*respondent gender flag (update)
replace rafgendr = 0 if ( (ragender == 1 & indsex == 1) | (ragender == 2 & indsex == 2) ) & rafgendr!=1
replace rafgendr = 1 if (ragender == 1 & indsex == 2) | (ragender == 2 & indsex == 1)

*wave spouse gender flag
gen s`wavenum'fgendr = .
spouse rafgendr, result(s`wavenum'fgendr) wave(`wavenum')
label variable s`wavenum'fgendr "s`wavenum'fgendr:w`wavenum' flag if problem with s gender"

*value labels
label values s`wavenum'gender gender
label values s`wavenum'fgendr genderflag

*check

***race, ethnicity: race***
*respondent race (update)
missing_w`wavenum' fqethnr if missing(raracem), result(raracem)
replace raracem = 1 if fqethnr == 1 & missing(raracem)
replace raracem = 4 if fqethnr == 2 & missing(raracem)

*wave spouse race
gen s`wavenum'racem =.
spouse raracem, result(s`wavenum'racem) wave(`wavenum')
label variable s`wavenum'racem "s`wavenum'racem:w`wavenum' s race - masked"

*respondent race flag (update)
replace raracef = 0 if ( (raracem == 1 & fqethnr == 1) | (raracem == 4 & fqethnr == 2) ) & raracef!=1
replace raracef = 1 if (raracem == 1 & fqethnr == 2) | (raracem == 4 & fqethnr == 1)
replace raracef = .m if fqethnr==-9

*wave spouse race flag
gen s`wavenum'racef =.
spouse raracef, result(s`wavenum'racef) wave(`wavenum')
label variable s`wavenum'racef "s`wavenum'racef:w`wavenum' flag if problem with s race"

*value labels
label values s`wavenum'racem race
label values s`wavenum'racef raceflag

*check


***education: categorical summary***
*respondent education categorically (update)
replace raeduc_e = 5 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 4 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumhnc == 1 | ///
														fqqumonc == 1 | ///
														fqqumcgf == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumnv2 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 1 if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumcs1 == 1 | ///
														fqqumcs2 == 1 | ///
														fqqumcsu == 1 | ///
														fqqumsll == 1 | ///
														fqqumsup == 1 | ///
														fqqummat == 1 | ///
														fqqumnv1 == 1 ) | fqaqua == 2 | (fqqumdeg == 0 & ///
							              fqqumtea == 0 & ///
							              fqqumnur == 0 & ///
							              fqqumhnc == 0 & ///
														fqqumonc == 0 & ///
														fqqumcgf == 0 & ///
														fqqumcga == 0 & ///
														fqqumcgo == 0 & ///
														fqqumale == 0 & ///
														fqqumasl == 0 & ///
														fqqumslc == 0 & ///
														fqqumolp == 0 & ///
														fqqumola == 0 & ///
														fqqumold == 0 & ///
														fqqumgca == 0 & ///
														fqqumgcd == 0 & ///
														fqqumcs1 == 0 & ///
														fqqumcs2 == 0 & ///
														fqqumcsu == 0 & ///
														fqqumsll == 0 & ///
														fqqumsup == 0 & ///
														fqqummat == 0 & ///
														fqqumnv5 == 0 & ///
														fqqumnv4 == 0 & ///
														fqqumnv3 == 0 & ///
														fqqumnv2 == 0 & ///
										        fqqumnv1 == 0)) & (mi(raeduc_e) & raeduc_e != .o)
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeduc_e) & raeduc_e != .o), result(raeduc_e)										 														
replace raeduc_e = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & missing(raeduc_e) & !inlist(raeduc_e,.o,.r,.d)
replace raeduc_e = .o if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
														
																																										
*wave spouse education categorically
gen s`wavenum'educ_e =.
spouse raeduc_e, result(s`wavenum'educ_e) wave(`wavenum')
label variable s`wavenum'educ_e "s`wavenum'educ_e:w`wavenum' s education (categ)"
label values s`wavenum'educ_e educcats

*check


***education: isced category***
*wave 4 respondent education isced category (update)
replace raedisced = .n if (fqaqua == 2 | (fqqumdeg == 0 & ///
							              fqqumtea == 0 & ///
							              fqqumnur == 0 & ///
							              fqqumhnc == 0 & ///
														fqqumonc == 0 & ///
														fqqumcgf == 0 & ///
														fqqumcga == 0 & ///
														fqqumcgo == 0 & ///
														fqqumale == 0 & ///
														fqqumasl == 0 & ///
														fqqumslc == 0 & ///
														fqqumolp == 0 & ///
														fqqumola == 0 & ///
														fqqumold == 0 & ///
														fqqumgca == 0 & ///
														fqqumgcd == 0 & ///
														fqqumcs1 == 0 & ///
														fqqumcs2 == 0 & ///
														fqqumcsu == 0 & ///
														fqqumsll == 0 & ///
														fqqumsup == 0 & ///
														fqqummat == 0 & ///
														fqqumnv5 == 0 & ///
														fqqumnv4 == 0 & ///
														fqqumnv3 == 0 & ///
														fqqumnv2 == 0 & ///
										        fqqumnv1 == 0))  & (mi(raedisced) & !inlist(raedisced,.n,.o))		
replace raedisced = 5 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))	
replace raedisced = 4 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))		
replace raedisced = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
													 fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raedisced) & !inlist(raedisced,.n,.o))																					

missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raedisced) & !inlist(raedisced,.n,.o)), result(raedisced)
replace raedisced = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & mi(raedisced) & !inlist(raedisced,.n,.o,.r,.d) 
replace raedisced = .o if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raedisced) & !inlist(raedisced,.n,.o))
																			 																											
*wave 4 spouse education isced category
gen s`wavenum'edisced =.
spouse raedisced, result(s`wavenum'edisced) wave(`wavenum')
label variable s`wavenum'edisced "s`wavenum'edisced:w`wavenum' s education isced"
label values s`wavenum'edisced educisced 

***education: harmonized education category***
*wave 4 respondent education harmonized category (update)
replace raeducl = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeducl) & !inlist(raeducl,.o))	
replace raeducl = 2 if (fqmqua == 1 | fqaqua == 1) & ( ///
													 fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 | ///
													  fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raeducl) & !inlist(raeducl,.o))											
replace raeducl = 1 if (fqaqua == 2 | (fqqumdeg == 0 & ///
							              fqqumtea == 0 & ///
							              fqqumnur == 0 & ///
							              fqqumhnc == 0 & ///
														fqqumonc == 0 & ///
														fqqumcgf == 0 & ///
														fqqumcga == 0 & ///
														fqqumcgo == 0 & ///
														fqqumale == 0 & ///
														fqqumasl == 0 & ///
														fqqumslc == 0 & ///
														fqqumolp == 0 & ///
														fqqumola == 0 & ///
														fqqumold == 0 & ///
														fqqumgca == 0 & ///
														fqqumgcd == 0 & ///
														fqqumcs1 == 0 & ///
														fqqumcs2 == 0 & ///
														fqqumcsu == 0 & ///
														fqqumsll == 0 & ///
														fqqumsup == 0 & ///
														fqqummat == 0 & ///
														fqqumnv5 == 0 & ///
														fqqumnv4 == 0 & ///
														fqqumnv3 == 0 & ///
														fqqumnv2 == 0 & ///
										        fqqumnv1 == 0))  & (mi(raeducl) & !inlist(raeducl,.o))
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeducl) & !inlist(raeducl,.o)), result(raeducl)
replace raeducl = .o if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = .h if 	inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & mi(raeducl) & !inlist(raeducl,.o,.r,.d) 													
label variable raeducl "raeducl:R harmonized education"
label values raeducl educharm

*wave 4 spouse education harmonized category
gen s4educl = .
spouse raeducl, result(s4educl) wave(4)
label variable s4educl "s4educl:w4 S harmonized education"
label values s4educl educharm

***current marital status: with implied partnerships***
*wave respondent marital status with partnership
gen r`wavenum'mstat=.
missing_w`wavenum' dimar, result(r`wavenum'mstat)
replace r`wavenum'mstat = 1 if inlist(dimar, 2,3,4,11)
replace r`wavenum'mstat = 4 if inlist(dimar, 5, 8)
replace r`wavenum'mstat = 5 if inlist(dimar, 6, 9)
replace r`wavenum'mstat = 7 if inlist(dimar, 7, 10)
replace r`wavenum'mstat = 8 if dimar == 1
replace r`wavenum'mstat = 3 if (inlist(dimar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.))
label variable r`wavenum'mstat "r`wavenum'mstat:w`wavenum' r marital status w/partners, filled"

*wave spouse marital status with implied partnership
gen s`wavenum'mstat=.
spouse r`wavenum'mstat, result(s`wavenum'mstat) wave(`wavenum')
label variable s`wavenum'mstat "s`wavenum'mstat:w`wavenum' s marital status w/partners, filled"

*value labels
label values r`wavenum'mstat marwpart
label values s`wavenum'mstat marwpart

*check

***current marital status: current implied partnership status***
*wave respondent implied partnership status
gen r`wavenum'mpart =.
missing_w`wavenum' dimar, result(r`wavenum'mpart)
replace r`wavenum'mpart = 0 if inw`wavenum'==1
replace r`wavenum'mpart = 1 if inlist(dimar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.)
label variable r`wavenum'mpart "r`wavenum'mpart:w`wavenum' r implied partnership status"

*wave spouse partnership status
gen s`wavenum'mpart =.
spouse r`wavenum'mpart, result(s`wavenum'mpart) wave(`wavenum')
label variable s`wavenum'mpart "s`wavenum'mpart:w`wavenum' s implied partnership status"

*value labels
label values r`wavenum'mpart part
label values s`wavenum'mpart part

*check


***current marital status: without implied partnerships***
*wave respondent marital status without implied partnership
gen r`wavenum'mstath =.
missing_w`wavenum' dimar, result(r`wavenum'mstath)
replace r`wavenum'mstath = 1 if inlist(dimar, 2,3,4,11)
replace r`wavenum'mstath = 4 if inlist(dimar, 5, 8)
replace r`wavenum'mstath = 5 if inlist(dimar, 6, 9)
replace r`wavenum'mstath = 7 if inlist(dimar, 7, 10)
replace r`wavenum'mstath = 8 if dimar == 1
label variable r`wavenum'mstath "r`wavenum'mstath:w`wavenum' r marital status"

*wave spouse marital status without implied partnership
gen s`wavenum'mstath =.
spouse r`wavenum'mstath, result(s`wavenum'mstath) wave(`wavenum')
label variable s`wavenum'mstath "s`wavenum'mstath:w`wavenum' s marital status"

*value labels
label values r`wavenum'mstath marwopart
label values s`wavenum'mstath marwopart

*check

***number of marriages***
*married but missing last wave's husband/wife (temp)
tempvar w`pre_wavenum'mishw
gen `w`pre_wavenum'mishw'=.
replace `w`pre_wavenum'mishw' = 0 if inw`pre_wavenum'==1
foreach v of varlist pre_dhr pre_dhr? pre_dhr1? {
	replace `w`pre_wavenum'mishw' = 1 if `v'==1 & inlist(pre_dimar,2,4)
}
replace `w`pre_wavenum'mishw' = 2 if `w`pre_wavenum'mishw'==0 & inlist(pre_dimar,2,4)
recode `w`pre_wavenum'mishw' (1=0) (2=1)

*wave respondent number of marriages
gen r`wavenum'mrct =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mrct = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mrct = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mrct)
missing_w`wavenum' dimar, result(r`wavenum'mrct)
missing_H r`pre_wavenum'mrct, result(r`wavenum'mrct)
replace r`wavenum'mrct = r`pre_wavenum'mrct if !mi(r`pre_wavenum'mrct) & inw`wavenum'==1
replace r`wavenum'mrct = r`wavenum'mrct + 1 if ( (( (pre_dhr!=1 & dhr==1) | ///
																					   		 (pre_dhr2!=1 & dhr2==1) | ///
																					   		 (pre_dhr3!=1 & dhr3==1) | ///
																					   		 (pre_dhr4!=1 & dhr4==1) | ///
																					   		 (pre_dhr5!=1 & dhr5==1) | ///
																					   		 (pre_dhr6!=1 & dhr6==1) | ///
																					   		 (pre_dhr7!=1 & dhr7==1) | ///
																					   		 (pre_dhr8!=1 & dhr8==1) | ///
																					   		 (pre_dhr9!=1 & dhr9==1) | ///
																					   		 (pre_dhr10!=1 & dhr10==1) | ///
																					   		 (pre_dhr11!=1 & dhr11==1) | ///
																					   		 (pre_dhr12!=1 & dhr12==1) | ///
																					   		 (dhr13==1) | ///
																					   		 (dhr14==1) | ///
																					   		 (dhr15==1) | ///
																					   		 (dhr16==1) ) & `w`pre_wavenum'mishw'!=1 & inlist(dimar,2,4) ) | ///
																					   		 (inlist(pre_dimar,1,3,5,6,7,8,9,10,11) & inlist(dimar,2,4)) | ///
																					   		 (pre_dimar==2 & dimar==4) ) & ///
																					   		 !mi(r`wavenum'mrct) & inw`wavenum'==1
label variable r`wavenum'mrct "r`wavenum'mrct:w`wavenum' r # marriages"

*wave spouse number of marriages
gen s`wavenum'mrct =.
spouse r`wavenum'mrct, result(s`wavenum'mrct) wave(`wavenum')
label variable s`wavenum'mrct "s`wavenum'mrct:w`wavenum' s # marriages"

*check

***marital history: never married***
*wave respondent never married indicator
gen r`wavenum'mnev =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mnev = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mnev = .l if rpmarst==. & inw`wavenum'==1
missing_w`wavenum' dimar, result(r`wavenum'mnev)
missing_H r`pre_wavenum'mnev, result(r`wavenum'mnev)
replace r`wavenum'mnev = 0 if (r`pre_wavenum'mnev == 0 | inlist(dimar,2,4,5,6,7)) & inw`wavenum'==1
replace r`wavenum'mnev = 1 if r`pre_wavenum'mnev==1 & inlist(dimar,1,3,8,9,10,11)
label variable r`wavenum'mnev "r`wavenum'mnev:w`wavenum' r never married"

*wave spouse never married indicator
gen s`wavenum'mnev =.
spouse r`wavenum'mnev, result(s`wavenum'mnev) wave(`wavenum')
label variable s`wavenum'mnev "s`wavenum'mnev:w`wavenum' s never married"

*value labels
label values r`wavenum'mnev mnev
label values s`wavenum'mnev mnev

*check

***marital history: # times divorced***
*wave respondent number of times divorced
gen r`wavenum'mdiv =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mdiv = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mdiv = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mdiv)
missing_w`wavenum' dimar, result(r`wavenum'mdiv)
missing_H r`pre_wavenum'mdiv, result(r`wavenum'mdiv)
replace r`wavenum'mdiv = r`pre_wavenum'mdiv if !mi(r`pre_wavenum'mdiv) & inw`wavenum'==1
replace r`wavenum'mdiv = r`wavenum'mdiv + 1 if ( (( (pre_dhr==1 & dhr!=1) | ///
																					   		 (pre_dhr2==1 & dhr2!=1) | ///
																					   		 (pre_dhr3==1 & dhr3!=1) | ///
																					   		 (pre_dhr4==1 & dhr4!=1) | ///
																					   		 (pre_dhr5==1 & dhr5!=1) | ///
																					   		 (pre_dhr6==1 & dhr6!=1) | ///
																					   		 (pre_dhr7==1 & dhr7!=1) | ///
																					   		 (pre_dhr8==1 & dhr8!=1) | ///
																					   		 (pre_dhr9==1 & dhr9!=1) | ///
																					   		 (pre_dhr10==1 & dhr10!=1) | ///
																					   		 (pre_dhr11==1 & dhr11!=1) | ///
																					   		 (pre_dhr12==1 & dhr12!=1) ) & inlist(pre_dimar,2,4) & dimar==6 ) | ///
																					   		 (inlist(pre_dimar,2,4) & dimar==6) ) & ///
																					   		 !mi(r`wavenum'mdiv) & inw`wavenum'==1
label variable r`wavenum'mdiv "r`wavenum'mdiv:w`wavenum' r # times divorced"

*wave spouse number of times divorced
gen s`wavenum'mdiv =.
spouse r`wavenum'mdiv, result(s`wavenum'mdiv) wave(`wavenum')
label variable s`wavenum'mdiv "s`wavenum'mdiv:w`wavenum' s # times divorced"

*check

***marital history: # times widowed***
*wave respondent number of times widowed
gen r`wavenum'mwid =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mwid = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mwid = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mwid)
missing_w`wavenum' dimar, result(r`wavenum'mwid)
missing_H r`pre_wavenum'mwid, result(r`wavenum'mwid)
replace r`wavenum'mwid = r`pre_wavenum'mwid if !mi(r`pre_wavenum'mwid) & inw`wavenum'==1
replace r`wavenum'mwid = r`wavenum'mwid + 1 if ( (( (pre_dhr==1 & dhr!=1) | ///
																					   		 (pre_dhr2==1 & dhr2!=1) | ///
																					   		 (pre_dhr3==1 & dhr3!=1) | ///
																					   		 (pre_dhr4==1 & dhr4!=1) | ///
																					   		 (pre_dhr5==1 & dhr5!=1) | ///
																					   		 (pre_dhr6==1 & dhr6!=1) | ///
																					   		 (pre_dhr7==1 & dhr7!=1) | ///
																					   		 (pre_dhr8==1 & dhr8!=1) | ///
																					   		 (pre_dhr9==1 & dhr9!=1) | ///
																					   		 (pre_dhr10==1 & dhr10!=1) | ///
																					   		 (pre_dhr11==1 & dhr11!=1) | ///
																					   		 (pre_dhr12==1 & dhr12!=1) ) & inlist(pre_dimar,2,4) & dimar==7 ) | ///
																					   		 (inlist(pre_dimar,2,4) & dimar==7) ) & ///
																					   		 !mi(r`wavenum'mwid) & inw`wavenum'==1
label variable r`wavenum'mwid "r`wavenum'mwid:w`wavenum' r # times widowed"

*wave spouse number of times widowed
gen s`wavenum'mwid =.
spouse r`wavenum'mwid, result(s`wavenum'mwid) wave(`wavenum')
label variable s`wavenum'mwid "s`wavenum'mwid:w`wavenum' s # times widowed"

*check

***marital history: #times don't know how marriage ended***
*different husband/wife from last wave (temp)
tempvar w`wavenum'diffhw
gen `w`wavenum'diffhw'=.
replace `w`wavenum'diffhw' = 0 if inw`wavenum'==1
forvalues p=1/12 {
	if "`p'"=="1" local p_
	else local p_ `p'
	local lp = `p'-1
	local np = `p'+1
	forvalues r=1/`lp' {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_dhr`p_' == 1 & dhr`r_' == 1
	}
	forvalues r=`np'/16 {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_dhr`p_' == 1 & dhr`r_' == 1
	}
}

*wave respondent number of times dk marriage end
gen r`wavenum'mend =.	
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mend = .b if inw`w'!=1 & inw`wavenum'==1
}															   		 
replace r`wavenum'mend = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mend)
missing_w`wavenum' dimar, result(r`wavenum'mend)
missing_H r`pre_wavenum'mend, result(r`wavenum'mend)
replace r`wavenum'mend = r`pre_wavenum'mend if !mi(r`pre_wavenum'mend) & inw`wavenum'==1
replace r`wavenum'mend = r`wavenum'mend + 1 if ( (( (pre_dhr==1 & dhr!=1) | ///
																					   		 (pre_dhr2==1 & dhr2!=1) | ///
																					   		 (pre_dhr3==1 & dhr3!=1) | ///
																					   		 (pre_dhr4==1 & dhr4!=1) | ///
																					   		 (pre_dhr5==1 & dhr5!=1) | ///
																					   		 (pre_dhr6==1 & dhr6!=1) | ///
																					   		 (pre_dhr7==1 & dhr7!=1) | ///
																					   		 (pre_dhr8==1 & dhr8!=1) | ///
																					   		 (pre_dhr9==1 & dhr9!=1) | ///
																					   		 (pre_dhr10==1 & dhr10!=1) | ///
																					   		 (pre_dhr11==1 & dhr11!=1) | ///
																					   		 (pre_dhr12==1 & dhr12!=1) ) & inlist(pre_dimar,2,4) & inlist(dimar,1,3,8,9,10,11) ) | ///
																					   		 (inlist(pre_dimar,2,4) & inlist(dimar,1,3,8,9,10,11)) | ///
																					   		 (`w`wavenum'diffhw'==1 & inlist(pre_dimar,2,4) & inlist(dimar,2,4)) ) & ///
																					   		 !mi(r`wavenum'mend) & inw`wavenum'==1
label variable r`wavenum'mend "r`wavenum'mend:w`wavenum' r # times unknown end marriage"

*wave spouse number of times dk marriage end
gen s`wavenum'mend =.
spouse r`wavenum'mend, result(s`wavenum'mend) wave(`wavenum')
label variable s`wavenum'mend "s`wavenum'mend:w`wavenum' s # times unknown end marriage"

*check

***length of current marriage***
*consistent husband/wife
gen w`wavenum'conhw=.
replace w`wavenum'conhw=0 if inw`wavenum'==1
replace w`wavenum'conhw=1 if inlist(pre_dimar,2,4) & inlist(dimar,2,4) & `w`wavenum'diffhw'!=1 // for wave 5 change conditions to include w`wavenum'conhw==1
	
*wave respondent length of current marriage
gen r`wavenum'mcurln =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mcurln = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mcurln = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mcurln = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw`wavenum'==1
replace r`wavenum'mcurln = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw`wavenum'==1
replace r`wavenum'mcurln = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																			& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																			& !missing(r`wavenum'iwindy) ///
																			& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
 																			 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
	 																		 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
		 																	 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
			 																 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
				 															 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
					 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																			 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																			 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma6,-1,.) ) ///
																			 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																			 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																			 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																			 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
label variable r`wavenum'mcurln "r`wavenum'mcurln:w`wavenum' r length of current marriage"

*wave spouse length of current marriage
gen s`wavenum'mcurln =.
spouse r`wavenum'mcurln, result(s`wavenum'mcurln) wave(`wavenum')
label variable s`wavenum'mcurln "s`wavenum'mcurln:w`wavenum' s length of current marriage"

*check

***length of longest marriage (including current)***
*generate wave marriage lengths for each loop: 1-7
gen	length1w`wavenum' =.									
replace length1w`wavenum' = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																												& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																												& !missing(r`wavenum'iwindy) ///
																												& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length1w`wavenum' = rpdyr - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdyr,-9,-8,-2,-1,.) & rpdiv==1 & !( ///
										((rpdyr>rpyrma2) ) | ///
										((rpdyr>rpyrma3) ) | ///
										((rpdyr>rpyrma4) ) | ///
										((rpdyr>rpyrma5) ) | ///
										((rpdyr>rpyrma6) ) | ///
										((rpdyr>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length1w`wavenum' = rpdiy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdiy,-9,-8,-2,-1,.) & rpfin==2 & !( ///
										((rpdiy>rpyrma2) ) | ///
										((rpdiy>rpyrma3) ) | ///
										((rpdiy>rpyrma4) ) | ///
										((rpdiy>rpyrma5) ) | ///
										((rpdiy>rpyrma6) ) | ///
										((rpdiy>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length2w`wavenum' =.									
replace length2w`wavenum' = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
																												 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
														 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length2w`wavenum' = rpdyr2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdyr2,-9,-8,-2,-1,.) & rpdiv2==1 & !( ///
										((rpdyr2>rpyrma) ) | ///
										((rpdyr2>rpyrma3) ) | ///
										((rpdyr2>rpyrma4) ) | ///
										((rpdyr2>rpyrma5) ) | ///
										((rpdyr2>rpyrma6) ) | ///
										((rpdyr2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length2w`wavenum' = rpdiy2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdiy2,-9,-8,-2,-1,.) & rpfin2==2 & !( ///
										((rpdiy2>rpyrma) ) | ///
										((rpdiy2>rpyrma3) ) | ///
										((rpdiy2>rpyrma4) ) | ///
										((rpdiy2>rpyrma5) ) | ///
										((rpdiy2>rpyrma6) ) | ///
										((rpdiy2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length3w`wavenum' =.									
replace length3w`wavenum' = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																												 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length3w`wavenum' = rpdyr3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdyr3,-9,-8,-2,-1,.) & rpdiv3==1 & !( ///
										((rpdyr3>rpyrma) ) | ///
										((rpdyr3>rpyrma2) ) | ///
										((rpdyr3>rpyrma4) ) | ///
										((rpdyr3>rpyrma5) ) | ///
										((rpdyr3>rpyrma6) ) | ///
										((rpdyr3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length3w`wavenum' = rpdiy3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdiy3,-9,-8,-2,-1,.) & rpfin3==2 & !( ///
										((rpdiy3>rpyrma) ) | ///
										((rpdiy3>rpyrma2) ) | ///
										((rpdiy3>rpyrma4) ) | ///
										((rpdiy3>rpyrma5) ) | ///
										((rpdiy3>rpyrma6) ) | ///
										((rpdiy3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length4w`wavenum' =.									
replace length4w`wavenum' = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																												 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma6,-1,.) ) ///
																												 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length4w`wavenum' = rpdyr4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdyr4,-9,-8,-2,-1,.) & rpdiv4==1 & !( ///
										((rpdyr4>rpyrma) ) | ///
										((rpdyr4>rpyrma2) ) | ///
										((rpdyr4>rpyrma3) ) | ///
										((rpdyr4>rpyrma5) ) | ///
										((rpdyr4>rpyrma6) ) | ///
										((rpdyr4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length4w`wavenum' = rpdiy4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdiy4,-9,-8,-2,-1,.) & rpfin4==2 & !( ///
										((rpdiy4>rpyrma) ) | ///
										((rpdiy4>rpyrma2) ) | ///
										((rpdiy4>rpyrma3) ) | ///
										((rpdiy4>rpyrma5) ) | ///
										((rpdiy4>rpyrma6) ) | ///
										((rpdiy4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length5w`wavenum' =.									
replace length5w`wavenum' = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																												 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length5w`wavenum' = rpdyr5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdyr5,-9,-8,-2,-1,.) & rpdiv5==1 & !( ///
										((rpdyr5>rpyrma) ) | ///
										((rpdyr5>rpyrma2) ) | ///
										((rpdyr5>rpyrma3) ) | ///
										((rpdyr5>rpyrma4) ) | ///
										((rpdyr5>rpyrma6) ) | ///
										((rpdyr5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length5w`wavenum' = rpdiy5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdiy5,-9,-8,-2,-1,.) & rpfin5==2 & !( ///
										((rpdiy5>rpyrma) ) | ///
										((rpdiy5>rpyrma2) ) | ///
										((rpdiy5>rpyrma3) ) | ///
										((rpdiy5>rpyrma4) ) | ///
										((rpdiy5>rpyrma6) ) | ///
										((rpdiy5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length6w`wavenum' =.									
replace length6w`wavenum' = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																												 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length6w`wavenum' = rpdyr6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdyr6,-9,-8,-2,-1,.) & rpdiv6==1 & !( ///
										((rpdyr6>rpyrma) ) | ///
										((rpdyr6>rpyrma2) ) | ///
										((rpdyr6>rpyrma3) ) | ///
										((rpdyr6>rpyrma4) ) | ///
										((rpdyr6>rpyrma5) ) | ///
										((rpdyr6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length6w`wavenum' = rpdiy6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdiy6,-9,-8,-2,-1,.) & rpfin6==2 & !( ///
										((rpdiy6>rpyrma) ) | ///
										((rpdiy6>rpyrma2) ) | ///
										((rpdiy6>rpyrma3) ) | ///
										((rpdiy6>rpyrma4) ) | ///
										((rpdiy6>rpyrma5) ) | ///
										((rpdiy6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length7w`wavenum' =.									
replace length7w`wavenum' = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																												 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length7w`wavenum' = rpdyr7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdyr7,-9,-8,-2,-1,.) & rpdiv7==1 & !( ///
										((rpdyr7>rpyrma) ) | ///
										((rpdyr7>rpyrma2) ) | ///
										((rpdyr7>rpyrma3) ) | ///
										((rpdyr7>rpyrma4) ) | ///
										((rpdyr7>rpyrma5) ) | ///
										((rpdyr7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length7w`wavenum' = rpdiy7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdiy7,-9,-8,-2,-1,.) & rpfin7==2 & !( ///
										((rpdiy7>rpyrma) ) | ///
										((rpdiy7>rpyrma2) ) | ///
										((rpdiy7>rpyrma3) ) | ///
										((rpdiy7>rpyrma4) ) | ///
										((rpdiy7>rpyrma5) ) | ///
										((rpdiy7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)

*wave respondent length of longest marriage
gen r`wavenum'mlen =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mlen = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mlen = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = max(length1w`wavenum', length2w`wavenum', length3w`wavenum', length4w`wavenum', length5w`wavenum', length6w`wavenum', length7w`wavenum') if !inlist(r`wavenum'mlen,.l,.s,.d,.m,.r)
label variable r`wavenum'mlen "r`wavenum'mlen:w`wavenum' r length of longest marriage"
drop length1w`wavenum'-length7w`wavenum'

*wave spouse length of longest marriage
gen s`wavenum'mlen =.
spouse r`wavenum'mlen, result(s`wavenum'mlen) wave(`wavenum')
label variable s`wavenum'mlen "s`wavenum'mlen:w`wavenum' s length of longest marriage"

*check

***flag for current marital status: without partnership***
*wave 3 respondent current marital status flag
gen r`wavenum'mstatf =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mstatf = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mstatf = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mstatf = 0 if (inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 0) | ( r`wavenum'mstath == 8 & r`wavenum'mnev == 1 )
replace r`wavenum'mstatf = 1 if r`wavenum'mstath == 8 & r`wavenum'mnev == 0 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = 2 if inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 1 & !missing(r`wavenum'mstath, r`wavenum'mnev)
label variable r`wavenum'mstatf "r`wavenum'mstatf:w`wavenum' r mstath-flag diff w/marhist"

*wave 3 spouse current marital status flag
gen s`wavenum'mstatf =.
spouse r`wavenum'mstatf, result(s`wavenum'mstatf) wave(3)
label variable s`wavenum'mstatf "s`wavenum'mstatf:w`wavenum' s mstath-flag diff w/marhist"

*value labels
label values r`wavenum'mstatf mstatf
label values s`wavenum'mstatf mstatf

*check
																				   		 
***place of birth***
*respondent place of birth (update)
missing_w`wavenum' fqcbthr if missing(rabplace), result(rabplace)
replace rabplace = 1 if fqcbthr == 1 & missing(rabplace)
replace rabplace = 11 if fqcbthr == 2 & missing(rabplace)

*wave spouse place of birth
gen s`wavenum'bplace =.
spouse rabplace, result(s`wavenum'bplace) wave(`wavenum')
label variable s`wavenum'bplace "s`wavenum'bplace:w`wavenum' s place of birth"

*value labels
label values s`wavenum'bplace place

*check

***whether born in country of interview***
*respondent whether born in country of interview (update)
missing_w`wavenum' fqcbthr if missing(rabcountry), result(rabcountry)
replace rabcountry = 0 if fqcbthr==2 & mi(rabcountry)
replace rabcountry = 1 if fqcbthr==1 & mi(rabcountry)

*wave 4 spouse whether born in country of interview
gen s`wavenum'bcountry = .
spouse rabcountry, result(s`wavenum'bcountry) wave(`wavenum')
label variable s`wavenum'bcountry "s`wavenum'bcountry:w`wavenum' s born in country of interview"
label values s`wavenum'bcountry bornin


*check 

***death date***
*wave 4 spouse death year
gen s4dyear =.
spouse radyear, result(s4dyear) wave(4)
label variable s4dyear "s4dyear:w4 s death year"


****drop ELSA index file raw variables***
drop `demo_w`wavenum'_index'

***drop ELSA previous wave specific core file raw variables***
drop pre_dhr pre_dhr? pre_dhr1? pre_dimar

***drop ELSA wave specific core file raw variables***
drop `demo_w`wavenum'_core'

***drop ELSA wave specific financial derived file raw variables***
drop `demo_w`wavenum'_fina'

***drop ELSA wave specific life history data variables***
drop `demo_w`wavenum'_hist'

*******************************************************************************************

*set wave number
local wavenum=5
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with index file***
local demo_w`wavenum'_index idahhw5 persno outindw5 mortwave outscw5 finstatw5 ///
                     dobyear sex // w5lwgt w5xwgt w5scwt
merge 1:1 idauniq using "$index", keepusing(`demo_w`wavenum'_index') nogen

***merge with previous wave specific core data***
merge 1:1 idauniq using "$wave_4_core", keepusing(dhr dhr? dhr1? dimar) nogen

*relationship statuses
foreach v of varlist dhr dhr? dhr1? {
	gen pre_`v'=`v'
}
drop dhr dhr? dhr1?

*marriage status
gen pre_dimar=dimar
drop dimar

***merge with wave specific core data***
local demo_w`wavenum'_core dhr dhr? dhr1? dimar perid iapid hopid askpx hhresp ///
                   iintdaty iintdatm indobyr ///
                   indager indsex fqethnr fqcbthr ///
                   fqmqua fqaqua fqqumdeg fqqumtea fqqumnur fqqumhnc fqqumonc ///
				   fqqumcgf fqqumcga fqqumcgo fqqumale fqqumasl fqqumslc ///
				   fqqumolp fqqumola fqqumold fqqumgca fqqumgcd fqqumcs1 ///
				   fqqumcs2 fqqumcsu fqqumsll fqqumsup fqqummat fqqumnv5 ///
				   fqqumnv4 fqqumnv3 fqqumnv2 fqqumnv1 fqqumtra fqqumcle ///
				   fqqumfor fqqumovo fqqumnvz fqqumnne fqqummil fqqumdip ///
				   fqqumoac fqqumopr fqqum85 fqqum86 ///
                   dinma dinfa dianm dimad dianf difad ///
                   mainhh painhh w5lwgt w5xwgt w5scwt screwh GOR 
merge 1:1 idauniq using "$wave_5_core", keepusing(`demo_w`wavenum'_core') nogen

***merge with wave specific financial derived variables data***
local demo_w`wavenum'_fina coupid
merge 1:1 idauniq using "$wave_5_fina", keepusing(`demo_w`wavenum'_fina') nogen

***merge with wave 3 life history data***
local demo_w`wavenum'_hist rpyrma rpyrma? rpmarst rpmarst? rpdiv rpdiv? rpdyr rpdyr? rpfin rpfin? rpdiy rpdiy? 
merge 1:1 idauniq using "$wave_3_hist", keepusing(`demo_w`wavenum'_hist') nogen


***person specific identifier***
*wave household id
gen hh`wavenum'hhid =.
replace hh`wavenum'hhid = idahhw5 if !inlist(idahhw5,-2,.)
label variable hh`wavenum'hhid "wave `wavenum' specific household serial number /num"

*check

gen hh`wavenum'hhidc = string(hh`wavenum'hhid)
label variable hh`wavenum'hhidc "wave `wavenum' specific household serial number /5-char"

*person number
replace pn = perid if !missing(perid)

***wave status: response indicator***
*wave response indicator
gen inw`wavenum' =0
replace inw`wavenum' = 1 if inlist(outindw5,11,13,21,23,24,25)
label variable inw`wavenum' "inw`wavenum': =1 if respondent w`wavenum'"

*value labels
label values inw`wavenum' inw

*check

***self-completion status: response indicator***
*wave self-completion response indicator
gen inw`wavenum'sc =0
replace inw`wavenum'sc = 1 if outscw5==1
label variable inw`wavenum'sc "inw`wavenum'sc: =1 if respondent w`wavenum' self-completion"

*value labels
label values inw`wavenum'sc inwsc

*check

****create temporary indicator of wave spouse***
gen w`wavenum'spouse=.
replace w`wavenum'spouse = 0 if inw`wavenum'==1
replace w`wavenum'spouse = 1 if inlist(dhr ,1,2) | ///
																inlist(dhr2,1,2) | ///
																inlist(dhr3,1,2) | ///
																inlist(dhr4,1,2) | ///
																inlist(dhr5,1,2) | ///
																inlist(dhr6,1,2) | ///
																inlist(dhr7,1,2) | ///
																inlist(dhr8,1,2) | ///
																inlist(dhr9,1,2) | ///
																inlist(dhr10,1,2) | ///
																inlist(dhr11,1,2) | ///
																inlist(dhr12,1,2) | ///
																inlist(dhr13,1,2) | ///
																inlist(dhr14,1,2) | ///
																inlist(dhr15,1,2) | ///
																inlist(dhr16,1,2)
											
***couple identifier***
*wave couple id
gen h`wavenum'coupid =.
replace h`wavenum'coupid = coupid if !inlist(coupid,.,-10)
label variable h`wavenum'coupid "wave `wavenum' specific couple id number /num"

*check

*wave couple id (character)
gen str5 h`wavenum'coupidc = string(h`wavenum'coupid)
label variable h`wavenum'coupidc "wave `wavenum' specific couple id number /5-char"

***spouse identifier***
*wave spouse id
gen s`wavenum'idauniq =.
bysort coupid: replace s`wavenum'idauniq = 0 if missing(idauniq[_n+1]) & _n==1 & inw`wavenum' ==1
bysort coupid: replace s`wavenum'idauniq = idauniq[_n+1] if !inlist(coupid,.,-10) & idauniq[_n+1]!=.
bysort coupid: replace s`wavenum'idauniq = idauniq[_n-1] if !inlist(coupid,.,-10) & idauniq[_n-1]!=.
label variable s`wavenum'idauniq "s`wavenum'idauniq:w`wavenum' spouse idauniq"

***wave status: interview status***
*wave interview status
gen r`wavenum'iwstat =.
replace r`wavenum'iwstat = 0 if inlist(outindw5,-993,-992,-991) | mi(outindw5)
replace r`wavenum'iwstat = 1 if inlist(outindw5,11,13,21,23,24,25)
replace r`wavenum'iwstat = 4 if inlist(outindw5,51,52,53,54,57,59,71) | (!inlist(outindw5,11,13,21,23,24,25) & inlist(mortwave,61,63))
replace r`wavenum'iwstat = 5 if inlist(mortwave,51,52,53)
replace r`wavenum'iwstat = 6 if inlist(mortwave,21,22,23,31,32,33,41,42,43)
replace r`wavenum'iwstat = 7 if inlist(outindw5,77,79) & !inrange(mortwave,11,63)
replace r`wavenum'iwstat = 9 if inlist(outindw5,-2,-1,31,43,44,45,46,55,56,60,78) & !inrange(mortwave,11,63)
label variable r`wavenum'iwstat "r`wavenum'iwstat:w`wavenum' r interview status"

*wave spouse interview status
gen s`wavenum'iwstat =.
spouse r`wavenum'iwstat, result(s`wavenum'iwstat) wave(`wavenum')
label variable s`wavenum'iwstat "s`wavenum'iwstat:w`wavenum' s interview status"

*value labels
label values r`wavenum'iwstat wstat
label values s`wavenum'iwstat wstat

*check 

***sample cohort***
*wave respondent cohort
gen r`wavenum'cohort_e=.
replace r`wavenum'cohort_e = 1 if inlist(finstatw5,1,2,3)
replace r`wavenum'cohort_e = 2 if inlist(finstatw5,5,6,13,21,22)
replace r`wavenum'cohort_e = 3 if inlist(finstatw5,4)
replace r`wavenum'cohort_e = 4 if inlist(finstatw5,7,8,9)
replace r`wavenum'cohort_e = 5 if inlist(finstatw5,12,20,23)
replace r`wavenum'cohort_e = 6 if inlist(finstatw5,10)
replace r`wavenum'cohort_e = 7 if inlist(finstatw5,11)
replace r`wavenum'cohort_e = 8 if inlist(finstatw5,14,15,16)
replace r`wavenum'cohort_e = 9 if inlist(finstatw5,19,24)
replace r`wavenum'cohort_e = 10 if inlist(finstatw5,17)
replace r`wavenum'cohort_e = 11 if inlist(finstatw5,18)
label variable r`wavenum'cohort_e "r`wavenum'cohort_e:w`wavenum' r sample cohort, ELSA specific"

*wave spouse cohort
gen s`wavenum'cohort_e=.
spouse r`wavenum'cohort_e, result(s`wavenum'cohort_e) wave(`wavenum')
label variable s`wavenum'cohort_e "s`wavenum'cohort_e:w`wavenum' s sample cohort, ELSA specific"

*value labels
label values r`wavenum'cohort_e cohort_e
label values s`wavenum'cohort_e cohort_e

*check

**whether eligible for the elsa sample***
*wave spouse eligibility
gen s`wavenum'elsamp =.
spouse raelsamp, result(s`wavenum'elsamp) wave(`wavenum')
label variable s`wavenum'elsamp "s`wavenum'elsamp:ELSA s sample-age eligible/Wave 1 Resp"

*value labels
label values s`wavenum'elsamp elsaamp


***person-level longitudinal weight, core sample***
*wave respondent longitudinal weight
gen r`wavenum'lwtresp =.
replace r`wavenum'lwtresp = w5lwgt
label variable r`wavenum'lwtresp "r`wavenum'lwtresp:w`wavenum' r person-level longitudinal weight, core sample"

*wave spouse longitudinal weight, core
gen s`wavenum'lwtresp =.
spouse r`wavenum'lwtresp, result(s`wavenum'lwtresp) wave(`wavenum')
label variable s`wavenum'lwtresp "s`wavenum'lwtresp:w`wavenum' s person-level longitudinal weight, core sample"

*check

***person-level cross-sectional weight, core sample***
*wave respondent cross-sectional weight, core
gen r`wavenum'cwtresp =.
replace r`wavenum'cwtresp = w5xwgt
label variable r`wavenum'cwtresp "r`wavenum'cwtresp:w`wavenum' r person-level cross-sectional weight, core sample"

*wave spouse cross-sectional weight, core
gen s`wavenum'cwtresp =.
spouse r`wavenum'cwtresp, result(s`wavenum'cwtresp) wave(`wavenum')
label variable s`wavenum'cwtresp "s`wavenum'cwtresp:w`wavenum' s person-level cross-sectional weight, core sample"

*check

***person-level weight, self-completion sample***
*wave respondent weight, self-completion sample
gen r`wavenum'scwtresp =.
replace r`wavenum'scwtresp = w5scwt
label variable r`wavenum'scwtresp "r`wavenum'scwtresp:w`wavenum' r person-level weight, self-completion sample"

*wave spouse weight, self-completion
gen s`wavenum'scwtresp =.
spouse r`wavenum'scwtresp, result(s`wavenum'scwtresp) wave(`wavenum')
label variable s`wavenum'scwtresp "s`wavenum'scwtresp:w`wavenum' s person-level weight, self-completion sample"

*check

***spouse identifier***
*respondent number of spouse id's (update)
replace raspct = raspct +1 if s`wavenum'idauniq != s1idauniq & s`wavenum'idauniq != s1idauniq & !inlist(s`wavenum'idauniq,0,.)
replace raspct = 0 if s`wavenum'idauniq == 0 & missing(raspct)
replace raspct = 1 if !inlist(s`wavenum'idauniq,0,.) & missing(raspct)

*check

*respondent first spouse id (update)
replace raspid1 = s`wavenum'idauniq if !inlist(s`wavenum'idauniq,0,.) & missing(raspid1)

*check

*respondent second spouse id (update)
replace raspid2 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.)

*check

*respondent third spouse id (update)
replace raspid3 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.)

*check

*respondent fourth spouse id (update)
replace raspid4 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2  & s`wavenum'idauniq != raspid3 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.) & !inlist(raspid3,0,.)

*check

***sampling weight***
*wave 5 respondent stratification variable
gen r5strat =.
replace r5strat = idahhw5 if idahhw5!=-2
label variable r5strat "r5strat:w5 hse stratification variable"

*check 

*respondent clustering variable
gen r5clust = ""
replace r5clust = GOR if !inlist(GOR,"-2","")
label variable r5clust "r5clust:w5 hse clustering variable"

***number of household respondents***
*wave household number of respondents   
egen hh`wavenum'hhresp = sum(inw`wavenum'==1) if inw`wavenum'==1, by(hh`wavenum'hhid)
label variable hh`wavenum'hhresp "hh`wavenum'hhresp:w`wavenum' # core respondents in hh"

*check

***whether couple household***
*wave household couple indicator
egen h`wavenum'cpl = sum(inw`wavenum'==1), by(coupid)
recode h`wavenum'cpl (0=.) (1=0) (2=1)
label variable h`wavenum'cpl "h`wavenum'cpl:w`wavenum' whether coupled"

*value labels
label values h`wavenum'cpl cpl

*check

***financial, family respondent***
*wave respondent financial respondent indicator
gen r`wavenum'finr =.
replace r`wavenum'finr = 1 if perid == iapid & !inlist(iapid,.,-1,-9,-8)
replace r`wavenum'finr = 0 if perid != iapid & inw`wavenum'==1
label variable r`wavenum'finr "r`wavenum'finr:w`wavenum' r whether financial resp"

*wave spouse financial respondent indicator
gen s`wavenum'finr =.
spouse r`wavenum'finr, result(s`wavenum'finr) wave(`wavenum')
label variable s`wavenum'finr "s`wavenum'finr:w`wavenum' s whether financial resp"

*wave couple financial respondent indicator
gen h`wavenum'anyfin =.
replace h`wavenum'anyfin = 0 if iapid==-1
replace h`wavenum'anyfin = 1 if !inlist(iapid,.,-1) & inw`wavenum' ==1
label variable h`wavenum'anyfin "h`wavenum'anyfin:w`wavenum' whether any finr in couple"

*value labels
label values r`wavenum'finr finr
label values s`wavenum'finr finr
label values h`wavenum'anyfin finr

*check 

***household, family respondent***
*wave respondent household respondent indicator
gen r`wavenum'hhr =.
replace r`wavenum'hhr = 1 if perid == hhresp & !inlist(hhresp,.,-1,-9,-8,97)
replace r`wavenum'hhr = 0 if perid != hhresp & inw`wavenum'==1
label variable r`wavenum'hhr "r`wavenum'hhr:w`wavenum' r whether hh resp"

*wave spouse household respondent indicator
gen s`wavenum'hhr =.
spouse r`wavenum'hhr, result(s`wavenum'hhr) wave(`wavenum')
label variable s`wavenum'hhr "s`wavenum'hhr:w`wavenum' s whether hh resp"

*value labels
label values r`wavenum'hhr hhr
label values s`wavenum'hhr hhr

*check

***housing, family respondent***
*wave respondent housing respondent indicator
gen r`wavenum'hor =.
replace r`wavenum'hor = 1 if perid == hopid & !inlist(hopid,.,-1,-9,-8)
replace r`wavenum'hor = 0 if perid != hopid & inw`wavenum' ==1
label variable r`wavenum'hor "r`wavenum'hor:w`wavenum' r whether housing resp"

*wave spouse housing respondent indicator
gen s`wavenum'hor =.
spouse r`wavenum'hor, result(s`wavenum'hor) wave(`wavenum')
label variable s`wavenum'hor "s`wavenum'hor:w`wavenum' s whether housing resp"

*wave household housing respondent indicator
gen hh`wavenum'anyho =.
replace hh`wavenum'anyho = 0 if hopid==-1
replace hh`wavenum'anyho = 1 if !inlist(hopid,.,-1) & inw`wavenum'==1
label variable hh`wavenum'anyho "hh`wavenum'anyho:w`wavenum' whether any hor in hh"

*value labels
label values r`wavenum'hor   hor
label values s`wavenum'hor   hor
label values hh`wavenum'anyho hor

*check

***whether proxy interview***
*wave respondent proxy indicator
gen r`wavenum'proxy =.
replace r`wavenum'proxy = 1 if askpx ==1
replace r`wavenum'proxy = 0 if askpx ==0
label variable r`wavenum'proxy "r`wavenum'proxy:w`wavenum' r whether proxy interview"

*wave spouse proxy indicator
gen s`wavenum'proxy =.
spouse r`wavenum'proxy, result(s`wavenum'proxy) wave(`wavenum')
label variable s`wavenum'proxy "s`wavenum'proxy:w`wavenum' s whether proxy interview"

*value labels
label values r`wavenum'proxy proxy
label values s`wavenum'proxy proxy

*check

***interview dates***
**wave household interview date
*gen hh`wavenum'iwhh =.
*replace hh`wavenum'iwhh = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2012) & inrange(iintdatm, 1, 12)
*label variable hh`wavenum'iwhh "hh`wavenum'iwhh:w`wavenum' household interview date"
*
**wave household interview date flag
*gen hh`wavenum'iwhhf =.
*replace hh`wavenum'iwhhf = 0 if inrange(iintdaty,2000, 2012) & inrange(iintdatm,1,12)
*replace hh`wavenum'iwhhf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
*replace hh`wavenum'iwhhf = 2 if !inrange(iintdaty,2000, 2012) & inw`wavenum' ==1
*label variable hh`wavenum'iwhhf "hh`wavenum'iwhhf:w`wavenum' household interview date flag"

*wave respondent individual interview date
gen r`wavenum'iwind =.
replace r`wavenum'iwind = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2012) & inrange(iintdatm, 1, 12)
label variable r`wavenum'iwind "r`wavenum'iwind:w`wavenum' r individual interview date"

*wave spouse individual interview date
gen s`wavenum'iwind =.
spouse r`wavenum'iwind, result(s`wavenum'iwind) wave(`wavenum')
label variable s`wavenum'iwind "s`wavenum'iwind:w`wavenum' s individual interview date"

*wave respondent individual interview date flag
gen r`wavenum'iwindf =.
replace r`wavenum'iwindf = 0 if inrange(iintdaty,2000, 2012) & inrange(iintdatm,1,12)
replace r`wavenum'iwindf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
replace r`wavenum'iwindf = 2 if !inrange(iintdaty,2000, 2012) & inw`wavenum' ==1
label variable r`wavenum'iwindf "r`wavenum'iwindf:w`wavenum' r individual interview date flag"

*wave spouse individual interview flag
gen s`wavenum'iwindf =.
spouse r`wavenum'iwindf, result(s`wavenum'iwindf) wave(`wavenum')
label variable s`wavenum'iwindf "s`wavenum'iwindf:w`wavenum' s individual interview date flag"

**wave household interview month
*gen hh`wavenum'iwhhm =.
*replace hh`wavenum'iwhhm = iintdatm if inrange(iintdatm,1,12)
*label variable hh`wavenum'iwhhm "hh`wavenum'iwhhm:w`wavenum' household interview month"
*
**wave household interview year
*gen hh`wavenum'iwhhy =.
*replace hh`wavenum'iwhhy = iintdaty if inrange(iintdaty,2000, 2012)
*label variable hh`wavenum'iwhhy "hh`wavenum'iwhhy:w`wavenum' household interview year"

*wave respondent individual interview month
gen r`wavenum'iwindm =.
replace r`wavenum'iwindm = iintdatm if inrange(iintdatm,1,12)
label variable r`wavenum'iwindm "r`wavenum'iwindm:w`wavenum' r individual interview month"

*wave respondent individual interview year
gen r`wavenum'iwindy =.
replace r`wavenum'iwindy = iintdaty if inrange(iintdaty,2000, 2012)
label variable r`wavenum'iwindy "r`wavenum'iwindy:w`wavenum' r individual interview year"

*wave spouse individual interview year
gen s`wavenum'iwindm =.
spouse r`wavenum'iwindm, result(s`wavenum'iwindm) wave(`wavenum')
label variable s`wavenum'iwindm "s`wavenum'iwindm:w`wavenum' s individual interview month"

*wave spouse individual interview year
gen s`wavenum'iwindy =.
spouse r`wavenum'iwindy, result(s`wavenum'iwindy) wave(`wavenum')
label variable s`wavenum'iwindy "s`wavenum'iwindy:w`wavenum' s individual interview year"

*value labels
*label values hh`wavenum'iwhhf dateflag
label values r`wavenum'iwindf dateflag
label values s`wavenum'iwindf dateflag

*check


***birth date: year***
*respondent birth year (update)
replace rabyear = indobyr if inrange(indobyr,1900,2000) & (missing(rabyear) | rafbyear != 0)
replace rabyear = 1920 if indobyr == -7 & missing(rabyear)

*wave spouse birth year
gen s`wavenum'byear =.
spouse rabyear, result(s`wavenum'byear) wave(`wavenum')
label variable s`wavenum'byear "s`wavenum'byear:w`wavenum' s birth year"

*respondent birth year flag
replace rafbyear = 0 if inrange(indobyr,1900,2000) & (mi(rafbyear) | rafbyear != 0)
replace rafbyear = 5 if indobyr == -7 & mi(rafbyear)

*wave spouse birth year flag
gen s`wavenum'fbyear =.
spouse rafbyear, result(s`wavenum'fbyear) wave(`wavenum')
label variable s`wavenum'fbyear "s`wavenum'fbyear:w`wavenum' s flag birth year bottom-coded"
label values s`wavenum'fbyear fbyear

*check 

***age at interview (in years)***
*wave respondent age in years
gen r`wavenum'agey=.
replace r`wavenum'agey = indager if inrange(indager,10,90)
replace r`wavenum'agey = 90 if indager==-7
label variable r`wavenum'agey "r`wavenum'agey:w`wavenum' r age (years) at ivw"

*wave spouse age in years
gen s`wavenum'agey=.
spouse r`wavenum'agey, result(s`wavenum'agey) wave(`wavenum')
label variable s`wavenum'agey "s`wavenum'agey:w`wavenum' s age (years) at ivw"

*wave respondent age in years flag
gen r`wavenum'fagey=.
replace r`wavenum'fagey = 0 if inrange(indager,10,90)
replace r`wavenum'fagey = 1 if indager == -7
label variable r`wavenum'fagey "r`wavenum'fagey:w`wavenum' r flag age at iwv top-coded"
label values r`wavenum'fagey fagey

*wave spouse age in years flag
gen s`wavenum'fagey=.
spouse r`wavenum'fagey, result(s`wavenum'fagey) wave(`wavenum')
label variable s`wavenum'fagey "s`wavenum'fagey:w`wavenum' s flag age at iwv top-coded"
label values s`wavenum'fagey fagey

*check

***gender***
*respondent gender (update)
missing_w`wavenum' indsex if missing(ragender), result(ragender)
replace ragender = 1 if indsex == 1 & missing(ragender)
replace ragender = 2 if indsex == 2 & missing(ragender)

*wave spouse gender
gen s`wavenum'gender =.
spouse ragender, result(s`wavenum'gender) wave(`wavenum')
label variable s`wavenum'gender "s`wavenum'gender:w`wavenum' s gender"

*respondent gender flag (update)
replace rafgendr = 0 if ( (ragender == 1 & indsex == 1) | (ragender == 2 & indsex == 2) ) & rafgendr!=1
replace rafgendr = 1 if (ragender == 1 & indsex == 2) | (ragender == 2 & indsex == 1)

*wave spouse gender flag
gen s`wavenum'fgendr = .
spouse rafgendr, result(s`wavenum'fgendr) wave(`wavenum')
label variable s`wavenum'fgendr "s`wavenum'fgendr:w`wavenum' flag if problem with s gender"

*value labels
label values s`wavenum'gender gender
label values s`wavenum'fgendr genderflag

*check

***race, ethnicity: race***
*respondent race (update)
missing_w`wavenum' fqethnr if missing(raracem), result(raracem)
replace raracem = 1 if fqethnr == 1 & missing(raracem)
replace raracem = 4 if fqethnr == 2 & missing(raracem)

*wave spouse race
gen s`wavenum'racem =.
spouse raracem, result(s`wavenum'racem) wave(`wavenum')
label variable s`wavenum'racem "s`wavenum'racem:w`wavenum' s race - masked"

*respondent race flag (update)
replace raracef = 0 if ( (raracem == 1 & fqethnr == 1) | (raracem == 4 & fqethnr == 2) ) & raracef!=1
replace raracef = 1 if (raracem == 1 & fqethnr == 2) | (raracem == 4 & fqethnr == 1)
replace raracef = .m if raracef==.

*wave spouse race flag
gen s`wavenum'racef =.
spouse raracef, result(s`wavenum'racef) wave(`wavenum')
label variable s`wavenum'racef "s`wavenum'racef:w`wavenum' flag if problem with s race"

*value labels
label values s`wavenum'racem race
label values s`wavenum'racef raceflag

*check


***education: categorical summary***
*respondent education categorically (update)
replace raeduc_e = 5 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 4 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumhnc == 1 | ///
														fqqumonc == 1 | ///
														fqqumcgf == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumnv2 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 1 if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumcs1 == 1 | ///
														fqqumcs2 == 1 | ///
														fqqumcsu == 1 | ///
														fqqumsll == 1 | ///
														fqqumsup == 1 | ///
														fqqummat == 1 | ///
														fqqumnv1 == 1 ) | fqaqua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))& (mi(raeduc_e) & raeduc_e != .o)
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeduc_e) & raeduc_e != .o), result(raeduc_e)			 							 														
replace raeduc_e = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & missing(raeduc_e) & !inlist(raeduc_e,.o,.r,.d)
replace raeduc_e = .o if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
														
																																										
*wave spouse education categorically
gen s`wavenum'educ_e =.
spouse raeduc_e, result(s`wavenum'educ_e) wave(`wavenum')
label variable s`wavenum'educ_e "s`wavenum'educ_e:w`wavenum' s education (categ)"
label values s`wavenum'educ_e educcats

*check

***education: isced category***
*wave 5 respondent education isced category (update)
replace raedisced = .n if (fqaqua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))  & (mi(raedisced) & !inlist(raedisced,.n,.o))		

replace raedisced = 5 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))		
replace raedisced = 4 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))		
replace raedisced = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
													 fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raedisced) & !inlist(raedisced,.n,.o))																					
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raedisced) & !inlist(raedisced,.n,.o)), result(raedisced)
replace raedisced = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & missing(raedisced) & !inlist(raedisced,.n,.o,.r,.d) 	
replace raedisced = .o if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raedisced) & !inlist(raedisced,.n,.o))								 
																			 																											
*wave 5 spouse education isced category
gen s`wavenum'edisced =.
spouse raedisced, result(s`wavenum'edisced) wave(`wavenum')
label variable s`wavenum'edisced "s`wavenum'edisced:w`wavenum' s education isced"
label values s`wavenum'edisced educisced

***education: harmonized education category***
*wave 5 respondent education harmonized category (update)
replace raeducl = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = 2 if (fqmqua == 1 | fqaqua == 1) & ( ///
													 fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 | ///
													  fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raeducl) & !inlist(raeducl,.o))											
replace raeducl = 1 if (fqaqua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))  & (mi(raeducl) & !inlist(raeducl,.o))
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeducl) & !inlist(raeducl,.o)), result(raeducl)
replace raeducl = .o if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & missing(raeducl) & !inlist(raeducl,1,.o,.r,.d)
label variable raeducl "raeducl:R harmonized education"
label values raeducl educharm

*wave 5 spouse education harmonized category
gen s5educl = .
spouse raeducl, result(s5educl) wave(5)
label variable s5educl "s5educl:w5 S harmonized education"
label values s5educl educharm

***current marital status: with implied partnerships***
*wave respondent marital status with partnership
gen r`wavenum'mstat=.
missing_w`wavenum' dimar, result(r`wavenum'mstat)
replace r`wavenum'mstat = 1 if inlist(dimar, 2,3,4,11)
replace r`wavenum'mstat = 4 if inlist(dimar, 5, 8)
replace r`wavenum'mstat = 5 if inlist(dimar, 6, 9)
replace r`wavenum'mstat = 7 if inlist(dimar, 7, 10)
replace r`wavenum'mstat = 8 if dimar == 1
replace r`wavenum'mstat = 3 if (inlist(dimar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.))
label variable r`wavenum'mstat "r`wavenum'mstat:w`wavenum' r marital status w/partners, filled"

*wave spouse marital status with implied partnership
gen s`wavenum'mstat=.
spouse r`wavenum'mstat, result(s`wavenum'mstat) wave(`wavenum')
label variable s`wavenum'mstat "s`wavenum'mstat:w`wavenum' s marital status w/partners, filled"

*value labels
label values r`wavenum'mstat marwpart
label values s`wavenum'mstat marwpart

*check

***current marital status: current implied partnership status***
*wave respondent implied partnership status
gen r`wavenum'mpart =.
missing_w`wavenum' dimar, result(r`wavenum'mpart)
replace r`wavenum'mpart = 0 if inw`wavenum'==1
replace r`wavenum'mpart = 1 if inlist(dimar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.)
label variable r`wavenum'mpart "r`wavenum'mpart:w`wavenum' r implied partnership status"

*wave spouse partnership status
gen s`wavenum'mpart =.
spouse r`wavenum'mpart, result(s`wavenum'mpart) wave(`wavenum')
label variable s`wavenum'mpart "s`wavenum'mpart:w`wavenum' s implied partnership status"

*value labels
label values r`wavenum'mpart part
label values s`wavenum'mpart part

*check

***current marital status: without implied partnerships***
*wave respondent marital status without implied partnership
gen r`wavenum'mstath =.
missing_w`wavenum' dimar, result(r`wavenum'mstath)
replace r`wavenum'mstath = 1 if inlist(dimar, 2,3,4,11)
replace r`wavenum'mstath = 4 if inlist(dimar, 5, 8)
replace r`wavenum'mstath = 5 if inlist(dimar, 6, 9)
replace r`wavenum'mstath = 7 if inlist(dimar, 7, 10)
replace r`wavenum'mstath = 8 if dimar == 1
label variable r`wavenum'mstath "r`wavenum'mstath:w`wavenum' r marital status"

*wave spouse marital status without implied partnership
gen s`wavenum'mstath =.
spouse r`wavenum'mstath, result(s`wavenum'mstath) wave(`wavenum')
label variable s`wavenum'mstath "s`wavenum'mstath:w`wavenum' s marital status"

*value labels
label values r`wavenum'mstath marwopart
label values s`wavenum'mstath marwopart

*check

***number of marriages***
*married but missing last wave's husband/wife (temp)
tempvar w`pre_wavenum'mishw
gen `w`pre_wavenum'mishw'=.
replace `w`pre_wavenum'mishw' = 0 if inw`pre_wavenum'==1
foreach v of varlist pre_dhr pre_dhr? pre_dhr1? {
	replace `w`pre_wavenum'mishw' = 1 if `v'==1 & inlist(pre_dimar,2,4)
}
replace `w`pre_wavenum'mishw' = 2 if `w`pre_wavenum'mishw'==0 & inlist(pre_dimar,2,4)
recode `w`pre_wavenum'mishw' (1=0) (2=1)

*wave respondent number of marriages
gen r`wavenum'mrct =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mrct = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mrct = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mrct)
missing_w`wavenum' dimar, result(r`wavenum'mrct)
missing_H r`pre_wavenum'mrct, result(r`wavenum'mrct)
replace r`wavenum'mrct = r`pre_wavenum'mrct if !mi(r`pre_wavenum'mrct) & inw`wavenum'==1
replace r`wavenum'mrct = r`wavenum'mrct + 1 if ( (( (pre_dhr!=1 & dhr==1) | ///
																					   		 (pre_dhr2!=1 & dhr2==1) | ///
																					   		 (pre_dhr3!=1 & dhr3==1) | ///
																					   		 (pre_dhr4!=1 & dhr4==1) | ///
																					   		 (pre_dhr5!=1 & dhr5==1) | ///
																					   		 (pre_dhr6!=1 & dhr6==1) | ///
																					   		 (pre_dhr7!=1 & dhr7==1) | ///
																					   		 (pre_dhr8!=1 & dhr8==1) | ///
																					   		 (pre_dhr9!=1 & dhr9==1) | ///
																					   		 (pre_dhr10!=1 & dhr10==1) | ///
																					   		 (pre_dhr11!=1 & dhr11==1) | ///
																					   		 (pre_dhr12!=1 & dhr12==1) | ///
																					   		 (pre_dhr13!=1 & dhr13==1) | ///
																					   		 (pre_dhr14!=1 & dhr14==1) | ///
																					   		 (pre_dhr15!=1 & dhr15==1) | ///
																					   		 (pre_dhr16!=1 & dhr16==1) ) & `w`pre_wavenum'mishw'!=1 & inlist(dimar,2,4) ) | ///
																					   		 (inlist(pre_dimar,1,3,5,6,7,8,9,10,11) & inlist(dimar,2,4)) | ///
																					   		 (pre_dimar==2 & dimar==4) ) & ///
																					   		 !mi(r`wavenum'mrct) & inw`wavenum'==1
label variable r`wavenum'mrct "r`wavenum'mrct:w`wavenum' r # marriages"

*wave spouse number of marriages
gen s`wavenum'mrct =.
spouse r`wavenum'mrct, result(s`wavenum'mrct) wave(`wavenum')
label variable s`wavenum'mrct "s`wavenum'mrct:w`wavenum' s # marriages"

*check

***marital history: never married***
*wave respondent never married indicator
gen r`wavenum'mnev =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mnev = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mnev = .l if rpmarst==. & inw`wavenum'==1
missing_w`wavenum' dimar, result(r`wavenum'mnev)
missing_H r`pre_wavenum'mnev, result(r`wavenum'mnev)
replace r`wavenum'mnev = 0 if (r`pre_wavenum'mnev == 0 | inlist(dimar,2,4,5,6,7)) & inw`wavenum'==1
replace r`wavenum'mnev = 1 if r`pre_wavenum'mnev==1 & inlist(dimar,1,3,8,9,10,11)
label variable r`wavenum'mnev "r`wavenum'mnev:w`wavenum' r never married"

*wave spouse never married indicator
gen s`wavenum'mnev =.
spouse r`wavenum'mnev, result(s`wavenum'mnev) wave(`wavenum')
label variable s`wavenum'mnev "s`wavenum'mnev:w`wavenum' s never married"

*value labels
label values r`wavenum'mnev mnev
label values s`wavenum'mnev mnev

*check

***marital history: # times divorced***
*wave respondent number of times divorced
gen r`wavenum'mdiv =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mdiv = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mdiv = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mdiv)
missing_w`wavenum' dimar, result(r`wavenum'mdiv)
missing_H r`pre_wavenum'mdiv, result(r`wavenum'mdiv)
replace r`wavenum'mdiv = r`pre_wavenum'mdiv if !mi(r`pre_wavenum'mdiv) & inw`wavenum'==1
replace r`wavenum'mdiv = r`wavenum'mdiv + 1 if ( (( (pre_dhr==1 & dhr!=1) | ///
																					   		 (pre_dhr2==1 & dhr2!=1) | ///
																					   		 (pre_dhr3==1 & dhr3!=1) | ///
																					   		 (pre_dhr4==1 & dhr4!=1) | ///
																					   		 (pre_dhr5==1 & dhr5!=1) | ///
																					   		 (pre_dhr6==1 & dhr6!=1) | ///
																					   		 (pre_dhr7==1 & dhr7!=1) | ///
																					   		 (pre_dhr8==1 & dhr8!=1) | ///
																					   		 (pre_dhr9==1 & dhr9!=1) | ///
																					   		 (pre_dhr10==1 & dhr10!=1) | ///
																					   		 (pre_dhr11==1 & dhr11!=1) | ///
																					   		 (pre_dhr12==1 & dhr12!=1) ) & inlist(pre_dimar,2,4) & dimar==6 ) | ///
																					   		 (inlist(pre_dimar,2,4) & dimar==6) ) & ///
																					   		 !mi(r`wavenum'mdiv) & inw`wavenum'==1
label variable r`wavenum'mdiv "r`wavenum'mdiv:w`wavenum' r # times divorced"

*wave spouse number of times divorced
gen s`wavenum'mdiv =.
spouse r`wavenum'mdiv, result(s`wavenum'mdiv) wave(`wavenum')
label variable s`wavenum'mdiv "s`wavenum'mdiv:w`wavenum' s # times divorced"

*check

***marital history: # times widowed***
*wave respondent number of times widowed
gen r`wavenum'mwid =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mwid = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mwid = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mwid)
missing_w`wavenum' dimar, result(r`wavenum'mwid)
missing_H r`pre_wavenum'mwid, result(r`wavenum'mwid)
replace r`wavenum'mwid = r`pre_wavenum'mwid if !mi(r`pre_wavenum'mwid) & inw`wavenum'==1
replace r`wavenum'mwid = r`wavenum'mwid + 1 if ( (( (pre_dhr==1 & dhr!=1) | ///
																					   		 (pre_dhr2==1 & dhr2!=1) | ///
																					   		 (pre_dhr3==1 & dhr3!=1) | ///
																					   		 (pre_dhr4==1 & dhr4!=1) | ///
																					   		 (pre_dhr5==1 & dhr5!=1) | ///
																					   		 (pre_dhr6==1 & dhr6!=1) | ///
																					   		 (pre_dhr7==1 & dhr7!=1) | ///
																					   		 (pre_dhr8==1 & dhr8!=1) | ///
																					   		 (pre_dhr9==1 & dhr9!=1) | ///
																					   		 (pre_dhr10==1 & dhr10!=1) | ///
																					   		 (pre_dhr11==1 & dhr11!=1) | ///
																					   		 (pre_dhr12==1 & dhr12!=1) ) & inlist(pre_dimar,2,4) & dimar==7 ) | ///
																					   		 (inlist(pre_dimar,2,4) & dimar==7) ) & ///
																					   		 !mi(r`wavenum'mwid) & inw`wavenum'==1
label variable r`wavenum'mwid "r`wavenum'mwid:w`wavenum' r # times widowed"

*wave spouse number of times widowed
gen s`wavenum'mwid =.
spouse r`wavenum'mwid, result(s`wavenum'mwid) wave(`wavenum')
label variable s`wavenum'mwid "s`wavenum'mwid:w`wavenum' s # times widowed"

*check

***marital history: #times don't know how marriage ended***
*different husband/wife from last wave (temp)
tempvar w`wavenum'diffhw
gen `w`wavenum'diffhw'=.
replace `w`wavenum'diffhw' = 0 if inw`wavenum'==1
forvalues p=1/12 {
	if "`p'"=="1" local p_
	else local p_ `p'
	local lp = `p'-1
	local np = `p'+1
	forvalues r=1/`lp' {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_dhr`p_' == 1 & dhr`r_' == 1
	}
	forvalues r=`np'/16 {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_dhr`p_' == 1 & dhr`r_' == 1
	}
}

*wave respondent number of times dk marriage end
gen r`wavenum'mend =.	
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mend = .b if inw`w'!=1 & inw`wavenum'==1
}															   		 
replace r`wavenum'mend = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mend)
missing_w`wavenum' dimar, result(r`wavenum'mend)
missing_H r`pre_wavenum'mend, result(r`wavenum'mend)
replace r`wavenum'mend = r`pre_wavenum'mend if !mi(r`pre_wavenum'mend) & inw`wavenum'==1
replace r`wavenum'mend = r`wavenum'mend + 1 if ( (( (pre_dhr==1 & dhr!=1) | ///
																					   		 (pre_dhr2==1 & dhr2!=1) | ///
																					   		 (pre_dhr3==1 & dhr3!=1) | ///
																					   		 (pre_dhr4==1 & dhr4!=1) | ///
																					   		 (pre_dhr5==1 & dhr5!=1) | ///
																					   		 (pre_dhr6==1 & dhr6!=1) | ///
																					   		 (pre_dhr7==1 & dhr7!=1) | ///
																					   		 (pre_dhr8==1 & dhr8!=1) | ///
																					   		 (pre_dhr9==1 & dhr9!=1) | ///
																					   		 (pre_dhr10==1 & dhr10!=1) | ///
																					   		 (pre_dhr11==1 & dhr11!=1) | ///
																					   		 (pre_dhr12==1 & dhr12!=1) ) & inlist(pre_dimar,2,4) & inlist(dimar,1,3,8,9,10,11) ) | ///
																					   		 (inlist(pre_dimar,2,4) & inlist(dimar,1,3,8,9,10,11)) | ///
																					   		 (`w`wavenum'diffhw'==1 & inlist(pre_dimar,2,4) & inlist(dimar,2,4)) ) & ///
																					   		 !mi(r`wavenum'mend) & inw`wavenum'==1
label variable r`wavenum'mend "r`wavenum'mend:w`wavenum' r # times unknown end marriage"

*wave spouse number of times dk marriage end
gen s`wavenum'mend =.
spouse r`wavenum'mend, result(s`wavenum'mend) wave(`wavenum')
label variable s`wavenum'mend "s`wavenum'mend:w`wavenum' s # times unknown end marriage"

*check

***length of current marriage***
*consistent husband/wife
gen w`wavenum'conhw=.
replace w`wavenum'conhw=0 if inw`wavenum'==1
replace w`wavenum'conhw=1 if inlist(pre_dimar,2,4) & inlist(dimar,2,4) & `w`wavenum'diffhw'!=1 // for wave 5 change conditions to include w`wavenum'conhw==1
	
*wave respondent length of current marriage
gen r`wavenum'mcurln =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mcurln = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mcurln = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mcurln = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw`wavenum'==1
replace r`wavenum'mcurln = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw`wavenum'==1
replace r`wavenum'mcurln = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																			& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																			& !missing(r`wavenum'iwindy) ///
																			& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
 																			 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
	 																		 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
		 																	 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
			 																 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
				 															 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
					 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																			 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																			 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma6,-1,.) ) ///
																			 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																			 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																			 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																			 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
label variable r`wavenum'mcurln "r`wavenum'mcurln:w`wavenum' r length of current marriage"

*wave spouse length of current marriage
gen s`wavenum'mcurln =.
spouse r`wavenum'mcurln, result(s`wavenum'mcurln) wave(`wavenum')
label variable s`wavenum'mcurln "s`wavenum'mcurln:w`wavenum' s length of current marriage"

*check

***length of longest marriage (including current)***
*generate wave marriage lengths for each loop: 1-7
gen	length1w`wavenum' =.									
replace length1w`wavenum' = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																												& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																												& !missing(r`wavenum'iwindy) ///
																												& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length1w`wavenum' = rpdyr - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdyr,-9,-8,-2,-1,.) & rpdiv==1 & !( ///
										((rpdyr>rpyrma2) ) | ///
										((rpdyr>rpyrma3) ) | ///
										((rpdyr>rpyrma4) ) | ///
										((rpdyr>rpyrma5) ) | ///
										((rpdyr>rpyrma6) ) | ///
										((rpdyr>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length1w`wavenum' = rpdiy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdiy,-9,-8,-2,-1,.) & rpfin==2 & !( ///
										((rpdiy>rpyrma2) ) | ///
										((rpdiy>rpyrma3) ) | ///
										((rpdiy>rpyrma4) ) | ///
										((rpdiy>rpyrma5) ) | ///
										((rpdiy>rpyrma6) ) | ///
										((rpdiy>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length2w`wavenum' =.									
replace length2w`wavenum' = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
																												 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
														 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length2w`wavenum' = rpdyr2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdyr2,-9,-8,-2,-1,.) & rpdiv2==1 & !( ///
										((rpdyr2>rpyrma) ) | ///
										((rpdyr2>rpyrma3) ) | ///
										((rpdyr2>rpyrma4) ) | ///
										((rpdyr2>rpyrma5) ) | ///
										((rpdyr2>rpyrma6) ) | ///
										((rpdyr2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length2w`wavenum' = rpdiy2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdiy2,-9,-8,-2,-1,.) & rpfin2==2 & !( ///
										((rpdiy2>rpyrma) ) | ///
										((rpdiy2>rpyrma3) ) | ///
										((rpdiy2>rpyrma4) ) | ///
										((rpdiy2>rpyrma5) ) | ///
										((rpdiy2>rpyrma6) ) | ///
										((rpdiy2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length3w`wavenum' =.									
replace length3w`wavenum' = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																												 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length3w`wavenum' = rpdyr3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdyr3,-9,-8,-2,-1,.) & rpdiv3==1 & !( ///
										((rpdyr3>rpyrma) ) | ///
										((rpdyr3>rpyrma2) ) | ///
										((rpdyr3>rpyrma4) ) | ///
										((rpdyr3>rpyrma5) ) | ///
										((rpdyr3>rpyrma6) ) | ///
										((rpdyr3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length3w`wavenum' = rpdiy3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdiy3,-9,-8,-2,-1,.) & rpfin3==2 & !( ///
										((rpdiy3>rpyrma) ) | ///
										((rpdiy3>rpyrma2) ) | ///
										((rpdiy3>rpyrma4) ) | ///
										((rpdiy3>rpyrma5) ) | ///
										((rpdiy3>rpyrma6) ) | ///
										((rpdiy3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length4w`wavenum' =.									
replace length4w`wavenum' = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																												 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma6,-1,.) ) ///
																												 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length4w`wavenum' = rpdyr4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdyr4,-9,-8,-2,-1,.) & rpdiv4==1 & !( ///
										((rpdyr4>rpyrma) ) | ///
										((rpdyr4>rpyrma2) ) | ///
										((rpdyr4>rpyrma3) ) | ///
										((rpdyr4>rpyrma5) ) | ///
										((rpdyr4>rpyrma6) ) | ///
										((rpdyr4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length4w`wavenum' = rpdiy4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdiy4,-9,-8,-2,-1,.) & rpfin4==2 & !( ///
										((rpdiy4>rpyrma) ) | ///
										((rpdiy4>rpyrma2) ) | ///
										((rpdiy4>rpyrma3) ) | ///
										((rpdiy4>rpyrma5) ) | ///
										((rpdiy4>rpyrma6) ) | ///
										((rpdiy4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length5w`wavenum' =.									
replace length5w`wavenum' = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																												 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length5w`wavenum' = rpdyr5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdyr5,-9,-8,-2,-1,.) & rpdiv5==1 & !( ///
										((rpdyr5>rpyrma) ) | ///
										((rpdyr5>rpyrma2) ) | ///
										((rpdyr5>rpyrma3) ) | ///
										((rpdyr5>rpyrma4) ) | ///
										((rpdyr5>rpyrma6) ) | ///
										((rpdyr5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length5w`wavenum' = rpdiy5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdiy5,-9,-8,-2,-1,.) & rpfin5==2 & !( ///
										((rpdiy5>rpyrma) ) | ///
										((rpdiy5>rpyrma2) ) | ///
										((rpdiy5>rpyrma3) ) | ///
										((rpdiy5>rpyrma4) ) | ///
										((rpdiy5>rpyrma6) ) | ///
										((rpdiy5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length6w`wavenum' =.									
replace length6w`wavenum' = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																												 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length6w`wavenum' = rpdyr6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdyr6,-9,-8,-2,-1,.) & rpdiv6==1 & !( ///
										((rpdyr6>rpyrma) ) | ///
										((rpdyr6>rpyrma2) ) | ///
										((rpdyr6>rpyrma3) ) | ///
										((rpdyr6>rpyrma4) ) | ///
										((rpdyr6>rpyrma5) ) | ///
										((rpdyr6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length6w`wavenum' = rpdiy6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdiy6,-9,-8,-2,-1,.) & rpfin6==2 & !( ///
										((rpdiy6>rpyrma) ) | ///
										((rpdiy6>rpyrma2) ) | ///
										((rpdiy6>rpyrma3) ) | ///
										((rpdiy6>rpyrma4) ) | ///
										((rpdiy6>rpyrma5) ) | ///
										((rpdiy6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length7w`wavenum' =.									
replace length7w`wavenum' = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																												 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length7w`wavenum' = rpdyr7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdyr7,-9,-8,-2,-1,.) & rpdiv7==1 & !( ///
										((rpdyr7>rpyrma) ) | ///
										((rpdyr7>rpyrma2) ) | ///
										((rpdyr7>rpyrma3) ) | ///
										((rpdyr7>rpyrma4) ) | ///
										((rpdyr7>rpyrma5) ) | ///
										((rpdyr7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length7w`wavenum' = rpdiy7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdiy7,-9,-8,-2,-1,.) & rpfin7==2 & !( ///
										((rpdiy7>rpyrma) ) | ///
										((rpdiy7>rpyrma2) ) | ///
										((rpdiy7>rpyrma3) ) | ///
										((rpdiy7>rpyrma4) ) | ///
										((rpdiy7>rpyrma5) ) | ///
										((rpdiy7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)

*wave respondent length of longest marriage
gen r`wavenum'mlen =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mlen = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mlen = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = max(length1w`wavenum', length2w`wavenum', length3w`wavenum', length4w`wavenum', length5w`wavenum', length6w`wavenum', length7w`wavenum') if !inlist(r`wavenum'mlen,.l,.s,.d,.m,.r)
label variable r`wavenum'mlen "r`wavenum'mlen:w`wavenum' r length of longest marriage"
drop length1w`wavenum'-length7w`wavenum'

*wave spouse length of longest marriage
gen s`wavenum'mlen =.
spouse r`wavenum'mlen, result(s`wavenum'mlen) wave(`wavenum')
label variable s`wavenum'mlen "s`wavenum'mlen:w`wavenum' s length of longest marriage"

*check

***flag for current marital status: without partnership***
*wave 3 respondent current marital status flag
gen r`wavenum'mstatf =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mstatf = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mstatf = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mstatf = 0 if (inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 0) | ( r`wavenum'mstath == 8 & r`wavenum'mnev == 1 )
replace r`wavenum'mstatf = 1 if r`wavenum'mstath == 8 & r`wavenum'mnev == 0 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = 2 if inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 1 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = .m if r`wavenum'mstatf==. & inw`wavenum' == 1
label variable r`wavenum'mstatf "r`wavenum'mstatf:w`wavenum' r mstath-flag diff w/marhist"

*wave 3 spouse current marital status flag
gen s`wavenum'mstatf =.
spouse r`wavenum'mstatf, result(s`wavenum'mstatf) wave(3)
label variable s`wavenum'mstatf "s`wavenum'mstatf:w`wavenum' s mstath-flag diff w/marhist"

*value labels
label values r`wavenum'mstatf mstatf
label values s`wavenum'mstatf mstatf

*check
																				   		 
***place of birth***
*respondent place of birth (update)
missing_w`wavenum' fqcbthr if missing(rabplace), result(rabplace)
replace rabplace = 1 if fqcbthr == 1 & missing(rabplace)
replace rabplace = 11 if fqcbthr == 2 & missing(rabplace)

*wave spouse place of birth
gen s`wavenum'bplace =.
spouse rabplace, result(s`wavenum'bplace) wave(`wavenum')
label variable s`wavenum'bplace "s`wavenum'bplace:w`wavenum' s place of birth"

*value labels
label values s`wavenum'bplace place

*check

***whether born in country of interview***
*respondent whether born in country of interview (update)
missing_w`wavenum' fqcbthr if missing(rabcountry), result(rabcountry)
replace rabcountry = 0 if fqcbthr==2 & mi(rabcountry)
replace rabcountry = 1 if fqcbthr==1 & mi(rabcountry)

*wave 5 spouse whether born in country of interview
gen s`wavenum'bcountry = .
spouse rabcountry, result(s`wavenum'bcountry) wave(`wavenum')
label variable s`wavenum'bcountry "s`wavenum'bcountry:w`wavenum' s born in country of interview"
label values s`wavenum'bcountry bornin


***death date***
*wave 5 spouse death year
gen s5dyear =.
spouse radyear, result(s5dyear) wave(5)
label variable s5dyear "s5dyear:w5 s death year"
*
***religion***
*wave 5 respondent religion
gen rarelig_e = .
replace rarelig_e = .w if inw`wavenum' == 0
replace rarelig_e = .m if inlist(screwh,-2,-1) & inw`wavenum' == 1
replace rarelig_e = .p if askpx == 1
replace rarelig_e = .d if screwh == -8 & inw`wavenum' == 1
replace rarelig_e = .r if screwh == -9 & inw`wavenum' == 1
replace rarelig_e = .i if screwh == 86 & inw`wavenum' == 1
replace rarelig_e = 1 if screwh == 2 & inw`wavenum' == 1
replace rarelig_e = 2 if screwh == 3 & inw`wavenum' == 1
replace rarelig_e = 3 if screwh == 4 & inw`wavenum' == 1
replace rarelig_e = 4 if screwh == 5 & inw`wavenum' == 1
replace rarelig_e = 5 if screwh == 6 & inw`wavenum' == 1
replace rarelig_e = 6 if screwh == 7 & inw`wavenum' == 1
replace rarelig_e = 7 if screwh == 85 & inw`wavenum' == 1
replace rarelig_e = 8 if screwh == 1 & inw`wavenum' == 1
label variable rarelig_e "rarelig_e:r religion"
label values rarelig_e religion

*wave 5 spouse religion
gen s`wavenum'relig_e = .
spouse rarelig_e, result(s`wavenum'relig_e) wave(`wavenum')
label variable s`wavenum'relig_e "s`wavenum'relig_e:w`wavenum' s religion"
label values s`wavenum'relig_e religion


***drop ELSA index file raw variables***
drop `demo_w`wavenum'_index'

***drop ELSA previous wave specific core file raw variables***
drop pre_dhr pre_dhr? pre_dhr1? pre_dimar

***drop ELSA wave specific core file raw variables***
drop `demo_w`wavenum'_core'

**drop ELSA wave specific financial derived file raw variables***
drop `demo_w`wavenum'_fina'

***drop ELSA wave specific life history data variables*** 
drop `demo_w`wavenum'_hist'

*******************************************************************************************

	

*set wave number
local wavenum=6
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with index file***
local demo_w`wavenum'_index outindw? mortwave // idahhw6 persno outindw6  outscw6 finstatw6 dobyear sex w6lwgt w6xwgt w6scwt
                     
merge 1:1 idauniq using "$index", keepusing(`demo_w`wavenum'_index') nogen

***merge with previous wave specific core data***
merge 1:1 idauniq using "$wave_5_core", keepusing(dhr dhr? dhr1? dimar) nogen

*relationship statuses
foreach v of varlist dhr dhr? dhr1? {
	gen pre_`v'=`v'
}
drop dhr dhr? dhr1?

*marriage status
gen pre_dimar=dimar
drop dimar

***merge with wave specific core data***
local demo_w6_core perid IaPId DhR DhR? DhR1? hopid askpx hhresp ///
                   iintdaty iintdatm Indobyr indager indsex ///
                   Fqethnr Fqcbthr ///
                   FqMqua FqAQua fqqumdeg fqqumtea fqqumnur fqqumhnc fqqumonc ///
				   fqqumcgf fqqumcga fqqumcgo fqqumale fqqumasl fqqumslc ///
				   fqqumolp fqqumola fqqumold fqqumgca fqqumgcd fqqumcs1 ///
				   fqqumcs2 fqqumcsu fqqumsll fqqumsup fqqummat fqqumnv5 ///
				   fqqumnv4 fqqumnv3 fqqumnv2 fqqumnv1 fqqumtra fqqumcle ///
				   fqqumfor fqqumovo fqqumnvz fqqumnne fqqummil fqqumdip ///
				   fqqumoac fqqumopr fqqum85 fqqum86 ///
                   DiMar DiNMA DiNFA DiANM DiMaD DiANF DiFAD ///
                   mainhh painhh idahhw6 w6indout finstatw6 w6lwgt w6xwgt w6scwt sc* idahhw6 GOR 
merge 1:1 idauniq using "$wave_6_core", keepusing(`demo_w6_core') nogen

***merge with wave 6 end of life variables data***
local demo_w6_endl  EiDateY
merge 1:1 idauniq using "$wave_6_endl", keepusing(`demo_w6_endl' idauniq) 
gen w6endlife = 1 if _merge == 3
drop _merge

****merge with wave specific financial derived variables data***
local demo_w6_fina coupid 
merge 1:1 idauniq using "$wave_6_fina", keepusing(`demo_w6_fina') nogen

***merge with wave 3 life history data***
local demo_w6_hist rpyrma rpyrma? rpmarst rpmarst? rpdiv rpdiv? rpdyr rpdyr? rpfin rpfin? rpdiy rpdiy? 
merge 1:1 idauniq using "$wave_3_hist", keepusing(`demo_w6_hist') nogen


***person specific identifier***
*wave household id
gen hh`wavenum'hhid =.
replace hh`wavenum'hhid = idahhw6 if !inlist(idahhw6,-2,.)
label variable hh`wavenum'hhid "wave `wavenum' specific household serial number /num"

*check

gen hh`wavenum'hhidc = string(hh`wavenum'hhid)
label variable hh`wavenum'hhidc "wave `wavenum' specific household serial number /5-char"

*person number
replace pn = perid if !missing(perid)

***wave status: response indicator***
*wave response indicator
gen inw`wavenum' =0
replace inw`wavenum' = 1 if inlist(w6indout,11,13,21,23,24,25)
label variable inw`wavenum' "inw`wavenum': =1 if respondent w`wavenum'"

*value labels
label values inw`wavenum' inw

*check

****self-completion status: response indicator***
**wave self-completion response indicator
gen inw`wavenum'sc =0
replace inw`wavenum'sc = 1 if inrange(w6scwt,0,10)
foreach var of varlist sc* {
    replace inw`wavenum'sc = 1 if inrange(`var',0,9999999999)
}
label variable inw`wavenum'sc "inw`wavenum'sc: =1 if respondent w`wavenum' self-completion"

**value labels
label values inw`wavenum'sc inwsc

**check

****create temporary indicator of wave spouse***
gen w`wavenum'spouse=.
replace w`wavenum'spouse = 0 if inw`wavenum'==1
replace w`wavenum'spouse = 1 if inlist(DhR ,1,2) | ///
																inlist(DhR2,1,2) | ///
																inlist(DhR3,1,2) | ///
																inlist(DhR4,1,2) | ///
																inlist(DhR5,1,2) | ///
																inlist(DhR6,1,2) | ///
																inlist(DhR7,1,2) | ///
																inlist(DhR8,1,2) | ///
																inlist(DhR9,1,2) | ///
																inlist(DhR10,1,2) | ///
																inlist(DhR11,1,2) | ///
																inlist(DhR12,1,2) | ///
																inlist(DhR13,1,2) | ///
																inlist(DhR14,1,2) | ///
																inlist(DhR15,1,2) | ///
																inlist(DhR16,1,2)
											
***couple identifier***
*wave couple id
gen h`wavenum'coupid =.
replace h`wavenum'coupid = coupid if !inlist(coupid,.,-10)
label variable h`wavenum'coupid "wave `wavenum' specific couple id number /num"

**check

**wave couple id (character)
gen str5 h`wavenum'coupidc = string(h`wavenum'coupid)
label variable h`wavenum'coupidc "wave `wavenum' specific couple id number /5-char"

***spouse identifier***
*wave spouse id
gen s`wavenum'idauniq =.
bysort coupid: replace s`wavenum'idauniq = 0 if missing(idauniq[_n+1]) & _n==1 & inw`wavenum' ==1
bysort coupid: replace s`wavenum'idauniq = idauniq[_n+1] if !inlist(coupid,.,-10) & idauniq[_n+1]!=.
bysort coupid: replace s`wavenum'idauniq = idauniq[_n-1] if !inlist(coupid,.,-10) & idauniq[_n-1]!=.
label variable s`wavenum'idauniq "s`wavenum'idauniq:w`wavenum' spouse idauniq"

****wave status: interview status***
**wave interview status 
gen r`wavenum'iwstat =.
replace r`wavenum'iwstat = 0 if r`pre_wavenum'iwstat == 0 & mi(w6indout)
replace r`wavenum'iwstat = 1 if inlist(w6indout,11,13,21,23,24,25)
*replace r`wavenum'iwstat = 4 if 
replace r`wavenum'iwstat = 5 if (w6endlife == 1 & !inlist(r`pre_wavenum'iwstat,5,6)) | (!inlist(w6indout,11,13,21,23,24,25) & inlist(mortwave,61,63))
replace r`wavenum'iwstat = 6 if inlist(mortwave,21,22,23,31,32,33,41,42,43,51,52,53) & !inlist(w6indout,11,13,21,23,24,25) & (w6endlife != 1 | inlist(r`pre_wavenum'iwstat,5,6))
replace r`wavenum'iwstat = 7 if inlist(r`pre_wavenum'iwstat,7) & !inrange(mortwave,11,63)
replace r`wavenum'iwstat = 9 if inlist(r`pre_wavenum'iwstat,1,4,9) & !inlist(w6indout,11,13,21,23,24,25) & w6endlife != 1 & !inrange(mortwave,11,63)
label variable r`wavenum'iwstat "r`wavenum'iwstat:w`wavenum' r interview status"

**wave spouse interview status
gen s`wavenum'iwstat =.
spouse r`wavenum'iwstat, result(s`wavenum'iwstat) wave(`wavenum')
label variable s`wavenum'iwstat "s`wavenum'iwstat:w`wavenum' s interview status"

**value labels
label values r`wavenum'iwstat wstat
label values s`wavenum'iwstat wstat

drop w6endlife

**check 

***sample cohort***
*wave respondent cohort
gen r`wavenum'cohort_e=.
replace r`wavenum'cohort_e = 1 if inlist(finstatw6,1,2,3)
replace r`wavenum'cohort_e = 2 if inlist(finstatw6,5,6,13,21,22,29)
replace r`wavenum'cohort_e = 3 if inlist(finstatw6,4)
replace r`wavenum'cohort_e = 4 if inlist(finstatw6,7,8,9)
replace r`wavenum'cohort_e = 5 if inlist(finstatw6,12,20,23,30)
replace r`wavenum'cohort_e = 6 if inlist(finstatw6,10)
replace r`wavenum'cohort_e = 7 if inlist(finstatw6,11)
replace r`wavenum'cohort_e = 8 if inlist(finstatw6,14,15,16)
replace r`wavenum'cohort_e = 9 if inlist(finstatw6,19,24,31)
replace r`wavenum'cohort_e = 10 if inlist(finstatw6,17)
replace r`wavenum'cohort_e = 11 if inlist(finstatw6,18)
replace r`wavenum'cohort_e = 12 if inlist(finstatw6,25,28,33) // *update once Wave 6 is included in Index file
replace r`wavenum'cohort_e = 13 if inlist(finstatw6,32) // *update once Wave 6 is included in Index file
replace r`wavenum'cohort_e = 14 if inlist(finstatw6,26) // *update once Wave 6 is included in Index file
replace r`wavenum'cohort_e = 15 if inlist(finstatw6,27) // *update once Wave 6 is included in Index file
label variable r`wavenum'cohort_e "r`wavenum'cohort_e:w`wavenum' r sample cohort, ELSA specific"

**wave spouse cohort
gen s`wavenum'cohort_e=.
spouse r`wavenum'cohort_e, result(s`wavenum'cohort_e) wave(`wavenum')
label variable s`wavenum'cohort_e "s`wavenum'cohort_e:w`wavenum' s sample cohort, ELSA specific"

*value labels
label values r`wavenum'cohort_e cohort_e
label values s`wavenum'cohort_e cohort_e

*check

***whether eligible for the elsa sample***
**wave spouse eligibility
gen s`wavenum'elsamp =.
spouse raelsamp, result(s`wavenum'elsamp) wave(`wavenum')
label variable s`wavenum'elsamp "s`wavenum'elsamp:ELSA s sample-age eligible/Wave 1 Resp"

**value labels
label values s`wavenum'elsamp elsaamp


***person-level longitudinal weight, core sample***
*wave respondent longitudinal weight
gen r`wavenum'lwtresp =.
replace r`wavenum'lwtresp = w6lwgt 
label variable r`wavenum'lwtresp "r`wavenum'lwtresp:w`wavenum' r person-level longitudinal weight, core sample"

**wave spouse longitudinal weight, core
gen s`wavenum'lwtresp =.
spouse r`wavenum'lwtresp, result(s`wavenum'lwtresp) wave(`wavenum')
label variable s`wavenum'lwtresp "s`wavenum'lwtresp:w`wavenum' s person-level longitudinal weight, core sample"

*check

***person-level cross-sectional weight, core sample***
*wave respondent cross-sectional weight, core
gen r`wavenum'cwtresp = 0 if inw`wavenum' == 1
replace r`wavenum'cwtresp = w6xwgt if !mi(w6xwgt)
label variable r`wavenum'cwtresp "r`wavenum'cwtresp:w`wavenum' r person-level cross-sectional weight, core sample"

**wave spouse cross-sectional weight, core
gen s`wavenum'cwtresp =.
spouse r`wavenum'cwtresp, result(s`wavenum'cwtresp) wave(`wavenum')
label variable s`wavenum'cwtresp "s`wavenum'cwtresp:w`wavenum' s person-level cross-sectional weight, core sample"

*check

***person-level weight, self-completion sample***
*wave respondent weight, self-completion sample
gen r`wavenum'scwtresp =.
replace r`wavenum'scwtresp = w6scwt
label variable r`wavenum'scwtresp "r`wavenum'scwtresp:w`wavenum' r person-level weight, self-completion sample"

**wave spouse weight, self-completion
gen s`wavenum'scwtresp =.
spouse r`wavenum'scwtresp, result(s`wavenum'scwtresp) wave(`wavenum')
label variable s`wavenum'scwtresp "s`wavenum'scwtresp:w`wavenum' s person-level weight, self-completion sample"

*check

***spouse identifier***
**respondent number of spouse id's (update)
replace raspct = raspct +1 if s`wavenum'idauniq != s1idauniq & s`wavenum'idauniq != s1idauniq & !inlist(s`wavenum'idauniq,0,.)
replace raspct = 0 if s`wavenum'idauniq == 0 & missing(raspct)
replace raspct = 1 if !inlist(s`wavenum'idauniq,0,.) & missing(raspct)

**check

**respondent first spouse id (update)
replace raspid1 = s`wavenum'idauniq if !inlist(s`wavenum'idauniq,0,.) & missing(raspid1)

**check

**respondent second spouse id (update)
replace raspid2 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.)

**check

**respondent third spouse id (update)
replace raspid3 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.)

**check

**respondent fourth spouse id (update)
replace raspid4 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2  & s`wavenum'idauniq != raspid3 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.) & !inlist(raspid3,0,.)

**check

***sampling weight***
*wave 6 respondent stratification variable
gen r6strat =.
replace r6strat = idahhw6
label variable r6strat "r6strat:w6 hse stratification variable"

*check 

*respondent clustering variable
gen r6clust = ""
replace r6clust = GOR if GOR!=""
label variable r6clust "r6clust:w6 hse clustering variable"

***number of household respondents***
*wave household number of respondents   
egen hh`wavenum'hhresp = sum(inw`wavenum'==1) if inw`wavenum'==1, by(hh`wavenum'hhid)
label variable hh`wavenum'hhresp "hh`wavenum'hhresp:w`wavenum' # core respondents in hh"

*check

****whether couple household***
**wave household couple indicator
egen h`wavenum'cpl = sum(inw`wavenum'==1), by(coupid)
recode h`wavenum'cpl (0=.) (1=0) (2=1)
label variable h`wavenum'cpl "h`wavenum'cpl:w`wavenum' whether coupled"

**value labels
label values h`wavenum'cpl cpl

**check

***financial, family respondent***
*wave respondent financial respondent indicator
gen r`wavenum'finr =.
replace r`wavenum'finr = 1 if perid == IaPId & !inlist(IaPId,.,-1,-9,-8)
replace r`wavenum'finr = 0 if perid != IaPId & inw`wavenum'==1
label variable r`wavenum'finr "r`wavenum'finr:w`wavenum' r whether financial resp"

**wave spouse financial respondent indicator
gen s`wavenum'finr =.
spouse r`wavenum'finr, result(s`wavenum'finr) wave(`wavenum')
label variable s`wavenum'finr "s`wavenum'finr:w`wavenum' s whether financial resp"

*wave couple financial respondent indicator
gen h`wavenum'anyfin =.
replace h`wavenum'anyfin = 0 if IaPId==-1
replace h`wavenum'anyfin = 1 if !inlist(IaPId,.,-1) & inw`wavenum' ==1
label variable h`wavenum'anyfin "h`wavenum'anyfin:w`wavenum' whether any finr in couple"

*value labels
label values r`wavenum'finr finr
label values s`wavenum'finr finr
label values h`wavenum'anyfin finr

*check 

***household, family respondent***
*wave respondent household respondent indicator
gen r`wavenum'hhr =.
replace r`wavenum'hhr = 1 if perid == hhresp & !inlist(hhresp,.,-1,-9,-8,97)
replace r`wavenum'hhr = 0 if perid != hhresp & inw`wavenum'==1
label variable r`wavenum'hhr "r`wavenum'hhr:w`wavenum' r whether hh resp"

**wave spouse household respondent indicator
gen s`wavenum'hhr =.
spouse r`wavenum'hhr, result(s`wavenum'hhr) wave(`wavenum')
label variable s`wavenum'hhr "s`wavenum'hhr:w`wavenum' s whether hh resp"

*value labels
label values r`wavenum'hhr hhr
label values s`wavenum'hhr hhr

*check

***housing, family respondent***
*wave respondent housing respondent indicator
gen r`wavenum'hor =.
replace r`wavenum'hor = 1 if perid == hopid & !inlist(hopid,.,-1,-9,-8)
replace r`wavenum'hor = 0 if perid != hopid & inw`wavenum' ==1
label variable r`wavenum'hor "r`wavenum'hor:w`wavenum' r whether housing resp"

**wave spouse housing respondent indicator
gen s`wavenum'hor =.
spouse r`wavenum'hor, result(s`wavenum'hor) wave(`wavenum')
label variable s`wavenum'hor "s`wavenum'hor:w`wavenum' s whether housing resp"

*wave household housing respondent indicator
gen hh`wavenum'anyho =.
replace hh`wavenum'anyho = 0 if hopid==-1
replace hh`wavenum'anyho = 1 if !inlist(hopid,.,-1) & inw`wavenum'==1
label variable hh`wavenum'anyho "hh`wavenum'anyho:w`wavenum' whether any hor in hh"

*value labels
label values r`wavenum'hor   hor
label values s`wavenum'hor   hor
label values hh`wavenum'anyho hor

*check

***whether proxy interview***
*wave respondent proxy indicator
gen r`wavenum'proxy =.
replace r`wavenum'proxy = 1 if askpx ==1
replace r`wavenum'proxy = 0 if askpx ==0
label variable r`wavenum'proxy "r`wavenum'proxy:w`wavenum' r whether proxy interview"

**wave spouse proxy indicator
gen s`wavenum'proxy =.
spouse r`wavenum'proxy, result(s`wavenum'proxy) wave(`wavenum')
label variable s`wavenum'proxy "s`wavenum'proxy:w`wavenum' s whether proxy interview"

*value labels
label values r`wavenum'proxy proxy
label values s`wavenum'proxy proxy

*check

***interview dates***
**wave household interview date
*gen hh`wavenum'iwhh =.
*replace hh`wavenum'iwhh = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2020) & inrange(iintdatm, 1, 12)
*label variable hh`wavenum'iwhh "hh`wavenum'iwhh:w`wavenum' household interview date"
*
**wave household interview date flag
*gen hh`wavenum'iwhhf =.
*replace hh`wavenum'iwhhf = 0 if inrange(iintdaty,2000, 2020) & inrange(iintdatm,1,12)
*replace hh`wavenum'iwhhf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
*replace hh`wavenum'iwhhf = 2 if !inrange(iintdaty,2000, 2020) & inw`wavenum' ==1
*label variable hh`wavenum'iwhhf "hh`wavenum'iwhhf:w`wavenum' household interview date flag"

*wave respondent individual interview date
gen r`wavenum'iwind =.
replace r`wavenum'iwind = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2020) & inrange(iintdatm, 1, 12)
label variable r`wavenum'iwind "r`wavenum'iwind:w`wavenum' r individual interview date"

**wave spouse individual interview date
gen s`wavenum'iwind =.
spouse r`wavenum'iwind, result(s`wavenum'iwind) wave(`wavenum')
label variable s`wavenum'iwind "s`wavenum'iwind:w`wavenum' s individual interview date"

*wave respondent individual interview date flag
gen r`wavenum'iwindf =.
replace r`wavenum'iwindf = 0 if inrange(iintdaty,2000, 2020) & inrange(iintdatm,1,12)
replace r`wavenum'iwindf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
replace r`wavenum'iwindf = 2 if !inrange(iintdaty,2000, 2020) & inw`wavenum' ==1
label variable r`wavenum'iwindf "r`wavenum'iwindf:w`wavenum' r individual interview date flag"

**wave spouse individual interview flag
gen s`wavenum'iwindf =.
spouse r`wavenum'iwindf, result(s`wavenum'iwindf) wave(`wavenum')
label variable s`wavenum'iwindf "s`wavenum'iwindf:w`wavenum' s individual interview date flag"

**wave household interview month
*gen hh`wavenum'iwhhm =.
*replace hh`wavenum'iwhhm = iintdatm if inrange(iintdatm,1,12)
*label variable hh`wavenum'iwhhm "hh`wavenum'iwhhm:w`wavenum' household interview month"
*
**wave household interview year
*gen hh`wavenum'iwhhy =.
*replace hh`wavenum'iwhhy = iintdaty if inrange(iintdaty,2000, 2020)
*label variable hh`wavenum'iwhhy "hh`wavenum'iwhhy:w`wavenum' household interview year"

*wave respondent individual interview month
gen r`wavenum'iwindm =.
replace r`wavenum'iwindm = iintdatm if inrange(iintdatm,1,12)
label variable r`wavenum'iwindm "r`wavenum'iwindm:w`wavenum' r individual interview month"

*wave respondent individual interview year
gen r`wavenum'iwindy =.
replace r`wavenum'iwindy = iintdaty if inrange(iintdaty,2000, 2020)
label variable r`wavenum'iwindy "r`wavenum'iwindy:w`wavenum' r individual interview year"

**wave spouse individual interview year
gen s`wavenum'iwindm =.
spouse r`wavenum'iwindm, result(s`wavenum'iwindm) wave(`wavenum')
label variable s`wavenum'iwindm "s`wavenum'iwindm:w`wavenum' s individual interview month"

**wave spouse individual interview year
gen s`wavenum'iwindy =.
spouse r`wavenum'iwindy, result(s`wavenum'iwindy) wave(`wavenum')
label variable s`wavenum'iwindy "s`wavenum'iwindy:w`wavenum' s individual interview year"

*value labels
*label values hh`wavenum'iwhhf dateflag
label values r`wavenum'iwindf dateflag
label values s`wavenum'iwindf dateflag

*check


***birth date: year***
*respondent birth year (update)
replace rabyear = Indobyr if inrange(Indobyr,1900,2000) & (missing(rabyear) | rafbyear != 0)
replace rabyear = 1922 if Indobyr == -7 & missing(rabyear)

**wave spouse birth year
gen s`wavenum'byear =.
spouse rabyear, result(s`wavenum'byear) wave(`wavenum')
label variable s`wavenum'byear "s`wavenum'byear:w`wavenum' s birth year"

*respondent birth year flag
replace rafbyear = 0 if inrange(Indobyr,1900,2000) & (mi(rafbyear) | rafbyear != 0)
replace rafbyear = 6 if Indobyr == -7 & mi(rafbyear)

**wave spouse birth year flag
gen s`wavenum'fbyear =.
spouse rafbyear, result(s`wavenum'fbyear) wave(`wavenum')
label variable s`wavenum'fbyear "s`wavenum'fbyear:w`wavenum' s flag birth year bottom-coded"
label values s`wavenum'fbyear fbyear

*check 

***age at interview (in years)***
*wave respondent age in years
gen r`wavenum'agey=.
replace r`wavenum'agey = indager if inrange(indager,10,90)
replace r`wavenum'agey = 90 if indager==-7
label variable r`wavenum'agey "r`wavenum'agey:w`wavenum' r age (years) at ivw"

**wave spouse age in years
gen s`wavenum'agey=.
spouse r`wavenum'agey, result(s`wavenum'agey) wave(`wavenum')
label variable s`wavenum'agey "s`wavenum'agey:w`wavenum' s age (years) at ivw"

*wave respondent age in years flag
gen r`wavenum'fagey=.
replace r`wavenum'fagey = 0 if inrange(indager,10,90)
replace r`wavenum'fagey = 1 if indager == -7
label variable r`wavenum'fagey "r`wavenum'fagey:w`wavenum' r flag age at iwv top-coded"
label values r`wavenum'fagey fagey

**wave spouse age in years flag
gen s`wavenum'fagey=.
spouse r`wavenum'fagey, result(s`wavenum'fagey) wave(`wavenum')
label variable s`wavenum'fagey "s`wavenum'fagey:w`wavenum' s flag age at iwv top-coded"
label values s`wavenum'fagey fagey

*check

***gender***
*respondent gender (update)
missing_w`wavenum' indsex if missing(ragender), result(ragender)
replace ragender = 1 if indsex == 1 & missing(ragender)
replace ragender = 2 if indsex == 2 & missing(ragender)

**wave spouse gender
gen s`wavenum'gender =.
spouse ragender, result(s`wavenum'gender) wave(`wavenum')
label variable s`wavenum'gender "s`wavenum'gender:w`wavenum' s gender"

*respondent gender flag (update)
replace rafgendr = 0 if ( (ragender == 1 & indsex == 1) | (ragender == 2 & indsex == 2) ) & rafgendr!=1
replace rafgendr = 1 if (ragender == 1 & indsex == 2) | (ragender == 2 & indsex == 1)

**wave spouse gender flag
gen s`wavenum'fgendr = .
spouse rafgendr, result(s`wavenum'fgendr) wave(`wavenum')
label variable s`wavenum'fgendr "s`wavenum'fgendr:w`wavenum' flag if problem with s gender"

**value labels
label values s`wavenum'gender gender
label values s`wavenum'fgendr genderflag

*check

***race, ethnicity: race***
*respondent race (update)
missing_w`wavenum' Fqethnr if missing(raracem), result(raracem)
replace raracem = 1 if Fqethnr == 1 & missing(raracem)
replace raracem = 4 if Fqethnr == 2 & missing(raracem)

**wave spouse race
gen s`wavenum'racem =.
spouse raracem, result(s`wavenum'racem) wave(`wavenum')
label variable s`wavenum'racem "s`wavenum'racem:w`wavenum' s race - masked"

*respondent race flag (update)
replace raracef = 0 if ( (raracem == 1 & Fqethnr == 1) | (raracem == 4 & Fqethnr == 2) ) & raracef!=1
replace raracef = 1 if (raracem == 1 & Fqethnr == 2) | (raracem == 4 & Fqethnr == 1)

**wave spouse race flag
gen s`wavenum'racef =.
spouse raracef, result(s`wavenum'racef) wave(`wavenum')
label variable s`wavenum'racef "s`wavenum'racef:w`wavenum' flag if problem with s race"

**value labels
label values s`wavenum'racem race
label values s`wavenum'racef raceflag

*check


***education: categorical summary***
*respondent education categorically (update)
replace raeduc_e = 5 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 4 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumhnc == 1 | ///
														fqqumonc == 1 | ///
														fqqumcgf == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 3 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumnv2 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 1 if ((FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumcs1 == 1 | ///
														fqqumcs2 == 1 | ///
														fqqumcsu == 1 | ///
														fqqumsll == 1 | ///
														fqqumsup == 1 | ///
														fqqummat == 1 | ///
														fqqumnv1 == 1 ) | FqAQua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))& (mi(raeduc_e) & raeduc_e != .o)
missing_w`wavenum' FqMqua ///
           FqAQua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeduc_e) & raeduc_e != .o), result(raeduc_e)										 														
replace raeduc_e = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & missing(raeduc_e) & !inlist(raeduc_e,.o,.r,.d)
replace raeduc_e = .o if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
														
																																										
**wave spouse education categorically
gen s`wavenum'educ_e =.
spouse raeduc_e, result(s`wavenum'educ_e) wave(`wavenum')
label variable s`wavenum'educ_e "s`wavenum'educ_e:w`wavenum' s education (categ)"
label values s`wavenum'educ_e educcats

*check

***education: isced category***
*wave 6 respondent education isced category (update)
replace raedisced = .n if (FqAQua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))& (mi(raedisced) & !inlist(raedisced,.n,.o))		
replace raedisced = 5 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))			
replace raedisced = 4 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))			
replace raedisced = 3 if (FqMqua == 1 | FqAQua == 1) & ( ///
													 fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raedisced) & !inlist(raedisced,.n,.o))																								
	
missing_w`wavenum' FqMqua ///
           FqAQua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raedisced) & !inlist(raedisced,.n,.o)), result(raedisced)
replace raedisced = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & mi(raedisced) & !inlist(raedisced,.n,.o,.r,.d)							 
replace raedisced = .o if ((FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raedisced) & !inlist(raedisced,.n,.o))															 
																			 																											
*wave 6 spouse education isced category
gen s`wavenum'edisced =.
spouse raedisced, result(s`wavenum'edisced) wave(`wavenum')
label variable s`wavenum'edisced "s`wavenum'edisced:w`wavenum' s education isced"
label values s`wavenum'edisced educisced 

***education: harmonized education category***
*wave 6 respondent education harmonized category (update)
replace raeducl = 3 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = 2 if (FqMqua == 1 | FqAQua == 1) & ( ///
													 fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 | ///
													  fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raeducl) & !inlist(raeducl,.o))											
replace raeducl = 1 if (FqAQua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))  & (mi(raeducl) & !inlist(raeducl,.o))
missing_w`wavenum' FqMqua ///
           FqAQua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeducl) & !inlist(raeducl,.o)), result(raeducl)
replace raeducl = .o if ((FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & mi(raeducl) & !inlist(raeducl,1,.o,.r,.d)
label variable raeducl "raeducl:R harmonized education"
label values raeducl educharm

*wave 6 spouse education harmonized category
gen s6educl = .
spouse raeducl, result(s6educl) wave(6)
label variable s6educl "s6educl:w6 S harmonized education"
label values s6educl educharm

***current marital status: with implied partnerships***
*wave respondent marital status with partnership
gen r`wavenum'mstat=.
missing_w`wavenum' DiMar, result(r`wavenum'mstat)
replace r`wavenum'mstat = 1 if inlist(DiMar, 2,3,4,11)
replace r`wavenum'mstat = 4 if inlist(DiMar, 5, 8)
replace r`wavenum'mstat = 5 if inlist(DiMar, 6, 9)
replace r`wavenum'mstat = 7 if inlist(DiMar, 7, 10)
replace r`wavenum'mstat = 8 if DiMar == 1
replace r`wavenum'mstat = 3 if (inlist(DiMar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.)) 
label variable r`wavenum'mstat "r`wavenum'mstat:w`wavenum' r marital status w/partners, filled"

**wave spouse marital status with implied partnership
gen s`wavenum'mstat=.
spouse r`wavenum'mstat, result(s`wavenum'mstat) wave(`wavenum')
label variable s`wavenum'mstat "s`wavenum'mstat:w`wavenum' s marital status w/partners, filled"

*value labels
label values r`wavenum'mstat marwpart
label values s`wavenum'mstat marwpart

*check

****current marital status: current implied partnership status***
**wave respondent implied partnership status
gen r`wavenum'mpart =.
missing_w`wavenum' DiMar, result(r`wavenum'mpart)
replace r`wavenum'mpart = 0 if inw`wavenum'==1
replace r`wavenum'mpart = 1 if inlist(DiMar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.)
label variable r`wavenum'mpart "r`wavenum'mpart:w`wavenum' r implied partnership status"

**wave spouse partnership status
gen s`wavenum'mpart =.
spouse r`wavenum'mpart, result(s`wavenum'mpart) wave(`wavenum')
label variable s`wavenum'mpart "s`wavenum'mpart:w`wavenum' s implied partnership status"

**value labels
label values r`wavenum'mpart part
label values s`wavenum'mpart part

**check

***current marital status: without implied partnerships***
*wave respondent marital status without implied partnership
gen r`wavenum'mstath =.
missing_w`wavenum' DiMar, result(r`wavenum'mstath)
replace r`wavenum'mstath = 1 if inlist(DiMar, 2,3,4,11)
replace r`wavenum'mstath = 4 if inlist(DiMar, 5, 8)
replace r`wavenum'mstath = 5 if inlist(DiMar, 6, 9)
replace r`wavenum'mstath = 7 if inlist(DiMar, 7, 10)
replace r`wavenum'mstath = 8 if DiMar == 1
label variable r`wavenum'mstath "r`wavenum'mstath:w`wavenum' r marital status"

**wave spouse marital status without implied partnership
gen s`wavenum'mstath =.
spouse r`wavenum'mstath, result(s`wavenum'mstath) wave(`wavenum')
label variable s`wavenum'mstath "s`wavenum'mstath:w`wavenum' s marital status"

*value labels
label values r`wavenum'mstath marwopart
label values s`wavenum'mstath marwopart

*check

***number of marriages***
*married but missing last wave's husband/wife (temp)
tempvar w`pre_wavenum'mishw
gen `w`pre_wavenum'mishw'=.
replace `w`pre_wavenum'mishw' = 0 if inw`pre_wavenum'==1
foreach v of varlist pre_dhr pre_dhr? pre_dhr1? {
	replace `w`pre_wavenum'mishw' = 1 if `v'==1 & inlist(pre_dimar,2,4)
}
replace `w`pre_wavenum'mishw' = 2 if `w`pre_wavenum'mishw'==0 & inlist(pre_dimar,2,4)
recode `w`pre_wavenum'mishw' (1=0) (2=1)

*wave respondent number of marriages
gen r`wavenum'mrct =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mrct = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mrct = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mrct)
missing_w`wavenum' DiMar, result(r`wavenum'mrct)
missing_H r`pre_wavenum'mrct, result(r`wavenum'mrct)
replace r`wavenum'mrct = r`pre_wavenum'mrct if !mi(r`pre_wavenum'mrct) & inw`wavenum'==1
replace r`wavenum'mrct = r`wavenum'mrct + 1 if ( (( (pre_dhr!=1 & DhR==1) | ///
																					   		 (pre_dhr2!=1 & DhR2==1) | ///
																					   		 (pre_dhr3!=1 & DhR3==1) | ///
																					   		 (pre_dhr4!=1 & DhR4==1) | ///
																					   		 (pre_dhr5!=1 & DhR5==1) | ///
																					   		 (pre_dhr6!=1 & DhR6==1) | ///
																					   		 (pre_dhr7!=1 & DhR7==1) | ///
																					   		 (pre_dhr8!=1 & DhR8==1) | ///
																					   		 (pre_dhr9!=1 & DhR9==1) | ///
																					   		 (pre_dhr10!=1 & DhR10==1) | ///
																					   		 (pre_dhr11!=1 & DhR11==1) | ///
																					   		 (pre_dhr12!=1 & DhR12==1) | ///
																					   		 (pre_dhr13!=1 & DhR13==1) | ///
																					   		 (pre_dhr14!=1 & DhR14==1) | ///
																					   		 (pre_dhr15!=1 & DhR15==1) | ///
																					   		 (pre_dhr16!=1 & DhR16==1) ) & `w`pre_wavenum'mishw'!=1 & inlist(DiMar,2,4) ) | ///
																					   		 (inlist(pre_dimar,1,3,5,6,7,8,9,10,11) & inlist(DiMar,2,4)) | ///
																					   		 (pre_dimar==2 & DiMar==4) ) & ///
																					   		 !mi(r`wavenum'mrct) & inw`wavenum'==1
label variable r`wavenum'mrct "r`wavenum'mrct:w`wavenum' r # marriages"

**wave spouse number of marriages
gen s`wavenum'mrct =.
spouse r`wavenum'mrct, result(s`wavenum'mrct) wave(`wavenum')
label variable s`wavenum'mrct "s`wavenum'mrct:w`wavenum' s # marriages"

*check

***marital history: never married***
*wave respondent never married indicator
gen r`wavenum'mnev =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mnev = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mnev = .l if rpmarst==. & inw`wavenum'==1
missing_w`wavenum' DiMar, result(r`wavenum'mnev)
missing_H r`pre_wavenum'mnev, result(r`wavenum'mnev)
replace r`wavenum'mnev = 0 if (r`pre_wavenum'mnev == 0 | inlist(DiMar,2,4,5,6,7)) & inw`wavenum'==1
replace r`wavenum'mnev = 1 if r`pre_wavenum'mnev==1 & inlist(DiMar,1,3,8,9,10,11)
label variable r`wavenum'mnev "r`wavenum'mnev:w`wavenum' r never married"

**wave spouse never married indicator
gen s`wavenum'mnev =.
spouse r`wavenum'mnev, result(s`wavenum'mnev) wave(`wavenum')
label variable s`wavenum'mnev "s`wavenum'mnev:w`wavenum' s never married"

*value labels
label values r`wavenum'mnev mnev
label values s`wavenum'mnev mnev

*check

***marital history: # times divorced***
*wave respondent number of times divorced
gen r`wavenum'mdiv =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mdiv = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mdiv = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mdiv)
missing_w`wavenum' DiMar, result(r`wavenum'mdiv)
missing_H r`pre_wavenum'mdiv, result(r`wavenum'mdiv)
replace r`wavenum'mdiv = r`pre_wavenum'mdiv if !mi(r`pre_wavenum'mdiv) & inw`wavenum'==1
replace r`wavenum'mdiv = r`wavenum'mdiv + 1 if ( (( (pre_dhr==1 & DhR!=1) | ///
																					   		 (pre_dhr2==1 & DhR2!=1) | ///
																					   		 (pre_dhr3==1 & DhR3!=1) | ///
																					   		 (pre_dhr4==1 & DhR4!=1) | ///
																					   		 (pre_dhr5==1 & DhR5!=1) | ///
																					   		 (pre_dhr6==1 & DhR6!=1) | ///
																					   		 (pre_dhr7==1 & DhR7!=1) | ///
																					   		 (pre_dhr8==1 & DhR8!=1) | ///
																					   		 (pre_dhr9==1 & DhR9!=1) | ///
																					   		 (pre_dhr10==1 & DhR10!=1) | ///
																					   		 (pre_dhr11==1 & DhR11!=1) | ///
																					   		 (pre_dhr12==1 & DhR12!=1) ) & inlist(pre_dimar,2,4) & DiMar==6 ) | ///
																					   		 (inlist(pre_dimar,2,4) & DiMar==6) ) & ///
																					   		 !mi(r`wavenum'mdiv) & inw`wavenum'==1
label variable r`wavenum'mdiv "r`wavenum'mdiv:w`wavenum' r # times divorced"

**wave spouse number of times divorced
gen s`wavenum'mdiv =.
spouse r`wavenum'mdiv, result(s`wavenum'mdiv) wave(`wavenum')
label variable s`wavenum'mdiv "s`wavenum'mdiv:w`wavenum' s # times divorced"

*check

***marital history: # times widowed***
*wave respondent number of times widowed
gen r`wavenum'mwid =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mwid = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mwid = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mwid)
missing_w`wavenum' DiMar, result(r`wavenum'mwid)
missing_H r`pre_wavenum'mwid, result(r`wavenum'mwid)
replace r`wavenum'mwid = r`pre_wavenum'mwid if !mi(r`pre_wavenum'mwid) & inw`wavenum'==1
replace r`wavenum'mwid = r`wavenum'mwid + 1 if ( (( (pre_dhr==1 & DhR!=1) | ///
																					   		 (pre_dhr2==1 & DhR2!=1) | ///
																					   		 (pre_dhr3==1 & DhR3!=1) | ///
																					   		 (pre_dhr4==1 & DhR4!=1) | ///
																					   		 (pre_dhr5==1 & DhR5!=1) | ///
																					   		 (pre_dhr6==1 & DhR6!=1) | ///
																					   		 (pre_dhr7==1 & DhR7!=1) | ///
																					   		 (pre_dhr8==1 & DhR8!=1) | ///
																					   		 (pre_dhr9==1 & DhR9!=1) | ///
																					   		 (pre_dhr10==1 & DhR10!=1) | ///
																					   		 (pre_dhr11==1 & DhR11!=1) | ///
																					   		 (pre_dhr12==1 & DhR12!=1) ) & inlist(pre_dimar,2,4) & DiMar==7 ) | ///
																					   		 (inlist(pre_dimar,2,4) & DiMar==7) ) & ///
																					   		 !mi(r`wavenum'mwid) & inw`wavenum'==1
label variable r`wavenum'mwid "r`wavenum'mwid:w`wavenum' r # times widowed"

**wave spouse number of times widowed
gen s`wavenum'mwid =.
spouse r`wavenum'mwid, result(s`wavenum'mwid) wave(`wavenum')
label variable s`wavenum'mwid "s`wavenum'mwid:w`wavenum' s # times widowed"

*check

***marital history: #times don't know how marriage ended***
*different husband/wife from last wave (temp)
tempvar w`wavenum'diffhw
gen `w`wavenum'diffhw'=.
replace `w`wavenum'diffhw' = 0 if inw`wavenum'==1
forvalues p=1/12 {
	if "`p'"=="1" local p_
	else local p_ `p'
	local lp = `p'-1
	local np = `p'+1
	forvalues r=1/`lp' {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_dhr`p_' == 1 & DhR`r_' == 1
	}
	forvalues r=`np'/16 {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_dhr`p_' == 1 & DhR`r_' == 1
	}
}

*wave respondent number of times dk marriage end
gen r`wavenum'mend =.	
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mend = .b if inw`w'!=1 & inw`wavenum'==1
}															   		 
replace r`wavenum'mend = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mend)
missing_w`wavenum' DiMar, result(r`wavenum'mend)
missing_H r`pre_wavenum'mend, result(r`wavenum'mend)
replace r`wavenum'mend = r`pre_wavenum'mend if !mi(r`pre_wavenum'mend) & inw`wavenum'==1
replace r`wavenum'mend = r`wavenum'mend + 1 if ( (( (pre_dhr==1 & DhR!=1) | ///
																					   		 (pre_dhr2==1 & DhR2!=1) | ///
																					   		 (pre_dhr3==1 & DhR3!=1) | ///
																					   		 (pre_dhr4==1 & DhR4!=1) | ///
																					   		 (pre_dhr5==1 & DhR5!=1) | ///
																					   		 (pre_dhr6==1 & DhR6!=1) | ///
																					   		 (pre_dhr7==1 & DhR7!=1) | ///
																					   		 (pre_dhr8==1 & DhR8!=1) | ///
																					   		 (pre_dhr9==1 & DhR9!=1) | ///
																					   		 (pre_dhr10==1 & DhR10!=1) | ///
																					   		 (pre_dhr11==1 & DhR11!=1) | ///
																					   		 (pre_dhr12==1 & DhR12!=1) ) & inlist(pre_dimar,2,4) & inlist(DiMar,1,3,8,9,10,11) ) | ///
																					   		 (inlist(pre_dimar,2,4) & inlist(DiMar,1,3,8,9,10,11)) | ///
																					   		 (`w`wavenum'diffhw'==1 & inlist(pre_dimar,2,4) & inlist(DiMar,2,4)) ) & ///
																					   		 !mi(r`wavenum'mend) & inw`wavenum'==1
label variable r`wavenum'mend "r`wavenum'mend:w`wavenum' r # times unknown end marriage"

**wave spouse number of times dk marriage end
gen s`wavenum'mend =.
spouse r`wavenum'mend, result(s`wavenum'mend) wave(`wavenum')
label variable s`wavenum'mend "s`wavenum'mend:w`wavenum' s # times unknown end marriage"

*check

***length of current marriage***
*consistent husband/wife
gen w`wavenum'conhw=.
replace w`wavenum'conhw=0 if inw`wavenum'==1
replace w`wavenum'conhw=1 if inlist(pre_dimar,2,4) & inlist(DiMar,2,4) & `w`wavenum'diffhw'!=1 // for wave 5 change conditions to include w`wavenum'conhw==1
	
*wave respondent length of current marriage
gen r`wavenum'mcurln =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mcurln = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mcurln = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mcurln = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw`wavenum'==1
replace r`wavenum'mcurln = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw`wavenum'==1
replace r`wavenum'mcurln = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																			& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																			& !missing(r`wavenum'iwindy) ///
																			& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
 																			 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
	 																		 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
		 																	 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
			 																 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
				 															 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
					 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																			 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																			 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma6,-1,.) ) ///
																			 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																			 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																			 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																			 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
label variable r`wavenum'mcurln "r`wavenum'mcurln:w`wavenum' r length of current marriage"

**wave spouse length of current marriage
gen s`wavenum'mcurln =.
spouse r`wavenum'mcurln, result(s`wavenum'mcurln) wave(`wavenum')
label variable s`wavenum'mcurln "s`wavenum'mcurln:w`wavenum' s length of current marriage"

*check

***length of longest marriage (including current)***
*generate wave marriage lengths for each loop: 1-7
gen	length1w`wavenum' =.									
replace length1w`wavenum' = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																												& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																												& !missing(r`wavenum'iwindy) ///
																												& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length1w`wavenum' = rpdyr - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdyr,-9,-8,-2,-1,.) & rpdiv==1 & !( ///
										((rpdyr>rpyrma2) ) | ///
										((rpdyr>rpyrma3) ) | ///
										((rpdyr>rpyrma4) ) | ///
										((rpdyr>rpyrma5) ) | ///
										((rpdyr>rpyrma6) ) | ///
										((rpdyr>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length1w`wavenum' = rpdiy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdiy,-9,-8,-2,-1,.) & rpfin==2 & !( ///
										((rpdiy>rpyrma2) ) | ///
										((rpdiy>rpyrma3) ) | ///
										((rpdiy>rpyrma4) ) | ///
										((rpdiy>rpyrma5) ) | ///
										((rpdiy>rpyrma6) ) | ///
										((rpdiy>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length2w`wavenum' =.									
replace length2w`wavenum' = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
																												 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
														 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length2w`wavenum' = rpdyr2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdyr2,-9,-8,-2,-1,.) & rpdiv2==1 & !( ///
										((rpdyr2>rpyrma) ) | ///
										((rpdyr2>rpyrma3) ) | ///
										((rpdyr2>rpyrma4) ) | ///
										((rpdyr2>rpyrma5) ) | ///
										((rpdyr2>rpyrma6) ) | ///
										((rpdyr2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length2w`wavenum' = rpdiy2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdiy2,-9,-8,-2,-1,.) & rpfin2==2 & !( ///
										((rpdiy2>rpyrma) ) | ///
										((rpdiy2>rpyrma3) ) | ///
										((rpdiy2>rpyrma4) ) | ///
										((rpdiy2>rpyrma5) ) | ///
										((rpdiy2>rpyrma6) ) | ///
										((rpdiy2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length3w`wavenum' =.									
replace length3w`wavenum' = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																												 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length3w`wavenum' = rpdyr3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdyr3,-9,-8,-2,-1,.) & rpdiv3==1 & !( ///
										((rpdyr3>rpyrma) ) | ///
										((rpdyr3>rpyrma2) ) | ///
										((rpdyr3>rpyrma4) ) | ///
										((rpdyr3>rpyrma5) ) | ///
										((rpdyr3>rpyrma6) ) | ///
										((rpdyr3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length3w`wavenum' = rpdiy3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdiy3,-9,-8,-2,-1,.) & rpfin3==2 & !( ///
										((rpdiy3>rpyrma) ) | ///
										((rpdiy3>rpyrma2) ) | ///
										((rpdiy3>rpyrma4) ) | ///
										((rpdiy3>rpyrma5) ) | ///
										((rpdiy3>rpyrma6) ) | ///
										((rpdiy3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length4w`wavenum' =.									
replace length4w`wavenum' = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																												 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma6,-1,.) ) ///
																												 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length4w`wavenum' = rpdyr4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdyr4,-9,-8,-2,-1,.) & rpdiv4==1 & !( ///
										((rpdyr4>rpyrma) ) | ///
										((rpdyr4>rpyrma2) ) | ///
										((rpdyr4>rpyrma3) ) | ///
										((rpdyr4>rpyrma5) ) | ///
										((rpdyr4>rpyrma6) ) | ///
										((rpdyr4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length4w`wavenum' = rpdiy4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdiy4,-9,-8,-2,-1,.) & rpfin4==2 & !( ///
										((rpdiy4>rpyrma) ) | ///
										((rpdiy4>rpyrma2) ) | ///
										((rpdiy4>rpyrma3) ) | ///
										((rpdiy4>rpyrma5) ) | ///
										((rpdiy4>rpyrma6) ) | ///
										((rpdiy4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length5w`wavenum' =.									
replace length5w`wavenum' = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																												 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length5w`wavenum' = rpdyr5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdyr5,-9,-8,-2,-1,.) & rpdiv5==1 & !( ///
										((rpdyr5>rpyrma) ) | ///
										((rpdyr5>rpyrma2) ) | ///
										((rpdyr5>rpyrma3) ) | ///
										((rpdyr5>rpyrma4) ) | ///
										((rpdyr5>rpyrma6) ) | ///
										((rpdyr5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length5w`wavenum' = rpdiy5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdiy5,-9,-8,-2,-1,.) & rpfin5==2 & !( ///
										((rpdiy5>rpyrma) ) | ///
										((rpdiy5>rpyrma2) ) | ///
										((rpdiy5>rpyrma3) ) | ///
										((rpdiy5>rpyrma4) ) | ///
										((rpdiy5>rpyrma6) ) | ///
										((rpdiy5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length6w`wavenum' =.									
replace length6w`wavenum' = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																												 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length6w`wavenum' = rpdyr6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdyr6,-9,-8,-2,-1,.) & rpdiv6==1 & !( ///
										((rpdyr6>rpyrma) ) | ///
										((rpdyr6>rpyrma2) ) | ///
										((rpdyr6>rpyrma3) ) | ///
										((rpdyr6>rpyrma4) ) | ///
										((rpdyr6>rpyrma5) ) | ///
										((rpdyr6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length6w`wavenum' = rpdiy6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdiy6,-9,-8,-2,-1,.) & rpfin6==2 & !( ///
										((rpdiy6>rpyrma) ) | ///
										((rpdiy6>rpyrma2) ) | ///
										((rpdiy6>rpyrma3) ) | ///
										((rpdiy6>rpyrma4) ) | ///
										((rpdiy6>rpyrma5) ) | ///
										((rpdiy6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length7w`wavenum' =.									
replace length7w`wavenum' = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																												 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length7w`wavenum' = rpdyr7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdyr7,-9,-8,-2,-1,.) & rpdiv7==1 & !( ///
										((rpdyr7>rpyrma) ) | ///
										((rpdyr7>rpyrma2) ) | ///
										((rpdyr7>rpyrma3) ) | ///
										((rpdyr7>rpyrma4) ) | ///
										((rpdyr7>rpyrma5) ) | ///
										((rpdyr7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length7w`wavenum' = rpdiy7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdiy7,-9,-8,-2,-1,.) & rpfin7==2 & !( ///
										((rpdiy7>rpyrma) ) | ///
										((rpdiy7>rpyrma2) ) | ///
										((rpdiy7>rpyrma3) ) | ///
										((rpdiy7>rpyrma4) ) | ///
										((rpdiy7>rpyrma5) ) | ///
										((rpdiy7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)

*wave respondent length of longest marriage
gen r`wavenum'mlen =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mlen = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mlen = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = max(length1w`wavenum', length2w`wavenum', length3w`wavenum', length4w`wavenum', length5w`wavenum', length6w`wavenum', length7w`wavenum') if !inlist(r`wavenum'mlen,.l,.s,.d,.m,.r)
label variable r`wavenum'mlen "r`wavenum'mlen:w`wavenum' r length of longest marriage"
drop length1w`wavenum'-length7w`wavenum'

**wave spouse length of longest marriage
gen s`wavenum'mlen =.
spouse r`wavenum'mlen, result(s`wavenum'mlen) wave(`wavenum')
label variable s`wavenum'mlen "s`wavenum'mlen:w`wavenum' s length of longest marriage"

*check

***flag for current marital status: without partnership***
*wave 3 respondent current marital status flag
gen r`wavenum'mstatf =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mstatf = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mstatf = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mstatf = 0 if (inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 0) | ( r`wavenum'mstath == 8 & r`wavenum'mnev == 1 )
replace r`wavenum'mstatf = 1 if r`wavenum'mstath == 8 & r`wavenum'mnev == 0 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = 2 if inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 1 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = .m if r`wavenum'mstatf==. & inw`wavenum' == 1
label variable r`wavenum'mstatf "r`wavenum'mstatf:w`wavenum' r mstath-flag diff w/marhist"

**wave 3 spouse current marital status flag
gen s`wavenum'mstatf =.
spouse r`wavenum'mstatf, result(s`wavenum'mstatf) wave(3)
label variable s`wavenum'mstatf "s`wavenum'mstatf:w`wavenum' s mstath-flag diff w/marhist"

*value labels
label values r`wavenum'mstatf mstatf
label values s`wavenum'mstatf mstatf

*check
																				   		 
***place of birth***
*respondent place of birth (update)
missing_w`wavenum' Fqcbthr if missing(rabplace), result(rabplace)
replace rabplace = 1 if Fqcbthr == 1 & missing(rabplace)
replace rabplace = 11 if Fqcbthr == 2 & missing(rabplace)

**wave spouse place of birth
gen s`wavenum'bplace =.
spouse rabplace, result(s`wavenum'bplace) wave(`wavenum')
label variable s`wavenum'bplace "s`wavenum'bplace:w`wavenum' s place of birth"

**value labels
label values s`wavenum'bplace place

*check

***whether born in country of interview***
*respondent whether born in country of interview (update)
missing_w`wavenum' Fqcbthr if missing(rabcountry), result(rabcountry)
replace rabcountry = 0 if Fqcbthr==2 & mi(rabcountry)
replace rabcountry = 1 if Fqcbthr==1 & mi(rabcountry)

*wave 6 spouse whether born in country of interview
gen s`wavenum'bcountry = .
spouse rabcountry, result(s`wavenum'bcountry) wave(`wavenum')
label variable s`wavenum'bcountry "s`wavenum'bcountry:w`wavenum' s born in country of interview"
label values s`wavenum'bcountry bornin

***death date***
*wave 6 respondent death year
replace radyear = .x if EiDateY == . & inw6 == 1
replace radyear = EiDateY if inrange(EiDateY,2000,2020)


*wave 6 spouse death year
gen s6dyear = .
replace s6dyear = .x if EiDateY == . & inw6==1
replace s6dyear = .u if w6spouse==0 & s6idauniq==0
replace s6dyear = .v if w6spouse==1 & s6idauniq==0
bysort h5coupid: replace s6dyear = EiDateY[_n+1] if !missing(h5coupid) & EiDateY[_n+1] !=.
bysort h5coupid: replace s6dyear = EiDateY[_n-1] if !missing(h5coupid) & EiDateY[_n-1] !=.
label variable s6dyear "s6dyear:w6 s death year"

***religion***
**wave 6 respondent religion
*gen rarelig = .
*replace rarelig = .d if screwh == -8 & inw`wavenum' == 1
*replace rarelig = .r if screwh == -9 & inw`wavenum' == 1
*replace rarelig = .m if inlist(screwh,-2,-1) & inw`wavenum' == 1
*replace rarelig = .i if screwh == 86 & inw`wavenum' == 1
*replace rarelig = 1 if screwh == 2 & inw`wavenum' == 1
*replace rarelig = 2 if screwh == 3 & inw`wavenum' == 1
*replace rarelig = 3 if screwh == 4 & inw`wavenum' == 1
*replace rarelig = 4 if screwh == 5 & inw`wavenum' == 1
*replace rarelig = 5 if screwh == 6 & inw`wavenum' == 1
*replace rarelig = 6 if screwh == 7 & inw`wavenum' == 1
*replace rarelig = 7 if screwh == 85 & inw`wavenum' == 1
*replace rarelig = 8 if screwh == 1 & inw`wavenum' == 1
*label variable rarelig "rarelig:r religion"
*label values rarelig religion
*
**wave 6 spouse religion
*gen s`wavenum'relig_e = .
*spouse rarelig_e, result(s`wavenum'relig_e) wave(`wavenum')
*label variable s`wavenum'relig_e "s`wavenum'relig_e:w`wavenum' s religion"
*label values s`wavenum'relig_e religion


***drop ELSA index file raw variables***
drop `demo_w`wavenum'_index'

***drop ELSA previous wave specific core file raw variables***
drop pre_dhr pre_dhr? pre_dhr1? pre_dimar

***drop ELSA wave specific core file raw variables***
drop `demo_w`wavenum'_core'

***drop ELSA wave specific financial derived file raw variables***
drop `demo_w`wavenum'_fina'
 
***drop ELSA wave specific life history data variables***
drop `demo_w`wavenum'_hist'

***drop ELSA wave specific end of life variables***
drop `demo_w`wavenum'_endl'

******************************************************************************************

*set wave number
local wavenum=7
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with index file***
local demo_w`wavenum'_index outindw? mortwave // idahhw7 persno outindw7  outscw7 finstatw7 dobyear sex w7lwgt w7xwgt w7scwt
                     
merge 1:1 idauniq using "$index", keepusing(`demo_w`wavenum'_index') nogen

***merge with previous wave specific core data***
merge 1:1 idauniq using "$wave_6_core", keepusing(DhR DhR? DhR1? DiMar) nogen

*relationship statuses
foreach v of varlist DhR DhR? DhR1? {
	gen pre_`v'=`v'
}
drop DhR DhR? DhR1?

*marriage status
gen pre_dimar=DiMar
drop DiMar

***merge with wave specific core data***
local demo_w7_core perid IaPId DhR DhR? DhR1? hopid askpx hhresp ///
                   iintdaty iintdatm Indobyr indager indsex ///
                   Fqethnr Fqcbthr ///
                   FqMqua FqAQua fqqumdeg fqqumtea fqqumnur fqqumhnc fqqumonc ///
				   fqqumcgf fqqumcga fqqumcgo fqqumale fqqumasl fqqumslc ///
				   fqqumolp fqqumola fqqumold fqqumgca fqqumgcd fqqumcs1 ///
				   fqqumcs2 fqqumcsu fqqumsll fqqumsup fqqummat fqqumnv5 ///
				   fqqumnv4 fqqumnv3 fqqumnv2 fqqumnv1 fqqumtra fqqumcle ///
				   fqqumfor fqqumovo fqqumnvz fqqumnne fqqummil fqqumdip ///
				   fqqumoac fqqumopr fqqum85 fqqum86 ///
                   DiMar DiNMA DiNFA DiANM DiMaD DiANF DiFAD ///
                   mainhh painhh idahhw7 w7indout finstatw7 w7lwgt w7xwgt w7scwt sc* idahhw7 gor 
merge 1:1 idauniq using "$wave_7_core", keepusing(`demo_w7_core') nogen

****merge with wave 7 end of life variables data***
*local demo_w7_endl  EiDateY
*merge 1:1 idauniq using "`wave_6_endl'", keepusing(`demo_w7_endl' idauniq) 
*gen w7endlife = 1 if _merge == 3
*drop _merge

****merge with wave specific financial derived variables data***
local demo_w7_fina coupid 
merge 1:1 idauniq using "$wave_7_fina", keepusing(`demo_w7_fina') nogen

***merge with wave 3 life history data***
local demo_w7_hist rpyrma rpyrma? rpmarst rpmarst? rpdiv rpdiv? rpdyr rpdyr? rpfin rpfin? rpdiy rpdiy? 
merge 1:1 idauniq using "$wave_3_hist", keepusing(`demo_w7_hist') nogen


***person specific identifier***
*wave household id
gen hh`wavenum'hhid =.
replace hh`wavenum'hhid = idahhw7 if idahhw7~= .
label variable hh`wavenum'hhid "wave `wavenum' specific household serial number /num"

*check

gen hh`wavenum'hhidc = string(hh`wavenum'hhid)
label variable hh`wavenum'hhidc "wave `wavenum' specific household serial number /5-char"

*person number
replace pn = perid if !missing(perid)

***wave status: response indicator***
*wave response indicator
gen inw`wavenum' =0
replace inw`wavenum' = 1 if inlist(w7indout,11,13,21,23,24,25)
label variable inw`wavenum' "inw`wavenum': =1 if respondent w`wavenum'"

*value labels
label values inw`wavenum' inw

*check

****self-completion status: response indicator***
**wave self-completion response indicator
gen inw`wavenum'sc =0
replace inw`wavenum'sc = 1 if inrange(w7scwt,0,10)
foreach var of varlist sc* {
		capture confirm numeric variable `var'
		if !_rc {
	    replace inw`wavenum'sc = 1 if inrange(`var',0,9999999999)
	  }
	}
label variable inw`wavenum'sc "inw`wavenum'sc: =1 if respondent w`wavenum' self-completion"

**value labels
label values inw`wavenum'sc inwsc

**check

****create temporary indicator of wave spouse***
gen w`wavenum'spouse=.
replace w`wavenum'spouse = 0 if inw`wavenum'==1
replace w`wavenum'spouse = 1 if inlist(DhR ,1,2) | ///
																inlist(DhR2,1,2) | ///
																inlist(DhR3,1,2) | ///
																inlist(DhR4,1,2) | ///
																inlist(DhR5,1,2) | ///
																inlist(DhR6,1,2) | ///
																inlist(DhR7,1,2) | ///
																inlist(DhR8,1,2) | ///
																inlist(DhR9,1,2) | ///
																inlist(DhR10,1,2) | ///
																inlist(DhR11,1,2) | ///
																inlist(DhR12,1,2) | ///
																inlist(DhR13,1,2) | ///
																inlist(DhR14,1,2) | ///
																inlist(DhR15,1,2) | ///
																inlist(DhR16,1,2)
											
***couple identifier***
*wave couple id
gen h`wavenum'coupid =.
replace h`wavenum'coupid = coupid if !inlist(coupid,.,-10)
label variable h`wavenum'coupid "wave `wavenum' specific couple id number /num"

**check

**wave couple id (character)
gen str5 h`wavenum'coupidc = string(h`wavenum'coupid)
label variable h`wavenum'coupidc "wave `wavenum' specific couple id number /5-char"

***spouse identifier***
*wave spouse id
gen s`wavenum'idauniq =.
bysort coupid: replace s`wavenum'idauniq = 0 if missing(idauniq[_n+1]) & _n==1 & inw`wavenum' ==1
bysort coupid: replace s`wavenum'idauniq = idauniq[_n+1] if !inlist(coupid,.,-10) & idauniq[_n+1]!=.
bysort coupid: replace s`wavenum'idauniq = idauniq[_n-1] if !inlist(coupid,.,-10) & idauniq[_n-1]!=.
label variable s`wavenum'idauniq "s`wavenum'idauniq:w`wavenum' spouse idauniq"

****wave status: interview status***
**wave interview status (no end of life data available yet)
gen r`wavenum'iwstat =.
replace r`wavenum'iwstat = 0 if r`pre_wavenum'iwstat == 0 & mi(w7indout)
replace r`wavenum'iwstat = 1 if inlist(w7indout,11,13,21,23,24,25)
*replace r`wavenum'iwstat = 4 if 
*replace r`wavenum'iwstat = 5 if w7endlife == 1 & !inlist(r`pre_wavenum'iwstat,5,6)
replace r`wavenum'iwstat = 6 if inlist(r`pre_wavenum'iwstat,5,6) & !inlist(w7indout,11,13,21,23,24,25)
replace r`wavenum'iwstat = 7 if inlist(r`pre_wavenum'iwstat,7) & !inlist(w7indout,11,13,21,23,24,25) 
replace r`wavenum'iwstat = 9 if inlist(r`pre_wavenum'iwstat,1,4,9) & !inlist(w7indout,11,13,21,23,24,25) 
label variable r`wavenum'iwstat "r`wavenum'iwstat:w`wavenum' r interview status"

**wave spouse interview status
gen s`wavenum'iwstat =.
spouse r`wavenum'iwstat, result(s`wavenum'iwstat) wave(`wavenum')
label variable s`wavenum'iwstat "s`wavenum'iwstat:w`wavenum' s interview status"

**value labels
label values r`wavenum'iwstat wstat
label values s`wavenum'iwstat wstat

*drop w7endlife

**check 

***sample cohort***
*wave respondent cohort
gen r`wavenum'cohort_e=.
replace r`wavenum'cohort_e = 1 if inlist(finstatw7,1,2,3)
replace r`wavenum'cohort_e = 2 if inlist(finstatw7,5,6,13,21,22,29,38)
replace r`wavenum'cohort_e = 3 if inlist(finstatw7,4)
replace r`wavenum'cohort_e = 4 if inlist(finstatw7,7,8,9)
replace r`wavenum'cohort_e = 5 if inlist(finstatw7,12,20,23,30,39)
replace r`wavenum'cohort_e = 6 if inlist(finstatw7,10)
replace r`wavenum'cohort_e = 7 if inlist(finstatw7,11)
replace r`wavenum'cohort_e = 8 if inlist(finstatw7,14,15,16)
replace r`wavenum'cohort_e = 9 if inlist(finstatw7,19,24,31,40)
replace r`wavenum'cohort_e = 10 if inlist(finstatw7,17)
replace r`wavenum'cohort_e = 11 if inlist(finstatw7,18)
replace r`wavenum'cohort_e = 12 if inlist(finstatw7,25,28) // *update once wave 7 is included in Index file
replace r`wavenum'cohort_e = 13 if inlist(finstatw7,32,41) // *update once wave 7 is included in Index file
replace r`wavenum'cohort_e = 14 if inlist(finstatw7,26) // *update once wave 7 is included in Index file
replace r`wavenum'cohort_e = 15 if inlist(finstatw7,27) // *update once wave 7 is included in Index file
replace r`wavenum'cohort_e = 16 if inlist(finstatw7,33,34,35) // *update once wave 7 is included in Index file
replace r`wavenum'cohort_e = 17 if inlist(finstatw7,42) // *update once wave 7 is included in Index file
replace r`wavenum'cohort_e = 18 if inlist(finstatw7,36) // *update once wave 7 is included in Index file
replace r`wavenum'cohort_e = 19 if inlist(finstatw7,37) // *update once wave 7 is included in Index file

label variable r`wavenum'cohort_e "r`wavenum'cohort_e:w`wavenum' r sample cohort, ELSA specific"

**wave spouse cohort
gen s`wavenum'cohort_e=.
spouse r`wavenum'cohort_e, result(s`wavenum'cohort_e) wave(`wavenum')
label variable s`wavenum'cohort_e "s`wavenum'cohort_e:w`wavenum' s sample cohort, ELSA specific"

*value labels
label values r`wavenum'cohort_e cohort_e
label values s`wavenum'cohort_e cohort_e

*check

***whether eligible for the elsa sample***
**wave spouse eligibility
gen s`wavenum'elsamp =.
spouse raelsamp, result(s`wavenum'elsamp) wave(`wavenum')
label variable s`wavenum'elsamp "s`wavenum'elsamp:ELSA s sample-age eligible/Wave 1 Resp"

**value labels
label values s`wavenum'elsamp elsaamp


***person-level longitudinal weight, core sample***
*wave respondent longitudinal weight
gen r`wavenum'lwtresp =.
replace r`wavenum'lwtresp = w7lwgt
label variable r`wavenum'lwtresp "r`wavenum'lwtresp:w`wavenum' r person-level longitudinal weight, core sample"

**wave spouse longitudinal weight, core
gen s`wavenum'lwtresp =.
spouse r`wavenum'lwtresp, result(s`wavenum'lwtresp) wave(`wavenum')
label variable s`wavenum'lwtresp "s`wavenum'lwtresp:w`wavenum' s person-level longitudinal weight, core sample"

*check

***person-level cross-sectional weight, core sample***
*wave respondent cross-sectional weight, core
gen r`wavenum'cwtresp = 0 if inw`wavenum' == 1
replace r`wavenum'cwtresp = w7xwgt if !mi(w7xwgt)
label variable r`wavenum'cwtresp "r`wavenum'cwtresp:w`wavenum' r person-level cross-sectional weight, core sample"

**wave spouse cross-sectional weight, core
gen s`wavenum'cwtresp =.
spouse r`wavenum'cwtresp, result(s`wavenum'cwtresp) wave(`wavenum')
label variable s`wavenum'cwtresp "s`wavenum'cwtresp:w`wavenum' s person-level cross-sectional weight, core sample"

*check

***person-level weight, self-completion sample***
*wave respondent weight, self-completion sample
gen r`wavenum'scwtresp =.
replace r`wavenum'scwtresp = w7scwt
label variable r`wavenum'scwtresp "r`wavenum'scwtresp:w`wavenum' r person-level weight, self-completion sample"

**wave spouse weight, self-completion
gen s`wavenum'scwtresp =.
spouse r`wavenum'scwtresp, result(s`wavenum'scwtresp) wave(`wavenum')
label variable s`wavenum'scwtresp "s`wavenum'scwtresp:w`wavenum' s person-level weight, self-completion sample"

*check

***spouse identifier***
**respondent number of spouse id's (update)
replace raspct = raspct +1 if s`wavenum'idauniq != s1idauniq & s`wavenum'idauniq != s1idauniq & !inlist(s`wavenum'idauniq,0,.)
replace raspct = 0 if s`wavenum'idauniq == 0 & missing(raspct)
replace raspct = 1 if !inlist(s`wavenum'idauniq,0,.) & missing(raspct)

**check

**respondent first spouse id (update)
replace raspid1 = s`wavenum'idauniq if !inlist(s`wavenum'idauniq,0,.) & missing(raspid1)

**check

**respondent second spouse id (update)
replace raspid2 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.)

**check

**respondent third spouse id (update)
replace raspid3 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.)

**check

**respondent fourth spouse id (update)
replace raspid4 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2  & s`wavenum'idauniq != raspid3 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.) & !inlist(raspid3,0,.)

**check

***sampling weight***
*wave 7 respondent stratification variable
gen r7strat =.
replace r7strat = idahhw7
label variable r7strat "r7strat:w7 hse stratification variable"

*check 

*respondent clustering variable
gen r7clust = ""
replace r7clust = gor
label variable r7clust "r7clust:w7 hse clustering variable"

***number of household respondents***
*wave household number of respondents   
egen hh`wavenum'hhresp = sum(inw`wavenum'==1) if inw`wavenum'==1, by(hh`wavenum'hhid)
label variable hh`wavenum'hhresp "hh`wavenum'hhresp:w`wavenum' # core respondents in hh"

*check

****whether couple household***
**wave household couple indicator
egen h`wavenum'cpl = sum(inw`wavenum'==1), by(coupid)
recode h`wavenum'cpl (0=.) (1=0) (2=1)
label variable h`wavenum'cpl "h`wavenum'cpl:w`wavenum' whether coupled"

**value labels
label values h`wavenum'cpl cpl

**check

***financial, family respondent***
*wave respondent financial respondent indicator
gen r`wavenum'finr =.
replace r`wavenum'finr = 1 if perid == IaPId & !inlist(IaPId,.,-1,-9,-8)
replace r`wavenum'finr = 0 if perid != IaPId & inw`wavenum'==1
label variable r`wavenum'finr "r`wavenum'finr:w`wavenum' r whether financial resp"

**wave spouse financial respondent indicator
gen s`wavenum'finr =.
spouse r`wavenum'finr, result(s`wavenum'finr) wave(`wavenum')
label variable s`wavenum'finr "s`wavenum'finr:w`wavenum' s whether financial resp"

*wave couple financial respondent indicator
gen h`wavenum'anyfin =.
replace h`wavenum'anyfin = 0 if IaPId==-1
replace h`wavenum'anyfin = 1 if !inlist(IaPId,.,-1) & inw`wavenum' ==1
label variable h`wavenum'anyfin "h`wavenum'anyfin:w`wavenum' whether any finr in couple"

*value labels
label values r`wavenum'finr finr
label values s`wavenum'finr finr
label values h`wavenum'anyfin finr

*check 

***household, family respondent***
*wave respondent household respondent indicator
gen r`wavenum'hhr =.
replace r`wavenum'hhr = 1 if perid == hhresp & hhresp != 97 & !mi(hhresp)
replace r`wavenum'hhr = 0 if perid != hhresp & inw`wavenum'==1
label variable r`wavenum'hhr "r`wavenum'hhr:w`wavenum' r whether hh resp"

**wave spouse household respondent indicator
gen s`wavenum'hhr =.
spouse r`wavenum'hhr, result(s`wavenum'hhr) wave(`wavenum')
label variable s`wavenum'hhr "s`wavenum'hhr:w`wavenum' s whether hh resp"

*value labels
label values r`wavenum'hhr hhr
label values s`wavenum'hhr hhr

*check

***housing, family respondent***
*wave respondent housing respondent indicator
gen r`wavenum'hor =.
replace r`wavenum'hor = 1 if perid == hopid & !inlist(hopid,.,-1,-9,-8)
replace r`wavenum'hor = 0 if perid != hopid & inw`wavenum' ==1
label variable r`wavenum'hor "r`wavenum'hor:w`wavenum' r whether housing resp"

**wave spouse housing respondent indicator
gen s`wavenum'hor =.
spouse r`wavenum'hor, result(s`wavenum'hor) wave(`wavenum')
label variable s`wavenum'hor "s`wavenum'hor:w`wavenum' s whether housing resp"

*wave household housing respondent indicator
gen hh`wavenum'anyho =.
replace hh`wavenum'anyho = 0 if hopid==-1
replace hh`wavenum'anyho = 1 if !inlist(hopid,.,-1) & inw`wavenum'==1
label variable hh`wavenum'anyho "hh`wavenum'anyho:w`wavenum' whether any hor in hh"

*value labels
label values r`wavenum'hor   hor
label values s`wavenum'hor   hor
label values hh`wavenum'anyho hor

*check

***whether proxy interview***
*wave respondent proxy indicator
gen r`wavenum'proxy =.
replace r`wavenum'proxy = 1 if askpx ==1
replace r`wavenum'proxy = 0 if askpx ==0
label variable r`wavenum'proxy "r`wavenum'proxy:w`wavenum' r whether proxy interview"

**wave spouse proxy indicator
gen s`wavenum'proxy =.
spouse r`wavenum'proxy, result(s`wavenum'proxy) wave(`wavenum')
label variable s`wavenum'proxy "s`wavenum'proxy:w`wavenum' s whether proxy interview"

*value labels
label values r`wavenum'proxy proxy
label values s`wavenum'proxy proxy

*check

**interview dates***
**wave household interview date
*gen hh`wavenum'iwhh =.
*replace hh`wavenum'iwhh = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2020) & inrange(iintdatm, 1, 12)
*label variable hh`wavenum'iwhh "hh`wavenum'iwhh:w`wavenum' household interview date"
*
**wave household interview date flag
*gen hh`wavenum'iwhhf =.
*replace hh`wavenum'iwhhf = 0 if inrange(iintdaty,2000, 2020) & inrange(iintdatm,1,12)
*replace hh`wavenum'iwhhf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
*replace hh`wavenum'iwhhf = 2 if !inrange(iintdaty,2000, 2020) & inw`wavenum' ==1
*label variable hh`wavenum'iwhhf "hh`wavenum'iwhhf:w`wavenum' household interview date flag"

*wave respondent individual interview date
gen r`wavenum'iwind =.
replace r`wavenum'iwind = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2020) & inrange(iintdatm, 1, 12)
label variable r`wavenum'iwind "r`wavenum'iwind:w`wavenum' r individual interview date"

**wave spouse individual interview date
gen s`wavenum'iwind =.
spouse r`wavenum'iwind, result(s`wavenum'iwind) wave(`wavenum')
label variable s`wavenum'iwind "s`wavenum'iwind:w`wavenum' s individual interview date"

*wave respondent individual interview date flag
gen r`wavenum'iwindf =.
replace r`wavenum'iwindf = 0 if inrange(iintdaty,2000, 2020) & inrange(iintdatm,1,12)
replace r`wavenum'iwindf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
replace r`wavenum'iwindf = 2 if !inrange(iintdaty,2000, 2020) & inw`wavenum' ==1
label variable r`wavenum'iwindf "r`wavenum'iwindf:w`wavenum' r individual interview date flag"

**wave spouse individual interview flag
gen s`wavenum'iwindf =.
spouse r`wavenum'iwindf, result(s`wavenum'iwindf) wave(`wavenum')
label variable s`wavenum'iwindf "s`wavenum'iwindf:w`wavenum' s individual interview date flag"

**wave household interview month
*gen hh`wavenum'iwhhm =.
*replace hh`wavenum'iwhhm = iintdatm if inrange(iintdatm,1,12)
*label variable hh`wavenum'iwhhm "hh`wavenum'iwhhm:w`wavenum' household interview month"
*
**wave household interview year
*gen hh`wavenum'iwhhy =.
*replace hh`wavenum'iwhhy = iintdaty if inrange(iintdaty,2000, 2020)
*label variable hh`wavenum'iwhhy "hh`wavenum'iwhhy:w`wavenum' household interview year"

*wave respondent individual interview month
gen r`wavenum'iwindm =.
replace r`wavenum'iwindm = iintdatm if inrange(iintdatm,1,12)
label variable r`wavenum'iwindm "r`wavenum'iwindm:w`wavenum' r individual interview month"

*wave respondent individual interview year
gen r`wavenum'iwindy =.
replace r`wavenum'iwindy = iintdaty if inrange(iintdaty,2000, 2020)
label variable r`wavenum'iwindy "r`wavenum'iwindy:w`wavenum' r individual interview year"

**wave spouse individual interview year
gen s`wavenum'iwindm =.
spouse r`wavenum'iwindm, result(s`wavenum'iwindm) wave(`wavenum')
label variable s`wavenum'iwindm "s`wavenum'iwindm:w`wavenum' s individual interview month"

**wave spouse individual interview year
gen s`wavenum'iwindy =.
spouse r`wavenum'iwindy, result(s`wavenum'iwindy) wave(`wavenum')
label variable s`wavenum'iwindy "s`wavenum'iwindy:w`wavenum' s individual interview year"

*value labels
*label values hh`wavenum'iwhhf dateflag
label values r`wavenum'iwindf dateflag
label values s`wavenum'iwindf dateflag

*check


***birth date: year***
*respondent birth year (update)
replace rabyear = Indobyr if inrange(Indobyr,1900,2000) & (missing(rabyear) | rafbyear != 0)
replace rabyear = 1924 if Indobyr == -7 & missing(rabyear)

**wave spouse birth year
gen s`wavenum'byear =.
spouse rabyear, result(s`wavenum'byear) wave(`wavenum')
label variable s`wavenum'byear "s`wavenum'byear:w`wavenum' s birth year"

*respondent birth year flag
replace rafbyear = 0 if inrange(Indobyr,1900,2000) & (mi(rafbyear) | rafbyear != 0)
replace rafbyear = 7 if Indobyr == -7 & mi(rafbyear)

**wave spouse birth year flag
gen s`wavenum'fbyear =.
spouse rafbyear, result(s`wavenum'fbyear) wave(`wavenum')
label variable s`wavenum'fbyear "s`wavenum'fbyear:w`wavenum' s flag birth year bottom-coded"
label values s`wavenum'fbyear fbyear

*check 

***age at interview (in years)***
*wave respondent age in years
gen r`wavenum'agey=.
replace r`wavenum'agey = indager if inrange(indager,10,90)
replace r`wavenum'agey = 90 if indager==-7
label variable r`wavenum'agey "r`wavenum'agey:w`wavenum' r age (years) at ivw"

**wave spouse age in years
gen s`wavenum'agey=.
spouse r`wavenum'agey, result(s`wavenum'agey) wave(`wavenum')
label variable s`wavenum'agey "s`wavenum'agey:w`wavenum' s age (years) at ivw"

*wave respondent age in years flag
gen r`wavenum'fagey=.
replace r`wavenum'fagey = 0 if inrange(indager,10,90)
replace r`wavenum'fagey = 1 if indager == -7
label variable r`wavenum'fagey "r`wavenum'fagey:w`wavenum' r flag age at iwv top-coded"
label values r`wavenum'fagey fagey

**wave spouse age in years flag
gen s`wavenum'fagey=.
spouse r`wavenum'fagey, result(s`wavenum'fagey) wave(`wavenum')
label variable s`wavenum'fagey "s`wavenum'fagey:w`wavenum' s flag age at iwv top-coded"
label values s`wavenum'fagey fagey

*check

***gender***
*respondent gender (update)
missing_w`wavenum' indsex if missing(ragender), result(ragender)
replace ragender = 1 if indsex == 1 & missing(ragender)
replace ragender = 2 if indsex == 2 & missing(ragender)

**wave spouse gender
gen s`wavenum'gender =.
spouse ragender, result(s`wavenum'gender) wave(`wavenum')
label variable s`wavenum'gender "s`wavenum'gender:w`wavenum' s gender"

*respondent gender flag (update)
replace rafgendr = 0 if ( (ragender == 1 & indsex == 1) | (ragender == 2 & indsex == 2) ) & rafgendr!=1
replace rafgendr = 1 if (ragender == 1 & indsex == 2) | (ragender == 2 & indsex == 1)

**wave spouse gender flag
gen s`wavenum'fgendr = .
spouse rafgendr, result(s`wavenum'fgendr) wave(`wavenum')
label variable s`wavenum'fgendr "s`wavenum'fgendr:w`wavenum' flag if problem with s gender"

**value labels
label values s`wavenum'gender gender
label values s`wavenum'fgendr genderflag

*check

***race, ethnicity: race***
*respondent race (update)
missing_w`wavenum' Fqethnr if missing(raracem), result(raracem)
replace raracem = 1 if Fqethnr == 1 & missing(raracem)
replace raracem = 4 if Fqethnr == 2 & missing(raracem)

**wave spouse race
gen s`wavenum'racem =.
spouse raracem, result(s`wavenum'racem) wave(`wavenum')
label variable s`wavenum'racem "s`wavenum'racem:w`wavenum' s race - masked"

*respondent race flag (update)
replace raracef = 0 if ( (raracem == 1 & Fqethnr == 1) | (raracem == 4 & Fqethnr == 2) ) & raracef!=1
replace raracef = 1 if (raracem == 1 & Fqethnr == 2) | (raracem == 4 & Fqethnr == 1)

**wave spouse race flag
gen s`wavenum'racef =.
spouse raracef, result(s`wavenum'racef) wave(`wavenum')
label variable s`wavenum'racef "s`wavenum'racef:w`wavenum' flag if problem with s race"

**value labels
label values s`wavenum'racem race
label values s`wavenum'racef raceflag

*check


***education: categorical summary***
*respondent education categorically (update)
replace raeduc_e = 5 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 4 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumhnc == 1 | ///
														fqqumonc == 1 | ///
														fqqumcgf == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 3 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumnv2 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 1 if ((FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumcs1 == 1 | ///
														fqqumcs2 == 1 | ///
														fqqumcsu == 1 | ///
														fqqumsll == 1 | ///
														fqqumsup == 1 | ///
														fqqummat == 1 | ///
														fqqumnv1 == 1 ) | FqAQua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))& (mi(raeduc_e) & raeduc_e != .o)
missing_w`wavenum' FqMqua ///
           FqAQua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeduc_e) & raeduc_e != .o), result(raeduc_e)										 														
replace raeduc_e = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & missing(raeduc_e) & !inlist(raeduc_e,.o,.r,.d)
replace raeduc_e = .o if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
														
																																										
**wave spouse education categorically
gen s`wavenum'educ_e =.
spouse raeduc_e, result(s`wavenum'educ_e) wave(`wavenum')
label variable s`wavenum'educ_e "s`wavenum'educ_e:w`wavenum' s education (categ)"
label values s`wavenum'educ_e educcats

*check

***education: isced category***
*wave 7 respondent education isced category (update)
replace raedisced = .n if (FqAQua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))& (mi(raedisced) & !inlist(raedisced,.n,.o))		
replace raedisced = 5 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))			
replace raedisced = 4 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))			
replace raedisced = 3 if (FqMqua == 1 | FqAQua == 1) & ( ///
													 fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raedisced) & !inlist(raedisced,.n,.o))																								
	
missing_w`wavenum' FqMqua ///
           FqAQua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raedisced) & !inlist(raedisced,.n,.o)), result(raedisced)
replace raedisced = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & mi(raedisced) & !inlist(raedisced,.n,.o,.r,.d)							 
replace raedisced = .o if ((FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raedisced) & !inlist(raedisced,.n,.o))															 
																			 																											
*wave 7 spouse education isced category
gen s`wavenum'edisced =.
spouse raedisced, result(s`wavenum'edisced) wave(`wavenum')
label variable s`wavenum'edisced "s`wavenum'edisced:w`wavenum' s education isced"
label values s`wavenum'edisced educisced 

***education: harmonized education category***
*wave 7 respondent education harmonized category (update)
replace raeducl = 3 if (FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = 2 if (FqMqua == 1 | FqAQua == 1) & ( ///
													 fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 | ///
													  fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raeducl) & !inlist(raeducl,.o))											
replace raeducl = 1 if (FqAQua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))  & (mi(raeducl) & !inlist(raeducl,.o))
missing_w`wavenum' FqMqua ///
           FqAQua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeducl) & !inlist(raeducl,.o)), result(raeducl)
replace raeducl = .o if ((FqMqua == 1 | FqAQua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & mi(raeducl) & !inlist(raeducl,.o,.r,.d)
label variable raeducl "raeducl:R harmonized education"
label values raeducl educharm

*wave 7 spouse education harmonized category
gen s7educl = .
spouse raeducl, result(s7educl) wave(7)
label variable s7educl "s7educl:w7 S harmonized education"
label values s7educl educharm

***current marital status: with implied partnerships***
*wave respondent marital status with partnership
gen r`wavenum'mstat=.
missing_w`wavenum' DiMar, result(r`wavenum'mstat)
replace r`wavenum'mstat = 1 if inlist(DiMar, 2,3,4,11)
replace r`wavenum'mstat = 4 if inlist(DiMar, 5, 8)
replace r`wavenum'mstat = 5 if inlist(DiMar, 6, 9)
replace r`wavenum'mstat = 7 if inlist(DiMar, 7, 10)
replace r`wavenum'mstat = 8 if DiMar == 1
replace r`wavenum'mstat = 3 if (inlist(DiMar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.)) 
label variable r`wavenum'mstat "r`wavenum'mstat:w`wavenum' r marital status w/partners, filled"

**wave spouse marital status with implied partnership
gen s`wavenum'mstat=.
spouse r`wavenum'mstat, result(s`wavenum'mstat) wave(`wavenum')
label variable s`wavenum'mstat "s`wavenum'mstat:w`wavenum' s marital status w/partners, filled"

*value labels
label values r`wavenum'mstat marwpart
label values s`wavenum'mstat marwpart

*check

****current marital status: current implied partnership status***
**wave respondent implied partnership status
gen r`wavenum'mpart =.
missing_w`wavenum' DiMar, result(r`wavenum'mpart)
replace r`wavenum'mpart = 0 if inw`wavenum'==1
replace r`wavenum'mpart = 1 if inlist(DiMar, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.)
label variable r`wavenum'mpart "r`wavenum'mpart:w`wavenum' r implied partnership status"

**wave spouse partnership status
gen s`wavenum'mpart =.
spouse r`wavenum'mpart, result(s`wavenum'mpart) wave(`wavenum')
label variable s`wavenum'mpart "s`wavenum'mpart:w`wavenum' s implied partnership status"

**value labels
label values r`wavenum'mpart part
label values s`wavenum'mpart part

**check

***current marital status: without implied partnerships***
*wave respondent marital status without implied partnership
gen r`wavenum'mstath =.
missing_w`wavenum' DiMar, result(r`wavenum'mstath)
replace r`wavenum'mstath = 1 if inlist(DiMar, 2,3,4,11)
replace r`wavenum'mstath = 4 if inlist(DiMar, 5, 8)
replace r`wavenum'mstath = 5 if inlist(DiMar, 6, 9)
replace r`wavenum'mstath = 7 if inlist(DiMar, 7, 10)
replace r`wavenum'mstath = 8 if DiMar == 1
label variable r`wavenum'mstath "r`wavenum'mstath:w`wavenum' r marital status"

**wave spouse marital status without implied partnership
gen s`wavenum'mstath =.
spouse r`wavenum'mstath, result(s`wavenum'mstath) wave(`wavenum')
label variable s`wavenum'mstath "s`wavenum'mstath:w`wavenum' s marital status"

*value labels
label values r`wavenum'mstath marwopart
label values s`wavenum'mstath marwopart

*check

***number of marriages***
*married but missing last wave's husband/wife (temp)
tempvar w`pre_wavenum'mishw
gen `w`pre_wavenum'mishw'=.
replace `w`pre_wavenum'mishw' = 0 if inw`pre_wavenum'==1
foreach v of varlist pre_DhR pre_DhR? pre_DhR1? {
	replace `w`pre_wavenum'mishw' = 1 if `v'==1 & inlist(pre_dimar,2,4)
}
replace `w`pre_wavenum'mishw' = 2 if `w`pre_wavenum'mishw'==0 & inlist(pre_dimar,2,4)
recode `w`pre_wavenum'mishw' (1=0) (2=1)

*wave respondent number of marriages
gen r`wavenum'mrct =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mrct = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mrct = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mrct)
missing_w`wavenum' DiMar, result(r`wavenum'mrct)
missing_H r`pre_wavenum'mrct, result(r`wavenum'mrct)
replace r`wavenum'mrct = r`pre_wavenum'mrct if !mi(r`pre_wavenum'mrct) & inw`wavenum'==1
replace r`wavenum'mrct = r`wavenum'mrct + 1 if ( (( (pre_DhR!=1 & DhR==1) | ///
																					   		 (pre_DhR2!=1 & DhR2==1) | ///
																					   		 (pre_DhR3!=1 & DhR3==1) | ///
																					   		 (pre_DhR4!=1 & DhR4==1) | ///
																					   		 (pre_DhR5!=1 & DhR5==1) | ///
																					   		 (pre_DhR6!=1 & DhR6==1) | ///
																					   		 (pre_DhR7!=1 & DhR7==1) | ///
																					   		 (pre_DhR8!=1 & DhR8==1) | ///
																					   		 (pre_DhR9!=1 & DhR9==1) | ///
																					   		 (pre_DhR10!=1 & DhR10==1) | ///
																					   		 (pre_DhR11!=1 & DhR11==1) | ///
																					   		 (pre_DhR12!=1 & DhR12==1) | ///
																					   		 (pre_DhR13!=1 & DhR13==1) | ///
																					   		 (pre_DhR14!=1 & DhR14==1) | ///
																					   		 (pre_DhR15!=1 & DhR15==1) | ///
																					   		 (pre_DhR16!=1 & DhR16==1) ) & `w`pre_wavenum'mishw'!=1 & inlist(DiMar,2,4) ) | ///
																					   		 (inlist(pre_dimar,1,3,5,6,7,8,9,10,11) & inlist(DiMar,2,4)) | ///
																					   		 (pre_dimar==2 & DiMar==4) ) & ///
																					   		 !mi(r`wavenum'mrct) & inw`wavenum'==1
label variable r`wavenum'mrct "r`wavenum'mrct:w`wavenum' r # marriages"

**wave spouse number of marriages
gen s`wavenum'mrct =.
spouse r`wavenum'mrct, result(s`wavenum'mrct) wave(`wavenum')
label variable s`wavenum'mrct "s`wavenum'mrct:w`wavenum' s # marriages"

*check

***marital history: never married***
*wave respondent never married indicator
gen r`wavenum'mnev =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mnev = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mnev = .l if rpmarst==. & inw`wavenum'==1
missing_w`wavenum' DiMar, result(r`wavenum'mnev)
missing_H r`pre_wavenum'mnev, result(r`wavenum'mnev)
replace r`wavenum'mnev = 0 if (r`pre_wavenum'mnev == 0 | inlist(DiMar,2,4,5,6,7)) & inw`wavenum'==1
replace r`wavenum'mnev = 1 if r`pre_wavenum'mnev==1 & inlist(DiMar,1,3,8,9,10,11)
label variable r`wavenum'mnev "r`wavenum'mnev:w`wavenum' r never married"

**wave spouse never married indicator
gen s`wavenum'mnev =.
spouse r`wavenum'mnev, result(s`wavenum'mnev) wave(`wavenum')
label variable s`wavenum'mnev "s`wavenum'mnev:w`wavenum' s never married"

*value labels
label values r`wavenum'mnev mnev
label values s`wavenum'mnev mnev

*check

***marital history: # times divorced***
*wave respondent number of times divorced
gen r`wavenum'mdiv =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mdiv = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mdiv = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mdiv)
missing_w`wavenum' DiMar, result(r`wavenum'mdiv)
missing_H r`pre_wavenum'mdiv, result(r`wavenum'mdiv)
replace r`wavenum'mdiv = r`pre_wavenum'mdiv if !mi(r`pre_wavenum'mdiv) & inw`wavenum'==1
replace r`wavenum'mdiv = r`wavenum'mdiv + 1 if ( (( (pre_DhR==1 & DhR!=1) | ///
																					   		 (pre_DhR2==1 & DhR2!=1) | ///
																					   		 (pre_DhR3==1 & DhR3!=1) | ///
																					   		 (pre_DhR4==1 & DhR4!=1) | ///
																					   		 (pre_DhR5==1 & DhR5!=1) | ///
																					   		 (pre_DhR6==1 & DhR6!=1) | ///
																					   		 (pre_DhR7==1 & DhR7!=1) | ///
																					   		 (pre_DhR8==1 & DhR8!=1) | ///
																					   		 (pre_DhR9==1 & DhR9!=1) | ///
																					   		 (pre_DhR10==1 & DhR10!=1) | ///
																					   		 (pre_DhR11==1 & DhR11!=1) | ///
																					   		 (pre_DhR12==1 & DhR12!=1) ) & inlist(pre_dimar,2,4) & DiMar==6 ) | ///
																					   		 (inlist(pre_dimar,2,4) & DiMar==6) ) & ///
																					   		 !mi(r`wavenum'mdiv) & inw`wavenum'==1
label variable r`wavenum'mdiv "r`wavenum'mdiv:w`wavenum' r # times divorced"

**wave spouse number of times divorced
gen s`wavenum'mdiv =.
spouse r`wavenum'mdiv, result(s`wavenum'mdiv) wave(`wavenum')
label variable s`wavenum'mdiv "s`wavenum'mdiv:w`wavenum' s # times divorced"

*check

***marital history: # times widowed***
*wave respondent number of times widowed
gen r`wavenum'mwid =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mwid = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mwid = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mwid)
missing_w`wavenum' DiMar, result(r`wavenum'mwid)
missing_H r`pre_wavenum'mwid, result(r`wavenum'mwid)
replace r`wavenum'mwid = r`pre_wavenum'mwid if !mi(r`pre_wavenum'mwid) & inw`wavenum'==1
replace r`wavenum'mwid = r`wavenum'mwid + 1 if ( (( (pre_DhR==1 & DhR!=1) | ///
																					   		 (pre_DhR2==1 & DhR2!=1) | ///
																					   		 (pre_DhR3==1 & DhR3!=1) | ///
																					   		 (pre_DhR4==1 & DhR4!=1) | ///
																					   		 (pre_DhR5==1 & DhR5!=1) | ///
																					   		 (pre_DhR6==1 & DhR6!=1) | ///
																					   		 (pre_DhR7==1 & DhR7!=1) | ///
																					   		 (pre_DhR8==1 & DhR8!=1) | ///
																					   		 (pre_DhR9==1 & DhR9!=1) | ///
																					   		 (pre_DhR10==1 & DhR10!=1) | ///
																					   		 (pre_DhR11==1 & DhR11!=1) | ///
																					   		 (pre_DhR12==1 & DhR12!=1) ) & inlist(pre_dimar,2,4) & DiMar==7 ) | ///
																					   		 (inlist(pre_dimar,2,4) & DiMar==7) ) & ///
																					   		 !mi(r`wavenum'mwid) & inw`wavenum'==1
label variable r`wavenum'mwid "r`wavenum'mwid:w`wavenum' r # times widowed"

**wave spouse number of times widowed
gen s`wavenum'mwid =.
spouse r`wavenum'mwid, result(s`wavenum'mwid) wave(`wavenum')
label variable s`wavenum'mwid "s`wavenum'mwid:w`wavenum' s # times widowed"

*check

***marital history: #times don't know how marriage ended***
*different husband/wife from last wave (temp)
tempvar w`wavenum'diffhw
gen `w`wavenum'diffhw'=.
replace `w`wavenum'diffhw' = 0 if inw`wavenum'==1
forvalues p=1/12 {
	if "`p'"=="1" local p_
	else local p_ `p'
	local lp = `p'-1
	local np = `p'+1
	forvalues r=1/`lp' {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_DhR`p_' == 1 & DhR`r_' == 1
	}
	forvalues r=`np'/16 {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_DhR`p_' == 1 & DhR`r_' == 1
	}
}

*wave respondent number of times dk marriage end
gen r`wavenum'mend =.	
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mend = .b if inw`w'!=1 & inw`wavenum'==1
}															   		 
replace r`wavenum'mend = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_dimar, result(r`wavenum'mend)
missing_w`wavenum' DiMar, result(r`wavenum'mend)
missing_H r`pre_wavenum'mend, result(r`wavenum'mend)
replace r`wavenum'mend = r`pre_wavenum'mend if !mi(r`pre_wavenum'mend) & inw`wavenum'==1
replace r`wavenum'mend = r`wavenum'mend + 1 if ( (( (pre_DhR==1 & DhR!=1) | ///
																					   		 (pre_DhR2==1 & DhR2!=1) | ///
																					   		 (pre_DhR3==1 & DhR3!=1) | ///
																					   		 (pre_DhR4==1 & DhR4!=1) | ///
																					   		 (pre_DhR5==1 & DhR5!=1) | ///
																					   		 (pre_DhR6==1 & DhR6!=1) | ///
																					   		 (pre_DhR7==1 & DhR7!=1) | ///
																					   		 (pre_DhR8==1 & DhR8!=1) | ///
																					   		 (pre_DhR9==1 & DhR9!=1) | ///
																					   		 (pre_DhR10==1 & DhR10!=1) | ///
																					   		 (pre_DhR11==1 & DhR11!=1) | ///
																					   		 (pre_DhR12==1 & DhR12!=1) ) & inlist(pre_dimar,2,4) & inlist(DiMar,1,3,8,9,10,11) ) | ///
																					   		 (inlist(pre_dimar,2,4) & inlist(DiMar,1,3,8,9,10,11)) | ///
																					   		 (`w`wavenum'diffhw'==1 & inlist(pre_dimar,2,4) & inlist(DiMar,2,4)) ) & ///
																					   		 !mi(r`wavenum'mend) & inw`wavenum'==1
label variable r`wavenum'mend "r`wavenum'mend:w`wavenum' r # times unknown end marriage"

**wave spouse number of times dk marriage end
gen s`wavenum'mend =.
spouse r`wavenum'mend, result(s`wavenum'mend) wave(`wavenum')
label variable s`wavenum'mend "s`wavenum'mend:w`wavenum' s # times unknown end marriage"

*check

***length of current marriage***
*consistent husband/wife
gen w`wavenum'conhw=.
replace w`wavenum'conhw=0 if inw`wavenum'==1
replace w`wavenum'conhw=1 if inlist(pre_dimar,2,4) & inlist(DiMar,2,4) & `w`wavenum'diffhw'!=1 // for wave 5 change conditions to include w`wavenum'conhw==1
	
*wave respondent length of current marriage
gen r`wavenum'mcurln =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mcurln = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mcurln = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mcurln = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw`wavenum'==1
replace r`wavenum'mcurln = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw`wavenum'==1
replace r`wavenum'mcurln = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																			& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																			& !missing(r`wavenum'iwindy) ///
																			& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
 																			 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
	 																		 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
		 																	 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
			 																 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
				 															 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
					 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																			 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																			 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma6,-1,.) ) ///
																			 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																			 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																			 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																			 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
label variable r`wavenum'mcurln "r`wavenum'mcurln:w`wavenum' r length of current marriage"

**wave spouse length of current marriage
gen s`wavenum'mcurln =.
spouse r`wavenum'mcurln, result(s`wavenum'mcurln) wave(`wavenum')
label variable s`wavenum'mcurln "s`wavenum'mcurln:w`wavenum' s length of current marriage"

*check

***length of longest marriage (including current)***
*generate wave marriage lengths for each loop: 1-7
gen	length1w`wavenum' =.									
replace length1w`wavenum' = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																												& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																												& !missing(r`wavenum'iwindy) ///
																												& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length1w`wavenum' = rpdyr - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdyr,-9,-8,-2,-1,.) & rpdiv==1 & !( ///
										((rpdyr>rpyrma2) ) | ///
										((rpdyr>rpyrma3) ) | ///
										((rpdyr>rpyrma4) ) | ///
										((rpdyr>rpyrma5) ) | ///
										((rpdyr>rpyrma6) ) | ///
										((rpdyr>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length1w`wavenum' = rpdiy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdiy,-9,-8,-2,-1,.) & rpfin==2 & !( ///
										((rpdiy>rpyrma2) ) | ///
										((rpdiy>rpyrma3) ) | ///
										((rpdiy>rpyrma4) ) | ///
										((rpdiy>rpyrma5) ) | ///
										((rpdiy>rpyrma6) ) | ///
										((rpdiy>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length2w`wavenum' =.									
replace length2w`wavenum' = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
																												 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
														 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length2w`wavenum' = rpdyr2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdyr2,-9,-8,-2,-1,.) & rpdiv2==1 & !( ///
										((rpdyr2>rpyrma) ) | ///
										((rpdyr2>rpyrma3) ) | ///
										((rpdyr2>rpyrma4) ) | ///
										((rpdyr2>rpyrma5) ) | ///
										((rpdyr2>rpyrma6) ) | ///
										((rpdyr2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length2w`wavenum' = rpdiy2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdiy2,-9,-8,-2,-1,.) & rpfin2==2 & !( ///
										((rpdiy2>rpyrma) ) | ///
										((rpdiy2>rpyrma3) ) | ///
										((rpdiy2>rpyrma4) ) | ///
										((rpdiy2>rpyrma5) ) | ///
										((rpdiy2>rpyrma6) ) | ///
										((rpdiy2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length3w`wavenum' =.									
replace length3w`wavenum' = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																												 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length3w`wavenum' = rpdyr3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdyr3,-9,-8,-2,-1,.) & rpdiv3==1 & !( ///
										((rpdyr3>rpyrma) ) | ///
										((rpdyr3>rpyrma2) ) | ///
										((rpdyr3>rpyrma4) ) | ///
										((rpdyr3>rpyrma5) ) | ///
										((rpdyr3>rpyrma6) ) | ///
										((rpdyr3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length3w`wavenum' = rpdiy3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdiy3,-9,-8,-2,-1,.) & rpfin3==2 & !( ///
										((rpdiy3>rpyrma) ) | ///
										((rpdiy3>rpyrma2) ) | ///
										((rpdiy3>rpyrma4) ) | ///
										((rpdiy3>rpyrma5) ) | ///
										((rpdiy3>rpyrma6) ) | ///
										((rpdiy3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length4w`wavenum' =.									
replace length4w`wavenum' = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																												 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma5,-1,.) ) /// Corrected by MV
																												 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma6,-1,.) ) /// Corrected by MV
																												 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma7,-1,.) ) /// Corrected by MV
																												 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length4w`wavenum' = rpdyr4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdyr4,-9,-8,-2,-1,.) & rpdiv4==1 & !( ///
										((rpdyr4>rpyrma) ) | ///
										((rpdyr4>rpyrma2) ) | ///
										((rpdyr4>rpyrma3) ) | ///
										((rpdyr4>rpyrma5) ) | ///
										((rpdyr4>rpyrma6) ) | ///
										((rpdyr4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length4w`wavenum' = rpdiy4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdiy4,-9,-8,-2,-1,.) & rpfin4==2 & !( ///
										((rpdiy4>rpyrma) ) | ///
										((rpdiy4>rpyrma2) ) | ///
										((rpdiy4>rpyrma3) ) | ///
										((rpdiy4>rpyrma5) ) | ///
										((rpdiy4>rpyrma6) ) | ///
										((rpdiy4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length5w`wavenum' =.									
replace length5w`wavenum' = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																												 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length5w`wavenum' = rpdyr5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdyr5,-9,-8,-2,-1,.) & rpdiv5==1 & !( ///
										((rpdyr5>rpyrma) ) | ///
										((rpdyr5>rpyrma2) ) | ///
										((rpdyr5>rpyrma3) ) | ///
										((rpdyr5>rpyrma4) ) | ///
										((rpdyr5>rpyrma6) ) | ///
										((rpdyr5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length5w`wavenum' = rpdiy5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdiy5,-9,-8,-2,-1,.) & rpfin5==2 & !( ///
										((rpdiy5>rpyrma) ) | ///
										((rpdiy5>rpyrma2) ) | ///
										((rpdiy5>rpyrma3) ) | ///
										((rpdiy5>rpyrma4) ) | ///
										((rpdiy5>rpyrma6) ) | ///
										((rpdiy5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length6w`wavenum' =.									
replace length6w`wavenum' = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																												 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma7) | inlist(rpyrma7,-1,.) ) /// Corrected by MV, was ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) )
																												 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length6w`wavenum' = rpdyr6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdyr6,-9,-8,-2,-1,.) & rpdiv6==1 & !( ///
										((rpdyr6>rpyrma) ) | ///
										((rpdyr6>rpyrma2) ) | ///
										((rpdyr6>rpyrma3) ) | ///
										((rpdyr6>rpyrma4) ) | ///
										((rpdyr6>rpyrma5) ) | ///
										((rpdyr6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length6w`wavenum' = rpdiy6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdiy6,-9,-8,-2,-1,.) & rpfin6==2 & !( ///
										((rpdiy6>rpyrma) ) | ///
										((rpdiy6>rpyrma2) ) | ///
										((rpdiy6>rpyrma3) ) | ///
										((rpdiy6>rpyrma4) ) | ///
										((rpdiy6>rpyrma5) ) | ///
										((rpdiy6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length7w`wavenum' =.									
replace length7w`wavenum' = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																												 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma6) | inlist(rpyrma6,-1,.) ) /// Correcter by MV, was ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) )
																												 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length7w`wavenum' = rpdyr7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdyr7,-9,-8,-2,-1,.) & rpdiv7==1 & !( ///
										((rpdyr7>rpyrma) ) | ///
										((rpdyr7>rpyrma2) ) | ///
										((rpdyr7>rpyrma3) ) | ///
										((rpdyr7>rpyrma4) ) | ///
										((rpdyr7>rpyrma5) ) | ///
										((rpdyr7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length7w`wavenum' = rpdiy7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdiy7,-9,-8,-2,-1,.) & rpfin7==2 & !( ///
										((rpdiy7>rpyrma) ) | ///
										((rpdiy7>rpyrma2) ) | ///
										((rpdiy7>rpyrma3) ) | ///
										((rpdiy7>rpyrma4) ) | ///
										((rpdiy7>rpyrma5) ) | ///
										((rpdiy7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)

*wave respondent length of longest marriage
gen r`wavenum'mlen =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mlen = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mlen = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8) & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = max(length1w`wavenum', length2w`wavenum', length3w`wavenum', length4w`wavenum', length5w`wavenum', length6w`wavenum', length7w`wavenum') if !inlist(r`wavenum'mlen,.l,.s,.d,.m,.r)
label variable r`wavenum'mlen "r`wavenum'mlen:w`wavenum' r length of longest marriage"
drop length1w`wavenum'-length7w`wavenum'

**wave spouse length of longest marriage
gen s`wavenum'mlen =.
spouse r`wavenum'mlen, result(s`wavenum'mlen) wave(`wavenum')
label variable s`wavenum'mlen "s`wavenum'mlen:w`wavenum' s length of longest marriage"

*check

***flag for current marital status: without partnership***
*wave 3 respondent current marital status flag
gen r`wavenum'mstatf =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mstatf = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mstatf = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mstatf = 0 if (inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 0) | ( r`wavenum'mstath == 8 & r`wavenum'mnev == 1 )
replace r`wavenum'mstatf = 1 if r`wavenum'mstath == 8 & r`wavenum'mnev == 0 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = 2 if inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 1 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = .m if r`wavenum'mstatf==. & inw`wavenum' == 1
label variable r`wavenum'mstatf "r`wavenum'mstatf:w`wavenum' r mstath-flag diff w/marhist"

**wave 3 spouse current marital status flag
gen s`wavenum'mstatf =.
spouse r`wavenum'mstatf, result(s`wavenum'mstatf) wave(3)
label variable s`wavenum'mstatf "s`wavenum'mstatf:w`wavenum' s mstath-flag diff w/marhist"

*value labels
label values r`wavenum'mstatf mstatf
label values s`wavenum'mstatf mstatf

*check
																				   		 
***place of birth***
*respondent place of birth (update)
missing_w`wavenum' Fqcbthr if missing(rabplace), result(rabplace)
replace rabplace = 1 if Fqcbthr == 1 & missing(rabplace)
replace rabplace = 11 if Fqcbthr == 2 & missing(rabplace)

**wave spouse place of birth
gen s`wavenum'bplace =.
spouse rabplace, result(s`wavenum'bplace) wave(`wavenum')
label variable s`wavenum'bplace "s`wavenum'bplace:w`wavenum' s place of birth"

**value labels
label values s`wavenum'bplace place

*check

***whether born in country of interview***
*respondent whether born in country of interview (update)
missing_w`wavenum' Fqcbthr if missing(rabcountry), result(rabcountry)
replace rabcountry = 0 if Fqcbthr==2 & mi(rabcountry)
replace rabcountry = 1 if Fqcbthr==1 & mi(rabcountry)

*wave 7 spouse whether born in country of interview
gen s`wavenum'bcountry = .
spouse rabcountry, result(s`wavenum'bcountry) wave(`wavenum')
label variable s`wavenum'bcountry "s`wavenum'bcountry:w`wavenum' s born in country of interview"
label values s`wavenum'bcountry bornin


*check 

***death date***
*wave 7 respondent death year
replace radyear = .x if inw7 == 1
*replace radyear = EiDateY if inrange(EiDateY,2000,2020)

*wave 7 spouse death year
gen s7dyear = .
spouse radyear, result(s7dyear) wave(`wavenum')
label variable s7dyear "s7dyear:w7 s death year"

***religion***
**wave 7 respondent religion
*gen rarelig = .
*replace rarelig = .d if screwh == -8 & inw`wavenum' == 1
*replace rarelig = .r if screwh == -9 & inw`wavenum' == 1
*replace rarelig = .m if inlist(screwh,-2,-1) & inw`wavenum' == 1
*replace rarelig = .i if screwh == 86 & inw`wavenum' == 1
*replace rarelig = 1 if screwh == 2 & inw`wavenum' == 1
*replace rarelig = 2 if screwh == 3 & inw`wavenum' == 1
*replace rarelig = 3 if screwh == 4 & inw`wavenum' == 1
*replace rarelig = 4 if screwh == 5 & inw`wavenum' == 1
*replace rarelig = 5 if screwh == 6 & inw`wavenum' == 1
*replace rarelig = 6 if screwh == 7 & inw`wavenum' == 1
*replace rarelig = 7 if screwh == 85 & inw`wavenum' == 1
*replace rarelig = 8 if screwh == 1 & inw`wavenum' == 1
*label variable rarelig "rarelig:r religion"
*label values rarelig religion
*
**wave 7 spouse religion
*gen s`wavenum'relig_e = .
*spouse rarelig_e, result(s`wavenum'relig_e) wave(`wavenum')
*label variable s`wavenum'relig_e "s`wavenum'relig_e:w`wavenum' s religion"
*label values s`wavenum'relig_e religion


***drop ELSA index file raw variables***
drop `demo_w`wavenum'_index'

***drop ELSA previous wave specific core file raw variables***
drop pre_DhR pre_DhR? pre_DhR1? pre_dimar

***drop ELSA wave specific core file raw variables***
drop `demo_w`wavenum'_core'

***drop ELSA wave specific financial derived file raw variables***
drop `demo_w`wavenum'_fina'
 
***drop ELSA wave specific life history data variables***
drop `demo_w`wavenum'_hist'

******************************************************************************************

*set wave number
local wavenum=8
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with index file***
local demo_w`wavenum'_index outindw? mortwave // idahhw8 persno outindw8  outscw8 finstat dobyear sex w8w1lwgt w8xwgt w8scwt
                     
merge 1:1 idauniq using "$index", keepusing(`demo_w`wavenum'_index') nogen

***merge with previous wave specific core data***
merge 1:1 idauniq using "$wave_7_core", keepusing(DhR DhR? DhR1? DiMar) nogen

*relationship statuses
foreach v of varlist DhR DhR? DhR1? {
	gen pre_`v'=`v'
}
drop DhR DhR? DhR1?

*marriage status
gen pre_DiMar=DiMar
drop DiMar

***merge with wave specific core data***
local demo_w8_core perid iapid dhr dhr? dhr1? hopid askpx hhresp ///
                   iintdaty iintdatm indobyr indager indsex ///
                   fqmqua fqaqua fqqumdeg fqqumtea fqqumnur fqqumhnc fqqumonc ///
				   				 fqqumcgf fqqumcga fqqumcgo fqqumale fqqumasl fqqumslc ///
				   				 fqqumolp fqqumola fqqumold fqqumgca fqqumgcd  fqqumcs1 /// fqqumgcd - variable not part of wave 8 educ variables, use FQQUGCD instead
				   				 fqqumcs2 fqqumcsu fqqumsll fqqumsup fqqummat fqqumnv5 /// 
				   				 fqqumnv4 fqqumnv3 fqqumnv2 fqqumnv1 fqqumtra fqqumcle /// fqqumnv2 - variable not a part of wave 8 set, use FQQUMSNV2 instead; fqqumtra - use FQQUMMTRA instead
				   				 fqqumfor fqqumovo fqqumnvz fqqumnne fqqummil fqqumdip /// fqqumnvz - use FQQUMNUZ instead? fqqumfor - use FQQUMOR instead? 
				   				 fqqumoac fqqumopr fqqum85 fqqum86 ///
                   dimarr dinma dinfa dianm dimad dianf difad ///
				   fqethnmr fqcbthmr finstat w8w1lwgt w8w4lwgt /// MV added
                   mainhh painhh idahhw8 w8indout w8xwgt w8scwt sc* idahhw8 gor 
				   
                   
*not available in wave 8 fqethnr fqcbthr finstatw8 w8lwgt                  
merge 1:1 idauniq using "$wave_8_core", keepusing(`demo_w8_core') nogen

****merge with wave 8 end of life variables data***
*local demo_w8_endl  EiDateY
*merge 1:1 idauniq using "`wave_6_endl'", keepusing(`demo_w8_endl' idauniq) 
*gen w8endlife = 1 if _merge == 3
*drop _merge
*
*****merge with wave specific financial derived variables data***
local demo_w8_fina coupid 
merge 1:1 idauniq using "$wave_8_fina", keepusing(`demo_w8_fina') nogen
*
****merge with wave 3 life history data***
local demo_w8_hist rpyrma rpyrma? rpmarst rpmarst? rpdiv rpdiv? rpdyr rpdyr? rpfin rpfin? rpdiy rpdiy? 
merge 1:1 idauniq using "$wave_3_hist", keepusing(`demo_w8_hist') nogen



*********************************************************************
***Household Identifier***
*********************************************************************

***person specific identifier***
*wave household id
gen hh`wavenum'hhid =.
replace hh`wavenum'hhid = idahhw8 if idahhw8~= .
label variable hh`wavenum'hhid "wave `wavenum' specific household serial number /num"

*check

gen hh`wavenum'hhidc = string(hh`wavenum'hhid)
label variable hh`wavenum'hhidc "wave `wavenum' specific household serial number /5-char"


*********************************************************************
***Person Specific Identifier***
*********************************************************************

*person number
replace pn = perid if !missing(perid)

*********************************************************************
***Wave Status***
*********************************************************************

***wave status: response indicator***
*wave response indicator
gen inw`wavenum' =0
replace inw`wavenum' = 1 if inlist(w8indout,11,13,21,23,24,25)
label variable inw`wavenum' "inw`wavenum': =1 if respondent w`wavenum'"

*value labels
label values inw`wavenum' inw

*check

****self-completion status: response indicator***
**wave self-completion response indicator
gen inw`wavenum'sc =0
replace inw`wavenum'sc = 1 if inrange(w8scwt,0,10)
foreach var of varlist sc* {
		capture confirm numeric variable `var'
		if !_rc {
	    replace inw`wavenum'sc = 1 if inrange(`var',0,9999999999)
	  }
	}
label variable inw`wavenum'sc "inw`wavenum'sc: =1 if respondent w`wavenum' self-completion"

**value labels
label values inw`wavenum'sc inwsc

**check

*********************************************************************
***Couple Identifier***
*********************************************************************

****create temporary indicator of wave spouse***
gen w`wavenum'spouse=.
replace w`wavenum'spouse = 0 if inw`wavenum'==1
replace w`wavenum'spouse = 1 if inlist(dhr ,1,2) | ///
																inlist(dhr2,1,2) | ///
																inlist(dhr3,1,2) | ///
																inlist(dhr4,1,2) | ///
																inlist(dhr5,1,2) | ///
																inlist(dhr6,1,2) | ///
																inlist(dhr7,1,2) | ///
																inlist(dhr8,1,2) | ///
																inlist(dhr9,1,2) | ///
																inlist(dhr10,1,2) | ///
																inlist(dhr11,1,2) | ///
																inlist(dhr12,1,2) | ///
																inlist(dhr13,1,2) | ///
																inlist(dhr14,1,2) | ///
																inlist(dhr15,1,2) | ///
																inlist(dhr16,1,2)
											
***couple identifier***
*wave couple id
gen h`wavenum'coupid =.
replace h`wavenum'coupid = coupid if !inlist(coupid,.,-10)
label variable h`wavenum'coupid "wave `wavenum' specific couple id number /num"

**check

**wave couple id (character)
gen str5 h`wavenum'coupidc = string(h`wavenum'coupid)
label variable h`wavenum'coupidc "wave `wavenum' specific couple id number /5-char"

***spouse identifier***
*wave spouse id
gen s`wavenum'idauniq =.
bysort coupid: replace s`wavenum'idauniq = 0 if missing(idauniq[_n+1]) & _n==1 & inw`wavenum' ==1
bysort coupid: replace s`wavenum'idauniq = idauniq[_n+1] if !inlist(coupid,.,-10) & idauniq[_n+1]!=.
bysort coupid: replace s`wavenum'idauniq = idauniq[_n-1] if !inlist(coupid,.,-10) & idauniq[_n-1]!=.
replace s`wavenum'idauniq = 0 if mi(s`wavenum'idauniq) & w8spouse==0 & coupid==.
label variable s`wavenum'idauniq "s`wavenum'idauniq:w`wavenum' spouse idauniq"

*********************************************************************
***Interview Status***
*********************************************************************

****wave status: interview status***
**wave interview status (no end of life data available yet)
gen r`wavenum'iwstat =.
replace r`wavenum'iwstat = 0 if r`pre_wavenum'iwstat == 0 & mi(w8indout)
replace r`wavenum'iwstat = 1 if inlist(w8indout,11,13,21,23,24,25)
*replace r`wavenum'iwstat = 4 if 
*replace r`wavenum'iwstat = 5 if  
replace r`wavenum'iwstat = 6 if inlist(r`pre_wavenum'iwstat,5,6) & !inlist(w8indout,11,13,21,23,24,25)
replace r`wavenum'iwstat = 7 if inlist(r`pre_wavenum'iwstat,7) & !inlist(w8indout,11,13,21,23,24,25) 
replace r`wavenum'iwstat = 9 if inlist(r`pre_wavenum'iwstat,1,4,9) & !inlist(w8indout,11,13,21,23,24,25) 
label variable r`wavenum'iwstat "r`wavenum'iwstat:w`wavenum' r interview status"

**wave spouse interview status
gen s`wavenum'iwstat =.
spouse r`wavenum'iwstat, result(s`wavenum'iwstat) wave(`wavenum')
label variable s`wavenum'iwstat "s`wavenum'iwstat:w`wavenum' s interview status"

**value labels
label values r`wavenum'iwstat wstat
label values s`wavenum'iwstat wstat

*drop w8endlife

**check 

*********************************************************************
***Sample Cohort***
*********************************************************************
***sample cohort***
*wave respondent cohort***need more documentation to finish
gen r`wavenum'cohort_e=.
replace r`wavenum'cohort_e = 1 if inlist(finstat,1,2,3) 
replace r`wavenum'cohort_e = 2 if inlist(finstat,5,6,13,21,22,29,38,43)
replace r`wavenum'cohort_e = 3 if inlist(finstat,4)
replace r`wavenum'cohort_e = 4 if inlist(finstat,7,8,9)
replace r`wavenum'cohort_e = 5 if inlist(finstat,12,20,23,30,39,44)
replace r`wavenum'cohort_e = 6 if inlist(finstat,10)
replace r`wavenum'cohort_e = 7 if inlist(finstat,11)
replace r`wavenum'cohort_e = 8 if inlist(finstat,14,15,16)
replace r`wavenum'cohort_e = 9 if inlist(finstat,19,24,31,40,45)
replace r`wavenum'cohort_e = 10 if inlist(finstat,17)
replace r`wavenum'cohort_e = 11 if inlist(finstat,18)
replace r`wavenum'cohort_e = 12 if inlist(finstat,25,28) // *update once wave 8is included in Index file
replace r`wavenum'cohort_e = 13 if inlist(finstat,32,41,46) // *update once wave 8is included in Index file
replace r`wavenum'cohort_e = 14 if inlist(finstat,26) // *update once wave 8is included in Index file
replace r`wavenum'cohort_e = 15 if inlist(finstat,27) // *update once wave 8is included in Index file
replace r`wavenum'cohort_e = 16 if inlist(finstat,33,34,35) // *update once wave 8is included in Index file
replace r`wavenum'cohort_e = 17 if inlist(finstat,42,47) // *update once wave 8is included in Index file
replace r`wavenum'cohort_e = 18 if inlist(finstat,36) // *update once wave 8is included in Index file
replace r`wavenum'cohort_e = 19 if inlist(finstat,37) // *update once wave 8is included in Index file

label variable r`wavenum'cohort_e "r`wavenum'cohort_e:w`wavenum' r sample cohort, ELSA specific"

**wave spouse cohort
gen s`wavenum'cohort_e=.
spouse r`wavenum'cohort_e, result(s`wavenum'cohort_e) wave(`wavenum')
label variable s`wavenum'cohort_e "s`wavenum'cohort_e:w`wavenum' s sample cohort, ELSA specific"

*value labels
label values r`wavenum'cohort_e cohort_e
label values s`wavenum'cohort_e cohort_e

*check


*********************************************************************
***Whether Eligible for Sample***
*********************************************************************

***whether eligible for the elsa sample***
**wave spouse eligibility
gen s`wavenum'elsamp =.
spouse raelsamp, result(s`wavenum'elsamp) wave(`wavenum')
label variable s`wavenum'elsamp "s`wavenum'elsamp:ELSA s sample-age eligible/Wave 1 Resp"

**value labels
label values s`wavenum'elsamp elsaamp


***person-level longitudinal weight, core sample***
*wave respondent longitudinal weight
gen r`wavenum'lwtresp =.
replace r`wavenum'lwtresp = w8w1lwgt
label variable r`wavenum'lwtresp "r`wavenum'lwtresp:w`wavenum' r person-level longitudinal weight, core sample"

**wave spouse longitudinal weight, core
gen s`wavenum'lwtresp =.
spouse r`wavenum'lwtresp, result(s`wavenum'lwtresp) wave(`wavenum')
label variable s`wavenum'lwtresp "s`wavenum'lwtresp:w`wavenum' s person-level longitudinal weight, core sample"

*check

///////////////////////////////////////////////////////////////////////////////////////////
**NEW** MV added
*wave respondent longitudinal weight relative to WAVE 4
gen r`wavenum'lwt4resp =.
replace r`wavenum'lwt4resp = w8w4lwgt
label variable r`wavenum'lwt4resp "r`wavenum'lwt4resp:w`wavenum' r person-level longitudinal weight, wave 4 base, core sample"

**wave spouse longitudinal weight, core
gen s`wavenum'lwt4resp =.
spouse r`wavenum'lwt4resp, result(s`wavenum'lwt4resp) wave(`wavenum')
label variable s`wavenum'lwt4resp "s`wavenum'lwt4resp:w`wavenum' s person-level longitudinal weight, wave 4 base, core sample"

*check
* END OF MV ADDED
///////////////////////////////////////////////////////////////////////////////////////////

*********************************************************************
***Person-Level Analysis Weight***
*********************************************************************

***person-level cross-sectional weight, core sample***
*wave respondent cross-sectional weight, core
gen r`wavenum'cwtresp = 0 if inw`wavenum' == 1
replace r`wavenum'cwtresp = w8xwgt if !mi(w8xwgt)
label variable r`wavenum'cwtresp "r`wavenum'cwtresp:w`wavenum' r person-level cross-sectional weight, core sample"

**wave spouse cross-sectional weight, core
gen s`wavenum'cwtresp =.
spouse r`wavenum'cwtresp, result(s`wavenum'cwtresp) wave(`wavenum')
label variable s`wavenum'cwtresp "s`wavenum'cwtresp:w`wavenum' s person-level cross-sectional weight, core sample"

*check

***person-level weight, self-completion sample***
*wave respondent weight, self-completion sample
gen r`wavenum'scwtresp =.
replace r`wavenum'scwtresp = w8scwt
label variable r`wavenum'scwtresp "r`wavenum'scwtresp:w`wavenum' r person-level weight, self-completion sample"

**wave spouse weight, self-completion
gen s`wavenum'scwtresp =.
spouse r`wavenum'scwtresp, result(s`wavenum'scwtresp) wave(`wavenum')
label variable s`wavenum'scwtresp "s`wavenum'scwtresp:w`wavenum' s person-level weight, self-completion sample"

*check

*********************************************************************
***Spouse Identifier***
*********************************************************************

***spouse identifier***
**respondent number of spouse id's (update)
replace raspct = raspct +1 if s`wavenum'idauniq != s1idauniq & s`wavenum'idauniq != s1idauniq & !inlist(s`wavenum'idauniq,0,.)
replace raspct = 0 if s`wavenum'idauniq == 0 & missing(raspct)
replace raspct = 1 if !inlist(s`wavenum'idauniq,0,.) & missing(raspct)

**check

**respondent first spouse id (update)
replace raspid1 = s`wavenum'idauniq if !inlist(s`wavenum'idauniq,0,.) & missing(raspid1)

**check

**respondent second spouse id (update)
replace raspid2 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.)

**check

**respondent third spouse id (update)
replace raspid3 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.)

**check

**respondent fourth spouse id (update)
replace raspid4 = s`wavenum'idauniq if s`wavenum'idauniq != raspid1 & s`wavenum'idauniq != raspid2  & s`wavenum'idauniq != raspid3 & !inlist(s`wavenum'idauniq,0,.) & !inlist(raspid1,0,.) & !inlist(raspid2,0,.) & !inlist(raspid3,0,.)

**check

***sampling weight***
*wave 8 respondent stratification variable
gen r8strat =.
replace r8strat = idahhw8
label variable r8strat "r8strat:w8 hse stratification variable"

*check 

*respondent clustering variable
gen r8clust = ""
replace r8clust = gor
label variable r8clust "r8clust:w8 hse clustering variable"

*********************************************************************
***Number of Household Respondents***
*********************************************************************

***number of household respondents***
*wave household number of respondents   
egen hh`wavenum'hhresp = sum(inw`wavenum'==1) if inw`wavenum'==1, by(hh`wavenum'hhid)
label variable hh`wavenum'hhresp "hh`wavenum'hhresp:w`wavenum' # core respondents in hh"

*check

*********************************************************************
***Whether Couple Household***
*********************************************************************

****whether couple household***
**wave household couple indicator
egen h`wavenum'cpl = sum(inw`wavenum'==1), by(coupid)
recode h`wavenum'cpl (0=.) (1=0) (2=1)
label variable h`wavenum'cpl "h`wavenum'cpl:w`wavenum' whether coupled"

**value labels
label values h`wavenum'cpl cpl

**check

*********************************************************************
***Financial Respondent, Household Respondent, Housing Respondent***
*********************************************************************

***financial, family respondent***
*wave respondent financial respondent indicator
gen r`wavenum'finr =.
replace r`wavenum'finr = 1 if perid == iapid & !inlist(iapid,.,-1,-9,-8)
replace r`wavenum'finr = 0 if perid != iapid & inw`wavenum'==1
label variable r`wavenum'finr "r`wavenum'finr:w`wavenum' r whether financial resp"

**wave spouse financial respondent indicator
gen s`wavenum'finr =.
spouse r`wavenum'finr, result(s`wavenum'finr) wave(`wavenum')
label variable s`wavenum'finr "s`wavenum'finr:w`wavenum' s whether financial resp"

*wave couple financial respondent indicator
gen h`wavenum'anyfin =.
replace h`wavenum'anyfin = 0 if iapid==-1
replace h`wavenum'anyfin = 1 if !inlist(iapid,.,-1) & inw`wavenum' ==1
label variable h`wavenum'anyfin "h`wavenum'anyfin:w`wavenum' whether any finr in couple"

*value labels
label values r`wavenum'finr finr
label values s`wavenum'finr finr
label values h`wavenum'anyfin finr

*check 

***household, family respondent***
*wave respondent household respondent indicator
gen r`wavenum'hhr =.
replace r`wavenum'hhr = 1 if perid == hhresp & hhresp != 97 & !mi(hhresp)
replace r`wavenum'hhr = 0 if perid != hhresp & inw`wavenum'==1
label variable r`wavenum'hhr "r`wavenum'hhr:w`wavenum' r whether hh resp"

**wave spouse household respondent indicator
gen s`wavenum'hhr =.
spouse r`wavenum'hhr, result(s`wavenum'hhr) wave(`wavenum')
label variable s`wavenum'hhr "s`wavenum'hhr:w`wavenum' s whether hh resp"

*value labels
label values r`wavenum'hhr hhr
label values s`wavenum'hhr hhr

*check

***housing, family respondent***
*wave respondent housing respondent indicator
gen r`wavenum'hor =.
replace r`wavenum'hor = 1 if perid == hopid & !inlist(hopid,.,-1,-9,-8)
replace r`wavenum'hor = 0 if perid != hopid & inw`wavenum' ==1
label variable r`wavenum'hor "r`wavenum'hor:w`wavenum' r whether housing resp"

**wave spouse housing respondent indicator
gen s`wavenum'hor =.
spouse r`wavenum'hor, result(s`wavenum'hor) wave(`wavenum')
label variable s`wavenum'hor "s`wavenum'hor:w`wavenum' s whether housing resp"

*wave household housing respondent indicator
gen hh`wavenum'anyho =.
replace hh`wavenum'anyho = 0 if hopid==-1
replace hh`wavenum'anyho = 1 if !inlist(hopid,.,-1) & inw`wavenum'==1
label variable hh`wavenum'anyho "hh`wavenum'anyho:w`wavenum' whether any hor in hh"

*value labels
label values r`wavenum'hor   hor
label values s`wavenum'hor   hor
label values hh`wavenum'anyho hor

*check


*********************************************************************
***Whether Proxy Interview***
*********************************************************************

***whether proxy interview***
*wave respondent proxy indicator
gen r`wavenum'proxy =.
replace r`wavenum'proxy = 1 if askpx ==1
replace r`wavenum'proxy = 0 if askpx ==0
label variable r`wavenum'proxy "r`wavenum'proxy:w`wavenum' r whether proxy interview"

**wave spouse proxy indicator
gen s`wavenum'proxy =.
spouse r`wavenum'proxy, result(s`wavenum'proxy) wave(`wavenum')
label variable s`wavenum'proxy "s`wavenum'proxy:w`wavenum' s whether proxy interview"

*value labels
label values r`wavenum'proxy proxy
label values s`wavenum'proxy proxy

*check

*********************************************************************
***Interview Dates***
*********************************************************************

**interview dates***
**wave household interview date
*gen hh`wavenum'iwhh =.
*replace hh`wavenum'iwhh = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2020) & inrange(iintdatm, 1, 12)
*label variable hh`wavenum'iwhh "hh`wavenum'iwhh:w`wavenum' household interview date"
*
**wave household interview date flag
*gen hh`wavenum'iwhhf =.
*replace hh`wavenum'iwhhf = 0 if inrange(iintdaty,2000, 2020) & inrange(iintdatm,1,12)
*replace hh`wavenum'iwhhf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
*replace hh`wavenum'iwhhf = 2 if !inrange(iintdaty,2000, 2020) & inw`wavenum' ==1
*label variable hh`wavenum'iwhhf "hh`wavenum'iwhhf:w`wavenum' household interview date flag"

*wave respondent individual interview date
gen r`wavenum'iwind =.
replace r`wavenum'iwind = ym(iintdaty, iintdatm) if inrange(iintdaty, 2000, 2020) & inrange(iintdatm, 1, 12)
label variable r`wavenum'iwind "r`wavenum'iwind:w`wavenum' r individual interview date"

**wave spouse individual interview date
gen s`wavenum'iwind =.
spouse r`wavenum'iwind, result(s`wavenum'iwind) wave(`wavenum')
label variable s`wavenum'iwind "s`wavenum'iwind:w`wavenum' s individual interview date"

*wave respondent individual interview date flag
gen r`wavenum'iwindf =.
replace r`wavenum'iwindf = 0 if inrange(iintdaty,2000, 2020) & inrange(iintdatm,1,12)
replace r`wavenum'iwindf = 1 if !inrange(iintdatm,1,12) & inw`wavenum' ==1
replace r`wavenum'iwindf = 2 if !inrange(iintdaty,2000, 2020) & inw`wavenum' ==1
label variable r`wavenum'iwindf "r`wavenum'iwindf:w`wavenum' r individual interview date flag"

**wave spouse individual interview flag
gen s`wavenum'iwindf =.
spouse r`wavenum'iwindf, result(s`wavenum'iwindf) wave(`wavenum')
label variable s`wavenum'iwindf "s`wavenum'iwindf:w`wavenum' s individual interview date flag"

**wave household interview month
*gen hh`wavenum'iwhhm =.
*replace hh`wavenum'iwhhm = iintdatm if inrange(iintdatm,1,12)
*label variable hh`wavenum'iwhhm "hh`wavenum'iwhhm:w`wavenum' household interview month"
*
**wave household interview year
*gen hh`wavenum'iwhhy =.
*replace hh`wavenum'iwhhy = iintdaty if inrange(iintdaty,2000, 2020)
*label variable hh`wavenum'iwhhy "hh`wavenum'iwhhy:w`wavenum' household interview year"

*wave respondent individual interview month
gen r`wavenum'iwindm =.
replace r`wavenum'iwindm = iintdatm if inrange(iintdatm,1,12)
label variable r`wavenum'iwindm "r`wavenum'iwindm:w`wavenum' r individual interview month"

*wave respondent individual interview year
gen r`wavenum'iwindy =.
replace r`wavenum'iwindy = iintdaty if inrange(iintdaty,2000, 2020)
label variable r`wavenum'iwindy "r`wavenum'iwindy:w`wavenum' r individual interview year"

**wave spouse individual interview year
gen s`wavenum'iwindm =.
spouse r`wavenum'iwindm, result(s`wavenum'iwindm) wave(`wavenum')
label variable s`wavenum'iwindm "s`wavenum'iwindm:w`wavenum' s individual interview month"

**wave spouse individual interview year
gen s`wavenum'iwindy =.
spouse r`wavenum'iwindy, result(s`wavenum'iwindy) wave(`wavenum')
label variable s`wavenum'iwindy "s`wavenum'iwindy:w`wavenum' s individual interview year"

*value labels
*label values hh`wavenum'iwhhf dateflag
label values r`wavenum'iwindf dateflag
label values s`wavenum'iwindf dateflag

*check


*********************************************************************
***Birth Date***
*********************************************************************

***birth date: year***
*respondent birth year (update)
replace rabyear = indobyr if inrange(indobyr,1900,2000) & (missing(rabyear) | rafbyear != 0)
replace rabyear = 1926 if indobyr == -7 & missing(rabyear)

**wave spouse birth year
gen s`wavenum'byear =.
spouse rabyear, result(s`wavenum'byear) wave(`wavenum')
label variable s`wavenum'byear "s`wavenum'byear:w`wavenum' s birth year"

*respondent birth year flag
replace rafbyear = 0 if inrange(indobyr,1900,2000) & (mi(rafbyear) | rafbyear != 0)
replace rafbyear = 8 if indobyr == -7 & mi(rafbyear)

**wave spouse birth year flag
gen s`wavenum'fbyear =.
spouse rafbyear, result(s`wavenum'fbyear) wave(`wavenum')
label variable s`wavenum'fbyear "s`wavenum'fbyear:w`wavenum' s flag birth year bottom-coded"
label values s`wavenum'fbyear fbyear

*check 

*********************************************************************
***Age at Interview (In Years)***
*********************************************************************

***age at interview (in years)***
*wave respondent age in years
gen r`wavenum'agey=.
replace r`wavenum'agey = indager if inrange(indager,10,90)
replace r`wavenum'agey = 90 if indager==-7
label variable r`wavenum'agey "r`wavenum'agey:w`wavenum' r age (years) at ivw"

**wave spouse age in years
gen s`wavenum'agey=.
spouse r`wavenum'agey, result(s`wavenum'agey) wave(`wavenum')
label variable s`wavenum'agey "s`wavenum'agey:w`wavenum' s age (years) at ivw"

*wave respondent age in years flag
gen r`wavenum'fagey=.
replace r`wavenum'fagey = 0 if inrange(indager,10,90)
replace r`wavenum'fagey = 1 if indager == -7
label variable r`wavenum'fagey "r`wavenum'fagey:w`wavenum' r flag age at iwv top-coded"
label values r`wavenum'fagey fagey

**wave spouse age in years flag
gen s`wavenum'fagey=.
spouse r`wavenum'fagey, result(s`wavenum'fagey) wave(`wavenum')
label variable s`wavenum'fagey "s`wavenum'fagey:w`wavenum' s flag age at iwv top-coded"
label values s`wavenum'fagey fagey

*check


*********************************************************************
***Gender***
*********************************************************************

***gender***
*respondent gender (update)
missing_w`wavenum' indsex if missing(ragender), result(ragender)
replace ragender = 1 if indsex == 1 & missing(ragender)
replace ragender = 2 if indsex == 2 & missing(ragender)

**wave spouse gender
gen s`wavenum'gender =.
spouse ragender, result(s`wavenum'gender) wave(`wavenum')
label variable s`wavenum'gender "s`wavenum'gender:w`wavenum' s gender"

*respondent gender flag (update)
replace rafgendr = 0 if ( (ragender == 1 & indsex == 1) | (ragender == 2 & indsex == 2) ) & rafgendr!=1
replace rafgendr = 1 if (ragender == 1 & indsex == 2) | (ragender == 2 & indsex == 1)

**wave spouse gender flag
gen s`wavenum'fgendr = .
spouse rafgendr, result(s`wavenum'fgendr) wave(`wavenum')
label variable s`wavenum'fgendr "s`wavenum'fgendr:w`wavenum' flag if problem with s gender"

**value labels
label values s`wavenum'gender gender
label values s`wavenum'fgendr genderflag

*check

*********************************************************************
***Race***
*********************************************************************

***race, ethnicity: race***
*respondent race (update)
missing_w`wavenum' fqethnmr if missing(raracem), result(raracem)
replace raracem = 1 if fqethnmr == 1 & missing(raracem)
replace raracem = 4 if fqethnmr == 2 & missing(raracem)

**wave spouse race
gen s`wavenum'racem =.
spouse raracem, result(s`wavenum'racem) wave(`wavenum')
label variable s`wavenum'racem "s`wavenum'racem:w`wavenum' s race - masked"

*respondent race flag (update)
replace raracef = 0 if ( (raracem == 1 & fqethnmr == 1) | (raracem == 4 & fqethnmr == 2) ) & raracef!=1
replace raracef = 1 if (raracem == 1 & fqethnmr == 2) | (raracem == 4 & fqethnmr == 1)

**wave spouse race flag
gen s`wavenum'racef =.
spouse raracef, result(s`wavenum'racef) wave(`wavenum')
label variable s`wavenum'racef "s`wavenum'racef:w`wavenum' flag if problem with s race"

**value labels
label values s`wavenum'racem race
label values s`wavenum'racef raceflag

*check

*********************************************************************
***Education***
*********************************************************************
***education: categorical summary***
*respondent education categorically (update)
replace raeduc_e = 5 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 4 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumhnc == 1 | ///
														fqqumonc == 1 | ///
														fqqumcgf == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumnv2 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
replace raeduc_e = 1 if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumcs1 == 1 | ///
														fqqumcs2 == 1 | ///
														fqqumcsu == 1 | ///
														fqqumsll == 1 | ///
														fqqumsup == 1 | ///
														fqqummat == 1 | ///
														fqqumnv1 == 1 ) | fqaqua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))& (mi(raeduc_e) & raeduc_e != .o)
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					fqqumnv2 ///
					 fqqumnv1 if (mi(raeduc_e) & raeduc_e != .o), result(raeduc_e)										 														
replace raeduc_e = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & missing(raeduc_e) & !inlist(raeduc_e,.o,.r,.d)
replace raeduc_e = .o if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | /// not in wave 8 codebook aside from bottom - not in table - ASK ABOUT THESE
														fqqumdip == 1 | /// not in wave 8 codebook aside from bottom - not in table - ASK ABOUT THESE
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 ) & (mi(raeduc_e) & raeduc_e != .o)
														
																																										
**wave spouse education categorically
gen s`wavenum'educ_e =.
spouse raeduc_e, result(s`wavenum'educ_e) wave(`wavenum')
label variable s`wavenum'educ_e "s`wavenum'educ_e:w`wavenum' s education (categ)"
label values s`wavenum'educ_e educcats

*check

***education: isced category***
*wave 8respondent education isced category (update)
replace raedisced = .n if (fqaqua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))& (mi(raedisced) & !inlist(raedisced,.n,.o))		
replace raedisced = 5 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))			
replace raedisced = 4 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 ) & (mi(raedisced) & !inlist(raedisced,.n,.o))			
replace raedisced = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
													 fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raedisced) & !inlist(raedisced,.n,.o))																								
	
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					fqqumnv2 ///
					 fqqumnv1 if (mi(raedisced) & !inlist(raedisced,.n,.o)), result(raedisced)
replace raedisced = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & mi(raedisced) & !inlist(raedisced,.n,.o,.r,.d)							 
replace raedisced = .o if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | ///
														fqqumdip == 1 | ///
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raedisced) & !inlist(raedisced,.n,.o))															 
																			 																											
*wave 8spouse education isced category
gen s`wavenum'edisced =.
spouse raedisced, result(s`wavenum'edisced) wave(`wavenum')
label variable s`wavenum'edisced "s`wavenum'edisced:w`wavenum' s education isced"
label values s`wavenum'edisced educisced 

***education: harmonized education category***
*wave 8respondent education harmonized category (update)
replace raeducl = 3 if (fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumdeg == 1 | ///
														fqqumnv5 == 1 | ///
														fqqumnv4 == 1 ) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = 2 if (fqmqua == 1 | fqaqua == 1) & ( ///
													 fqqumtea == 1 | ///
														fqqumnur == 1 | ///
														fqqumhnc == 1 | ///
														fqqumcgf == 1 | ///
													    fqqumonc == 1 | ///
														fqqumcgo == 1 | ///
														fqqumolp == 1 | ///
														fqqumola == 1 | ///
														fqqumold == 1 | ///
														fqqumgca == 1 | ///
														fqqumgcd == 1 | ///
														fqqumcga == 1 | ///
														fqqumale == 1 | ///
														fqqumasl == 1 | ///
														fqqumslc == 1 | ///
														fqqumnv3 == 1 | ///
														fqqumnv2 == 1 | ///
														fqqumcs1 == 1 | ///                        
														fqqumcs2 == 1 | ///                        
														fqqumcsu == 1 | ///                        
														fqqumsll == 1 | ///                        
														fqqumsup == 1 | ///                        
														fqqummat == 1 | ///                        
         										fqqumnv1 == 1) & (mi(raeducl) & !inlist(raeducl,.o))											
replace raeducl = 1 if (fqaqua == 2 | (fqqumdeg == 0 & ///
							           fqqumtea == 0 & ///
							           fqqumnur == 0 & ///
							           fqqumhnc == 0 & ///
										 fqqumonc == 0 & ///
										 fqqumcgf == 0 & ///
										 fqqumcga == 0 & ///
										 fqqumcgo == 0 & ///
										 fqqumale == 0 & ///
										 fqqumasl == 0 & ///
										 fqqumslc == 0 & ///
										 fqqumolp == 0 & ///
										 fqqumola == 0 & ///
										 fqqumold == 0 & ///
										 fqqumgca == 0 & ///
										 fqqumgcd == 0 & ///
										 fqqumcs1 == 0 & ///
										 fqqumcs2 == 0 & ///
										 fqqumcsu == 0 & ///
										 fqqumsll == 0 & ///
										 fqqumsup == 0 & ///
										 fqqummat == 0 & ///
										 fqqumnv5 == 0 & ///
										 fqqumnv4 == 0 & ///
										 fqqumnv3 == 0 & ///
										 fqqumnv2 == 0 & ///
										 fqqumnv1 == 0))  & (mi(raeducl) & !inlist(raeducl,.o))
missing_w`wavenum' fqmqua ///
           fqaqua ///
           fqqumdeg ///
           fqqumtea ///
           fqqumnur ///
           fqqumhnc ///
					 fqqumonc ///
					 fqqumcgf ///
					 fqqumcga ///
					 fqqumcgo ///
					 fqqumale ///
					 fqqumasl ///
					 fqqumslc ///
					 fqqumolp ///
					 fqqumola ///
					 fqqumold ///
					 fqqumgca ///
					 fqqumgcd ///
					 fqqumcs1 ///
					 fqqumcs2 ///
					 fqqumcsu ///
					 fqqumsll ///
					 fqqumsup ///
					 fqqummat ///
					 fqqumnv5 ///
					 fqqumnv4 ///
					 fqqumnv3 ///
					 fqqumnv2 ///
					 fqqumnv1 if (mi(raeducl) & !inlist(raeducl,.o)), result(raeducl)
replace raeducl = .o if ((fqmqua == 1 | fqaqua == 1) & ( ///
														fqqumtra == 1 | ///
														fqqumcle == 1 | ///
														fqqumfor == 1 | ///
														fqqumovo == 1 | ///
														fqqumnvz == 1 | ///
														fqqumnne == 1 | ///
														fqqummil == 1 | /// not in the table
														fqqumdip == 1 | /// not in the table
														fqqumoac == 1 | ///
														fqqumopr == 1 | ///
														fqqum85 == 1 | ///
														fqqum86 == 1 )) & (mi(raeducl) & !inlist(raeducl,.o))
replace raeducl = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & mi(raeducl) & !inlist(raeducl,.o,.r,.d)
label variable raeducl "raeducl:r harmonized education"
label values raeducl educharm

*wave 8spouse education harmonized category
gen s8educl = .
spouse raeducl, result(s8educl) wave(7)
label variable s8educl "s8educl:w8 S harmonized education"
label values s8educl educharm

*********************************************************************
***Current Marital Status***
*********************************************************************

***current marital status: with implied partnerships***
*wave respondent marital status with partnership
gen r`wavenum'mstat=.
missing_w`wavenum' dimarr, result(r`wavenum'mstat)
replace r`wavenum'mstat = 1 if inlist(dimarr,2,3)
replace r`wavenum'mstat = 4 if dimarr==4
replace r`wavenum'mstat = 5 if dimarr==5
replace r`wavenum'mstat = 7 if dimarr==6
replace r`wavenum'mstat = 8 if dimarr == 1
replace r`wavenum'mstat = 3 if (inlist(dimarr,1,5,6) & !inlist(s`wavenum'idauniq,0,.)) 
label variable r`wavenum'mstat "r`wavenum'mstat:w`wavenum' r marital status w/partners, filled"

**wave spouse marital status with implied partnership
gen s`wavenum'mstat=.
spouse r`wavenum'mstat, result(s`wavenum'mstat) wave(`wavenum')
label variable s`wavenum'mstat "s`wavenum'mstat:w`wavenum' s marital status w/partners, filled"

*value labels
label values r`wavenum'mstat marwpart
label values s`wavenum'mstat marwpart

*check

*********************************************************************
***Current Partnership Status: With Partnership***
*********************************************************************

****current marital status: current implied partnership status***
**wave respondent implied partnership status
gen r`wavenum'mpart =.
missing_w`wavenum' dimarr, result(r`wavenum'mpart)
replace r`wavenum'mpart = 0 if inw`wavenum'==1
replace r`wavenum'mpart = 1 if inlist(dimarr, 1, 6, 7, 9, 10) & !inlist(s`wavenum'idauniq,0,.)
label variable r`wavenum'mpart "r`wavenum'mpart:w`wavenum' r implied partnership status"

**wave spouse partnership status
gen s`wavenum'mpart =.
spouse r`wavenum'mpart, result(s`wavenum'mpart) wave(`wavenum')
label variable s`wavenum'mpart "s`wavenum'mpart:w`wavenum' s implied partnership status"

**value labels
label values r`wavenum'mpart part
label values s`wavenum'mpart part

**check

*********************************************************************
***Current Partnership Status: Without Partnership***
*********************************************************************

***current marital status: without implied partnerships***
*wave respondent marital status without implied partnership
gen r`wavenum'mstath =.
missing_w`wavenum' dimarr, result(r`wavenum'mstath)
replace r`wavenum'mstath = 1 if inlist(dimarr,2,3)
replace r`wavenum'mstath = 4 if dimarr==4
replace r`wavenum'mstath = 5 if dimarr==5
replace r`wavenum'mstath = 7 if dimarr==6
replace r`wavenum'mstath = 8 if dimarr == 1
label variable r`wavenum'mstath "r`wavenum'mstath:w`wavenum' r marital status"

**wave spouse marital status without implied partnership
gen s`wavenum'mstath =.
spouse r`wavenum'mstath, result(s`wavenum'mstath) wave(`wavenum')
label variable s`wavenum'mstath "s`wavenum'mstath:w`wavenum' s marital status"

*value labels
label values r`wavenum'mstath marwopart
label values s`wavenum'mstath marwopart

*check


*********************************************************************
***Number of Marriages***
*********************************************************************

***number of marriages***
*married but missing last wave's husband/wife (temp)
tempvar w`pre_wavenum'mishw
gen `w`pre_wavenum'mishw'=.
replace `w`pre_wavenum'mishw' = 0 if inw`pre_wavenum'==1
foreach v of varlist pre_DhR pre_DhR? pre_DhR1? {
	replace `w`pre_wavenum'mishw' = 1 if `v'==1 & inlist(pre_DiMar,2,4)
}
replace `w`pre_wavenum'mishw' = 2 if `w`pre_wavenum'mishw'==0 & inlist(pre_DiMar,2,4)
recode `w`pre_wavenum'mishw' (1=0) (2=1)

*wave respondent number of marriages
gen r`wavenum'mrct =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mrct = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mrct = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_DiMar, result(r`wavenum'mrct)
missing_w`wavenum' dimarr, result(r`wavenum'mrct)
missing_H r`pre_wavenum'mrct, result(r`wavenum'mrct)
replace r`wavenum'mrct = r`pre_wavenum'mrct if !mi(r`pre_wavenum'mrct) & inw`wavenum'==1
replace r`wavenum'mrct = r`wavenum'mrct + 1 if ( (( (pre_DhR!=1 & dhr==1) | ///
																					   		 (pre_DhR2!=1 & dhr2==1) | ///
																					   		 (pre_DhR3!=1 & dhr3==1) | ///
																					   		 (pre_DhR4!=1 & dhr4==1) | ///
																					   		 (pre_DhR5!=1 & dhr5==1) | ///
																					   		 (pre_DhR6!=1 & dhr6==1) | ///
																					   		 (pre_DhR7!=1 & dhr7==1) | ///
																					   		 (pre_DhR8!=1 & dhr8==1) | ///
																					   		 (pre_DhR9!=1 & dhr9==1) | ///
																					   		 (pre_DhR10!=1 & dhr10==1) | ///
																					   		 (pre_DhR11!=1 & dhr11==1) | ///
																					   		 (pre_DhR12!=1 & dhr12==1) | ///
																					   		 (pre_DhR13!=1 & dhr13==1) | ///
																					   		 (pre_DhR14!=1 & dhr14==1) | ///
																					   		 (pre_DhR15!=1 & dhr15==1) | ///
																					   		 (pre_DhR16!=1 & dhr16==1) ) & `w`pre_wavenum'mishw'!=1 & inlist(dimarr,2,3) ) | ///
																					   		 (inlist(pre_DiMar,1,3,5,6,7,8,9,10,11) & inlist(dimarr,2,3)) | ///
																					   		 (pre_DiMar==2 & dimarr==3) ) & ///
																					   		 !mi(r`wavenum'mrct) & inw`wavenum'==1
label variable r`wavenum'mrct "r`wavenum'mrct:w`wavenum' r # marriages"

**wave spouse number of marriages
gen s`wavenum'mrct =.
spouse r`wavenum'mrct, result(s`wavenum'mrct) wave(`wavenum')
label variable s`wavenum'mrct "s`wavenum'mrct:w`wavenum' s # marriages"

*check


*********************************************************************
***Marital History: Never Married***
*********************************************************************

***marital history: never married***
*wave respondent never married indicator
gen r`wavenum'mnev =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mnev = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mnev = .l if rpmarst==. & inw`wavenum'==1
missing_w`wavenum' dimarr, result(r`wavenum'mnev)
missing_H r`pre_wavenum'mnev, result(r`wavenum'mnev)
replace r`wavenum'mnev = 0 if (r`pre_wavenum'mnev == 0 | inlist(dimarr,2,3,4,5,6)) & inw`wavenum'==1
replace r`wavenum'mnev = 1 if r`pre_wavenum'mnev==1 & dimarr==1
label variable r`wavenum'mnev "r`wavenum'mnev:w`wavenum' r never married"

**wave spouse never married indicator
gen s`wavenum'mnev =.
spouse r`wavenum'mnev, result(s`wavenum'mnev) wave(`wavenum')
label variable s`wavenum'mnev "s`wavenum'mnev:w`wavenum' s never married"

*value labels
label values r`wavenum'mnev mnev
label values s`wavenum'mnev mnev

*check

*********************************************************************
***Marital History: # Times Divorced***
*********************************************************************

***marital history: # times divorced***
*wave respondent number of times divorced
gen r`wavenum'mdiv =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mdiv = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mdiv = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_DiMar, result(r`wavenum'mdiv)
missing_w`wavenum' dimarr, result(r`wavenum'mdiv)
missing_H r`pre_wavenum'mdiv, result(r`wavenum'mdiv)
replace r`wavenum'mdiv = r`pre_wavenum'mdiv if !mi(r`pre_wavenum'mdiv) & inw`wavenum'==1
replace r`wavenum'mdiv = r`wavenum'mdiv + 1 if ( (( (pre_DhR==1 & dhr!=1) | ///
																					   		 (pre_DhR2==1 & dhr2!=1) | ///
																					   		 (pre_DhR3==1 & dhr3!=1) | ///
																					   		 (pre_DhR4==1 & dhr4!=1) | ///
																					   		 (pre_DhR5==1 & dhr5!=1) | ///
																					   		 (pre_DhR6==1 & dhr6!=1) | ///
																					   		 (pre_DhR7==1 & dhr7!=1) | ///
																					   		 (pre_DhR8==1 & dhr8!=1) | ///
																					   		 (pre_DhR9==1 & dhr9!=1) | ///
																					   		 (pre_DhR10==1 & dhr10!=1) | ///
																					   		 (pre_DhR11==1 & dhr11!=1) | ///
																					   		 (pre_DhR12==1 & dhr12!=1) ) & inlist(pre_DiMar,2,4) & dimarr==5 ) | ///
																					   		 (inlist(pre_DiMar,2,4) & dimarr==5) ) & ///
																					   		 !mi(r`wavenum'mdiv) & inw`wavenum'==1
label variable r`wavenum'mdiv "r`wavenum'mdiv:w`wavenum' r # times divorced"

**wave spouse number of times divorced
gen s`wavenum'mdiv =.
spouse r`wavenum'mdiv, result(s`wavenum'mdiv) wave(`wavenum')
label variable s`wavenum'mdiv "s`wavenum'mdiv:w`wavenum' s # times divorced"

*check


*********************************************************************
***Marital History: # Times Widowed***
*********************************************************************

***marital history: # times widowed***
*wave respondent number of times widowed
gen r`wavenum'mwid =.
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mwid = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mwid = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_DiMar, result(r`wavenum'mwid)
missing_w`wavenum' dimarr, result(r`wavenum'mwid)
missing_H r`pre_wavenum'mwid, result(r`wavenum'mwid)
replace r`wavenum'mwid = r`pre_wavenum'mwid if !mi(r`pre_wavenum'mwid) & inw`wavenum'==1
replace r`wavenum'mwid = r`wavenum'mwid + 1 if ( (( (pre_DhR==1 & dhr!=1) | ///
																					   		 (pre_DhR2==1 & dhr2!=1) | ///
																					   		 (pre_DhR3==1 & dhr3!=1) | ///
																					   		 (pre_DhR4==1 & dhr4!=1) | ///
																					   		 (pre_DhR5==1 & dhr5!=1) | ///
																					   		 (pre_DhR6==1 & dhr6!=1) | ///
																					   		 (pre_DhR7==1 & dhr7!=1) | ///
																					   		 (pre_DhR8==1 & dhr8!=1) | ///
																					   		 (pre_DhR9==1 & dhr9!=1) | ///
																					   		 (pre_DhR10==1 & dhr10!=1) | ///
																					   		 (pre_DhR11==1 & dhr11!=1) | ///
																					   		 (pre_DhR12==1 & dhr12!=1) ) & inlist(pre_DiMar,2,4) & dimarr==6 ) | ///
																					   		 (inlist(pre_DiMar,2,4) & dimarr==6) ) & ///
																					   		 !mi(r`wavenum'mwid) & inw`wavenum'==1
label variable r`wavenum'mwid "r`wavenum'mwid:w`wavenum' r # times widowed"

**wave spouse number of times widowed
gen s`wavenum'mwid =.
spouse r`wavenum'mwid, result(s`wavenum'mwid) wave(`wavenum')
label variable s`wavenum'mwid "s`wavenum'mwid:w`wavenum' s # times widowed"

*check

*********************************************************************
***Marital History: # Times Don't Know***
*********************************************************************

***marital history: #times don't know how marriage ended***
*different husband/wife from last wave (temp)
tempvar w`wavenum'diffhw
gen `w`wavenum'diffhw'=.
replace `w`wavenum'diffhw' = 0 if inw`wavenum'==1
forvalues p=1/12 {
	if "`p'"=="1" local p_
	else local p_ `p'
	local lp = `p'-1
	local np = `p'+1
	forvalues r=1/`lp' {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_DhR`p_' == 1 & dhr`r_' == 1
	}
	forvalues r=`np'/16 {
		if "`r'"=="1" local r_
		else local r_ `r'
		replace `w`wavenum'diffhw' = 1 if pre_DhR`p_' == 1 & dhr`r_' == 1
	}
}

*wave respondent number of times dk marriage end
gen r`wavenum'mend =.	
forvalues w = 3/`pre_wavenum' {
	replace r`wavenum'mend = .b if inw`w'!=1 & inw`wavenum'==1
}															   		 
replace r`wavenum'mend = .l if rpmarst==. & inw`wavenum'==1
missing_w`pre_wavenum' pre_DiMar, result(r`wavenum'mend)
missing_w`wavenum' dimarr, result(r`wavenum'mend)
missing_H r`pre_wavenum'mend, result(r`wavenum'mend)
replace r`wavenum'mend = r`pre_wavenum'mend if !mi(r`pre_wavenum'mend) & inw`wavenum'==1
replace r`wavenum'mend = r`wavenum'mend + 1 if ( (( (pre_DhR==1 & dhr!=1) | ///
																					   		 (pre_DhR2==1 & dhr2!=1) | ///
																					   		 (pre_DhR3==1 & dhr3!=1) | ///
																					   		 (pre_DhR4==1 & dhr4!=1) | ///
																					   		 (pre_DhR5==1 & dhr5!=1) | ///
																					   		 (pre_DhR6==1 & dhr6!=1) | ///
																					   		 (pre_DhR7==1 & dhr7!=1) | ///
																					   		 (pre_DhR8==1 & dhr8!=1) | ///
																					   		 (pre_DhR9==1 & dhr9!=1) | ///
																					   		 (pre_DhR10==1 & dhr10!=1) | ///
																					   		 (pre_DhR11==1 & dhr11!=1) | ///
																					   		 (pre_DhR12==1 & dhr12!=1) ) & inlist(pre_DiMar,2,4) & dimarr==1 ) | ///
																					   		 (inlist(pre_DiMar,2,4) & dimarr==1) | ///
																					   		 (`w`wavenum'diffhw'==1 & inlist(pre_DiMar,2,4) & inlist(dimarr,2,3)) ) & ///
																					   		 !mi(r`wavenum'mend) & inw`wavenum'==1
label variable r`wavenum'mend "r`wavenum'mend:w`wavenum' r # times unknown end marriage"

**wave spouse number of times dk marriage end
gen s`wavenum'mend =.
spouse r`wavenum'mend, result(s`wavenum'mend) wave(`wavenum')
label variable s`wavenum'mend "s`wavenum'mend:w`wavenum' s # times unknown end marriage"

*check


*********************************************************************
***Length of Current Marriage***
*********************************************************************

****length of current marriage***
**consistent husband/wife
gen w`wavenum'conhw=.
replace w`wavenum'conhw=0 if inw`wavenum'==1
replace w`wavenum'conhw=1 if inlist(pre_DiMar,2,4) & inlist(dimarr,2,3) & `w`wavenum'diffhw'!=1 // for wave 5 change conditions to include w`wavenum'conhw==1
*	
**wave respondent length of current marriage
gen r`wavenum'mcurln =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mcurln = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mcurln = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mcurln = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8 ) & inw`wavenum'==1 // There are not wave 8 vars in the wave 3 "wave_3_life_history_data" data, so "| rpyrma8==-8" does not work
replace r`wavenum'mcurln = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8) & inw`wavenum'==1 //  " | rpfin8==-8" does not work
replace r`wavenum'mcurln = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																			& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																			& !missing(r`wavenum'iwindy) ///
																			& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
 																			 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
	 																		 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
		 																	 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
			 																 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
				 															 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
					 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																			 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																			 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma5,-1,.) ) /// corrected by MV
																			 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma6,-1,.) ) /// corrected by MV
																			 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma7,-1,.) ) /// corrected by MV
																			 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																			 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																			 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																			 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																			 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma6>=rpyrma7) | inlist(rpyrma7,-1,.) ) /// Corrected by  MV
																			 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace r`wavenum'mcurln = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																			 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																			 & ( (rpyrma7>=rpyrma6) | inlist(rpyrma6,-1,.) ) /// Corrected by MV
																			 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																			 & !missing(r`wavenum'iwindy) ///
																			 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)

label variable r`wavenum'mcurln "r`wavenum'mcurln:w`wavenum' r length of current marriage"

***wave spouse length of current marriage
gen s`wavenum'mcurln =.
spouse r`wavenum'mcurln, result(s`wavenum'mcurln) wave(`wavenum')
label variable s`wavenum'mcurln "s`wavenum'mcurln:w`wavenum' s length of current marriage"

*check

****length of longest marriage (including current)***
**generate wave marriage lengths for each loop: 1-8
gen	length1w`wavenum' =.									
replace length1w`wavenum' = r`wavenum'iwindy-rpyrma if !inlist(rpyrma,-9,-8,-1,.) ///
																												& ( (rpyrma>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												& ( (rpyrma>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												& ( (rpyrma>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												& ( (rpyrma>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												& ( (rpyrma>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												& ( (rpyrma>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												& ( rpfin==-1 & w`wavenum'conhw==1 ) ///
																												& !missing(r`wavenum'iwindy) ///
																												& !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length1w`wavenum' = rpdyr - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdyr,-9,-8,-2,-1,.) & rpdiv==1 & !( ///
										((rpdyr>rpyrma2) ) | ///
										((rpdyr>rpyrma3) ) | ///
										((rpdyr>rpyrma4) ) | ///
										((rpdyr>rpyrma5) ) | ///
										((rpdyr>rpyrma6) ) | ///
										((rpdyr>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length1w`wavenum' = rpdiy - rpyrma if !inlist(rpyrma,-9,-8,-1,.) & !inlist(rpdiy,-9,-8,-2,-1,.) & rpfin==2 & !( ///
										((rpdiy>rpyrma2) ) | ///
										((rpdiy>rpyrma3) ) | ///
										((rpdiy>rpyrma4) ) | ///
										((rpdiy>rpyrma5) ) | ///
										((rpdiy>rpyrma6) ) | ///
										((rpdiy>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length2w`wavenum' =.									
replace length2w`wavenum' = r`wavenum'iwindy-rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) ///
																												 & ( (rpyrma2>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma2>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
														 														 & ( (rpyrma2>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin2==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length2w`wavenum' = rpdyr2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdyr2,-9,-8,-2,-1,.) & rpdiv2==1 & !( ///
										((rpdyr2>rpyrma) ) | ///
										((rpdyr2>rpyrma3) ) | ///
										((rpdyr2>rpyrma4) ) | ///
										((rpdyr2>rpyrma5) ) | ///
										((rpdyr2>rpyrma6) ) | ///
										((rpdyr2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length2w`wavenum' = rpdiy2 - rpyrma2 if !inlist(rpyrma2,-9,-8,-1,.) & !inlist(rpdiy2,-9,-8,-2,-1,.) & rpfin2==2 & !( ///
										((rpdiy2>rpyrma) ) | ///
										((rpdiy2>rpyrma3) ) | ///
										((rpdiy2>rpyrma4) ) | ///
										((rpdiy2>rpyrma5) ) | ///
										((rpdiy2>rpyrma6) ) | ///
										((rpdiy2>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)

gen	length3w`wavenum' =.									
replace length3w`wavenum' = r`wavenum'iwindy-rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) ///
																												 & ( (rpyrma3>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma3>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin3==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length3w`wavenum' = rpdyr3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdyr3,-9,-8,-2,-1,.) & rpdiv3==1 & !( ///
										((rpdyr3>rpyrma) ) | ///
										((rpdyr3>rpyrma2) ) | ///
										((rpdyr3>rpyrma4) ) | ///
										((rpdyr3>rpyrma5) ) | ///
										((rpdyr3>rpyrma6) ) | ///
										((rpdyr3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length3w`wavenum' = rpdiy3 - rpyrma3 if !inlist(rpyrma3,-9,-8,-1,.) & !inlist(rpdiy3,-9,-8,-2,-1,.) & rpfin3==2 & !( ///
										((rpdiy3>rpyrma) ) | ///
										((rpdiy3>rpyrma2) ) | ///
										((rpdiy3>rpyrma4) ) | ///
										((rpdiy3>rpyrma5) ) | ///
										((rpdiy3>rpyrma6) ) | ///
										((rpdiy3>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length4w`wavenum' =.									
replace length4w`wavenum' = r`wavenum'iwindy-rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) ///
																												 & ( (rpyrma4>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma4>=rpyrma5) | inlist(rpyrma5,-1,.) ) /// Corrected by MV
																												 & ( (rpyrma4>=rpyrma6) | inlist(rpyrma6,-1,.) ) /// Corrected by MV
																												 & ( (rpyrma4>=rpyrma7) | inlist(rpyrma7,-1,.) ) /// Corrected by MV
																												 & ( rpfin4==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length4w`wavenum' = rpdyr4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdyr4,-9,-8,-2,-1,.) & rpdiv4==1 & !( ///
										((rpdyr4>rpyrma) ) | ///
										((rpdyr4>rpyrma2) ) | ///
										((rpdyr4>rpyrma3) ) | ///
										((rpdyr4>rpyrma5) ) | ///
										((rpdyr4>rpyrma6) ) | ///
										((rpdyr4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length4w`wavenum' = rpdiy4 - rpyrma4 if !inlist(rpyrma4,-9,-8,-1,.) & !inlist(rpdiy4,-9,-8,-2,-1,.) & rpfin4==2 & !( ///
										((rpdiy4>rpyrma) ) | ///
										((rpdiy4>rpyrma2) ) | ///
										((rpdiy4>rpyrma3) ) | ///
										((rpdiy4>rpyrma5) ) | ///
										((rpdiy4>rpyrma6) ) | ///
										((rpdiy4>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length5w`wavenum' =.									
replace length5w`wavenum' = r`wavenum'iwindy-rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) ///
																												 & ( (rpyrma5>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma6) | inlist(rpyrma6,-1,.) ) ///
																												 & ( (rpyrma5>=rpyrma7) | inlist(rpyrma7,-1,.) ) ///
																												 & ( rpfin5==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length5w`wavenum' = rpdyr5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdyr5,-9,-8,-2,-1,.) & rpdiv5==1 & !( ///
										((rpdyr5>rpyrma) ) | ///
										((rpdyr5>rpyrma2) ) | ///
										((rpdyr5>rpyrma3) ) | ///
										((rpdyr5>rpyrma4) ) | ///
										((rpdyr5>rpyrma6) ) | ///
										((rpdyr5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length5w`wavenum' = rpdiy5 - rpyrma5 if !inlist(rpyrma5,-9,-8,-1,.) & !inlist(rpdiy5,-9,-8,-2,-1,.) & rpfin5==2 & !( ///
										((rpdiy5>rpyrma) ) | ///
										((rpdiy5>rpyrma2) ) | ///
										((rpdiy5>rpyrma3) ) | ///
										((rpdiy5>rpyrma4) ) | ///
										((rpdiy5>rpyrma6) ) | ///
										((rpdiy5>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length6w`wavenum' =.									
replace length6w`wavenum' = r`wavenum'iwindy-rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) ///
																												 & ( (rpyrma6>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma6>=rpyrma7) | inlist(rpyrma7,-1,.) ) /// Corrected by MV
																												 & ( rpfin6==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length6w`wavenum' = rpdyr6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdyr6,-9,-8,-2,-1,.) & rpdiv6==1 & !( ///
										((rpdyr6>rpyrma) ) | ///
										((rpdyr6>rpyrma2) ) | ///
										((rpdyr6>rpyrma3) ) | ///
										((rpdyr6>rpyrma4) ) | ///
										((rpdyr6>rpyrma5) ) | ///
										((rpdyr6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length6w`wavenum' = rpdiy6 - rpyrma6 if !inlist(rpyrma6,-9,-8,-1,.) & !inlist(rpdiy6,-9,-8,-2,-1,.) & rpfin6==2 & !( ///
										((rpdiy6>rpyrma) ) | ///
										((rpdiy6>rpyrma2) ) | ///
										((rpdiy6>rpyrma3) ) | ///
										((rpdiy6>rpyrma4) ) | ///
										((rpdiy6>rpyrma5) ) | ///
										((rpdiy6>rpyrma7) ) ) ///
										& !missing(r`wavenum'iwindy)
										
gen	length7w`wavenum' =.									
replace length7w`wavenum' = r`wavenum'iwindy-rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) ///
																												 & ( (rpyrma7>=rpyrma) | inlist(rpyrma,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma2) | inlist(rpyrma2,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma3) | inlist(rpyrma3,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma4) | inlist(rpyrma4,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma5) | inlist(rpyrma5,-1,.) ) ///
																												 & ( (rpyrma7>=rpyrma6) | inlist(rpyrma6,-1,.) ) /// Corrected by MV
																												 & ( rpfin7==-1 & w`wavenum'conhw==1 ) ///
																												 & !missing(r`wavenum'iwindy) ///
																												 & !inlist(r`wavenum'mcurln,.l,.s,.d,.m,.r)
replace length7w`wavenum' = rpdyr7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdyr7,-9,-8,-2,-1,.) & rpdiv7==1 & !( ///
										((rpdyr7>rpyrma) ) | ///
										((rpdyr7>rpyrma2) ) | ///
										((rpdyr7>rpyrma3) ) | ///
										((rpdyr7>rpyrma4) ) | ///
										((rpdyr7>rpyrma5) ) | ///
										((rpdyr7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)
replace length7w`wavenum' = rpdiy7 - rpyrma7 if !inlist(rpyrma7,-9,-8,-1,.) & !inlist(rpdiy7,-9,-8,-2,-1,.) & rpfin7==2 & !( ///
										((rpdiy7>rpyrma) ) | ///
										((rpdiy7>rpyrma2) ) | ///
										((rpdiy7>rpyrma3) ) | ///
										((rpdiy7>rpyrma4) ) | ///
										((rpdiy7>rpyrma5) ) | ///
										((rpdiy7>rpyrma6) ) ) ///
										& !missing(r`wavenum'iwindy)

* INFO ONLY AVAILABLE UP TO 7TH LOOP, SO HAVE NOT INFO FOR 8 => CANNOT RUN!

*********************************************************************
***Length of Longest Marriage (Including Current)***
*********************************************************************

**wave respondent length of longest marriage
gen r`wavenum'mlen =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mlen = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mlen = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpyrma==-8 | rpyrma2==-8 | rpyrma3==-8 | rpyrma4==-8 | rpyrma5==-8 | rpyrma6==-8 | rpyrma7==-8 ) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdyr==-8 | rpdyr2==-8 | rpdyr3==-8 | rpdyr4==-8 | rpdyr5==-8 | rpdyr6==-8 | rpdyr7==-8 ) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpfin==-8 | rpfin2==-8 | rpfin3==-8 | rpfin4==-8 | rpfin5==-8 | rpfin6==-8 | rpfin7==-8 ) & inw`wavenum'==1
replace r`wavenum'mlen = .d if (rpdiy==-8 | rpdiy2==-8 | rpdiy3==-8 | rpdiy4==-8 | rpdiy5==-8 | rpdiy6==-8 | rpdiy7==-8 ) & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpyrma, rpyrma2, rpyrma3, rpyrma4, rpyrma5, rpyrma6, rpyrma7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdyr, rpdyr2, rpdyr3, rpdyr4, rpdyr5, rpdyr6, rpdyr7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpfin, rpfin2, rpfin3, rpfin4, rpfin5, rpfin6, rpfin7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .m if missing(rpdiy, rpdiy2, rpdiy3, rpdiy4, rpdiy5, rpdiy6, rpdiy7) & rpmarst!=. & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpyrma==-9 | rpyrma2==-9 | rpyrma3==-9 | rpyrma4==-9 | rpyrma5==-9 | rpyrma6==-9 | rpyrma7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdyr==-9 | rpdyr2==-9 | rpdyr3==-9 | rpdyr4==-9 | rpdyr5==-9 | rpdyr6==-9 | rpdyr7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpfin==-9 | rpfin2==-9 | rpfin3==-9 | rpfin4==-9 | rpfin5==-9 | rpfin6==-9 | rpfin7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = .r if (rpdiy==-9 | rpdiy2==-9 | rpdiy3==-9 | rpdiy4==-9 | rpdiy5==-9 | rpdiy6==-9 | rpdiy7==-9) & inw`wavenum'==1
replace r`wavenum'mlen = max(length1w`wavenum', length2w`wavenum', length3w`wavenum', length4w`wavenum', length5w`wavenum', length6w`wavenum', length7w`wavenum') if !inlist(r`wavenum'mlen,.l,.s,.d,.m,.r)
label variable r`wavenum'mlen "r`wavenum'mlen:w`wavenum' r length of longest marriage"
drop length1w`wavenum'-length7w`wavenum'

***wave spouse length of longest marriage
gen s`wavenum'mlen =.
spouse r`wavenum'mlen, result(s`wavenum'mlen) wave(`wavenum')
label variable s`wavenum'mlen "s`wavenum'mlen:w`wavenum' s length of longest marriage"

*check

***flag for current marital status: without partnership***
*wave 3 respondent current marital status flag
gen r`wavenum'mstatf =.
forvalues w=3/`pre_wavenum' {
	replace r`wavenum'mstatf = .b if inw`w'!=1 & inw`wavenum'==1
}
replace r`wavenum'mstatf = .l if rpmarst==. & inw`wavenum'==1
replace r`wavenum'mstatf = 0 if (inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 0) | ( r`wavenum'mstath == 8 & r`wavenum'mnev == 1 )
replace r`wavenum'mstatf = 1 if r`wavenum'mstath == 8 & r`wavenum'mnev == 0 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = 2 if inlist(r`wavenum'mstath,1,3,4,5,7) & r`wavenum'mnev == 1 & !missing(r`wavenum'mstath, r`wavenum'mnev)
replace r`wavenum'mstatf = .m if r`wavenum'mstatf==. & inw`wavenum' == 1
label variable r`wavenum'mstatf "r`wavenum'mstatf:w`wavenum' r mstath-flag diff w/marhist"

**wave 3 spouse current marital status flag
gen s`wavenum'mstatf =.
spouse r`wavenum'mstatf, result(s`wavenum'mstatf) wave(3)
label variable s`wavenum'mstatf "s`wavenum'mstatf:w`wavenum' s mstath-flag diff w/marhist"

*value labels
label values r`wavenum'mstatf mstatf
label values s`wavenum'mstatf mstatf

*check


*********************************************************************
***Place of Birth***
*********************************************************************
																				   		 
***place of birth***
*respondent place of birth (update)
missing_w`wavenum' fqcbthmr if missing(rabplace), result(rabplace)
replace rabplace = 1 if fqcbthmr == 1 & missing(rabplace)
replace rabplace = 11 if fqcbthmr == 2 & missing(rabplace)

**wave spouse place of birth
gen s`wavenum'bplace =.
spouse rabplace, result(s`wavenum'bplace) wave(`wavenum')
label variable s`wavenum'bplace "s`wavenum'bplace:w`wavenum' s place of birth"

**value labels
label values s`wavenum'bplace place

*check

*********************************************************************
***Whether Born in Country of Interview***
*********************************************************************
		
***whether born in country of interview***
*respondent whether born in country of interview (update)
missing_w`wavenum' fqcbthmr if missing(rabcountry), result(rabcountry)
replace rabcountry = 0 if fqcbthmr==2 & mi(rabcountry)
replace rabcountry = 1 if fqcbthmr==1 & mi(rabcountry)

*wave 8spouse whether born in country of interview
gen s`wavenum'bcountry = .
spouse rabcountry, result(s`wavenum'bcountry) wave(`wavenum')
label variable s`wavenum'bcountry "s`wavenum'bcountry:w`wavenum' s born in country of interview"
label values s`wavenum'bcountry bornin


*check 


*********************************************************************
***Death Dates***
*********************************************************************

***death date***
*wave 8respondent death year
replace radyear = .x if inw8 == 1
*replace radyear = EiDateY if inrange(EiDateY,2000,2020)

*wave 8spouse death year
gen s`wavenum'dyear = .
spouse radyear, result(s`wavenum'dyear) wave(`wavenum')
label variable s`wavenum'dyear "s`wavenum'dyear:w8 s death year"

*********************************************************************
***Religion***
*********************************************************************

***religion***
**wave 8respondent religion
*gen rarelig = .
*replace rarelig = .d if screwh == -8 & inw`wavenum' == 1
*replace rarelig = .r if screwh == -9 & inw`wavenum' == 1
*replace rarelig = .m if inlist(screwh,-2,-1) & inw`wavenum' == 1
*replace rarelig = .i if screwh == 86 & inw`wavenum' == 1
*replace rarelig = 1 if screwh == 2 & inw`wavenum' == 1
*replace rarelig = 2 if screwh == 3 & inw`wavenum' == 1
*replace rarelig = 3 if screwh == 4 & inw`wavenum' == 1
*replace rarelig = 4 if screwh == 5 & inw`wavenum' == 1
*replace rarelig = 5 if screwh == 6 & inw`wavenum' == 1
*replace rarelig = 6 if screwh == 7 & inw`wavenum' == 1
*replace rarelig = 7 if screwh == 85 & inw`wavenum' == 1
*replace rarelig = 8 if screwh == 1 & inw`wavenum' == 1
*label variable rarelig "rarelig:r religion"
*label values rarelig religion
*
**wave 8spouse religion
*gen s`wavenum'relig_e = .
*spouse rarelig_e, result(s`wavenum'relig_e) wave(`wavenum')
*label variable s`wavenum'relig_e "s`wavenum'relig_e:w`wavenum' s religion"
*label values s`wavenum'relig_e religion


***drop ELSA index file raw variables***
drop `demo_w`wavenum'_index'

***drop ELSA previous wave specific core file raw variables***
drop pre_DhR pre_DhR? pre_DhR1? pre_DiMar

***drop ELSA wave specific core file raw variables***
drop `demo_w`wavenum'_core'

***drop ELSA wave specific financial derived file raw variables***
drop `demo_w`wavenum'_fina'
 
***drop ELSA wave specific life history data variables***
drop `demo_w`wavenum'_hist'

******************************************************************************************

*set top wave number
local maxwave=5
local pre_maxwave=`maxwave'-1


*person number (character)
gen pnc = string(pn)
label variable pnc "person number within household (char)"

*unique id (character)
gen idauniqc = string(idauniq)
label variable idauniqc "unique individual serial number /6-char"

*wave 1 respondent eligibility
replace raelsamp = 0 if missing(raelsamp)


******************************************************************************************


***self-report of health, US Scale***
label define health ///
   1 "1.Excellent"  ///
   2 "2.Very good" ///
   3 "3.Good" ///
   4 "4.Fair" ///
   5 "5.Poor" ///
   .p ".p:Proxy interview"  ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
  
***position of self-report of health***
label define health_pos ///
	1 "1.beginning of module" ///
	2 "2.end of module" ///
  .p ".p:Proxy interview"
	
***self-report of health, European scale***
label define health_alt ///
   1 "1.Very good"  ///
   2 "2.Good" ///
   3 "3.Fair" ///
   4 "4.Bad" ///
   5 "5.Very bad" ///
   .p ".p:Proxy interview" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
	 
***Whether health limits work***
label define limitwork ///
   0 "0.no"  ///
   1 "1.yes" ///
   .p ".p:Proxy interview" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
   
***Some difficulty with ADLs, IADLs, and other functional limitations***
label define diff ///
   0 "0.No"  ///
   1 "1.Yes"  ///
   .p ".p:Proxy interview" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"

***CESD***
label define cesd ///
   0 "0.no"  ///
   1 "1.yes" ///
   .p ".p:Proxy interview" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
	 
***Health problems***
label define health_problems ///
   0 "0.no"  ///
   1 "1.yes" ///
   .s ".s:Skipped due to gender difference" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK" ///
	 .a ".a:less than age 60"
	 
***preventive tests***
label define health_prev ///
   0 "0.no"  ///
   1 "1.yes" ///
   .s ".s:Skipped due to gender difference" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK" ///
	 .a ".a:age ineligible"
	 
label define health_problems_flag ///
   0 "0.No dispute, no change" ///
   2 "2.Disp, already N " ///
   3 "3.Disp, set to N" ///
   4 "4.Disp aft, already N" ///
   6 "6.Disp aft, set to N" 
	 
***Physical activity***
label define activity ///
   2 "2.> 1 per week"  ///
   3 "3.1 per week"  ///
   4 "4.1-3 per mon"  ///
   5 "5.hardly ever or never" ///
   .p ".p:Proxy interview" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"

***Drinks alcohol***
label define ever_drink ///
   0 "0.no"  ///
   1 "1.yes"  ///
   .p ".p:Proxy interview" ///
   .r ".r:Refuse" ///
	 .m ".m:oth missing" ///
	 .d ".d:DK" ///
	 .i ".i:Invalid answer" ///
	 .c ".c:no self-completion interview"
	 
label define drinks_flag ///
	0 "0.0 or doesnt drink" ///
	  1 "1" ///
	  2 "2" ///
	  3 "3" ///
	  4 "4" ///
	  5 "5" ///
	  6 "6" ///
	  7 "7" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK" ///
	 .c ".c:no self-completion interview"
   
***Smoked cigarettes***
label define smokes ///
	0 "0.No" ///
	1 "1.Yes"  ///
	.p ".p:Proxy interview" ///
	.r ".r:Refuse" ///
	.m ".m:Oth missing" ///
	.d ".d:DK"
   
***change in self-reported health flag***
label define change_flag ///
	0 "0.Used IW-1" ///
	1 "1.Used IW-2" ///
	2 "2.Used IW-3" ///
	3 "3.Used IW-4" ///
	4 "4.Used IW-5" ///
	5 "5.Used IW-6" ///
	6 "6.Used IW-7" ///
	9 "9.Missing"
	
***change in condition since last interview
label define cond_since_p ///
	0 "0.no" ///
	1 "1.yes" ///
	.c ".c:no prev IW" ///
	.r ".r:Refuse" ///
	.m ".m:Oth missing" ///
	.d ".d:DK" ///
	.a ".a:age less than 60"
	
***BMI categorization
label define bmicate ///
	1 "1.underweight less than 18.5" ///
	2 "2.normal weight from 18.5 to 24.9" ///
	3 "3.pre-obesity from 25 to 29.9" ///
	4 "4.obesity class 1 from 30 to 34.9" ///
	5 "5.obesity class 2 from 35 to 39.9" ///
	6 "6.obesity class 3 greater than 40" ///
	.n ".n:no nurse interview" ///
	.m ".m:oth missing" ///
	.s ".s:repondent new to wave 7, 8" ///
	.p ".p:proxy interview" ///
	.b ".b:measure not usable" ///
	.r ".r:refuse" ///
	.o ".o:measure not obtained" ///
	.a ".a:measure not attempted" ///
	.e ".e:missing by error"
 
******************************************************************************************


*set wave number
local wavenum=1
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 1 core data***
local health_w1_core askpx1 ///
										 hehelf hehelfb hegenh hegenhb ///
										 heada0? heada1? headb0? headb1? ///
										 psceda pscedb pscedc pscedd pscede pscedf pscedg pscedh ///
										 hedib0? hedib1? hedim0? heopt? ///
										 heacta heactb heactc ///
										 heala hesmk heska heskb heskc hecig hefrac hejic 
merge 1:1 idauniq using "$wave_1_core", keepusing(`health_w1_core') nogen


***self-report of health, US scale***
*wave 1 respondent self-report of health
gen r1shlt =.
missing_w1 hehelf hehelfb, result(r1shlt)
replace r1shlt = .p if askpx1 == 1
replace r1shlt = hehelf if inrange(hehelf,1,5)
replace r1shlt = hehelfb if inrange(hehelfb,1,5)
label variable r1shlt "r1shlt:w1 r self-report of health"

*wave 1 spouse self-report of health
gen s1shlt =.
spouse r1shlt, result(s1shlt) wave(1)
label variable s1shlt "s1shlt:w1 s self-report of health"

*wave 1 respondent position flag for self-report of health
gen r1shltf =.
replace r1shltf = .p if askpx1 == 1
replace r1shltf = 1 if inlist(hehelf,-9,-8,1,2,3,4,5)
replace r1shltf = 2 if inlist(hehelfb,-9,-8,1,2,3,4,5)
label variable r1shltf "r1shltf:w1 r flag position of self-report health"

*wave 1 spouse position flag for self-report of health
gen s1shltf =.
spouse r1shltf, result(s1shltf) wave(1)
label variable s1shltf "s1shltf:w1 s flag position of self-report health"

*value labels
label values r1shlt health
label values s1shlt health

label values r1shltf health_pos
label values s1shltf health_pos

*check 

***self-report of health, European scale***
*wave 1 respondent self-report of health, European scale
gen r1shlta =.
missing_w1 hegenh hegenhb, result(r1shlta)
replace r1shlta = .p if askpx1 == 1
replace r1shlta = hegenh if inrange(hegenh,1,5)
replace r1shlta = hegenhb if inrange(hegenhb,1,5)
label variable r1shlta "r1shlta:w1 r self-report of health, European scale"

*wave 1 spouse self-report of health, European scale
gen s1shlta =.
spouse r1shlta, result(s1shlta) wave(1)
label variable s1shlta "s1shlta:w1 s self-report of health, European scale"

*wave 1 respondent position flag for self-report of health, European scale
gen r1shltaf =.
replace r1shltaf = .p if askpx1 == 1
replace r1shltaf = 1 if inlist(hegenh,-9,-8,1,2,3,4,5)
replace r1shltaf = 2 if inlist(hegenhb,-9,-8,1,2,3,4,5)
label variable r1shltaf "r1shltaf:w1 r flag position of self-report health, European scale"

*wave 1 spouse position flag for self-report of health, European scale
gen s1shltaf =.
spouse r1shltaf, result(s1shltaf) wave(1)
label variable s1shltaf "s1shltaf:w1 s flag position of self-report health, European scale"

*value labels
label values r1shlta health_alt
label values s1shlta health_alt

label values r1shltaf health_pos
label values s1shltaf health_pos

*check 

***Some difficulty walking cross room***
*wave 1 respondent difficulty walking across room
gen r1walkra =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1walkra)	
replace r1walkra = .p if askpx1 == 1
replace r1walkra = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1walkra = 1 if headb01==2 ///
											 | headb02==2 ///
											 | headb03==2 ///
											 | headb04==2 ///
											 | headb05==2 ///
											 | headb06==2 ///
											 | headb07==2 ///
											 | headb08==2 ///
											 | headb09==2 ///
											 | headb10==2 ///
											 | headb11==2 ///
											 | headb12==2 ///
											 | headb13==2 ///
											 | headb14==2
label variable r1walkra "r1walkra:w1 R Some Diff-Walk across room"

*wave 1 spouse difficulty walking across room
gen s1walkra =.
spouse r1walkra, result(s1walkra) wave(1)
label variable s1walkra "s1walkra:w1 S Some Diff-Walk across room"

*value labels
label values r1walkra diff
label values s1walkra diff

*check 

***Some difficulty dressing***
*wave 1 respondent difficulty dressing
gen r1dressa =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1dressa)		
replace r1dressa = .p if askpx1 == 1
replace r1dressa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1dressa = 1 if headb01== 1 ///
											 | headb02== 1 ///
											 | headb03== 1 ///
											 | headb04== 1 ///
											 | headb05== 1 ///
											 | headb06== 1 ///
											 | headb07== 1 ///
											 | headb08== 1 ///
											 | headb09== 1 ///
											 | headb10== 1 ///
											 | headb11== 1 ///
											 | headb12== 1 ///
											 | headb13== 1 ///
											 | headb14== 1
label variable r1dressa "r1dressa:w1 R Some Diff-Dressing"

*wave 1 spouse difficulty dressing
gen s1dressa =.
spouse r1dressa, result(s1dressa) wave(1)
label variable s1dressa "s1dressa:w1 S Some Diff-Dressing"

*value labels
label values r1dressa diff
label values s1dressa diff

*check 

***Some difficulty bathing, shower***
*wave 1 respondent difficulty bathing, shower
gen r1batha =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1batha)
replace r1batha = .p if askpx1 == 1
replace r1batha = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1batha = 1 if headb01==3 ///
											 | headb02==3 ///
											 | headb03==3 ///
											 | headb04==3 ///
											 | headb05==3 ///
											 | headb06==3 ///
											 | headb07==3 ///
											 | headb08==3 ///
											 | headb09==3 ///
											 | headb10==3 ///
											 | headb11==3 ///
											 | headb12==3 ///
											 | headb13==3 ///
											 | headb14==3
label variable r1batha "r1batha:w1 R Some Diff-Bathing, shower"

*wave 1 spouse difficulty bathing, shower
gen s1batha =.
spouse r1batha, result(s1batha) wave(1)
label variable s1batha "s1batha:w1 S Some Diff-Bathing, shower"

*value labels
label values r1batha diff
label values s1batha diff

*check 

***Some difficulty eating***
*wave 1 respondent difficulty eating
gen r1eata =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1eata)
replace r1eata = .p if askpx1 == 1
replace r1eata = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1eata = 1 if headb01==4 ///
											 | headb02==4 ///
											 | headb03==4 ///
											 | headb04==4 ///
											 | headb05==4 ///
											 | headb06==4 ///
											 | headb07==4 ///
											 | headb08==4 ///
											 | headb09==4 ///
											 | headb10==4 ///
											 | headb11==4 ///
											 | headb12==4 ///
											 | headb13==4 ///
											 | headb14==4
label variable r1eata "r1eata:w1 R Some Diff-Eating"

*wave 1 spouse difficulty eating
gen s1eata =.
spouse r1eata, result(s1eata) wave(1)
label variable s1eata "s1eata:w1 S Some Diff-Eating"

*value labels
label values r1eata diff
label values s1eata diff

*check 

***Some difficulty getting in/out of bed***
*wave 1 respondent difficulty getting in/out of bed
gen r1beda =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1beda)
replace r1beda = .p if askpx1 == 1
replace r1beda = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1beda = 1 if headb01==5 ///
											 | headb02==5 ///
											 | headb03==5 ///
											 | headb04==5 ///
											 | headb05==5 ///
											 | headb06==5 ///
											 | headb07==5 ///
											 | headb08==5 ///
											 | headb09==5 ///
											 | headb10==5 ///
											 | headb11==5 ///
											 | headb12==5 ///
											 | headb13==5 ///
											 | headb14==5
label variable r1beda "r1beda:w1 R Some Diff-Get in/out bed"

*wave 1 spouse difficulty getting in/out of bed
gen s1beda =.
spouse r1beda, result(s1beda) wave(1)
label variable s1beda "s1beda:w1 S Some Diff-Get in/out bed"

*value labels
label values r1beda diff
label values s1beda diff

*check 


***Some difficulty using the toilet***
*wave 1 respondent difficulty using the toilet
gen r1toilta =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1toilta)			
replace r1toilta = .p if askpx1 == 1
replace r1toilta = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1toilta = 1 if headb01==6 ///
											 | headb02==6 ///
											 | headb03==6 ///
											 | headb04==6 ///
											 | headb05==6 ///
											 | headb06==6 ///
											 | headb07==6 ///
											 | headb08==6 ///
											 | headb09==6 ///
											 | headb10==6 ///
											 | headb11==6 ///
											 | headb12==6 ///
											 | headb13==6 ///
											 | headb14==6
label variable r1toilta "r1toilta:w1 R Some Diff-Using the toilet"

*wave 1 spouse difficulty using the toilet
gen s1toilta =.
spouse r1toilta, result(s1toilta) wave(1)
label variable s1toilta "s1toilta:w1 S Some Diff-Using the toilet"

*value labels
label values r1toilta diff
label values s1toilta diff

*check 

***Some difficulty using using a map***
*wave 1 respondent difficulty using a map
gen r1mapa =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1mapa)	
replace r1mapa = .p if askpx1 == 1
replace r1mapa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1mapa = 1 if headb01==7 ///
											 | headb02==7 ///
											 | headb03==7 ///
											 | headb04==7 ///
											 | headb05==7 ///
											 | headb06==7 ///
											 | headb07==7 ///
											 | headb08==7 ///
											 | headb09==7 ///
											 | headb10==7 ///
											 | headb11==7 ///
											 | headb12==7 ///
											 | headb13==7 ///
											 | headb14==7
label variable r1mapa "r1mapa:w1 R Some Diff-Use a map"

*wave 1 spouse difficulty using a map
gen s1mapa =.
spouse r1mapa, result(s1mapa) wave(1)
label variable s1mapa "s1mapa:w1 S Some Diff-Use a map"

*value labels
label values r1mapa diff
label values s1mapa diff

*check 

***Some difficulty using a telephone***
*wave 1 respondent difficulty using a telephone
gen r1phonea =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1phonea)			
replace r1phonea = .p if askpx1 == 1
replace r1phonea = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1phonea = 1 if headb01== 10 ///
											 | headb02== 10 ///
											 | headb03== 10 ///
											 | headb04== 10 ///
											 | headb05== 10 ///
											 | headb06== 10 ///
											 | headb07== 10 ///
											 | headb08== 10 ///
											 | headb09== 10 ///
											 | headb10== 10 ///
											 | headb11== 10 ///
											 | headb12== 10 ///
											 | headb13== 10 ///
											 | headb14== 10
label variable r1phonea "r1phonea:w1 R Some Diff-Use a telephone"

*wave 1 spouse difficulty using a telephone
gen s1phonea =.
spouse r1phonea, result(s1phonea) wave(1)
label variable s1phonea "s1phonea:w1 S Some Diff-Use a telephone"

*value labels
label values r1phonea diff
label values s1phonea diff

*check 

***Some difficulty manging money***
*wave 1 respondent difficulty manging money
gen r1moneya =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1moneya)				
replace r1moneya = .p if askpx1 == 1
replace r1moneya = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1moneya = 1 if headb01== 13 ///
											 | headb02== 13 ///
											 | headb03== 13 ///
											 | headb04== 13 ///
											 | headb05== 13 ///
											 | headb06== 13 ///
											 | headb07== 13 ///
											 | headb08== 13 ///
											 | headb09== 13 ///
											 | headb10== 13 ///
											 | headb11== 13 ///
											 | headb12== 13 ///
											 | headb13== 13 ///
											 | headb14== 13
label variable r1moneya "r1moneya:w1 R Some Diff-Managing money"

*wave 1 spouse difficulty manging money
gen s1moneya =.
spouse r1moneya, result(s1moneya) wave(1)
label variable s1moneya "s1moneya:w1 S Some Diff-Managing money"

*value labels
label values r1moneya diff
label values s1moneya diff

*check 

***Some difficulty taking medications***
*wave 1 respondent difficulty taking medications
gen r1medsa =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1medsa)					
replace r1medsa = .p if askpx1 == 1
replace r1medsa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1medsa = 1 if headb01== 11 ///
											 | headb02== 11 ///
											 | headb03== 11 ///
											 | headb04== 11 ///
											 | headb05== 11 ///
											 | headb06== 11 ///
											 | headb07== 11 ///
											 | headb08== 11 ///
											 | headb09== 11 ///
											 | headb10== 11 ///
											 | headb11== 11 ///
											 | headb12== 11 ///
											 | headb13== 11 ///
											 | headb14== 11
label variable r1medsa "r1medsa:w1 R Some Diff-Take medications"

*wave 1 spouse difficulty taking medications
gen s1medsa =.
spouse r1medsa, result(s1medsa) wave(1)
label variable s1medsa "s1medsa:w1 S Some Diff-Take medications"

*value labels
label values r1medsa diff
label values s1medsa diff

*check 

***Some difficulty shopping for groceries***
*wave 1 respondent difficulty shopping for groceries
gen r1shopa =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1shopa)			
replace r1shopa = .p if askpx1 == 1
replace r1shopa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1shopa = 1 if headb01==9 ///
											 | headb02==9 ///
											 | headb03==9 ///
											 | headb04==9 ///
											 | headb05==9 ///
											 | headb06==9 ///
											 | headb07==9 ///
											 | headb08==9 ///
											 | headb09==9 ///
											 | headb10==9 ///
											 | headb11==9 ///
											 | headb12==9 ///
											 | headb13==9 ///
											 | headb14==9
label variable r1shopa "r1shopa:w1 R Some Diff-Shop for grocery"

*wave 1 spouse difficulty shopping for groceries
gen s1shopa =.
spouse r1shopa, result(s1shopa) wave(1)
label variable s1shopa "s1shopa:w1 S Some Diff-Shop for grocery"

*value labels
label values r1shopa diff
label values s1shopa diff

*check 

***Some difficulty preparing a hot meal***
*wave 1 respondent difficulty preparing a hot meal
gen r1mealsa =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1mealsa)
replace r1mealsa = .p if askpx1 == 1
replace r1mealsa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1mealsa = 1 if headb01==8 ///
											 | headb02==8 ///
											 | headb03==8 ///
											 | headb04==8 ///
											 | headb05==8 ///
											 | headb06==8 ///
											 | headb07==8 ///
											 | headb08==8 ///
											 | headb09==8 ///
											 | headb10==8 ///
											 | headb11==8 ///
											 | headb12==8 ///
											 | headb13==8 ///
											 | headb14==8
label variable r1mealsa "r1mealsa:w1 R Some Diff-Prepare hot meal"

*wave 1 spouse difficulty preparing a hot meal
gen s1mealsa =.
spouse r1mealsa, result(s1mealsa) wave(1)
label variable s1mealsa "s1mealsa:w1 S Some Diff-Prepare hot meal"

*value labels
label values r1mealsa diff
label values s1mealsa diff

*check 

***Some difficulty doing house work***
*wave 1 respondent difficulty doing house work
gen r1housewka =.
missing_w1 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 ///
					 headb14 , result(r1housewka)
replace r1housewka = .p if askpx1 == 1
replace r1housewka = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 ) ///
											 | (inrange(headb14,1,13) | headb14==96 )
replace r1housewka = 1 if headb01==12 ///
											 | headb02==12 ///
											 | headb03==12 ///
											 | headb04==12 ///
											 | headb05==12 ///
											 | headb06==12 ///
											 | headb07==12 ///
											 | headb08==12 ///
											 | headb09==12 ///
											 | headb10==12 ///
											 | headb11==12 ///
											 | headb12==12 ///
											 | headb13==12 ///
											 | headb14==12
label variable r1housewka "r1housewka:w1 R Some Diff-Doing work around the house or garden"

*wave 1 spouse difficulty preparing a hot meal
gen s1housewka =.
spouse r1housewka, result(s1housewka) wave(1)
label variable s1housewka "s1housewka:w1 S Some Diff-Doing work around the house or garden"

*value labels
label values r1housewka diff
label values s1housewka diff

*check 

***Difficulty Walking 100m***
*Wave 1 respondent difficulty walking 100m
gen r1walk100a =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1walk100a)
replace r1walk100a = .p if askpx1 == 1
replace r1walk100a = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1walk100a = 1 if heada01== 1 ///
											 | heada02== 1 ///
											 | heada03== 1 ///
											 | heada04== 1 ///
											 | heada05== 1 ///
											 | heada06== 1 ///
											 | heada07== 1 ///
											 | heada08== 1 ///
											 | heada09== 1 ///
											 | heada10== 1 ///
											 | heada11== 1
label variable r1walk100a "r1walk100a:w1 R Some Diff-Walk 100y"

*wave 1 spouse difficulty walking 100m
gen s1walk100a =.
spouse r1walk100a, result(s1walk100a) wave(1)
label variable s1walk100a "s1walk100a:w1 S Some Diff-Walk 100y"

*value labels
label values r1walk100a diff
label values s1walk100a diff

*check 

***Difficulty sitting for 2 hours***
*Wave 1 respondent difficulty sitting for 2 hours
gen r1sita =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1sita)
replace r1sita = .p if askpx1 == 1
replace r1sita = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1sita = 1 if heada01==2 ///
											 | heada02==2 ///
											 | heada03==2 ///
											 | heada04==2 ///
											 | heada05==2 ///
											 | heada06==2 ///
											 | heada07==2 ///
											 | heada08==2 ///
											 | heada09==2 ///
											 | heada10==2 ///
											 | heada11==2
label variable r1sita "r1sita:w1 R Some Diff-Sit for 2 hours"

*wave 1 spouse difficulty sitting for 2 hours
gen s1sita =.
spouse r1sita, result(s1sita) wave(1)
label variable s1sita "s1sita:w1 S Some Diff-Sit for 2 hours"

*value labels
label values r1sita diff
label values s1sita diff

*check 

***Difficulty getting up from a chair***
*Wave 1 respondent difficulty getting up from a chair
gen r1chaira =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1chaira)	
replace r1chaira = .p if askpx1 == 1
replace r1chaira = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1chaira = 1 if heada01==3 ///
											 | heada02==3 ///
											 | heada03==3 ///
											 | heada04==3 ///
											 | heada05==3 ///
											 | heada06==3 ///
											 | heada07==3 ///
											 | heada08==3 ///
											 | heada09==3 ///
											 | heada10==3 ///
											 | heada11==3
label variable r1chaira "r1chaira:w1 R Some Diff-Get up fr chair"

*wave 1 spouse difficulty getting up from a chair
gen s1chaira =.
spouse r1chaira, result(s1chaira) wave(1)
label variable s1chaira "s1chaira:w1 S Some Diff-Get up fr chair"

*value labels
label values r1chaira diff
label values s1chaira diff

*check 

***Difficulty climbing several flights of stairs***
*Wave 1 respondent difficulty climbing several flights of stairs
gen r1climsa =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1climsa)
replace r1climsa = .p if askpx1 == 1
replace r1climsa = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1climsa = 1 if heada01==4 ///
											 | heada02==4 ///
											 | heada03==4 ///
											 | heada04==4 ///
											 | heada05==4 ///
											 | heada06==4 ///
											 | heada07==4 ///
											 | heada08==4 ///
											 | heada09==4 ///
											 | heada10==4 ///
											 | heada11==4
label variable r1climsa "r1climsa:w1 R Some Diff-Clmb sev flt str"

*wave 1 spouse difficulty climbing several flights of stairs
gen s1climsa =.
spouse r1climsa, result(s1climsa) wave(1)
label variable s1climsa "s1climsa:w1 S Some Diff-Clmb sev flt str"

*value labels
label values r1climsa diff
label values s1climsa diff

*check 

***Difficulty climbing one flight of stairs***
*Wave 1 respondent difficulty climbing one flight of stairs
gen r1clim1a =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1clim1a)		
replace r1clim1a = .p if askpx1 == 1
replace r1clim1a = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1clim1a = 1 if heada01==5 ///
											 | heada02==5 ///
											 | heada03==5 ///
											 | heada04==5 ///
											 | heada05==5 ///
											 | heada06==5 ///
											 | heada07==5 ///
											 | heada08==5 ///
											 | heada09==5 ///
											 | heada10==5 ///
											 | heada11==5
label variable r1clim1a "r1clim1a:w1 R Some Diff-Clmb 1 flt str"

*wave 1 spouse difficulty climbing one flight of stairs
gen s1clim1a =.
spouse r1clim1a, result(s1clim1a) wave(1)
label variable s1clim1a "s1clim1a:w1 S Some Diff-Clmb 1 flt str"

*value labels
label values r1clim1a diff
label values s1clim1a diff

*check 

***Difficulty stooping/keeling/crouching***
*Wave 1 respondent difficulty stooping/keeling/crouching
gen r1stoopa =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1stoopa)		
replace r1stoopa = .p if askpx1 == 1
replace r1stoopa = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1stoopa = 1 if heada01==6 ///
											 | heada02==6 ///
											 | heada03==6 ///
											 | heada04==6 ///
											 | heada05==6 ///
											 | heada06==6 ///
											 | heada07==6 ///
											 | heada08==6 ///
											 | heada09==6 ///
											 | heada10==6 ///
											 | heada11==6
label variable r1stoopa "r1stoopa:w1 R Some Diff-Stoop/Kneel/Crch"

*wave 1 spouse difficulty stooping/keeling/crouching
gen s1stoopa =.
spouse r1stoopa, result(s1stoopa) wave(1)
label variable s1stoopa "s1stoopa:w1 S Some Diff-Stoop/Kneel/Crch"

*value labels
label values r1stoopa diff
label values s1stoopa diff

*check 

***Difficulty lifting/carrying 10lbs***
*Wave 1 respondent difficulty lifting/carrying 10lbs
gen r1lifta =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1lifta)	
replace r1lifta = .p if askpx1 == 1
replace r1lifta = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1lifta = 1 if heada01==9 ///
											 | heada02==9 ///
											 | heada03==9 ///
											 | heada04==9 ///
											 | heada05==9 ///
											 | heada06==9 ///
											 | heada07==9 ///
											 | heada08==9 ///
											 | heada09==9 ///
											 | heada10==9 ///
											 | heada11==9
label variable r1lifta "r1lifta:w1 R Some Diff-Lift/carry 10lbs"

*wave 1 spouse difficulty lifting/carrying 10lbs
gen s1lifta =.
spouse r1lifta, result(s1lifta) wave(1)
label variable s1lifta "s1lifta:w1 S Some Diff-Lift/carry 10lbs"

*value labels
label values r1lifta diff
label values s1lifta diff

*check 

***Difficulty picking up a dime***
*Wave 1 respondent difficulty picking up a dime
gen r1dimea =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1dimea)
replace r1dimea = .p if askpx1 == 1
replace r1dimea = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1dimea = 1 if heada01== 10 ///
											 | heada02== 10 ///
											 | heada03== 10 ///
											 | heada04== 10 ///
											 | heada05== 10 ///
											 | heada06== 10 ///
											 | heada07== 10 ///
											 | heada08== 10 ///
											 | heada09== 10 ///
											 | heada10== 10 ///
											 | heada11== 10
label variable r1dimea "r1dimea:w1 R Some Diff-Pick up a 5p coin"

*wave 1 spouse difficulty picking up a dime
gen s1dimea =.
spouse r1dimea, result(s1dimea) wave(1)
label variable s1dimea "s1dimea:w1 S Some Diff-Pick up a 5p coin"

*value labels
label values r1dimea diff
label values s1dimea diff

*check 

***Difficulty reaching/extending arms up***
*Wave 1 respondent difficulty reaching/extending arms up
gen r1armsa =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1armsa)
replace r1armsa = .p if askpx1 == 1
replace r1armsa = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1armsa = 1 if heada01==7 ///
											 | heada02==7 ///
											 | heada03==7 ///
											 | heada04==7 ///
											 | heada05==7 ///
											 | heada06==7 ///
											 | heada07==7 ///
											 | heada08==7 ///
											 | heada09==7 ///
											 | heada10==7 ///
											 | heada11==7
label variable r1armsa "r1armsa:w1 R Some Diff-Rch/xtnd arms up"

*wave 1 spouse difficulty reaching/extending arms up
gen s1armsa =.
spouse r1armsa, result(s1armsa) wave(1)
label variable s1armsa "s1armsa:w1 S Some Diff-Rch/xtnd arms up"

*value labels
label values r1armsa diff
label values s1armsa diff

*check 

***Difficulty pushing/pulling a large object***
*Wave 1 respondent difficulty pushing/pulling a large object
gen r1pusha =.
missing_w1 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10 ///
					 heada11 , result(r1pusha)
replace r1pusha = .p if askpx1 == 1
replace r1pusha = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 ) ///
											 | (inrange(heada11,1,10) | heada11==96 )
replace r1pusha = 1 if heada01==8 ///
											 | heada02==8 ///
											 | heada03==8 ///
											 | heada04==8 ///
											 | heada05==8 ///
											 | heada06==8 ///
											 | heada07==8 ///
											 | heada08==8 ///
											 | heada09==8 ///
											 | heada10==8 ///
											 | heada11==8
label variable r1pusha "r1pusha:w1 R Some Diff-Push/pull lg obj"

*wave 1 spouse difficulty pushing/pulling a large object
gen s1pusha =.
spouse r1pusha, result(s1pusha) wave(1)
label variable s1pusha "s1pusha:w1 S Some Diff-Push/pull lg obj"

*value labels
label values r1pusha diff
label values s1pusha diff

*check 


***ADL Summary 0-5***
*Wave 1 respondent ADL Summary 0-5
H_ELSA_summary_v adla, wave(1) add(r1batha r1dressa r1eata r1beda r1walkra) proxy
local varlist_m = r(varlist_m)
label variable r1adla "r1adla:w1 R Some Diff-ADLs /0-5"

*wave 1 respondent Missing in ADL Summary
label variable r1adlam "r1adlam:w1 r Missings in Some Diff-ADLs /0-5"

*wave 1 spouse ADL Summary 0-5
gen s1adla =.
spouse r1adla, result(s1adla) wave(1)
label variable s1adla "s1adla:w1 S Some Diff-ADLs /0-5"

*wave 1 spouse Missings in ADL Summary 0-5
gen s1adlam =.
spouse r1adlam, result(s1adlam) wave(1)
label variable s1adlam "s1adlam:w1 S Missings in Some Diff-ADLs /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***ADL Wallace Summary 0-3***
*Wave 1 respondent ADL Wallace Summary 0-3
H_ELSA_summary_v adlwa, wave(1) add(r1batha r1dressa r1eata) proxy
local varlist_m = r(varlist_m)
label variable r1adlwa "r1adlwa:w1 R Some Diff-ADLs:Wallace /0-3"

*Wave 1 respondent Missings in ADL Wallace Summary 0-3
label variable r1adlwam "r1adlwam:w1 R Missings in Some Diff-ADLs:Wallace /0-3"

*wave 1 spouse ADL Wallace Summary 0-3
gen s1adlwa =.
spouse r1adlwa, result(s1adlwa) wave(1)
label variable s1adlwa "s1adlwa:w1 S Some Diff-ADLs:Wallace /0-3"

*wave 1 spouse Missings in ADL Wallace Summary 0-3
gen s1adlwam =.
spouse r1adlwam, result(s1adlwam) wave(1)
label variable s1adlwam "s1adlwam:w1 S Missings in Some Diff-ADLs:Wallace /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-3***
*Wave 1 respondent IADLs Summary 0-3
H_ELSA_summary_v iadla, wave(1) add(r1phonea r1moneya r1medsa) proxy
local varlist_m = r(varlist_m)
label variable r1iadla "r1iadla:w1 R Some Diff-IADLs: /0-3"

*Wave 1 respondent Missings in IADLs Summary 0-3
label variable r1iadlam "r1iadlam:w1 R Missings in Some Diff-IADLs: /0-3"

*wave 1 spouse IADLs Summary 0-3
gen s1iadla =.
spouse r1iadla, result(s1iadla) wave(1)
label variable s1iadla "s1iadla:w1 S Some Diff-IADLs: /0-3"

*wave 1 spouse Missings in IADLs Summary 0-3
gen s1iadlam =.
spouse r1iadlam, result(s1iadlam) wave(1)
label variable s1iadlam "s1iadlam:w1 S Missings in Some Diff-IADLs: /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-5***
*Wave 1 respondent IADLs Summary 0-5
H_ELSA_summary_v iadlza, wave(1) add(r1phonea r1moneya r1medsa r1shopa r1mealsa) proxy
local varlist_m = r(varlist_m)
label variable r1iadlza "r1iadlza:w1 R Some Diff-IADLs: /0-5"

*Wave 1 respondent Missings in IADLs Summary 0-5
label variable r1iadlzam "r1iadlzam:w1 R Missings in Some Diff-IADLs: /0-5"

*wave 1 spouse IADLs Summary 0-5
gen s1iadlza =.
spouse r1iadlza, result(s1iadlza) wave(1)
label variable s1iadlza "s1iadlza:w1 S Some Diff-IADLs: /0-5"

*wave 1 spouse Missings in IADLs Summary 0-5
gen s1iadlzam =.
spouse r1iadlzam, result(s1iadlzam) wave(1)
label variable s1iadlzam "s1iadlzam:w1 S Missings in Some Diff-IADLs: /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Mobility Summary***
*Wave 1 respondent Mobility Summary
H_ELSA_summary_v mobilb, wave(1) add(r1walk100a r1walkra r1climsa r1clim1a) proxy
local varlist_m = r(varlist_m)
label variable r1mobilb "r1mobilb:w1 R Some Diff-Mobility /0-4"

*Wave 1 respondent Missings in Mobility Summary
label variable r1mobilbm "r1mobilbm:w1 R Missings in Some Diff-Mobility /0-4"

*wave 1 spouse Mobility Summary
gen s1mobilb =.
spouse r1mobilb, result(s1mobilb) wave(1)
label variable s1mobilb "s1mobilb:w1 S Some Diff-Mobility /0-4"

*wave 1 spouse Missings in Mobility Summary
gen s1mobilbm =.
spouse r1mobilbm, result(s1mobilbm) wave(1)
label variable s1mobilbm "s1mobilbm:w1 S Missings in some Diff-Mobility /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Large Muscle Summary***
*Wave 1 respondent Large Muscle Summary
H_ELSA_summary_v lgmusa, wave(1) add(r1sita r1chaira r1stoopa r1pusha) proxy
local varlist_m = r(varlist_m)
label variable r1lgmusa "r1lgmusa:w1 R Some Diff-Large muscle /0-4"

*Wave 1 respondent Missings in Large Muscle Summary
label variable r1lgmusam "r1lgmusam:w1 R Missings in Some Diff-Large muscle /0-4"

*wave 1 spouse Large Muscle Summary
gen s1lgmusa =.
spouse r1lgmusa, result(s1lgmusa) wave(1)
label variable s1lgmusa "s1lgmusa:w1 S Some Diff-Large muscle /0-4"

*wave 1 spouse Missings in Large Muscle Summary
gen s1lgmusam =.
spouse r1lgmusam, result(s1lgmusam) wave(1)
label variable s1lgmusam "s1lgmusam:w1 S Missings in Some Diff-Large muscle /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Gross Motor Summary***
*Wave 1 respondent Gross Motor Summary
H_ELSA_summary_v grossa, wave(1) add(r1walk100a r1walkra r1clim1a r1beda r1batha) proxy
local varlist_m = r(varlist_m)
label variable r1grossa "r1grossa:w1 R Some Diff-Wk,rn,clmb,bd,bth /0-5"

*Wave 1 respondent Missings in Gross Motor Summary
label variable r1grossam "r1grossam:w1 R Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 1 spouse Gross Motor Summary
gen s1grossa =.
spouse r1grossa, result(s1grossa) wave(1)
label variable s1grossa "s1grossa:w1 S Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 1 spouse Missings in Gross Motor Summary
gen s1grossam =.
spouse r1grossam, result(s1grossam) wave(1)
label variable s1grossam "s1grossam:w1 S Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Fine Motor Summary***
*Wave 1 respondent Fine Motor Summary
H_ELSA_summary_v finea, wave(1) add(r1dimea r1eata r1dressa) proxy
local varlist_m = r(varlist_m)
label variable r1finea "r1finea:w1 R Some Diff-Dime/eat/dress /0-3"

*Wave 1 respondent Missings in Fine Motor Summary
label variable r1fineam "r1fineam:w1 R Missings in Some Diff-Dime/eat/dress /0-3"

*wave 1 spouse Fine Motor Summary
gen s1finea =.
spouse r1finea, result(s1finea) wave(1)
label variable s1finea "s1finea:w1 S Some Diff-Dime/eat/dress /0-3"

*wave 1 spouse Missings in Fine Motor Summary
gen s1fineam =.
spouse r1fineam, result(s1fineam) wave(1)
label variable s1fineam "s1fineam:w1 S Missings in Some Diff-Dime/eat/dress /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***Felt depressed (0,1)***
*Wave 1 respondent Felt depressed (0,1)
gen r1depres =.
missing_w1 psceda, result(r1depres)
replace r1depres =.p if askpx1 == 1
replace r1depres = 0 if psceda == 2
replace r1depres = 1 if psceda == 1
label variable r1depres "r1depres:w1 r CESD: Felt depressed (0,1)"

*wave 1 spouse Felt depressed (0,1)
gen s1depres =.
spouse r1depres, result(s1depres) wave(1)
label variable s1depres "s1depres:w1 s CESD: Felt depressed (0,1)"

*value labels
label values r1depres cesd
label values s1depres cesd

*check

***Everything is an effort***
*Wave 1 respondent Everything is an effort
gen r1effort =.
missing_w1 pscedb, result(r1effort)
replace r1effort =.p if askpx1 == 1
replace r1effort = 0 if pscedb == 2
replace r1effort = 1 if pscedb == 1
label variable r1effort "r1effort:w1 r CESD: Everthing an effort (0,1)"

*wave 1 spouse Everything is an effort
gen s1effort =.
spouse r1effort, result(s1effort) wave(1)
label variable s1effort "s1effort:w1 s CESD: Everthing an effort (0,1)"

*value labels
label values r1effort cesd
label values s1effort cesd

*check 

***Sleep was restless (0,1)***
*Wave 1 respondent Sleep was restless (0,1)
gen r1sleepr =.
missing_w1 pscedc, result(r1sleepr)
replace r1sleepr =.p if askpx1 == 1
replace r1sleepr = 0 if pscedc == 2
replace r1sleepr = 1 if pscedc == 1
label variable r1sleepr "r1sleepr:w1 r CESD: Sleep was restless (0,1)"

*wave 1 spouse Sleep was restless (0,1)
gen s1sleepr =.
spouse r1sleepr, result(s1sleepr) wave(1)
label variable s1sleepr "s1sleepr:w1 s CESD: Sleep was restless (0,1)"

*value labels
label values r1sleepr cesd
label values s1sleepr cesd

*check 

***Was happy (0,1)***
*Wave 1 respondent Was happy (0,1)
gen r1whappy =.
missing_w1 pscedd, result(r1whappy)
replace r1whappy =.p if askpx1 == 1
replace r1whappy = 0 if pscedd == 2
replace r1whappy = 1 if pscedd == 1
label variable r1whappy "r1whappy:w1 r CESD: Was happy (0,1)"

*wave 1 spouse Was happy (0,1)
gen s1whappy =.
spouse r1whappy, result(s1whappy) wave(1)
label variable s1whappy "s1whappy:w1 s CESD: Was happy (0,1)"

*value labels
label values r1whappy cesd
label values s1whappy cesd

*check 

***Felt lonely (0,1)***
*Wave 1 respondent Felt lonely (0,1)
gen r1flone =.
missing_w1 pscede, result(r1flone)
replace r1flone =.p if askpx1 == 1
replace r1flone = 0 if pscede == 2
replace r1flone = 1 if pscede == 1
label variable r1flone "r1flone:w1 r CESD: Felt lonely (0,1)"

*wave 1 spouse Felt lonely (0,1)
gen s1flone =.
spouse r1flone, result(s1flone) wave(1)
label variable s1flone "s1flone:w1 s CESD: Felt lonely (0,1)"

*value labels
label values r1flone cesd
label values s1flone cesd

*check 

***Felt sad (0,1)***
*Wave 1 respondent Felt sad (0,1)
gen r1fsad =.
missing_w1 pscedg, result(r1fsad)
replace r1fsad =.p if askpx1 == 1
replace r1fsad = 0 if pscedg == 2
replace r1fsad = 1 if pscedg == 1
label variable r1fsad "r1fsad:w1 r CESD: Felt sad (0,1)"

*wave 1 spouse Felt sad (0,1)
gen s1fsad =.
spouse r1fsad, result(s1fsad) wave(1)
label variable s1fsad "s1fsad:w1 s CESD: Felt sad (0,1)"

*value labels
label values r1fsad cesd
label values s1fsad cesd

*check 

***Could not get going (0,1)***
*Wave 1 respondent Could not get going (0,1)
gen r1going =.
missing_w1 pscedh, result(r1going)
replace r1going =.p if askpx1 == 1
replace r1going = 0 if pscedh == 2
replace r1going = 1 if pscedh == 1
label variable r1going "r1going:w1 r CESD: Could not get going (0,1)"

*wave 1 spouse Could not get going (0,1)
gen s1going =.
spouse r1going, result(s1going) wave(1)
label variable s1going "s1going:w1 s CESD: Could not get going (0,1)"

*value labels
label values r1going cesd
label values s1going cesd

*check 

***Enjoyed life (0,1)***
*Wave 1 respondent Enjoyed life (0,1)
gen r1enlife =.
missing_w1 pscedf, result(r1enlife)
replace r1enlife =.p if askpx1 == 1
replace r1enlife = 0 if pscedf == 2
replace r1enlife = 1 if pscedf == 1
label variable r1enlife "r1enlife:w1 r CESD: Enjoyed life (0,1)"

*wave 1 spouse Enjoyed life (0,1)
gen s1enlife =.
spouse r1enlife, result(s1enlife) wave(1)
label variable s1enlife "s1enlife:w1 s CESD: Enjoyed life (0,1)"

*value labels
label values r1enlife cesd
label values s1enlife cesd

*check 

***CESD Score***
*wave 1 respondent CESD score number of missings
egen r1cesdm = rowmiss(r1depres r1effort r1sleepr r1flone r1fsad r1going r1whappy r1enlife) if inw1 == 1
label variable r1cesdm "r1cesdm:w1 r missings in CESD score"

*wave 1 spouse CESD score number of missings
gen s1cesdm =.
spouse r1cesdm, result(s1cesdm) wave(1)
label variable s1cesdm "s1cesdm:w1 s missings in CESD score"

local cesd
foreach v of varlist r1depres r1effort r1sleepr r1flone r1fsad r1going  {
	recode `v' (miss = 0), generate(`v'_m)
	local cesd `cesd' `v'_m
}

foreach u of varlist r1whappy r1enlife {
	recode `u' (miss = 1), generate(`u'_m)
	local cesd `cesd' `u'_m
}
*wave 1 respondent CESD score
gen r1cesd=.
missing_H r1depres r1effort r1sleepr r1flone r1fsad r1going r1whappy r1enlife, result(r1cesd)
replace r1cesd =.p if askpx1 == 1
replace r1cesd = r1depres_m + r1effort_m + r1sleepr_m + r1flone_m + r1fsad_m + r1going_m + (1-r1whappy_m) + (1-r1enlife_m) if inrange(r1cesdm,0,7)
label variable r1cesd "r1cesd:w1 r CESD Score"

*wave 1 spouse CESD score
gen s1cesd =.
spouse r1cesd, result(s1cesd) wave(1)
label variable s1cesd "s1cesd:w1 s CESD Score"

*check 

*drop intermediate variables
drop `cesd'

***Ever had high blood pressure***
*wave 1 respondent ever had high blood pressure
gen r1hibpe =.
missing_w1 hedim01 ///
					 hedim02 ///
					 hedim03 ///
					 hedim04 ///
					 hedim05 ///
					 hedim06 ///
					 hedim07 , result(r1hibpe)
replace r1hibpe = 0 if (inrange(hedim01,1,8) | inlist(hedim01,85,86,95,96 ) ) ///
											 | (inrange(hedim02,1,8) | inlist(hedim02,85,86,95,96 ) ) ///
											 | (inrange(hedim03,1,8) | inlist(hedim03,85,86,95,96 ) ) ///
											 | (inrange(hedim04,1,8) | inlist(hedim04,85,86,95,96 ) ) ///
											 | (inrange(hedim05,1,8) | inlist(hedim05,85,86,95,96 ) ) ///
											 | (inrange(hedim06,1,8) | inlist(hedim06,85,86,95,96 ) ) ///
											 | (inrange(hedim07,1,8) | inlist(hedim07,85,86,95,96 ) )
replace r1hibpe = 1 if hedim01== 1 ///
											 | hedim02== 1 ///
											 | hedim03== 1 ///
											 | hedim04== 1 ///
											 | hedim05== 1 ///
											 | hedim06== 1 ///
											 | hedim07== 1
label variable r1hibpe "r1hibpe:w1 r ever had high blood pressure"

*wave 1 respondent high blood pressure dispute flag
gen r1hibpf = 0 if (inrange(hedim01,1,8) | inlist(hedim01,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim02,1,8) | inlist(hedim02,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim03,1,8) | inlist(hedim03,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim04,1,8) | inlist(hedim04,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim05,1,8) | inlist(hedim05,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim06,1,8) | inlist(hedim06,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim07,1,8) | inlist(hedim07,-9,-8,85,86,95,96 ))
label variable r1hibpf "r1hibpf:w1 r flag dispute chg high blood pressure"

*value labels
label values r1hibpe health_problems
label values r1hibpf health_problems_flag

*check 

***Ever had diabetes***
*wave 1 respondent ever had diabetes
gen r1diabe =.
missing_w1 hedim01 ///
					 hedim02 ///
					 hedim03 ///
					 hedim04 ///
					 hedim05 ///
					 hedim06 ///
					 hedim07 , result(r1diabe)
replace r1diabe = 0 if (inrange(hedim01,1,8) | inlist(hedim01,85,86,95,96 ) ) ///
											 | (inrange(hedim02,1,8) | inlist(hedim02,85,86,95,96 ) ) ///
											 | (inrange(hedim03,1,8) | inlist(hedim03,85,86,95,96 ) ) ///
											 | (inrange(hedim04,1,8) | inlist(hedim04,85,86,95,96 ) ) ///
											 | (inrange(hedim05,1,8) | inlist(hedim05,85,86,95,96 ) ) ///
											 | (inrange(hedim06,1,8) | inlist(hedim06,85,86,95,96 ) ) ///
											 | (inrange(hedim07,1,8) | inlist(hedim07,85,86,95,96 ) )
replace r1diabe = 1 if hedim01==7 ///
											 | hedim02==7 ///
											 | hedim03==7 ///
											 | hedim04==7 ///
											 | hedim05==7 ///
											 | hedim06==7 ///
											 | hedim07==7
label variable r1diabe "r1diabe:w1 r ever had diabetes"

*wave 1 respondent diabetes dispute flag
gen r1diabf = 0 if (inrange(hedim01,1,8) | inlist(hedim01,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim02,1,8) | inlist(hedim02,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim03,1,8) | inlist(hedim03,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim04,1,8) | inlist(hedim04,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim05,1,8) | inlist(hedim05,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim06,1,8) | inlist(hedim06,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim07,1,8) | inlist(hedim07,-9,-8,85,86,95,96 ))
label variable r1diabf "r1diabf:w1 r flag dispute chg diabetes"

*value labels
label values r1diabe health_problems
label values r1diabf health_problems_flag

*check 

***Ever had cancer***
*wave 1 respondent ever had cancer
gen r1cancre =.
missing_w1 hedib01 ///
					 hedib02 ///
					 hedib03 ///
					 hedib04 ///
					 hedib05 ///
					 hedib06 ///
					 hedib07 ///
					 hedib08 ///
					 hedib09 ///
					 hedib10 , result(r1cancre)
replace r1cancre = 0 if (inrange(hedib01,1,9) | hedib01 ==96 ) ///
											 | (inrange(hedib02,1,9) | hedib02 ==96 ) ///
											 | (inrange(hedib03,1,9) | hedib03 ==96 ) ///
											 | (inrange(hedib04,1,9) | hedib04 ==96 ) ///
											 | (inrange(hedib05,1,9) | hedib05 ==96 ) ///
											 | (inrange(hedib06,1,9) | hedib06 ==96 ) ///
											 | (inrange(hedib07,1,9) | hedib07 ==96 ) ///
											 | (inrange(hedib08,1,9) | hedib08 ==96 ) ///
											 | (inrange(hedib09,1,9) | hedib09 ==96 ) ///
											 | (inrange(hedib10,1,9) | hedib10 ==96 )
replace r1cancre = 1 if hedib01==5 ///
											 | hedib02==5 ///
											 | hedib03==5 ///
											 | hedib04==5 ///
											 | hedib05==5 ///
											 | hedib06==5 ///
											 | hedib07==5 ///
											 | hedib08==5 ///
											 | hedib09==5 ///
											 | hedib10==5
label variable r1cancre "r1cancre:w1 r ever had cancer"

*wave 1 respondent cancer dispute flag
gen r1cancrf = 0 if (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96 )) ///
								  | (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96 )) ///
								  | (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96 )) ///
								  | (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96 )) ///
								  | (inrange(hedib05,1,9) | inlist(hedib05,-9,-8,96 )) ///
								  | (inrange(hedib06,1,9) | inlist(hedib06,-9,-8,96 )) ///
								  | (inrange(hedib07,1,9) | inlist(hedib07,-9,-8,96 )) ///
								  | (inrange(hedib08,1,9) | inlist(hedib08,-9,-8,96 )) ///
								  | (inrange(hedib09,1,9) | inlist(hedib09,-9,-8,96 )) ///
								  | (inrange(hedib10,1,9) | inlist(hedib10,-9,-8,96 ))
label variable r1cancrf "r1cancrf:w1 r flag dispute chg cancer"

*value labels
label values r1cancre health_problems
label values r1cancrf health_problems_flag

*check 

***Ever had lung disease***
*wave 1 respondent ever had lung disease
gen r1lunge =.
missing_w1 hedib01 ///
					 hedib02 ///
					 hedib03 ///
					 hedib04 ///
					 hedib05 ///
					 hedib06 ///
					 hedib07 ///
					 hedib08 ///
					 hedib09 ///
					 hedib10 , result(r1lunge)
replace r1lunge = 0 if (inrange(hedib01,1,9) | hedib01 ==96 ) ///
											 | (inrange(hedib02,1,9) | hedib02 ==96 ) ///
											 | (inrange(hedib03,1,9) | hedib03 ==96 ) ///
											 | (inrange(hedib04,1,9) | hedib04 ==96 ) ///
											 | (inrange(hedib05,1,9) | hedib05 ==96 ) ///
											 | (inrange(hedib06,1,9) | hedib06 ==96 ) ///
											 | (inrange(hedib07,1,9) | hedib07 ==96 ) ///
											 | (inrange(hedib08,1,9) | hedib08 ==96 ) ///
											 | (inrange(hedib09,1,9) | hedib09 ==96 ) ///
											 | (inrange(hedib10,1,9) | hedib10 ==96 )
replace r1lunge = 1 if hedib01== 1 ///
											 | hedib02== 1 ///
											 | hedib03== 1 ///
											 | hedib04== 1 ///
											 | hedib05== 1 ///
											 | hedib06== 1 ///
											 | hedib07== 1 ///
											 | hedib08== 1 ///
											 | hedib09== 1 ///
											 | hedib10== 1
label variable r1lunge "r1lunge:w1 r ever had lung disease"

*wave 1 respondent lung disease dispute flag
gen r1lungf = 0 if (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96 )) ///
								 | (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96 )) ///
								 | (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96 )) ///
								 | (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96 )) ///
								 | (inrange(hedib05,1,9) | inlist(hedib05,-9,-8,96 )) ///
								 | (inrange(hedib06,1,9) | inlist(hedib06,-9,-8,96 )) ///
								 | (inrange(hedib07,1,9) | inlist(hedib07,-9,-8,96 )) ///
								 | (inrange(hedib08,1,9) | inlist(hedib08,-9,-8,96 )) ///
								 | (inrange(hedib09,1,9) | inlist(hedib09,-9,-8,96 )) ///
								 | (inrange(hedib10,1,9) | inlist(hedib10,-9,-8,96 ))
label variable r1lungf "r1lungf:w1 r flag dispute chg lung disease"

*value labels
label values r1lunge health_problems
label values r1lungf health_problems_flag

*check 

***Ever had heart problems***
*wave 1 respondent ever had heart problems
gen r1hearte =.
missing_w1 hedim01 ///
					 hedim02 ///
					 hedim03 ///
					 hedim04 ///
					 hedim05 ///
					 hedim06 ///
					 hedim07 , result(r1hearte)
replace r1hearte = 0 if (inrange(hedim01,1,8) | inlist(hedim01,85,86,95,96 ) ) ///
											 | (inrange(hedim02,1,8) | inlist(hedim02,85,86,95,96 ) ) ///
											 | (inrange(hedim03,1,8) | inlist(hedim03,85,86,95,96 ) ) ///
											 | (inrange(hedim04,1,8) | inlist(hedim04,85,86,95,96 ) ) ///
											 | (inrange(hedim05,1,8) | inlist(hedim05,85,86,95,96 ) ) ///
											 | (inrange(hedim06,1,8) | inlist(hedim06,85,86,95,96 ) ) ///
											 | (inrange(hedim07,1,8) | inlist(hedim07,85,86,95,96 ) )
replace r1hearte = 1 if inlist(hedim01,2,3,4,5,6,95) ///
											 | inlist(hedim02,2,3,4,5,6,95) ///
											 | inlist(hedim03,2,3,4,5,6,95) ///
											 | inlist(hedim04,2,3,4,5,6,95) ///
											 | inlist(hedim05,2,3,4,5,6,95) ///
											 | inlist(hedim06,2,3,4,5,6,95) ///
											 | inlist(hedim07,2,3,4,5,6,95)
label variable r1hearte "r1hearte:w1 r ever had heart problems"

*wave 1 respondent heart problems dispute flag
gen r1heartf = 0 if (inrange(hedim01,1,8) | inlist(hedim01,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim02,1,8) | inlist(hedim02,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim03,1,8) | inlist(hedim03,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim04,1,8) | inlist(hedim04,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim05,1,8) | inlist(hedim05,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim06,1,8) | inlist(hedim06,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim07,1,8) | inlist(hedim07,-9,-8,85,86,95,96 ))
label variable r1heartf "r1heartf:w1 r flag dispute chg heart problems"

*value labels
label values r1hearte health_problems
label values r1heartf health_problems_flag

*check 

***Ever had heart stroke***
*wave 1 respondent ever had stroke
gen r1stroke =.
missing_w1 hedim01 ///
					 hedim02 ///
					 hedim03 ///
					 hedim04 ///
					 hedim05 ///
					 hedim06 ///
					 hedim07 , result(r1stroke)
replace r1stroke = 0 if (inrange(hedim01,1,8) | inlist(hedim01,85,86,95,96 ) ) ///
											 | (inrange(hedim02,1,8) | inlist(hedim02,85,86,95,96 ) ) ///
											 | (inrange(hedim03,1,8) | inlist(hedim03,85,86,95,96 ) ) ///
											 | (inrange(hedim04,1,8) | inlist(hedim04,85,86,95,96 ) ) ///
											 | (inrange(hedim05,1,8) | inlist(hedim05,85,86,95,96 ) ) ///
											 | (inrange(hedim06,1,8) | inlist(hedim06,85,86,95,96 ) ) ///
											 | (inrange(hedim07,1,8) | inlist(hedim07,85,86,95,96 ) )
replace r1stroke = 1 if hedim01 ==8 ///
											 | hedim02 ==8 ///
											 | hedim03 ==8 ///
											 | hedim04 ==8 ///
											 | hedim05 ==8 ///
											 | hedim06 ==8 ///
											 | hedim07 ==8
label variable r1stroke "r1stroke:w1 r ever had stroke"

*wave 1 respondent stroke dispute flag
gen r1strokf = 0 if (inrange(hedim01,1,8) | inlist(hedim01,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim02,1,8) | inlist(hedim02,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim03,1,8) | inlist(hedim03,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim04,1,8) | inlist(hedim04,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim05,1,8) | inlist(hedim05,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim06,1,8) | inlist(hedim06,-9,-8,85,86,95,96 )) ///
								 | (inrange(hedim07,1,8) | inlist(hedim07,-9,-8,85,86,95,96 ))
label variable r1strokf "r1strokf:w1 r flag dispute chg stroke"

*value labels
label values r1stroke health_problems
label values r1strokf health_problems_flag

*check 

***Ever had psych problems***
*wave 1 respondent ever had psych problems
gen r1psyche =.
missing_w1 hedib01 ///
					 hedib02 ///
					 hedib03 ///
					 hedib04 ///
					 hedib05 ///
					 hedib06 ///
					 hedib07 ///
					 hedib08 ///
					 hedib09 ///
					 hedib10 , result(r1psyche)
replace r1psyche = 0 if (inrange(hedib01,1,9) | hedib01 ==96 ) ///
											 | (inrange(hedib02,1,9) | hedib02 ==96 ) ///
											 | (inrange(hedib03,1,9) | hedib03 ==96 ) ///
											 | (inrange(hedib04,1,9) | hedib04 ==96 ) ///
											 | (inrange(hedib05,1,9) | hedib05 ==96 ) ///
											 | (inrange(hedib06,1,9) | hedib06 ==96 ) ///
											 | (inrange(hedib07,1,9) | hedib07 ==96 ) ///
											 | (inrange(hedib08,1,9) | hedib08 ==96 ) ///
											 | (inrange(hedib09,1,9) | hedib09 ==96 ) ///
											 | (inrange(hedib10,1,9) | hedib10 ==96 )
replace r1psyche = 1 if hedib01==7 ///
											 | hedib02==7 ///
											 | hedib03==7 ///
											 | hedib04==7 ///
											 | hedib05==7 ///
											 | hedib06==7 ///
											 | hedib07==7 ///
											 | hedib08==7 ///
											 | hedib09==7 ///
											 | hedib10==7
label variable r1psyche "r1psyche:w1 r ever had psych problems"

*wave 1 respondent psych problems dispute flag
gen r1psychf = 0 if (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96 )) ///
								  | (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96 )) ///
								  | (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96 )) ///
								  | (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96 )) ///
								  | (inrange(hedib05,1,9) | inlist(hedib05,-9,-8,96 )) ///
								  | (inrange(hedib06,1,9) | inlist(hedib06,-9,-8,96 )) ///
								  | (inrange(hedib07,1,9) | inlist(hedib07,-9,-8,96 )) ///
								  | (inrange(hedib08,1,9) | inlist(hedib08,-9,-8,96 )) ///
								  | (inrange(hedib09,1,9) | inlist(hedib09,-9,-8,96 )) ///
								  | (inrange(hedib10,1,9) | inlist(hedib10,-9,-8,96 ))
label variable r1psychf "r1psychf:w1 r flag dispute chg psych problems"

*value labels
label values r1psyche health_problems
label values r1psychf health_problems_flag

*check

***Ever had arthritis***
*wave 1 respondent ever had arthritis
gen r1arthre =.
missing_w1 hedib01 ///
					 hedib02 ///
					 hedib03 ///
					 hedib04 ///
					 hedib05 ///
					 hedib06 ///
					 hedib07 ///
					 hedib08 ///
					 hedib09 ///
					 hedib10 , result(r1arthre)
replace r1arthre = 0 if (inrange(hedib01,1,9) | hedib01 ==96 ) ///
											 | (inrange(hedib02,1,9) | hedib02 ==96 ) ///
											 | (inrange(hedib03,1,9) | hedib03 ==96 ) ///
											 | (inrange(hedib04,1,9) | hedib04 ==96 ) ///
											 | (inrange(hedib05,1,9) | hedib05 ==96 ) ///
											 | (inrange(hedib06,1,9) | hedib06 ==96 ) ///
											 | (inrange(hedib07,1,9) | hedib07 ==96 ) ///
											 | (inrange(hedib08,1,9) | hedib08 ==96 ) ///
											 | (inrange(hedib09,1,9) | hedib09 ==96 ) ///
											 | (inrange(hedib10,1,9) | hedib10 ==96 )
replace r1arthre = 1 if hedib01==3 ///
											 | hedib02==3 ///
											 | hedib03==3 ///
											 | hedib04==3 ///
											 | hedib05==3 ///
											 | hedib06==3 ///
											 | hedib07==3 ///
											 | hedib08==3 ///
											 | hedib09==3 ///
											 | hedib10==3
label variable r1arthre "r1arthre:w1 r ever had arthritis"

*wave 1 respondent arthritis dispute flag
gen r1arthrf = 0 if (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96 )) ///
								  | (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96 )) ///
								  | (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96 )) ///
								  | (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96 )) ///
								  | (inrange(hedib05,1,9) | inlist(hedib05,-9,-8,96 )) ///
								  | (inrange(hedib06,1,9) | inlist(hedib06,-9,-8,96 )) ///
								  | (inrange(hedib07,1,9) | inlist(hedib07,-9,-8,96 )) ///
								  | (inrange(hedib08,1,9) | inlist(hedib08,-9,-8,96 )) ///
								  | (inrange(hedib09,1,9) | inlist(hedib09,-9,-8,96 )) ///
								  | (inrange(hedib10,1,9) | inlist(hedib10,-9,-8,96 ))
label variable r1arthrf "r1arthrf:w1 r flag dispute chg arthritis"

*value labels
label values r1arthre health_problems

label values r1arthrf health_problems_flag

*check 

***Ever had memory-related problem***
*wave 1 respondent ever had memory-related problem
gen r1memrye =.
missing_w1 hedib01 ///
					 hedib02 ///
					 hedib03 ///
					 hedib04 ///
					 hedib05 ///
					 hedib06 ///
					 hedib07 ///
					 hedib08 ///
					 hedib09 ///
					 hedib10 , result(r1memrye)
replace r1memrye = 0 if (inrange(hedib01,1,9) | hedib01 ==96 ) ///
											 | (inrange(hedib02,1,9) | hedib02 ==96 ) ///
											 | (inrange(hedib03,1,9) | hedib03 ==96 ) ///
											 | (inrange(hedib04,1,9) | hedib04 ==96 ) ///
											 | (inrange(hedib05,1,9) | hedib05 ==96 ) ///
											 | (inrange(hedib06,1,9) | hedib06 ==96 ) ///
											 | (inrange(hedib07,1,9) | hedib07 ==96 ) ///
											 | (inrange(hedib08,1,9) | hedib08 ==96 ) ///
											 | (inrange(hedib09,1,9) | hedib09 ==96 ) ///
											 | (inrange(hedib10,1,9) | hedib10 ==96 )
replace r1memrye = 1 if inlist(hedib01,8,9) ///
											 | inlist(hedib02,8,9) ///
											 | inlist(hedib03,8,9) ///
											 | inlist(hedib04,8,9) ///
											 | inlist(hedib05,8,9) ///
											 | inlist(hedib06,8,9) ///
											 | inlist(hedib07,8,9) ///
											 | inlist(hedib08,8,9) ///
											 | inlist(hedib09,8,9) ///
											 | inlist(hedib10,8,9)
label variable r1memrye "r1memrye:w1 r ever had memory problem"

*wave 1 respondent memory problem dispute flag
gen r1memryf = 0 if (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96 )) ///
								  | (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96 )) ///
								  | (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96 )) ///
								  | (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96 )) ///
								  | (inrange(hedib05,1,9) | inlist(hedib05,-9,-8,96 )) ///
								  | (inrange(hedib06,1,9) | inlist(hedib06,-9,-8,96 )) ///
								  | (inrange(hedib07,1,9) | inlist(hedib07,-9,-8,96 )) ///
								  | (inrange(hedib08,1,9) | inlist(hedib08,-9,-8,96 )) ///
								  | (inrange(hedib09,1,9) | inlist(hedib09,-9,-8,96 )) ///
								  | (inrange(hedib10,1,9) | inlist(hedib10,-9,-8,96 ))
label variable r1memryf "r1memryf:w1 r flag chg previous memory prob"

*label values
label values r1memrye health_problems
label values r1memryf health_problems_flag

*check 

***Ever had asthma***
*wave 1 respondent ever had asthma
gen r1asthmae = .
missing_w1 hedib01 ///
					 hedib02 ///
					 hedib03 ///
					 hedib04 ///
					 hedib05 ///
					 hedib06 ///
					 hedib07 ///
					 hedib08 ///
					 hedib09 ///
					 hedib10 , result(r1asthmae)
replace r1asthmae = 0 if (inrange(hedib01,1,9) | hedib01 ==96 ) ///
											 | (inrange(hedib02,1,9) | hedib02 ==96 ) ///
											 | (inrange(hedib03,1,9) | hedib03 ==96 ) ///
											 | (inrange(hedib04,1,9) | hedib04 ==96 ) ///
											 | (inrange(hedib05,1,9) | hedib05 ==96 ) ///
											 | (inrange(hedib06,1,9) | hedib06 ==96 ) ///
											 | (inrange(hedib07,1,9) | hedib07 ==96 ) ///
											 | (inrange(hedib08,1,9) | hedib08 ==96 ) ///
											 | (inrange(hedib09,1,9) | hedib09 ==96 ) ///
											 | (inrange(hedib10,1,9) | hedib10 ==96 )
replace r1asthmae = 1 if hedib01 == 2 ///
											 | hedib02 == 2 ///
											 | hedib03 == 2 ///
											 | hedib04 == 2 ///
											 | hedib05 == 2 ///
											 | hedib06 == 2 ///
											 | hedib07 == 2 ///
											 | hedib08 == 2 ///
											 | hedib09 == 2 ///
											 | hedib10 == 2
label variable r1asthmae "r1asthmae:w1 r ever had asthma"

*wave 1 respondent asthma dispute flag
gen r1asthmaf = 0 if (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96 )) ///
								  | (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96 )) ///
								  | (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96 )) ///
								  | (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96 )) ///
								  | (inrange(hedib05,1,9) | inlist(hedib05,-9,-8,96 )) ///
								  | (inrange(hedib06,1,9) | inlist(hedib06,-9,-8,96 )) ///
								  | (inrange(hedib07,1,9) | inlist(hedib07,-9,-8,96 )) ///
								  | (inrange(hedib08,1,9) | inlist(hedib08,-9,-8,96 )) ///
								  | (inrange(hedib09,1,9) | inlist(hedib09,-9,-8,96 )) ///
								  | (inrange(hedib10,1,9) | inlist(hedib10,-9,-8,96 ))
label variable r1asthmaf "r1asthmaf:w1 r flag chg previous asthma"

*label values
label values r1asthmae health_problems
label values r1asthmaf health_problems_flag

*check 

***Ever had cataracts***
*wave 1 respondent ever had cataracts
gen r1catrcte = .
missing_w1 heopt1 ///
					 heopt2 ///
					 heopt3 ///
					 heopt4 ///
					 heopt5, result(r1catrcte)
replace r1catrcte = 0 if (inrange(heopt1,1,3) | heopt1 ==96 ) ///
											 | (inrange(heopt2,1,3) | heopt2 ==96 ) ///
											 | (inrange(heopt3,1,3) | heopt3 ==96 ) ///
											 | (inrange(heopt4,1,3) | heopt4 ==96 ) ///
											 | (inrange(heopt5,1,3) | heopt5 ==96 ) 
replace r1catrcte = 1 if heopt1 == 4 ///
											 | heopt2 == 4 ///
											 | heopt3 == 4 ///
											 | heopt4 == 4 ///
											 | heopt5 == 4 
label variable r1catrcte "r1catrcte:w1 r ever had cataracts"

*wave 1 respondent cataracts dispute flag
gen r1catrctf = 0 if (inrange(heopt1,1,4) | inlist(heopt1,-9,-8,96 )) ///
								  | (inrange(heopt2,1,4) | inlist(heopt2,-9,-8,96 )) ///
								  | (inrange(heopt3,1,4) | inlist(heopt3,-9,-8,96 )) ///
								  | (inrange(heopt4,1,4) | inlist(heopt4,-9,-8,96 )) ///
								  | (inrange(heopt5,1,4) | inlist(heopt5,-9,-8,96 ))
label variable r1catrctf "r1catrctf:w1 r flag chg previous cataracts"

*label values
label values r1catrcte health_problems
label values r1catrctf health_problems_flag

***Ever had parkinsons***
*wave 1 respondent ever had parkinsons
gen r1parkine = .
missing_w1 hedib01 ///
					 hedib02 ///
					 hedib03 ///
					 hedib04 ///
					 hedib05 ///
					 hedib06 ///
					 hedib07 ///
					 hedib08 ///
					 hedib09 ///
					 hedib10, result(r1parkine)
replace r1parkine = 0 if (inrange(hedib01,1,8) | hedib01==96 ) ///
											 | (inrange(hedib02,1,8) | hedib02==96 ) ///
											 | (inrange(hedib03,1,8) | hedib03==96 ) ///
											 | (inrange(hedib04,1,8) | hedib04==96 ) ///
											 | (inrange(hedib05,1,8) | hedib05==96 ) ///
											 | (inrange(hedib06,1,8) | hedib06==96 ) ///
											 | (inrange(hedib07,1,8) | hedib07==96 ) ///
											 | (inrange(hedib08,1,8) | hedib08==96 ) ///
											 | (inrange(hedib09,1,8) | hedib09==96 ) ///
											 | (inrange(hedib10,1,8) | hedib10==96 )
replace r1parkine = 1 if hedib01 == 6 ///
											 | hedib02 == 6 ///
											 | hedib03 == 6 ///
											 | hedib04 == 6 ///
											 | hedib05 == 6 ///
											 | hedib06 == 6 ///
											 | hedib07 == 6 ///
											 | hedib08 == 6 ///
											 | hedib09 == 6 ///
											 | hedib10 == 6 
label variable r1parkine "r1parkine:w1 r ever had parkinson disease"

*wave 1 respondent parkinsons dispute flag
gen r1parkinf = 0 if (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96 )) ///
								  | (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96 )) ///
								  | (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96 )) ///
								  | (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96 )) ///
								  | (inrange(hedib05,1,9) | inlist(hedib05,-9,-8,96 )) ///
								  | (inrange(hedib06,1,9) | inlist(hedib06,-9,-8,96 )) ///
								  | (inrange(hedib07,1,9) | inlist(hedib07,-9,-8,96 )) ///
								  | (inrange(hedib08,1,9) | inlist(hedib08,-9,-8,96 )) ///
								  | (inrange(hedib09,1,9) | inlist(hedib09,-9,-8,96 )) ///
								  | (inrange(hedib10,1,9) | inlist(hedib10,-9,-8,96 ))
label variable r1parkinf "r1parkinf:w1 r flag chg previous parkinson disease"

*label values
label values r1parkine health_problems
label values r1parkinf health_problems_flag

***Ever had hip fracture***
*wave 1 respondent ever had hip fracture
gen r1hipe = .
missing_w1 hefrac, result(r1hipe)
replace r1hipe = .a if inrange(r1agey,1,59) & hefrac==-1
replace r1hipe = 0 if hefrac==2
replace r1hipe = 1 if hefrac==1 
label variable r1hipe "r1hipe:w1 r ever had hip fracture"
label values r1hipe health_problems

*wave 1 spouse ever had hip fracture
gen s1hipe = .
spouse r1hipe, result(s1hipe) wave(1)
label variable s1hipe "s1hipe:w1 s ever had hip fracture"
label values s1hipe health_problems


***Ever had Alzheimers disease***
*wave 1 respondent ever had Alzheimers disease
gen r1alzhe = .
missing_w1 hedib01 ///
					 hedib02 ///
					 hedib03 ///
					 hedib04 ///
					 hedib05 ///
					 hedib06 ///
					 hedib07 ///
					 hedib08 ///
					 hedib09 ///
					 hedib10 , result(r1alzhe)
replace r1alzhe = 0 if (inrange(hedib01,1,9) | hedib01 ==96 ) ///
											 | (inrange(hedib02,1,9) | hedib02 ==96 ) ///
											 | (inrange(hedib03,1,9) | hedib03 ==96 ) ///
											 | (inrange(hedib04,1,9) | hedib04 ==96 ) ///
											 | (inrange(hedib05,1,9) | hedib05 ==96 ) ///
											 | (inrange(hedib06,1,9) | hedib06 ==96 ) ///
											 | (inrange(hedib07,1,9) | hedib07 ==96 ) ///
											 | (inrange(hedib08,1,9) | hedib08 ==96 ) ///
											 | (inrange(hedib09,1,9) | hedib09 ==96 ) ///
											 | (inrange(hedib10,1,9) | hedib10 ==96 )
replace r1alzhe = 1 if hedib01 == 8 ///
											 | hedib02 == 8 ///
											 | hedib03 == 8 ///
											 | hedib04 == 8 ///
											 | hedib05 == 8 ///
											 | hedib06 == 8 ///
											 | hedib07 == 8 ///
											 | hedib08 == 8 ///
											 | hedib09 == 8 ///
											 | hedib10 == 8
label variable r1alzhe "r1alzhe:w1 r ever had alzheimers"
label values r1alzhe health_problems

*wave 1 respondent Alzheimers disease dispute flag
gen r1alzhf = 0 if (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96 )) ///
								  | (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96 )) ///
								  | (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96 )) ///
								  | (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96 )) ///
								  | (inrange(hedib05,1,9) | inlist(hedib05,-9,-8,96 )) ///
								  | (inrange(hedib06,1,9) | inlist(hedib06,-9,-8,96 )) ///
								  | (inrange(hedib07,1,9) | inlist(hedib07,-9,-8,96 )) ///
								  | (inrange(hedib08,1,9) | inlist(hedib08,-9,-8,96 )) ///
								  | (inrange(hedib09,1,9) | inlist(hedib09,-9,-8,96 )) ///
								  | (inrange(hedib10,1,9) | inlist(hedib10,-9,-8,96 ))
label variable r1alzhf "r1alzhf:w1 r flag chg previous alzheimers"
label values r1alzhf health_problems_flag

*check 


***Ever had Dementia***
*wave 1 respondent ever had Dementia
gen r1demene = .
missing_w1 hedib01 ///
					 hedib02 ///
					 hedib03 ///
					 hedib04 ///
					 hedib05 ///
					 hedib06 ///
					 hedib07 ///
					 hedib08 ///
					 hedib09 ///
					 hedib10 , result(r1demene)
replace r1demene = 0 if (inrange(hedib01,1,9) | hedib01 ==96 ) ///
											 | (inrange(hedib02,1,9) | hedib02 ==96 ) ///
											 | (inrange(hedib03,1,9) | hedib03 ==96 ) ///
											 | (inrange(hedib04,1,9) | hedib04 ==96 ) ///
											 | (inrange(hedib05,1,9) | hedib05 ==96 ) ///
											 | (inrange(hedib06,1,9) | hedib06 ==96 ) ///
											 | (inrange(hedib07,1,9) | hedib07 ==96 ) ///
											 | (inrange(hedib08,1,9) | hedib08 ==96 ) ///
											 | (inrange(hedib09,1,9) | hedib09 ==96 ) ///
											 | (inrange(hedib10,1,9) | hedib10 ==96 )
replace r1demene = 1 if hedib01 == 9 ///
											 | hedib02 == 9 ///
											 | hedib03 == 9 ///
											 | hedib04 == 9 ///
											 | hedib05 == 9 ///
											 | hedib06 == 9 ///
											 | hedib07 == 9 ///
											 | hedib08 == 9 ///
											 | hedib09 == 9 ///
											 | hedib10 == 9
label variable r1demene "r1demene:w1 r ever had dementia"
label values r1demene health_problems

*wave 1 respondent dementia dispute flag
gen r1demenf = 0 if (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96 )) ///
								  | (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96 )) ///
								  | (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96 )) ///
								  | (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96 )) ///
								  | (inrange(hedib05,1,9) | inlist(hedib05,-9,-8,96 )) ///
								  | (inrange(hedib06,1,9) | inlist(hedib06,-9,-8,96 )) ///
								  | (inrange(hedib07,1,9) | inlist(hedib07,-9,-8,96 )) ///
								  | (inrange(hedib08,1,9) | inlist(hedib08,-9,-8,96 )) ///
								  | (inrange(hedib09,1,9) | inlist(hedib09,-9,-8,96 )) ///
								  | (inrange(hedib10,1,9) | inlist(hedib10,-9,-8,96 ))
label variable r1demenf "r1demenf:w1 r flag chg previous dementia"
label values r1demenf health_problems_flag

*check 

***Vigorous physical activity***
*wave 1 respondent vigorous physical activity
gen r1vgactx_e =.
missing_w1 heacta, result(r1vgactx_e)
replace r1vgactx_e =.p if askpx1 == 1
replace r1vgactx_e = 2 if heacta == 1
replace r1vgactx_e = 3 if heacta == 2
replace r1vgactx_e = 4 if heacta == 3
replace r1vgactx_e = 5 if heacta == 4
label variable r1vgactx_e "r1vgactx_e:w1 R Freq vigorous phys activ"

*wave 1 spouse vigorous physical activity
gen s1vgactx_e =.
spouse r1vgactx_e, result(s1vgactx_e) wave(1)
label variable s1vgactx_e "s1vgactx_e:w1 S Freq vigorous phys activ"

*label values
label values r1vgactx_e activity
label values s1vgactx_e activity

*check 

***Moderate physical activity***
*wave 1 respondent moderate physical activity
gen r1mdactx_e =.
missing_w1 heactb, result(r1mdactx_e)
replace r1mdactx_e =.p if askpx1 == 1
replace r1mdactx_e = 2 if heactb == 1
replace r1mdactx_e = 3 if heactb == 2
replace r1mdactx_e = 4 if heactb == 3
replace r1mdactx_e = 5 if heactb == 4
label variable r1mdactx_e "r1mdactx_e:w1 R Freq moderate phys activ"

*wave 1 spouse vigorous moderate activity
gen s1mdactx_e =.
spouse r1mdactx_e, result(s1mdactx_e) wave(1)
label variable s1mdactx_e "s1mdactx_e:w1 S Freq moderate phys activ"

*label values
label values r1mdactx_e activity
label values s1mdactx_e activity

*check 

***Light physical activity***
*wave 1 respondent light physical activity
gen r1ltactx_e =.
missing_w1 heactc, result(r1ltactx_e)
replace r1ltactx_e =.p if askpx1 == 1
replace r1ltactx_e = 2 if heactc == 1
replace r1ltactx_e = 3 if heactc == 2
replace r1ltactx_e = 4 if heactc == 3
replace r1ltactx_e = 5 if heactc == 4
label variable r1ltactx_e "r1ltactx_e:w1 R Freq light phys activ"

*wave 1 spouse vigorous light activity
gen s1ltactx_e =.
spouse r1ltactx_e, result(s1ltactx_e) wave(1)
label variable s1ltactx_e "s1ltactx_e:w1 S Freq light phys activ"

*label values
label values r1ltactx_e activity
label values s1ltactx_e activity

*check 

***Ever drinks alcohol***
*wave 1 respondent ever drinks alcohol
gen r1drink =.
missing_w1 heala, result(r1drink)
replace r1drink =.p if askpx1 == 1
replace r1drink = 0 if heala == 6
replace r1drink = 1 if inlist(heala,1,2,3,4,5)
label variable r1drink "r1drink:w1 R ever drinks any alcohol"

*wave 1 spouse ever drinks alcohol
gen s1drink =.
spouse r1drink, result(s1drink) wave(1)
label variable s1drink "s1drink:w1 S ever drinks any alcohol"

*label values
label values r1drink ever_drink
label values s1drink ever_drink

*check 

***Ever smoked cigarettes***
*wave 1 respondent ever smoked cigarettes
gen r1smokev =.
missing_w1 hesmk, result(r1smokev)
replace r1smokev =.p if askpx1 == 1
replace r1smokev = 0 if hesmk == 2
replace r1smokev = 1 if hesmk == 1
label variable r1smokev "r1smokev:w1 R smoke ever"

*wave 1 spouse ever smoked cigarettes
gen s1smokev =.
spouse r1smokev, result(s1smokev) wave(1)
label variable s1smokev "s1smokev:w1 S smoke ever"

*label values
label values r1smokev smokes
label values s1smokev smokes

*check 

***Smokes cigarettes now***
*wave 1 respondent smokes cigarettes now
gen r1smoken =.
missing_w1 hesmk heska, result(r1smoken)
replace r1smoken =.p if askpx1 == 1
replace r1smoken = 0 if hesmk == 2 | heska == 2
replace r1smoken = 1 if heska == 1
label variable r1smoken "r1smoken:w1 R smokes now"

*wave 1 spouse smokes cigarettes now
gen s1smoken =.
spouse r1smoken, result(s1smoken) wave(1)
label variable s1smoken "s1smoken:w1 S smokes now"

*label values
label values r1smoken smokes
label values s1smoken smokes

*check 

**Smoking frequency ****
gen r1smokef = .
missing_w1 hesmk heska heskb heskc hecig , result(r1smokef)
replace r1smokef = 0  if r1smoken == 0
replace r1smokef = 0  if hecig ==2
replace r1smokef = (heskb*5 + heskc*2)/7 if !inlist(heskb,-1,-8,-9) & !inlist(heskc,-1,-8,-9) 

label var r1smokef "r1smokef:w1 R # cigarettes/day"

*Spouse smoking frequency
gen s1smokef = .
spouse r1smokef, result(s1smokef) wave(1)
label var s1smokef "s1smokef:w1 S # cigarettes/day"


***drop ELSA wave 1 core file raw variables***
drop `health_w1_core'

******************************************************************************************



*set wave number
local wavenum=2
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2


***merge with wave 2 core data***
local health_w2_core askpx1 ///
										 Hehelf HeLWk ///
										 heada0? heada1? headb0? headb1? ///
										 PScedA PScedB PScedC PScedD PScedE PScedF PScedG ///
										 PScedH ///
										 hediac1 HeDiaC? hediad1 HeDiaD? hedib0? hedim0? hedia0? ///
										 HeActa HeActb HeActc ///
										 scako scal7a scal7b scdri0? scabnp scabnlc scabnsc ///
										 scabsp scabslc scabssc scaspir scasher scawin ///
										 scapopg  /// 
										 HeOpt? HeOpC bheopt? HeFrac ///
										 HESka HeSkb HeSkc HeSkd HeSke HeSkf HeSmk HECig
merge 1:1 idauniq using "$wave_2_core", keepusing(`health_w2_core') nogen

***merge with wave 2 nurse data***
local health_w2_nurse htval wtval wtok htok
merge 1:1 idauniq using "$wave_2_nurs", keepusing(`health_w2_nurse')
tempvar inw2nurse
gen `inw2nurse' = 0
replace `inw2nurse' = 1 if _merge == 3
drop _merge


***self-report of health***
*wave 2 respondent self-report of health
gen r2shlt =.
missing_w2 Hehelf, result(r2shlt)
replace r2shlt = .p if askpx1 == 1
replace r2shlt = Hehelf if inrange(Hehelf,1,5)
label variable r2shlt "r2shlt:w2 r self-report of health"

*wave 2 spouse self-report of health
gen s2shlt =.
spouse r2shlt, result(s2shlt) wave(2)
label variable s2shlt "s2shlt:w2 s self-report of health"

*value labels
label values r2shlt health
label values s2shlt health

*check 

***Whether health limits work***
*wave 2 respondent whether health limits work
gen r2hlthlm =.
missing_w2 HeLWk, result(r2hlthlm)
replace r2hlthlm = .p if askpx1 == 1
replace r2hlthlm = 0 if HeLWk == 2
replace r2hlthlm = 1 if HeLWk == 1
label variable r2hlthlm "r2hlthlm:w2 r hlth problems limit work"

*wave 2 spouse whether health limits work
gen s2hlthlm =.
spouse r2hlthlm, result(s2hlthlm) wave(2)
label variable s2hlthlm "s2hlthlm:w2 s hlth problems limit work"

*value labels
label values r2hlthlm limitwork
label values s2hlthlm limitwork

*check 

***Some difficulty walking cross room***
*wave 2 respondent difficulty walking across room
gen r2walkra =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2walkra)
replace r2walkra = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2walkra = 1 if headb01==2 ///
											 | headb02==2 ///
											 | headb03==2 ///
											 | headb04==2 ///
											 | headb05==2 ///
											 | headb06==2 ///
											 | headb07==2 ///
											 | headb08==2 ///
											 | headb09==2 ///
											 | headb10==2 ///
											 | headb11==2 ///
											 | headb12==2 ///
											 | headb13==2
label variable r2walkra "r2walkra:w2 R Some Diff-Walk across room"

*wave 2 spouse difficulty walking across room
gen s2walkra =.
spouse r2walkra, result(s2walkra) wave(2)
label variable s2walkra "s2walkra:w2 S Some Diff-Walk across room"

*value labels
label values r2walkra diff
label values s2walkra diff

*check 

***Some difficulty dressing***
*wave 2 respondent difficulty dressing
gen r2dressa =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2dressa)
replace r2dressa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2dressa = 1 if headb01== 1 ///
											 | headb02== 1 ///
											 | headb03== 1 ///
											 | headb04== 1 ///
											 | headb05== 1 ///
											 | headb06== 1 ///
											 | headb07== 1 ///
											 | headb08== 1 ///
											 | headb09== 1 ///
											 | headb10== 1 ///
											 | headb11== 1 ///
											 | headb12== 1 ///
											 | headb13== 1
label variable r2dressa "r2dressa:w2 R Some Diff-Dressing"

*wave 2 spouse difficulty dressing
gen s2dressa =.
spouse r2dressa, result(s2dressa) wave(2)
label variable s2dressa "s2dressa:w2 S Some Diff-Dressing"

*value labels
label values r2dressa diff
label values s2dressa diff

*check 

***Some difficulty bathing, shower***
*wave 2 respondent difficulty bathing, shower
gen r2batha =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2batha)
replace r2batha = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2batha = 1 if headb01==3 ///
											 | headb02==3 ///
											 | headb03==3 ///
											 | headb04==3 ///
											 | headb05==3 ///
											 | headb06==3 ///
											 | headb07==3 ///
											 | headb08==3 ///
											 | headb09==3 ///
											 | headb10==3 ///
											 | headb11==3 ///
											 | headb12==3 ///
											 | headb13==3
label variable r2batha "r2batha:w2 R Some Diff-Bathing, shower"

*wave 2 spouse difficulty bathing, shower
gen s2batha =.
spouse r2batha, result(s2batha) wave(2)
label variable s2batha "s2batha:w2 S Some Diff-Bathing, shower"

*value labels
label values r2batha diff
label values s2batha diff

*check 

***Some difficulty eating***
*wave 2 respondent difficulty eating
gen r2eata =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2eata)
replace r2eata = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2eata = 1 if headb01==4 ///
											 | headb02==4 ///
											 | headb03==4 ///
											 | headb04==4 ///
											 | headb05==4 ///
											 | headb06==4 ///
											 | headb07==4 ///
											 | headb08==4 ///
											 | headb09==4 ///
											 | headb10==4 ///
											 | headb11==4 ///
											 | headb12==4 ///
											 | headb13==4
label variable r2eata "r2eata:w2 R Some Diff-Eating"

*wave 2 spouse difficulty eating
gen s2eata =.
spouse r2eata, result(s2eata) wave(2)
label variable s2eata "s2eata:w2 S Some Diff-Eating"

*value labels
label values r2eata diff
label values s2eata diff

*check 

***Some difficulty getting in/out of bed***
*wave 2 respondent difficulty getting in/out of bed
gen r2beda =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2beda)
replace r2beda = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2beda = 1 if headb01==5 ///
											 | headb02==5 ///
											 | headb03==5 ///
											 | headb04==5 ///
											 | headb05==5 ///
											 | headb06==5 ///
											 | headb07==5 ///
											 | headb08==5 ///
											 | headb09==5 ///
											 | headb10==5 ///
											 | headb11==5 ///
											 | headb12==5 ///
											 | headb13==5
label variable r2beda "r2beda:w2 R Some Diff-Get in/out bed"

*wave 2 spouse difficulty getting in/out of bed
gen s2beda =.
spouse r2beda, result(s2beda) wave(2)
label variable s2beda "s2beda:w2 S Some Diff-Get in/out bed"

*value labels
label values r2beda diff
label values s2beda diff

*check 

***Some difficulty using the toilet***
*wave 2 respondent difficulty using the toilet
gen r2toilta =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2toilta)
replace r2toilta = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2toilta = 1 if headb01==6 ///
											 | headb02==6 ///
											 | headb03==6 ///
											 | headb04==6 ///
											 | headb05==6 ///
											 | headb06==6 ///
											 | headb07==6 ///
											 | headb08==6 ///
											 | headb09==6 ///
											 | headb10==6 ///
											 | headb11==6 ///
											 | headb12==6 ///
											 | headb13==6
label variable r2toilta "r2toilta:w2 R Some Diff-Using the toilet"

*wave 2 spouse difficulty using the toilet
gen s2toilta =.
spouse r2toilta, result(s2toilta) wave(2)
label variable s2toilta "s2toilta:w2 S Some Diff-Using the toilet"

*value labels
label values r2toilta diff
label values s2toilta diff

*check 

***Some difficulty using using a map***
*wave 2 respondent difficulty using a map
gen r2mapa =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2mapa)
replace r2mapa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2mapa = 1 if headb01==7 ///
											 | headb02==7 ///
											 | headb03==7 ///
											 | headb04==7 ///
											 | headb05==7 ///
											 | headb06==7 ///
											 | headb07==7 ///
											 | headb08==7 ///
											 | headb09==7 ///
											 | headb10==7 ///
											 | headb11==7 ///
											 | headb12==7 ///
											 | headb13==7
label variable r2mapa "r2mapa:w2 R Some Diff-Use a map"

*wave 2 spouse difficulty using a map
gen s2mapa =.
spouse r2mapa, result(s2mapa) wave(2)
label variable s2mapa "s2mapa:w2 S Some Diff-Use a map"

*value labels
label values r2mapa diff
label values s2mapa diff

*check 

***Some difficulty using a telephone***
*wave 2 respondent difficulty using a telephone
gen r2phonea =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2phonea)
replace r2phonea = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2phonea = 1 if headb01== 10 ///
											 | headb02== 10 ///
											 | headb03== 10 ///
											 | headb04== 10 ///
											 | headb05== 10 ///
											 | headb06== 10 ///
											 | headb07== 10 ///
											 | headb08== 10 ///
											 | headb09== 10 ///
											 | headb10== 10 ///
											 | headb11== 10 ///
											 | headb12== 10 ///
											 | headb13== 10
label variable r2phonea "r2phonea:w2 R Some Diff-Use a telephone"

*wave 2 spouse difficulty using a telephone
gen s2phonea =.
spouse r2phonea, result(s2phonea) wave(2)
label variable s2phonea "s2phonea:w2 S Some Diff-Use a telephone"

*value labels
label values r2phonea diff
label values s2phonea diff

*check 

***Some difficulty manging money***
*wave 2 respondent difficulty manging money
gen r2moneya =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2moneya)
replace r2moneya = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2moneya = 1 if headb01== 13 ///
											 | headb02== 13 ///
											 | headb03== 13 ///
											 | headb04== 13 ///
											 | headb05== 13 ///
											 | headb06== 13 ///
											 | headb07== 13 ///
											 | headb08== 13 ///
											 | headb09== 13 ///
											 | headb10== 13 ///
											 | headb11== 13 ///
											 | headb12== 13 ///
											 | headb13== 13
label variable r2moneya "r2moneya:w2 R Some Diff-Managing money"

*wave 2 spouse difficulty manging money
gen s2moneya =.
spouse r2moneya, result(s2moneya) wave(2)
label variable s2moneya "s2moneya:w2 S Some Diff-Managing money"

*value labels
label values r2moneya diff
label values s2moneya diff

*check 

***Some difficulty taking medications***
*wave 2 respondent difficulty taking medications
gen r2medsa =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2medsa)	
replace r2medsa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2medsa = 1 if headb01== 11 ///
											 | headb02== 11 ///
											 | headb03== 11 ///
											 | headb04== 11 ///
											 | headb05== 11 ///
											 | headb06== 11 ///
											 | headb07== 11 ///
											 | headb08== 11 ///
											 | headb09== 11 ///
											 | headb10== 11 ///
											 | headb11== 11 ///
											 | headb12== 11 ///
											 | headb13== 11
label variable r2medsa "r2medsa:w2 R Some Diff-Take medications"

*wave 2 spouse difficulty taking medications
gen s2medsa =.
spouse r2medsa, result(s2medsa) wave(2)
label variable s2medsa "s2medsa:w2 S Some Diff-Take medications"

*value labels
label values r2medsa diff
label values s2medsa diff

*check 

***Some difficulty shopping for groceries***
*wave 2 respondent difficulty shopping for groceries
gen r2shopa =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2shopa)	
replace r2shopa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2shopa = 1 if headb01==9 ///
											 | headb02==9 ///
											 | headb03==9 ///
											 | headb04==9 ///
											 | headb05==9 ///
											 | headb06==9 ///
											 | headb07==9 ///
											 | headb08==9 ///
											 | headb09==9 ///
											 | headb10==9 ///
											 | headb11==9 ///
											 | headb12==9 ///
											 | headb13==9
label variable r2shopa "r2shopa:w2 R Some Diff-Shop for grocery"

*wave 2 spouse difficulty shopping for groceries
gen s2shopa =.
spouse r2shopa, result(s2shopa) wave(2)
label variable s2shopa "s2shopa:w2 S Some Diff-Shop for grocery"

*value labels
label values r2shopa diff
label values s2shopa diff

*check 

***Some difficulty preparing a hot meal***
*wave 2 respondent difficulty preparing a hot meal
gen r2mealsa =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2mealsa)		
replace r2mealsa = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2mealsa = 1 if headb01==8 ///
											 | headb02==8 ///
											 | headb03==8 ///
											 | headb04==8 ///
											 | headb05==8 ///
											 | headb06==8 ///
											 | headb07==8 ///
											 | headb08==8 ///
											 | headb09==8 ///
											 | headb10==8 ///
											 | headb11==8 ///
											 | headb12==8 ///
											 | headb13==8
label variable r2mealsa "r2mealsa:w2 R Some Diff-Prepare hot meal"

*wave 2 spouse difficulty preparing a hot meal
gen s2mealsa =.
spouse r2mealsa, result(s2mealsa) wave(2)
label variable s2mealsa "s2mealsa:w2 S Some Diff-Prepare hot meal"

*value labels
label values r2mealsa diff
label values s2mealsa diff

*check 

***Some difficulty doing housework***
*wave 2 respondent difficulty doing housework
gen r2housewka =.
missing_w2 headb01 ///
					 headb02 ///
					 headb03 ///
					 headb04 ///
					 headb05 ///
					 headb06 ///
					 headb07 ///
					 headb08 ///
					 headb09 ///
					 headb10 ///
					 headb11 ///
					 headb12 ///
					 headb13 , result(r2housewka)		
replace r2housewka = 0 if (inrange(headb01,1,13) | headb01==96 ) ///
											 | (inrange(headb02,1,13) | headb02==96 ) ///
											 | (inrange(headb03,1,13) | headb03==96 ) ///
											 | (inrange(headb04,1,13) | headb04==96 ) ///
											 | (inrange(headb05,1,13) | headb05==96 ) ///
											 | (inrange(headb06,1,13) | headb06==96 ) ///
											 | (inrange(headb07,1,13) | headb07==96 ) ///
											 | (inrange(headb08,1,13) | headb08==96 ) ///
											 | (inrange(headb09,1,13) | headb09==96 ) ///
											 | (inrange(headb10,1,13) | headb10==96 ) ///
											 | (inrange(headb11,1,13) | headb11==96 ) ///
											 | (inrange(headb12,1,13) | headb12==96 ) ///
											 | (inrange(headb13,1,13) | headb13==96 )
replace r2housewka = 1 if headb01==12 ///
											 | headb02==12 ///
											 | headb03==12 ///
											 | headb04==12 ///
											 | headb05==12 ///
											 | headb06==12 ///
											 | headb07==12 ///
											 | headb08==12 ///
											 | headb09==12 ///
											 | headb10==12 ///
											 | headb11==12 ///
											 | headb12==12 ///
											 | headb13==12
label variable r2housewka "r2housewka:w2 R Some Diff-Doing work around the house or garden"

*wave 2 spouse difficulty preparing a hot meal
gen s2housewka =.
spouse r2housewka, result(s2housewka) wave(2)
label variable s2housewka "s2housewka:w2 S Some Diff-Doing work around the house or garden"

*value labels
label values r2housewka diff
label values s2housewka diff

*check 


***Difficulty Walking 100m***
*Wave 2 respondent difficulty walking 100m
gen r2walk100a =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2walk100a)		
replace r2walk100a = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2walk100a = 1 if heada01== 1 ///
											 | heada02== 1 ///
											 | heada03== 1 ///
											 | heada04== 1 ///
											 | heada05== 1 ///
											 | heada06== 1 ///
											 | heada07== 1 ///
											 | heada08== 1 ///
											 | heada09== 1 ///
											 | heada10== 1
label variable r2walk100a "r2walk100a:w2 R Some Diff-Walk 100y"

*wave 2 spouse difficulty walking 100m
gen s2walk100a =.
spouse r2walk100a, result(s2walk100a) wave(2)
label variable s2walk100a "s2walk100a:w2 S Some Diff-Walk 100y"

*value labels
label values r2walk100a diff
label values s2walk100a diff

*check 

***Difficulty sitting for 2 hours***
*Wave 2 respondent difficulty sitting for 2 hours
gen r2sita =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2sita)
replace r2sita = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2sita = 1 if heada01==2 ///
											 | heada02==2 ///
											 | heada03==2 ///
											 | heada04==2 ///
											 | heada05==2 ///
											 | heada06==2 ///
											 | heada07==2 ///
											 | heada08==2 ///
											 | heada09==2 ///
											 | heada10==2
label variable r2sita "r2sita:w2 R Some Diff-Sit for 2 hours"

*wave 2 spouse difficulty sitting for 2 hours
gen s2sita =.
spouse r2sita, result(s2sita) wave(2)
label variable s2sita "s2sita:w2 S Some Diff-Sit for 2 hours"

*value labels
label values r2sita diff
label values s2sita diff

*check 

***Difficulty getting up from a chair***
*Wave 2 respondent difficulty getting up from a chair
gen r2chaira =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2chaira)
replace r2chaira = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2chaira = 1 if heada01==3 ///
											 | heada02==3 ///
											 | heada03==3 ///
											 | heada04==3 ///
											 | heada05==3 ///
											 | heada06==3 ///
											 | heada07==3 ///
											 | heada08==3 ///
											 | heada09==3 ///
											 | heada10==3
label variable r2chaira "r2chaira:w2 R Some Diff-Get up fr chair"

*wave 2 spouse difficulty getting up from a chair
gen s2chaira =.
spouse r2chaira, result(s2chaira) wave(2)
label variable s2chaira "s2chaira:w2 S Some Diff-Get up fr chair"

*value labels
label values r2chaira diff
label values s2chaira diff

*check 

***Difficulty climbing several flights of stairs***
*Wave 2 respondent difficulty climbing several flights of stairs
gen r2climsa =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2climsa)
replace r2climsa = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2climsa = 1 if heada01==4 ///
											 | heada02==4 ///
											 | heada03==4 ///
											 | heada04==4 ///
											 | heada05==4 ///
											 | heada06==4 ///
											 | heada07==4 ///
											 | heada08==4 ///
											 | heada09==4 ///
											 | heada10==4
label variable r2climsa "r2climsa:w2 R Some Diff-Clmb sev flt str"

*wave 2 spouse difficulty climbing several flights of stairs
gen s2climsa =.
spouse r2climsa, result(s2climsa) wave(2)
label variable s2climsa "s2climsa:w2 S Some Diff-Clmb sev flt str"

*value labels
label values r2climsa diff
label values s2climsa diff

*check 

***Difficulty climbing one flight of stairs***
*Wave 2 respondent difficulty climbing one flight of stairs
gen r2clim1a =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2clim1a)
replace r2clim1a = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2clim1a = 1 if heada01==5 ///
											 | heada02==5 ///
											 | heada03==5 ///
											 | heada04==5 ///
											 | heada05==5 ///
											 | heada06==5 ///
											 | heada07==5 ///
											 | heada08==5 ///
											 | heada09==5 ///
											 | heada10==5
label variable r2clim1a "r2clim1a:w2 R Some Diff-Clmb 1 flt str"

*wave 2 spouse difficulty climbing one flight of stairs
gen s2clim1a =.
spouse r2clim1a, result(s2clim1a) wave(2)
label variable s2clim1a "s2clim1a:w2 S Some Diff-Clmb 1 flt str"

*value labels
label values r2clim1a diff
label values s2clim1a diff

*check 

***Difficulty stooping/keeling/crouching***
*Wave 2 respondent difficulty stooping/keeling/crouching
gen r2stoopa =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2stoopa)
replace r2stoopa = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2stoopa = 1 if heada01==6 ///
											 | heada02==6 ///
											 | heada03==6 ///
											 | heada04==6 ///
											 | heada05==6 ///
											 | heada06==6 ///
											 | heada07==6 ///
											 | heada08==6 ///
											 | heada09==6 ///
											 | heada10==6
label variable r2stoopa "r2stoopa:w2 R Some Diff-Stoop/Kneel/Crch"

*wave 2 spouse difficulty stooping/keeling/crouching
gen s2stoopa =.
spouse r2stoopa, result(s2stoopa) wave(2)
label variable s2stoopa "s2stoopa:w2 S Some Diff-Stoop/Kneel/Crch"

*value labels
label values r2stoopa diff
label values s2stoopa diff

*check 

***Difficulty lifting/carrying 10lbs***
*Wave 2 respondent difficulty lifting/carrying 10lbs
gen r2lifta =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2lifta)
replace r2lifta = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2lifta = 1 if heada01==9 ///
											 | heada02==9 ///
											 | heada03==9 ///
											 | heada04==9 ///
											 | heada05==9 ///
											 | heada06==9 ///
											 | heada07==9 ///
											 | heada08==9 ///
											 | heada09==9 ///
											 | heada10==9
label variable r2lifta "r2lifta:w2 R Some Diff-Lift/carry 10lbs"

*wave 2 spouse difficulty lifting/carrying 10lbs
gen s2lifta =.
spouse r2lifta, result(s2lifta) wave(2)
label variable s2lifta "s2lifta:w2 S Some Diff-Lift/carry 10lbs"

*value labels
label values r2lifta diff
label values s2lifta diff

*check 

***Difficulty picking up a dime***
*Wave 2 respondent difficulty picking up a dime
gen r2dimea =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2dimea)
replace r2dimea = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2dimea = 1 if heada01== 10 ///
											 | heada02== 10 ///
											 | heada03== 10 ///
											 | heada04== 10 ///
											 | heada05== 10 ///
											 | heada06== 10 ///
											 | heada07== 10 ///
											 | heada08== 10 ///
											 | heada09== 10 ///
											 | heada10== 10
label variable r2dimea "r2dimea:w2 R Some Diff-Pick up a 5p coin"

*wave 2 spouse difficulty picking up a dime
gen s2dimea =.
spouse r2dimea, result(s2dimea) wave(2)
label variable s2dimea "s2dimea:w2 S Some Diff-Pick up a 5p coin"

*value labels
label values r2dimea diff
label values s2dimea diff

*check 

***Difficulty reaching/extending arms up***
*Wave 2 respondent difficulty reaching/extending arms up
gen r2armsa =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2armsa)
replace r2armsa = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2armsa = 1 if heada01==7 ///
											 | heada02==7 ///
											 | heada03==7 ///
											 | heada04==7 ///
											 | heada05==7 ///
											 | heada06==7 ///
											 | heada07==7 ///
											 | heada08==7 ///
											 | heada09==7 ///
											 | heada10==7
label variable r2armsa "r2armsa:w2 R Some Diff-Rch/xtnd arms up"

*wave 2 spouse difficulty reaching/extending arms up
gen s2armsa =.
spouse r2armsa, result(s2armsa) wave(2)
label variable s2armsa "s2armsa:w2 S Some Diff-Rch/xtnd arms up"

*value labels
label values r2armsa diff
label values s2armsa diff

*check 

***Difficulty pushing/pulling a large object***
*Wave 2 respondent difficulty pushing/pulling a large object
gen r2pusha =.
missing_w2 heada01 ///
					 heada02 ///
					 heada03 ///
					 heada04 ///
					 heada05 ///
					 heada06 ///
					 heada07 ///
					 heada08 ///
					 heada09 ///
					 heada10, result(r2pusha)
replace r2pusha = 0 if (inrange(heada01,1,10) | heada01==96 ) ///
											 | (inrange(heada02,1,10) | heada02==96 ) ///
											 | (inrange(heada03,1,10) | heada03==96 ) ///
											 | (inrange(heada04,1,10) | heada04==96 ) ///
											 | (inrange(heada05,1,10) | heada05==96 ) ///
											 | (inrange(heada06,1,10) | heada06==96 ) ///
											 | (inrange(heada07,1,10) | heada07==96 ) ///
											 | (inrange(heada08,1,10) | heada08==96 ) ///
											 | (inrange(heada09,1,10) | heada09==96 ) ///
											 | (inrange(heada10,1,10) | heada10==96 )
replace r2pusha = 1 if heada01==8 ///
											 | heada02==8 ///
											 | heada03==8 ///
											 | heada04==8 ///
											 | heada05==8 ///
											 | heada06==8 ///
											 | heada07==8 ///
											 | heada08==8 ///
											 | heada09==8 ///
											 | heada10==8
label variable r2pusha "r2pusha:w2 R Some Diff-Push/pull lg obj"

*wave 2 spouse difficulty pushing/pulling a large object
gen s2pusha =.
spouse r2pusha, result(s2pusha) wave(2)
label variable s2pusha "s2pusha:w2 S Some Diff-Push/pull lg obj"

*value labels
label values r2pusha diff
label values s2pusha diff

*check 

***ADL Summary 0-5***
*wave 2 respondent ADL Summary 0-5
H_ELSA_summary_v adla, wave(2) add(r2batha r2dressa r2eata r2beda r2walkra) 
local varlist_m = r(varlist_m)
label variable r2adla "r2adla:w2 R Some Diff-ADLs /0-5"

*wave 2 respondent Missing in ADL Summary
label variable r2adlam "r2adlam:w2 r Missings in Some Diff-ADLs /0-5"

*wave 2 spouse ADL Summary 0-5
gen s2adla =.
spouse r2adla, result(s2adla) wave(2)
label variable s2adla "s2adla:w2 S Some Diff-ADLs /0-5"

*wave 2 spouse Missings in ADL Summary 0-5
gen s2adlam =.
spouse r2adlam, result(s2adlam) wave(2)
label variable s2adlam "s2adlam:w2 S Missings in Some Diff-ADLs /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***ADL Wallace Summary 0-3***
*wave 2 respondent ADL Wallace Summary 0-3
H_ELSA_summary_v adlwa, wave(2) add(r2batha r2dressa r2eata) 
local varlist_m = r(varlist_m)
label variable r2adlwa "r2adlwa:w2 R Some Diff-ADLs:Wallace /0-3"

*wave 2 respondent Missings in ADL Wallace Summary 0-3
label variable r2adlwam "r2adlwam:w2 R Missings in Some Diff-ADLs:Wallace /0-3"

*wave 2 spouse ADL Wallace Summary 0-3
gen s2adlwa =.
spouse r2adlwa, result(s2adlwa) wave(2)
label variable s2adlwa "s2adlwa:w2 S Some Diff-ADLs:Wallace /0-3"

*wave 2 spouse Missings in ADL Wallace Summary 0-3
gen s2adlwam =.
spouse r2adlwam, result(s2adlwam) wave(2)
label variable s2adlwam "s2adlwam:w2 S Missings in Some Diff-ADLs:Wallace /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-3***
*wave 2 respondent IADLs Summary 0-3
H_ELSA_summary_v iadla, wave(2) add(r2phonea r2moneya r2medsa) 
local varlist_m = r(varlist_m)
label variable r2iadla "r2iadla:w2 R Some Diff-IADLs: /0-3"

*wave 2 respondent Missings in IADLs Summary 0-3
label variable r2iadlam "r2iadlam:w2 R Missings in Some Diff-IADLs: /0-3"

*wave 2 spouse IADLs Summary 0-3
gen s2iadla =.
spouse r2iadla, result(s2iadla) wave(2)
label variable s2iadla "s2iadla:w2 S Some Diff-IADLs: /0-3"

*wave 2 spouse Missings in IADLs Summary 0-3
gen s2iadlam =.
spouse r2iadlam, result(s2iadlam) wave(2)
label variable s2iadlam "s2iadlam:w2 S Missings in Some Diff-IADLs: /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-5***
*wave 2 respondent IADLs Summary 0-5
H_ELSA_summary_v iadlza, wave(2) add(r2phonea r2moneya r2medsa r2shopa r2mealsa) 
local varlist_m = r(varlist_m)
label variable r2iadlza "r2iadlza:w2 R Some Diff-IADLs: /0-5"

*wave 2 respondent Missings in IADLs Summary 0-5
label variable r2iadlzam "r2iadlzam:w2 R Missings in Some Diff-IADLs: /0-5"

*wave 2 spouse IADLs Summary 0-5
gen s2iadlza =.
spouse r2iadlza, result(s2iadlza) wave(2)
label variable s2iadlza "s2iadlza:w2 S Some Diff-IADLs: /0-5"

*wave 2 spouse Missings in IADLs Summary 0-5
gen s2iadlzam =.
spouse r2iadlzam, result(s2iadlzam) wave(2)
label variable s2iadlzam "s2iadlzam:w2 S Missings in Some Diff-IADLs: /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Mobility Summary***
*wave 2 respondent Mobility Summary
H_ELSA_summary_v mobilb, wave(2) add(r2walk100a r2walkra r2climsa r2clim1a) 
local varlist_m = r(varlist_m)
label variable r2mobilb "r2mobilb:w2 R Some Diff-Mobility /0-4"

*wave 2 respondent Missings in Mobility Summary
label variable r2mobilbm "r2mobilbm:w2 R Missings in Some Diff-Mobility /0-4"

*wave 2 spouse Mobility Summary
gen s2mobilb =.
spouse r2mobilb, result(s2mobilb) wave(2)
label variable s2mobilb "s2mobilb:w2 S Some Diff-Mobility /0-4"

*wave 2 spouse Missings in Mobility Summary
gen s2mobilbm =.
spouse r2mobilbm, result(s2mobilbm) wave(2)
label variable s2mobilbm "s2mobilbm:w2 S Missings in Some Diff-Mobility /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Large Muscle Summary***
*wave 2 respondent Large Muscle Summary
H_ELSA_summary_v lgmusa, wave(2) add(r2sita r2chaira r2stoopa r2pusha) 
local varlist_m = r(varlist_m)
label variable r2lgmusa "r2lgmusa:w2 R Some Diff-Large muscle /0-4"

*wave 2 respondent Missings in Large Muscle Summary
label variable r2lgmusam "r2lgmusam:w2 R Missings in Some Diff-Large muscle /0-4"

*wave 2 spouse Large Muscle Summary
gen s2lgmusa =.
spouse r2lgmusa, result(s2lgmusa) wave(2)
label variable s2lgmusa "s2lgmusa:w2 S Some Diff-Large muscle /0-4"

*wave 2 spouse Missings in Large Muscle Summary
gen s2lgmusam =.
spouse r2lgmusam, result(s2lgmusam) wave(2)
label variable s2lgmusam "s2lgmusam:w2 S Missings in Some Diff-Large muscle /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Gross Motor Summary***
*wave 2 respondent Gross Motor Summary
H_ELSA_summary_v grossa, wave(2) add(r2walk100a r2walkra r2clim1a r2beda r2batha) 
local varlist_m = r(varlist_m)
label variable r2grossa "r2grossa:w2 R Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 2 respondent Missings in Gross Motor Summary
label variable r2grossam "r2grossam:w2 R Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 2 spouse Gross Motor Summary
gen s2grossa =.
spouse r2grossa, result(s2grossa) wave(2)
label variable s2grossa "s2grossa:w2 S Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 2 spouse Missings in Gross Motor Summary
gen s2grossam =.
spouse r2grossam, result(s2grossam) wave(2)
label variable s2grossam "s2grossam:w2 S Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Fine Motor Summary***
*wave 2 respondent Fine Motor Summary
H_ELSA_summary_v finea, wave(2) add(r2dimea r2eata r2dressa) 
local varlist_m = r(varlist_m)
label variable r2finea "r2finea:w2 R Some Diff-Dime/eat/dress /0-3"

*wave 2 respondent Missings in Fine Motor Summary
label variable r2fineam "r2fineam:w2 R Missings in Some Diff-Dime/eat/dress /0-3"

*wave 2 spouse Fine Motor Summary
gen s2finea =.
spouse r2finea, result(s2finea) wave(2)
label variable s2finea "s2finea:w2 S Some Diff-Dime/eat/dress /0-3"

*wave 2 spouse Missings in Fine Motor Summary
gen s2fineam =.
spouse r2fineam, result(s2fineam) wave(2)
label variable s2fineam "s2fineam:w2 S Missings in Some Diff-Dime/eat/dress /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***Felt depressed (0,1)***
*Wave 2 respondent Felt depressed (0,1)
gen r2depres =.
missing_w2 PScedA, result(r2depres)
replace r2depres =.p if askpx1 == 1
replace r2depres = 0 if PScedA == 2
replace r2depres = 1 if PScedA == 1
label variable r2depres "r2depres:w2 r CESD: Felt depressed (0,1)"

*wave 2 spouse Felt depressed (0,1)
gen s2depres =.
spouse r2depres, result(s2depres) wave(2)
label variable s2depres "s2depres:w2 s CESD: Felt depressed (0,1)"

*value labels
label values r2depres cesd
label values s2depres cesd

*check

***Everything is an effort***
*Wave 2 respondent Everything is an effort
gen r2effort =.
missing_w2 PScedB, result(r2effort)
replace r2effort =.p if askpx1 == 1
replace r2effort = 0 if PScedB == 2
replace r2effort = 1 if PScedB == 1
label variable r2effort "r2effort:w2 r CESD: Everthing an effort (0,1)"

*wave 2 spouse Everything is an effort
gen s2effort =.
spouse r2effort, result(s2effort) wave(2)
label variable s2effort "s2effort:w2 s CESD: Everthing an effort (0,1)"

*value labels
label values r2effort cesd
label values s2effort cesd

*check

***Sleep was restless (0,1)***
*Wave 2 respondent Sleep was restless (0,1)
gen r2sleepr =. 
missing_w2 PScedC, result(r2sleepr)
replace r2sleepr =.p if askpx1 == 1
replace r2sleepr = 0 if PScedC == 2
replace r2sleepr = 1 if PScedC == 1
label variable r2sleepr "r2sleepr:w2 r CESD: Sleep was restless (0,1)"

*wave 2 spouse Sleep was restless (0,1)
gen s2sleepr =.
spouse r2sleepr, result(s2sleepr) wave(2)
label variable s2sleepr "s2sleepr:w2 s CESD: Sleep was restless (0,1)"

*value labels
label values r2sleepr cesd
label values s2sleepr cesd

*check

***Was happy (0,1)***
*Wave 2 respondent Was happy (0,1)
gen r2whappy =.
missing_w2 PScedD, result(r2whappy)
replace r2whappy =.p if askpx1 == 1
replace r2whappy = 0 if PScedD == 2
replace r2whappy = 1 if PScedD == 1
label variable r2whappy "r2whappy:w2 r CESD: Was happy (0,1)"

*wave 2 spouse Was happy (0,1)
gen s2whappy =.
spouse r2whappy, result(s2whappy) wave(2)
label variable s2whappy "s2whappy:w2 s CESD: Was happy (0,1)"

*value labels
label values r2whappy cesd
label values s2whappy cesd

*check

***Felt lonely (0,1)***
*Wave 2 respondent Felt lonely (0,1)
gen r2flone =.
missing_w2 PScedE, result(r2flone)
replace r2flone =.p if askpx1 == 1
replace r2flone = 0 if PScedE == 2
replace r2flone = 1 if PScedE == 1
label variable r2flone "r2flone:w2 r CESD: Felt lonely (0,1)"

*wave 2 spouse Felt lonely (0,1)
gen s2flone =.
spouse r2flone, result(s2flone) wave(2)
label variable s2flone "s2flone:w2 s CESD: Felt lonely (0,1)"

*value labels
label values r2flone cesd
label values s2flone cesd

*check

***Felt sad (0,1)***
*Wave 2 respondent Felt sad (0,1)
gen r2fsad =.
missing_w2 PScedG, result(r2fsad)
replace r2fsad =.p if askpx1 == 1
replace r2fsad = 0 if PScedG == 2
replace r2fsad = 1 if PScedG == 1
label variable r2fsad "r2fsad:w2 r CESD: Felt sad (0,1)"

*wave 2 spouse Felt sad (0,1)
gen s2fsad =.
spouse r2fsad, result(s2fsad) wave(2)
label variable s2fsad "s2fsad:w2 s CESD: Felt sad (0,1)"

*value labels
label values r2fsad cesd
label values s2fsad cesd

*check

***Could not get going (0,1)***
*Wave 2 respondent Could not get going (0,1)
gen r2going =.
missing_w2 PScedH, result(r2going)
replace r2going =.p if askpx1 == 1
replace r2going = 0 if PScedH == 2
replace r2going = 1 if PScedH == 1
label variable r2going "r2going:w2 r CESD: Could not get going (0,1)"

*wave 2 spouse Could not get going (0,1)
gen s2going =.
spouse r2going, result(s2going) wave(2)
label variable s2going "s2going:w2 s CESD: Could not get going (0,1)"

*value labels
label values r2going cesd
label values s2going cesd

*check

***Enjoyed life (0,1)***
*Wave 2 respondent Enjoyed life (0,1)
gen r2enlife =.
missing_w2 PScedF, result(r2enlife)
replace r2enlife =.p if askpx1 == 1
replace r2enlife = 0 if PScedF == 2
replace r2enlife = 1 if PScedF == 1
label variable r2enlife "r2enlife:w2 r CESD: Enjoyed life (0,1)"

*wave 2 spouse Enjoyed life (0,1)
gen s2enlife =.
spouse r2enlife, result(s2enlife) wave(2)
label variable s2enlife "s2enlife:w2 s CESD: Enjoyed life (0,1)"

*value labels
label values r2enlife cesd
label values s2enlife cesd

*check

***CESD Score***
*wave 2 respondent CESD score number of missings
egen r2cesdm = rowmiss(r2depres r2effort r2sleepr r2flone r2fsad r2going r2whappy r2enlife) if inw2 == 1
label variable r2cesdm "r2cesdm:w2 r missings in CESD score"

*wave 2 spouse CESD score number of missings
gen s2cesdm =.
spouse r2cesdm, result(s2cesdm) wave(2)
label variable s2cesdm "s2cesdm:w2 s missings in CESD score"

local cesd
foreach v of varlist r2depres r2effort r2sleepr r2flone r2fsad r2going  {
	recode `v' (miss = 0), generate(`v'_m)
	local cesd `cesd' `v'_m
}

foreach u of varlist r2whappy r2enlife {
	recode `u' (miss = 1), generate(`u'_m)
	local cesd `cesd' `u'_m
}

*wave 2 respondent CESD score
gen r2cesd=.
missing_H r2depres r2effort r2sleepr r2flone r2fsad r2going r2whappy r2enlife, result(r2cesd)
replace r2cesd =.p if askpx1 == 1		 
replace r2cesd = r2depres_m + r2effort_m + r2sleepr_m + r2flone_m + r2fsad_m + r2going_m + (1-r2whappy_m) + (1-r2enlife_m) if inrange(r2cesdm,0,7)
label variable r2cesd "r2cesd:w2 r CESD Score"

*wave 2 spouse CESD score
gen s2cesd =.
spouse r2cesd, result(s2cesd) wave(2)
label variable s2cesd "s2cesd:w2 s CESD Score"

*check 

*drop intermediate variables
drop `cesd'

***Ever had high blood pressure***
*define preload
gen preload = r1hibpe if inlist(r1hibpe,0,1) & inw2 == 1

*wave 2 respondent ever had high blood pressure
gen r2hibpe =.
missing_w2 hediac1 hedim01 hedim02 hedim03 hedim04 hedim05 ///
					 hedim06 hedim07 hedim08, result(r2hibpe)
replace r2hibpe = 0 if preload == 0 & hediac1 != 2
replace r2hibpe = 0 if (  (inrange(hedim01,1,9) | inlist(hedim01,51,52,85,86,95,96)) ///
				 		| (inrange(hedim02,1,9) | inlist(hedim02,51,52,85,86,95,96)) ///
				 		| (inrange(hedim03,1,9) | inlist(hedim03,51,52,85,86,95,96)) ///
				 		| (inrange(hedim04,1,9) | inlist(hedim04,51,52,85,86,95,96)) ///
						| (inrange(hedim05,1,9) | inlist(hedim05,51,52,85,86,95,96)) ///
						| (inrange(hedim06,1,9) | inlist(hedim06,51,52,85,86,95,96)) ///
						| (inrange(hedim07,1,9) | inlist(hedim07,51,52,85,86,95,96)) ///
						| (inrange(hedim08,1,9) | inlist(hedim08,51,52,85,86,95,96)) )
replace r2hibpe = 0 if preload == 1 & hediac1 == 2
replace r2hibpe = 1 if (  hedim01 == 1 ///
		 	 	 		| hedim02 == 1 ///
	  		 		    | hedim03 == 1 ///
				 		| hedim04 == 1 ///
				 		| hedim05 == 1 ///
				 		| hedim06 == 1 ///
				 		| hedim07 == 1 ///
				 		| hedim08 == 1 )
replace r2hibpe = 1 if preload == 1 & hediac1 != 2
label variable r2hibpe "r2hibpe:w2 r ever had high blood pressure"

*wave 2 respondent high blood pressure dispute flag
gen r2hibpf =.
replace r2hibpf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedim01,1,9) | inlist(hedim01,-9,-8,51,52,85,86,95,96)) | ///
					  (inrange(hedim02,1,9) | inlist(hedim02,-9,-8,51,52,85,86,95,96)) | ///
				 	  (inrange(hedim03,1,9) | inlist(hedim03,-9,-8,51,52,85,86,95,96)) | ///
				 	  (inrange(hedim04,1,9) | inlist(hedim04,-9,-8,51,52,85,86,95,96)) | ///
				 	  (inrange(hedim05,1,9) | inlist(hedim05,-9,-8,51,52,85,86,95,96)) | ///
				 	  (inrange(hedim06,1,9) | inlist(hedim06,-9,-8,51,52,85,86,95,96)) | ///
				 	  (inrange(hedim07,1,9) | inlist(hedim07,-9,-8,51,52,85,86,95,96)) | ///
				 	  (inrange(hedim08,1,9) | inlist(hedim08,-9,-8,51,52,85,86,95,96))
replace r2hibpf = 3 if preload == 1 & hediac1 == 2
replace r2hibpf = .m if r2hibpf==. & inw2 == 1
label variable r2hibpf "r2hibpf:w2 r flag dispute chg high blood pressure"

*wave 1 respondent high blood pressure dispute flag
replace r1hibpf = 6 if preload == 1 & hediac1 == 2 & r1hibpf == 0

*reset wave 1 if disputed
replace r1hibpe = 0 if preload == 1 & hediac1 == 2 & r1hibpe == 1

*value labels
label values r2hibpe health_problems
label values r2hibpf health_problems_flag

*check 

drop preload

***Ever had diabetes***
*define preload
gen preload = r1diabe if inlist(r1diabe,0,1) & inw2 == 1

*wave 2 respondent ever had diabetes
gen r2diabe =.
missing_w2 HeDiaC7 hedim01 hedim02 hedim03 hedim04 ///
					 hedim05  hedim06 hedim07 hedim08, result(r2diabe)
replace r2diabe = 0 if preload == 0 & HeDiaC7 != 2
replace r2diabe = 0 if (  (inrange(hedim01,1,9) | inlist(hedim01,51,52,85,86,95,96)) ///
										 		| (inrange(hedim02,1,9) | inlist(hedim02,51,52,85,86,95,96)) ///
										 		| (inrange(hedim03,1,9) | inlist(hedim03,51,52,85,86,95,96)) ///
										 		| (inrange(hedim04,1,9) | inlist(hedim04,51,52,85,86,95,96)) ///
												| (inrange(hedim05,1,9) | inlist(hedim05,51,52,85,86,95,96)) ///
												| (inrange(hedim06,1,9) | inlist(hedim06,51,52,85,86,95,96)) ///
												| (inrange(hedim07,1,9) | inlist(hedim07,51,52,85,86,95,96)) ///
												| (inrange(hedim08,1,9) | inlist(hedim08,51,52,85,86,95,96)) )
replace r2diabe = 0 if preload == 1 & HeDiaC7 == 2
replace r2diabe = 1 if (  hedim01 == 7 ///
								 	 	 		| hedim02 == 7 ///
							  		 		| hedim03 == 7 ///
										 		| hedim04 == 7 ///
										 		| hedim05 == 7 ///
										 		| hedim06 == 7 ///
										 		| hedim07 == 7 ///
										 		| hedim08 == 7 )
replace r2diabe = 1 if preload == 1 & HeDiaC7 != 2
label variable r2diabe "r2diabe:w2 r ever had diabetes"

*wave 2 respondent diabetes dispute flag
gen r2diabf =.
replace r2diabf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedim01,1,9) | inlist(hedim01,-9,-8,51,52,85,86,95,96)) | ///
										  (inrange(hedim02,1,9) | inlist(hedim02,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim03,1,9) | inlist(hedim03,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim04,1,9) | inlist(hedim04,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim05,1,9) | inlist(hedim05,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim06,1,9) | inlist(hedim06,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim07,1,9) | inlist(hedim07,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim08,1,9) | inlist(hedim08,-9,-8,51,52,85,86,95,96))
replace r2diabf = 3 if preload == 1 & HeDiaC7 == 2
replace r2diabf = .m if r2diabf==. & inw2 == 1
label variable r2diabf "r2diabf:w2 r flag dispute chg diabetes"

*wave 1 respondent diabetes dispute flag
replace r1diabf = 6 if preload == 1 & HeDiaC7 == 2 & r1diabf == 0

*reset wave 1 if disputed
replace r1diabe = 0 if preload == 1 & HeDiaC7 == 2 & r1diabe == 1

*value labels
label values r2diabe health_problems
label values r2diabf health_problems_flag

*check 

drop preload

***Ever had cancer***
*define preload
gen preload = r1cancre if inlist(r1cancre,0,1) & inw2 == 1

*wave 2 respondent ever had cancer
gen r2cancre =.
missing_w2 HeDiaD5 hedib01 hedib02 hedib03 hedib04, result(r2cancre)
replace r2cancre = 0 if preload == 0 & HeDiaD5 != 2
replace r2cancre = 0 if ( (inrange(hedib01,1,9) | hedib01 == 96) ///
										 		| (inrange(hedib02,1,9) | hedib02 == 96) ///
										 		| (inrange(hedib03,1,9) | hedib03 == 96) ///
										 		| (inrange(hedib04,1,9) | hedib04 == 96) )
replace r2cancre = 0 if preload == 1 & HeDiaD5 == 2
replace r2cancre = 1 if (  hedib01 == 5 ///
								 	 	 		 | hedib02 == 5 ///
							  		 		 | hedib03 == 5 ///
										 		 | hedib04 == 5 )
replace r2cancre = 1 if preload == 1 & HeDiaD5 != 2
label variable r2cancre "r2cancre:w2 r ever had cancer"

*wave 2 respondent cancer dispute flag
gen r2cancrf =.
replace r2cancrf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96)) | ///
										  (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96)) | ///
									 	  (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96)) | ///
									 	  (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96))
replace r2cancrf = 3 if preload == 1 & HeDiaD5 == 2
label variable r2cancrf "r2cancrf:w2 r flag dispute chg cancer"

*wave 1 respondent cancer dispute flag
replace r1cancrf = 6 if preload == 1 & HeDiaD5 == 2 & r1cancrf == 0

*reset wave 1 if disputed
replace r1cancre = 0 if preload == 1 & HeDiaD5 == 2 & r1cancre == 1

*value labels
label values r2cancre health_problems
label values r2cancrf health_problems_flag

*check 

drop preload

***Ever had lung disease***
*define preload
gen preload = r1lunge if inlist(r1lunge,0,1) & inw2 == 1

*wave 2 respondent ever had lung disease
gen r2lunge =.
missing_w2 hediad1 hedib01 hedib02 hedib03 hedib04, result(r2lunge)
replace r2lunge = 0 if preload == 0 & hediad1 != 2
replace r2lunge = 0 if ( (inrange(hedib01,1,9) | hedib01 == 96) ///
										 	 | (inrange(hedib02,1,9) | hedib02 == 96) ///
										 	 | (inrange(hedib03,1,9) | hedib03 == 96) ///
										 	 | (inrange(hedib04,1,9) | hedib04 == 96) )
replace r2lunge = 0 if preload == 1 & hediad1 == 2
replace r2lunge = 1 if (  hedib01 == 1 ///
								 	 	 		| hedib02 == 1 ///
							  		 		| hedib03 == 1 ///
										 		| hedib04 == 1 )
replace r2lunge = 1 if preload == 1 & hediad1 != 2
label variable r2lunge "r2lunge:w2 r ever had lung disease"

*wave 2 respondent lung disease dispute flag
gen r2lungf =.
replace r2lungf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96)) | ///
										  (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96)) | ///
									 	  (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96)) | ///
									 	  (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96))
replace r2lungf = 3 if preload == 1 & hediad1 == 2
label variable r2lungf "r2lungf:w2 r flag dispute chg lung disease"

*wave 1 respondent lung disease dispute flag
replace r1lungf = 6 if preload == 1 & hediad1 == 2 & r1lungf == 0

*reset wave 1 if disputed
replace r1lunge = 0 if preload == 1 & hediad1 == 2 & r1lunge == 1

*value labels
label values r2lunge health_problems
label values r2lungf health_problems_flag

*check 

drop preload

***Ever had heart problems***
*define preload
gen preload = r1hearte if inlist(r1hearte,0,1) & inw2 == 1

*wave 2 respondent ever had heart problems
gen r2hearte =.
missing_w2 HeDiaC2 HeDiaC3 HeDiaC4 HeDiaC5 HeDiaC6 HeDiaC9 /// 
					 hedim01 hedim02 hedim03 hedim04 ///
					 hedim05  hedim06 hedim07 hedim08, result(r2hearte)
replace r2hearte = 0 if preload == 0 & HeDiaC2 != 2 & HeDiaC3 != 2 & ///
                                       HeDiaC4 != 2 & HeDiaC5 != 2 & ///
                                       HeDiaC6 != 2 & HeDiaC9 != 2
replace r2hearte = 0 if ( (inrange(hedim01,1,9) | inlist(hedim01,51,52,85,86,95,96)) ///
										 		| (inrange(hedim02,1,9) | inlist(hedim02,51,52,85,86,95,96)) ///
										 		| (inrange(hedim03,1,9) | inlist(hedim03,51,52,85,86,95,96)) ///
										 		| (inrange(hedim04,1,9) | inlist(hedim04,51,52,85,86,95,96)) ///
												| (inrange(hedim05,1,9) | inlist(hedim05,51,52,85,86,95,96)) ///
												| (inrange(hedim06,1,9) | inlist(hedim06,51,52,85,86,95,96)) ///
												| (inrange(hedim07,1,9) | inlist(hedim07,51,52,85,86,95,96)) ///
												| (inrange(hedim08,1,9) | inlist(hedim08,51,52,85,86,95,96)) )
replace r2hearte = 0 if preload == 1 & (HeDiaC2 == 2 | HeDiaC3 == 2 | ///
                                        HeDiaC4 == 2 | HeDiaC5 == 2 | ///
                                        HeDiaC6 == 2 | HeDiaC9 == 2 )
replace r2hearte = 1 if (  inlist(hedim01,2,3,4,5,6,51,52,95) ///
								 	 	 		 | inlist(hedim02,2,3,4,5,6,51,52,95) ///
							  		 		 | inlist(hedim03,2,3,4,5,6,51,52,95) ///
										 		 | inlist(hedim04,2,3,4,5,6,51,52,95) ///
										 		 | inlist(hedim05,2,3,4,5,6,51,52,95) ///
										 		 | inlist(hedim06,2,3,4,5,6,51,52,95) ///
										 		 | inlist(hedim07,2,3,4,5,6,51,52,95) ///
										 		 | inlist(hedim08,2,3,4,5,6,51,52,95) )
replace r2hearte = 1 if preload == 1 & HeDiaC2 != 2 & HeDiaC3 != 2 & ///
                                       HeDiaC4 != 2 & HeDiaC5 != 2 & ///
                                       HeDiaC6 != 2 & HeDiaC9 != 2
label variable r2hearte "r2hearte:w2 r ever had heart problems"

*wave 2 respondent heart problems dispute flag
gen r2heartf =.
replace r2heartf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedim01,1,9) | inlist(hedim01,-9,-8,51,52,85,86,95,96)) | ///
										  (inrange(hedim02,1,9) | inlist(hedim02,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim03,1,9) | inlist(hedim03,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim04,1,9) | inlist(hedim04,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim05,1,9) | inlist(hedim05,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim06,1,9) | inlist(hedim06,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim07,1,9) | inlist(hedim07,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim08,1,9) | inlist(hedim08,-9,-8,51,52,85,86,95,96))
replace r2heartf = 3 if preload == 1 & (HeDiaC2 == 2 | HeDiaC3 == 2 | HeDiaC4 == 2 | ///
                                        HeDiaC5 == 2 | HeDiaC6 == 2 | HeDiaC9 == 2)
replace r2heartf = .m if r2heartf==. & inw2 == 1
label variable r2heartf "r2heartf:w2 r flag dispute chg heart problems"

*wave 1 respondent  heart problems dispute flag
replace r1heartf = 6 if preload == 1 & (HeDiaC2 == 2 | HeDiaC3 == 2 | HeDiaC4 == 2 | ///
                                        HeDiaC5 == 2 | HeDiaC6 == 2 | HeDiaC9 == 2) & ///
                                       r1heartf == 0

*reset wave 1 if disputed
replace r1hearte = 0 if preload == 1 & (HeDiaC2 == 2 | HeDiaC3 == 2 | HeDiaC4 == 2 | ///
                                        HeDiaC5 == 2 | HeDiaC6 == 2 | HeDiaC9 == 2) & ///
                                       r1hearte == 1

*value labels
label values r2hearte health_problems
label values r2heartf health_problems_flag

*check 

drop preload

***Ever had stroke***
*define preload
gen preload = r1stroke if inlist(r1stroke,0,1) & inw2 == 1

*wave 2 respondent ever had stroke
gen r2stroke =.
missing_w2 HeDiaC8 hedim01 hedim02 hedim03 hedim04 ///
					 hedim05  hedim06 hedim07 hedim08, result(r2stroke)
replace r2stroke = 0 if preload == 0 & HeDiaC8 != 2
replace r2stroke = 0 if ( (inrange(hedim01,1,9) | inlist(hedim01,51,52,85,86,95,96)) ///
										 		| (inrange(hedim02,1,9) | inlist(hedim02,51,52,85,86,95,96)) ///
										 		| (inrange(hedim03,1,9) | inlist(hedim03,51,52,85,86,95,96)) ///
										 		| (inrange(hedim04,1,9) | inlist(hedim04,51,52,85,86,95,96)) ///
												| (inrange(hedim05,1,9) | inlist(hedim05,51,52,85,86,95,96)) ///
												| (inrange(hedim06,1,9) | inlist(hedim06,51,52,85,86,95,96)) ///
												| (inrange(hedim07,1,9) | inlist(hedim07,51,52,85,86,95,96)) ///
												| (inrange(hedim08,1,9) | inlist(hedim08,51,52,85,86,95,96)) )
replace r2stroke = 0 if preload == 1 & HeDiaC8 == 2
replace r2stroke = 1 if (  hedim01 == 8 ///
								 	 	 		 | hedim02 == 8 ///
							  		 		 | hedim03 == 8 ///
										 		 | hedim04 == 8 ///
										 		 | hedim05 == 8 ///
										 		 | hedim06 == 8 ///
										 		 | hedim07 == 8 ///
										 		 | hedim08 == 8 )
replace r2stroke = 1 if preload == 1 & HeDiaC8 != 2
label variable r2stroke "r2stroke:w2 r ever had stroke"

*wave 2 respondent stroke dispute flag
gen r2strokf =.
replace r2strokf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedim01,1,9) | inlist(hedim01,-9,-8,51,52,85,86,95,96)) | ///
										  (inrange(hedim02,1,9) | inlist(hedim02,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim03,1,9) | inlist(hedim03,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim04,1,9) | inlist(hedim04,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim05,1,9) | inlist(hedim05,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim06,1,9) | inlist(hedim06,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim07,1,9) | inlist(hedim07,-9,-8,51,52,85,86,95,96)) | ///
									 	  (inrange(hedim08,1,9) | inlist(hedim08,-9,-8,51,52,85,86,95,96))
replace r2strokf = 3 if preload == 1 & HeDiaC8 == 2
replace r2strokf = .m if r2strokf==. & inw2 == 1
label variable r2strokf "r2strokf:w2 r flag dispute chg stroke"

*wave 1 respondent stroke dispute flag
replace r1strokf = 6 if preload == 1 & HeDiaC8 == 2 & r1strokf == 0

*reset wave 1 if disputed
replace r1stroke = 0 if preload == 1 & HeDiaC8 == 2 & r1stroke == 1

*value labels
label values r2stroke health_problems
label values r2strokf health_problems_flag

*check 

drop preload

***Ever had psych problems***
*define preload
gen preload = r1psyche if inlist(r1psyche,0,1) & inw2 == 1

*wave 2 respondent ever had psych problems
gen r2psyche =.
missing_w2 HeDiaD7 hedib01 hedib02 hedib03 hedib04, result(r2psyche)
replace r2psyche = 0 if preload == 0 & HeDiaD7 != 2
replace r2psyche = 0 if ( (inrange(hedib01,1,9) | hedib01 == 96) ///
										 		| (inrange(hedib02,1,9) | hedib02 == 96) ///
										 		| (inrange(hedib03,1,9) | hedib03 == 96) ///
										 		| (inrange(hedib04,1,9) | hedib04 == 96) )
replace r2psyche = 0 if preload == 1 & HeDiaD7 == 2
replace r2psyche = 1 if (  hedib01 == 7 ///
								 	 	 		 | hedib02 == 7 ///
							  		 		 | hedib03 == 7 ///
										 		 | hedib04 == 7 )
replace r2psyche = 1 if preload == 1 & HeDiaD7 != 2
label variable r2psyche "r2psyche:w2 r ever had psych problems"

*wave 2 respondent psych problems dispute flag
gen r2psychf =.
replace r2psychf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96)) | ///
										  (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96)) | ///
									 	  (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96)) | ///
									 	  (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96))
replace r2psychf = 3 if preload == 1 & HeDiaD7 == 2
label variable r2psychf "r2psychf:w2 r flag dispute chg psych problems"

*wave 1 respondent psych problems dispute flag
replace r1psychf = 6 if preload == 1 & HeDiaD7 == 2 & r1psychf == 0

*reset wave 1 if disputed
replace r1psyche = 0 if preload == 1 & HeDiaD7 == 2 & r1psyche == 1

*value labels
label values r2psyche health_problems
label values r2psychf health_problems_flag

*check 

drop preload

***Ever had arthritis***
*define preload
gen preload = r1arthre if inlist(r1arthre,0,1) & inw2 == 1

*wave 2 respondent ever had arthritis
gen r2arthre =.
missing_w2 HeDiaD3 hedib01 hedib02 hedib03 hedib04, result(r2arthre)
replace r2arthre = 0 if preload == 0 & HeDiaD3 != 2
replace r2arthre = 0 if ( (inrange(hedib01,1,9) | hedib01 == 96) ///
										 		| (inrange(hedib02,1,9) | hedib02 == 96) ///
										 		| (inrange(hedib03,1,9) | hedib03 == 96) ///
										 		| (inrange(hedib04,1,9) | hedib04 == 96) )
replace r2arthre = 0 if preload == 1 & HeDiaD3 == 2
replace r2arthre = 1 if (  hedib01 == 3 ///
								 	 	 		 | hedib02 == 3 ///
							  		 		 | hedib03 == 3 ///
										 		 | hedib04 == 3 )
replace r2arthre = 1 if preload == 1 & HeDiaD3 != 2
label variable r2arthre "r2arthre:w2 r ever had arthritis"

*wave 2 respondent arthritis dispute flag
gen r2arthrf =.
replace r2arthrf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96)) | ///
										  (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96)) | ///
									 	  (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96)) | ///
									 	  (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96))
replace r2arthrf = 3 if preload == 1 & HeDiaD3 == 2
label variable r2arthrf "r2arthrf:w2 r flag dispute chg arthritis"

*wave 1 respondent arthritis dispute flag
replace r1arthrf = 6 if preload == 1 & HeDiaD3 == 2 & r1arthrf == 0

*reset wave 1 if disputed
replace r1arthre = 0 if preload == 1 & HeDiaD3 == 2 & r1arthre == 1

*value labels
label values r2arthre health_problems
label values r2arthrf health_problems_flag

*check 

drop preload

***Ever had memory-related problem***
*define preload
gen preload = r1memrye if inlist(r1memrye,0,1) & inw2 == 1

*wave 2 respondent ever had memory-related problem
gen r2memrye =.
missing_w2 HeDiaD8 HeDiaD9 hedib01 hedib02 hedib03 hedib04, result(r2memrye)
replace r2memrye = 0 if preload == 0 & HeDiaD8 != 2 & HeDiaD9 != 2
replace r2memrye = 0 if ( (inrange(hedib01,1,9) | hedib01 == 96) ///
										 		| (inrange(hedib02,1,9) | hedib02 == 96) ///
										 		| (inrange(hedib03,1,9) | hedib03 == 96) ///
										 		| (inrange(hedib04,1,9) | hedib04 == 96) )
replace r2memrye = 0 if preload == 1 & ( HeDiaD8 == 2 | HeDiaD9 == 2)
replace r2memrye = 1 if (  inlist(hedib01,8,9) ///
								 	 	 		 | inlist(hedib02,8,9) ///
							  		 		 | inlist(hedib03,8,9) ///
										 		 | inlist(hedib04,8,9) )
replace r2memrye = 1 if preload == 1 & HeDiaD8 != 2 & HeDiaD9 != 2
label variable r2memrye "r2memrye:w2 r ever had memory problem"

*wave 2 respondent memory-related problem flag
gen r2memryf =.
replace r2memryf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96)) | ///
										  (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96)) | ///
									 	  (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96)) | ///
									 	  (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96))
replace r2memryf = 3 if preload == 1 & (HeDiaD8 == 2 | HeDiaD9 == 2)
label variable r2memryf "r2memryf:w2 r flag chg previous memory prob"

*wave 1 respondent memory-related problem dispute flag
replace r1memryf = 6 if preload == 1 & (HeDiaD8 == 2 | HeDiaD9 == 2) & r1memryf == 0

*reset wave 1 if disputed
replace r1memrye = 0 if preload == 1 & (HeDiaD8 == 2 | HeDiaD9 == 2) & r1memrye == 1

*value labels
label values r2memrye health_problems
label values r2memryf health_problems_flag

*check 

drop preload

***Ever had asthma***
*define preload
gen preload = r1asthmae if inlist(r1asthmae,0,1) & inw2 == 1

*wave 2 respondent ever had asthma
gen r2asthmae =.
missing_w2 HeDiaD2 hedib01 hedib02 hedib03 hedib04, result(r2asthmae)
replace r2asthmae = 0 if preload == 0 & HeDiaD2 != 2
replace r2asthmae = 0 if ( (inrange(hedib01,1,9) | hedib01 == 96) ///
										 		| (inrange(hedib02,1,9) | hedib02 == 96) ///
										 		| (inrange(hedib03,1,9) | hedib03 == 96) ///
										 		| (inrange(hedib04,1,9) | hedib04 == 96) )
replace r2asthmae = 0 if preload == 1 & ( HeDiaD2 == 2)
replace r2asthmae = 1 if (hedib01 == 2 ///
								 	 	 		 | hedib02 == 2 ///
							  		 		 | hedib03 == 2 ///
										 		 | hedib04 == 2 )
replace r2asthmae = 1 if preload == 1 & HeDiaD2 != 2
label variable r2asthmae "r2asthmae:w2 r ever had asthma"

*wave 2 respondent asthma flag
gen r2asthmaf =.
replace r2asthmaf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96)) | ///
										  (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96)) | ///
									 	  (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96)) | ///
									 	  (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96))
replace r2asthmaf = 3 if preload == 1 & HeDiaD2 == 2
label variable r2asthmaf "r2asthmaf:w2 r flag chg previous asthma"

*wave 1 respondent asthma dispute flag
replace r1asthmaf = 6 if preload == 1 & HeDiaD2 == 2 & r1asthmaf == 0

*reset wave 1 if disputed
replace r1asthmae = 0 if preload == 1 & HeDiaD2 == 2 & r1asthmae == 1

*value labels
label values r2asthmae health_problems
label values r2asthmaf health_problems_flag

*check 

drop preload

***Ever had high cholesterol***
*wave 2 respondent ever had high cholesterol
gen r2hchole =.
missing_w2 hedia01 hedia02 hedia03 hedia04 hedia05 hedia06 hedia07 hedia08 hedia09, result(r2hchole)
replace r2hchole = 0 if ( (inrange(hedia01,1,8) | inlist(hedia01,95,96)) ///
										 		| (inrange(hedia02,1,8) | inlist(hedia02,95,96)) ///
										 		| (inrange(hedia03,1,8) | inlist(hedia03,95,96)) ///
										 		| (inrange(hedia04,1,8) | inlist(hedia04,95,96)) ///
										 		| (inrange(hedia05,1,8) | inlist(hedia05,95,96)) ///
										 		| (inrange(hedia06,1,8) | inlist(hedia06,95,96)) ///
										 		| (inrange(hedia07,1,8) | inlist(hedia07,95,96)) ///
										 		| (inrange(hedia08,1,8) | inlist(hedia08,95,96)) ///
										 		| (inrange(hedia09,1,8) | inlist(hedia09,95,96)))
replace r2hchole = 1 if (hedia01 == 9 ///
								 	 	 		 | hedia02 == 9 ///
							  		 		 | hedia03 == 9 ///
										 		 | hedia04 == 9 ///
										 		 | hedia05 == 9 ///
										 		 | hedia06 == 9 ///
										 		 | hedia07 == 9 ///
										 		 | hedia08 == 9 ///
										 		 | hedia09 == 9 )
label variable r2hchole "r2hchole:w2 r ever had high cholesterol"

*wave 2 respondent high cholesterol flag
gen r2hcholf =.
replace r2hcholf = 0 if (inrange(hedia01,1,9) | inlist(hedia01,-9,-8,95,96)) | ///
										  (inrange(hedia02,1,9) | inlist(hedia02,-9,-8,95,96)) | ///
									 	  (inrange(hedia03,1,9) | inlist(hedia03,-9,-8,95,96)) | ///
									 	  (inrange(hedia04,1,9) | inlist(hedia04,-9,-8,95,96)) | ///
									 	  (inrange(hedia05,1,9) | inlist(hedia05,-9,-8,95,96)) | ///
									 	  (inrange(hedia06,1,9) | inlist(hedia06,-9,-8,95,96)) | ///
									 	  (inrange(hedia07,1,9) | inlist(hedia07,-9,-8,95,96)) | ///
									 	  (inrange(hedia08,1,9) | inlist(hedia08,-9,-8,95,96)) | ///
									 	  (inrange(hedia09,1,9) | inlist(hedia09,-9,-8,95,96))
label variable r2hcholf "r2hcholf:w2 r flag chg previous high cholesterol"

*value labels
label values r2hchole health_problems
label values r2hcholf health_problems_flag

***Ever had cataracts***
*define preload
gen preload = r1catrcte if inlist(r1catrcte,0,1) & inw2 == 1

*wave 2 respondent ever had cataracts
gen r2catrcte =.
missing_w2 HeOpC HeOpt1 HeOpt2, result(r2catrcte)
replace r2catrcte = 0 if preload == 0 & HeOpC != 2 & ///
		(bheopt1==4 | bheopt2==4 | bheopt3==4 | bheopt4==4)
replace r2catrcte = 0 if ( (inrange(HeOpt1,1,3) | HeOpt1 == 96) ///
										 		| (inrange(HeOpt2,1,3) | HeOpt2 == 96))
replace r2catrcte = 0 if preload == 1 & HeOpC == 2 & ///
		(bheopt1==4 | bheopt2==4 | bheopt3==4 | bheopt4==4)
replace r2catrcte = 1 if (HeOpt1 == 4 ///
								 	 	 		 | HeOpt2 == 4)
replace r2catrcte = 1 if preload == 1 & HeOpC != 2 & ///
		(bheopt1==4 | bheopt2==4 | bheopt3==4 | bheopt4==4)
label variable r2catrcte "r2catrcte:w2 r ever had cataracts"

*wave 2 respondent cataracts flag
gen r2catrctf =.
replace r2catrctf = 0 if inlist(preload,0,1) | ///
                      (inrange(HeOpt1,1,4) | inlist(HeOpt1,-9,-8,96)) | ///
										  (inrange(HeOpt2,1,4) | inlist(HeOpt2,-9,-8,96))
replace r2catrctf = 3 if preload == 1 & HeOpC == 2 & ///
		(bheopt1==4 | bheopt2==4 | bheopt3==4 | bheopt4==4)
label variable r2catrctf "r2catrctf:w2 r flag chg previous cataracts"

*wave 1 respondent cataracts dispute flag
replace r1catrctf = 6 if preload == 1 & HeOpC == 2 & r1catrctf == 0 & ///
		(bheopt1==4 | bheopt2==4 | bheopt3==4 | bheopt4==4)

*reset wave 1 if disputed
replace r1catrcte = 0 if preload == 1 & HeOpC == 2 & r1catrcte == 1 & ///
		(bheopt1==4 | bheopt2==4 | bheopt3==4 | bheopt4==4)

*value labels
label values r2catrcte health_problems
label values r2catrctf health_problems_flag

drop preload

***Ever had parkinsons***
*define preload
gen preload = r1parkine if inlist(r1parkine,0,1) & inw2 == 1

*wave 2 respondent ever had parkinsons
gen r2parkine =.
missing_w2 HeDiaD6 hedib01 hedib02 hedib03 hedib04, result(r2parkine)
replace r2parkine = 0 if preload == 0 & HeDiaD6 != 2
replace r2parkine = 0 if ( (inrange(hedib01,1,9) | hedib01 == 96) ///
										 		| (inrange(hedib02,1,9) | hedib02 == 96) ///
										 		| (inrange(hedib03,1,9) | hedib03 == 96) ///
										 		| (inrange(hedib04,1,9) | hedib04 == 96) )
replace r2parkine = 0 if preload == 1 & ( HeDiaD6 == 2)
replace r2parkine = 1 if (hedib01 == 6 ///
								 	 	 		 | hedib02 == 6 ///
							  		 		 | hedib03 == 6 ///
										 		 | hedib04 == 6 )
replace r2parkine = 1 if preload == 1 & HeDiaD6 != 2
label variable r2parkine "r2parkine:w2 r ever had parkinson disease"

*wave 2 respondent parkinsons flag
gen r2parkinf =.
replace r2parkinf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96)) | ///
										  (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96)) | ///
									 	  (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96)) | ///
									 	  (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96))
replace r2parkinf = 3 if preload == 1 & HeDiaD6 == 2
label variable r2parkinf "r2parkinf:w2 r flag chg previous parkinson disease"

*wave 1 respondent parkinsons dispute flag
replace r1parkinf = 6 if preload == 1 & HeDiaD6 == 2 & r1parkinf == 0

*reset wave 1 if disputed
replace r1parkine = 0 if preload == 1 & HeDiaD6 == 2 & r1parkine == 1

*value labels
label values r2parkine health_problems
label values r2parkinf health_problems_flag

drop preload

***Ever had hip fracture***
*wave 2 respondent ever had hip fracture
gen r2hipe = .
missing_w2 HeFrac, result(r2hipe)
replace r2hipe = .a if inrange(r2agey,1,59)
replace r2hipe = 0 if HeFrac==2
replace r2hipe = 1 if HeFrac==1 | r1hipe==1
label variable r2hipe "r2hipe:w2 r ever had hip fracture"
label values r2hipe health_problems

*wave 2 spouse ever had hip fracture
gen s2hipe = .
spouse r2hipe, result(s2hipe) wave(2)
label variable s2hipe "s2hipe:w2 s ever had hip fracture"
label values s2hipe health_problems

***Ever had Alzheimers disease***
*define preload
gen preload = r1alzhe if inlist(r1alzhe,0,1) & inw2 == 1

*wave 2 respondent ever had Alzheimers disease
gen r2alzhe =.
missing_w2 HeDiaD8 hedib01 hedib02 hedib03 hedib04, result(r2alzhe)
replace r2alzhe = 0 if preload == 0 & HeDiaD8 != 2
replace r2alzhe = 0 if ( (inrange(hedib01,1,9) | hedib01 == 96) ///
										 		| (inrange(hedib02,1,9) | hedib02 == 96) ///
										 		| (inrange(hedib03,1,9) | hedib03 == 96) ///
										 		| (inrange(hedib04,1,9) | hedib04 == 96) )
replace r2alzhe = 0 if preload == 1 & ( HeDiaD8 == 2)
replace r2alzhe = 1 if (hedib01 == 8 ///
								 	 	 		 | hedib02 == 8 ///
							  		 		 | hedib03 == 8 ///
										 		 | hedib04 == 8 )
replace r2alzhe = 1 if preload == 1 & HeDiaD8 != 2
label variable r2alzhe "r2alzhe:w2 r ever had alzheimers"

*wave 2 respondent asthma flag
gen r2alzhf =.
replace r2alzhf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96)) | ///
										  (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96)) | ///
									 	  (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96)) | ///
									 	  (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96))
replace r2alzhf = 3 if preload == 1 & HeDiaD8 == 2
label variable r2alzhf "r2alzhf:w2 r flag chg previous alzheimers"

*wave 1 respondent asthma dispute flag
replace r1alzhf = 6 if preload == 1 & HeDiaD8 == 2 & r1alzhf == 0

*reset wave 1 if disputed
replace r1alzhe = 0 if preload == 1 & HeDiaD8 == 2 & r1alzhe == 1

*value labels
label values r2alzhe health_problems
label values r2alzhf health_problems_flag

*check 

drop preload

***Ever had Dementia***
*define preload
gen preload = r1demene if inlist(r1demene,0,1) & inw2 == 1

*wave 2 respondent ever had Dementia
gen r2demene =.
missing_w2 HeDiaD9 hedib01 hedib02 hedib03 hedib04, result(r2demene)
replace r2demene = 0 if preload == 0 & HeDiaD9 != 2
replace r2demene = 0 if ( (inrange(hedib01,1,9) | hedib01 == 96) ///
										 		| (inrange(hedib02,1,9) | hedib02 == 96) ///
										 		| (inrange(hedib03,1,9) | hedib03 == 96) ///
										 		| (inrange(hedib04,1,9) | hedib04 == 96) )
replace r2demene = 0 if preload == 1 & ( HeDiaD9 == 2)
replace r2demene = 1 if (hedib01 == 9 ///
								 	 	 		 | hedib02 == 9 ///
							  		 		 | hedib03 == 9 ///
										 		 | hedib04 == 9 )
replace r2demene = 1 if preload == 1 & HeDiaD9 != 2
label variable r2demene "r2demene:w2 r ever had dementia"

*wave 2 respondent dementia flag
gen r2demenf =.
replace r2demenf = 0 if inlist(preload,0,1) | ///
                      (inrange(hedib01,1,9) | inlist(hedib01,-9,-8,96)) | ///
										  (inrange(hedib02,1,9) | inlist(hedib02,-9,-8,96)) | ///
									 	  (inrange(hedib03,1,9) | inlist(hedib03,-9,-8,96)) | ///
									 	  (inrange(hedib04,1,9) | inlist(hedib04,-9,-8,96))
replace r2demenf = 3 if preload == 1 & HeDiaD9 == 2
label variable r2demenf "r2demenf:w2 r flag chg previous dementia"

*wave 1 respondent asthma dispute flag
replace r1demenf = 6 if preload == 1 & HeDiaD9 == 2 & r1demenf == 0

*reset wave 1 if disputed
replace r1demene = 0 if preload == 1 & HeDiaD9 == 2 & r1demene == 1

*value labels
label values r2demene health_problems
label values r2demenf health_problems_flag

*check 

drop preload

***Vigorous physical activity***
*wave 2 respondent vigorous physical activity
gen r2vgactx_e =.
missing_w2 HeActa, result(r2vgactx_e)
replace r2vgactx_e =.p if askpx1 == 1
replace r2vgactx_e = 2 if HeActa == 1
replace r2vgactx_e = 3 if HeActa == 2
replace r2vgactx_e = 4 if HeActa == 3
replace r2vgactx_e = 5 if HeActa == 4
label variable r2vgactx_e "r2vgactx_e:w2 R Freq vigorous phys activ"

*wave 2 spouse vigorous physical activity
gen s2vgactx_e =.
spouse r2vgactx_e, result(s2vgactx_e) wave(2)
label variable s2vgactx_e "s2vgactx_e:w2 S Freq vigorous phys activ"

*label values 
label values r2vgactx_e activity
label values s2vgactx_e activity

*check 

***Moderate physical activity***
*wave 2 respondent moderate physical activity
gen r2mdactx_e =.
missing_w2 HeActb, result(r2mdactx_e)
replace r2mdactx_e =.p if askpx1 == 1
replace r2mdactx_e = 2 if HeActb == 1
replace r2mdactx_e = 3 if HeActb == 2
replace r2mdactx_e = 4 if HeActb == 3
replace r2mdactx_e = 5 if HeActb == 4
label variable r2mdactx_e "r2mdactx_e:w2 R Freq moderate phys activ"

*wave 2 spouse vigorous moderate activity
gen s2mdactx_e =.
spouse r2mdactx_e, result(s2mdactx_e) wave(2)
label variable s2mdactx_e "s2mdactx_e:w2 S Freq moderate phys activ"

*label values
label values r2mdactx_e activity
label values s2mdactx_e activity

*check 

***Light physical activity***
*wave 2 respondent light physical activity
gen r2ltactx_e =.
missing_w2 HeActc, result(r2ltactx_e)
replace r2ltactx_e =.p if askpx1 == 1
replace r2ltactx_e = 2 if HeActc == 1
replace r2ltactx_e = 3 if HeActc == 2
replace r2ltactx_e = 4 if HeActc == 3
replace r2ltactx_e = 5 if HeActc == 4
label variable r2ltactx_e "r2ltactx_e:w2 R Freq light phys activ"

*wave 2 spouse vigorous light activity
gen s2ltactx_e =.
spouse r2ltactx_e, result(s2ltactx_e) wave(2)
label variable s2ltactx_e "s2ltactx_e:w2 S Freq light phys activ"

*label values
label values r2ltactx_e activity
label values s2ltactx_e activity
*check 

***Ever drinks alcohol***
*wave 2 respondent ever drinks alcohol
gen r2drink =.
replace r2drink =.m if scako == -9
replace r2drink =.c if inw2sc == 0 & inw2==1
replace r2drink = 0 if scako == 8
replace r2drink = 1 if inrange(scako,1,7)
label variable r2drink "r2drink:w2 R ever drinks any alcohol"

*wave 2 spouse ever drinks alcohol
gen s2drink =.
spouse r2drink, result(s2drink) wave(2)
label variable s2drink "s2drink:w2 S ever drinks any alcohol"

*label values
label values r2drink ever_drink
label values s2drink ever_drink

*check 

***Days per week drinks***
*wave 2 respondent days per week drinks
gen r2drinkd_e =.
replace r2drinkd_e =.m if scako == -9 | scal7a == -9 | scal7b == -9
replace r2drinkd_e =.c if inw2sc == 0 & inw2==1
replace r2drinkd_e = 0 if scako == 8 | scal7a == 2 
replace r2drinkd_e = 1 if scal7b == 1
replace r2drinkd_e = 2 if scal7b == 2
replace r2drinkd_e = 3 if scal7b == 3
replace r2drinkd_e = 4 if scal7b == 4
replace r2drinkd_e = 5 if scal7b == 5
replace r2drinkd_e = 6 if scal7b == 6
replace r2drinkd_e = 7 if scal7b == 7
label variable r2drinkd_e "r2drinkd_e:w2 R # days/week drinks"

*wave 2 spouse days per week drinks
gen s2drinkd_e =.
spouse r2drinkd_e, result(s2drinkd_e) wave(2)
label variable s2drinkd_e "s2drinkd_e:w2 S # days/week drinks"

**label values
*label values r2drinkd_e drinks_flag
*label values s2drinkd_e drinks_flag

*check 

***Drinks per day***
*wave 2 respondent drinks per day
gen r2drinkn_e =.
replace r2drinkn_e =.m if scako == -9 | scal7a == -9 | scal7b == -9 | ///
													scdri01 == -9 | scdri02 == -9 | scdri03 == -9 | ///
													scdri04 == -9 | scdri05 == -9 | scdri06 == -9 | ///
													scabnp == -9 | scabnlc == -9 | scabnsc == -9 | ///
													scabsp == -9 | scabslc == -9 | scabssc == -9 | ///
													scaspir == -9 | scasher == -9 | scawin == -9 | ///
													scapopg == -9 
replace r2drinkn_e =.c if inw2sc == 0 & inw2==1
replace r2drinkn_e = 0 if scako == 8 | scal7a == 2 | ///
											(	inlist(scdri01,0,1) ///
											& inlist(scdri02,0,1) ///
											& inlist(scdri03,0,1) ///
											& inlist(scdri04,0,1) ///
											& inlist(scdri05,0,1) ///
											& inlist(scdri06,0,1) )
replace r2drinkn_e = r2drinkn_e + scabnp if !inlist(scabnp,-9,-1)
replace r2drinkn_e = r2drinkn_e + scabnlc if !inlist(scabnlc,-9,-1)
replace r2drinkn_e = r2drinkn_e + scabnsc if !inlist(scabnsc,-9,-1)
replace r2drinkn_e = r2drinkn_e + scabsp if !inlist(scabsp,-9,-1)
replace r2drinkn_e = r2drinkn_e + scabslc if !inlist(scabslc,-9,-1)
replace r2drinkn_e = r2drinkn_e + scabssc if !inlist(scabssc,-9,-1)
replace r2drinkn_e = r2drinkn_e + scaspir if !inlist(scaspir,-9,-1)
replace r2drinkn_e = r2drinkn_e + scasher if !inlist(scasher,-9,-1)
replace r2drinkn_e = r2drinkn_e + scawin if !inlist(scawin,-9,-1)
replace r2drinkn_e = r2drinkn_e + scapopg if !inlist(scapopg,-9,-1)
label variable r2drinkn_e "r2drinkn_e:w2 R # drinks/day"
replace r2drinkn_e=round(r2drinkn_e)

*wave 2 spouse drinks per day
gen s2drinkn_e =.
spouse r2drinkn_e, result(s2drinkn_e) wave(2)
label variable s2drinkn_e "s2drinkn_e:w2 S # drinks/day"

**label values
*label values r2drinkn_e drinks_flag
*label values s2drinkn_e drinks_flag

*check 

***Ever smoked cigarettes***
*wave 2 respondent ever smoked cigarettes
gen r2smokev =.
missing_w2 HeSmk HeSke, result(r2smokev)
replace r2smokev = .m if HeSmk == -3
replace r2smokev = r1smokev if inlist(r1smokev,0,1) & inw2==1
replace r2smokev = 0 if HeSmk == 2 | HeSke == 1
replace r2smokev = 1 if HeSmk == 1 | inlist(HeSke,2,3)
label variable r2smokev "r2smokev:w2 R smoke ever"
*wave 2 spouse ever smoked cigarettes
gen s2smokev =.
spouse r2smokev, result(s2smokev) wave(2)
label variable s2smokev "s2smokev:w2 S smoke ever"

*previous waves ever smoked if disputed
replace r1smokev=0 if HeSke==1

*label values
label values r2smokev smokes
label values s2smokev smokes

*check 

***Smokes cigarettes now***
*wave 2 respondent smokes cigarettes now
gen r2smoken =.
missing_w2 HeSmk HESka, result(r2smoken)
replace r2smoken = 0 if HeSmk == 2 | HESka == 2 
replace r2smoken = 1 if HESka == 1
label variable r2smoken "r2smoken:w2 R smokes now"

*wave 2 spouse smokes cigarettes now
gen s2smoken =.
spouse r2smoken, result(s2smoken) wave(2)
label variable s2smoken "s2smoken:w2 S smokes now"

*previous waves smokes now if disputed
replace r1smoken=0 if inlist(HeSke,1,2)

*label values
label values r2smoken smokes
label values s2smoken smokes

*check 

**Smoking frequency ****
gen r2smokef = .
missing_w2 HeSmk HESka HeSkc HeSkb HECig , result(r2smokef)
replace r2smokef = 0  if r2smoken == 0
replace r2smokef = 0  if HECig ==2
replace r2smokef = (HeSkb*5 + HeSkc*2)/7 if !inlist(HeSkb,-1,-8,-9) & !inlist(HeSkc,-1,-8,-9) 

label var r2smokef "r2smokef:w2 R # cigarettes/day"

*Spouse smoking frequency
gen s2smokef = .
spouse r2smokef, result(s2smokef) wave(2)
label var s2smokef "s2smokef:w2 S # cigarettes/day"


***BMI***
*wave 2 respondent BMI
gen r2bmi =.
replace r2bmi = .n if `inw2nurse' == 0 & inw2 == 1
replace r2bmi = .b if wtok == 2 | htok == 2
replace r2bmi = .r if wtok == 3 | htok == 3
replace r2bmi = .o if wtok == 4 | htok == 4
replace r2bmi = .a if wtok == 5 | htok == 5
replace r2bmi = wtval/((htval/100)*(htval/100)) if !inlist(wtval,.,-1) & !inlist(htval,.,-1)
label variable r2bmi "r2bmi:w2 r Body Mass Index=kg/m2"

*wave 2 spouse BMI
gen s2bmi =.
spouse r2bmi, result(s2bmi) wave(2)
label variable s2bmi "s2bmi:w2 s Body Mass Index=kg/m2"

*check

***BMI Categories***
*wave 2 respondent BMI categories
gen r2bmicat = .
replace r2bmicat = .n if `inw2nurse' == 0 & inw2 == 1
replace r2bmicat = .b if wtok == 2 | htok == 2
replace r2bmicat = .r if wtok == 3 | htok == 3
replace r2bmicat = .o if wtok == 4 | htok == 4
replace r2bmicat = .a if wtok == 5 | htok == 5
replace r2bmicat = 1 if inrange(r2bmi,1,18.49999)
replace r2bmicat = 2 if inrange(r2bmi,18.50,24.99999)
replace r2bmicat = 3 if inrange(r2bmi,25,29.99999)
replace r2bmicat = 4 if inrange(r2bmi,30,34.99999)
replace r2bmicat = 5 if inrange(r2bmi,35,39.99999)
replace r2bmicat = 6 if inrange(r2bmi,40,100)
label variable r2bmicat "r2bmicat:w2 r BMI categorization"
label values r2bmicat bmicate

*wave 2 spouse BMI categories
gen s2bmicat = .
spouse r2bmicat, result(s2bmicat) wave(2)
label variable s2bmicat "s2bmicat:w2 s BMI categorization"
label values s2bmicat bmicate

***Height in meters***
*wave 2 respondent height in meters
gen r2height =.
replace r2height = .n if `inw2nurse' !=1 & inw2 == 1
replace r2height = .b if htok == 2
replace r2height = .r if htok == 3
replace r2height = .o if htok == 4
replace r2height = .a if htok == 5
replace r2height = htval/100 if !inlist(htval,.,-1)
label variable r2height "r2height:w2 r Height in meters"

*wave 2 spouse height in meters
gen s2height =.
spouse r2height, result(s2height) wave(2)
label variable s2height "s2height:w2 s Height in meters"

*check

***Weight in kilograms***
*wave 2 respondent weight in kilograms
gen r2weight =.
replace r2weight = .n if `inw2nurse' !=1 & inw2 == 1
replace r2weight = .b if wtok == 2
replace r2weight = .r if wtok == 3
replace r2weight = .o if wtok == 4
replace r2weight = .a if wtok == 5
replace r2weight = wtval if !inlist(wtval,.,-1)
label variable r2weight "r2weight:w2 r Weight in kilograms"

*wave 2 spouse weight in kilograms
gen s2weight =.
spouse r2weight, result(s2weight) wave(2)
label variable s2weight "s2weight:w2 s Weight in kilograms"

*check


***drop ELSA wave 2 core file raw variables***
drop `health_w2_core'

***drop ELSA wave 2 nurse file raw variables***
drop `health_w2_nurse'

******************************************************************************************



*set wave number
local wavenum=3
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave specific core data***
local health_w`wavenum'_core askpx ///
										 hegenh helwk ///
										 headl?? hemob?? ///
										 psceda pscedb pscedc pscedd pscede pscedf pscedg pscedh ///
										 hedia?? hedim?? hedib?? hedac?? hedbd?? ///
										 heacta heactb heactc ///
										 scako scal7a scal7b scdri0? scabnp scabnlc scabnsc scabsp scabslc scabssc scaspir scasher scawin scapopg  /// 
										 hesmk heska heskb heskc hecig heske ///
										 heoptca heopcca hefrac
merge 1:1 idauniq using "$wave_3_core", keepusing(`health_w`wavenum'_core') nogen


***self-report of health, European scale***
*wave 3 respondent self-report of health, European scale
gen r`wavenum'shlta =.
missing_w`wavenum' hegenh, result(r`wavenum'shlta)
replace r`wavenum'shlta = .p if askpx == 1
replace r`wavenum'shlta = hegenh if inrange(hegenh,1,5)
label variable r`wavenum'shlta "r`wavenum'shlta:w`wavenum' r self-report of health, European scale"

*wave 3 spouse self-report of health, European scale
gen s`wavenum'shlta =.
spouse r`wavenum'shlta, result(s`wavenum'shlta) wave(`wavenum')
label variable s`wavenum'shlta "s`wavenum'shlta:w`wavenum' s self-report of health, European scale"

*value labels
label values r`wavenum'shlta health_alt
label values s`wavenum'shlta health_alt

*check 

***Whether health limits work***
*wave 3 respondent whether health limits work
gen r`wavenum'hlthlm =.
missing_w`wavenum' helwk, result(r`wavenum'hlthlm)
replace r`wavenum'hlthlm = .p if askpx == 1
replace r`wavenum'hlthlm = 0 if helwk == 2
replace r`wavenum'hlthlm = 1 if helwk == 1
label variable r`wavenum'hlthlm "r`wavenum'hlthlm:w`wavenum' r hlth problems limit work"

*wave 3 spouse whether health limits work
gen s`wavenum'hlthlm =.
spouse r`wavenum'hlthlm, result(s`wavenum'hlthlm) wave(`wavenum')
label variable s`wavenum'hlthlm "s`wavenum'hlthlm:w`wavenum' s hlth problems limit work"

*value labels
label values r`wavenum'hlthlm limitwork
label values s`wavenum'hlthlm limitwork

*check 

***Some difficulty walking cross room***
*wave 3 respondent difficulty walking across room
gen r`wavenum'walkra =.
missing_w`wavenum' headlwa, result(r`wavenum'walkra)
replace r`wavenum'walkra = 0 if headlwa==0
replace r`wavenum'walkra = 1 if headlwa==1
label variable r`wavenum'walkra "r`wavenum'walkra:w`wavenum' R Some Diff-Walk across room"

*wave 3 spouse difficulty walking across room
gen s`wavenum'walkra =.
spouse r`wavenum'walkra, result(s`wavenum'walkra) wave(`wavenum')
label variable s`wavenum'walkra "s`wavenum'walkra:w`wavenum' S Some Diff-Walk across room"

*value labels
label values r`wavenum'walkra diff
label values s`wavenum'walkra diff

*check 

***Some difficulty dressing***
*wave 3 respondent difficulty dressing
gen r`wavenum'dressa =.
missing_w`wavenum' headldr, result(r`wavenum'dressa)
replace r`wavenum'dressa = 0 if headldr==0
replace r`wavenum'dressa = 1 if headldr==1
label variable r`wavenum'dressa "r`wavenum'dressa:w`wavenum' R Some Diff-Dressing"

*wave 3 spouse difficulty dressing
gen s`wavenum'dressa =.
spouse r`wavenum'dressa, result(s`wavenum'dressa) wave(`wavenum')
label variable s`wavenum'dressa "s`wavenum'dressa:w`wavenum' S Some Diff-Dressing"

*value labels
label values r`wavenum'dressa diff
label values s`wavenum'dressa diff

*check 

***Some difficulty bathing, shower***
*wave 3 respondent difficulty bathing, shower
gen r`wavenum'batha =.
missing_w`wavenum' headlba, result(r`wavenum'batha)
replace r`wavenum'batha = 0 if headlba==0
replace r`wavenum'batha = 1 if headlba==1
label variable r`wavenum'batha "r`wavenum'batha:w`wavenum' R Some Diff-Bathing, shower"

*wave 3 spouse difficulty bathing, shower
gen s`wavenum'batha =.
spouse r`wavenum'batha, result(s`wavenum'batha) wave(`wavenum')
label variable s`wavenum'batha "s`wavenum'batha:w`wavenum' S Some Diff-Bathing, shower"

*value labels
label values r`wavenum'batha diff
label values s`wavenum'batha diff

*check 

***Some difficulty eating***
*wave 3 respondent difficulty eating
gen r`wavenum'eata =.
missing_w`wavenum' headlea, result(r`wavenum'eata)
replace r`wavenum'eata = 0 if headlea==0
replace r`wavenum'eata = 1 if headlea==1
label variable r`wavenum'eata "r`wavenum'eata:w`wavenum' R Some Diff-Eating"

*wave 3 spouse difficulty eating
gen s`wavenum'eata =.
spouse r`wavenum'eata, result(s`wavenum'eata) wave(`wavenum')
label variable s`wavenum'eata "s`wavenum'eata:w`wavenum' S Some Diff-Eating"

*value labels
label values r`wavenum'eata diff
label values s`wavenum'eata diff

*check 

***Some difficulty getting in/out of bed***
*wave 3 respondent difficulty getting in/out of bed
gen r`wavenum'beda =.
missing_w`wavenum' headlbe, result(r`wavenum'beda)
replace r`wavenum'beda = 0 if headlbe==0
replace r`wavenum'beda = 1 if headlbe==1
label variable r`wavenum'beda "r`wavenum'beda:w`wavenum' R Some Diff-Get in/out bed"

*wave 3 spouse difficulty getting in/out of bed
gen s`wavenum'beda =.
spouse r`wavenum'beda, result(s`wavenum'beda) wave(`wavenum')
label variable s`wavenum'beda "s`wavenum'beda:w`wavenum' S Some Diff-Get in/out bed"

*value labels
label values r`wavenum'beda diff
label values s`wavenum'beda diff

*check 

***Some difficulty using the toilet***
*wave 3 respondent difficulty using the toilet
gen r`wavenum'toilta =.
missing_w`wavenum' headlwc, result(r`wavenum'toilta)
replace r`wavenum'toilta = 0 if headlwc==0
replace r`wavenum'toilta = 1 if headlwc==1
label variable r`wavenum'toilta "r`wavenum'toilta:w`wavenum' R Some Diff-Using the toilet"

*wave 3 spouse difficulty using the toilet
gen s`wavenum'toilta =.
spouse r`wavenum'toilta, result(s`wavenum'toilta) wave(`wavenum')
label variable s`wavenum'toilta "s`wavenum'toilta:w`wavenum' S Some Diff-Using the toilet"

*value labels
label values r`wavenum'toilta diff
label values s`wavenum'toilta diff

*check 

***Some difficulty using using a map***
*wave 3 respondent difficulty using a map
gen r`wavenum'mapa =.
missing_w`wavenum' headlma, result(r`wavenum'mapa)
replace r`wavenum'mapa = 0 if headlma==0
replace r`wavenum'mapa = 1 if headlma==1
label variable r`wavenum'mapa "r`wavenum'mapa:w`wavenum' R Some Diff-Use a map"

*wave 3 spouse difficulty using a map
gen s`wavenum'mapa =.
spouse r`wavenum'mapa, result(s`wavenum'mapa) wave(`wavenum')
label variable s`wavenum'mapa "s`wavenum'mapa:w`wavenum' S Some Diff-Use a map"

*value labels
label values r`wavenum'mapa diff
label values s`wavenum'mapa diff

*check 

***Some difficulty using a telephone***
*wave 3 respondent difficulty using a telephone
gen r`wavenum'phonea =.
missing_w`wavenum' headlph, result(r`wavenum'phonea)
replace r`wavenum'phonea = 0 if headlph==0
replace r`wavenum'phonea = 1 if headlph==1
label variable r`wavenum'phonea "r`wavenum'phonea:w`wavenum' R Some Diff-Use a telephone"

*wave 3 spouse difficulty using a telephone
gen s`wavenum'phonea =.
spouse r`wavenum'phonea, result(s`wavenum'phonea) wave(`wavenum')
label variable s`wavenum'phonea "s`wavenum'phonea:w`wavenum' S Some Diff-Use a telephone"

*value labels
label values r`wavenum'phonea diff
label values s`wavenum'phonea diff

*check 

***Some difficulty manging money***
*wave 3 respondent difficulty manging money
gen r`wavenum'moneya =.
missing_w`wavenum' headlmo, result(r`wavenum'moneya)
replace r`wavenum'moneya = 0 if headlmo==0
replace r`wavenum'moneya = 1 if headlmo==1
label variable r`wavenum'moneya "r`wavenum'moneya:w`wavenum' R Some Diff-Managing money"

*wave 3 spouse difficulty manging money
gen s`wavenum'moneya =.
spouse r`wavenum'moneya, result(s`wavenum'moneya) wave(`wavenum')
label variable s`wavenum'moneya "s`wavenum'moneya:w`wavenum' S Some Diff-Managing money"

*value labels
label values r`wavenum'moneya diff
label values s`wavenum'moneya diff

*check 

***Some difficulty taking medications***
*wave 3 respondent difficulty taking medications
gen r`wavenum'medsa =.
missing_w`wavenum' headlme, result(r`wavenum'medsa)
replace r`wavenum'medsa = 0 if headlme==0
replace r`wavenum'medsa = 1 if headlme==1
label variable r`wavenum'medsa "r`wavenum'medsa:w`wavenum' R Some Diff-Take medications"

*wave 3 spouse difficulty taking medications
gen s`wavenum'medsa =.
spouse r`wavenum'medsa, result(s`wavenum'medsa) wave(`wavenum')
label variable s`wavenum'medsa "s`wavenum'medsa:w`wavenum' S Some Diff-Take medications"

*value labels
label values r`wavenum'medsa diff
label values s`wavenum'medsa diff

*check 

***Some difficulty shopping for groceries***
*wave 3 respondent difficulty shopping for groceries
gen r`wavenum'shopa =.
missing_w`wavenum' headlsh, result(r`wavenum'shopa)
replace r`wavenum'shopa = 0 if headlsh==0
replace r`wavenum'shopa = 1 if headlsh==1
label variable r`wavenum'shopa "r`wavenum'shopa:w`wavenum' R Some Diff-Shop for grocery"

*wave 3 spouse difficulty shopping for groceries
gen s`wavenum'shopa =.
spouse r`wavenum'shopa, result(s`wavenum'shopa) wave(`wavenum')
label variable s`wavenum'shopa "s`wavenum'shopa:w`wavenum' S Some Diff-Shop for grocery"

*value labels
label values r`wavenum'shopa diff
label values s`wavenum'shopa diff

*check 

***Some difficulty preparing a hot meal***
*wave 3 respondent difficulty preparing a hot meal
gen r`wavenum'mealsa =.
missing_w`wavenum' headlpr, result(r`wavenum'mealsa)
replace r`wavenum'mealsa = 0 if headlpr==0
replace r`wavenum'mealsa = 1 if headlpr==1
label variable r`wavenum'mealsa "r`wavenum'mealsa:w`wavenum' R Some Diff-Prepare hot meal"

*wave 3 spouse difficulty preparing a hot meal
gen s`wavenum'mealsa =.
spouse r`wavenum'mealsa, result(s`wavenum'mealsa) wave(`wavenum')
label variable s`wavenum'mealsa "s`wavenum'mealsa:w`wavenum' S Some Diff-Prepare hot meal"

*value labels
label values r`wavenum'mealsa diff
label values s`wavenum'mealsa diff

*check 

***Some difficulty Doing work around the house or garden***
*wave 3 respondent difficulty Doing work around the house or garden
gen r`wavenum'housewka =.
missing_w`wavenum' headlho, result(r`wavenum'housewka)
replace r`wavenum'housewka = 0 if headlho==0
replace r`wavenum'housewka = 1 if headlho==1
label variable r`wavenum'housewka "r`wavenum'housewka:w`wavenum' R Some Diff-Doing work around the house or garden"

*wave 3 spouse difficulty Doing work around the house or garden
gen s`wavenum'housewka =.
spouse r`wavenum'housewka, result(s`wavenum'housewka) wave(`wavenum')
label variable s`wavenum'housewka "s`wavenum'housewka:w`wavenum' S Some Diff-Doing work around the house or garden"

*value labels
label values r`wavenum'housewka diff
label values s`wavenum'housewka diff

*check 

***Difficulty Walking 100m***
*wave 3 respondent difficulty walking 100m
gen r`wavenum'walk100a =.
missing_w`wavenum' hemobwa, result(r`wavenum'walk100a)
replace r`wavenum'walk100a = 0 if hemobwa==0
replace r`wavenum'walk100a = 1 if hemobwa==1
label variable r`wavenum'walk100a "r`wavenum'walk100a:w`wavenum' R Some Diff-Walk 100y"

*wave 3 spouse difficulty walking 100m
gen s`wavenum'walk100a =.
spouse r`wavenum'walk100a, result(s`wavenum'walk100a) wave(`wavenum')
label variable s`wavenum'walk100a "s`wavenum'walk100a:w`wavenum' S Some Diff-Walk 100y"

*value labels
label values r`wavenum'walk100a diff
label values s`wavenum'walk100a diff

*check 

***Difficulty sitting for 2 hours***
*wave 3 respondent difficulty sitting for 2 hours
gen r`wavenum'sita =.
missing_w`wavenum' hemobsi, result(r`wavenum'sita)
replace r`wavenum'sita = 0 if hemobsi==0
replace r`wavenum'sita = 1 if hemobsi==1
label variable r`wavenum'sita "r`wavenum'sita:w`wavenum' R Some Diff-Sit for 2 hours"

*wave 3 spouse difficulty sitting for 2 hours
gen s`wavenum'sita =.
spouse r`wavenum'sita, result(s`wavenum'sita) wave(`wavenum')
label variable s`wavenum'sita "s`wavenum'sita:w`wavenum' S Some Diff-Sit for 2 hours"

*value labels
label values r`wavenum'sita diff
label values s`wavenum'sita diff

*check 

***Difficulty getting up from a chair***
*wave 3 respondent difficulty getting up from a chair
gen r`wavenum'chaira =.
missing_w`wavenum' hemobch, result(r`wavenum'chaira)
replace r`wavenum'chaira = 0 if hemobch==0
replace r`wavenum'chaira = 1 if hemobch==1
label variable r`wavenum'chaira "r`wavenum'chaira:w`wavenum' R Some Diff-Get up fr chair"

*wave 3 spouse difficulty getting up from a chair
gen s`wavenum'chaira =.
spouse r`wavenum'chaira, result(s`wavenum'chaira) wave(`wavenum')
label variable s`wavenum'chaira "s`wavenum'chaira:w`wavenum' S Some Diff-Get up fr chair"

*value labels
label values r`wavenum'chaira diff
label values s`wavenum'chaira diff

*check 

***Difficulty climbing several flights of stairs***
*wave 3 respondent difficulty climbing several flights of stairs
gen r`wavenum'climsa =.
missing_w`wavenum' hemobcs, result(r`wavenum'climsa)
replace r`wavenum'climsa = 0 if hemobcs==0
replace r`wavenum'climsa = 1 if hemobcs==1
label variable r`wavenum'climsa "r`wavenum'climsa:w`wavenum' R Some Diff-Clmb sev flt str"

*wave 3 spouse difficulty climbing several flights of stairs
gen s`wavenum'climsa =.
spouse r`wavenum'climsa, result(s`wavenum'climsa) wave(`wavenum')
label variable s`wavenum'climsa "s`wavenum'climsa:w`wavenum' S Some Diff-Clmb sev flt str"

*value labels
label values r`wavenum'climsa diff
label values s`wavenum'climsa diff

*check 

***Difficulty climbing one flight of stairs***
*wave 3 respondent difficulty climbing one flight of stairs
gen r`wavenum'clim1a =.
missing_w`wavenum' hemobcl, result(r`wavenum'clim1a)
replace r`wavenum'clim1a = 0 if hemobcl==0
replace r`wavenum'clim1a = 1 if hemobcl==1
label variable r`wavenum'clim1a "r`wavenum'clim1a:w`wavenum' R Some Diff-Clmb 1 flt str"

*wave 3 spouse difficulty climbing one flight of stairs
gen s`wavenum'clim1a =.
spouse r`wavenum'clim1a, result(s`wavenum'clim1a) wave(`wavenum')
label variable s`wavenum'clim1a "s`wavenum'clim1a:w`wavenum' S Some Diff-Clmb 1 flt str"

*value labels
label values r`wavenum'clim1a diff
label values s`wavenum'clim1a diff

*check 

***Difficulty stooping/keeling/crouching***
*wave 3 respondent difficulty stooping/keeling/crouching
gen r`wavenum'stoopa =.
missing_w`wavenum' hemobst, result(r`wavenum'stoopa)
replace r`wavenum'stoopa = 0 if hemobst==0
replace r`wavenum'stoopa = 1 if hemobst==1
label variable r`wavenum'stoopa "r`wavenum'stoopa:w`wavenum' R Some Diff-Stoop/Kneel/Crch"

*wave 3 spouse difficulty stooping/keeling/crouching
gen s`wavenum'stoopa =.
spouse r`wavenum'stoopa, result(s`wavenum'stoopa) wave(`wavenum')
label variable s`wavenum'stoopa "s`wavenum'stoopa:w`wavenum' S Some Diff-Stoop/Kneel/Crch"

*value labels
label values r`wavenum'stoopa diff
label values s`wavenum'stoopa diff

*check 

***Difficulty lifting/carrying 10lbs***
*wave 3 respondent difficulty lifting/carrying 10lbs
gen r`wavenum'lifta =.
missing_w`wavenum' hemobli, result(r`wavenum'lifta)
replace r`wavenum'lifta = 0 if hemobli==0
replace r`wavenum'lifta = 1 if hemobli==1
label variable r`wavenum'lifta "r`wavenum'lifta:w`wavenum' R Some Diff-Lift/carry 10lbs"

*wave 3 spouse difficulty lifting/carrying 10lbs
gen s`wavenum'lifta =.
spouse r`wavenum'lifta, result(s`wavenum'lifta) wave(`wavenum')
label variable s`wavenum'lifta "s`wavenum'lifta:w`wavenum' S Some Diff-Lift/carry 10lbs"

*value labels
label values r`wavenum'lifta diff
label values s`wavenum'lifta diff

*check 

***Difficulty picking up a dime***
*wave 3 respondent difficulty picking up a dime
gen r`wavenum'dimea =.
missing_w`wavenum' hemobpi, result(r`wavenum'dimea)
replace r`wavenum'dimea = 0 if hemobpi==0
replace r`wavenum'dimea = 1 if hemobpi==1
label variable r`wavenum'dimea "r`wavenum'dimea:w`wavenum' R Some Diff-Pick up a 5p coin"

*wave 3 spouse difficulty picking up a dime
gen s`wavenum'dimea =.
spouse r`wavenum'dimea, result(s`wavenum'dimea) wave(`wavenum')
label variable s`wavenum'dimea "s`wavenum'dimea:w`wavenum' S Some Diff-Pick up a 5p coin"

*value labels
label values r`wavenum'dimea diff
label values s`wavenum'dimea diff

*check 

***Difficulty reaching/extending arms up***
*wave 3 respondent difficulty reaching/extending arms up
gen r`wavenum'armsa =.
missing_w`wavenum' hemobre, result(r`wavenum'armsa)
replace r`wavenum'armsa = 0 if hemobre==0
replace r`wavenum'armsa = 1 if hemobre==1
label variable r`wavenum'armsa "r`wavenum'armsa:w`wavenum' R Some Diff-Rch/xtnd arms up"

*wave 3 spouse difficulty reaching/extending arms up
gen s`wavenum'armsa =.
spouse r`wavenum'armsa, result(s`wavenum'armsa) wave(`wavenum')
label variable s`wavenum'armsa "s`wavenum'armsa:w`wavenum' S Some Diff-Rch/xtnd arms up"

*value labels
label values r`wavenum'armsa diff
label values s`wavenum'armsa diff

*check 


***Difficulty pushing/pulling a large object***
*wave 3 respondent difficulty pushing/pulling a large object
gen r`wavenum'pusha =.
missing_w`wavenum' hemobpu, result(r`wavenum'pusha)
replace r`wavenum'pusha = 0 if hemobpu==0
replace r`wavenum'pusha = 1 if hemobpu==1
label variable r`wavenum'pusha "r`wavenum'pusha:w`wavenum' R Some Diff-Push/pull lg obj"

*wave 3 spouse difficulty pushing/pulling a large object
gen s`wavenum'pusha =.
spouse r`wavenum'pusha, result(s`wavenum'pusha) wave(`wavenum')
label variable s`wavenum'pusha "s`wavenum'pusha:w`wavenum' S Some Diff-Push/pull lg obj"

*value labels
label values r`wavenum'pusha diff
label values s`wavenum'pusha diff

*check 

***ADL Summary 0-5***
*wave 3 respondent ADL Summary 0-5
H_ELSA_summary_v adla, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata r`wavenum'beda r`wavenum'walkra) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adla "r`wavenum'adla:w`wavenum' R Some Diff-ADLs /0-5"

*wave 3 respondent Missing in ADL Summary
label variable r`wavenum'adlam "r`wavenum'adlam:w`wavenum' r Missings in Some Diff-ADLs /0-5"

*wave 3 spouse ADL Summary 0-5
gen s`wavenum'adla =.
spouse r`wavenum'adla, result(s`wavenum'adla) wave(`wavenum')
label variable s`wavenum'adla "s`wavenum'adla:w`wavenum' S Some Diff-ADLs /0-5"

*wave 3 spouse Missings in ADL Summary 0-5
gen s`wavenum'adlam =.
spouse r`wavenum'adlam, result(s`wavenum'adlam) wave(`wavenum')
label variable s`wavenum'adlam "s`wavenum'adlam:w`wavenum' S Missings in Some Diff-ADLs /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***ADL Wallace Summary 0-3***
*wave 3 respondent ADL Wallace Summary 0-3
H_ELSA_summary_v adlwa, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adlwa "r`wavenum'adlwa:w`wavenum' R Some Diff-ADLs:Wallace /0-3"

*wave 3 respondent Missings in ADL Wallace Summary 0-3
label variable r`wavenum'adlwam "r`wavenum'adlwam:w`wavenum' R Missings in Some Diff-ADLs:Wallace /0-3"

*wave 3 spouse ADL Wallace Summary 0-3
gen s`wavenum'adlwa =.
spouse r`wavenum'adlwa, result(s`wavenum'adlwa) wave(`wavenum')
label variable s`wavenum'adlwa "s`wavenum'adlwa:w`wavenum' S Some Diff-ADLs:Wallace /0-3"

*wave 3 spouse Missings in ADL Wallace Summary 0-3
gen s`wavenum'adlwam =.
spouse r`wavenum'adlwam, result(s`wavenum'adlwam) wave(`wavenum')
label variable s`wavenum'adlwam "s`wavenum'adlwam:w`wavenum' S Missings in Some Diff-ADLs:Wallace /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-3***
*wave 3 respondent IADLs Summary 0-3
H_ELSA_summary_v iadla, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadla "r`wavenum'iadla:w`wavenum' R Some Diff-IADLs: /0-3"

*wave 3 respondent Missings in IADLs Summary 0-3
label variable r`wavenum'iadlam "r`wavenum'iadlam:w`wavenum' R Missings in Some Diff-IADLs: /0-3"

*wave 3 spouse IADLs Summary 0-3
gen s`wavenum'iadla =.
spouse r`wavenum'iadla, result(s`wavenum'iadla) wave(`wavenum')
label variable s`wavenum'iadla "s`wavenum'iadla:w`wavenum' S Some Diff-IADLs: /0-3"

*wave 3 spouse Missings in IADLs Summary 0-3
gen s`wavenum'iadlam =.
spouse r`wavenum'iadlam, result(s`wavenum'iadlam) wave(`wavenum')
label variable s`wavenum'iadlam "s`wavenum'iadlam:w`wavenum' S Missings in Some Diff-IADLs: /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-5***
*wave 3 respondent IADLs Summary 0-5
H_ELSA_summary_v iadlza, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa r`wavenum'shopa r`wavenum'mealsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadlza "r`wavenum'iadlza:w`wavenum' R Some Diff-IADLs: /0-5"

*wave 3 respondent Missings in IADLs Summary 0-5
label variable r`wavenum'iadlzam "r`wavenum'iadlzam:w`wavenum' R Missings in Some Diff-IADLs: /0-5"

*wave 3 spouse IADLs Summary 0-5
gen s`wavenum'iadlza =.
spouse r`wavenum'iadlza, result(s`wavenum'iadlza) wave(`wavenum')
label variable s`wavenum'iadlza "s`wavenum'iadlza:w`wavenum' S Some Diff-IADLs: /0-5"

*wave 3 spouse Missings in IADLs Summary 0-5
gen s`wavenum'iadlzam =.
spouse r`wavenum'iadlzam, result(s`wavenum'iadlzam) wave(`wavenum')
label variable s`wavenum'iadlzam "s`wavenum'iadlzam:w`wavenum' S Missings in Some Diff-IADLs: /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Mobility Summary***
*wave 3 respondent Mobility Summary
H_ELSA_summary_v mobilb, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'climsa r`wavenum'clim1a) 
local varlist_m = r(varlist_m)
label variable r`wavenum'mobilb "r`wavenum'mobilb:w`wavenum' R Some Diff-Mobility /0-4"

*wave 3 respondent Missings in Mobility Summary
label variable r`wavenum'mobilbm "r`wavenum'mobilbm:w`wavenum' R Missings in Some Diff-Mobility /0-4"

*wave 3 spouse Mobility Summary
gen s`wavenum'mobilb =.
spouse r`wavenum'mobilb, result(s`wavenum'mobilb) wave(`wavenum')
label variable s`wavenum'mobilb "s`wavenum'mobilb:w`wavenum' S Some Diff-Mobility /0-4"

*wave 3 spouse Missings in Mobility Summary
gen s`wavenum'mobilbm =.
spouse r`wavenum'mobilbm, result(s`wavenum'mobilbm) wave(`wavenum')
label variable s`wavenum'mobilbm "s`wavenum'mobilbm:w`wavenum' S Missings in Some Diff-Mobility /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Large Muscle Summary***
*wave 3 respondent Large Muscle Summary
H_ELSA_summary_v lgmusa, wave(`wavenum') add(r`wavenum'sita r`wavenum'chaira r`wavenum'stoopa r`wavenum'pusha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'lgmusa "r`wavenum'lgmusa:w`wavenum' R Some Diff-Large muscle /0-4"

*wave 3 respondent Missings in Large Muscle Summary
label variable r`wavenum'lgmusam "r`wavenum'lgmusam:w`wavenum' R Missings in Some Diff-Large muscle /0-4"

*wave 3 spouse Large Muscle Summary
gen s`wavenum'lgmusa =.
spouse r`wavenum'lgmusa, result(s`wavenum'lgmusa) wave(`wavenum')
label variable s`wavenum'lgmusa "s`wavenum'lgmusa:w`wavenum' S Some Diff-Large muscle /0-4"

*wave 3 spouse Missings in Large Muscle Summary
gen s`wavenum'lgmusam =.
spouse r`wavenum'lgmusam, result(s`wavenum'lgmusam) wave(`wavenum')
label variable s`wavenum'lgmusam "s`wavenum'lgmusam:w`wavenum' S Missings in Some Diff-Large muscle /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Gross Motor Summary***
*wave 3 respondent Gross Motor Summary
H_ELSA_summary_v grossa, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'clim1a r`wavenum'beda r`wavenum'batha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'grossa "r`wavenum'grossa:w`wavenum' R Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 3 respondent Missings in Gross Motor Summary
label variable r`wavenum'grossam "r`wavenum'grossam:w`wavenum' R Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 3 spouse Gross Motor Summary
gen s`wavenum'grossa =.
spouse r`wavenum'grossa, result(s`wavenum'grossa) wave(`wavenum')
label variable s`wavenum'grossa "s`wavenum'grossa:w`wavenum' S Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 3 spouse Missings in Gross Motor Summary
gen s`wavenum'grossam =.
spouse r`wavenum'grossam, result(s`wavenum'grossam) wave(`wavenum')
label variable s`wavenum'grossam "s`wavenum'grossam:w`wavenum' S Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Fine Motor Summary***
*wave 3 respondent Fine Motor Summary
H_ELSA_summary_v finea, wave(`wavenum') add(r`wavenum'dimea r`wavenum'eata r`wavenum'dressa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'finea "r`wavenum'finea:w`wavenum' R Some Diff-Dime/eat/dress /0-3"

*wave 3 respondent Missings in Fine Motor Summary
label variable r`wavenum'fineam "r`wavenum'fineam:w`wavenum' R Missings in Some Diff-Dime/eat/dress /0-3"

*wave 3 spouse Fine Motor Summary
gen s`wavenum'finea =.
spouse r`wavenum'finea, result(s`wavenum'finea) wave(`wavenum')
label variable s`wavenum'finea "s`wavenum'finea:w`wavenum' S Some Diff-Dime/eat/dress /0-3"

*wave 3 spouse Missings in Fine Motor Summary
gen s`wavenum'fineam =.
spouse r`wavenum'fineam, result(s`wavenum'fineam) wave(`wavenum')
label variable s`wavenum'fineam "s`wavenum'fineam:w`wavenum' S Missings in Some Diff-Dime/eat/dress /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***Felt depressed (0,1)***
*wave 3 respondent Felt depressed (0,1)
gen r`wavenum'depres =.
missing_w`wavenum' psceda, result(r`wavenum'depres)
replace r`wavenum'depres =.p if askpx == 1
replace r`wavenum'depres = 0 if psceda == 2
replace r`wavenum'depres = 1 if psceda == 1
label variable r`wavenum'depres "r`wavenum'depres:w`wavenum' r CESD: Felt depressed (0,1)"

*wave 3 spouse Felt depressed (0,1)
gen s`wavenum'depres =.
spouse r`wavenum'depres, result(s`wavenum'depres) wave(`wavenum')
label variable s`wavenum'depres "s`wavenum'depres:w`wavenum' s CESD: Felt depressed (0,1)"

*value labels
label values r`wavenum'depres cesd
label values s`wavenum'depres cesd

*check

***Everything is an effort***
*wave 3 respondent Everything is an effort
gen r`wavenum'effort =.
missing_w`wavenum' pscedb, result(r`wavenum'effort)
replace r`wavenum'effort =.p if askpx == 1
replace r`wavenum'effort = 0 if pscedb == 2
replace r`wavenum'effort = 1 if pscedb == 1
label variable r`wavenum'effort "r`wavenum'effort:w`wavenum' r CESD: Everthing an effort (0,1)"

*wave 3 spouse Everything is an effort
gen s`wavenum'effort =.
spouse r`wavenum'effort, result(s`wavenum'effort) wave(`wavenum')
label variable s`wavenum'effort "s`wavenum'effort:w`wavenum' s CESD: Everthing an effort (0,1)"

*value labels
label values r`wavenum'effort cesd
label values s`wavenum'effort cesd

*check

***Sleep was restless (0,1)***
*wave 3 respondent Sleep was restless (0,1)
gen r`wavenum'sleepr =.
missing_w`wavenum' pscedc, result(r`wavenum'sleepr)
replace r`wavenum'sleepr =.p if askpx == 1
replace r`wavenum'sleepr = 0 if pscedc == 2
replace r`wavenum'sleepr = 1 if pscedc == 1
label variable r`wavenum'sleepr "r`wavenum'sleepr:w`wavenum' r CESD: Sleep was restless (0,1)"

*wave 3 spouse Sleep was restless (0,1)
gen s`wavenum'sleepr =.
spouse r`wavenum'sleepr, result(s`wavenum'sleepr) wave(`wavenum')
label variable s`wavenum'sleepr "s`wavenum'sleepr:w`wavenum' s CESD: Sleep was restless (0,1)"

*value labels
label values r`wavenum'sleepr cesd
label values s`wavenum'sleepr cesd

*check

***Was happy (0,1)***
*wave 3 respondent Was happy (0,1)
gen r`wavenum'whappy =.
missing_w`wavenum' pscedd, result(r`wavenum'whappy)
replace r`wavenum'whappy =.p if askpx == 1
replace r`wavenum'whappy = 0 if pscedd == 2
replace r`wavenum'whappy = 1 if pscedd == 1
label variable r`wavenum'whappy "r`wavenum'whappy:w`wavenum' r CESD: Was happy (0,1)"

*wave 3 spouse Was happy (0,1)
gen s`wavenum'whappy =.
spouse r`wavenum'whappy, result(s`wavenum'whappy) wave(`wavenum')
label variable s`wavenum'whappy "s`wavenum'whappy:w`wavenum' s CESD: Was happy (0,1)"

*value labels
label values r`wavenum'whappy cesd
label values s`wavenum'whappy cesd

*check

***Felt lonely (0,1)***
*wave 3 respondent Felt lonely (0,1)
gen r`wavenum'flone =.
missing_w`wavenum' pscede, result(r`wavenum'flone)
replace r`wavenum'flone =.p if askpx == 1
replace r`wavenum'flone = 0 if pscede == 2
replace r`wavenum'flone = 1 if pscede == 1
label variable r`wavenum'flone "r`wavenum'flone:w`wavenum' r CESD: Felt lonely (0,1)"

*wave 3 spouse Felt lonely (0,1)
gen s`wavenum'flone =.
spouse r`wavenum'flone, result(s`wavenum'flone) wave(`wavenum')
label variable s`wavenum'flone "s`wavenum'flone:w`wavenum' s CESD: Felt lonely (0,1)"

*value labels
label values r`wavenum'flone cesd
label values s`wavenum'flone cesd

*check

***Felt sad (0,1)***
*wave 3 respondent Felt sad (0,1)
gen r`wavenum'fsad =.
missing_w`wavenum' pscedg, result(r`wavenum'fsad)
replace r`wavenum'fsad =.p if askpx == 1
replace r`wavenum'fsad = 0 if pscedg == 2
replace r`wavenum'fsad = 1 if pscedg == 1
label variable r`wavenum'fsad "r`wavenum'fsad:w`wavenum' r CESD: Felt sad (0,1)"

*wave 3 spouse Felt sad (0,1)
gen s`wavenum'fsad =.
spouse r`wavenum'fsad, result(s`wavenum'fsad) wave(`wavenum')
label variable s`wavenum'fsad "s`wavenum'fsad:w`wavenum' s CESD: Felt sad (0,1)"

*value labels
label values r`wavenum'fsad cesd
label values s`wavenum'fsad cesd

*check

***Could not get going (0,1)***
*wave 3 respondent Could not get going (0,1)
gen r`wavenum'going =.
missing_w`wavenum' pscedh, result(r`wavenum'going)
replace r`wavenum'going =.p if askpx == 1
replace r`wavenum'going = 0 if pscedh == 2
replace r`wavenum'going = 1 if pscedh == 1
label variable r`wavenum'going "r`wavenum'going:w`wavenum' r CESD: Could not get going (0,1)"

*wave 3 spouse Could not get going (0,1)
gen s`wavenum'going =.
spouse r`wavenum'going, result(s`wavenum'going) wave(`wavenum')
label variable s`wavenum'going "s`wavenum'going:w`wavenum' s CESD: Could not get going (0,1)"

*value labels
label values r`wavenum'going cesd
label values s`wavenum'going cesd

*check

***Enjoyed life (0,1)***
*wave 3 respondent Enjoyed life (0,1)
gen r`wavenum'enlife =.
missing_w`wavenum' pscedf, result(r`wavenum'enlife)
replace r`wavenum'enlife =.p if askpx == 1
replace r`wavenum'enlife = 0 if pscedf == 2
replace r`wavenum'enlife = 1 if pscedf == 1
label variable r`wavenum'enlife "r`wavenum'enlife:w`wavenum' r CESD: Enjoyed life (0,1)"

*wave 3 spouse Enjoyed life (0,1)
gen s`wavenum'enlife =.
spouse r`wavenum'enlife, result(s`wavenum'enlife) wave(`wavenum')
label variable s`wavenum'enlife "s`wavenum'enlife:w`wavenum' s CESD: Enjoyed life (0,1)"

*value labels
label values r`wavenum'enlife cesd
label values s`wavenum'enlife cesd

*check

***CESD Score***
*wave 3 respondent CESD score number of missings
egen r`wavenum'cesdm = rowmiss(r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife) if inw`wavenum' == 1
label variable r`wavenum'cesdm "r`wavenum'cesdm:w`wavenum' r missings in CESD score"

*wave 3 spouse CESD score number of missings
gen s`wavenum'cesdm =.
spouse r`wavenum'cesdm, result(s`wavenum'cesdm) wave(`wavenum')
label variable s`wavenum'cesdm "s`wavenum'cesdm:w`wavenum' s missings in CESD score"

local cesd
foreach v of varlist r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going  {
	recode `v' (miss = 0), generate(`v'_m)
	local cesd `cesd' `v'_m
}

foreach u of varlist r`wavenum'whappy r`wavenum'enlife {
	recode `u' (miss = 1), generate(`u'_m)
	local cesd `cesd' `u'_m
}

*wave 3 respondent CESD score
gen r`wavenum'cesd=.
missing_H r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife, result(r`wavenum'cesd)
replace r`wavenum'cesd =.p if askpx == 1		 
replace r`wavenum'cesd = r`wavenum'depres_m + r`wavenum'effort_m + r`wavenum'sleepr_m + r`wavenum'flone_m + r`wavenum'fsad_m + r`wavenum'going_m + (1-r`wavenum'whappy_m) + (1-r`wavenum'enlife_m) if inrange(r`wavenum'cesdm,0,7)
label variable r`wavenum'cesd "r`wavenum'cesd:w`wavenum' r CESD Score"

*wave 3 spouse CESD score
gen s`wavenum'cesd =.
spouse r`wavenum'cesd, result(s`wavenum'cesd) wave(`wavenum')
label variable s`wavenum'cesd "s`wavenum'cesd:w`wavenum' s CESD Score"

*check 

*drop intermediate variables
drop `cesd'

***Ever had high blood pressure***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hibpe if !mi(r`w'hibpe) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had high blood pressure
gen r`wavenum'hibpe =.
missing_w`wavenum' hedacbp hedimbp, result(r`wavenum'hibpe)
replace r`wavenum'hibpe = 0 if preload == 0 & hedacbp != 2
replace r`wavenum'hibpe = 0 if inlist(hedimbp,-3,0)
replace r`wavenum'hibpe = 0 if preload == 1 & hedacbp == 2
replace r`wavenum'hibpe = 1 if hedimbp == 3
replace r`wavenum'hibpe = 1 if preload == 1 & hedacbp != 2
label variable r`wavenum'hibpe "r`wavenum'hibpe:w`wavenum' r ever had high blood pressure"

*wave 3 respondent high blood pressure dispute flag
gen r`wavenum'hibpf =.
replace r`wavenum'hibpf = 0 if inlist(preload,0,1) | inlist(hedimbp,-3,0,3)
replace r`wavenum'hibpf = 3 if preload == 1 & hedacbp == 2
label variable r`wavenum'hibpf "r`wavenum'hibpf:w`wavenum' r flag dispute chg high blood pressure"

*previous waves respondent high blood pressure dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpf = 6 if preload == 1 & hedacbp == 2 & r`w'hibpf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpe = 0 if preload == 1 & hedacbp == 2 & r`w'hibpe == 1
}

*value labels
label values r`wavenum'hibpe health_problems
label values r`wavenum'hibpf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had diabetes***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'diabe if !mi(r`w'diabe) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had diabetes
gen r`wavenum'diabe =.
missing_w`wavenum' hedacdi hedimdi, result(r`wavenum'diabe)
replace r`wavenum'diabe = 0 if preload == 0 & hedacdi != 2
replace r`wavenum'diabe = 0 if inlist(hedimdi,-3,0)
replace r`wavenum'diabe = 0 if preload == 1 & hedacdi == 2
replace r`wavenum'diabe = 1 if hedimdi == 3
replace r`wavenum'diabe = 1 if preload == 1 & hedacdi != 2
label variable r`wavenum'diabe "r`wavenum'diabe:w`wavenum' r ever had diabetes"

*wave 3 respondent diabetes dispute flag
gen r`wavenum'diabf =.
replace r`wavenum'diabf = 0 if inlist(preload,0,1) | inlist(hedimdi,-3,0,3)
replace r`wavenum'diabf = 3 if preload == 1 & hedacdi == 2
label variable r`wavenum'diabf "r`wavenum'diabf:w`wavenum' r flag dispute chg diabetes"

*previous waves respondent diabetes dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabf = 6 if preload == 1 & hedacdi == 2 & r`w'diabf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabe = 0 if preload == 1 & hedacdi == 2 & r`w'diabe == 1
}

*value labels
label values r`wavenum'diabe health_problems
label values r`wavenum'diabf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had cancer***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'cancre if !mi(r`w'cancre) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had cancer
gen r`wavenum'cancre =.
missing_w`wavenum' hedbdca hedibca, result(r`wavenum'cancre)
replace r`wavenum'cancre = 0 if preload == 0 & hedbdca != 2
replace r`wavenum'cancre = 0 if inlist(hedibca,-3,0)
replace r`wavenum'cancre = 0 if preload == 1 & hedbdca == 2
replace r`wavenum'cancre = 1 if hedibca == 3
replace r`wavenum'cancre = 1 if preload == 1 & hedbdca != 2
label variable r`wavenum'cancre "r`wavenum'cancre:w`wavenum' r ever had cancer"

*wave 3 respondent cancer dispute flag
gen r`wavenum'cancrf =.
replace r`wavenum'cancrf = 0 if inlist(preload,0,1) | inlist(hedibca,-3,0,3)
replace r`wavenum'cancrf = 3 if preload == 1 & hedbdca == 2
label variable r`wavenum'cancrf "r`wavenum'cancrf:w`wavenum' r flag dispute chg cancer"

*previous waves respondent cancer dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancrf = 6 if preload == 1 & hedbdca == 2 & r`w'cancrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancre = 0 if preload == 1 & hedbdca == 2 & r`w'cancre == 1
}

*value labels
label values r`wavenum'cancre health_problems
label values r`wavenum'cancrf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had lung disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'lunge if !mi(r`w'lunge) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had lung disease
gen r`wavenum'lunge =.
missing_w`wavenum' hedbdlu hediblu, result(r`wavenum'lunge)
replace r`wavenum'lunge = 0 if preload == 0 & hedbdlu != 2
replace r`wavenum'lunge = 0 if inlist(hediblu,-3,0)
replace r`wavenum'lunge = 0 if preload == 1 & hedbdlu == 2
replace r`wavenum'lunge = 1 if hediblu == 3
replace r`wavenum'lunge = 1 if preload == 1 & hedbdlu != 2
label variable r`wavenum'lunge "r`wavenum'lunge:w`wavenum' r ever had lung disease"

*wave 3 respondent lung disease dispute flag
gen r`wavenum'lungf =.
replace r`wavenum'lungf = 0 if inlist(preload,0,1) | inlist(hediblu,-3,0,3)
replace r`wavenum'lungf = 3 if preload == 1 & hedbdlu == 2
label variable r`wavenum'lungf "r`wavenum'lungf:w`wavenum' r flag dispute chg lung disease"

*previous waves respondent lung disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lungf = 6 if preload == 1 & hedbdlu == 2 & r`w'lungf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lunge = 0 if preload == 1 & hedbdlu == 2 & r`w'lunge == 1
}

*value labels
label values r`wavenum'lunge health_problems
label values r`wavenum'lungf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had heart problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hearte if !mi(r`w'hearte) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had heart problems
gen r`wavenum'hearte =.
missing_w`wavenum' hedacan hedacmi hedachf hedachm hedacar hedacot ///
   				 hediman hedimmi hedimhf hedimhm hedimar hedim85, result(r`wavenum'hearte)
replace r`wavenum'hearte = 0 if preload == 0 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
											 & hedachm != 2 & hedacar != 2 & hedacot != 2
replace r`wavenum'hearte = 0 if ( inlist(hediman,-3,0) | inlist(hedimmi,-3,0) | inlist(hedimhf,-3,0) | inlist(hedimhm,-3,0) ///
													   | inlist(hedimar,-3,0) | hedim85 == 0 )
replace r`wavenum'hearte = 0 if preload == 1 & (hedacan == 2 | hedacmi == 2 | hedachf == 2 ///
															 | hedachm == 2 | hedacar == 2 | hedacot == 2	)									 
replace r`wavenum'hearte = 1 if ( hediman == 3 | hedimmi == 3 | hedimhf == 3 | hedimhm == 3 ///
									           | hedimar == 3 | hedim85 == 1 )
replace r`wavenum'hearte = 1 if preload == 1 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
											 & hedachm != 2 & hedacar != 2 & hedacot != 2
label variable r`wavenum'hearte "r`wavenum'hearte:w`wavenum' r ever had heart problems"

*wave 3 respondent heart problems dispute flag
gen r`wavenum'heartf =.
replace r`wavenum'heartf = 0 if inlist(preload,0,1) | inlist(hediman,-3,0,3) | inlist(hedimmi,-3,0,3) ///
												    | inlist(hedimhf,-3,0,3) | inlist(hedimhm,-3,0,3) ///
												    | inlist(hedimar,-3,0,3) | inlist(hedim85,-9,-8,0,1)
replace r`wavenum'heartf = 3 if preload == 1 & (hedacan == 2 | hedacmi == 2 ///
        											         | hedachf == 2 | hedachm == 2 ///
        											         | hedacar == 2 | hedacot == 2)
label variable r`wavenum'heartf "r`wavenum'heartf:w`wavenum' r flag dispute chg heart problems"


*previous waves respondent heart problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'heartf = 6 if preload == 1 & ( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'heartf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hearte = 0 if preload == 1 & ///
															( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'hearte == 1
}

*value labels
label values r`wavenum'hearte health_problems
label values r`wavenum'heartf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had stroke***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'stroke if !mi(r`w'stroke) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had stroke
gen r`wavenum'stroke =.
missing_w`wavenum' hedacst hedimst, result(r`wavenum'stroke)
replace r`wavenum'stroke = 0 if preload == 0 & hedacst != 2
replace r`wavenum'stroke = 0 if inlist(hedimst,-3,0)
replace r`wavenum'stroke = 0 if preload == 1 & hedacst == 2
replace r`wavenum'stroke = 1 if hedimst == 3
replace r`wavenum'stroke = 1 if preload == 1 & hedacst != 2
label variable r`wavenum'stroke "r`wavenum'stroke:w`wavenum' r ever had stroke"

*wave 3 respondent stroke dispute flag
gen r`wavenum'strokf =.
replace r`wavenum'strokf = 0 if inlist(preload,0,1) | inlist(hedimst,-3,0,3)
replace r`wavenum'strokf = 3 if preload == 1 & hedacst == 2
label variable r`wavenum'strokf "r`wavenum'strokf:w`wavenum' r flag dispute chg stroke"

*previous waves respondent stroke dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'strokf = 6 if preload == 1 & hedacst == 2 & r`w'strokf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'stroke = 0 if preload == 1 & hedacst == 2 & r`w'stroke == 1
}

*value labels
label values r`wavenum'stroke health_problems
label values r`wavenum'strokf health_problems_flag

*check
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had psych problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'psyche if !mi(r`w'psyche) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had psych problems
gen r`wavenum'psyche =.
missing_w`wavenum' hedbdps hedibps, result(r`wavenum'psyche)
replace r`wavenum'psyche = 0 if preload == 0 & hedbdps != 2
replace r`wavenum'psyche = 0 if inlist(hedibps,-3,0)
replace r`wavenum'psyche = 0 if preload == 1 & hedbdps == 2
replace r`wavenum'psyche = 1 if hedibps == 3
replace r`wavenum'psyche = 1 if preload == 1 & hedbdps != 2
label variable r`wavenum'psyche "r`wavenum'psyche:w`wavenum' r ever had psych problems"

*wave 3 respondent psych problems dispute flag
gen r`wavenum'psychf =.
replace r`wavenum'psychf = 0 if inlist(preload,0,1) | inlist(hedibps,-3,0,3)
replace r`wavenum'psychf = 3 if preload == 1 & hedbdps == 2
label variable r`wavenum'psychf "r`wavenum'psychf:w`wavenum' r flag dispute chg psych problems"

*previous waves respondent psych problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psychf = 6 if preload == 1 & hedbdps == 2 & r`w'psychf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psyche = 0 if preload == 1 & hedbdps == 2 & r`w'psyche == 1
}

*value labels
label values r`wavenum'psyche health_problems
label values r`wavenum'psychf health_problems_flag

*check
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had arthritis***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'arthre if !mi(r`w'arthre) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had arthritis
gen r`wavenum'arthre =.
missing_w`wavenum' hedbdar hedibar, result(r`wavenum'arthre)
replace r`wavenum'arthre = 0 if preload == 0 & hedbdar != 2
replace r`wavenum'arthre = 0 if inlist(hedibar,-3,0)
replace r`wavenum'arthre = 0 if preload == 1 & hedbdar == 2
replace r`wavenum'arthre = 1 if hedibar == 3
replace r`wavenum'arthre = 1 if preload == 1 & hedbdar != 2
label variable r`wavenum'arthre "r`wavenum'arthre:w`wavenum' r ever had arthritis"

*wave 3 respondent arthritis dispute flag
gen r`wavenum'arthrf =.
replace r`wavenum'arthrf = 0 if inlist(preload,0,1) | inlist(hedibar,-3,0,3)
replace r`wavenum'arthrf = 3 if preload == 1 & hedbdar == 2
label variable r`wavenum'arthrf "r`wavenum'arthrf:w`wavenum' r flag dispute chg arthritis"

*previous waves respondent arthritis dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthrf = 6 if preload == 1 & hedbdar == 2 & r`w'arthrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthre = 0 if preload == 1 & hedbdar == 2 & r`w'arthre == 1
}

*value labels
label values r`wavenum'arthre health_problems
label values r`wavenum'arthrf health_problems_flag

*check
forvalues w = `wavenum' (-1) 1 {
}
drop preload

***Ever had memory-related problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'memrye if !mi(r`w'memrye) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had memory-related problems
gen r`wavenum'memrye =.
missing_w`wavenum' hedbdad hedbdde hedibad hedibde, result(r`wavenum'memrye)
replace r`wavenum'memrye = 0 if preload == 0 & hedbdad != 2 & hedbdde != 2
replace r`wavenum'memrye = 0 if ( inlist(hedibad,-3,0) | inlist(hedibde,-3,0) )
replace r`wavenum'memrye = 0 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
replace r`wavenum'memrye = 1 if ( hedibad == 3 | hedibde == 3 )
replace r`wavenum'memrye = 1 if preload == 1 & hedbdad != 2 & hedbdde != 2
label variable r`wavenum'memrye "r`wavenum'memrye:w`wavenum' r ever had memory problem"

*wave 3 respondent memory-related problems dispute flag
gen r`wavenum'memryf =.
replace r`wavenum'memryf = 0 if inlist(preload,0,1) | inlist(hedibad,-3,0,3) | inlist(hedibde,-3,0,3)
replace r`wavenum'memryf = 3 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
label variable r`wavenum'memryf "r`wavenum'memryf:w`wavenum' r flag chg previous memory prob"

*previous waves respondent memory-related problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memryf = 6 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memryf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memrye = 0 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memrye == 1
}

*value labels
label values r`wavenum'memrye health_problems
label values r`wavenum'memryf health_problems_flag

*check
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had asthma***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'asthmae if !mi(r`w'asthmae) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had asthma
gen r`wavenum'asthmae =.
missing_w`wavenum' hedbdas hedibas, result(r`wavenum'asthmae)
replace r`wavenum'asthmae = 0 if preload == 0 & hedbdas != 2
replace r`wavenum'asthmae = 0 if inlist(hedibas,-3,0)
replace r`wavenum'asthmae = 0 if preload == 1 & hedbdas == 2
replace r`wavenum'asthmae = 1 if hedibas == 3
replace r`wavenum'asthmae = 1 if preload == 1 & hedbdas != 2
label variable r`wavenum'asthmae "r`wavenum'asthmae:w`wavenum' r ever had asthma"

*wave 3 respondent asthma dispute flag
gen r`wavenum'asthmaf =.
replace r`wavenum'asthmaf = 0 if inlist(preload,0,1) | inlist(hedibas,-3,0,3)
replace r`wavenum'asthmaf = 3 if preload == 1 & hedbdas == 2
label variable r`wavenum'asthmaf "r`wavenum'asthmaf:w`wavenum' r flag chg previous asthma"

*previous waves respondent asthma dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmaf = 6 if preload == 1 & hedbdas == 2 & r`w'asthmaf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmae = 0 if preload == 1 & hedbdas == 2 & r`w'asthmae == 1
}

*value labels
label values r`wavenum'asthmae health_problems
label values r`wavenum'asthmaf health_problems_flag

*check
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had high cholesterol***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 2 {
	replace preload = r`w'hchole if !mi(r`w'hchole) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had high cholesterol
gen r`wavenum'hchole =.
missing_w`wavenum' hedimch hedacch, result(r`wavenum'hchole)
replace r`wavenum'hchole = 0 if preload == 0 & hedacch != 2
replace r`wavenum'hchole = 0 if inlist(hedimch,-3,0)
replace r`wavenum'hchole = 0 if preload == 1 & hedacch == 2
replace r`wavenum'hchole = 1 if hedimch == 3
replace r`wavenum'hchole = 1 if preload == 1 & hedacch != 2
label variable r`wavenum'hchole "r`wavenum'hchole:w`wavenum' r ever had high cholesterol"

*wave 3 respondent high cholesterol dispute flag
gen r`wavenum'hcholf =.
replace r`wavenum'hcholf = 0 if inlist(preload,0,1) | inlist(hedimch,-3,0,3)
replace r`wavenum'hcholf = 3 if preload == 1 & hedacch == 2
label variable r`wavenum'hcholf "r`wavenum'hcholf:w`wavenum' r flag chg previous high cholesterol"

*previous waves respondent high cholesterol dispute flag
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hcholf = 6 if preload == 1 & hedacch == 2 & r`w'hcholf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hchole = 0 if preload == 1 & hedacch == 2 & r`w'hchole == 1
}

*value labels
label values r`wavenum'hchole health_problems
label values r`wavenum'hcholf health_problems_flag

drop preload

***Ever had cataracts***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'catrcte if !mi(r`w'catrcte) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had cataracts
gen r`wavenum'catrcte =.
missing_w`wavenum' heopcca heoptca, result(r`wavenum'catrcte)
replace r`wavenum'catrcte = 0 if preload == 0 & heopcca != 2
replace r`wavenum'catrcte = 0 if inlist(heoptca,-3,0)
replace r`wavenum'catrcte = 0 if preload == 1 & heopcca == 2
replace r`wavenum'catrcte = 1 if heoptca == 3
replace r`wavenum'catrcte = 1 if preload == 1 & heopcca != 2
label variable r`wavenum'catrcte "r`wavenum'catrcte:w`wavenum' r ever had cataracts"

*wave 3 respondent cataracts dispute flag
gen r`wavenum'catrctf =.
replace r`wavenum'catrctf = 0 if inlist(preload,0,1) | inlist(heoptca,-3,0,3)
replace r`wavenum'catrctf = 3 if preload == 1 & heopcca == 2
label variable r`wavenum'catrctf "r`wavenum'catrctf:w`wavenum' r flag chg previous cataracts"

*previous waves respondent cataracts dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrctf = 6 if preload == 1 & heopcca == 2 & r`w'catrctf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrcte = 0 if preload == 1 & heopcca == 2 & r`w'catrcte == 1
}

*value labels
label values r`wavenum'catrcte health_problems
label values r`wavenum'catrctf health_problems_flag

drop preload

***Ever had parkinsons***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'parkine if !mi(r`w'parkine) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had parkinsons
gen r`wavenum'parkine =.
missing_w`wavenum' hedibpd hedbdpd, result(r`wavenum'parkine)
replace r`wavenum'parkine = 0 if preload == 0 & hedbdpd != 2
replace r`wavenum'parkine = 0 if inlist(hedibpd,-3,0)
replace r`wavenum'parkine = 0 if preload == 1 & hedbdpd == 2
replace r`wavenum'parkine = 1 if hedibpd == 3
replace r`wavenum'parkine = 1 if preload == 1 & hedbdpd != 2
label variable r`wavenum'parkine "r`wavenum'parkine:w`wavenum' r ever had parkinson disease"

*wave 3 respondent parkinsons dispute flag
gen r`wavenum'parkinf =.
replace r`wavenum'parkinf = 0 if inlist(preload,0,1) | inlist(hedibpd,-3,0,3)
replace r`wavenum'parkinf = 3 if preload == 1 & hedbdpd == 2
label variable r`wavenum'parkinf "r`wavenum'parkinf:w`wavenum' r flag chg previous parkinson disease"

*previous waves respondent parkinsons dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkinf = 6 if preload == 1 & hedbdpd == 2 & r`w'parkinf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkine = 0 if preload == 1 & hedbdpd == 2 & r`w'parkine == 1
}

*value labels
label values r`wavenum'parkine health_problems
label values r`wavenum'parkinf health_problems_flag

drop preload

***Ever had hip fracture***
*wave 3 respondent ever had hip fracture
gen r`wavenum'hipe = .
missing_w`wavenum' hefrac, result(r`wavenum'hipe)
replace r`wavenum'hipe = .a if inrange(r`wavenum'agey,1,59) & hefrac==-1
replace r`wavenum'hipe = 0 if hefrac==2
replace r`wavenum'hipe = 1 if hefrac==1 |  (r`pre_wavenum'hipe==1 & inw`wavenum' == 1)
label variable r`wavenum'hipe "r`wavenum'hipe:w`wavenum' r ever had hip fracture"
label values r`wavenum'hipe health_problems

*wave 3 spouse ever had hip fracture
gen s`wavenum'hipe = .
spouse r`wavenum'hipe, result(s`wavenum'hipe) wave(`wavenum')
label variable s`wavenum'hipe "s`wavenum'hipe:w`wavenum' s ever had hip fracture"
label values s`wavenum'hipe health_problems

***Ever had Alzheimers disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'alzhe if !mi(r`w'alzhe) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had Alzheimers disease
gen r`wavenum'alzhe =.
missing_w`wavenum' hedbdad hedibad, result(r`wavenum'alzhe)
replace r`wavenum'alzhe = 0 if preload == 0 & hedbdad != 2
replace r`wavenum'alzhe = 0 if inlist(hedibad,-3,0)
replace r`wavenum'alzhe = 0 if preload == 1 & hedbdad == 2
replace r`wavenum'alzhe = 1 if hedibad == 3
replace r`wavenum'alzhe = 1 if preload == 1 & hedbdad != 2
label variable r`wavenum'alzhe "r`wavenum'alzhe:w`wavenum' r ever had alzheimers"

*wave 3 respondent Alzheimers disease dispute flag
gen r`wavenum'alzhf =.
replace r`wavenum'alzhf = 0 if inlist(preload,0,1) | inlist(hedibad,-3,0,3)
replace r`wavenum'alzhf = 3 if preload == 1 & hedbdad == 2
label variable r`wavenum'alzhf "r`wavenum'alzhf:w`wavenum' r flag chg previous alzheimers"

*previous waves respondent Alzheimers disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhf = 6 if preload == 1 & hedbdad == 2 & r`w'alzhf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhe = 0 if preload == 1 & hedbdad == 2 & r`w'alzhe == 1
}

*value labels
label values r`wavenum'alzhe health_problems
label values r`wavenum'alzhf health_problems_flag

*check
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had Dementia***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'demene if !mi(r`w'demene) & mi(preload) & inw`wavenum'==1
}

*wave 3 respondent ever had Dementia
gen r`wavenum'demene =.
missing_w`wavenum' hedbdde hedibde, result(r`wavenum'demene)
replace r`wavenum'demene = 0 if preload == 0 & hedbdde != 2
replace r`wavenum'demene = 0 if inlist(hedibde,-3,0)
replace r`wavenum'demene = 0 if preload == 1 & hedbdde == 2
replace r`wavenum'demene = 1 if hedibde == 3
replace r`wavenum'demene = 1 if preload == 1 & hedbdde != 2
label variable r`wavenum'demene "r`wavenum'demene:w`wavenum' r ever had dementia"

*wave 3 respondent Dementia dispute flag
gen r`wavenum'demenf =.
replace r`wavenum'demenf = 0 if inlist(preload,0,1) | inlist(hedibde,-3,0,3)
replace r`wavenum'demenf = 3 if preload == 1 & hedbdde == 2
label variable r`wavenum'demenf "r`wavenum'demenf:w`wavenum' r flag chg previous dementia"

*previous waves respondent Dementia dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demenf = 6 if preload == 1 & hedbdde == 2 & r`w'demenf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demene = 0 if preload == 1 & hedbdde == 2 & r`w'demene == 1
}

*value labels
label values r`wavenum'demene health_problems
label values r`wavenum'demenf health_problems_flag

*check
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Vigorous physical activity***
*wave 3 respondent vigorous physical activity
gen r`wavenum'vgactx_e =.
missing_w`wavenum' heacta, result(r`wavenum'vgactx_e)
replace r`wavenum'vgactx_e =.p if askpx == 1
replace r`wavenum'vgactx_e = 2 if heacta == 1
replace r`wavenum'vgactx_e = 3 if heacta == 2
replace r`wavenum'vgactx_e = 4 if heacta == 3
replace r`wavenum'vgactx_e = 5 if heacta == 4
label variable r`wavenum'vgactx_e "r`wavenum'vgactx_e:w`wavenum' R Freq vigorous phys activ"

*wave 3 spouse vigorous physical activity
gen s`wavenum'vgactx_e =.
spouse r`wavenum'vgactx_e, result(s`wavenum'vgactx_e) wave(`wavenum')
label variable s`wavenum'vgactx_e "s`wavenum'vgactx_e:w`wavenum' S Freq vigorous phys activ"

*label values
label values r`wavenum'vgactx_e activity
label values s`wavenum'vgactx_e activity

*check 

***Moderate physical activity***
*wave 3 respondent moderate physical activity
gen r`wavenum'mdactx_e =.
missing_w`wavenum' heactb, result(r`wavenum'mdactx_e)
replace r`wavenum'mdactx_e = 2 if heactb == 1
replace r`wavenum'mdactx_e = 3 if heactb == 2
replace r`wavenum'mdactx_e = 4 if heactb == 3
replace r`wavenum'mdactx_e = 5 if heactb == 4
label variable r`wavenum'mdactx_e "r`wavenum'mdactx_e:w`wavenum' R Freq moderate phys activ"

*wave 3 spouse vigorous moderate activity
gen s`wavenum'mdactx_e =.
spouse r`wavenum'mdactx_e, result(s`wavenum'mdactx_e) wave(`wavenum')
label variable s`wavenum'mdactx_e "s`wavenum'mdactx_e:w`wavenum' S Freq moderate phys activ"

*label values
label values r`wavenum'mdactx_e activity
label values s`wavenum'mdactx_e activity

*check 

***Light physical activity***
*wave 3 respondent light physical activity
gen r`wavenum'ltactx_e =.
missing_w`wavenum' heactc, result(r`wavenum'ltactx_e)
replace r`wavenum'ltactx_e = 2 if heactc == 1
replace r`wavenum'ltactx_e = 3 if heactc == 2
replace r`wavenum'ltactx_e = 4 if heactc == 3
replace r`wavenum'ltactx_e = 5 if heactc == 4
label variable r`wavenum'ltactx_e "r`wavenum'ltactx_e:w`wavenum' R Freq light phys activ"

*wave 3 spouse vigorous light activity
gen s`wavenum'ltactx_e =.
spouse r`wavenum'ltactx_e, result(s`wavenum'ltactx_e) wave(`wavenum')
label variable s`wavenum'ltactx_e "s`wavenum'ltactx_e:w`wavenum' S Freq light phys activ"

*label values
label values r`wavenum'ltactx_e activity
label values s`wavenum'ltactx_e activity

*check 

***Ever drinks alcohol***
*wave 3 respondent ever drinks alcohol
gen r`wavenum'drink =.
replace r`wavenum'drink =.m if scako == -9
replace r`wavenum'drink =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drink = 0 if scako == 8
replace r`wavenum'drink = 1 if inrange(scako,1,7)
label variable r`wavenum'drink "r`wavenum'drink:w`wavenum' R ever drinks any alcohol"

*wave 3 spouse ever drinks alcohol
gen s`wavenum'drink =.
spouse r`wavenum'drink, result(s`wavenum'drink) wave(`wavenum')
label variable s`wavenum'drink "s`wavenum'drink:w`wavenum' S ever drinks any alcohol"

*label values
label values r`wavenum'drink ever_drink
label values s`wavenum'drink ever_drink

*check 

***Days per week drinks***
*wave 3 respondent days per week drinks
gen r`wavenum'drinkd_e =.
replace r`wavenum'drinkd_e =.m if scako == -9 | scal7a == -9 | scal7b == -9
replace r`wavenum'drinkd_e =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drinkd_e = 0 if scako == 8 | scal7a == 2
replace r`wavenum'drinkd_e = 1 if scal7b == 1
replace r`wavenum'drinkd_e = 2 if scal7b == 2
replace r`wavenum'drinkd_e = 3 if scal7b == 3
replace r`wavenum'drinkd_e = 4 if scal7b == 4
replace r`wavenum'drinkd_e = 5 if scal7b == 5
replace r`wavenum'drinkd_e = 6 if scal7b == 6
replace r`wavenum'drinkd_e = 7 if scal7b == 7
label variable r`wavenum'drinkd_e "r`wavenum'drinkd_e:w`wavenum' R # days/week drinks"

*wave 3 spouse days per week drinks
gen s`wavenum'drinkd_e =.
spouse r`wavenum'drinkd_e, result(s`wavenum'drinkd_e) wave(`wavenum')
label variable s`wavenum'drinkd_e "s`wavenum'drinkd_e:w`wavenum' S # days/week drinks"

**label values
*label values r`wavenum'drinkd_e drinks_flag
*label values s`wavenum'drinkd_e drinks_flag

*check 

***Drinks per day***
*wave 3 respondent drinks per day
gen r`wavenum'drinkn_e =.
replace r`wavenum'drinkn_e =.m if scako == -9 | scal7a == -9 | scal7b == -9 | ///
																	scdri01 == -9 | scdri02 == -9 | scdri03 == -9 | ///
																	scdri04 == -9 | scdri05 == -9 | scdri06 == -9 | ///
																	scdri07 == -9 | ///
																	scabnp == -9 | scabnlc == -9 | scabnsc == -9 | ///
																	scabsp == -9 | scabslc == -9 | scabssc == -9 | ///
																	scaspir == -9 | scasher == -9 | scawin == -9 | ///
																	scapopg == -9 
replace r`wavenum'drinkn_e =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drinkn_e = 0 if scako == 8 | scal7a == 2 | ///
											(	inlist(scdri01,0,1) ///
											& inlist(scdri02,0,1) ///
											& inlist(scdri03,0,1) ///
											& inlist(scdri04,0,1) ///
											& inlist(scdri05,0,1) ///
											& inlist(scdri06,0,1) ///
											& inlist(scdri07,0,1) )
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scabnp if !inlist(scabnp,-9,-1)
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scabnlc if !inlist(scabnlc,-9,-1)
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scabnsc if !inlist(scabnsc,-9,-1)
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scabsp if !inlist(scabsp,-9,-1)
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scabslc if !inlist(scabslc,-9,-1)
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scabssc if !inlist(scabssc,-9,-1)
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scaspir if !inlist(scaspir,-9,-1)
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scasher if !inlist(scasher,-9,-1)
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scawin if !inlist(scawin,-9,-1)
replace r`wavenum'drinkn_e = r`wavenum'drinkn_e + scapopg if !inlist(scapopg,-9,-1)
label variable r`wavenum'drinkn_e "r`wavenum'drinkn_e:w`wavenum' R # drinks/day"
replace r`wavenum'drinkn_e=round(r`wavenum'drinkn_e)

*wave 3 spouse drinks per day
gen s`wavenum'drinkn_e =.
spouse r`wavenum'drinkn_e, result(s`wavenum'drinkn_e) wave(`wavenum')
label variable s`wavenum'drinkn_e "s`wavenum'drinkn_e:w`wavenum' S # drinks/day"

**label values
*label values r`wavenum'drinkn_e drinks_flag
*label values s`wavenum'drinkn_e drinks_flag

*check 

***Ever smoked cigarettes***
*wave 3 respondent ever smoked cigarettes
local smokever
gen r`wavenum'smokev =.
missing_w`wavenum' hesmk heske, result(r`wavenum'smokev)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'smokev = r`w'smokev if inlist(r`w'smokev,0,1) & inw`wavenum'==1
	local smokever `smokever' r`w'smokev
}
replace r`wavenum'smokev = 0 if hesmk == 2 | heske == 1
replace r`wavenum'smokev = 1 if hesmk == 1 | inlist(heske,2,3)
label variable r`wavenum'smokev "r`wavenum'smokev:w`wavenum' R smoke ever"

*wave 3 spouse ever smoked cigarettes
gen s`wavenum'smokev =.
spouse r`wavenum'smokev, result(s`wavenum'smokev) wave(`wavenum')
label variable s`wavenum'smokev "s`wavenum'smokev:w`wavenum' S smoke ever"

*previous waves ever smoked if disputed
forvalues w = 1/`pre_wavenum' {
	replace r`w'smokev=0 if heske==1 & r`w'smokev==1
}

*label values
label values r`wavenum'smokev smokes
label values s`wavenum'smokev smokes

*check 

***Smokes cigarettes now***
*wave 3 respondent smokes cigarettes now
gen r`wavenum'smoken =.
missing_w`wavenum' hesmk heska, result(r`wavenum'smoken)
replace r`wavenum'smoken = 0 if hesmk == 2 | heska == 2
replace r`wavenum'smoken = 1 if heska == 1
label variable r`wavenum'smoken "r`wavenum'smoken:w`wavenum' R smokes now"

*wave 3 spouse smokes cigarettes now
gen s`wavenum'smoken =.
spouse r`wavenum'smoken, result(s`wavenum'smoken) wave(`wavenum')
label variable s`wavenum'smoken "s`wavenum'smoken:w`wavenum' S smokes now"

*previous waves smokes now if disputed
tempvar stop
gen `stop'=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace `stop'=1 if heske==2 & r`w'smoken==1 & mi(`stop')
	replace r`w'smoken=0 if heske==2 & r`w'smoken==1 & `stop'!=2
	replace `stop'=2 if r`w'smoken==0 & `stop'==1
}

forvalues w = 1/`pre_wavenum' {
	replace r`w'smoken=0 if heske==1 & r`w'smoken==1
}

*label values
label values r`wavenum'smoken smokes
label values s`wavenum'smoken smokes

*check 

**Smoking frequency ****
*wave 3 respondent smoking frequency
gen r`wavenum'smokef = .
missing_w`wavenum' hesmk heska heskb heskc hecig , result(r`wavenum'smokef)
replace r`wavenum'smokef = 0  if r`wavenum'smoken == 0
replace r`wavenum'smokef = 0  if hecig ==2
replace r`wavenum'smokef = (heskb*5 + heskc*2)/7  if !inlist(heskb,-1,-8,-9) & !inlist(heskc,-1,-8,-9) 

label var r`wavenum'smokef "r`wavenum'smokef:w`wavenum' R # cigarettes/day"

*wave 3 spouse smoking frequency
gen s`wavenum'smokef = .
spouse r`wavenum'smokef, result(s`wavenum'smokef) wave(`wavenum')
label var s`wavenum'smokef "s`wavenum'smokef:w`wavenum' S # cigarettes/day"


***drop ELSA wave specific core file raw variables***
drop `health_w`wavenum'_core'

******************************************************************************************


*set wave number
local wavenum=4
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave specific core data***
local health_w`wavenum'_core askpx ///
										 hehelf helwk ///
										 headl?? hemob?? ///
										 psceda pscedb pscedc pscedd pscede pscedf pscedg pscedh ///
										 hedia?? hedim?? hedib?? hedac?? hedbd?? ///
										 heacta heactb heactc ///
										 scako scal7a scal7b scdrspi scdrwin scdrpin  /// 
										 hesmk heska heskb heskc hecig heske ///
										 heoptca heopcca hefrac
merge 1:1 idauniq using "$wave_4_core", keepusing(`health_w`wavenum'_core') nogen

***merge with wave specific nurse data***
local health_w`wavenum'_nurse htval wtval htok wtok
merge 1:1 idauniq using "$wave_4_nurs", keepusing(`health_w`wavenum'_nurse') 
tempvar inw`wavenum'nurse
gen `inw`wavenum'nurse' = 0
replace `inw`wavenum'nurse' = 1 if _merge == 3
drop _merge


***self-report of health***
*wave 4 respondent self-report of health
gen r`wavenum'shlt =.
missing_w`wavenum' hehelf, result(r`wavenum'shlt)
replace r`wavenum'shlt = .p if askpx == 1
replace r`wavenum'shlt = hehelf if inrange(hehelf,1,5)
label variable r`wavenum'shlt "r`wavenum'shlt:w`wavenum' r self-report of health"

*wave 4 spouse self-report of health
gen s`wavenum'shlt =.
spouse r`wavenum'shlt, result(s`wavenum'shlt) wave(`wavenum')
label variable s`wavenum'shlt "s`wavenum'shlt:w`wavenum' s self-report of health"

*value labels
label values r`wavenum'shlt health
label values s`wavenum'shlt health

*check 

***Whether health limits work***
*wave 4 respondent whether health limits work
gen r`wavenum'hlthlm =.
missing_w`wavenum' helwk, result(r`wavenum'hlthlm)
replace r`wavenum'hlthlm = .p if askpx == 1
replace r`wavenum'hlthlm = 0 if helwk == 2
replace r`wavenum'hlthlm = 1 if helwk == 1
label variable r`wavenum'hlthlm "r`wavenum'hlthlm:w`wavenum' r hlth problems limit work"

*wave 4 spouse whether health limits work
gen s`wavenum'hlthlm =.
spouse r`wavenum'hlthlm, result(s`wavenum'hlthlm) wave(`wavenum')
label variable s`wavenum'hlthlm "s`wavenum'hlthlm:w`wavenum' s hlth problems limit work"

*value labels
label values r`wavenum'hlthlm limitwork
label values s`wavenum'hlthlm limitwork

*check 

***Some difficulty walking cross room***
*wave 4 respondent difficulty walking across room
gen r`wavenum'walkra =.
missing_w`wavenum' headlwa, result(r`wavenum'walkra)
replace r`wavenum'walkra = 0 if headlwa==0
replace r`wavenum'walkra = 1 if headlwa==1
label variable r`wavenum'walkra "r`wavenum'walkra:w`wavenum' R Some Diff-Walk across room"

*wave 4 spouse difficulty walking across room
gen s`wavenum'walkra =.
spouse r`wavenum'walkra, result(s`wavenum'walkra) wave(`wavenum')
label variable s`wavenum'walkra "s`wavenum'walkra:w`wavenum' S Some Diff-Walk across room"

*value labels
label values r`wavenum'walkra diff
label values s`wavenum'walkra diff

*check 

***Some difficulty dressing***
*wave 4 respondent difficulty dressing
gen r`wavenum'dressa =.
missing_w`wavenum' headldr, result(r`wavenum'dressa)
replace r`wavenum'dressa = 0 if headldr==0
replace r`wavenum'dressa = 1 if headldr==1
label variable r`wavenum'dressa "r`wavenum'dressa:w`wavenum' R Some Diff-Dressing"

*wave 4 spouse difficulty dressing
gen s`wavenum'dressa =.
spouse r`wavenum'dressa, result(s`wavenum'dressa) wave(`wavenum')
label variable s`wavenum'dressa "s`wavenum'dressa:w`wavenum' S Some Diff-Dressing"

*value labels
label values r`wavenum'dressa diff
label values s`wavenum'dressa diff

*check 

***Some difficulty bathing, shower***
*wave 4 respondent difficulty bathing, shower
gen r`wavenum'batha =.
missing_w`wavenum' headlba, result(r`wavenum'batha)
replace r`wavenum'batha = 0 if headlba==0
replace r`wavenum'batha = 1 if headlba==1
label variable r`wavenum'batha "r`wavenum'batha:w`wavenum' R Some Diff-Bathing, shower"

*wave 4 spouse difficulty bathing, shower
gen s`wavenum'batha =.
spouse r`wavenum'batha, result(s`wavenum'batha) wave(`wavenum')
label variable s`wavenum'batha "s`wavenum'batha:w`wavenum' S Some Diff-Bathing, shower"

*value labels
label values r`wavenum'batha diff
label values s`wavenum'batha diff

*check 

***Some difficulty eating***
*wave 4 respondent difficulty eating
gen r`wavenum'eata =.
missing_w`wavenum' headlea, result(r`wavenum'eata)
replace r`wavenum'eata = 0 if headlea==0
replace r`wavenum'eata = 1 if headlea==1
label variable r`wavenum'eata "r`wavenum'eata:w`wavenum' R Some Diff-Eating"

*wave 4 spouse difficulty eating
gen s`wavenum'eata =.
spouse r`wavenum'eata, result(s`wavenum'eata) wave(`wavenum')
label variable s`wavenum'eata "s`wavenum'eata:w`wavenum' S Some Diff-Eating"

*value labels
label values r`wavenum'eata diff
label values s`wavenum'eata diff

*check 

***Some difficulty getting in/out of bed***
*wave 4 respondent difficulty getting in/out of bed
gen r`wavenum'beda =.
missing_w`wavenum' headlbe, result(r`wavenum'beda)
replace r`wavenum'beda = 0 if headlbe==0
replace r`wavenum'beda = 1 if headlbe==1
label variable r`wavenum'beda "r`wavenum'beda:w`wavenum' R Some Diff-Get in/out bed"

*wave 4 spouse difficulty getting in/out of bed
gen s`wavenum'beda =.
spouse r`wavenum'beda, result(s`wavenum'beda) wave(`wavenum')
label variable s`wavenum'beda "s`wavenum'beda:w`wavenum' S Some Diff-Get in/out bed"

*value labels
label values r`wavenum'beda diff
label values s`wavenum'beda diff

*check 

***Some difficulty using the toilet***
*wave 4 respondent difficulty using the toilet
gen r`wavenum'toilta =.
missing_w`wavenum' headlwc, result(r`wavenum'toilta)
replace r`wavenum'toilta = 0 if headlwc==0
replace r`wavenum'toilta = 1 if headlwc==1
label variable r`wavenum'toilta "r`wavenum'toilta:w`wavenum' R Some Diff-Using the toilet"

*wave 4 spouse difficulty using the toilet
gen s`wavenum'toilta =.
spouse r`wavenum'toilta, result(s`wavenum'toilta) wave(`wavenum')
label variable s`wavenum'toilta "s`wavenum'toilta:w`wavenum' S Some Diff-Using the toilet"

*value labels
label values r`wavenum'toilta diff
label values s`wavenum'toilta diff

*check 

***Some difficulty using using a map***
*wave 4 respondent difficulty using a map
gen r`wavenum'mapa =.
missing_w`wavenum' headlma, result(r`wavenum'mapa)
replace r`wavenum'mapa = 0 if headlma==0
replace r`wavenum'mapa = 1 if headlma==1
label variable r`wavenum'mapa "r`wavenum'mapa:w`wavenum' R Some Diff-Use a map"

*wave 4 spouse difficulty using a map
gen s`wavenum'mapa =.
spouse r`wavenum'mapa, result(s`wavenum'mapa) wave(`wavenum')
label variable s`wavenum'mapa "s`wavenum'mapa:w`wavenum' S Some Diff-Use a map"

*value labels
label values r`wavenum'mapa diff
label values s`wavenum'mapa diff

*check 

***Some difficulty using a telephone***
*wave 4 respondent difficulty using a telephone
gen r`wavenum'phonea =.
missing_w`wavenum' headlte, result(r`wavenum'phonea)
replace r`wavenum'phonea = 0 if headlte==0
replace r`wavenum'phonea = 1 if headlte==1
label variable r`wavenum'phonea "r`wavenum'phonea:w`wavenum' R Some Diff-Use a telephone"

*wave 4 spouse difficulty using a telephone
gen s`wavenum'phonea =.
spouse r`wavenum'phonea, result(s`wavenum'phonea) wave(`wavenum')
label variable s`wavenum'phonea "s`wavenum'phonea:w`wavenum' S Some Diff-Use a telephone"

*value labels
label values r`wavenum'phonea diff
label values s`wavenum'phonea diff

*check 

***Some difficulty manging money***
*wave 4 respondent difficulty manging money
gen r`wavenum'moneya =.
missing_w`wavenum' headlmo, result(r`wavenum'moneya)
replace r`wavenum'moneya = 0 if headlmo==0
replace r`wavenum'moneya = 1 if headlmo==1
label variable r`wavenum'moneya "r`wavenum'moneya:w`wavenum' R Some Diff-Managing money"

*wave 4 spouse difficulty manging money
gen s`wavenum'moneya =.
spouse r`wavenum'moneya, result(s`wavenum'moneya) wave(`wavenum')
label variable s`wavenum'moneya "s`wavenum'moneya:w`wavenum' S Some Diff-Managing money"

*value labels
label values r`wavenum'moneya diff
label values s`wavenum'moneya diff

*check 

***Some difficulty taking medications***
*wave 4 respondent difficulty taking medications
gen r`wavenum'medsa =.
missing_w`wavenum' headlme, result(r`wavenum'medsa)
replace r`wavenum'medsa = 0 if headlme==0
replace r`wavenum'medsa = 1 if headlme==1
label variable r`wavenum'medsa "r`wavenum'medsa:w`wavenum' R Some Diff-Take medications"

*wave 4 spouse difficulty taking medications
gen s`wavenum'medsa =.
spouse r`wavenum'medsa, result(s`wavenum'medsa) wave(`wavenum')
label variable s`wavenum'medsa "s`wavenum'medsa:w`wavenum' S Some Diff-Take medications"

*value labels
label values r`wavenum'medsa diff
label values s`wavenum'medsa diff

*check 

***Some difficulty shopping for groceries***
*wave 4 respondent difficulty shopping for groceries
gen r`wavenum'shopa =.
missing_w`wavenum' headlsh, result(r`wavenum'shopa)
replace r`wavenum'shopa = 0 if headlsh==0
replace r`wavenum'shopa = 1 if headlsh==1
label variable r`wavenum'shopa "r`wavenum'shopa:w`wavenum' R Some Diff-Shop for grocery"

*wave 4 spouse difficulty shopping for groceries
gen s`wavenum'shopa =.
spouse r`wavenum'shopa, result(s`wavenum'shopa) wave(`wavenum')
label variable s`wavenum'shopa "s`wavenum'shopa:w`wavenum' S Some Diff-Shop for grocery"

*value labels
label values r`wavenum'shopa diff
label values s`wavenum'shopa diff

*check 

***Some difficulty preparing a hot meal***
*wave 4 respondent difficulty preparing a hot meal
gen r`wavenum'mealsa =.
missing_w`wavenum' headlpr, result(r`wavenum'mealsa)
replace r`wavenum'mealsa = 0 if headlpr==0
replace r`wavenum'mealsa = 1 if headlpr==1
label variable r`wavenum'mealsa "r`wavenum'mealsa:w`wavenum' R Some Diff-Prepare hot meal"

*wave 4 spouse difficulty preparing a hot meal
gen s`wavenum'mealsa =.
spouse r`wavenum'mealsa, result(s`wavenum'mealsa) wave(`wavenum')
label variable s`wavenum'mealsa "s`wavenum'mealsa:w`wavenum' S Some Diff-Prepare hot meal"

*value labels
label values r`wavenum'mealsa diff
label values s`wavenum'mealsa diff

*check 

***Some difficulty Doing work around the house or garden***
*wave 4 respondent difficulty Doing work around the house or garden
gen r`wavenum'housewka =.
missing_w`wavenum' headlho, result(r`wavenum'housewka)
replace r`wavenum'housewka = 0 if headlho==0
replace r`wavenum'housewka = 1 if headlho==1
label variable r`wavenum'housewka "r`wavenum'housewka:w`wavenum' R Some Diff-Doing work around the house or garden"

*wave 4 spouse difficulty Doing work around the house or garden
gen s`wavenum'housewka =.
spouse r`wavenum'housewka, result(s`wavenum'housewka) wave(`wavenum')
label variable s`wavenum'housewka "s`wavenum'housewka:w`wavenum' S Some Diff-Doing work around the house or garden"

*value labels
label values r`wavenum'housewka diff
label values s`wavenum'housewka diff

*check 

***Difficulty Walking 100m***
*wave 4 respondent difficulty walking 100m
gen r`wavenum'walk100a =.
missing_w`wavenum' hemobwa, result(r`wavenum'walk100a)
replace r`wavenum'walk100a = 0 if hemobwa==0
replace r`wavenum'walk100a = 1 if hemobwa==1
label variable r`wavenum'walk100a "r`wavenum'walk100a:w`wavenum' R Some Diff-Walk 100y"

*wave 4 spouse difficulty walking 100m
gen s`wavenum'walk100a =.
spouse r`wavenum'walk100a, result(s`wavenum'walk100a) wave(`wavenum')
label variable s`wavenum'walk100a "s`wavenum'walk100a:w`wavenum' S Some Diff-Walk 100y"

*value labels
label values r`wavenum'walk100a diff
label values s`wavenum'walk100a diff

*check 

***Difficulty sitting for 2 hours***
*wave 4 respondent difficulty sitting for 2 hours
gen r`wavenum'sita =.
missing_w`wavenum' hemobsi, result(r`wavenum'sita)
replace r`wavenum'sita = 0 if hemobsi==0
replace r`wavenum'sita = 1 if hemobsi==1
label variable r`wavenum'sita "r`wavenum'sita:w`wavenum' R Some Diff-Sit for 2 hours"

*wave 4 spouse difficulty sitting for 2 hours
gen s`wavenum'sita =.
spouse r`wavenum'sita, result(s`wavenum'sita) wave(`wavenum')
label variable s`wavenum'sita "s`wavenum'sita:w`wavenum' S Some Diff-Sit for 2 hours"

*value labels
label values r`wavenum'sita diff
label values s`wavenum'sita diff

*check 

***Difficulty getting up from a chair***
*wave 4 respondent difficulty getting up from a chair
gen r`wavenum'chaira =.
missing_w`wavenum' hemobch, result(r`wavenum'chaira)
replace r`wavenum'chaira = 0 if hemobch==0
replace r`wavenum'chaira = 1 if hemobch==1
label variable r`wavenum'chaira "r`wavenum'chaira:w`wavenum' R Some Diff-Get up fr chair"

*wave 4 spouse difficulty getting up from a chair
gen s`wavenum'chaira =.
spouse r`wavenum'chaira, result(s`wavenum'chaira) wave(`wavenum')
label variable s`wavenum'chaira "s`wavenum'chaira:w`wavenum' S Some Diff-Get up fr chair"

*value labels
label values r`wavenum'chaira diff
label values s`wavenum'chaira diff

*check 

***Difficulty climbing several flights of stairs***
*wave 4 respondent difficulty climbing several flights of stairs
gen r`wavenum'climsa =.
missing_w`wavenum' hemobcs, result(r`wavenum'climsa)
replace r`wavenum'climsa = 0 if hemobcs==0
replace r`wavenum'climsa = 1 if hemobcs==1
label variable r`wavenum'climsa "r`wavenum'climsa:w`wavenum' R Some Diff-Clmb sev flt str"

*wave 4 spouse difficulty climbing several flights of stairs
gen s`wavenum'climsa =.
spouse r`wavenum'climsa, result(s`wavenum'climsa) wave(`wavenum')
label variable s`wavenum'climsa "s`wavenum'climsa:w`wavenum' S Some Diff-Clmb sev flt str"

*value labels
label values r`wavenum'climsa diff
label values s`wavenum'climsa diff

*check 

***Difficulty climbing one flight of stairs***
*wave 4 respondent difficulty climbing one flight of stairs
gen r`wavenum'clim1a =.
missing_w`wavenum' hemobcl, result(r`wavenum'clim1a)
replace r`wavenum'clim1a = 0 if hemobcl==0
replace r`wavenum'clim1a = 1 if hemobcl==1
label variable r`wavenum'clim1a "r`wavenum'clim1a:w`wavenum' R Some Diff-Clmb 1 flt str"

*wave 4 spouse difficulty climbing one flight of stairs
gen s`wavenum'clim1a =.
spouse r`wavenum'clim1a, result(s`wavenum'clim1a) wave(`wavenum')
label variable s`wavenum'clim1a "s`wavenum'clim1a:w`wavenum' S Some Diff-Clmb 1 flt str"

*value labels
label values r`wavenum'clim1a diff
label values s`wavenum'clim1a diff

*check 

***Difficulty stooping/keeling/crouching***
*wave 4 respondent difficulty stooping/keeling/crouching
gen r`wavenum'stoopa =.
missing_w`wavenum' hemobst, result(r`wavenum'stoopa)
replace r`wavenum'stoopa = 0 if hemobst==0
replace r`wavenum'stoopa = 1 if hemobst==1
label variable r`wavenum'stoopa "r`wavenum'stoopa:w`wavenum' R Some Diff-Stoop/Kneel/Crch"

*wave 4 spouse difficulty stooping/keeling/crouching
gen s`wavenum'stoopa =.
spouse r`wavenum'stoopa, result(s`wavenum'stoopa) wave(`wavenum')
label variable s`wavenum'stoopa "s`wavenum'stoopa:w`wavenum' S Some Diff-Stoop/Kneel/Crch"

*value labels
label values r`wavenum'stoopa diff
label values s`wavenum'stoopa diff

*check 

***Difficulty lifting/carrying 10lbs***
*wave 4 respondent difficulty lifting/carrying 10lbs
gen r`wavenum'lifta =.
missing_w`wavenum' hemobli, result(r`wavenum'lifta)
replace r`wavenum'lifta = 0 if hemobli==0
replace r`wavenum'lifta = 1 if hemobli==1
label variable r`wavenum'lifta "r`wavenum'lifta:w`wavenum' R Some Diff-Lift/carry 10lbs"

*wave 4 spouse difficulty lifting/carrying 10lbs
gen s`wavenum'lifta =.
spouse r`wavenum'lifta, result(s`wavenum'lifta) wave(`wavenum')
label variable s`wavenum'lifta "s`wavenum'lifta:w`wavenum' S Some Diff-Lift/carry 10lbs"

*value labels
label values r`wavenum'lifta diff
label values s`wavenum'lifta diff

*check 

***Difficulty picking up a dime***
*wave 4 respondent difficulty picking up a dime
gen r`wavenum'dimea =.
missing_w`wavenum' hemobpi, result(r`wavenum'dimea)
replace r`wavenum'dimea = 0 if hemobpi==0
replace r`wavenum'dimea = 1 if hemobpi==1
label variable r`wavenum'dimea "r`wavenum'dimea:w`wavenum' R Some Diff-Pick up a 5p coin"

*wave 4 spouse difficulty picking up a dime
gen s`wavenum'dimea =.
spouse r`wavenum'dimea, result(s`wavenum'dimea) wave(`wavenum')
label variable s`wavenum'dimea "s`wavenum'dimea:w`wavenum' S Some Diff-Pick up a 5p coin"

*value labels
label values r`wavenum'dimea diff
label values s`wavenum'dimea diff

*check 

***Difficulty reaching/extending arms up***
*wave 4 respondent difficulty reaching/extending arms up
gen r`wavenum'armsa =.
missing_w`wavenum' hemobre, result(r`wavenum'armsa)
replace r`wavenum'armsa = 0 if hemobre==0
replace r`wavenum'armsa = 1 if hemobre==1
label variable r`wavenum'armsa "r`wavenum'armsa:w`wavenum' R Some Diff-Rch/xtnd arms up"

*wave 4 spouse difficulty reaching/extending arms up
gen s`wavenum'armsa =.
spouse r`wavenum'armsa, result(s`wavenum'armsa) wave(`wavenum')
label variable s`wavenum'armsa "s`wavenum'armsa:w`wavenum' S Some Diff-Rch/xtnd arms up"

*value labels
label values r`wavenum'armsa diff
label values s`wavenum'armsa diff

*check 


***Difficulty pushing/pulling a large object***
*wave 4 respondent difficulty pushing/pulling a large object
gen r`wavenum'pusha =.
missing_w`wavenum' hemobpu, result(r`wavenum'pusha)
replace r`wavenum'pusha = 0 if hemobpu==0
replace r`wavenum'pusha = 1 if hemobpu==1
label variable r`wavenum'pusha "r`wavenum'pusha:w`wavenum' R Some Diff-Push/pull lg obj"

*wave 4 spouse difficulty pushing/pulling a large object
gen s`wavenum'pusha =.
spouse r`wavenum'pusha, result(s`wavenum'pusha) wave(`wavenum')
label variable s`wavenum'pusha "s`wavenum'pusha:w`wavenum' S Some Diff-Push/pull lg obj"

*value labels
label values r`wavenum'pusha diff
label values s`wavenum'pusha diff

*check 

***ADL Summary 0-5***
*wave 4 respondent ADL Summary 0-5
H_ELSA_summary_v adla, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata r`wavenum'beda r`wavenum'walkra) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adla "r`wavenum'adla:w`wavenum' R Some Diff-ADLs /0-5"

*wave 4 respondent Missing in ADL Summary
label variable r`wavenum'adlam "r`wavenum'adlam:w`wavenum' r Missings in Some Diff-ADLs /0-5"

*wave 4 spouse ADL Summary 0-5
gen s`wavenum'adla =.
spouse r`wavenum'adla, result(s`wavenum'adla) wave(`wavenum')
label variable s`wavenum'adla "s`wavenum'adla:w`wavenum' S Some Diff-ADLs /0-5"

*wave 4 spouse Missings in ADL Summary 0-5
gen s`wavenum'adlam =.
spouse r`wavenum'adlam, result(s`wavenum'adlam) wave(`wavenum')
label variable s`wavenum'adlam "s`wavenum'adlam:w`wavenum' S Missings in Some Diff-ADLs /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***ADL Wallace Summary 0-3***
*wave 4 respondent ADL Wallace Summary 0-3
H_ELSA_summary_v adlwa, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adlwa "r`wavenum'adlwa:w`wavenum' R Some Diff-ADLs:Wallace /0-3"

*wave 4 respondent Missings in ADL Wallace Summary 0-3
label variable r`wavenum'adlwam "r`wavenum'adlwam:w`wavenum' R Missings in Some Diff-ADLs:Wallace /0-3"

*wave 4 spouse ADL Wallace Summary 0-3
gen s`wavenum'adlwa =.
spouse r`wavenum'adlwa, result(s`wavenum'adlwa) wave(`wavenum')
label variable s`wavenum'adlwa "s`wavenum'adlwa:w`wavenum' S Some Diff-ADLs:Wallace /0-3"

*wave 4 spouse Missings in ADL Wallace Summary 0-3
gen s`wavenum'adlwam =.
spouse r`wavenum'adlwam, result(s`wavenum'adlwam) wave(`wavenum')
label variable s`wavenum'adlwam "s`wavenum'adlwam:w`wavenum' S Missings in Some Diff-ADLs:Wallace /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-3***
*wave 4 respondent IADLs Summary 0-3
H_ELSA_summary_v iadla, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadla "r`wavenum'iadla:w`wavenum' R Some Diff-IADLs: /0-3"

*wave 4 respondent Missings in IADLs Summary 0-3
label variable r`wavenum'iadlam "r`wavenum'iadlam:w`wavenum' R Missings in Some Diff-IADLs: /0-3"

*wave 4 spouse IADLs Summary 0-3
gen s`wavenum'iadla =.
spouse r`wavenum'iadla, result(s`wavenum'iadla) wave(`wavenum')
label variable s`wavenum'iadla "s`wavenum'iadla:w`wavenum' S Some Diff-IADLs: /0-3"

*wave 4 spouse Missings in IADLs Summary 0-3
gen s`wavenum'iadlam =.
spouse r`wavenum'iadlam, result(s`wavenum'iadlam) wave(`wavenum')
label variable s`wavenum'iadlam "s`wavenum'iadlam:w`wavenum' S Missings in Some Diff-IADLs: /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-5***
*wave 4 respondent IADLs Summary 0-5
H_ELSA_summary_v iadlza, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa r`wavenum'shopa r`wavenum'mealsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadlza "r`wavenum'iadlza:w`wavenum' R Some Diff-IADLs: /0-5"

*wave 4 respondent Missings in IADLs Summary 0-5
label variable r`wavenum'iadlzam "r`wavenum'iadlzam:w`wavenum' R Missings in Some Diff-IADLs: /0-5"

*wave 4 spouse IADLs Summary 0-5
gen s`wavenum'iadlza =.
spouse r`wavenum'iadlza, result(s`wavenum'iadlza) wave(`wavenum')
label variable s`wavenum'iadlza "s`wavenum'iadlza:w`wavenum' S Some Diff-IADLs: /0-5"

*wave 4 spouse Missings in IADLs Summary 0-5
gen s`wavenum'iadlzam =.
spouse r`wavenum'iadlzam, result(s`wavenum'iadlzam) wave(`wavenum')
label variable s`wavenum'iadlzam "s`wavenum'iadlzam:w`wavenum' S Missings in Some Diff-IADLs: /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Mobility Summary***
*wave 4 respondent Mobility Summary
H_ELSA_summary_v mobilb, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'climsa r`wavenum'clim1a) 
local varlist_m = r(varlist_m)
label variable r`wavenum'mobilb "r`wavenum'mobilb:w`wavenum' R Some Diff-Mobility /0-4"

*wave 4 respondent Missings in Mobility Summary
label variable r`wavenum'mobilbm "r`wavenum'mobilbm:w`wavenum' R Missings in Some Diff-Mobility /0-4"

*wave 4 spouse Mobility Summary
gen s`wavenum'mobilb =.
spouse r`wavenum'mobilb, result(s`wavenum'mobilb) wave(`wavenum')
label variable s`wavenum'mobilb "s`wavenum'mobilb:w`wavenum' S Some Diff-Mobility /0-4"

*wave 4 spouse Missings in Mobility Summary
gen s`wavenum'mobilbm =.
spouse r`wavenum'mobilbm, result(s`wavenum'mobilbm) wave(`wavenum')
label variable s`wavenum'mobilbm "s`wavenum'mobilbm:w`wavenum' S Missings in Some Diff-Mobility /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Large Muscle Summary***
*wave 4 respondent Large Muscle Summary
H_ELSA_summary_v lgmusa, wave(`wavenum') add(r`wavenum'sita r`wavenum'chaira r`wavenum'stoopa r`wavenum'pusha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'lgmusa "r`wavenum'lgmusa:w`wavenum' R Some Diff-Large muscle /0-4"

*wave 4 respondent Missings in Large Muscle Summary
label variable r`wavenum'lgmusam "r`wavenum'lgmusam:w`wavenum' R Missings in Some Diff-Large muscle /0-4"

*wave 4 spouse Large Muscle Summary
gen s`wavenum'lgmusa =.
spouse r`wavenum'lgmusa, result(s`wavenum'lgmusa) wave(`wavenum')
label variable s`wavenum'lgmusa "s`wavenum'lgmusa:w`wavenum' S Some Diff-Large muscle /0-4"

*wave 4 spouse Missings in Large Muscle Summary
gen s`wavenum'lgmusam =.
spouse r`wavenum'lgmusam, result(s`wavenum'lgmusam) wave(`wavenum')
label variable s`wavenum'lgmusam "s`wavenum'lgmusam:w`wavenum' S Missings in Some Diff-Large muscle /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Gross Motor Summary***
*wave 4 respondent Gross Motor Summary
H_ELSA_summary_v grossa, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'clim1a r`wavenum'beda r`wavenum'batha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'grossa "r`wavenum'grossa:w`wavenum' R Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 4 respondent Missings in Gross Motor Summary
label variable r`wavenum'grossam "r`wavenum'grossam:w`wavenum' R Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 4 spouse Gross Motor Summary
gen s`wavenum'grossa =.
spouse r`wavenum'grossa, result(s`wavenum'grossa) wave(`wavenum')
label variable s`wavenum'grossa "s`wavenum'grossa:w`wavenum' S Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 4 spouse Missings in Gross Motor Summary
gen s`wavenum'grossam =.
spouse r`wavenum'grossam, result(s`wavenum'grossam) wave(`wavenum')
label variable s`wavenum'grossam "s`wavenum'grossam:w`wavenum' S Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Fine Motor Summary***
*wave 4 respondent Fine Motor Summary
H_ELSA_summary_v finea, wave(`wavenum') add(r`wavenum'dimea r`wavenum'eata r`wavenum'dressa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'finea "r`wavenum'finea:w`wavenum' R Some Diff-Dime/eat/dress /0-3"

*wave 4 respondent Missings in Fine Motor Summary
label variable r`wavenum'fineam "r`wavenum'fineam:w`wavenum' R Missings in Some Diff-Dime/eat/dress /0-3"

*wave 4 spouse Fine Motor Summary
gen s`wavenum'finea =.
spouse r`wavenum'finea, result(s`wavenum'finea) wave(`wavenum')
label variable s`wavenum'finea "s`wavenum'finea:w`wavenum' S Some Diff-Dime/eat/dress /0-3"

*wave 4 spouse Missings in Fine Motor Summary
gen s`wavenum'fineam =.
spouse r`wavenum'fineam, result(s`wavenum'fineam) wave(`wavenum')
label variable s`wavenum'fineam "s`wavenum'fineam:w`wavenum' S Missings in Some Diff-Dime/eat/dress /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***Felt depressed (0,1)***
*wave 4 respondent Felt depressed (0,1)
gen r`wavenum'depres =.
missing_w`wavenum' psceda, result(r`wavenum'depres)
replace r`wavenum'depres =.p if askpx == 1
replace r`wavenum'depres = 0 if psceda == 2
replace r`wavenum'depres = 1 if psceda == 1
label variable r`wavenum'depres "r`wavenum'depres:w`wavenum' r CESD: Felt depressed (0,1)"

*wave 4 spouse Felt depressed (0,1)
gen s`wavenum'depres =.
spouse r`wavenum'depres, result(s`wavenum'depres) wave(`wavenum')
label variable s`wavenum'depres "s`wavenum'depres:w`wavenum' s CESD: Felt depressed (0,1)"

*value labels
label values r`wavenum'depres cesd
label values s`wavenum'depres cesd

*check

***Everything is an effort***
*wave 4 respondent Everything is an effort
gen r`wavenum'effort =.
missing_w`wavenum' pscedb, result(r`wavenum'effort)
replace r`wavenum'effort =.p if askpx == 1
replace r`wavenum'effort = 0 if pscedb == 2
replace r`wavenum'effort = 1 if pscedb == 1
label variable r`wavenum'effort "r`wavenum'effort:w`wavenum' r CESD: Everthing an effort (0,1)"

*wave 4 spouse Everything is an effort
gen s`wavenum'effort =.
spouse r`wavenum'effort, result(s`wavenum'effort) wave(`wavenum')
label variable s`wavenum'effort "s`wavenum'effort:w`wavenum' s CESD: Everthing an effort (0,1)"

*value labels
label values r`wavenum'effort cesd
label values s`wavenum'effort cesd

*check

***Sleep was restless (0,1)***
*wave 4 respondent Sleep was restless (0,1)
gen r`wavenum'sleepr =.
missing_w`wavenum' pscedc, result(r`wavenum'sleepr)
replace r`wavenum'sleepr =.p if askpx == 1
replace r`wavenum'sleepr = 0 if pscedc == 2
replace r`wavenum'sleepr = 1 if pscedc == 1
label variable r`wavenum'sleepr "r`wavenum'sleepr:w`wavenum' r CESD: Sleep was restless (0,1)"

*wave 4 spouse Sleep was restless (0,1)
gen s`wavenum'sleepr =.
spouse r`wavenum'sleepr, result(s`wavenum'sleepr) wave(`wavenum')
label variable s`wavenum'sleepr "s`wavenum'sleepr:w`wavenum' s CESD: Sleep was restless (0,1)"

*value labels
label values r`wavenum'sleepr cesd
label values s`wavenum'sleepr cesd

*check

***Was happy (0,1)***
*wave 4 respondent Was happy (0,1)
gen r`wavenum'whappy =.
missing_w`wavenum' pscedd, result(r`wavenum'whappy)
replace r`wavenum'whappy =.p if askpx == 1
replace r`wavenum'whappy = 0 if pscedd == 2
replace r`wavenum'whappy = 1 if pscedd == 1
label variable r`wavenum'whappy "r`wavenum'whappy:w`wavenum' r CESD: Was happy (0,1)"

*wave 4 spouse Was happy (0,1)
gen s`wavenum'whappy =.
spouse r`wavenum'whappy, result(s`wavenum'whappy) wave(`wavenum')
label variable s`wavenum'whappy "s`wavenum'whappy:w`wavenum' s CESD: Was happy (0,1)"

*value labels
label values r`wavenum'whappy cesd
label values s`wavenum'whappy cesd

*check

***Felt lonely (0,1)***
*wave 4 respondent Felt lonely (0,1)
gen r`wavenum'flone =.
missing_w`wavenum' pscede, result(r`wavenum'flone)
replace r`wavenum'flone =.p if askpx == 1
replace r`wavenum'flone = 0 if pscede == 2
replace r`wavenum'flone = 1 if pscede == 1
label variable r`wavenum'flone "r`wavenum'flone:w`wavenum' r CESD: Felt lonely (0,1)"

*wave 4 spouse Felt lonely (0,1)
gen s`wavenum'flone =.
spouse r`wavenum'flone, result(s`wavenum'flone) wave(`wavenum')
label variable s`wavenum'flone "s`wavenum'flone:w`wavenum' s CESD: Felt lonely (0,1)"

*value labels
label values r`wavenum'flone cesd
label values s`wavenum'flone cesd

*check

***Felt sad (0,1)***
*wave 4 respondent Felt sad (0,1)
gen r`wavenum'fsad =.
missing_w`wavenum' pscedg, result(r`wavenum'fsad)
replace r`wavenum'fsad =.p if askpx == 1
replace r`wavenum'fsad = 0 if pscedg == 2
replace r`wavenum'fsad = 1 if pscedg == 1
label variable r`wavenum'fsad "r`wavenum'fsad:w`wavenum' r CESD: Felt sad (0,1)"

*wave 4 spouse Felt sad (0,1)
gen s`wavenum'fsad =.
spouse r`wavenum'fsad, result(s`wavenum'fsad) wave(`wavenum')
label variable s`wavenum'fsad "s`wavenum'fsad:w`wavenum' s CESD: Felt sad (0,1)"

*value labels
label values r`wavenum'fsad cesd
label values s`wavenum'fsad cesd

*check

***Could not get going (0,1)***
*wave 4 respondent Could not get going (0,1)
gen r`wavenum'going =.
missing_w`wavenum' pscedh, result(r`wavenum'going)
replace r`wavenum'going =.p if askpx == 1
replace r`wavenum'going = 0 if pscedh == 2
replace r`wavenum'going = 1 if pscedh == 1
label variable r`wavenum'going "r`wavenum'going:w`wavenum' r CESD: Could not get going (0,1)"

*wave 4 spouse Could not get going (0,1)
gen s`wavenum'going =.
spouse r`wavenum'going, result(s`wavenum'going) wave(`wavenum')
label variable s`wavenum'going "s`wavenum'going:w`wavenum' s CESD: Could not get going (0,1)"

*value labels
label values r`wavenum'going cesd
label values s`wavenum'going cesd

*check

***Enjoyed life (0,1)***
*wave 4 respondent Enjoyed life (0,1)
gen r`wavenum'enlife =.
missing_w`wavenum' pscedf, result(r`wavenum'enlife)
replace r`wavenum'enlife =.p if askpx == 1
replace r`wavenum'enlife = 0 if pscedf == 2
replace r`wavenum'enlife = 1 if pscedf == 1
label variable r`wavenum'enlife "r`wavenum'enlife:w`wavenum' r CESD: Enjoyed life (0,1)"

*wave 4 spouse Enjoyed life (0,1)
gen s`wavenum'enlife =.
spouse r`wavenum'enlife, result(s`wavenum'enlife) wave(`wavenum')
label variable s`wavenum'enlife "s`wavenum'enlife:w`wavenum' s CESD: Enjoyed life (0,1)"

*value labels
label values r`wavenum'enlife cesd
label values s`wavenum'enlife cesd

*check

***CESD Score***
*wave 4 respondent CESD score number of missings
egen r`wavenum'cesdm = rowmiss(r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife) if inw`wavenum' == 1
label variable r`wavenum'cesdm "r`wavenum'cesdm:w`wavenum' r missings in CESD score"

*wave 4 spouse CESD score number of missings
gen s`wavenum'cesdm =.
spouse r`wavenum'cesdm, result(s`wavenum'cesdm) wave(`wavenum')
label variable s`wavenum'cesdm "s`wavenum'cesdm:w`wavenum' s missings in CESD score"

local cesd
foreach v of varlist r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going  {
	recode `v' (miss = 0), generate(`v'_m)
	local cesd `cesd' `v'_m
}

foreach u of varlist r`wavenum'whappy r`wavenum'enlife {
	recode `u' (miss = 1), generate(`u'_m)
	local cesd `cesd' `u'_m
}

*wave 4 respondent CESD score
gen r`wavenum'cesd=.
missing_H r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife, result(r`wavenum'cesd)
replace r`wavenum'cesd =.p if askpx == 1		 
replace r`wavenum'cesd = r`wavenum'depres_m + r`wavenum'effort_m + r`wavenum'sleepr_m + r`wavenum'flone_m + r`wavenum'fsad_m + r`wavenum'going_m + (1-r`wavenum'whappy_m) + (1-r`wavenum'enlife_m) if inrange(r`wavenum'cesdm,0,7)
label variable r`wavenum'cesd "r`wavenum'cesd:w`wavenum' r CESD Score"

*wave 4 spouse CESD score
gen s`wavenum'cesd =.
spouse r`wavenum'cesd, result(s`wavenum'cesd) wave(`wavenum')
label variable s`wavenum'cesd "s`wavenum'cesd:w`wavenum' s CESD Score"

*check 

*drop intermediate variables
drop `cesd'

***Ever had high blood pressure***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hibpe if !mi(r`w'hibpe) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had high blood pressure
gen r`wavenum'hibpe =.
missing_w`wavenum' hedacbp hedimbp, result(r`wavenum'hibpe)
replace r`wavenum'hibpe = 0 if preload == 0 & hedacbp != 2
replace r`wavenum'hibpe = 0 if hedimbp == 0
replace r`wavenum'hibpe = 0 if preload == 1 & hedacbp == 2
replace r`wavenum'hibpe = 1 if hedimbp == 1
replace r`wavenum'hibpe = 1 if preload == 1 & hedacbp != 2
label variable r`wavenum'hibpe "r`wavenum'hibpe:w`wavenum' r ever had high blood pressure"

*wave 4 respondent high blood pressure dispute flag
gen r`wavenum'hibpf =.
replace r`wavenum'hibpf = 0 if inlist(preload,0,1) | inlist(hedimbp,-9,-8,0,1)
replace r`wavenum'hibpf = 3 if preload == 1 & hedacbp == 2
label variable r`wavenum'hibpf "r`wavenum'hibpf:w`wavenum' r flag dispute chg high blood pressure"

*previous waves respondent high blood pressure dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpf = 6 if preload == 1 & hedacbp == 2 & r`w'hibpf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpe = 0 if preload == 1 & hedacbp == 2 & r`w'hibpe == 1
}

*value labels
label values r`wavenum'hibpe health_problems
label values r`wavenum'hibpf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had diabetes***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'diabe if !mi(r`w'diabe) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had diabetes
gen r`wavenum'diabe =.
missing_w`wavenum' hedacdi hedimdi, result(r`wavenum'diabe)
replace r`wavenum'diabe = 0 if preload == 0 & hedacdi != 2
replace r`wavenum'diabe = 0 if hedimdi == 0
replace r`wavenum'diabe = 0 if preload == 1 & hedacdi == 2
replace r`wavenum'diabe = 1 if hedimdi == 1
replace r`wavenum'diabe = 1 if preload == 1 & hedacdi != 2
label variable r`wavenum'diabe "r`wavenum'diabe:w`wavenum' r ever had diabetes"

*wave 4 respondent diabetes dispute flag
gen r`wavenum'diabf =.
replace r`wavenum'diabf = 0 if inlist(preload,0,1) | inlist(hedimdi,-9,-8,0,1)
replace r`wavenum'diabf = 3 if preload == 1 & hedacdi == 2
label variable r`wavenum'diabf "r`wavenum'diabf:w`wavenum' r flag dispute chg diabetes"

*previous waves respondent diabetes dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabf = 6 if preload == 1 & hedacdi == 2 & r`w'diabf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabe = 0 if preload == 1 & hedacdi == 2 & r`w'diabe == 1
}

*value labels
label values r`wavenum'diabe health_problems
label values r`wavenum'diabf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had cancer***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'cancre if !mi(r`w'cancre) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had cancer
gen r`wavenum'cancre =.
missing_w`wavenum' hedbdca hedibca, result(r`wavenum'cancre)
replace r`wavenum'cancre = 0 if preload == 0 & hedbdca != 2
replace r`wavenum'cancre = 0 if hedibca == 0
replace r`wavenum'cancre = 0 if preload == 1 & hedbdca == 2
replace r`wavenum'cancre = 1 if hedibca == 1
replace r`wavenum'cancre = 1 if preload == 1 & hedbdca != 2
label variable r`wavenum'cancre "r`wavenum'cancre:w`wavenum' r ever had cancer"

*wave 4 respondent cancer dispute flag
gen r`wavenum'cancrf =.
replace r`wavenum'cancrf = 0 if inlist(preload,0,1) | inlist(hedibca,-9,-8,0,1)
replace r`wavenum'cancrf = 3 if preload == 1 & hedbdca == 2
label variable r`wavenum'cancrf "r`wavenum'cancrf:w`wavenum' r flag dispute chg cancer"

*previous waves respondent cancer dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancrf = 6 if preload == 1 & hedbdca == 2 & r`w'cancrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancre = 0 if preload == 1 & hedbdca == 2 & r`w'cancre == 1
}

*value labels
label values r`wavenum'cancre health_problems
label values r`wavenum'cancrf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had lung disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'lunge if !mi(r`w'lunge) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had lung disease
gen r`wavenum'lunge =.
missing_w`wavenum' hedbdlu hediblu, result(r`wavenum'lunge)
replace r`wavenum'lunge = 0 if preload == 0 & hedbdlu != 2
replace r`wavenum'lunge = 0 if hediblu == 0
replace r`wavenum'lunge = 0 if preload == 1 & hedbdlu == 2
replace r`wavenum'lunge = 1 if hediblu == 1
replace r`wavenum'lunge = 1 if preload == 1 & hedbdlu != 2
label variable r`wavenum'lunge "r`wavenum'lunge:w`wavenum' r ever had lung disease"

*wave 4 respondent lung disease dispute flag
gen r`wavenum'lungf =.
replace r`wavenum'lungf = 0 if inlist(preload,0,1) | inlist(hediblu,-9,-8,0,1)
replace r`wavenum'lungf = 3 if preload == 1 & hedbdlu == 2
label variable r`wavenum'lungf "r`wavenum'lungf:w`wavenum' r flag dispute chg lung disease"

*previous waves respondent lung disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lungf = 6 if preload == 1 & hedbdlu == 2 & r`w'lungf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lunge = 0 if preload == 1 & hedbdlu == 2 & r`w'lunge == 1
}

*value labels
label values r`wavenum'lunge health_problems
label values r`wavenum'lungf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had heart problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hearte if !mi(r`w'hearte) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had heart problems
gen r`wavenum'hearte =.
missing_w`wavenum' hedacan hedacmi hedachf hedachm hedacar hedacot ///
   				 hediman hedimmi hedimhf hedimhm hedimar hedim85, result(r`wavenum'hearte)
replace r`wavenum'hearte = 0 if preload == 0 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedacot != 2
replace r`wavenum'hearte = 0 if ( hediman == 0 | hedimmi == 0 | hedimhf == 0 | hedimhm == 0 ///
																 | hedimar == 0 | hedim85 == 0 )
replace r`wavenum'hearte = 0 if preload == 1 & (hedacan == 2 | hedacmi == 2 | hedachf == 2 ///
																						  | hedachm == 2 | hedacar == 2 | hedacot == 2	)									 
replace r`wavenum'hearte = 1 if ( hediman == 1 | hedimmi == 1 | hedimhf == 1 | hedimhm == 1 ///
																 | hedimar == 1 | hedim85 == 1 )
replace r`wavenum'hearte = 1 if preload == 1 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedacot != 2
label variable r`wavenum'hearte "r`wavenum'hearte:w`wavenum' r ever had heart problems"

*wave 4 respondent heart problems dispute flag
gen r`wavenum'heartf =.
replace r`wavenum'heartf = 0 if inlist(preload,0,1) | inlist(hediman,-9,-8,0,1) | inlist(hedimmi,-9,-8,0,1) ///
																					 | inlist(hedimhf,-9,-8,0,1) | inlist(hedimhm,-9,-8,0,1) ///
																					 | inlist(hedimar,-9,-8,0,1) | inlist(hedim85,-9,-8,0,1)
replace r`wavenum'heartf = 3 if preload == 1 & (hedacan == 2 | hedacmi == 2 ///
																		          | hedachf == 2 | hedachm == 2 ///
																		          | hedacar == 2 | hedacot == 2) 
label variable r`wavenum'heartf "r`wavenum'heartf:w`wavenum' r flag dispute chg heart problems"


*previous waves respondent heart problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'heartf = 6 if preload == 1 & ( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'heartf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hearte = 0 if preload == 1 & ///
															( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'hearte == 1
}

*value labels
label values r`wavenum'hearte health_problems
label values r`wavenum'heartf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had stroke***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'stroke if !mi(r`w'stroke) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had stroke
gen r`wavenum'stroke =.
missing_w`wavenum' hedacst hedimst, result(r`wavenum'stroke)
replace r`wavenum'stroke = 0 if preload == 0 & hedacst != 2
replace r`wavenum'stroke = 0 if hedimst == 0
replace r`wavenum'stroke = 0 if preload == 1 & hedacst == 2
replace r`wavenum'stroke = 1 if hedimst == 1
replace r`wavenum'stroke = 1 if preload == 1 & hedacst != 2
label variable r`wavenum'stroke "r`wavenum'stroke:w`wavenum' r ever had stroke"

*wave 4 respondent stroke dispute flag
gen r`wavenum'strokf =.
replace r`wavenum'strokf = 0 if inlist(preload,0,1) | inlist(hedimst,-9,-8,0,1)
replace r`wavenum'strokf = 3 if preload == 1 & hedacst == 2
label variable r`wavenum'strokf "r`wavenum'strokf:w`wavenum' r flag dispute chg stroke"

*previous waves respondent stroke dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'strokf = 6 if preload == 1 & hedacst == 2 & r`w'strokf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'stroke = 0 if preload == 1 & hedacst == 2 & r`w'stroke == 1
}

*value labels
label values r`wavenum'stroke health_problems
label values r`wavenum'strokf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had psych problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'psyche if !mi(r`w'psyche) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had psych problems
gen r`wavenum'psyche =.
missing_w`wavenum' hedbdps hedibps, result(r`wavenum'psyche)
replace r`wavenum'psyche = 0 if preload == 0 & hedbdps != 2
replace r`wavenum'psyche = 0 if hedibps == 0
replace r`wavenum'psyche = 0 if preload == 1 & hedbdps == 2
replace r`wavenum'psyche = 1 if hedibps == 1
replace r`wavenum'psyche = 1 if preload == 1 & hedbdps != 2
label variable r`wavenum'psyche "r`wavenum'psyche:w`wavenum' r ever had psych problems"

*wave 4 respondent psych problems dispute flag
gen r`wavenum'psychf =.
replace r`wavenum'psychf = 0 if inlist(preload,0,1) | inlist(hedibps,-9,-8,0,1)
replace r`wavenum'psychf = 3 if preload == 1 & hedbdps == 2
label variable r`wavenum'psychf "r`wavenum'psychf:w`wavenum' r flag dispute chg psych problems"

*previous waves respondent psych problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psychf = 6 if preload == 1 & hedbdps == 2 & r`w'psychf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psyche = 0 if preload == 1 & hedbdps == 2 & r`w'psyche == 1
}

*value labels
label values r`wavenum'psyche health_problems
label values r`wavenum'psychf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had arthritis***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'arthre if !mi(r`w'arthre) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had arthritis
gen r`wavenum'arthre =.
missing_w`wavenum' hedbdar hedibar, result(r`wavenum'arthre)
replace r`wavenum'arthre = 0 if preload == 0 & hedbdar != 2
replace r`wavenum'arthre = 0 if hedibar == 0
replace r`wavenum'arthre = 0 if preload == 1 & hedbdar == 2
replace r`wavenum'arthre = 1 if hedibar == 1
replace r`wavenum'arthre = 1 if preload == 1 & hedbdar != 2
label variable r`wavenum'arthre "r`wavenum'arthre:w`wavenum' r ever had arthritis"

*wave 4 respondent arthritis dispute flag
gen r`wavenum'arthrf =.
replace r`wavenum'arthrf = 0 if inlist(preload,0,1) | inlist(hedibar,-9,-8,0,1)
replace r`wavenum'arthrf = 3 if preload == 1 & hedbdar == 2
label variable r`wavenum'arthrf "r`wavenum'arthrf:w`wavenum' r flag dispute chg arthritis"

*previous waves respondent arthritis dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthrf = 6 if preload == 1 & hedbdar == 2 & r`w'arthrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthre = 0 if preload == 1 & hedbdar == 2 & r`w'arthre == 1
}

*value labels
label values r`wavenum'arthre health_problems
label values r`wavenum'arthrf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}
drop preload

***Ever had memory-related problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'memrye if !mi(r`w'memrye) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had memory-related problems
gen r`wavenum'memrye =.
missing_w`wavenum' hedbdad hedbdde hedibad hedibde, result(r`wavenum'memrye)
replace r`wavenum'memrye = 0 if preload == 0 & hedbdad != 2 & hedbdde != 2
replace r`wavenum'memrye = 0 if ( hedibad == 0 | hedibde == 0 )
replace r`wavenum'memrye = 0 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
replace r`wavenum'memrye = 1 if ( hedibad == 1 | hedibde == 1 )
replace r`wavenum'memrye = 1 if preload == 1 & hedbdad != 2 & hedbdde != 2
label variable r`wavenum'memrye "r`wavenum'memrye:w`wavenum' r ever had memory problem"

*wave 4 respondent memory-related problems dispute flag
gen r`wavenum'memryf =.
replace r`wavenum'memryf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'memryf = 3 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
label variable r`wavenum'memryf "r`wavenum'memryf:w`wavenum' r flag chg previous memory prob"

*previous waves respondent memory-related problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memryf = 6 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memryf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memrye = 0 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memrye == 1
}

*value labels
label values r`wavenum'memrye health_problems
label values r`wavenum'memryf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had asthma***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'asthmae if !mi(r`w'asthmae) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had asthma
gen r`wavenum'asthmae =.
missing_w`wavenum' hedbdas hedibas, result(r`wavenum'asthmae)
replace r`wavenum'asthmae = 0 if preload == 0 & hedbdas != 2
replace r`wavenum'asthmae = 0 if hedibas == 0
replace r`wavenum'asthmae = 0 if preload == 1 & hedbdas == 2
replace r`wavenum'asthmae = 1 if hedibas == 1
replace r`wavenum'asthmae = 1 if preload == 1 & hedbdas != 2
label variable r`wavenum'asthmae "r`wavenum'asthmae:w`wavenum' r ever had asthma"

*wave 4 respondent asthma dispute flag
gen r`wavenum'asthmaf =.
replace r`wavenum'asthmaf = 0 if inlist(preload,0,1) | inlist(hedibas,-9,-8,0,1)
replace r`wavenum'asthmaf = 3 if preload == 1 & hedbdas == 2
label variable r`wavenum'asthmaf "r`wavenum'asthmaf:w`wavenum' r flag chg previous asthma"

*previous waves respondent asthma dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmaf = 6 if preload == 1 & hedbdas == 2 & r`w'asthmaf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmae = 0 if preload == 1 & hedbdas == 2 & r`w'asthmae == 1
}

*value labels
label values r`wavenum'asthmae health_problems
label values r`wavenum'asthmaf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had high cholesterol***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 2 {
	replace preload = r`w'hchole if !mi(r`w'hchole) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had high cholesterol
gen r`wavenum'hchole =.
missing_w`wavenum' hedimch hedacch, result(r`wavenum'hchole)
replace r`wavenum'hchole = 0 if preload == 0 & hedacch != 2
replace r`wavenum'hchole = 0 if hedimch==0
replace r`wavenum'hchole = 0 if preload == 1 & hedacch == 2
replace r`wavenum'hchole = 1 if hedimch == 1
replace r`wavenum'hchole = 1 if preload == 1 & hedacch != 2
label variable r`wavenum'hchole "r`wavenum'hchole:w`wavenum' r ever had high cholesterol"

*wave 4 respondent high cholesterol dispute flag
gen r`wavenum'hcholf =.
replace r`wavenum'hcholf = 0 if inlist(preload,0,1) | inlist(hedimch,-9,-8,0,1)
replace r`wavenum'hcholf = 3 if preload == 1 & hedacch == 2
label variable r`wavenum'hcholf "r`wavenum'hcholf:w`wavenum' r flag chg previous high cholesterol"

*previous waves respondent high cholesterol dispute flag
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hcholf = 6 if preload == 1 & hedacch == 2 & r`w'hcholf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hchole = 0 if preload == 1 & hedacch == 2 & r`w'hchole == 1
}

*value labels
label values r`wavenum'hchole health_problems
label values r`wavenum'hcholf health_problems_flag

drop preload

***Ever had cataracts***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'catrcte if !mi(r`w'catrcte) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had cataracts
gen r`wavenum'catrcte =.
missing_w`wavenum' heopcca heoptca, result(r`wavenum'catrcte)
replace r`wavenum'catrcte = 0 if preload == 0 & heopcca != 2
replace r`wavenum'catrcte = 0 if heoptca==0
replace r`wavenum'catrcte = 0 if preload == 1 & heopcca == 2
replace r`wavenum'catrcte = 1 if heoptca == 1
replace r`wavenum'catrcte = 1 if preload == 1 & heopcca != 2
label variable r`wavenum'catrcte "r`wavenum'catrcte:w`wavenum' r ever had cataracts"

*wave 4 respondent cataracts dispute flag
gen r`wavenum'catrctf =.
replace r`wavenum'catrctf = 0 if inlist(preload,0,1) | inlist(heoptca,-9,-8,0,1)
replace r`wavenum'catrctf = 3 if preload == 1 & heopcca == 2
label variable r`wavenum'catrctf "r`wavenum'catrctf:w`wavenum' r flag chg previous cataracts"

*previous waves respondent cataracts dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrctf = 6 if preload == 1 & heopcca == 2 & r`w'catrctf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrcte = 0 if preload == 1 & heopcca == 2 & r`w'catrcte == 1
}

*value labels
label values r`wavenum'catrcte health_problems
label values r`wavenum'catrctf health_problems_flag

drop preload

***Ever had parkinsons***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'parkine if !mi(r`w'parkine) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had parkinsons
gen r`wavenum'parkine =.
missing_w`wavenum' hedibpd hedbdpd, result(r`wavenum'parkine)
replace r`wavenum'parkine = 0 if preload == 0 & hedbdpd != 2
replace r`wavenum'parkine = 0 if hedibpd==0
replace r`wavenum'parkine = 0 if preload == 1 & hedbdpd == 2
replace r`wavenum'parkine = 1 if hedibpd == 1
replace r`wavenum'parkine = 1 if preload == 1 & hedbdpd != 2
label variable r`wavenum'parkine "r`wavenum'parkine:w`wavenum' r ever had parkinson disease"

*wave 4 respondent parkinsons dispute flag
gen r`wavenum'parkinf =.
replace r`wavenum'parkinf = 0 if inlist(preload,0,1) | inlist(hedibpd,-9,-8,0,1)
replace r`wavenum'parkinf = 3 if preload == 1 & hedbdpd == 2
label variable r`wavenum'parkinf "r`wavenum'parkinf:w`wavenum' r flag chg previous parkinson disease"

*previous waves respondent parkinsons dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkinf = 6 if preload == 1 & hedbdpd == 2 & r`w'parkinf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkine = 0 if preload == 1 & hedbdpd == 2 & r`w'parkine == 1
}

*value labels
label values r`wavenum'parkine health_problems
label values r`wavenum'parkinf health_problems_flag

drop preload

***Ever had hip fracture***
*wave 4 respondent ever had hip fracture
gen r`wavenum'hipe = .
missing_w`wavenum' hefrac, result(r`wavenum'hipe)
replace r`wavenum'hipe = .a if inrange(r`wavenum'agey,1,59) & hefrac==-1
replace r`wavenum'hipe = 0 if hefrac==2
replace r`wavenum'hipe = 1 if hefrac==1 |  (r`pre_wavenum'hipe==1 & inw`wavenum' == 1)
label variable r`wavenum'hipe "r`wavenum'hipe:w`wavenum' r ever had hip fracture"
label values r`wavenum'hipe health_problems

*wave 4 spouse ever had hip fracture
gen s`wavenum'hipe = .
spouse r`wavenum'hipe, result(s`wavenum'hipe) wave(`wavenum')
label variable s`wavenum'hipe "s`wavenum'hipe:w`wavenum' s ever had hip fracture"
label values s`wavenum'hipe health_problems

***Ever had Alzheimers disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'alzhe if !mi(r`w'alzhe) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had Alzheimers disease
gen r`wavenum'alzhe =.
missing_w`wavenum' hedbdad hedibad, result(r`wavenum'alzhe)
replace r`wavenum'alzhe = 0 if preload == 0 & hedbdad != 2
replace r`wavenum'alzhe = 0 if hedibad == 0
replace r`wavenum'alzhe = 0 if preload == 1 & hedbdad == 2
replace r`wavenum'alzhe = 1 if hedibad == 1
replace r`wavenum'alzhe = 1 if preload == 1 & hedbdad != 2
label variable r`wavenum'alzhe "r`wavenum'alzhe:w`wavenum' r ever had alzheimers"

*wave 4 respondent Alzheimers disease dispute flag
gen r`wavenum'alzhf =.
replace r`wavenum'alzhf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1)
replace r`wavenum'alzhf = 3 if preload == 1 & hedbdad == 2
label variable r`wavenum'alzhf "r`wavenum'alzhf:w`wavenum' r flag chg previous alzheimers"

*previous waves respondent Alzheimers disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhf = 6 if preload == 1 & hedbdad == 2 & r`w'alzhf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhe = 0 if preload == 1 & hedbdad == 2 & r`w'alzhe == 1
}

*value labels
label values r`wavenum'alzhe health_problems
label values r`wavenum'alzhf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had Dementia***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'demene if !mi(r`w'demene) & mi(preload) & inw`wavenum'==1
}

*wave 4 respondent ever had Dementia
gen r`wavenum'demene =.
missing_w`wavenum' hedbdde hedibde, result(r`wavenum'demene)
replace r`wavenum'demene = 0 if preload == 0 & hedbdde != 2
replace r`wavenum'demene = 0 if hedibde == 0
replace r`wavenum'demene = 0 if preload == 1 & hedbdde == 2
replace r`wavenum'demene = 1 if hedibde == 1
replace r`wavenum'demene = 1 if preload == 1 & hedbdde != 2
label variable r`wavenum'demene "r`wavenum'demene:w`wavenum' r ever had dementia"

*wave 4 respondent Dementia dispute flag
gen r`wavenum'demenf =.
replace r`wavenum'demenf = 0 if inlist(preload,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'demenf = 3 if preload == 1 & hedbdde == 2
label variable r`wavenum'demenf "r`wavenum'demenf:w`wavenum' r flag chg previous dementia"

*previous waves respondent Dementia dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demenf = 6 if preload == 1 & hedbdde == 2 & r`w'demenf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demene = 0 if preload == 1 & hedbdde == 2 & r`w'demene == 1
}

*value labels
label values r`wavenum'demene health_problems
label values r`wavenum'demenf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Vigorous physical activity***
*wave 4 respondent vigorous physical activity
gen r`wavenum'vgactx_e =.
missing_w`wavenum' heacta, result(r`wavenum'vgactx_e)
replace r`wavenum'vgactx_e =.p if askpx == 1
replace r`wavenum'vgactx_e = 2 if heacta == 1
replace r`wavenum'vgactx_e = 3 if heacta == 2
replace r`wavenum'vgactx_e = 4 if heacta == 3
replace r`wavenum'vgactx_e = 5 if heacta == 4
label variable r`wavenum'vgactx_e "r`wavenum'vgactx_e:w`wavenum' R Freq vigorous phys activ"

*wave 4 spouse vigorous physical activity
gen s`wavenum'vgactx_e =.
spouse r`wavenum'vgactx_e, result(s`wavenum'vgactx_e) wave(`wavenum')
label variable s`wavenum'vgactx_e "s`wavenum'vgactx_e:w`wavenum' S Freq vigorous phys activ"

*label values
label values r`wavenum'vgactx_e activity
label values s`wavenum'vgactx_e activity

*check 

***Moderate physical activity***
*wave 4 respondent moderate physical activity
gen r`wavenum'mdactx_e =.
missing_w`wavenum' heactb, result(r`wavenum'mdactx_e)
replace r`wavenum'mdactx_e = 2 if heactb == 1
replace r`wavenum'mdactx_e = 3 if heactb == 2
replace r`wavenum'mdactx_e = 4 if heactb == 3
replace r`wavenum'mdactx_e = 5 if heactb == 4
label variable r`wavenum'mdactx_e "r`wavenum'mdactx_e:w`wavenum' R Freq moderate phys activ"

*wave 4 spouse vigorous moderate activity
gen s`wavenum'mdactx_e =.
spouse r`wavenum'mdactx_e, result(s`wavenum'mdactx_e) wave(`wavenum')
label variable s`wavenum'mdactx_e "s`wavenum'mdactx_e:w`wavenum' S Freq moderate phys activ"

*label values
label values r`wavenum'mdactx_e activity
label values s`wavenum'mdactx_e activity

*check 

***Light physical activity***
*wave 4 respondent light physical activity
gen r`wavenum'ltactx_e =.
missing_w`wavenum' heactc, result(r`wavenum'ltactx_e)
replace r`wavenum'ltactx_e = 2 if heactc == 1
replace r`wavenum'ltactx_e = 3 if heactc == 2
replace r`wavenum'ltactx_e = 4 if heactc == 3
replace r`wavenum'ltactx_e = 5 if heactc == 4
label variable r`wavenum'ltactx_e "r`wavenum'ltactx_e:w`wavenum' R Freq light phys activ"

*wave 4 spouse vigorous light activity
gen s`wavenum'ltactx_e =.
spouse r`wavenum'ltactx_e, result(s`wavenum'ltactx_e) wave(`wavenum')
label variable s`wavenum'ltactx_e "s`wavenum'ltactx_e:w`wavenum' S Freq light phys activ"

*label values
label values r`wavenum'ltactx_e activity
label values s`wavenum'ltactx_e activity

*check 

***Ever drinks alcohol***
*wave 4 respondent ever drinks alcohol
gen r`wavenum'drink =.
replace r`wavenum'drink =.m if scako == -9
replace r`wavenum'drink =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drink = 0 if scako == 8
replace r`wavenum'drink = 1 if inrange(scako,1,7)
label variable r`wavenum'drink "r`wavenum'drink:w`wavenum' R ever drinks any alcohol"

*wave 4 spouse ever drinks alcohol
gen s`wavenum'drink =.
spouse r`wavenum'drink, result(s`wavenum'drink) wave(`wavenum')
label variable s`wavenum'drink "s`wavenum'drink:w`wavenum' S ever drinks any alcohol"

*label values
label values r`wavenum'drink ever_drink
label values s`wavenum'drink ever_drink

*check 

***Days per week drinks***
*wave 4 respondent days per week drinks
gen r`wavenum'drinkd_e =.
replace r`wavenum'drinkd_e =.m if scako == -9 | scal7a == -9 | scal7b == -9
replace r`wavenum'drinkd_e =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drinkd_e = 0 if scako == 8 | scal7a == 2
replace r`wavenum'drinkd_e = 1 if scal7b == 1
replace r`wavenum'drinkd_e = 2 if scal7b == 2
replace r`wavenum'drinkd_e = 3 if scal7b == 3
replace r`wavenum'drinkd_e = 4 if scal7b == 4
replace r`wavenum'drinkd_e = 5 if scal7b == 5
replace r`wavenum'drinkd_e = 6 if scal7b == 6
replace r`wavenum'drinkd_e = 7 if scal7b == 7
label variable r`wavenum'drinkd_e "r`wavenum'drinkd_e:w`wavenum' R # days/week drinks"

*wave 4 spouse days per week drinks
gen s`wavenum'drinkd_e =.
spouse r`wavenum'drinkd_e, result(s`wavenum'drinkd_e) wave(`wavenum')
label variable s`wavenum'drinkd_e "s`wavenum'drinkd_e:w`wavenum' S # days/week drinks"

**label values
*label values r`wavenum'drinkd_e drinks_flag
*label values s`wavenum'drinkd_e drinks_flag

*check 

***Drinks per week***
*wave 4 respondent drinks per week
gen r`wavenum'drinkwn_e =.
replace r`wavenum'drinkwn_e =.m if scako == -9 | scal7a == -9 | scal7b == -9 | ///
																	scdrspi == -9 | scdrwin == -9 | scdrpin == -9
replace r`wavenum'drinkwn_e =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drinkwn_e = 0 if scako == 8 | inlist(scal7a,1,2) | inrange(scal7b,1,7)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrspi if !inlist(scdrspi,-9,-2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrwin if !inlist(scdrwin,-9,-2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrpin if !inlist(scdrpin,-9,-2,-1)
label variable r`wavenum'drinkwn_e "r`wavenum'drinkwn_e:w`wavenum' R # drinks/week"
replace r`wavenum'drinkwn_e=round(r`wavenum'drinkwn_e)

*wave 4 spouse drinks per week
gen s`wavenum'drinkwn_e =.
spouse r`wavenum'drinkwn_e, result(s`wavenum'drinkwn_e) wave(`wavenum')
label variable s`wavenum'drinkwn_e "s`wavenum'drinkwn_e:w`wavenum' S # drinks/week"

**label values
*label values r`wavenum'drinkwn_e drinks_flag
*label values s`wavenum'drinkwn_e drinks_flag

*check 

***Ever smoked cigarettes***
*wave 4 respondent ever smoked cigarettes
local smokever
gen r`wavenum'smokev =.
missing_w`wavenum' hesmk heske, result(r`wavenum'smokev)
replace r`wavenum'smokev =.p if askpx == 1
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'smokev = r`w'smokev if inlist(r`w'smokev,0,1) & inw`wavenum'==1
	local smokever `smokever' r`w'smokev
}
replace r`wavenum'smokev = 0 if hesmk == 2 | heske == 1
replace r`wavenum'smokev = 1 if hesmk == 1 | inlist(heske,2,3)
label variable r`wavenum'smokev "r`wavenum'smokev:w`wavenum' R smoke ever"

*wave 4 spouse ever smoked cigarettes
gen s`wavenum'smokev =.
spouse r`wavenum'smokev, result(s`wavenum'smokev) wave(`wavenum')
label variable s`wavenum'smokev "s`wavenum'smokev:w`wavenum' S smoke ever"

*previous waves ever smoked if disputed
forvalues w = 1/`pre_wavenum' {
	replace r`w'smokev=0 if heske==1 & r`w'smokev==1
}

*label values
label values r`wavenum'smokev smokes
label values s`wavenum'smokev smokes

*check 

***Smokes cigarettes now***
*wave 4 respondent smokes cigarettes now
gen r`wavenum'smoken =.
missing_w`wavenum' hesmk heska, result(r`wavenum'smoken)
replace r`wavenum'smoken =.p if askpx == 1
replace r`wavenum'smoken = 0 if hesmk == 2 | heska == 2
replace r`wavenum'smoken = 1 if heska == 1
label variable r`wavenum'smoken "r`wavenum'smoken:w`wavenum' R smokes now"

*wave 4 spouse smokes cigarettes now
gen s`wavenum'smoken =.
spouse r`wavenum'smoken, result(s`wavenum'smoken) wave(`wavenum')
label variable s`wavenum'smoken "s`wavenum'smoken:w`wavenum' S smokes now"

*previous waves smokes now if disputed
tempvar stop
gen `stop'=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace `stop'=1 if heske==2 & r`w'smoken==1 & mi(`stop')
	replace r`w'smoken=0 if heske==2 & r`w'smoken==1 & `stop'!=2
	replace `stop'=2 if r`w'smoken==0 & `stop'==1
}

forvalues w = 1/`pre_wavenum' {
	replace r`w'smoken=0 if heske==1 & r`w'smoken==1
}

*label values
label values r`wavenum'smoken smokes
label values s`wavenum'smoken smokes

*check 

**Smoking frequency ****
*wave 4 respondent smoking frequency
gen r`wavenum'smokef = .
missing_w`wavenum' hesmk heska heskb heskc hecig , result(r`wavenum'smokef)
replace r`wavenum'smokef = 0  if r`wavenum'smoken == 0
replace r`wavenum'smokef = 0  if hecig ==2
replace r`wavenum'smokef = (heskb*5 + heskc*2)/7 if !inlist(heskb,-1,-8,-9) & !inlist(heskc,-1,-8,-9) 

label var r`wavenum'smokef "r`wavenum'smokef:w`wavenum' R # cigarettes/day"

*wave 4 spouse smoking frequency
gen s`wavenum'smokef = .
spouse r`wavenum'smokef, result(s`wavenum'smokef) wave(`wavenum')
label var s`wavenum'smokef "s`wavenum'smokef:w`wavenum' S # cigarettes/day"

***BMI***
*wave 4 respondent BMI
gen r`wavenum'bmi =.
replace r`wavenum'bmi = .n if `inw`wavenum'nurse' !=1 & inw`wavenum' == 1
replace r`wavenum'bmi = .b if wtok == 2 | htok == 2
replace r`wavenum'bmi = .r if wtok == 3 | htok == 3
replace r`wavenum'bmi = .o if wtok == 4 | htok == 4
replace r`wavenum'bmi = .a if wtok == 5 | htok == 5
replace r`wavenum'bmi = wtval/((htval/100)*(htval/100)) if !inlist(htval,.,-1) & !inlist(wtval,.,-1)
label variable r`wavenum'bmi "r`wavenum'bmi:w`wavenum' r Body Mass Index=kg/m2"

*wave 4 spouse BMI
gen s`wavenum'bmi =.
spouse r`wavenum'bmi, result(s`wavenum'bmi) wave(`wavenum')
label variable s`wavenum'bmi "s`wavenum'bmi:w`wavenum' s Body Mass Index=kg/m2"

*check

***BMI Categories***
*wave 4 respondent BMI categories
gen r`wavenum'bmicat = .
replace r`wavenum'bmicat = .n if `inw`wavenum'nurse' == 0 & inw`wavenum' == 1
replace r`wavenum'bmicat = .b if wtok == 2 | htok == 2
replace r`wavenum'bmicat = .r if wtok == 3 | htok == 3
replace r`wavenum'bmicat = .o if wtok == 4 | htok == 4
replace r`wavenum'bmicat = .a if wtok == 5 | htok == 5
replace r`wavenum'bmicat = 1 if inrange(r`wavenum'bmi,1,18.49999)
replace r`wavenum'bmicat = 2 if inrange(r`wavenum'bmi,18.50,24.99999)
replace r`wavenum'bmicat = 3 if inrange(r`wavenum'bmi,25,29.99999)
replace r`wavenum'bmicat = 4 if inrange(r`wavenum'bmi,30,34.99999)
replace r`wavenum'bmicat = 5 if inrange(r`wavenum'bmi,35,39.99999)
replace r`wavenum'bmicat = 6 if inrange(r`wavenum'bmi,40,100)
label variable r`wavenum'bmicat "r`wavenum'bmicat:w`wavenum' r BMI categorization"
label values r`wavenum'bmicat bmicate

*wave 4 spouse BMI categories
gen s`wavenum'bmicat = .
spouse r`wavenum'bmicat, result(s`wavenum'bmicat) wave(`wavenum')
label variable s`wavenum'bmicat "s`wavenum'bmicat:w`wavenum' s BMI categorization"
label values s`wavenum'bmicat bmicate

***Height in meters***
*wave 4 respondent height in meters
gen r`wavenum'height =.
replace r`wavenum'height = .n if `inw`wavenum'nurse' !=1 & inw`wavenum' == 1
replace r`wavenum'height = .b if htok == 2
replace r`wavenum'height = .r if htok == 3
replace r`wavenum'height = .o if htok == 4
replace r`wavenum'height = .a if htok == 5
replace r`wavenum'height = htval/100 if !inlist(htval,.,-1)
label variable r`wavenum'height "r`wavenum'height:w`wavenum' r Height in meters"

*wave 4 spouse height in meters
gen s`wavenum'height =.
spouse r`wavenum'height, result(s`wavenum'height) wave(`wavenum')
label variable s`wavenum'height "s`wavenum'height:w`wavenum' s Height in meters"

*check

***Weight in kilograms***
*wave 4 respondent weight in kilograms
gen r`wavenum'weight =.
replace r`wavenum'weight = .n if `inw`wavenum'nurse' == 0 & inw`wavenum' == 1
replace r`wavenum'weight = .b if wtok == 2
replace r`wavenum'weight = .r if wtok == 3
replace r`wavenum'weight = .o if wtok == 4
replace r`wavenum'weight = .a if wtok == 5
replace r`wavenum'weight = wtval if !inlist(wtval,.,-1)
label variable r`wavenum'weight "r`wavenum'weight:w`wavenum' r Weight in kilograms"

*wave 4 spouse weight in kilograms
gen s`wavenum'weight =.
spouse r`wavenum'weight, result(s`wavenum'weight) wave(`wavenum')
label variable s`wavenum'weight "s`wavenum'weight:w`wavenum' s Weight in kilograms"

*check


***drop ELSA wave specific core file raw variables***
drop `health_w`wavenum'_core'

***drop ELSA wave specific nurse file raw variables***
drop `health_w`wavenum'_nurse'

******************************************************************************************



*set wave number
local wavenum=5
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave specific core data***
local health_w`wavenum'_core askpx ///
										 hehelf helwk ///
										 hemob?? ///
										 psceda pscedb pscedc pscedd pscede pscedf pscedg pscedh ///
										 hedia?? hedim?? hedib?? hedac?? hedbd?? ///
										 heacta heactb heactc hemam hepro ///
										 scako scal7a scal7b scdrspi scdrwin scdrpin  /// 
										 hesmk heska heskb heskc hecig heske ///
										 headlwa headldr headlba headlea headlbe headlwc headlma ///
										 headlpr headlsh headlte headlme headlho headlmo hemamty hemamtm heproty heprotm ///
										 heoptca heopcca hefrac
merge 1:1 idauniq using "$wave_5_core", keepusing(`health_w`wavenum'_core' ) nogen


***self-report of health***
*wave 5 respondent self-report of health
gen r`wavenum'shlt =.
missing_w`wavenum' hehelf, result(r`wavenum'shlt)
replace r`wavenum'shlt = .p if askpx == 1
replace r`wavenum'shlt = hehelf if inrange(hehelf,1,5)
label variable r`wavenum'shlt "r`wavenum'shlt:w`wavenum' r self-report of health"

*wave 5 spouse self-report of health
gen s`wavenum'shlt =.
spouse r`wavenum'shlt, result(s`wavenum'shlt) wave(`wavenum')
label variable s`wavenum'shlt "s`wavenum'shlt:w`wavenum' s self-report of health"

*value labels
label values r`wavenum'shlt health
label values s`wavenum'shlt health

*check 

***Whether health limits work***
*wave 5 respondent whether health limits work
gen r`wavenum'hlthlm =.
missing_w`wavenum' helwk, result(r`wavenum'hlthlm)
replace r`wavenum'hlthlm = .p if askpx == 1
replace r`wavenum'hlthlm = 0 if helwk == 2
replace r`wavenum'hlthlm = 1 if helwk == 1
label variable r`wavenum'hlthlm "r`wavenum'hlthlm:w`wavenum' r hlth problems limit work"

*wave 5 spouse whether health limits work
gen s`wavenum'hlthlm =.
spouse r`wavenum'hlthlm, result(s`wavenum'hlthlm) wave(`wavenum')
label variable s`wavenum'hlthlm "s`wavenum'hlthlm:w`wavenum' s hlth problems limit work"

*value labels
label values r`wavenum'hlthlm limitwork
label values s`wavenum'hlthlm limitwork

*check 

***Some difficulty walking cross room***
*wave 5 respondent difficulty walking across room
gen r`wavenum'walkra =.
missing_w`wavenum' headlwa, result(r`wavenum'walkra)
replace r`wavenum'walkra = 0 if headlwa==0
replace r`wavenum'walkra = 1 if headlwa==1
label variable r`wavenum'walkra "r`wavenum'walkra:w`wavenum' R Some Diff-Walk across room"

*wave 5 spouse difficulty walking across room
gen s`wavenum'walkra =.
spouse r`wavenum'walkra, result(s`wavenum'walkra) wave(`wavenum')
label variable s`wavenum'walkra "s`wavenum'walkra:w`wavenum' S Some Diff-Walk across room"

*value labels
label values r`wavenum'walkra diff
label values s`wavenum'walkra diff

*check 

***Some difficulty dressing***
*wave 5 respondent difficulty dressing
gen r`wavenum'dressa =.
missing_w`wavenum' headldr, result(r`wavenum'dressa)
replace r`wavenum'dressa = 0 if headldr==0
replace r`wavenum'dressa = 1 if headldr==1
label variable r`wavenum'dressa "r`wavenum'dressa:w`wavenum' R Some Diff-Dressing"

*wave 5 spouse difficulty dressing
gen s`wavenum'dressa =.
spouse r`wavenum'dressa, result(s`wavenum'dressa) wave(`wavenum')
label variable s`wavenum'dressa "s`wavenum'dressa:w`wavenum' S Some Diff-Dressing"

*value labels
label values r`wavenum'dressa diff
label values s`wavenum'dressa diff

*check 

***Some difficulty bathing, shower***
*wave 5 respondent difficulty bathing, shower
gen r`wavenum'batha =.
missing_w`wavenum' headlba, result(r`wavenum'batha)
replace r`wavenum'batha = 0 if headlba==0
replace r`wavenum'batha = 1 if headlba==1
label variable r`wavenum'batha "r`wavenum'batha:w`wavenum' R Some Diff-Bathing, shower"

*wave 5 spouse difficulty bathing, shower
gen s`wavenum'batha =.
spouse r`wavenum'batha, result(s`wavenum'batha) wave(`wavenum')
label variable s`wavenum'batha "s`wavenum'batha:w`wavenum' S Some Diff-Bathing, shower"

*value labels
label values r`wavenum'batha diff
label values s`wavenum'batha diff

*check 

***Some difficulty eating***
*wave 5 respondent difficulty eating
gen r`wavenum'eata =.
missing_w`wavenum' headlea, result(r`wavenum'eata)
replace r`wavenum'eata = 0 if headlea==0
replace r`wavenum'eata = 1 if headlea==1
label variable r`wavenum'eata "r`wavenum'eata:w`wavenum' R Some Diff-Eating"

*wave 5 spouse difficulty eating
gen s`wavenum'eata =.
spouse r`wavenum'eata, result(s`wavenum'eata) wave(`wavenum')
label variable s`wavenum'eata "s`wavenum'eata:w`wavenum' S Some Diff-Eating"

*value labels
label values r`wavenum'eata diff
label values s`wavenum'eata diff

*check 

***Some difficulty getting in/out of bed***
*wave 5 respondent difficulty getting in/out of bed
gen r`wavenum'beda =.
missing_w`wavenum' headlbe, result(r`wavenum'beda)
replace r`wavenum'beda = 0 if headlbe==0
replace r`wavenum'beda = 1 if headlbe==1
label variable r`wavenum'beda "r`wavenum'beda:w`wavenum' R Some Diff-Get in/out bed"

*wave 5 spouse difficulty getting in/out of bed
gen s`wavenum'beda =.
spouse r`wavenum'beda, result(s`wavenum'beda) wave(`wavenum')
label variable s`wavenum'beda "s`wavenum'beda:w`wavenum' S Some Diff-Get in/out bed"

*value labels
label values r`wavenum'beda diff
label values s`wavenum'beda diff

*check 

***Some difficulty using the toilet***
*wave 5 respondent difficulty using the toilet
gen r`wavenum'toilta =.
missing_w`wavenum' headlwc, result(r`wavenum'toilta)
replace r`wavenum'toilta = 0 if headlwc==0
replace r`wavenum'toilta = 1 if headlwc==1
label variable r`wavenum'toilta "r`wavenum'toilta:w`wavenum' R Some Diff-Using the toilet"

*wave 5 spouse difficulty using the toilet
gen s`wavenum'toilta =.
spouse r`wavenum'toilta, result(s`wavenum'toilta) wave(`wavenum')
label variable s`wavenum'toilta "s`wavenum'toilta:w`wavenum' S Some Diff-Using the toilet"

*value labels
label values r`wavenum'toilta diff
label values s`wavenum'toilta diff

*check 

***Some difficulty using using a map***
*wave 5 respondent difficulty using a map
gen r`wavenum'mapa =.
missing_w`wavenum' headlma, result(r`wavenum'mapa)
replace r`wavenum'mapa = 0 if headlma==0
replace r`wavenum'mapa = 1 if headlma==1
label variable r`wavenum'mapa "r`wavenum'mapa:w`wavenum' R Some Diff-Use a map"

*wave 5 spouse difficulty using a map
gen s`wavenum'mapa =.
spouse r`wavenum'mapa, result(s`wavenum'mapa) wave(`wavenum')
label variable s`wavenum'mapa "s`wavenum'mapa:w`wavenum' S Some Diff-Use a map"

*value labels
label values r`wavenum'mapa diff
label values s`wavenum'mapa diff

*check 

***Some difficulty using a telephone***
*wave 5 respondent difficulty using a telephone
gen r`wavenum'phonea =.
missing_w`wavenum' headlte, result(r`wavenum'phonea)
replace r`wavenum'phonea = 0 if headlte==0
replace r`wavenum'phonea = 1 if headlte==1
label variable r`wavenum'phonea "r`wavenum'phonea:w`wavenum' R Some Diff-Use a telephone"

*wave 5 spouse difficulty using a telephone
gen s`wavenum'phonea =.
spouse r`wavenum'phonea, result(s`wavenum'phonea) wave(`wavenum')
label variable s`wavenum'phonea "s`wavenum'phonea:w`wavenum' S Some Diff-Use a telephone"

*value labels
label values r`wavenum'phonea diff
label values s`wavenum'phonea diff

*check 

***Some difficulty manging money***
*wave 5 respondent difficulty manging money
gen r`wavenum'moneya =.
missing_w`wavenum' headlmo, result(r`wavenum'moneya)
replace r`wavenum'moneya = 0 if headlmo==0
replace r`wavenum'moneya = 1 if headlmo==1
label variable r`wavenum'moneya "r`wavenum'moneya:w`wavenum' R Some Diff-Managing money"

*wave 5 spouse difficulty manging money
gen s`wavenum'moneya =.
spouse r`wavenum'moneya, result(s`wavenum'moneya) wave(`wavenum')
label variable s`wavenum'moneya "s`wavenum'moneya:w`wavenum' S Some Diff-Managing money"

*value labels
label values r`wavenum'moneya diff
label values s`wavenum'moneya diff

*check 

***Some difficulty taking medications***
*wave 5 respondent difficulty taking medications
gen r`wavenum'medsa =.
missing_w`wavenum' headlme, result(r`wavenum'medsa)
replace r`wavenum'medsa = 0 if headlme==0
replace r`wavenum'medsa = 1 if headlme==1
label variable r`wavenum'medsa "r`wavenum'medsa:w`wavenum' R Some Diff-Take medications"

*wave 5 spouse difficulty taking medications
gen s`wavenum'medsa =.
spouse r`wavenum'medsa, result(s`wavenum'medsa) wave(`wavenum')
label variable s`wavenum'medsa "s`wavenum'medsa:w`wavenum' S Some Diff-Take medications"

*value labels
label values r`wavenum'medsa diff
label values s`wavenum'medsa diff

*check 

***Some difficulty shopping for groceries***
*wave 5 respondent difficulty shopping for groceries
gen r`wavenum'shopa =.
missing_w`wavenum' headlsh, result(r`wavenum'shopa)
replace r`wavenum'shopa = 0 if headlsh==0
replace r`wavenum'shopa = 1 if headlsh==1
label variable r`wavenum'shopa "r`wavenum'shopa:w`wavenum' R Some Diff-Shop for grocery"

*wave 5 spouse difficulty shopping for groceries
gen s`wavenum'shopa =.
spouse r`wavenum'shopa, result(s`wavenum'shopa) wave(`wavenum')
label variable s`wavenum'shopa "s`wavenum'shopa:w`wavenum' S Some Diff-Shop for grocery"

*value labels
label values r`wavenum'shopa diff
label values s`wavenum'shopa diff

*check 

***Some difficulty preparing a hot meal***
*wave 5 respondent difficulty preparing a hot meal
gen r`wavenum'mealsa =.
missing_w`wavenum' headlpr, result(r`wavenum'mealsa)
replace r`wavenum'mealsa = 0 if headlpr==0
replace r`wavenum'mealsa = 1 if headlpr==1
label variable r`wavenum'mealsa "r`wavenum'mealsa:w`wavenum' R Some Diff-Prepare hot meal"

*wave 5 spouse difficulty preparing a hot meal
gen s`wavenum'mealsa =.
spouse r`wavenum'mealsa, result(s`wavenum'mealsa) wave(`wavenum')
label variable s`wavenum'mealsa "s`wavenum'mealsa:w`wavenum' S Some Diff-Prepare hot meal"

*value labels
label values r`wavenum'mealsa diff
label values s`wavenum'mealsa diff

*check 

***Some difficulty Doing work around the house or garden***
*wave 5 respondent difficulty Doing work around the house or garden
gen r`wavenum'housewka =.
missing_w`wavenum' headlho, result(r`wavenum'housewka)
replace r`wavenum'housewka = 0 if headlho==0
replace r`wavenum'housewka = 1 if headlho==1
label variable r`wavenum'housewka "r`wavenum'housewka:w`wavenum' R Some Diff-Doing work around the house or garden"

*wave 5 spouse difficulty Doing work around the house or garden
gen s`wavenum'housewka =.
spouse r`wavenum'housewka, result(s`wavenum'housewka) wave(`wavenum')
label variable s`wavenum'housewka "s`wavenum'housewka:w`wavenum' S Some Diff-Doing work around the house or garden"

*value labels
label values r`wavenum'housewka diff
label values s`wavenum'housewka diff

*check 

***Difficulty Walking 100m***
*wave 5 respondent difficulty walking 100m
gen r`wavenum'walk100a =.
missing_w`wavenum' hemobwa, result(r`wavenum'walk100a)
replace r`wavenum'walk100a = 0 if hemobwa==0
replace r`wavenum'walk100a = 1 if hemobwa==1
label variable r`wavenum'walk100a "r`wavenum'walk100a:w`wavenum' R Some Diff-Walk 100y"

*wave 5 spouse difficulty walking 100m
gen s`wavenum'walk100a =.
spouse r`wavenum'walk100a, result(s`wavenum'walk100a) wave(`wavenum')
label variable s`wavenum'walk100a "s`wavenum'walk100a:w`wavenum' S Some Diff-Walk 100y"

*value labels
label values r`wavenum'walk100a diff
label values s`wavenum'walk100a diff

*check 

***Difficulty sitting for 2 hours***
*wave 5 respondent difficulty sitting for 2 hours
gen r`wavenum'sita =.
missing_w`wavenum' hemobsi, result(r`wavenum'sita)
replace r`wavenum'sita = 0 if hemobsi==0
replace r`wavenum'sita = 1 if hemobsi==1
label variable r`wavenum'sita "r`wavenum'sita:w`wavenum' R Some Diff-Sit for 2 hours"

*wave 5 spouse difficulty sitting for 2 hours
gen s`wavenum'sita =.
spouse r`wavenum'sita, result(s`wavenum'sita) wave(`wavenum')
label variable s`wavenum'sita "s`wavenum'sita:w`wavenum' S Some Diff-Sit for 2 hours"

*value labels
label values r`wavenum'sita diff
label values s`wavenum'sita diff

*check 

***Difficulty getting up from a chair***
*wave 5 respondent difficulty getting up from a chair
gen r`wavenum'chaira =.
missing_w`wavenum' hemobch, result(r`wavenum'chaira)
replace r`wavenum'chaira = 0 if hemobch==0
replace r`wavenum'chaira = 1 if hemobch==1
label variable r`wavenum'chaira "r`wavenum'chaira:w`wavenum' R Some Diff-Get up fr chair"

*wave 5 spouse difficulty getting up from a chair
gen s`wavenum'chaira =.
spouse r`wavenum'chaira, result(s`wavenum'chaira) wave(`wavenum')
label variable s`wavenum'chaira "s`wavenum'chaira:w`wavenum' S Some Diff-Get up fr chair"

*value labels
label values r`wavenum'chaira diff
label values s`wavenum'chaira diff

*check 

***Difficulty climbing several flights of stairs***
*wave 5 respondent difficulty climbing several flights of stairs
gen r`wavenum'climsa =.
missing_w`wavenum' hemobcs, result(r`wavenum'climsa)
replace r`wavenum'climsa = 0 if hemobcs==0
replace r`wavenum'climsa = 1 if hemobcs==1
label variable r`wavenum'climsa "r`wavenum'climsa:w`wavenum' R Some Diff-Clmb sev flt str"

*wave 5 spouse difficulty climbing several flights of stairs
gen s`wavenum'climsa =.
spouse r`wavenum'climsa, result(s`wavenum'climsa) wave(`wavenum')
label variable s`wavenum'climsa "s`wavenum'climsa:w`wavenum' S Some Diff-Clmb sev flt str"

*value labels
label values r`wavenum'climsa diff
label values s`wavenum'climsa diff

*check 

***Difficulty climbing one flight of stairs***
*wave 5 respondent difficulty climbing one flight of stairs
gen r`wavenum'clim1a =.
missing_w`wavenum' hemobcl, result(r`wavenum'clim1a)
replace r`wavenum'clim1a = 0 if hemobcl==0
replace r`wavenum'clim1a = 1 if hemobcl==1
label variable r`wavenum'clim1a "r`wavenum'clim1a:w`wavenum' R Some Diff-Clmb 1 flt str"

*wave 5 spouse difficulty climbing one flight of stairs
gen s`wavenum'clim1a =.
spouse r`wavenum'clim1a, result(s`wavenum'clim1a) wave(`wavenum')
label variable s`wavenum'clim1a "s`wavenum'clim1a:w`wavenum' S Some Diff-Clmb 1 flt str"

*value labels
label values r`wavenum'clim1a diff
label values s`wavenum'clim1a diff

*check 

***Difficulty stooping/keeling/crouching***
*wave 5 respondent difficulty stooping/keeling/crouching
gen r`wavenum'stoopa =.
missing_w`wavenum' hemobst, result(r`wavenum'stoopa)
replace r`wavenum'stoopa = 0 if hemobst==0
replace r`wavenum'stoopa = 1 if hemobst==1
label variable r`wavenum'stoopa "r`wavenum'stoopa:w`wavenum' R Some Diff-Stoop/Kneel/Crch"

*wave 5 spouse difficulty stooping/keeling/crouching
gen s`wavenum'stoopa =.
spouse r`wavenum'stoopa, result(s`wavenum'stoopa) wave(`wavenum')
label variable s`wavenum'stoopa "s`wavenum'stoopa:w`wavenum' S Some Diff-Stoop/Kneel/Crch"

*value labels
label values r`wavenum'stoopa diff
label values s`wavenum'stoopa diff

*check 

***Difficulty lifting/carrying 10lbs***
*wave 5 respondent difficulty lifting/carrying 10lbs
gen r`wavenum'lifta =.
missing_w`wavenum' hemobli, result(r`wavenum'lifta)
replace r`wavenum'lifta = 0 if hemobli==0
replace r`wavenum'lifta = 1 if hemobli==1
label variable r`wavenum'lifta "r`wavenum'lifta:w`wavenum' R Some Diff-Lift/carry 10lbs"

*wave 5 spouse difficulty lifting/carrying 10lbs
gen s`wavenum'lifta =.
spouse r`wavenum'lifta, result(s`wavenum'lifta) wave(`wavenum')
label variable s`wavenum'lifta "s`wavenum'lifta:w`wavenum' S Some Diff-Lift/carry 10lbs"

*value labels
label values r`wavenum'lifta diff
label values s`wavenum'lifta diff

*check 

***Difficulty picking up a dime***
*wave 5 respondent difficulty picking up a dime
gen r`wavenum'dimea =.
missing_w`wavenum' hemobpi, result(r`wavenum'dimea)
replace r`wavenum'dimea = 0 if hemobpi==0
replace r`wavenum'dimea = 1 if hemobpi==1
label variable r`wavenum'dimea "r`wavenum'dimea:w`wavenum' R Some Diff-Pick up a 5p coin"

*wave 5 spouse difficulty picking up a dime
gen s`wavenum'dimea =.
spouse r`wavenum'dimea, result(s`wavenum'dimea) wave(`wavenum')
label variable s`wavenum'dimea "s`wavenum'dimea:w`wavenum' S Some Diff-Pick up a 5p coin"

*value labels
label values r`wavenum'dimea diff
label values s`wavenum'dimea diff

*check 

***Difficulty reaching/extending arms up***
*wave 5 respondent difficulty reaching/extending arms up
gen r`wavenum'armsa =.
missing_w`wavenum' hemobre, result(r`wavenum'armsa)
replace r`wavenum'armsa = 0 if hemobre==0
replace r`wavenum'armsa = 1 if hemobre==1
label variable r`wavenum'armsa "r`wavenum'armsa:w`wavenum' R Some Diff-Rch/xtnd arms up"

*wave 5 spouse difficulty reaching/extending arms up
gen s`wavenum'armsa =.
spouse r`wavenum'armsa, result(s`wavenum'armsa) wave(`wavenum')
label variable s`wavenum'armsa "s`wavenum'armsa:w`wavenum' S Some Diff-Rch/xtnd arms up"

*value labels
label values r`wavenum'armsa diff
label values s`wavenum'armsa diff

*check 


***Difficulty pushing/pulling a large object***
*wave 5 respondent difficulty pushing/pulling a large object
gen r`wavenum'pusha =.
missing_w`wavenum' hemobpu, result(r`wavenum'pusha)
replace r`wavenum'pusha = 0 if hemobpu==0
replace r`wavenum'pusha = 1 if hemobpu==1
label variable r`wavenum'pusha "r`wavenum'pusha:w`wavenum' R Some Diff-Push/pull lg obj"

*wave 5 spouse difficulty pushing/pulling a large object
gen s`wavenum'pusha =.
spouse r`wavenum'pusha, result(s`wavenum'pusha) wave(`wavenum')
label variable s`wavenum'pusha "s`wavenum'pusha:w`wavenum' S Some Diff-Push/pull lg obj"

*value labels
label values r`wavenum'pusha diff
label values s`wavenum'pusha diff

*check 

***ADL Summary 0-5***
*wave 5 respondent ADL Summary 0-5
H_ELSA_summary_v adla, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata r`wavenum'beda r`wavenum'walkra) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adla "r`wavenum'adla:w`wavenum' R Some Diff-ADLs /0-5"

*wave 5 respondent Missing in ADL Summary
label variable r`wavenum'adlam "r`wavenum'adlam:w`wavenum' r Missings in Some Diff-ADLs /0-5"

*wave 5 spouse ADL Summary 0-5
gen s`wavenum'adla =.
spouse r`wavenum'adla, result(s`wavenum'adla) wave(`wavenum')
label variable s`wavenum'adla "s`wavenum'adla:w`wavenum' S Some Diff-ADLs /0-5"

*wave 5 spouse Missings in ADL Summary 0-5
gen s`wavenum'adlam =.
spouse r`wavenum'adlam, result(s`wavenum'adlam) wave(`wavenum')
label variable s`wavenum'adlam "s`wavenum'adlam:w`wavenum' S Missings in Some Diff-ADLs /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***ADL Wallace Summary 0-3***
*wave 5 respondent ADL Wallace Summary 0-3
H_ELSA_summary_v adlwa, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adlwa "r`wavenum'adlwa:w`wavenum' R Some Diff-ADLs:Wallace /0-3"

*wave 5 respondent Missings in ADL Wallace Summary 0-3
label variable r`wavenum'adlwam "r`wavenum'adlwam:w`wavenum' R Missings in Some Diff-ADLs:Wallace /0-3"

*wave 5 spouse ADL Wallace Summary 0-3
gen s`wavenum'adlwa =.
spouse r`wavenum'adlwa, result(s`wavenum'adlwa) wave(`wavenum')
label variable s`wavenum'adlwa "s`wavenum'adlwa:w`wavenum' S Some Diff-ADLs:Wallace /0-3"

*wave 5 spouse Missings in ADL Wallace Summary 0-3
gen s`wavenum'adlwam =.
spouse r`wavenum'adlwam, result(s`wavenum'adlwam) wave(`wavenum')
label variable s`wavenum'adlwam "s`wavenum'adlwam:w`wavenum' S Missings in Some Diff-ADLs:Wallace /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-3***
*wave 5 respondent IADLs Summary 0-3
H_ELSA_summary_v iadla, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadla "r`wavenum'iadla:w`wavenum' R Some Diff-IADLs: /0-3"

*wave 5 respondent Missings in IADLs Summary 0-3
label variable r`wavenum'iadlam "r`wavenum'iadlam:w`wavenum' R Missings in Some Diff-IADLs: /0-3"

*wave 5 spouse IADLs Summary 0-3
gen s`wavenum'iadla =.
spouse r`wavenum'iadla, result(s`wavenum'iadla) wave(`wavenum')
label variable s`wavenum'iadla "s`wavenum'iadla:w`wavenum' S Some Diff-IADLs: /0-3"

*wave 5 spouse Missings in IADLs Summary 0-3
gen s`wavenum'iadlam =.
spouse r`wavenum'iadlam, result(s`wavenum'iadlam) wave(`wavenum')
label variable s`wavenum'iadlam "s`wavenum'iadlam:w`wavenum' S Missings in Some Diff-IADLs: /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-5***
*wave 5 respondent IADLs Summary 0-5
H_ELSA_summary_v iadlza, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa r`wavenum'shopa r`wavenum'mealsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadlza "r`wavenum'iadlza:w`wavenum' R Some Diff-IADLs: /0-5"

*wave 5 respondent Missings in IADLs Summary 0-5
label variable r`wavenum'iadlzam "r`wavenum'iadlzam:w`wavenum' R Missings in Some Diff-IADLs: /0-5"

*wave 5 spouse IADLs Summary 0-5
gen s`wavenum'iadlza =.
spouse r`wavenum'iadlza, result(s`wavenum'iadlza) wave(`wavenum')
label variable s`wavenum'iadlza "s`wavenum'iadlza:w`wavenum' S Some Diff-IADLs: /0-5"

*wave 5 spouse Missings in IADLs Summary 0-5
gen s`wavenum'iadlzam =.
spouse r`wavenum'iadlzam, result(s`wavenum'iadlzam) wave(`wavenum')
label variable s`wavenum'iadlzam "s`wavenum'iadlzam:w`wavenum' S Missings in Some Diff-IADLs: /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Mobility Summary***
*wave 5 respondent Mobility Summary
H_ELSA_summary_v mobilb, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'climsa r`wavenum'clim1a) 
local varlist_m = r(varlist_m)
label variable r`wavenum'mobilb "r`wavenum'mobilb:w`wavenum' R Some Diff-Mobility /0-4"

*wave 5 respondent Missings in Mobility Summary
label variable r`wavenum'mobilbm "r`wavenum'mobilbm:w`wavenum' R Missings in Some Diff-Mobility /0-4"

*wave 5 spouse Mobility Summary
gen s`wavenum'mobilb =.
spouse r`wavenum'mobilb, result(s`wavenum'mobilb) wave(`wavenum')
label variable s`wavenum'mobilb "s`wavenum'mobilb:w`wavenum' S Some Diff-Mobility /0-4"

*wave 5 spouse Missings in Mobility Summary
gen s`wavenum'mobilbm =.
spouse r`wavenum'mobilbm, result(s`wavenum'mobilbm) wave(`wavenum')
label variable s`wavenum'mobilbm "s`wavenum'mobilbm:w`wavenum' S Missings in Some Diff-Mobility /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Large Muscle Summary***
*wave 5 respondent Large Muscle Summary
H_ELSA_summary_v lgmusa, wave(`wavenum') add(r`wavenum'sita r`wavenum'chaira r`wavenum'stoopa r`wavenum'pusha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'lgmusa "r`wavenum'lgmusa:w`wavenum' R Some Diff-Large muscle /0-4"

*wave 5 respondent Missings in Large Muscle Summary
label variable r`wavenum'lgmusam "r`wavenum'lgmusam:w`wavenum' R Missings in Some Diff-Large muscle /0-4"

*wave 5 spouse Large Muscle Summary
gen s`wavenum'lgmusa =.
spouse r`wavenum'lgmusa, result(s`wavenum'lgmusa) wave(`wavenum')
label variable s`wavenum'lgmusa "s`wavenum'lgmusa:w`wavenum' S Some Diff-Large muscle /0-4"

*wave 5 spouse Missings in Large Muscle Summary
gen s`wavenum'lgmusam =.
spouse r`wavenum'lgmusam, result(s`wavenum'lgmusam) wave(`wavenum')
label variable s`wavenum'lgmusam "s`wavenum'lgmusam:w`wavenum' S Missings in Some Diff-Large muscle /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Gross Motor Summary***
*wave 5 respondent Gross Motor Summary
H_ELSA_summary_v grossa, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'clim1a r`wavenum'beda r`wavenum'batha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'grossa "r`wavenum'grossa:w`wavenum' R Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 5 respondent Missings in Gross Motor Summary
label variable r`wavenum'grossam "r`wavenum'grossam:w`wavenum' R Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 5 spouse Gross Motor Summary
gen s`wavenum'grossa =.
spouse r`wavenum'grossa, result(s`wavenum'grossa) wave(`wavenum')
label variable s`wavenum'grossa "s`wavenum'grossa:w`wavenum' S Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 5 spouse Missings in Gross Motor Summary
gen s`wavenum'grossam =.
spouse r`wavenum'grossam, result(s`wavenum'grossam) wave(`wavenum')
label variable s`wavenum'grossam "s`wavenum'grossam:w`wavenum' S Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Fine Motor Summary***
*wave 5 respondent Fine Motor Summary
H_ELSA_summary_v finea, wave(`wavenum') add(r`wavenum'dimea r`wavenum'eata r`wavenum'dressa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'finea "r`wavenum'finea:w`wavenum' R Some Diff-Dime/eat/dress /0-3"

*wave 5 respondent Missings in Fine Motor Summary
label variable r`wavenum'fineam "r`wavenum'fineam:w`wavenum' R Missings in Some Diff-Dime/eat/dress /0-3"

*wave 5 spouse Fine Motor Summary
gen s`wavenum'finea =.
spouse r`wavenum'finea, result(s`wavenum'finea) wave(`wavenum')
label variable s`wavenum'finea "s`wavenum'finea:w`wavenum' S Some Diff-Dime/eat/dress /0-3"

*wave 5 spouse Missings in Fine Motor Summary
gen s`wavenum'fineam =.
spouse r`wavenum'fineam, result(s`wavenum'fineam) wave(`wavenum')
label variable s`wavenum'fineam "s`wavenum'fineam:w`wavenum' S Missings in Some Diff-Dime/eat/dress /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***Felt depressed (0,1)***
*wave 5 respondent Felt depressed (0,1)
gen r`wavenum'depres =.
missing_w`wavenum' psceda, result(r`wavenum'depres)
replace r`wavenum'depres =.p if askpx == 1
replace r`wavenum'depres = 0 if psceda == 2
replace r`wavenum'depres = 1 if psceda == 1
label variable r`wavenum'depres "r`wavenum'depres:w`wavenum' r CESD: Felt depressed (0,1)"

*wave 5 spouse Felt depressed (0,1)
gen s`wavenum'depres =.
spouse r`wavenum'depres, result(s`wavenum'depres) wave(`wavenum')
label variable s`wavenum'depres "s`wavenum'depres:w`wavenum' s CESD: Felt depressed (0,1)"

*value labels
label values r`wavenum'depres cesd
label values s`wavenum'depres cesd

*check

***Everything is an effort***
*wave 5 respondent Everything is an effort
gen r`wavenum'effort =.
missing_w`wavenum' pscedb, result(r`wavenum'effort)
replace r`wavenum'effort =.p if askpx == 1
replace r`wavenum'effort = 0 if pscedb == 2
replace r`wavenum'effort = 1 if pscedb == 1
label variable r`wavenum'effort "r`wavenum'effort:w`wavenum' r CESD: Everthing an effort (0,1)"

*wave 5 spouse Everything is an effort
gen s`wavenum'effort =.
spouse r`wavenum'effort, result(s`wavenum'effort) wave(`wavenum')
label variable s`wavenum'effort "s`wavenum'effort:w`wavenum' s CESD: Everthing an effort (0,1)"

*value labels
label values r`wavenum'effort cesd
label values s`wavenum'effort cesd

*check

***Sleep was restless (0,1)***
*wave 5 respondent Sleep was restless (0,1)
gen r`wavenum'sleepr =.
missing_w`wavenum' pscedc, result(r`wavenum'sleepr)
replace r`wavenum'sleepr =.p if askpx == 1
replace r`wavenum'sleepr = 0 if pscedc == 2
replace r`wavenum'sleepr = 1 if pscedc == 1
label variable r`wavenum'sleepr "r`wavenum'sleepr:w`wavenum' r CESD: Sleep was restless (0,1)"

*wave 5 spouse Sleep was restless (0,1)
gen s`wavenum'sleepr =.
spouse r`wavenum'sleepr, result(s`wavenum'sleepr) wave(`wavenum')
label variable s`wavenum'sleepr "s`wavenum'sleepr:w`wavenum' s CESD: Sleep was restless (0,1)"

*value labels
label values r`wavenum'sleepr cesd
label values s`wavenum'sleepr cesd

*check

***Was happy (0,1)***
*wave 5 respondent Was happy (0,1)
gen r`wavenum'whappy =.
missing_w`wavenum' pscedd, result(r`wavenum'whappy)
replace r`wavenum'whappy =.p if askpx == 1
replace r`wavenum'whappy = 0 if pscedd == 2
replace r`wavenum'whappy = 1 if pscedd == 1
label variable r`wavenum'whappy "r`wavenum'whappy:w`wavenum' r CESD: Was happy (0,1)"

*wave 5 spouse Was happy (0,1)
gen s`wavenum'whappy =.
spouse r`wavenum'whappy, result(s`wavenum'whappy) wave(`wavenum')
label variable s`wavenum'whappy "s`wavenum'whappy:w`wavenum' s CESD: Was happy (0,1)"

*value labels
label values r`wavenum'whappy cesd
label values s`wavenum'whappy cesd

*check

***Felt lonely (0,1)***
*wave 5 respondent Felt lonely (0,1)
gen r`wavenum'flone =.
missing_w`wavenum' pscede, result(r`wavenum'flone)
replace r`wavenum'flone =.p if askpx == 1
replace r`wavenum'flone = 0 if pscede == 2
replace r`wavenum'flone = 1 if pscede == 1
label variable r`wavenum'flone "r`wavenum'flone:w`wavenum' r CESD: Felt lonely (0,1)"

*wave 5 spouse Felt lonely (0,1)
gen s`wavenum'flone =.
spouse r`wavenum'flone, result(s`wavenum'flone) wave(`wavenum')
label variable s`wavenum'flone "s`wavenum'flone:w`wavenum' s CESD: Felt lonely (0,1)"

*value labels
label values r`wavenum'flone cesd
label values s`wavenum'flone cesd

*check

***Felt sad (0,1)***
*wave 5 respondent Felt sad (0,1)
gen r`wavenum'fsad =.
missing_w`wavenum' pscedg, result(r`wavenum'fsad)
replace r`wavenum'fsad =.p if askpx == 1
replace r`wavenum'fsad = 0 if pscedg == 2
replace r`wavenum'fsad = 1 if pscedg == 1
label variable r`wavenum'fsad "r`wavenum'fsad:w`wavenum' r CESD: Felt sad (0,1)"

*wave 5 spouse Felt sad (0,1)
gen s`wavenum'fsad =.
spouse r`wavenum'fsad, result(s`wavenum'fsad) wave(`wavenum')
label variable s`wavenum'fsad "s`wavenum'fsad:w`wavenum' s CESD: Felt sad (0,1)"

*value labels
label values r`wavenum'fsad cesd
label values s`wavenum'fsad cesd

*check

***Could not get going (0,1)***
*wave 5 respondent Could not get going (0,1)
gen r`wavenum'going =.
missing_w`wavenum' pscedh, result(r`wavenum'going)
replace r`wavenum'going =.p if askpx == 1
replace r`wavenum'going = 0 if pscedh == 2
replace r`wavenum'going = 1 if pscedh == 1
label variable r`wavenum'going "r`wavenum'going:w`wavenum' r CESD: Could not get going (0,1)"

*wave 5 spouse Could not get going (0,1)
gen s`wavenum'going =.
spouse r`wavenum'going, result(s`wavenum'going) wave(`wavenum')
label variable s`wavenum'going "s`wavenum'going:w`wavenum' s CESD: Could not get going (0,1)"

*value labels
label values r`wavenum'going cesd
label values s`wavenum'going cesd

*check

***Enjoyed life (0,1)***
*wave 5 respondent Enjoyed life (0,1)
gen r`wavenum'enlife =.
missing_w`wavenum' pscedf, result(r`wavenum'enlife)
replace r`wavenum'enlife =.p if askpx == 1
replace r`wavenum'enlife = 0 if pscedf == 2
replace r`wavenum'enlife = 1 if pscedf == 1
label variable r`wavenum'enlife "r`wavenum'enlife:w`wavenum' r CESD: Enjoyed life (0,1)"

*wave 5 spouse Enjoyed life (0,1)
gen s`wavenum'enlife =.
spouse r`wavenum'enlife, result(s`wavenum'enlife) wave(`wavenum')
label variable s`wavenum'enlife "s`wavenum'enlife:w`wavenum' s CESD: Enjoyed life (0,1)"

*value labels
label values r`wavenum'enlife cesd
label values s`wavenum'enlife cesd

*check

***CESD Score***
*wave 5 respondent CESD score number of missings
egen r`wavenum'cesdm = rowmiss(r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife) if inw`wavenum' == 1
label variable r`wavenum'cesdm "r`wavenum'cesdm:w`wavenum' r missings in CESD score"

*wave 5 spouse CESD score number of missings
gen s`wavenum'cesdm =.
spouse r`wavenum'cesdm, result(s`wavenum'cesdm) wave(`wavenum')
label variable s`wavenum'cesdm "s`wavenum'cesdm:w`wavenum' s missings in CESD score"

local cesd
foreach v of varlist r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going  {
	recode `v' (miss = 0), generate(`v'_m)
	local cesd `cesd' `v'_m
}

foreach u of varlist r`wavenum'whappy r`wavenum'enlife {
	recode `u' (miss = 1), generate(`u'_m)
	local cesd `cesd' `u'_m
}

*wave 5 respondent CESD score
gen r`wavenum'cesd=.
missing_H r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife, result(r`wavenum'cesd)
replace r`wavenum'cesd =.p if askpx == 1		 
replace r`wavenum'cesd = r`wavenum'depres_m + r`wavenum'effort_m + r`wavenum'sleepr_m + r`wavenum'flone_m + r`wavenum'fsad_m + r`wavenum'going_m + (1-r`wavenum'whappy_m) + (1-r`wavenum'enlife_m) if inrange(r`wavenum'cesdm,0,7)
label variable r`wavenum'cesd "r`wavenum'cesd:w`wavenum' r CESD Score"

*wave 5 spouse CESD score
gen s`wavenum'cesd =.
spouse r`wavenum'cesd, result(s`wavenum'cesd) wave(`wavenum')
label variable s`wavenum'cesd "s`wavenum'cesd:w`wavenum' s CESD Score"

*check 

*drop intermediate variables
drop `cesd'

***Ever had high blood pressure***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hibpe if !mi(r`w'hibpe) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had high blood pressure
gen r`wavenum'hibpe =.
missing_w`wavenum' hedacbp hedimbp, result(r`wavenum'hibpe)
replace r`wavenum'hibpe = 0 if preload == 0 & hedacbp != 2
replace r`wavenum'hibpe = 0 if hedimbp == 0
replace r`wavenum'hibpe = 0 if preload == 1 & hedacbp == 2
replace r`wavenum'hibpe = 1 if hedimbp == 1
replace r`wavenum'hibpe = 1 if preload == 1 & hedacbp != 2
label variable r`wavenum'hibpe "r`wavenum'hibpe:w`wavenum' r ever had high blood pressure"

*wave 5 respondent high blood pressure dispute flag
gen r`wavenum'hibpf =.
replace r`wavenum'hibpf = 0 if inlist(preload,0,1) | inlist(hedimbp,-9,-8,0,1)
replace r`wavenum'hibpf = 3 if preload == 1 & hedacbp == 2
label variable r`wavenum'hibpf "r`wavenum'hibpf:w`wavenum' r flag dispute chg high blood pressure"

*previous waves respondent high blood pressure dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpf = 6 if preload == 1 & hedacbp == 2 & r`w'hibpf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpe = 0 if preload == 1 & hedacbp == 2 & r`w'hibpe == 1
}

*value labels
label values r`wavenum'hibpe health_problems
label values r`wavenum'hibpf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}


drop preload

***Ever had diabetes***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'diabe if !mi(r`w'diabe) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had diabetes
gen r`wavenum'diabe =.
missing_w`wavenum' hedacdi hedimdi, result(r`wavenum'diabe)
replace r`wavenum'diabe = 0 if preload == 0 & hedacdi != 2
replace r`wavenum'diabe = 0 if hedimdi == 0
replace r`wavenum'diabe = 0 if preload == 1 & hedacdi == 2
replace r`wavenum'diabe = 1 if hedimdi == 1
replace r`wavenum'diabe = 1 if preload == 1 & hedacdi != 2
label variable r`wavenum'diabe "r`wavenum'diabe:w`wavenum' r ever had diabetes"

*wave 5 respondent diabetes dispute flag
gen r`wavenum'diabf =.
replace r`wavenum'diabf = 0 if inlist(preload,0,1) | inlist(hedimdi,-9,-8,0,1)
replace r`wavenum'diabf = 3 if preload == 1 & hedacdi == 2
label variable r`wavenum'diabf "r`wavenum'diabf:w`wavenum' r flag dispute chg diabetes"

*previous waves respondent diabetes dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabf = 6 if preload == 1 & hedacdi == 2 & r`w'diabf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabe = 0 if preload == 1 & hedacdi == 2 & r`w'diabe == 1
}

*value labels
label values r`wavenum'diabe health_problems
label values r`wavenum'diabf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had cancer***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'cancre if !mi(r`w'cancre) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had cancer
gen r`wavenum'cancre =.
missing_w`wavenum' hedbdca hedibca, result(r`wavenum'cancre)
replace r`wavenum'cancre = 0 if preload == 0 & hedbdca != 2
replace r`wavenum'cancre = 0 if hedibca == 0
replace r`wavenum'cancre = 0 if preload == 1 & hedbdca == 2
replace r`wavenum'cancre = 1 if hedibca == 1
replace r`wavenum'cancre = 1 if preload == 1 & hedbdca != 2
label variable r`wavenum'cancre "r`wavenum'cancre:w`wavenum' r ever had cancer"

*wave 5 respondent cancer dispute flag
gen r`wavenum'cancrf =.
replace r`wavenum'cancrf = 0 if inlist(preload,0,1) | inlist(hedibca,-9,-8,0,1)
replace r`wavenum'cancrf = 3 if preload == 1 & hedbdca == 2
label variable r`wavenum'cancrf "r`wavenum'cancrf:w`wavenum' r flag dispute chg cancer"

*previous waves respondent cancer dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancrf = 6 if preload == 1 & hedbdca == 2 & r`w'cancrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancre = 0 if preload == 1 & hedbdca == 2 & r`w'cancre == 1
}

*value labels
label values r`wavenum'cancre health_problems
label values r`wavenum'cancrf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had lung disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'lunge if !mi(r`w'lunge) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had lung disease
gen r`wavenum'lunge =.
missing_w`wavenum' hedbdlu hediblu, result(r`wavenum'lunge)
replace r`wavenum'lunge = 0 if preload == 0 & hedbdlu != 2
replace r`wavenum'lunge = 0 if hediblu == 0
replace r`wavenum'lunge = 0 if preload == 1 & hedbdlu == 2
replace r`wavenum'lunge = 1 if hediblu == 1
replace r`wavenum'lunge = 1 if preload == 1 & hedbdlu != 2
label variable r`wavenum'lunge "r`wavenum'lunge:w`wavenum' r ever had lung disease"

*wave 5 respondent lung disease dispute flag
gen r`wavenum'lungf =.
replace r`wavenum'lungf = 0 if inlist(preload,0,1) | inlist(hediblu,-9,-8,0,1)
replace r`wavenum'lungf = 3 if preload == 1 & hedbdlu == 2
label variable r`wavenum'lungf "r`wavenum'lungf:w`wavenum' r flag dispute chg lung disease"

*previous waves respondent lung disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lungf = 6 if preload == 1 & hedbdlu == 2 & r`w'lungf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lunge = 0 if preload == 1 & hedbdlu == 2 & r`w'lunge == 1
}

*value labels
label values r`wavenum'lunge health_problems
label values r`wavenum'lungf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had heart problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hearte if !mi(r`w'hearte) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had heart problems
gen r`wavenum'hearte =.
missing_w`wavenum' hedacan hedacmi hedachf hedachm hedacar hedacot ///
   				 hediman hedimmi hedimhf hedimhm hedimar hedim85, result(r`wavenum'hearte)
replace r`wavenum'hearte = 0 if preload == 0 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedacot != 2
replace r`wavenum'hearte = 0 if ( hediman == 0 | hedimmi == 0 | hedimhf == 0 | hedimhm == 0 ///
																 | hedimar == 0 | hedim85 == 0 )
replace r`wavenum'hearte = 0 if preload == 1 & (hedacan == 2 | hedacmi == 2 | hedachf == 2 ///
																						  | hedachm == 2 | hedacar == 2 | hedacot == 2	)									 
replace r`wavenum'hearte = 1 if ( hediman == 1 | hedimmi == 1 | hedimhf == 1 | hedimhm == 1 ///
																 | hedimar == 1 | hedim85 == 1 )
replace r`wavenum'hearte = 1 if preload == 1 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedacot != 2
label variable r`wavenum'hearte "r`wavenum'hearte:w`wavenum' r ever had heart problems"

*wave 5 respondent heart problems dispute flag
gen r`wavenum'heartf =.
replace r`wavenum'heartf = 0 if inlist(preload,0,1) | inlist(hediman,-9,-8,0,1) | inlist(hedimmi,-9,-8,0,1) ///
																					 | inlist(hedimhf,-9,-8,0,1) | inlist(hedimhm,-9,-8,0,1) ///
																					 | inlist(hedimar,-9,-8,0,1) | inlist(hedim85,-9,-8,0,1)
replace r`wavenum'heartf = 3 if preload == 1 & (hedacan == 2 | hedacmi == 2 ///
																		          | hedachf == 2 | hedachm == 2 ///
																		          | hedacar == 2 | hedacot == 2)
label variable r`wavenum'heartf "r`wavenum'heartf:w`wavenum' r flag dispute chg heart problems"


*previous waves respondent heart problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'heartf = 6 if preload == 1 & ( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'heartf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hearte = 0 if preload == 1 & ///
															( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'hearte == 1
}

*value labels
label values r`wavenum'hearte health_problems
label values r`wavenum'heartf health_problems_flag

*check 
forvalues w = `wavenum' (-1) 1 {
}

drop preload

***Ever had stroke***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'stroke if !mi(r`w'stroke) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had stroke
gen r`wavenum'stroke =.
missing_w`wavenum' hedacst hedimst, result(r`wavenum'stroke)
replace r`wavenum'stroke = 0 if preload == 0 & hedacst != 2
replace r`wavenum'stroke = 0 if hedimst == 0
replace r`wavenum'stroke = 0 if preload == 1 & hedacst == 2
replace r`wavenum'stroke = 1 if hedimst == 1
replace r`wavenum'stroke = 1 if preload == 1 & hedacst != 2
label variable r`wavenum'stroke "r`wavenum'stroke:w`wavenum' r ever had stroke"

*wave 5 respondent stroke dispute flag
gen r`wavenum'strokf =.
replace r`wavenum'strokf = 0 if inlist(preload,0,1) | inlist(hedimst,-9,-8,0,1)
replace r`wavenum'strokf = 3 if preload == 1 & hedacst == 2
label variable r`wavenum'strokf "r`wavenum'strokf:w`wavenum' r flag dispute chg stroke"

*previous waves respondent stroke dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'strokf = 6 if preload == 1 & hedacst == 2 & r`w'strokf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'stroke = 0 if preload == 1 & hedacst == 2 & r`w'stroke == 1
}

*value labels
label values r`wavenum'stroke health_problems
label values r`wavenum'strokf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had psych problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'psyche if !mi(r`w'psyche) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had psych problems
gen r`wavenum'psyche =.
missing_w`wavenum' hedbdps hedibps, result(r`wavenum'psyche)
replace r`wavenum'psyche = 0 if preload == 0 & hedbdps != 2
replace r`wavenum'psyche = 0 if hedibps == 0
replace r`wavenum'psyche = 0 if preload == 1 & hedbdps == 2
replace r`wavenum'psyche = 1 if hedibps == 1
replace r`wavenum'psyche = 1 if preload == 1 & hedbdps != 2
label variable r`wavenum'psyche "r`wavenum'psyche:w`wavenum' r ever had psych problems"

*wave 5 respondent psych problems dispute flag
gen r`wavenum'psychf =.
replace r`wavenum'psychf = 0 if inlist(preload,0,1) | inlist(hedibps,-9,-8,0,1)
replace r`wavenum'psychf = 3 if preload == 1 & hedbdps == 2
label variable r`wavenum'psychf "r`wavenum'psychf:w`wavenum' r flag dispute chg psych problems"

*previous waves respondent psych problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psychf = 6 if preload == 1 & hedbdps == 2 & r`w'psychf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psyche = 0 if preload == 1 & hedbdps == 2 & r`w'psyche == 1
}

*value labels
label values r`wavenum'psyche health_problems
label values r`wavenum'psychf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had arthritis***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'arthre if !mi(r`w'arthre) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had arthritis
gen r`wavenum'arthre =.
missing_w`wavenum' hedbdar hedibar, result(r`wavenum'arthre)
replace r`wavenum'arthre = 0 if preload == 0 & hedbdar != 2
replace r`wavenum'arthre = 0 if hedibar == 0
replace r`wavenum'arthre = 0 if preload == 1 & hedbdar == 2
replace r`wavenum'arthre = 1 if hedibar == 1
replace r`wavenum'arthre = 1 if preload == 1 & hedbdar != 2
label variable r`wavenum'arthre "r`wavenum'arthre:w`wavenum' r ever had arthritis"

*wave 5 respondent arthritis dispute flag
gen r`wavenum'arthrf =.
replace r`wavenum'arthrf = 0 if inlist(preload,0,1) | inlist(hedibar,-9,-8,0,1)
replace r`wavenum'arthrf = 3 if preload == 1 & hedbdar == 2
label variable r`wavenum'arthrf "r`wavenum'arthrf:w`wavenum' r flag dispute chg arthritis"

*previous waves respondent arthritis dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthrf = 6 if preload == 1 & hedbdar == 2 & r`w'arthrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthre = 0 if preload == 1 & hedbdar == 2 & r`w'arthre == 1
}

*value labels
label values r`wavenum'arthre health_problems
label values r`wavenum'arthrf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}
drop preload

***Ever had memory-related problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'memrye if !mi(r`w'memrye) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had memory-related problems
gen r`wavenum'memrye =.
missing_w`wavenum' hedbdad hedbdde hedibad hedibde, result(r`wavenum'memrye)
replace r`wavenum'memrye = 0 if preload == 0 & hedbdad != 2 & hedbdde != 2
replace r`wavenum'memrye = 0 if ( hedibad == 0 | hedibde == 0 )
replace r`wavenum'memrye = 0 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
replace r`wavenum'memrye = 1 if ( hedibad == 1 | hedibde == 1 )
replace r`wavenum'memrye = 1 if preload == 1 & hedbdad != 2 & hedbdde != 2
label variable r`wavenum'memrye "r`wavenum'memrye:w`wavenum' r ever had memory problem"

*wave 5 respondent memory-related problems dispute flag
gen r`wavenum'memryf =.
replace r`wavenum'memryf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'memryf = 3 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
label variable r`wavenum'memryf "r`wavenum'memryf:w`wavenum' r flag chg previous memory prob"

*previous waves respondent memory-related problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memryf = 6 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memryf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memrye = 0 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memrye == 1
}

*value labels
label values r`wavenum'memrye health_problems
label values r`wavenum'memryf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had asthma***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'asthmae if !mi(r`w'asthmae) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had asthma
gen r`wavenum'asthmae =.
missing_w`wavenum' hedbdas hedibas, result(r`wavenum'asthmae)
replace r`wavenum'asthmae = 0 if preload == 0 & hedbdas != 2
replace r`wavenum'asthmae = 0 if hedibas == 0
replace r`wavenum'asthmae = 0 if preload == 1 & hedbdas == 2
replace r`wavenum'asthmae = 1 if hedibas == 1
replace r`wavenum'asthmae = 1 if preload == 1 & hedbdas != 2
label variable r`wavenum'asthmae "r`wavenum'asthmae:w`wavenum' r ever had asthma"

*wave 5 respondent asthma dispute flag
gen r`wavenum'asthmaf =.
replace r`wavenum'asthmaf = 0 if inlist(preload,0,1) | inlist(hedibas,-9,-8,0,1)
replace r`wavenum'asthmaf = 3 if preload == 1 & hedbdas == 2
label variable r`wavenum'asthmaf "r`wavenum'asthmaf:w`wavenum' r flag chg previous asthma"

*previous waves respondent asthma dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmaf = 6 if preload == 1 & hedbdas == 2 & r`w'asthmaf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmae = 0 if preload == 1 & hedbdas == 2 & r`w'asthmae == 1
}

*value labels
label values r`wavenum'asthmae health_problems
label values r`wavenum'asthmaf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had high cholesterol***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 2 {
	replace preload = r`w'hchole if !mi(r`w'hchole) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had high cholesterol
gen r`wavenum'hchole =.
missing_w`wavenum' hedimch hedacch, result(r`wavenum'hchole)
replace r`wavenum'hchole = 0 if preload == 0 & hedacch != 2
replace r`wavenum'hchole = 0 if hedimch==0
replace r`wavenum'hchole = 0 if preload == 1 & hedacch == 2
replace r`wavenum'hchole = 1 if hedimch == 1
replace r`wavenum'hchole = 1 if preload == 1 & hedacch != 2
label variable r`wavenum'hchole "r`wavenum'hchole:w`wavenum' r ever had high cholesterol"

*wave 5 respondent high cholesterol dispute flag
gen r`wavenum'hcholf =.
replace r`wavenum'hcholf = 0 if inlist(preload,0,1) | inlist(hedimch,-9,-8,0,1)
replace r`wavenum'hcholf = 3 if preload == 1 & hedacch == 2
label variable r`wavenum'hcholf "r`wavenum'hcholf:w`wavenum' r flag chg previous high cholesterol"

*previous waves respondent high cholesterol dispute flag
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hcholf = 6 if preload == 1 & hedacch == 2 & r`w'hcholf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hchole = 0 if preload == 1 & hedacch == 2 & r`w'hchole == 1
}

*value labels
label values r`wavenum'hchole health_problems
label values r`wavenum'hcholf health_problems_flag

drop preload

***Ever had cataracts***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'catrcte if !mi(r`w'catrcte) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had cataracts
gen r`wavenum'catrcte =.
missing_w`wavenum' heopcca heoptca, result(r`wavenum'catrcte)
replace r`wavenum'catrcte = 0 if preload == 0 & heopcca != 2
replace r`wavenum'catrcte = 0 if heoptca==0
replace r`wavenum'catrcte = 0 if preload == 1 & heopcca == 2
replace r`wavenum'catrcte = 1 if heoptca == 1
replace r`wavenum'catrcte = 1 if preload == 1 & heopcca != 2
label variable r`wavenum'catrcte "r`wavenum'catrcte:w`wavenum' r ever had cataracts"

*wave 5 respondent cataracts dispute flag
gen r`wavenum'catrctf =.
replace r`wavenum'catrctf = 0 if inlist(preload,0,1) | inlist(heoptca,-9,-8,0,1)
replace r`wavenum'catrctf = 3 if preload == 1 & heopcca == 2
label variable r`wavenum'catrctf "r`wavenum'catrctf:w`wavenum' r flag chg previous cataracts"

*previous waves respondent cataracts dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrctf = 6 if preload == 1 & heopcca == 2 & r`w'catrctf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrcte = 0 if preload == 1 & heopcca == 2 & r`w'catrcte == 1
}

*value labels
label values r`wavenum'catrcte health_problems
label values r`wavenum'catrctf health_problems_flag

drop preload

***Ever had parkinsons***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'parkine if !mi(r`w'parkine) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had parkinsons
gen r`wavenum'parkine =.
missing_w`wavenum' hedibpd hedbdpd, result(r`wavenum'parkine)
replace r`wavenum'parkine = 0 if preload == 0 & hedbdpd != 2
replace r`wavenum'parkine = 0 if hedibpd==0
replace r`wavenum'parkine = 0 if preload == 1 & hedbdpd == 2
replace r`wavenum'parkine = 1 if hedibpd == 1
replace r`wavenum'parkine = 1 if preload == 1 & hedbdpd != 2
label variable r`wavenum'parkine "r`wavenum'parkine:w`wavenum' r ever had parkinson disease"

*wave 5 respondent parkinsons dispute flag
gen r`wavenum'parkinf =.
replace r`wavenum'parkinf = 0 if inlist(preload,0,1) | inlist(hedibpd,-9,-8,0,1)
replace r`wavenum'parkinf = 3 if preload == 1 & hedbdpd == 2
label variable r`wavenum'parkinf "r`wavenum'parkinf:w`wavenum' r flag chg previous parkinson disease"

*previous waves respondent parkinsons dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkinf = 6 if preload == 1 & hedbdpd == 2 & r`w'parkinf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkine = 0 if preload == 1 & hedbdpd == 2 & r`w'parkine == 1
}

*value labels
label values r`wavenum'parkine health_problems
label values r`wavenum'parkinf health_problems_flag

drop preload

***Ever had hip fracture***
*wave 5 respondent ever had hip fracture
gen r`wavenum'hipe = .
missing_w`wavenum' hefrac, result(r`wavenum'hipe)
replace r`wavenum'hipe = .a if inrange(r`wavenum'agey,1,59) & hefrac==-1
replace r`wavenum'hipe = 0 if hefrac==2
replace r`wavenum'hipe = 1 if hefrac==1 | (r`pre_wavenum'hipe==1 & inw`wavenum' == 1)
label variable r`wavenum'hipe "r`wavenum'hipe:w`wavenum' r ever had hip fracture"
label values r`wavenum'hipe health_problems

*wave 5 spouse ever had hip fracture
gen s`wavenum'hipe = .
spouse r`wavenum'hipe, result(s`wavenum'hipe) wave(`wavenum')
label variable s`wavenum'hipe "s`wavenum'hipe:w`wavenum' s ever had hip fracture"
label values s`wavenum'hipe health_problems

***Ever had Alzheimers disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'alzhe if !mi(r`w'alzhe) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had Alzheimers disease
gen r`wavenum'alzhe =.
missing_w`wavenum' hedbdad hedibad, result(r`wavenum'alzhe)
replace r`wavenum'alzhe = 0 if preload == 0 & hedbdad != 2
replace r`wavenum'alzhe = 0 if hedibad == 0
replace r`wavenum'alzhe = 0 if preload == 1 & hedbdad == 2
replace r`wavenum'alzhe = 1 if hedibad == 1
replace r`wavenum'alzhe = 1 if preload == 1 & hedbdad != 2
label variable r`wavenum'alzhe "r`wavenum'alzhe:w`wavenum' r ever had alzheimers"

*wave 5 respondent Alzheimers disease dispute flag
gen r`wavenum'alzhf =.
replace r`wavenum'alzhf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1)
replace r`wavenum'alzhf = 3 if preload == 1 & hedbdad == 2
label variable r`wavenum'alzhf "r`wavenum'alzhf:w`wavenum' r flag chg previous alzheimers"

*previous waves respondent Alzheimers disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhf = 6 if preload == 1 & hedbdad == 2 & r`w'alzhf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhe = 0 if preload == 1 & hedbdad == 2 & r`w'alzhe == 1
}

*value labels
label values r`wavenum'alzhe health_problems
label values r`wavenum'alzhf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had Dementia***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'demene if !mi(r`w'demene) & mi(preload) & inw`wavenum'==1
}

*wave 5 respondent ever had Dementia
gen r`wavenum'demene =.
missing_w`wavenum' hedbdde hedibde, result(r`wavenum'demene)
replace r`wavenum'demene = 0 if preload == 0 & hedbdde != 2
replace r`wavenum'demene = 0 if hedibde == 0
replace r`wavenum'demene = 0 if preload == 1 & hedbdde == 2
replace r`wavenum'demene = 1 if hedibde == 1
replace r`wavenum'demene = 1 if preload == 1 & hedbdde != 2
label variable r`wavenum'demene "r`wavenum'demene:w`wavenum' r ever had dementia"

*wave 5 respondent Dementia dispute flag
gen r`wavenum'demenf =.
replace r`wavenum'demenf = 0 if inlist(preload,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'demenf = 3 if preload == 1 & hedbdde == 2
label variable r`wavenum'demenf "r`wavenum'demenf:w`wavenum' r flag chg previous dementia"

*previous waves respondent Dementia dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demenf = 6 if preload == 1 & hedbdde == 2 & r`w'demenf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demene = 0 if preload == 1 & hedbdde == 2 & r`w'demene == 1
}

*value labels
label values r`wavenum'demene health_problems
label values r`wavenum'demenf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

gen preiwy = .
gen preiwm = .
forvalues w = `pre_wavenum' (-1) 1 {
	 replace preiwy = r`w'iwindy if inw`w' ==1 & mi(preiwy)
	 replace preiwm = r`w'iwindm if inw`w' ==1 & mi(preiwm)
	}


**Health behavior Preventive behaviors****
*wave 5 respondent ever had mammogram
gen r`wavenum'mammoge = .
missing_w`wavenum' hemam, result(r`wavenum'mammoge)
replace r`wavenum'mammoge = .s if ragender==1 & inw`wavenum'==1
replace r`wavenum'mammoge = 0 if hemam==2
replace r`wavenum'mammoge = 1 if hemam==1
label variable r`wavenum'mammoge "r`wavenum'mammoge:w`wavenum' r ever had mammogram"
label values r`wavenum'mammoge health_prev

*wave 5 spouse ever had mammogram
gen s`wavenum'mammoge = .
spouse r`wavenum'mammoge, result(s`wavenum'mammoge) wave(`wavenum')
label variable s`wavenum'mammoge "s`wavenum'mammoge:w`wavenum' s ever had mammogram"
label values s`wavenum'mammoge health_prev

*wave 5 respondent had mammogram (x-ray of your breasts) last 2 yrs
gen r`wavenum'mammog =.
missing_w`wavenum' hemamty hemamtm hemam, result(r`wavenum'mammog)
replace r`wavenum'mammog = .s if ragender ==1 & inw`wavenum' == 1
replace r`wavenum'mammog = 0 if hemam == 2
replace r`wavenum'mammog = 0 if ((ym(r5iwindy,r5iwindm) - ym(hemamty, hemamtm) > 24 & preiwy == .) ///
															    | (ym(hemamty, hemamtm) < ym(preiwy,preiwm) & !mi(preiwy)))  ///
															  & !inlist(hemamty,-1,-8,-9) & !inlist(hemamtm,-1,-8,-9) & inw5==1
replace r`wavenum'mammog = 0 if r5iwindy - hemamty > 2 & !mi(r5iwindy) & !inlist(hemamty,-1,-8,-9) & inw5==1 & mi(r`wavenum'mammog)											
replace r`wavenum'mammog = 1 if ((ym(r5iwindy,r5iwindm) - ym(hemamty, hemamtm)   <= 24 & preiwy == .) ///
														  | ((ym(hemamty, hemamtm) >= ym(preiwy,preiwm)) & !mi(preiwy))) ///
														   & !inlist(hemamty,-1,-8,-9) & !inlist(hemamtm,-1,-8,-9) & inw5==1
replace r`wavenum'mammog = 1 if r5iwindy - hemamty <=2 & !mi(r5iwindy) & !inlist(hemamty,-1,-8,-9) & inw5==1 & mi(r`wavenum'mammog)
label variable r`wavenum'mammog "r`wavenum'mammog:w`wavenum' r prev mammogram last 2 yrs"
label values r`wavenum'mammog health_prev

*wave 5 spouse had mammogram (x-ray of your breasts) last 2 yrs
gen s`wavenum'mammog =.
spouse r`wavenum'mammog, result(s`wavenum'mammog) wave(`wavenum')
label variable s`wavenum'mammog "s`wavenum'mammog:w`wavenum' S prev mammogram last 2 yrs"
label values s`wavenum'mammog health_prev

*wave 5 respondent ever had prostate test
gen r`wavenum'proste = .
missing_w`wavenum' hepro, result(r`wavenum'proste)
replace r`wavenum'proste = .s if ragender==2 & inw`wavenum'==1
replace r`wavenum'proste = 0 if hepro==2
replace r`wavenum'proste = 1 if hepro==1
label variable r`wavenum'proste "r`wavenum'proste:w`wavenum' r ever had prostate test"
label values r`wavenum'proste health_prev

*wave 5 spouse ever had prostate test
gen s`wavenum'proste = .
spouse r`wavenum'proste, result(s`wavenum'proste) wave(`wavenum')
label variable s`wavenum'proste "s`wavenum'proste:w`wavenum' s ever had prostate test"
label values s`wavenum'proste health_prev

*wave 5 respondent had prostate-specific antigen (PSA) blood test or other test last 2 yrs
gen r`wavenum'prost =.
missing_w`wavenum' heproty heprotm hepro, result(r`wavenum'prost)
replace r`wavenum'prost = .s if ragender ==2 & inw`wavenum' == 1
replace r`wavenum'prost = 0 if hepro ==2
replace r`wavenum'prost = 0 if ((ym(r5iwindy,r5iwindm) - ym(heproty,heprotm) > 24 & preiwy == .) ///
															    | (ym(heproty, heprotm) < ym(preiwy,preiwm) & !mi(preiwy))) ///
															  & !inlist(heproty,-1,-8,-9) & !inlist(heprotm,-1,-8,-9) & inw5==1
replace r`wavenum'prost = 0 if r5iwindy - heproty > 2 & !mi(r5iwindy) & !inlist(heproty,-1,-8,-9) & inw5==1 & mi(r`wavenum'prost)
replace r`wavenum'prost = 1 if ((ym(r5iwindy,r5iwindm) - ym(heproty,heprotm)   <= 24 & preiwy == .) ///
														  | ((ym(heproty,heprotm) >= ym(preiwy,preiwm)) & !mi(preiwy))) ///
														   & !inlist(heproty,-1,-8,-9) & !inlist(heprotm,-1,-8,-9) & inw5==1
replace r`wavenum'prost = 1 if r5iwindy - heproty <= 2 & !mi(r5iwindy) & !inlist(heproty,-1,-8,-9) & inw5==1 & mi(r`wavenum'prost)
label variable r`wavenum'prost "r`wavenum'prost:w`wavenum' r prev prostate test last 2 yrs"
label values r`wavenum'prost health_prev

*wave 5 spouse had prostate-specific antigen (PSA) last 2 yrs
gen s`wavenum'prost =.
spouse r`wavenum'prost, result(s`wavenum'prost) wave(`wavenum')
label variable s`wavenum'prost "s`wavenum'prost:w`wavenum' S prev prostate test last 2 yrs"
label values s`wavenum'prost health_prev

drop preiwy preiwm

***Vigorous physical activity***
*wave 5 respondent vigorous physical activity
gen r`wavenum'vgactx_e =.
missing_w`wavenum' heacta, result(r`wavenum'vgactx_e)
replace r`wavenum'vgactx_e =.p if askpx == 1
replace r`wavenum'vgactx_e = 2 if heacta == 1
replace r`wavenum'vgactx_e = 3 if heacta == 2
replace r`wavenum'vgactx_e = 4 if heacta == 3
replace r`wavenum'vgactx_e = 5 if heacta == 4
label variable r`wavenum'vgactx_e "r`wavenum'vgactx_e:w`wavenum' R Freq vigorous phys activ"

*wave 5 spouse vigorous physical activity
gen s`wavenum'vgactx_e =.
spouse r`wavenum'vgactx_e, result(s`wavenum'vgactx_e) wave(`wavenum')
label variable s`wavenum'vgactx_e "s`wavenum'vgactx_e:w`wavenum' S Freq vigorous phys activ"

*label values
label values r`wavenum'vgactx_e activity
label values s`wavenum'vgactx_e activity

*check 

***Moderate physical activity***
*wave 5 respondent moderate physical activity
gen r`wavenum'mdactx_e =.
missing_w`wavenum' heactb, result(r`wavenum'mdactx_e)
replace r`wavenum'mdactx_e = 2 if heactb == 1
replace r`wavenum'mdactx_e = 3 if heactb == 2
replace r`wavenum'mdactx_e = 4 if heactb == 3
replace r`wavenum'mdactx_e = 5 if heactb == 4
label variable r`wavenum'mdactx_e "r`wavenum'mdactx_e:w`wavenum' R Freq moderate phys activ"

*wave 5 spouse vigorous moderate activity
gen s`wavenum'mdactx_e =.
spouse r`wavenum'mdactx_e, result(s`wavenum'mdactx_e) wave(`wavenum')
label variable s`wavenum'mdactx_e "s`wavenum'mdactx_e:w`wavenum' S Freq moderate phys activ"

*label values
label values r`wavenum'mdactx_e activity
label values s`wavenum'mdactx_e activity

*check 

***Light physical activity***
*wave 5 respondent light physical activity
gen r`wavenum'ltactx_e =.
missing_w`wavenum' heactc, result(r`wavenum'ltactx_e)
replace r`wavenum'ltactx_e = 2 if heactc == 1
replace r`wavenum'ltactx_e = 3 if heactc == 2
replace r`wavenum'ltactx_e = 4 if heactc == 3
replace r`wavenum'ltactx_e = 5 if heactc == 4
label variable r`wavenum'ltactx_e "r`wavenum'ltactx_e:w`wavenum' R Freq light phys activ"

*wave 5 spouse vigorous light activity
gen s`wavenum'ltactx_e =.
spouse r`wavenum'ltactx_e, result(s`wavenum'ltactx_e) wave(`wavenum')
label variable s`wavenum'ltactx_e "s`wavenum'ltactx_e:w`wavenum' S Freq light phys activ"

*label values
label values r`wavenum'ltactx_e activity
label values s`wavenum'ltactx_e activity

*check 

***Ever drinks alcohol***
*wave 5 respondent ever drinks alcohol
gen r`wavenum'drink =.
replace r`wavenum'drink =.m if scako == -9
replace r`wavenum'drink =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drink = 0 if scako == 8
replace r`wavenum'drink = 1 if inrange(scako,1,7)
label variable r`wavenum'drink "r`wavenum'drink:w`wavenum' R ever drinks any alcohol"

*wave 5 spouse ever drinks alcohol
gen s`wavenum'drink =.
spouse r`wavenum'drink, result(s`wavenum'drink) wave(`wavenum')
label variable s`wavenum'drink "s`wavenum'drink:w`wavenum' S ever drinks any alcohol"

*label values
label values r`wavenum'drink ever_drink
label values s`wavenum'drink ever_drink

*check 

***Days per week drinks***
*wave 5 respondent days per week drinks
gen r`wavenum'drinkd_e =.
replace r`wavenum'drinkd_e =.m if scako == -9 | scal7a == -9 | scal7b == -9
replace r`wavenum'drinkd_e =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drinkd_e = 0 if scako == 8 | scal7a == 2
replace r`wavenum'drinkd_e = 1 if scal7b == 1
replace r`wavenum'drinkd_e = 2 if scal7b == 2
replace r`wavenum'drinkd_e = 3 if scal7b == 3
replace r`wavenum'drinkd_e = 4 if scal7b == 4
replace r`wavenum'drinkd_e = 5 if scal7b == 5
replace r`wavenum'drinkd_e = 6 if scal7b == 6
replace r`wavenum'drinkd_e = 7 if scal7b == 7
label variable r`wavenum'drinkd_e "r`wavenum'drinkd_e:w`wavenum' R # days/week drinks"

*wave 5 spouse days per week drinks
gen s`wavenum'drinkd_e =.
spouse r`wavenum'drinkd_e, result(s`wavenum'drinkd_e) wave(`wavenum')
label variable s`wavenum'drinkd_e "s`wavenum'drinkd_e:w`wavenum' S # days/week drinks"

**label values
*label values r`wavenum'drinkd_e drinks_flag
*label values s`wavenum'drinkd_e drinks_flag

*check 

***Drinks per week***
*wave 5 respondent drinks per week
gen r`wavenum'drinkwn_e =.
replace r`wavenum'drinkwn_e =.m if scako == -9 | scal7a == -9 | scal7b == -9 | scdrspi == -9 | scdrwin == -9 | scdrpin == -9 | scako == -2
replace r`wavenum'drinkwn_e = .c if inw`wavenum'sc==0 & inw`wavenum'==1
replace r`wavenum'drinkwn_e = 0 if scako == 8 | inlist(scal7a,1,2) | inrange(scal7b,1,7)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrspi if !inlist(scdrspi,-9,-2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrwin if !inlist(scdrwin,-9,-2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrpin if !inlist(scdrpin,-9,-2,-1)
label variable r`wavenum'drinkwn_e "r`wavenum'drinkwn_e:w`wavenum' R # drinks/week"
replace r`wavenum'drinkwn_e=round(r`wavenum'drinkwn_e)

*wave 5 spouse drinks per week
gen s`wavenum'drinkwn_e =.
spouse r`wavenum'drinkwn_e, result(s`wavenum'drinkwn_e) wave(`wavenum')
label variable s`wavenum'drinkwn_e "s`wavenum'drinkwn_e:w`wavenum' S # drinks/week"

**label values
*label values r`wavenum'drinkwn_e drinks_flag
*label values s`wavenum'drinkwn_e drinks_flag

*check 

***Ever smoked cigarettes***
*wave 5 respondent ever smoked cigarettes
local smokever
gen r`wavenum'smokev =.
missing_w`wavenum' hesmk heske, result(r`wavenum'smokev)
replace r`wavenum'smokev =.p if askpx == 1
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'smokev = r`w'smokev if inlist(r`w'smokev,0,1) & inw`wavenum'==1
	local smokever `smokever' r`w'smokev
}
replace r`wavenum'smokev = 0 if hesmk == 2 | heske == 1
replace r`wavenum'smokev = 1 if hesmk == 1 | inlist(heske,2,3)
label variable r`wavenum'smokev "r`wavenum'smokev:w`wavenum' R smoke ever"

*wave 5 spouse ever smoked cigarettes
gen s`wavenum'smokev =.
spouse r`wavenum'smokev, result(s`wavenum'smokev) wave(`wavenum')
label variable s`wavenum'smokev "s`wavenum'smokev:w`wavenum' S smoke ever"

*previous waves ever smoked if disputed
forvalues w = 1/`pre_wavenum' {
	replace r`w'smokev=0 if heske==1 & r`w'smokev==1
}

*label values
label values r`wavenum'smokev smokes
label values s`wavenum'smokev smokes

*check 

***Smokes cigarettes now***
*wave 5 respondent smokes cigarettes now
gen r`wavenum'smoken =.
missing_w`wavenum' hesmk heska, result(r`wavenum'smoken)
replace r`wavenum'smoken =.p if askpx == 1
replace r`wavenum'smoken = 0 if hesmk == 2 | heska == 2
replace r`wavenum'smoken = 1 if heska == 1
label variable r`wavenum'smoken "r`wavenum'smoken:w`wavenum' R smokes now"

*wave 5 spouse smokes cigarettes now
gen s`wavenum'smoken =.
spouse r`wavenum'smoken, result(s`wavenum'smoken) wave(`wavenum')
label variable s`wavenum'smoken "s`wavenum'smoken:w`wavenum' S smokes now"

*previous waves smokes now if disputed
tempvar stop
gen `stop'=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace `stop'=1 if heske==2 & r`w'smoken==1 & mi(`stop')
	replace r`w'smoken=0 if heske==2 & r`w'smoken==1 & `stop'!=2
	replace `stop'=2 if r`w'smoken==0 & `stop'==1
}

forvalues w = 1/`pre_wavenum' {
	replace r`w'smoken=0 if heske==1 & r`w'smoken==1
}

*label values
label values r`wavenum'smoken smokes
label values s`wavenum'smoken smokes

*check 

**Smoking frequency ****
*wave 5 respondent smoking frequency
gen r`wavenum'smokef = .
missing_w`wavenum' hesmk heska heskb heskc hecig , result(r`wavenum'smokef)
replace r`wavenum'smokef = 0  if r`wavenum'smoken == 0
replace r`wavenum'smokef = 0  if hecig ==2
replace r`wavenum'smokef = (heskb*5 + heskc*2)/7  if !inlist(heskb,-1,-8,-9) & !inlist(heskc,-1,-8,-9) 

label var r`wavenum'smokef "r`wavenum'smokef:w`wavenum' R # cigarettes/day"

*wave 5 spouse smoking frequency
gen s`wavenum'smokef = .
spouse r`wavenum'smokef, result(s`wavenum'smokef) wave(`wavenum')
label var s`wavenum'smokef "s`wavenum'smokef:w`wavenum' S # cigarettes/day"


***drop ELSA wave specific core file raw variables***
drop `health_w`wavenum'_core'

******************************************************************************************



*set wave number
local wavenum=6
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave specific core data***
local health_w`wavenum'_core askpx Hehelf HeLWk ///
								 headl?? hemob?? ///
								PScedA PScedB PScedC PScedD PScedE PScedF PScedG PScedH ///
								 hedia?? hedim?? hedib?? hedac?? hedbd?? ///
								 HeActa HeActb HeActc HEMam HEPro hemamty hemamtm heproty heprotm ///
								 scako scal7a scal7b scdrspi scdrwin scdrpin  /// 
								 HESka HeSkb HeSkc HeSkd HeSke HeSkf HeSmk HECig ///
								 heoptca heopcca HeFrac
merge 1:1 idauniq using "$wave_6_core", keepusing(`health_w`wavenum'_core') nogen

***merge with wave specific nurse data***
local health_w`wavenum'_nurse HTVAL WTVAL HTOK WTOK
merge 1:1 idauniq using "$wave_6_nurs", keepusing(`health_w`wavenum'_nurse') 
tempvar inw`wavenum'nurse
gen `inw`wavenum'nurse' = 0
replace `inw`wavenum'nurse' = 1 if _merge == 3
drop _merge


***self-report of health***
*wave 6 respondent self-report of health
gen r`wavenum'shlt =.
missing_w`wavenum' Hehelf, result(r`wavenum'shlt)
replace r`wavenum'shlt = .p if askpx == 1
replace r`wavenum'shlt = Hehelf if inrange(Hehelf,1,5)
label variable r`wavenum'shlt "r`wavenum'shlt:w`wavenum' r self-report of health"

*wave 6 spouse self-report of health
gen s`wavenum'shlt =.
spouse r`wavenum'shlt, result(s`wavenum'shlt) wave(`wavenum')
label variable s`wavenum'shlt "s`wavenum'shlt:w`wavenum' s self-report of health"

*value labels
label values r`wavenum'shlt health
label values s`wavenum'shlt health

*check 

***Whether health limits work***
*wave 6 respondent whether health limits work
gen r`wavenum'hlthlm =.
missing_w`wavenum' HeLWk, result(r`wavenum'hlthlm)
replace r`wavenum'hlthlm = .p if askpx == 1
replace r`wavenum'hlthlm = 0 if HeLWk == 2
replace r`wavenum'hlthlm = 1 if HeLWk == 1
label variable r`wavenum'hlthlm "r`wavenum'hlthlm:w`wavenum' r hlth problems limit work"

*wave 6 spouse whether health limits work
gen s`wavenum'hlthlm =.
spouse r`wavenum'hlthlm, result(s`wavenum'hlthlm) wave(`wavenum')
label variable s`wavenum'hlthlm "s`wavenum'hlthlm:w`wavenum' s hlth problems limit work"

*value labels
label values r`wavenum'hlthlm limitwork
label values s`wavenum'hlthlm limitwork

*check 

***Some difficulty walking cross room***
*wave 6 respondent difficulty walking across room
gen r`wavenum'walkra =.
missing_w`wavenum' headlwa, result(r`wavenum'walkra)
replace r`wavenum'walkra = 0 if headlwa==0
replace r`wavenum'walkra = 1 if headlwa==1
label variable r`wavenum'walkra "r`wavenum'walkra:w`wavenum' R Some Diff-Walk across room"

*wave 6 spouse difficulty walking across room
gen s`wavenum'walkra =.
spouse r`wavenum'walkra, result(s`wavenum'walkra) wave(`wavenum')
label variable s`wavenum'walkra "s`wavenum'walkra:w`wavenum' S Some Diff-Walk across room"

*value labels
label values r`wavenum'walkra diff
label values s`wavenum'walkra diff

*check 

***Some difficulty dressing***
*wave 6 respondent difficulty dressing
gen r`wavenum'dressa =.
missing_w`wavenum' headldr, result(r`wavenum'dressa)
replace r`wavenum'dressa = 0 if headldr==0
replace r`wavenum'dressa = 1 if headldr==1
label variable r`wavenum'dressa "r`wavenum'dressa:w`wavenum' R Some Diff-Dressing"

*wave 6 spouse difficulty dressing
gen s`wavenum'dressa =.
spouse r`wavenum'dressa, result(s`wavenum'dressa) wave(`wavenum')
label variable s`wavenum'dressa "s`wavenum'dressa:w`wavenum' S Some Diff-Dressing"

*value labels
label values r`wavenum'dressa diff
label values s`wavenum'dressa diff

*check 

***Some difficulty bathing, shower***
*wave 6 respondent difficulty bathing, shower
gen r`wavenum'batha =.
missing_w`wavenum' headlba, result(r`wavenum'batha)
replace r`wavenum'batha = 0 if headlba==0
replace r`wavenum'batha = 1 if headlba==1
label variable r`wavenum'batha "r`wavenum'batha:w`wavenum' R Some Diff-Bathing, shower"

*wave 6 spouse difficulty bathing, shower
gen s`wavenum'batha =.
spouse r`wavenum'batha, result(s`wavenum'batha) wave(`wavenum')
label variable s`wavenum'batha "s`wavenum'batha:w`wavenum' S Some Diff-Bathing, shower"

*value labels
label values r`wavenum'batha diff
label values s`wavenum'batha diff

*check 

***Some difficulty eating***
*wave 6 respondent difficulty eating
gen r`wavenum'eata =.
missing_w`wavenum' headlea, result(r`wavenum'eata)
replace r`wavenum'eata = 0 if headlea==0
replace r`wavenum'eata = 1 if headlea==1
label variable r`wavenum'eata "r`wavenum'eata:w`wavenum' R Some Diff-Eating"

*wave 6 spouse difficulty eating
gen s`wavenum'eata =.
spouse r`wavenum'eata, result(s`wavenum'eata) wave(`wavenum')
label variable s`wavenum'eata "s`wavenum'eata:w`wavenum' S Some Diff-Eating"

*value labels
label values r`wavenum'eata diff
label values s`wavenum'eata diff

*check 

***Some difficulty getting in/out of bed***
*wave 6 respondent difficulty getting in/out of bed
gen r`wavenum'beda =.
missing_w`wavenum' headlbe, result(r`wavenum'beda)
replace r`wavenum'beda = 0 if headlbe==0
replace r`wavenum'beda = 1 if headlbe==1
label variable r`wavenum'beda "r`wavenum'beda:w`wavenum' R Some Diff-Get in/out bed"

*wave 6 spouse difficulty getting in/out of bed
gen s`wavenum'beda =.
spouse r`wavenum'beda, result(s`wavenum'beda) wave(`wavenum')
label variable s`wavenum'beda "s`wavenum'beda:w`wavenum' S Some Diff-Get in/out bed"

*value labels
label values r`wavenum'beda diff
label values s`wavenum'beda diff

*check 

***Some difficulty using the toilet***
*wave 6 respondent difficulty using the toilet
gen r`wavenum'toilta =.
missing_w`wavenum' headlwc, result(r`wavenum'toilta)
replace r`wavenum'toilta = 0 if headlwc==0
replace r`wavenum'toilta = 1 if headlwc==1
label variable r`wavenum'toilta "r`wavenum'toilta:w`wavenum' R Some Diff-Using the toilet"

**wave 6 spouse difficulty using the toilet
gen s`wavenum'toilta =.
spouse r`wavenum'toilta, result(s`wavenum'toilta) wave(`wavenum')
label variable s`wavenum'toilta "s`wavenum'toilta:w`wavenum' S Some Diff-Using the toilet"

*value labels
label values r`wavenum'toilta diff
label values s`wavenum'toilta diff

*check 

***Some difficulty using using a map***
*wave 6 respondent difficulty using a map
gen r`wavenum'mapa =.
missing_w`wavenum' headlma, result(r`wavenum'mapa)
replace r`wavenum'mapa = 0 if headlma==0
replace r`wavenum'mapa = 1 if headlma==1
label variable r`wavenum'mapa "r`wavenum'mapa:w`wavenum' R Some Diff-Use a map"

*wave 6 spouse difficulty using a map
gen s`wavenum'mapa =.
spouse r`wavenum'mapa, result(s`wavenum'mapa) wave(`wavenum')
label variable s`wavenum'mapa "s`wavenum'mapa:w`wavenum' S Some Diff-Use a map"

*value labels
label values r`wavenum'mapa diff
label values s`wavenum'mapa diff

*check 

***Some difficulty using a telephone***
*wave 6 respondent difficulty using a telephone
gen r`wavenum'phonea =.
missing_w`wavenum' headlph, result(r`wavenum'phonea)
replace r`wavenum'phonea = 0 if headlph==0
replace r`wavenum'phonea = 1 if headlph==1
label variable r`wavenum'phonea "r`wavenum'phonea:w`wavenum' R Some Diff-Use a telephone"

*wave 6 spouse difficulty using a telephone
gen s`wavenum'phonea =.
spouse r`wavenum'phonea, result(s`wavenum'phonea) wave(`wavenum')
label variable s`wavenum'phonea "s`wavenum'phonea:w`wavenum' S Some Diff-Use a telephone"

*value labels
label values r`wavenum'phonea diff
label values s`wavenum'phonea diff

*check 
***Some difficulty manging money***
*wave 6 respondent difficulty manging money
gen r`wavenum'moneya =.
missing_w`wavenum' headlmo, result(r`wavenum'moneya)
replace r`wavenum'moneya = 0 if headlmo==0
replace r`wavenum'moneya = 1 if headlmo==1
label variable r`wavenum'moneya "r`wavenum'moneya:w`wavenum' R Some Diff-Managing money"

*wave 6 spouse difficulty manging money
gen s`wavenum'moneya =.
spouse r`wavenum'moneya, result(s`wavenum'moneya) wave(`wavenum')
label variable s`wavenum'moneya "s`wavenum'moneya:w`wavenum' S Some Diff-Managing money"

*value labels
label values r`wavenum'moneya diff
label values s`wavenum'moneya diff

*check 

***Some difficulty taking medications***
*wave 6 respondent difficulty taking medications
gen r`wavenum'medsa =.
missing_w`wavenum' headlme, result(r`wavenum'medsa)
replace r`wavenum'medsa = 0 if headlme==0
replace r`wavenum'medsa = 1 if headlme==1
label variable r`wavenum'medsa "r`wavenum'medsa:w`wavenum' R Some Diff-Take medications"

*wave 6 spouse difficulty taking medications
gen s`wavenum'medsa =.
spouse r`wavenum'medsa, result(s`wavenum'medsa) wave(`wavenum')
label variable s`wavenum'medsa "s`wavenum'medsa:w`wavenum' S Some Diff-Take medications"

*value labels
label values r`wavenum'medsa diff
label values s`wavenum'medsa diff

*check 

***Some difficulty shopping for groceries***
*wave 6 respondent difficulty shopping for groceries
gen r`wavenum'shopa =.
missing_w`wavenum' headlsh, result(r`wavenum'shopa)
replace r`wavenum'shopa = 0 if headlsh==0
replace r`wavenum'shopa = 1 if headlsh==1
label variable r`wavenum'shopa "r`wavenum'shopa:w`wavenum' R Some Diff-Shop for grocery"

*wave 6 spouse difficulty shopping for groceries
gen s`wavenum'shopa =.
spouse r`wavenum'shopa, result(s`wavenum'shopa) wave(`wavenum')
label variable s`wavenum'shopa "s`wavenum'shopa:w`wavenum' S Some Diff-Shop for grocery"

*value labels
label values r`wavenum'shopa diff
label values s`wavenum'shopa diff

*check 

***Some difficulty preparing a hot meal***
*wave 6 respondent difficulty preparing a hot meal
gen r`wavenum'mealsa =.
missing_w`wavenum' headlpr, result(r`wavenum'mealsa)
replace r`wavenum'mealsa = 0 if headlpr==0
replace r`wavenum'mealsa = 1 if headlpr==1
label variable r`wavenum'mealsa "r`wavenum'mealsa:w`wavenum' R Some Diff-Prepare hot meal"

*wave 6 spouse difficulty preparing a hot meal
gen s`wavenum'mealsa =.
spouse r`wavenum'mealsa, result(s`wavenum'mealsa) wave(`wavenum')
label variable s`wavenum'mealsa "s`wavenum'mealsa:w`wavenum' S Some Diff-Prepare hot meal"

*value labels
label values r`wavenum'mealsa diff
label values s`wavenum'mealsa diff

*check 

***Some difficulty Doing work around the house or garden***
*wave 6 respondent difficulty Doing work around the house or garden
gen r`wavenum'housewka =.
missing_w`wavenum' headlho, result(r`wavenum'housewka)
replace r`wavenum'housewka = 0 if headlho==0
replace r`wavenum'housewka = 1 if headlho==1
label variable r`wavenum'housewka "r`wavenum'housewka:w`wavenum' R Some Diff-Doing work around the house or garden"

*wave 6 spouse difficulty Doing work around the house or garden
gen s`wavenum'housewka =.
spouse r`wavenum'housewka, result(s`wavenum'housewka) wave(`wavenum')
label variable s`wavenum'housewka "s`wavenum'housewka:w`wavenum' S Some Diff-Doing work around the house or garden"

*value labels
label values r`wavenum'housewka diff
label values s`wavenum'housewka diff

*check 


***Difficulty Walking 100m***
*wave 6 respondent difficulty walking 100m
gen r`wavenum'walk100a =.
missing_w`wavenum' hemobwa, result(r`wavenum'walk100a)
replace r`wavenum'walk100a = 0 if hemobwa==0
replace r`wavenum'walk100a = 1 if hemobwa==1
label variable r`wavenum'walk100a "r`wavenum'walk100a:w`wavenum' R Some Diff-Walk 100y"

*wave 6 spouse difficulty walking 100m
gen s`wavenum'walk100a =.
spouse r`wavenum'walk100a, result(s`wavenum'walk100a) wave(`wavenum')
label variable s`wavenum'walk100a "s`wavenum'walk100a:w`wavenum' S Some Diff-Walk 100y"

*value labels
label values r`wavenum'walk100a diff
label values s`wavenum'walk100a diff

*check 

***Difficulty sitting for 2 hours***
*wave 6 respondent difficulty sitting for 2 hours
gen r`wavenum'sita =.
missing_w`wavenum' hemobsi, result(r`wavenum'sita)
replace r`wavenum'sita = 0 if hemobsi==0
replace r`wavenum'sita = 1 if hemobsi==1
label variable r`wavenum'sita "r`wavenum'sita:w`wavenum' R Some Diff-Sit for 2 hours"

*wave 6 spouse difficulty sitting for 2 hours
gen s`wavenum'sita =.
spouse r`wavenum'sita, result(s`wavenum'sita) wave(`wavenum')
label variable s`wavenum'sita "s`wavenum'sita:w`wavenum' S Some Diff-Sit for 2 hours"

*value labels
label values r`wavenum'sita diff
label values s`wavenum'sita diff

*check 

***Difficulty getting up from a chair***
*wave 6 respondent difficulty getting up from a chair
gen r`wavenum'chaira =.
missing_w`wavenum' hemobch, result(r`wavenum'chaira)
replace r`wavenum'chaira = 0 if hemobch==0
replace r`wavenum'chaira = 1 if hemobch==1
label variable r`wavenum'chaira "r`wavenum'chaira:w`wavenum' R Some Diff-Get up fr chair"

*wave 6 spouse difficulty getting up from a chair
gen s`wavenum'chaira =.
spouse r`wavenum'chaira, result(s`wavenum'chaira) wave(`wavenum')
label variable s`wavenum'chaira "s`wavenum'chaira:w`wavenum' S Some Diff-Get up fr chair"

*value labels
label values r`wavenum'chaira diff
label values s`wavenum'chaira diff

*check 

***Difficulty climbing several flights of stairs***
*wave 6 respondent difficulty climbing several flights of stairs
gen r`wavenum'climsa =.
missing_w`wavenum' hemobcs, result(r`wavenum'climsa)
replace r`wavenum'climsa = 0 if hemobcs==0
replace r`wavenum'climsa = 1 if hemobcs==1
label variable r`wavenum'climsa "r`wavenum'climsa:w`wavenum' R Some Diff-Clmb sev flt str"

*wave 6 spouse difficulty climbing several flights of stairs
gen s`wavenum'climsa =.
spouse r`wavenum'climsa, result(s`wavenum'climsa) wave(`wavenum')
label variable s`wavenum'climsa "s`wavenum'climsa:w`wavenum' S Some Diff-Clmb sev flt str"

*value labels
label values r`wavenum'climsa diff
label values s`wavenum'climsa diff

*check 

***Difficulty climbing one flight of stairs***
*wave 6 respondent difficulty climbing one flight of stairs
gen r`wavenum'clim1a =.
missing_w`wavenum' hemobcl, result(r`wavenum'clim1a)
replace r`wavenum'clim1a = 0 if hemobcl==0
replace r`wavenum'clim1a = 1 if hemobcl==1
label variable r`wavenum'clim1a "r`wavenum'clim1a:w`wavenum' R Some Diff-Clmb 1 flt str"

*wave 6 spouse difficulty climbing one flight of stairs
gen s`wavenum'clim1a =.
spouse r`wavenum'clim1a, result(s`wavenum'clim1a) wave(`wavenum')
label variable s`wavenum'clim1a "s`wavenum'clim1a:w`wavenum' S Some Diff-Clmb 1 flt str"

*value labels
label values r`wavenum'clim1a diff
label values s`wavenum'clim1a diff

*check 

***Difficulty stooping/keeling/crouching***
*wave 6 respondent difficulty stooping/keeling/crouching
gen r`wavenum'stoopa =.
missing_w`wavenum' hemobst, result(r`wavenum'stoopa)
replace r`wavenum'stoopa = 0 if hemobst==0
replace r`wavenum'stoopa = 1 if hemobst==1
label variable r`wavenum'stoopa "r`wavenum'stoopa:w`wavenum' R Some Diff-Stoop/Kneel/Crch"

*wave 6 spouse difficulty stooping/keeling/crouching
gen s`wavenum'stoopa =.
spouse r`wavenum'stoopa, result(s`wavenum'stoopa) wave(`wavenum')
label variable s`wavenum'stoopa "s`wavenum'stoopa:w`wavenum' S Some Diff-Stoop/Kneel/Crch"

*value labels
label values r`wavenum'stoopa diff
label values s`wavenum'stoopa diff

*check 

***Difficulty lifting/carrying 10lbs***
*wave 6 respondent difficulty lifting/carrying 10lbs
gen r`wavenum'lifta =.
missing_w`wavenum' hemobli, result(r`wavenum'lifta)
replace r`wavenum'lifta = 0 if hemobli==0
replace r`wavenum'lifta = 1 if hemobli==1
label variable r`wavenum'lifta "r`wavenum'lifta:w`wavenum' R Some Diff-Lift/carry 10lbs"

*wave 6 spouse difficulty lifting/carrying 10lbs
gen s`wavenum'lifta =.
spouse r`wavenum'lifta, result(s`wavenum'lifta) wave(`wavenum')
label variable s`wavenum'lifta "s`wavenum'lifta:w`wavenum' S Some Diff-Lift/carry 10lbs"

*value labels
label values r`wavenum'lifta diff
label values s`wavenum'lifta diff

*check 

***Difficulty picking up a dime***
*wave 6 respondent difficulty picking up a dime
gen r`wavenum'dimea =.
missing_w`wavenum' hemobpi, result(r`wavenum'dimea)
replace r`wavenum'dimea = 0 if hemobpi==0
replace r`wavenum'dimea = 1 if hemobpi==1
label variable r`wavenum'dimea "r`wavenum'dimea:w`wavenum' R Some Diff-Pick up a 5p coin"

*wave 6 spouse difficulty picking up a dime
gen s`wavenum'dimea =.
spouse r`wavenum'dimea, result(s`wavenum'dimea) wave(`wavenum')
label variable s`wavenum'dimea "s`wavenum'dimea:w`wavenum' S Some Diff-Pick up a 5p coin"

*value labels
label values r`wavenum'dimea diff
label values s`wavenum'dimea diff

*check 

***Difficulty reaching/extending arms up***
*wave 6 respondent difficulty reaching/extending arms up
gen r`wavenum'armsa =.
missing_w`wavenum' hemobre, result(r`wavenum'armsa)
replace r`wavenum'armsa = 0 if hemobre==0
replace r`wavenum'armsa = 1 if hemobre==1
label variable r`wavenum'armsa "r`wavenum'armsa:w`wavenum' R Some Diff-Rch/xtnd arms up"

*wave 6 spouse difficulty reaching/extending arms up
gen s`wavenum'armsa =.
spouse r`wavenum'armsa, result(s`wavenum'armsa) wave(`wavenum')
label variable s`wavenum'armsa "s`wavenum'armsa:w`wavenum' S Some Diff-Rch/xtnd arms up"

*value labels
label values r`wavenum'armsa diff
label values s`wavenum'armsa diff

*check 


***Difficulty pushing/pulling a large object***
*wave 6 respondent difficulty pushing/pulling a large object
gen r`wavenum'pusha =.
missing_w`wavenum' hemobpu, result(r`wavenum'pusha)
replace r`wavenum'pusha = 0 if hemobpu==0
replace r`wavenum'pusha = 1 if hemobpu==1
label variable r`wavenum'pusha "r`wavenum'pusha:w`wavenum' R Some Diff-Push/pull lg obj"

*wave 6 spouse difficulty pushing/pulling a large object
gen s`wavenum'pusha =.
spouse r`wavenum'pusha, result(s`wavenum'pusha) wave(`wavenum')
label variable s`wavenum'pusha "s`wavenum'pusha:w`wavenum' S Some Diff-Push/pull lg obj"

*value labels
label values r`wavenum'pusha diff
label values s`wavenum'pusha diff

*check 

***ADL Summary 0-5***
*wave 6 respondent ADL Summary 0-5
H_ELSA_summary_v adla, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata r`wavenum'beda r`wavenum'walkra) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adla "r`wavenum'adla:w`wavenum' R Some Diff-ADLs /0-5"

*wave 6 respondent Missing in ADL Summary
label variable r`wavenum'adlam "r`wavenum'adlam:w`wavenum' r Missings in Some Diff-ADLs /0-5"

*wave 6 spouse ADL Summary 0-5
gen s`wavenum'adla =.
spouse r`wavenum'adla, result(s`wavenum'adla) wave(`wavenum')
label variable s`wavenum'adla "s`wavenum'adla:w`wavenum' S Some Diff-ADLs /0-5"

*wave 6 spouse Missings in ADL Summary 0-5
gen s`wavenum'adlam =.
spouse r`wavenum'adlam, result(s`wavenum'adlam) wave(`wavenum')
label variable s`wavenum'adlam "s`wavenum'adlam:w`wavenum' S Missings in Some Diff-ADLs /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***ADL Wallace Summary 0-3***
*wave 6 respondent ADL Wallace Summary 0-3
H_ELSA_summary_v adlwa, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adlwa "r`wavenum'adlwa:w`wavenum' R Some Diff-ADLs:Wallace /0-3"

*wave 6 respondent Missings in ADL Wallace Summary 0-3
label variable r`wavenum'adlwam "r`wavenum'adlwam:w`wavenum' R Missings in Some Diff-ADLs:Wallace /0-3"

*wave 6 spouse ADL Wallace Summary 0-3
gen s`wavenum'adlwa =.
spouse r`wavenum'adlwa, result(s`wavenum'adlwa) wave(`wavenum')
label variable s`wavenum'adlwa "s`wavenum'adlwa:w`wavenum' S Some Diff-ADLs:Wallace /0-3"

*wave 6 spouse Missings in ADL Wallace Summary 0-3
gen s`wavenum'adlwam =.
spouse r`wavenum'adlwam, result(s`wavenum'adlwam) wave(`wavenum')
label variable s`wavenum'adlwam "s`wavenum'adlwam:w`wavenum' S Missings in Some Diff-ADLs:Wallace /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-3***
*wave 6 respondent IADLs Summary 0-3
H_ELSA_summary_v iadla, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadla "r`wavenum'iadla:w`wavenum' R Some Diff-IADLs: /0-3"

*wave 6 respondent Missings in IADLs Summary 0-3
label variable r`wavenum'iadlam "r`wavenum'iadlam:w`wavenum' R Missings in Some Diff-IADLs: /0-3"

*wave 6 spouse IADLs Summary 0-3
gen s`wavenum'iadla =.
spouse r`wavenum'iadla, result(s`wavenum'iadla) wave(`wavenum')
label variable s`wavenum'iadla "s`wavenum'iadla:w`wavenum' S Some Diff-IADLs: /0-3"

*wave 6 spouse Missings in IADLs Summary 0-3
gen s`wavenum'iadlam =.
spouse r`wavenum'iadlam, result(s`wavenum'iadlam) wave(`wavenum')
label variable s`wavenum'iadlam "s`wavenum'iadlam:w`wavenum' S Missings in Some Diff-IADLs: /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-5***
*wave 6 respondent IADLs Summary 0-5
H_ELSA_summary_v iadlza, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa r`wavenum'shopa r`wavenum'mealsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadlza "r`wavenum'iadlza:w`wavenum' R Some Diff-IADLs: /0-5"

*wave 6 respondent Missings in IADLs Summary 0-5
label variable r`wavenum'iadlzam "r`wavenum'iadlzam:w`wavenum' R Missings in Some Diff-IADLs: /0-5"

*wave 6 spouse IADLs Summary 0-5
gen s`wavenum'iadlza =.
spouse r`wavenum'iadlza, result(s`wavenum'iadlza) wave(`wavenum')
label variable s`wavenum'iadlza "s`wavenum'iadlza:w`wavenum' S Some Diff-IADLs: /0-5"

*wave 6 spouse Missings in IADLs Summary 0-5
gen s`wavenum'iadlzam =.
spouse r`wavenum'iadlzam, result(s`wavenum'iadlzam) wave(`wavenum')
label variable s`wavenum'iadlzam "s`wavenum'iadlzam:w`wavenum' S Missings in Some Diff-IADLs: /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Mobility Summary***
*wave 6 respondent Mobility Summary
H_ELSA_summary_v mobilb, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'climsa r`wavenum'clim1a) 
local varlist_m = r(varlist_m)
label variable r`wavenum'mobilb "r`wavenum'mobilb:w`wavenum' R Some Diff-Mobility /0-4"

*wave 6 respondent Missings in Mobility Summary
label variable r`wavenum'mobilbm "r`wavenum'mobilbm:w`wavenum' R Missings in Some Diff-Mobility /0-4"

*wave 6 spouse Mobility Summary
gen s`wavenum'mobilb =.
spouse r`wavenum'mobilb, result(s`wavenum'mobilb) wave(`wavenum')
label variable s`wavenum'mobilb "s`wavenum'mobilb:w`wavenum' S Some Diff-Mobility /0-4"

*wave 6 spouse Missings in Mobility Summary
gen s`wavenum'mobilbm =.
spouse r`wavenum'mobilbm, result(s`wavenum'mobilbm) wave(`wavenum')
label variable s`wavenum'mobilbm "s`wavenum'mobilbm:w`wavenum' S Missings in Some Diff-Mobility /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Large Muscle Summary***
*wave 6 respondent Large Muscle Summary
H_ELSA_summary_v lgmusa, wave(`wavenum') add(r`wavenum'sita r`wavenum'chaira r`wavenum'stoopa r`wavenum'pusha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'lgmusa "r`wavenum'lgmusa:w`wavenum' R Some Diff-Large muscle /0-4"

*wave 6 respondent Missings in Large Muscle Summary
label variable r`wavenum'lgmusam "r`wavenum'lgmusam:w`wavenum' R Missings in Some Diff-Large muscle /0-4"

*wave 6 spouse Large Muscle Summary
gen s`wavenum'lgmusa =.
spouse r`wavenum'lgmusa, result(s`wavenum'lgmusa) wave(`wavenum')
label variable s`wavenum'lgmusa "s`wavenum'lgmusa:w`wavenum' S Some Diff-Large muscle /0-4"

*wave 6 spouse Missings in Large Muscle Summary
gen s`wavenum'lgmusam =.
spouse r`wavenum'lgmusam, result(s`wavenum'lgmusam) wave(`wavenum')
label variable s`wavenum'lgmusam "s`wavenum'lgmusam:w`wavenum' S Missings in Some Diff-Large muscle /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Gross Motor Summary***
*wave 6 respondent Gross Motor Summary
H_ELSA_summary_v grossa, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'clim1a r`wavenum'beda r`wavenum'batha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'grossa "r`wavenum'grossa:w`wavenum' R Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 6 respondent Missings in Gross Motor Summary
label variable r`wavenum'grossam "r`wavenum'grossam:w`wavenum' R Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 6 spouse Gross Motor Summary
gen s`wavenum'grossa =.
spouse r`wavenum'grossa, result(s`wavenum'grossa) wave(`wavenum')
label variable s`wavenum'grossa "s`wavenum'grossa:w`wavenum' S Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 6 spouse Missings in Gross Motor Summary
gen s`wavenum'grossam =.
spouse r`wavenum'grossam, result(s`wavenum'grossam) wave(`wavenum')
label variable s`wavenum'grossam "s`wavenum'grossam:w`wavenum' S Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Fine Motor Summary***
*wave 6 respondent Fine Motor Summary
H_ELSA_summary_v finea, wave(`wavenum') add(r`wavenum'dimea r`wavenum'eata r`wavenum'dressa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'finea "r`wavenum'finea:w`wavenum' R Some Diff-Dime/eat/dress /0-3"

*wave 6 respondent Missings in Fine Motor Summary
label variable r`wavenum'fineam "r`wavenum'fineam:w`wavenum' R Missings in Some Diff-Dime/eat/dress /0-3"

*wave 6 spouse Fine Motor Summary
gen s`wavenum'finea =.
spouse r`wavenum'finea, result(s`wavenum'finea) wave(`wavenum')
label variable s`wavenum'finea "s`wavenum'finea:w`wavenum' S Some Diff-Dime/eat/dress /0-3"

*wave 6 spouse Missings in Fine Motor Summary
gen s`wavenum'fineam =.
spouse r`wavenum'fineam, result(s`wavenum'fineam) wave(`wavenum')
label variable s`wavenum'fineam "s`wavenum'fineam:w`wavenum' S Missings in Some Diff-Dime/eat/dress /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***Felt depressed (0,1)***
*wave 6 respondent Felt depressed (0,1)
gen r`wavenum'depres =.
missing_w`wavenum' PScedA, result(r`wavenum'depres)
replace r`wavenum'depres =.p if askpx == 1
replace r`wavenum'depres = 0 if PScedA == 2
replace r`wavenum'depres = 1 if PScedA == 1
label variable r`wavenum'depres "r`wavenum'depres:w`wavenum' r CESD: Felt depressed (0,1)"

*wave 6 spouse Felt depressed (0,1)
gen s`wavenum'depres =.
spouse r`wavenum'depres, result(s`wavenum'depres) wave(`wavenum')
label variable s`wavenum'depres "s`wavenum'depres:w`wavenum' s CESD: Felt depressed (0,1)"

*value labels
label values r`wavenum'depres cesd
label values s`wavenum'depres cesd

*check

***Everything is an effort***
*wave 6 respondent Everything is an effort
gen r`wavenum'effort =.
missing_w`wavenum' PScedB, result(r`wavenum'effort)
replace r`wavenum'effort =.p if askpx == 1
replace r`wavenum'effort = 0 if PScedB == 2
replace r`wavenum'effort = 1 if PScedB == 1
label variable r`wavenum'effort "r`wavenum'effort:w`wavenum' r CESD: Everthing an effort (0,1)"

*wave 6 spouse Everything is an effort
gen s`wavenum'effort =.
spouse r`wavenum'effort, result(s`wavenum'effort) wave(`wavenum')
label variable s`wavenum'effort "s`wavenum'effort:w`wavenum' s CESD: Everthing an effort (0,1)"

*value labels
label values r`wavenum'effort cesd
label values s`wavenum'effort cesd

*check

***Sleep was restless (0,1)***
*wave 6 respondent Sleep was restless (0,1)
gen r`wavenum'sleepr =.
missing_w`wavenum' PScedC, result(r`wavenum'sleepr)
replace r`wavenum'sleepr =.p if askpx == 1
replace r`wavenum'sleepr = 0 if PScedC == 2
replace r`wavenum'sleepr = 1 if PScedC == 1
label variable r`wavenum'sleepr "r`wavenum'sleepr:w`wavenum' r CESD: Sleep was restless (0,1)"

*wave 6 spouse Sleep was restless (0,1)
gen s`wavenum'sleepr =.
spouse r`wavenum'sleepr, result(s`wavenum'sleepr) wave(`wavenum')
label variable s`wavenum'sleepr "s`wavenum'sleepr:w`wavenum' s CESD: Sleep was restless (0,1)"

*value labels
label values r`wavenum'sleepr cesd
label values s`wavenum'sleepr cesd

*check

***Was happy (0,1)***
*wave 6 respondent Was happy (0,1)
gen r`wavenum'whappy =.
missing_w`wavenum' PScedD, result(r`wavenum'whappy)
replace r`wavenum'whappy =.p if askpx == 1
replace r`wavenum'whappy = 0 if PScedD == 2
replace r`wavenum'whappy = 1 if PScedD == 1
label variable r`wavenum'whappy "r`wavenum'whappy:w`wavenum' r CESD: Was happy (0,1)"

*wave 6 spouse Was happy (0,1)
gen s`wavenum'whappy =.
spouse r`wavenum'whappy, result(s`wavenum'whappy) wave(`wavenum')
label variable s`wavenum'whappy "s`wavenum'whappy:w`wavenum' s CESD: Was happy (0,1)"

*value labels
label values r`wavenum'whappy cesd
label values s`wavenum'whappy cesd

*check

***Felt lonely (0,1)***
*wave 6 respondent Felt lonely (0,1)
gen r`wavenum'flone =.
missing_w`wavenum' PScedE, result(r`wavenum'flone)
replace r`wavenum'flone =.p if askpx == 1
replace r`wavenum'flone = 0 if PScedE == 2
replace r`wavenum'flone = 1 if PScedE == 1
label variable r`wavenum'flone "r`wavenum'flone:w`wavenum' r CESD: Felt lonely (0,1)"

*wave 6 spouse Felt lonely (0,1)
gen s`wavenum'flone =.
spouse r`wavenum'flone, result(s`wavenum'flone) wave(`wavenum')
label variable s`wavenum'flone "s`wavenum'flone:w`wavenum' s CESD: Felt lonely (0,1)"

*value labels
label values r`wavenum'flone cesd
label values s`wavenum'flone cesd

*check

***Felt sad (0,1)***
*wave 6 respondent Felt sad (0,1)
gen r`wavenum'fsad =.
missing_w`wavenum' PScedG, result(r`wavenum'fsad)
replace r`wavenum'fsad =.p if askpx == 1
replace r`wavenum'fsad = 0 if PScedG == 2
replace r`wavenum'fsad = 1 if PScedG == 1
label variable r`wavenum'fsad "r`wavenum'fsad:w`wavenum' r CESD: Felt sad (0,1)"

*wave 6 spouse Felt sad (0,1)
gen s`wavenum'fsad =.
spouse r`wavenum'fsad, result(s`wavenum'fsad) wave(`wavenum')
label variable s`wavenum'fsad "s`wavenum'fsad:w`wavenum' s CESD: Felt sad (0,1)"

*value labels
label values r`wavenum'fsad cesd
label values s`wavenum'fsad cesd

*check

***Could not get going (0,1)***
*wave 6 respondent Could not get going (0,1)
gen r`wavenum'going =.
missing_w`wavenum' PScedH, result(r`wavenum'going)
replace r`wavenum'going =.p if askpx == 1
replace r`wavenum'going = 0 if PScedH == 2
replace r`wavenum'going = 1 if PScedH == 1
label variable r`wavenum'going "r`wavenum'going:w`wavenum' r CESD: Could not get going (0,1)"

*wave 6 spouse Could not get going (0,1)
gen s`wavenum'going =.
spouse r`wavenum'going, result(s`wavenum'going) wave(`wavenum')
label variable s`wavenum'going "s`wavenum'going:w`wavenum' s CESD: Could not get going (0,1)"

*value labels
label values r`wavenum'going cesd
label values s`wavenum'going cesd

*check

***Enjoyed life (0,1)***
*wave 6 respondent Enjoyed life (0,1)
gen r`wavenum'enlife =.
missing_w`wavenum' PScedF, result(r`wavenum'enlife)
replace r`wavenum'enlife =.p if askpx == 1
replace r`wavenum'enlife = 0 if PScedF == 2
replace r`wavenum'enlife = 1 if PScedF == 1
label variable r`wavenum'enlife "r`wavenum'enlife:w`wavenum' r CESD: Enjoyed life (0,1)"

*wave 6 spouse Enjoyed life (0,1)
gen s`wavenum'enlife =.
spouse r`wavenum'enlife, result(s`wavenum'enlife) wave(`wavenum')
label variable s`wavenum'enlife "s`wavenum'enlife:w`wavenum' s CESD: Enjoyed life (0,1)"

*value labels
label values r`wavenum'enlife cesd
label values s`wavenum'enlife cesd

*check

***CESD Score***
*wave 6 respondent CESD score number of missings
egen r`wavenum'cesdm = rowmiss(r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife) if inw`wavenum' == 1
label variable r`wavenum'cesdm "r`wavenum'cesdm:w`wavenum' r missings in CESD score"

*wave 6 spouse CESD score number of missings
gen s`wavenum'cesdm =.
spouse r`wavenum'cesdm, result(s`wavenum'cesdm) wave(`wavenum')
label variable s`wavenum'cesdm "s`wavenum'cesdm:w`wavenum' s missings in CESD score"

local cesd
foreach v of varlist r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going  {
	recode `v' (miss = 0), generate(`v'_m)
	local cesd `cesd' `v'_m
}

foreach u of varlist r`wavenum'whappy r`wavenum'enlife {
	recode `u' (miss = 1), generate(`u'_m)
	local cesd `cesd' `u'_m
}

*wave 6 respondent CESD score
gen r`wavenum'cesd=.
missing_H r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife, result(r`wavenum'cesd)
replace r`wavenum'cesd =.p if askpx == 1		 
replace r`wavenum'cesd = r`wavenum'depres_m + r`wavenum'effort_m + r`wavenum'sleepr_m + r`wavenum'flone_m + r`wavenum'fsad_m + r`wavenum'going_m + (1-r`wavenum'whappy_m) + (1-r`wavenum'enlife_m) if inrange(r`wavenum'cesdm,0,7)
label variable r`wavenum'cesd "r`wavenum'cesd:w`wavenum' r CESD Score"

*wave 6 spouse CESD score
gen s`wavenum'cesd =.
spouse r`wavenum'cesd, result(s`wavenum'cesd) wave(`wavenum')
label variable s`wavenum'cesd "s`wavenum'cesd:w`wavenum' s CESD Score"

*check 

*drop intermediate variables
drop `cesd'

***Ever had high blood pressure***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hibpe if !mi(r`w'hibpe) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had high blood pressure
gen r`wavenum'hibpe =.
missing_w`wavenum' hedacbp hedimbp, result(r`wavenum'hibpe)
replace r`wavenum'hibpe = 0 if preload == 0 & hedacbp != 2
replace r`wavenum'hibpe = 0 if hedimbp == 0
replace r`wavenum'hibpe = 0 if preload == 1 & hedacbp == 2
replace r`wavenum'hibpe = 1 if hedimbp == 1
replace r`wavenum'hibpe = 1 if preload == 1 & hedacbp != 2
label variable r`wavenum'hibpe "r`wavenum'hibpe:w`wavenum' r ever had high blood pressure"

*wave 6 respondent high blood pressure dispute flag
gen r`wavenum'hibpf =.
replace r`wavenum'hibpf = 0 if inlist(preload,0,1) | inlist(hedimbp,-9,-8,0,1)
replace r`wavenum'hibpf = 3 if preload == 1 & hedacbp == 2
label variable r`wavenum'hibpf "r`wavenum'hibpf:w`wavenum' r flag dispute chg high blood pressure"

*previous waves respondent high blood pressure dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpf = 6 if preload == 1 & hedacbp == 2 & r`w'hibpf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpe = 0 if preload == 1 & hedacbp == 2 & r`w'hibpe == 1
}

*value labels
label values r`wavenum'hibpe health_problems
label values r`wavenum'hibpf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}


drop preload

***Ever had diabetes***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'diabe if !mi(r`w'diabe) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had diabetes
gen r`wavenum'diabe =.
missing_w`wavenum' hedacdi hedimdi, result(r`wavenum'diabe)
replace r`wavenum'diabe = 0 if preload == 0 & hedacdi != 2
replace r`wavenum'diabe = 0 if hedimdi == 0
replace r`wavenum'diabe = 0 if preload == 1 & hedacdi == 2
replace r`wavenum'diabe = 1 if hedimdi == 1
replace r`wavenum'diabe = 1 if preload == 1 & hedacdi != 2
label variable r`wavenum'diabe "r`wavenum'diabe:w`wavenum' r ever had diabetes"

*wave 6 respondent diabetes dispute flag
gen r`wavenum'diabf =.
replace r`wavenum'diabf = 0 if inlist(preload,0,1) | inlist(hedimdi,-9,-8,0,1)
replace r`wavenum'diabf = 3 if preload == 1 & hedacdi == 2
label variable r`wavenum'diabf "r`wavenum'diabf:w`wavenum' r flag dispute chg diabetes"

*previous waves respondent diabetes dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabf = 6 if preload == 1 & hedacdi == 2 & r`w'diabf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabe = 0 if preload == 1 & hedacdi == 2 & r`w'diabe == 1
}

*value labels
label values r`wavenum'diabe health_problems
label values r`wavenum'diabf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had cancer***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'cancre if !mi(r`w'cancre) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had cancer
gen r`wavenum'cancre =.
missing_w`wavenum' hedbdca hedibca, result(r`wavenum'cancre)
replace r`wavenum'cancre = 0 if preload == 0 & hedbdca != 2
replace r`wavenum'cancre = 0 if hedibca == 0
replace r`wavenum'cancre = 0 if preload == 1 & hedbdca == 2
replace r`wavenum'cancre = 1 if hedibca == 1
replace r`wavenum'cancre = 1 if preload == 1 & hedbdca != 2
label variable r`wavenum'cancre "r`wavenum'cancre:w`wavenum' r ever had cancer"

*wave 6 respondent cancer dispute flag
gen r`wavenum'cancrf =.
replace r`wavenum'cancrf = 0 if inlist(preload,0,1) | inlist(hedibca,-9,-8,0,1)
replace r`wavenum'cancrf = 3 if preload == 1 & hedbdca == 2
label variable r`wavenum'cancrf "r`wavenum'cancrf:w`wavenum' r flag dispute chg cancer"

*previous waves respondent cancer dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancrf = 6 if preload == 1 & hedbdca == 2 & r`w'cancrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancre = 0 if preload == 1 & hedbdca == 2 & r`w'cancre == 1
}

*value labels
label values r`wavenum'cancre health_problems
label values r`wavenum'cancrf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had lung disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'lunge if !mi(r`w'lunge) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had lung disease
gen r`wavenum'lunge =.
missing_w`wavenum' hedbdlu hediblu, result(r`wavenum'lunge)
replace r`wavenum'lunge = 0 if preload == 0 & hedbdlu != 2
replace r`wavenum'lunge = 0 if hediblu == 0
replace r`wavenum'lunge = 0 if preload == 1 & hedbdlu == 2
replace r`wavenum'lunge = 1 if hediblu == 1
replace r`wavenum'lunge = 1 if preload == 1 & hedbdlu != 2
label variable r`wavenum'lunge "r`wavenum'lunge:w`wavenum' r ever had lung disease"

*wave 6 respondent lung disease dispute flag
gen r`wavenum'lungf =.
replace r`wavenum'lungf = 0 if inlist(preload,0,1) | inlist(hediblu,-9,-8,0,1)
replace r`wavenum'lungf = 3 if preload == 1 & hedbdlu == 2
label variable r`wavenum'lungf "r`wavenum'lungf:w`wavenum' r flag dispute chg lung disease"

*previous waves respondent lung disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lungf = 6 if preload == 1 & hedbdlu == 2 & r`w'lungf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lunge = 0 if preload == 1 & hedbdlu == 2 & r`w'lunge == 1
}

*value labels
label values r`wavenum'lunge health_problems
label values r`wavenum'lungf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had heart problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hearte if !mi(r`w'hearte) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had heart problems
gen r`wavenum'hearte =.
missing_w`wavenum' hedacan hedacmi hedachf hedachm hedacar hedacot ///
   				 hediman hedimmi hedimhf hedimhm hedimar hedim85, result(r`wavenum'hearte)
replace r`wavenum'hearte = 0 if preload == 0 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedacot != 2
replace r`wavenum'hearte = 0 if ( hediman == 0 | hedimmi == 0 | hedimhf == 0 | hedimhm == 0 ///
																 | hedimar == 0 | hedim85 == 0 )
replace r`wavenum'hearte = 0 if preload == 1 & (hedacan == 2 | hedacmi == 2 | hedachf == 2 ///
																						  | hedachm == 2 | hedacar == 2 | hedacot == 2	)									 
replace r`wavenum'hearte = 1 if ( hediman == 1 | hedimmi == 1 | hedimhf == 1 | hedimhm == 1 ///
																 | hedimar == 1 | hedim85 == 1 )
replace r`wavenum'hearte = 1 if preload == 1 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedacot != 2
label variable r`wavenum'hearte "r`wavenum'hearte:w`wavenum' r ever had heart problems"

*wave 6 respondent heart problems dispute flag
gen r`wavenum'heartf =.
replace r`wavenum'heartf = 0 if inlist(preload,0,1) | inlist(hediman,-9,-8,0,1) | inlist(hedimmi,-9,-8,0,1) ///
																					 | inlist(hedimhf,-9,-8,0,1) | inlist(hedimhm,-9,-8,0,1) ///
																					 | inlist(hedimar,-9,-8,0,1) | inlist(hedim85,-9,-8,0,1)
replace r`wavenum'heartf = 3 if preload == 1 & (hedacan == 2 | hedacmi == 2 ///
																		          | hedachf == 2 | hedachm == 2 ///
																		          | hedacar == 2 | hedacot == 2)
label variable r`wavenum'heartf "r`wavenum'heartf:w`wavenum' r flag dispute chg heart problems"


*previous waves respondent heart problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'heartf = 6 if preload == 1 & ( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'heartf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hearte = 0 if preload == 1 & ///
															( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'hearte == 1
}

*value labels
label values r`wavenum'hearte health_problems
label values r`wavenum'heartf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had stroke***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'stroke if !mi(r`w'stroke) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had stroke
gen r`wavenum'stroke =.
missing_w`wavenum' hedacst hedimst, result(r`wavenum'stroke)
replace r`wavenum'stroke = 0 if preload == 0 & hedacst != 2
replace r`wavenum'stroke = 0 if hedimst == 0
replace r`wavenum'stroke = 0 if preload == 1 & hedacst == 2
replace r`wavenum'stroke = 1 if hedimst == 1
replace r`wavenum'stroke = 1 if preload == 1 & hedacst != 2
label variable r`wavenum'stroke "r`wavenum'stroke:w`wavenum' r ever had stroke"

*wave 6 respondent stroke dispute flag
gen r`wavenum'strokf =.
replace r`wavenum'strokf = 0 if inlist(preload,0,1) | inlist(hedimst,-9,-8,0,1)
replace r`wavenum'strokf = 3 if preload == 1 & hedacst == 2
label variable r`wavenum'strokf "r`wavenum'strokf:w`wavenum' r flag dispute chg stroke"

*previous waves respondent stroke dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'strokf = 6 if preload == 1 & hedacst == 2 & r`w'strokf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'stroke = 0 if preload == 1 & hedacst == 2 & r`w'stroke == 1
}

*value labels
label values r`wavenum'stroke health_problems
label values r`wavenum'strokf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had psych problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'psyche if !mi(r`w'psyche) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had psych problems
gen r`wavenum'psyche =.
missing_w`wavenum' hedbdps hedibps, result(r`wavenum'psyche)
replace r`wavenum'psyche = 0 if preload == 0 & hedbdps != 2
replace r`wavenum'psyche = 0 if hedibps == 0
replace r`wavenum'psyche = 0 if preload == 1 & hedbdps == 2
replace r`wavenum'psyche = 1 if hedibps == 1
replace r`wavenum'psyche = 1 if preload == 1 & hedbdps != 2
label variable r`wavenum'psyche "r`wavenum'psyche:w`wavenum' r ever had psych problems"

*wave 6 respondent psych problems dispute flag
gen r`wavenum'psychf =.
replace r`wavenum'psychf = 0 if inlist(preload,0,1) | inlist(hedibps,-9,-8,0,1)
replace r`wavenum'psychf = 3 if preload == 1 & hedbdps == 2
label variable r`wavenum'psychf "r`wavenum'psychf:w`wavenum' r flag dispute chg psych problems"

*previous waves respondent psych problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psychf = 6 if preload == 1 & hedbdps == 2 & r`w'psychf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psyche = 0 if preload == 1 & hedbdps == 2 & r`w'psyche == 1
}

*value labels
label values r`wavenum'psyche health_problems
label values r`wavenum'psychf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had arthritis***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'arthre if !mi(r`w'arthre) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had arthritis
gen r`wavenum'arthre =.
missing_w`wavenum' hedbdar hedibar, result(r`wavenum'arthre)
replace r`wavenum'arthre = 0 if preload == 0 & hedbdar != 2
replace r`wavenum'arthre = 0 if hedibar == 0
replace r`wavenum'arthre = 0 if preload == 1 & hedbdar == 2
replace r`wavenum'arthre = 1 if hedibar == 1
replace r`wavenum'arthre = 1 if preload == 1 & hedbdar != 2
label variable r`wavenum'arthre "r`wavenum'arthre:w`wavenum' r ever had arthritis"

*wave 6 respondent arthritis dispute flag
gen r`wavenum'arthrf =.
replace r`wavenum'arthrf = 0 if inlist(preload,0,1) | inlist(hedibar,-9,-8,0,1)
replace r`wavenum'arthrf = 3 if preload == 1 & hedbdar == 2
label variable r`wavenum'arthrf "r`wavenum'arthrf:w`wavenum' r flag dispute chg arthritis"

*previous waves respondent arthritis dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthrf = 6 if preload == 1 & hedbdar == 2 & r`w'arthrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthre = 0 if preload == 1 & hedbdar == 2 & r`w'arthre == 1
}

*value labels
label values r`wavenum'arthre health_problems
label values r`wavenum'arthrf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}
drop preload

***Ever had memory-related problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'memrye if !mi(r`w'memrye) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had memory-related problems
gen r`wavenum'memrye =.
missing_w`wavenum' hedbdad hedbdde hedibad hedibde, result(r`wavenum'memrye)
replace r`wavenum'memrye = 0 if preload == 0 & hedbdad != 2 & hedbdde != 2
replace r`wavenum'memrye = 0 if ( hedibad == 0 | hedibde == 0 )
replace r`wavenum'memrye = 0 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
replace r`wavenum'memrye = 1 if ( hedibad == 1 | hedibde == 1 )
replace r`wavenum'memrye = 1 if preload == 1 & hedbdad != 2 & hedbdde != 2
label variable r`wavenum'memrye "r`wavenum'memrye:w`wavenum' r ever had memory problem"

*wave 6 respondent memory-related problems dispute flag
gen r`wavenum'memryf =.
replace r`wavenum'memryf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'memryf = 3 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
label variable r`wavenum'memryf "r`wavenum'memryf:w`wavenum' r flag chg previous memory prob"

*previous waves respondent memory-related problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memryf = 6 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memryf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memrye = 0 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memrye == 1
}

*value labels
label values r`wavenum'memrye health_problems
label values r`wavenum'memryf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had asthma***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'asthmae if !mi(r`w'asthmae) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had asthma
gen r`wavenum'asthmae =.
missing_w`wavenum' hedbdas hedibas, result(r`wavenum'asthmae)
replace r`wavenum'asthmae = 0 if preload == 0 & hedbdas != 2
replace r`wavenum'asthmae = 0 if hedibas == 0
replace r`wavenum'asthmae = 0 if preload == 1 & hedbdas == 2
replace r`wavenum'asthmae = 1 if hedibas == 1
replace r`wavenum'asthmae = 1 if preload == 1 & hedbdas != 2
label variable r`wavenum'asthmae "r`wavenum'asthmae:w`wavenum' r ever had asthma"

*wave 6 respondent asthma dispute flag
gen r`wavenum'asthmaf =.
replace r`wavenum'asthmaf = 0 if inlist(preload,0,1) | inlist(hedibas,-9,-8,0,1)
replace r`wavenum'asthmaf = 3 if preload == 1 & hedbdas == 2
label variable r`wavenum'asthmaf "r`wavenum'asthmaf:w`wavenum' r flag chg previous asthma"

*previous waves respondent memory-related problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmaf = 6 if preload == 1 & hedbdas == 2 & r`w'asthmaf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmae = 0 if preload == 1 & hedbdas == 2 & r`w'asthmae == 1
}

*value labels
label values r`wavenum'asthmae health_problems
label values r`wavenum'asthmaf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had high cholesterol***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 2 {
	replace preload = r`w'hchole if !mi(r`w'hchole) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had high cholesterol
gen r`wavenum'hchole =.
missing_w`wavenum' hedimch hedacch, result(r`wavenum'hchole)
replace r`wavenum'hchole = 0 if preload == 0 & hedacch != 2
replace r`wavenum'hchole = 0 if hedimch==0
replace r`wavenum'hchole = 0 if preload == 1 & hedacch == 2
replace r`wavenum'hchole = 1 if hedimch == 1
replace r`wavenum'hchole = 1 if preload == 1 & hedacch != 2
label variable r`wavenum'hchole "r`wavenum'hchole:w`wavenum' r ever had high cholesterol"

*wave 6 respondent high cholesterol dispute flag
gen r`wavenum'hcholf =.
replace r`wavenum'hcholf = 0 if inlist(preload,0,1) | inlist(hedimch,-9,-8,0,1)
replace r`wavenum'hcholf = 3 if preload == 1 & hedacch == 2
label variable r`wavenum'hcholf "r`wavenum'hcholf:w`wavenum' r flag chg previous high cholesterol"

*previous waves respondent high cholesterol dispute flag
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hcholf = 6 if preload == 1 & hedacch == 2 & r`w'hcholf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hchole = 0 if preload == 1 & hedacch == 2 & r`w'hchole == 1
}

*value labels
label values r`wavenum'hchole health_problems
label values r`wavenum'hcholf health_problems_flag

drop preload

***Ever had cataracts***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'catrcte if !mi(r`w'catrcte) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had cataracts
gen r`wavenum'catrcte =.
missing_w`wavenum' heopcca heoptca, result(r`wavenum'catrcte)
replace r`wavenum'catrcte = 0 if preload == 0 & heopcca != 2
replace r`wavenum'catrcte = 0 if heoptca==0
replace r`wavenum'catrcte = 0 if preload == 1 & heopcca == 2
replace r`wavenum'catrcte = 1 if heoptca == 1
replace r`wavenum'catrcte = 1 if preload == 1 & heopcca != 2
label variable r`wavenum'catrcte "r`wavenum'catrcte:w`wavenum' r ever had cataracts"

*wave 6 respondent cataracts dispute flag
gen r`wavenum'catrctf =.
replace r`wavenum'catrctf = 0 if inlist(preload,0,1) | inlist(heoptca,-9,-8,0,1)
replace r`wavenum'catrctf = 3 if preload == 1 & heopcca == 2
label variable r`wavenum'catrctf "r`wavenum'catrctf:w`wavenum' r flag chg previous cataracts"

*previous waves respondent cataracts dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrctf = 6 if preload == 1 & heopcca == 2 & r`w'catrctf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrcte = 0 if preload == 1 & heopcca == 2 & r`w'catrcte == 1
}

*value labels
label values r`wavenum'catrcte health_problems
label values r`wavenum'catrctf health_problems_flag

drop preload

***Ever had parkinsons***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'parkine if !mi(r`w'parkine) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had parkinsons
gen r`wavenum'parkine =.
missing_w`wavenum' hedibpd hedbdpd, result(r`wavenum'parkine)
replace r`wavenum'parkine = 0 if preload == 0 & hedbdpd != 2
replace r`wavenum'parkine = 0 if hedibpd==0
replace r`wavenum'parkine = 0 if preload == 1 & hedbdpd == 2
replace r`wavenum'parkine = 1 if hedibpd == 1
replace r`wavenum'parkine = 1 if preload == 1 & hedbdpd != 2
label variable r`wavenum'parkine "r`wavenum'parkine:w`wavenum' r ever had parkinson disease"

*wave 6 respondent parkinsons dispute flag
gen r`wavenum'parkinf =.
replace r`wavenum'parkinf = 0 if inlist(preload,0,1) | inlist(hedibpd,-9,-8,0,1)
replace r`wavenum'parkinf = 3 if preload == 1 & hedbdpd == 2
label variable r`wavenum'parkinf "r`wavenum'parkinf:w`wavenum' r flag chg previous parkinson disease"

*previous waves respondent parkinsons dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkinf = 6 if preload == 1 & hedbdpd == 2 & r`w'parkinf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkine = 0 if preload == 1 & hedbdpd == 2 & r`w'parkine == 1
}

*value labels
label values r`wavenum'parkine health_problems
label values r`wavenum'parkinf health_problems_flag

drop preload

***Ever had hip fracture***
*wave 6 respondent ever had hip fracture
gen r`wavenum'hipe = .
missing_w`wavenum' HeFrac, result(r`wavenum'hipe)
replace r`wavenum'hipe = .a if inrange(r`wavenum'agey,1,59) & HeFrac==-1
replace r`wavenum'hipe = 0 if HeFrac==2
replace r`wavenum'hipe = 1 if HeFrac==1 |  (r`pre_wavenum'hipe==1 & inw`wavenum' == 1)
label variable r`wavenum'hipe "r`wavenum'hipe:w`wavenum' r ever had hip fracture"
label values r`wavenum'hipe health_problems

*wave 6 spouse ever had hip fracture
gen s`wavenum'hipe = .
spouse r`wavenum'hipe, result(s`wavenum'hipe) wave(`wavenum')
label variable s`wavenum'hipe "s`wavenum'hipe:w`wavenum' s ever had hip fracture"
label values s`wavenum'hipe health_problems

***Ever had Alzheimers disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'alzhe if !mi(r`w'alzhe) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had Alzheimers disease
gen r`wavenum'alzhe =.
missing_w`wavenum' hedbdad hedibad, result(r`wavenum'alzhe)
replace r`wavenum'alzhe = 0 if preload == 0 & hedbdad != 2
replace r`wavenum'alzhe = 0 if hedibad == 0
replace r`wavenum'alzhe = 0 if preload == 1 & hedbdad == 2
replace r`wavenum'alzhe = 1 if hedibad == 1
replace r`wavenum'alzhe = 1 if preload == 1 & hedbdad != 2
label variable r`wavenum'alzhe "r`wavenum'alzhe:w`wavenum' r ever had alzheimers"

*wave 6 respondent Alzheimers disease dispute flag
gen r`wavenum'alzhf =.
replace r`wavenum'alzhf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1)
replace r`wavenum'alzhf = 3 if preload == 1 & hedbdad == 2
label variable r`wavenum'alzhf "r`wavenum'alzhf:w`wavenum' r flag chg previous alzheimers"

*previous waves respondent Alzheimers disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhf = 6 if preload == 1 & hedbdad == 2 & r`w'alzhf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhe = 0 if preload == 1 & hedbdad == 2 & r`w'alzhe == 1
}

*value labels
label values r`wavenum'alzhe health_problems
label values r`wavenum'alzhf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had Dementia***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'demene if !mi(r`w'demene) & mi(preload) & inw`wavenum'==1
}

*wave 6 respondent ever had Dementia
gen r`wavenum'demene =.
missing_w`wavenum' hedbdde hedibde, result(r`wavenum'demene)
replace r`wavenum'demene = 0 if preload == 0 & hedbdde != 2
replace r`wavenum'demene = 0 if hedibde == 0
replace r`wavenum'demene = 0 if preload == 1 & hedbdde == 2
replace r`wavenum'demene = 1 if hedibde == 1
replace r`wavenum'demene = 1 if preload == 1 & hedbdde != 2
label variable r`wavenum'demene "r`wavenum'demene:w`wavenum' r ever had dementia"

*wave 6 respondent Dementia dispute flag
gen r`wavenum'demenf =.
replace r`wavenum'demenf = 0 if inlist(preload,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'demenf = 3 if preload == 1 & hedbdde == 2
label variable r`wavenum'demenf "r`wavenum'demenf:w`wavenum' r flag chg previous dementia"

*previous waves respondent Dementia dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demenf = 6 if preload == 1 & hedbdde == 2 & r`w'demenf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demene = 0 if preload == 1 & hedbdde == 2 & r`w'demene == 1
}

*value labels
label values r`wavenum'demene health_problems
label values r`wavenum'demenf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

gen preiwy = .
gen preiwm = .
forvalues w = `pre_wavenum' (-1) 1 {
	 replace preiwy = r`w'iwindy if inw`w' ==1 & mi(preiwy)
	 replace preiwm = r`w'iwindm if inw`w' ==1 & mi(preiwm)
	}


**Health behavior Preventive behaviors****
*wave 6 respondent ever had mammogram
gen r`wavenum'mammoge = .
missing_w`wavenum' HEMam, result(r`wavenum'mammoge)
replace r`wavenum'mammoge = .s if ragender==1 & inw`wavenum'==1
replace r`wavenum'mammoge = 0 if HEMam==2
replace r`wavenum'mammoge = 1 if HEMam==1
label variable r`wavenum'mammoge "r`wavenum'mammoge:w`wavenum' r ever had mammogram"
label values r`wavenum'mammoge health_prev

*wave 6 spouse ever had mammogram
gen s`wavenum'mammoge = .
spouse r`wavenum'mammoge, result(s`wavenum'mammoge) wave(`wavenum')
label variable s`wavenum'mammoge "s`wavenum'mammoge:w`wavenum' s ever had mammogram"
label values s`wavenum'mammoge health_prev

*wave 6 respondent had mammogram (x-ray of your breasts) last 2 yrs
gen r`wavenum'mammog =.
missing_w`wavenum' hemamty hemamtm HEMam, result(r`wavenum'mammog)
replace r`wavenum'mammog = .s if ragender ==1 & inw`wavenum' == 1
replace r`wavenum'mammog = 0 if  HEMam ==2
replace r`wavenum'mammog = 0 if ((ym(r`wavenum'iwindy,r`wavenum'iwindm) - ym(hemamty,hemamtm) > 24 & preiwy == .) ///
															    | (ym(hemamty, hemamtm) < ym(preiwy,preiwm) & !mi(preiwy)))  ///
															  & !inlist(hemamty,-1,-8,-9) & !inlist(hemamtm,-1,-8,-9) & inw`wavenum'==1
replace r`wavenum'mammog = 0 if r`wavenum'iwindy - hemamty > 2 & !mi(r`wavenum'iwindy) & !inlist(hemamty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'mammog)															
replace r`wavenum'mammog = 1 if ((ym(r`wavenum'iwindy,r`wavenum'iwindm) - ym(hemamty,hemamtm)  <= 24 & preiwy == .) ///
														  | ((ym(hemamty, hemamtm) >= ym(preiwy,preiwm)) & !mi(preiwy))) ///
														   & !inlist(hemamty,-1,-8,-9) & !inlist(hemamtm,-1,-8,-9) & inw`wavenum'==1
replace r`wavenum'mammog = 1 if r`wavenum'iwindy - hemamty <=2 & !mi(r`wavenum'iwindy) & !inlist(hemamty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'mammog)
label variable r`wavenum'mammog "r`wavenum'mammog:w`wavenum' r prev mammogram last 2 yrs"
label values r`wavenum'mammog health_prev

*wave 6 spouse had mammogram (x-ray of your breasts) last 2 yrs
gen s`wavenum'mammog =.
spouse r`wavenum'mammog, result(s`wavenum'mammog) wave(`wavenum')
label variable s`wavenum'mammog "s`wavenum'mammog:w`wavenum' S prev mammogram last 2 yrs"
label values s`wavenum'mammog health_prev

*wave 6 respondent ever had prostate test
gen r`wavenum'proste = .
missing_w`wavenum' HEPro, result(r`wavenum'proste)
replace r`wavenum'proste = .s if ragender==2 & inw`wavenum'==1
replace r`wavenum'proste = 0 if HEPro==2
replace r`wavenum'proste = 1 if HEPro==1
label variable r`wavenum'proste "r`wavenum'proste:w`wavenum' r ever had prostate test"
label values r`wavenum'proste health_prev

*wave 6 spouse ever had prostate test
gen s`wavenum'proste = .
spouse r`wavenum'proste, result(s`wavenum'proste) wave(`wavenum')
label variable s`wavenum'proste "s`wavenum'proste:w`wavenum' s ever had prostate test"
label values s`wavenum'proste health_prev

*wave 6 respondent had prostate-specific antigen (PSA) blood test or other test last 2 yrs
gen r`wavenum'prost =.
missing_w`wavenum' heproty heprotm HEPro, result(r`wavenum'prost)
replace r`wavenum'prost = .s if ragender ==2 & inw`wavenum' == 1
replace r`wavenum'prost = 0 if HEPro ==2
replace r`wavenum'prost = 0 if ((ym(r5iwindy,r5iwindm) - ym(heproty, heprotm) > 24 & preiwy == .) ///
															    | (ym(heproty, heprotm) < ym(preiwy,preiwm) & !mi(preiwy))) ///
															  & !inlist(heproty,-1,-8,-9) & !inlist(heprotm,-1,-8,-9) & inw`wavenum'==1
replace r`wavenum'prost = 0 if r`wavenum'iwindy - heproty > 2 & !mi(r`wavenum'iwindy) & !inlist(heproty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'prost)
replace r`wavenum'prost = 1 if ((ym(r5iwindy,r5iwindm) - ym(heproty, heprotm)   <= 24 & preiwy == .) ///
														  | ((ym(heproty, heprotm) >= ym(preiwy,preiwm)) & !mi(preiwy))) ///
														   & !inlist(heproty,-1,-8,-9) & !inlist(heprotm,-1,-8,-9) & inw`wavenum'==1
replace r`wavenum'prost = 1 if r`wavenum'iwindy - heproty <= 2 & !mi(r`wavenum'iwindy) & !inlist(heproty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'prost)
label variable r`wavenum'prost "r`wavenum'prost:w`wavenum' r prev prostate test last 2 yrs"
label values r`wavenum'prost health_prev

*wave 6 spouse had prostate-specific antigen (PSA) last 2 yrs 
gen s`wavenum'prost =.
spouse r`wavenum'prost, result(s`wavenum'prost) wave(`wavenum')
label variable s`wavenum'prost "s`wavenum'prost:w`wavenum' S prev prostate test last 2 yrs"
label values s`wavenum'prost health_prev

drop preiwy preiwm

***Vigorous physical activity***
*wave 6 respondent vigorous physical activity
gen r`wavenum'vgactx_e =.
missing_w`wavenum' HeActa, result(r`wavenum'vgactx_e)
replace r`wavenum'vgactx_e =.p if askpx == 1
replace r`wavenum'vgactx_e = 2 if HeActa == 1
replace r`wavenum'vgactx_e = 3 if HeActa == 2
replace r`wavenum'vgactx_e = 4 if HeActa == 3
replace r`wavenum'vgactx_e = 5 if HeActa == 4
label variable r`wavenum'vgactx_e "r`wavenum'vgactx_e:w`wavenum' R Freq vigorous phys activ"

*wave 6 spouse vigorous physical activity
gen s`wavenum'vgactx_e =.
spouse r`wavenum'vgactx_e, result(s`wavenum'vgactx_e) wave(`wavenum')
label variable s`wavenum'vgactx_e "s`wavenum'vgactx_e:w`wavenum' S Freq vigorous phys activ"

*label values
label values r`wavenum'vgactx_e activity
label values s`wavenum'vgactx_e activity

*check 

***Moderate physical activity***
*wave 6 respondent moderate physical activity
gen r`wavenum'mdactx_e =.
missing_w`wavenum' HeActb, result(r`wavenum'mdactx_e)
replace r`wavenum'mdactx_e = 2 if HeActb == 1
replace r`wavenum'mdactx_e = 3 if HeActb == 2
replace r`wavenum'mdactx_e = 4 if HeActb == 3
replace r`wavenum'mdactx_e = 5 if HeActb == 4
label variable r`wavenum'mdactx_e "r`wavenum'mdactx_e:w`wavenum' R Freq moderate phys activ"

*wave 6 spouse vigorous moderate activity
gen s`wavenum'mdactx_e =.
spouse r`wavenum'mdactx_e, result(s`wavenum'mdactx_e) wave(`wavenum')
label variable s`wavenum'mdactx_e "s`wavenum'mdactx_e:w`wavenum' S Freq moderate phys activ"

*label values
label values r`wavenum'mdactx_e activity
label values s`wavenum'mdactx_e activity

*check 

***Light physical activity***
*wave 6 respondent light physical activity
gen r`wavenum'ltactx_e =.
missing_w`wavenum' HeActc, result(r`wavenum'ltactx_e)
replace r`wavenum'ltactx_e = 2 if HeActc == 1
replace r`wavenum'ltactx_e = 3 if HeActc == 2
replace r`wavenum'ltactx_e = 4 if HeActc == 3
replace r`wavenum'ltactx_e = 5 if HeActc == 4
label variable r`wavenum'ltactx_e "r`wavenum'ltactx_e:w`wavenum' R Freq light phys activ"

*wave 6 spouse vigorous light activity
gen s`wavenum'ltactx_e =.
spouse r`wavenum'ltactx_e, result(s`wavenum'ltactx_e) wave(`wavenum')
label variable s`wavenum'ltactx_e "s`wavenum'ltactx_e:w`wavenum' S Freq light phys activ"

*label values
label values r`wavenum'ltactx_e activity
label values s`wavenum'ltactx_e activity

*check 

***Ever drinks alcohol***
*wave 6 respondent ever drinks alcohol
gen r`wavenum'drink =.
replace r`wavenum'drink =.m if scako == -9
replace r`wavenum'drink =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drink = 0 if scako == 8
replace r`wavenum'drink = 1 if inrange(scako,1,7)
label variable r`wavenum'drink "r`wavenum'drink:w`wavenum' R ever drinks any alcohol"

*wave 6 spouse ever drinks alcohol
gen s`wavenum'drink =.
spouse r`wavenum'drink, result(s`wavenum'drink) wave(`wavenum')
label variable s`wavenum'drink "s`wavenum'drink:w`wavenum' S ever drinks any alcohol"

*label values
label values r`wavenum'drink ever_drink
label values s`wavenum'drink ever_drink

*check 

***Days per week drinks***
*wave 6 respondent days per week drinks
gen r`wavenum'drinkd_e =.
replace r`wavenum'drinkd_e =.m if scako == -9 | scal7a == -9 | scal7b == -9
replace r`wavenum'drinkd_e =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drinkd_e = 0 if scako == 8 | scal7a == 2
replace r`wavenum'drinkd_e = 1 if scal7b == 1
replace r`wavenum'drinkd_e = 2 if scal7b == 2
replace r`wavenum'drinkd_e = 3 if scal7b == 3
replace r`wavenum'drinkd_e = 4 if scal7b == 4
replace r`wavenum'drinkd_e = 5 if scal7b == 5
replace r`wavenum'drinkd_e = 6 if scal7b == 6
replace r`wavenum'drinkd_e = 7 if scal7b == 7
label variable r`wavenum'drinkd_e "r`wavenum'drinkd_e:w`wavenum' R # days/week drinks"

*wave 6 spouse days per week drinks
gen s`wavenum'drinkd_e =.
spouse r`wavenum'drinkd_e, result(s`wavenum'drinkd_e) wave(`wavenum')
label variable s`wavenum'drinkd_e "s`wavenum'drinkd_e:w`wavenum' S # days/week drinks"
*
**label values
*label values r`wavenum'drinkd_e drinks_flag
*label values s`wavenum'drinkd_e drinks_flag

*check 

***Drinks per week***
*wave 6 respondent drinks per week
gen r`wavenum'drinkwn_e =.
replace r`wavenum'drinkwn_e =.m if scako == -9 | scal7a == -9 | scal7b == -9 | ///
																	scdrspi == -9 | scdrwin == -9 | scdrpin == -9
replace r`wavenum'drinkwn_e =.c if inw`wavenum'sc == 0 & inw`wavenum'==1
replace r`wavenum'drinkwn_e = 0 if scako == 8 | inlist(scal7a,1,2) | inrange(scal7b,1,7)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrspi if !inlist(scdrspi,-9,-2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrwin if !inlist(scdrwin,-9,-2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrpin if !inlist(scdrpin,-9,-2,-1)
label variable r`wavenum'drinkwn_e "r`wavenum'drinkwn_e:w`wavenum' R # drinks/week"
replace r`wavenum'drinkwn_e=round(r`wavenum'drinkwn_e)

*wave 6 spouse drinks per week
gen s`wavenum'drinkwn_e =.
spouse r`wavenum'drinkwn_e, result(s`wavenum'drinkwn_e) wave(`wavenum')
label variable s`wavenum'drinkwn_e "s`wavenum'drinkwn_e:w`wavenum' S # drinks/week"

*label values
*label values r`wavenum'drinkwn_e drinks_flag
*label values s`wavenum'drinkwn_e drinks_flag

*check 

***Ever smoked cigarettes***
*wave 6 respondent ever smoked cigarettes
local smokever
gen r`wavenum'smokev =.
missing_w`wavenum' HeSmk HeSke, result(r`wavenum'smokev)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'smokev = r`w'smokev if inlist(r`w'smokev,0,1) & inw`wavenum'==1
	local smokever `smokever' r`w'smokev
}
replace r`wavenum'smokev = 0 if HeSmk == 2 | HeSke == 1
replace r`wavenum'smokev = 1 if HeSmk == 1 | inlist(HeSke,2,3)
label variable r`wavenum'smokev "r`wavenum'smokev:w`wavenum' R smoke ever"

*wave 6 spouse ever smoked cigarettes
gen s`wavenum'smokev =.
spouse r`wavenum'smokev, result(s`wavenum'smokev) wave(`wavenum')
label variable s`wavenum'smokev "s`wavenum'smokev:w`wavenum' S smoke ever"

*previous waves ever smoked if disputed
forvalues w = 1/`pre_wavenum' {
	replace r`w'smokev=0 if HeSke==1 & r`w'smokev==1
}

*label values
label values r`wavenum'smokev smokes
label values s`wavenum'smokev smokes

*check 

***Smokes cigarettes now***
*wave 6 respondent smokes cigarettes now
gen r`wavenum'smoken =.
missing_w`wavenum' HeSmk HESka, result(r`wavenum'smoken)
replace r`wavenum'smoken = 0 if HeSmk == 2 | HESka == 2
replace r`wavenum'smoken = 1 if HESka == 1
label variable r`wavenum'smoken "r`wavenum'smoken:w`wavenum' R smokes now"

*wave 6 spouse smokes cigarettes now
gen s`wavenum'smoken =.
spouse r`wavenum'smoken, result(s`wavenum'smoken) wave(`wavenum')
label variable s`wavenum'smoken "s`wavenum'smoken:w`wavenum' S smokes now"

*previous waves smokes now if disputed
tempvar stop
gen `stop'=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace `stop'=1 if HeSke==2 & r`w'smoken==1 & mi(`stop')
	replace r`w'smoken=0 if HeSke==2 & r`w'smoken==1 & `stop'!=2
	replace `stop'=2 if r`w'smoken==0 & `stop'==1
}

forvalues w = 1/`pre_wavenum' {
	replace r`w'smoken=0 if HeSke==1 & r`w'smoken==1
}

*label values
label values r`wavenum'smoken smokes
label values s`wavenum'smoken smokes

*check 

**Smoking frequency ****
*wave 6 respondent smoking frequency
gen r`wavenum'smokef = .
missing_w`wavenum' HeSmk HESka HeSkc HeSkb HECig , result(r`wavenum'smokef)
replace r`wavenum'smokef = 0  if r`wavenum'smoken == 0
replace r`wavenum'smokef = 0  if HECig ==2
replace r`wavenum'smokef = (HeSkb*5 + HeSkc*2)/7 if !inlist(HeSkb,-1,-8,-9) & !inlist(HeSkc,-1,-8,-9) 

label var r`wavenum'smokef "r`wavenum'smokef:w`wavenum' R # cigarettes/day"

*wave 6 spouse smoking frequency
gen s`wavenum'smokef = .
spouse r`wavenum'smokef, result(s`wavenum'smokef) wave(`wavenum')
label var s`wavenum'smokef "s`wavenum'smokef:w`wavenum' S # cigarettes/day"

***BMI***
*wave 6 respondent BMI
gen r`wavenum'bmi =.
replace r`wavenum'bmi = .n if `inw`wavenum'nurse' !=1 & inw`wavenum' == 1
replace r`wavenum'bmi = .b if WTOK == 2 | HTOK == 2
replace r`wavenum'bmi = .r if WTOK == 3 | HTOK == 3
replace r`wavenum'bmi = .o if WTOK == 4 | HTOK == 4
replace r`wavenum'bmi = .a if WTOK == 5 | HTOK == 5
replace r`wavenum'bmi = WTVAL/((HTVAL/100)*(HTVAL/100)) if !inlist(HTVAL,.,-1) & !inlist(WTVAL,.,-1)
label variable r`wavenum'bmi "r`wavenum'bmi:w`wavenum' r Body Mass Index=kg/m2"

*wave 6 spouse BMI
gen s`wavenum'bmi =.
spouse r`wavenum'bmi, result(s`wavenum'bmi) wave(`wavenum')
label variable s`wavenum'bmi "s`wavenum'bmi:w`wavenum' s Body Mass Index=kg/m2"

*check

***BMI Categories***
*wave 6 respondent BMI categories
gen r`wavenum'bmicat = .
replace r`wavenum'bmicat = .n if `inw`wavenum'nurse' == 0 & inw`wavenum' == 1
replace r`wavenum'bmicat = .b if WTOK == 2 | HTOK == 2
replace r`wavenum'bmicat = .r if WTOK == 3 | HTOK == 3
replace r`wavenum'bmicat = .o if WTOK == 4 | HTOK == 4
replace r`wavenum'bmicat = .a if WTOK == 5 | HTOK == 5
replace r`wavenum'bmicat = 1 if inrange(r`wavenum'bmi,1,18.49999)
replace r`wavenum'bmicat = 2 if inrange(r`wavenum'bmi,18.50,24.99999)
replace r`wavenum'bmicat = 3 if inrange(r`wavenum'bmi,25,29.99999)
replace r`wavenum'bmicat = 4 if inrange(r`wavenum'bmi,30,34.99999)
replace r`wavenum'bmicat = 5 if inrange(r`wavenum'bmi,35,39.99999)
replace r`wavenum'bmicat = 6 if inrange(r`wavenum'bmi,40,100)
label variable r`wavenum'bmicat "r`wavenum'bmicat:w`wavenum' r BMI categorization"
label values r`wavenum'bmicat bmicate

*wave 6 spouse BMI categories
gen s`wavenum'bmicat = .
spouse r`wavenum'bmicat, result(s`wavenum'bmicat) wave(`wavenum')
label variable s`wavenum'bmicat "s`wavenum'bmicat:w`wavenum' s BMI categorization"
label values s`wavenum'bmicat bmicate

***Height in meters***
*wave 6 respondent height in meters
gen r`wavenum'height =.
replace r`wavenum'height = .n if `inw`wavenum'nurse' !=1 & inw`wavenum' == 1
replace r`wavenum'height = .b if HTOK == 2
replace r`wavenum'height = .r if HTOK == 3
replace r`wavenum'height = .o if HTOK == 4
replace r`wavenum'height = .a if HTOK == 5
replace r`wavenum'height = HTVAL/100 if !inlist(HTVAL,.,-1)
label variable r`wavenum'height "r`wavenum'height:w`wavenum' r Height in meters"

*wave 6 spouse height in meters
gen s`wavenum'height =.
spouse r`wavenum'height, result(s`wavenum'height) wave(`wavenum')
label variable s`wavenum'height "s`wavenum'height:w`wavenum' s Height in meters"

*check

***Weight in kilograms***
*wave 6 respondent weight in kilograms
gen r`wavenum'weight =.
replace r`wavenum'weight = .n if `inw`wavenum'nurse' == 0 & inw`wavenum' == 1
replace r`wavenum'weight = .b if WTOK == 2
replace r`wavenum'weight = .r if WTOK == 3
replace r`wavenum'weight = .o if WTOK == 4
replace r`wavenum'weight = .a if WTOK == 5
replace r`wavenum'weight = WTVAL if !inlist(WTVAL,.,-1)
label variable r`wavenum'weight "r`wavenum'weight:w`wavenum' r Weight in kilograms"

*wave 6 spouse weight in kilograms
gen s`wavenum'weight =.
spouse r`wavenum'weight, result(s`wavenum'weight) wave(`wavenum')
label variable s`wavenum'weight "s`wavenum'weight:w`wavenum' s Weight in kilograms"

*check

***drop ELSA wave specific core file raw variables***
drop `health_w`wavenum'_core'

***drop ELSA wave specific nurse file raw variables***
drop `health_w`wavenum'_nurse'

******************************************************************************************



*set wave number
local wavenum=7
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave specific core data***
local health_w`wavenum'_core askpx Hehelf HeLWk ///
								 headl?? hemob?? ///
								PScedA PScedB PScedC PScedD PScedE PScedF PScedG PScedH ///
								 hedia?? hedim?? hedib?? hedac?? hedbd?? ///
								 HeActa HeActb HeActc HEMamB HEPro hemamty hemamtm heproty heprotm ///
								 scako scal7a scal7b scdrspi scdrwin scdrpin  /// 
								 HESka HeSkb HeSkc HeSkd HeSke HeSkf HeSmk HECig ///
								 heoptca heopcca HeFrac
merge 1:1 idauniq using "$wave_7_core", keepusing(`health_w`wavenum'_core') nogen




***self-report of health***
*wave 7 respondent self-report of health
gen r`wavenum'shlt =.
missing_w`wavenum' Hehelf, result(r`wavenum'shlt)
replace r`wavenum'shlt = .p if askpx == 1
replace r`wavenum'shlt = Hehelf if inrange(Hehelf,1,5)
label variable r`wavenum'shlt "r`wavenum'shlt:w`wavenum' r self-report of health"

*wave 7 spouse self-report of health
gen s`wavenum'shlt =.
spouse r`wavenum'shlt, result(s`wavenum'shlt) wave(`wavenum')
label variable s`wavenum'shlt "s`wavenum'shlt:w`wavenum' s self-report of health"

*value labels
label values r`wavenum'shlt health
label values s`wavenum'shlt health

*check 

***Whether health limits work***
*wave 7 respondent whether health limits work
gen r`wavenum'hlthlm =.
missing_w`wavenum' HeLWk, result(r`wavenum'hlthlm)
replace r`wavenum'hlthlm = .p if askpx == 1
replace r`wavenum'hlthlm = 0 if HeLWk == 2
replace r`wavenum'hlthlm = 1 if HeLWk == 1
label variable r`wavenum'hlthlm "r`wavenum'hlthlm:w`wavenum' r hlth problems limit work"

*wave 7 spouse whether health limits work
gen s`wavenum'hlthlm =.
spouse r`wavenum'hlthlm, result(s`wavenum'hlthlm) wave(`wavenum')
label variable s`wavenum'hlthlm "s`wavenum'hlthlm:w`wavenum' s hlth problems limit work"

*value labels
label values r`wavenum'hlthlm limitwork
label values s`wavenum'hlthlm limitwork

*check 

***Some difficulty walking cross room***
*wave 7 respondent difficulty walking across room
gen r`wavenum'walkra =.
missing_w`wavenum' headlwa, result(r`wavenum'walkra)
replace r`wavenum'walkra = 0 if headlwa==0
replace r`wavenum'walkra = 1 if headlwa==1
label variable r`wavenum'walkra "r`wavenum'walkra:w`wavenum' R Some Diff-Walk across room"

*wave 7 spouse difficulty walking across room
gen s`wavenum'walkra =.
spouse r`wavenum'walkra, result(s`wavenum'walkra) wave(`wavenum')
label variable s`wavenum'walkra "s`wavenum'walkra:w`wavenum' S Some Diff-Walk across room"

*value labels
label values r`wavenum'walkra diff
label values s`wavenum'walkra diff

*check 

***Some difficulty dressing***
*wave 7 respondent difficulty dressing
gen r`wavenum'dressa =.
missing_w`wavenum' headldr, result(r`wavenum'dressa)
replace r`wavenum'dressa = 0 if headldr==0
replace r`wavenum'dressa = 1 if headldr==1
label variable r`wavenum'dressa "r`wavenum'dressa:w`wavenum' R Some Diff-Dressing"

*wave 7 spouse difficulty dressing
gen s`wavenum'dressa =.
spouse r`wavenum'dressa, result(s`wavenum'dressa) wave(`wavenum')
label variable s`wavenum'dressa "s`wavenum'dressa:w`wavenum' S Some Diff-Dressing"

*value labels
label values r`wavenum'dressa diff
label values s`wavenum'dressa diff

*check 

***Some difficulty bathing, shower***
*wave 7 respondent difficulty bathing, shower
gen r`wavenum'batha =.
missing_w`wavenum' headlba, result(r`wavenum'batha)
replace r`wavenum'batha = 0 if headlba==0
replace r`wavenum'batha = 1 if headlba==1
label variable r`wavenum'batha "r`wavenum'batha:w`wavenum' R Some Diff-Bathing, shower"

*wave 7 spouse difficulty bathing, shower
gen s`wavenum'batha =.
spouse r`wavenum'batha, result(s`wavenum'batha) wave(`wavenum')
label variable s`wavenum'batha "s`wavenum'batha:w`wavenum' S Some Diff-Bathing, shower"

*value labels
label values r`wavenum'batha diff
label values s`wavenum'batha diff

*check 

***Some difficulty eating***
*wave 7 respondent difficulty eating
gen r`wavenum'eata =.
missing_w`wavenum' headlea, result(r`wavenum'eata)
replace r`wavenum'eata = 0 if headlea==0
replace r`wavenum'eata = 1 if headlea==1
label variable r`wavenum'eata "r`wavenum'eata:w`wavenum' R Some Diff-Eating"

*wave 7 spouse difficulty eating
gen s`wavenum'eata =.
spouse r`wavenum'eata, result(s`wavenum'eata) wave(`wavenum')
label variable s`wavenum'eata "s`wavenum'eata:w`wavenum' S Some Diff-Eating"

*value labels
label values r`wavenum'eata diff
label values s`wavenum'eata diff

*check 

***Some difficulty getting in/out of bed***
*wave 7 respondent difficulty getting in/out of bed
gen r`wavenum'beda =.
missing_w`wavenum' headlbe, result(r`wavenum'beda)
replace r`wavenum'beda = 0 if headlbe==0
replace r`wavenum'beda = 1 if headlbe==1
label variable r`wavenum'beda "r`wavenum'beda:w`wavenum' R Some Diff-Get in/out bed"

*wave 7 spouse difficulty getting in/out of bed
gen s`wavenum'beda =.
spouse r`wavenum'beda, result(s`wavenum'beda) wave(`wavenum')
label variable s`wavenum'beda "s`wavenum'beda:w`wavenum' S Some Diff-Get in/out bed"

*value labels
label values r`wavenum'beda diff
label values s`wavenum'beda diff

*check 

***Some difficulty using the toilet***
*wave 7 respondent difficulty using the toilet
gen r`wavenum'toilta =.
missing_w`wavenum' headlwc, result(r`wavenum'toilta)
replace r`wavenum'toilta = 0 if headlwc==0
replace r`wavenum'toilta = 1 if headlwc==1
label variable r`wavenum'toilta "r`wavenum'toilta:w`wavenum' R Some Diff-Using the toilet"

**wave 7 spouse difficulty using the toilet
gen s`wavenum'toilta =.
spouse r`wavenum'toilta, result(s`wavenum'toilta) wave(`wavenum')
label variable s`wavenum'toilta "s`wavenum'toilta:w`wavenum' S Some Diff-Using the toilet"

*value labels
label values r`wavenum'toilta diff
label values s`wavenum'toilta diff

*check 

***Some difficulty using using a map***
*wave 7 respondent difficulty using a map
gen r`wavenum'mapa =.
missing_w`wavenum' headlma, result(r`wavenum'mapa)
replace r`wavenum'mapa = 0 if headlma==0
replace r`wavenum'mapa = 1 if headlma==1
label variable r`wavenum'mapa "r`wavenum'mapa:w`wavenum' R Some Diff-Use a map"

*wave 7 spouse difficulty using a map
gen s`wavenum'mapa =.
spouse r`wavenum'mapa, result(s`wavenum'mapa) wave(`wavenum')
label variable s`wavenum'mapa "s`wavenum'mapa:w`wavenum' S Some Diff-Use a map"

*value labels
label values r`wavenum'mapa diff
label values s`wavenum'mapa diff

*check 

***Some difficulty using a telephone***
*wave 7 respondent difficulty using a telephone
gen r`wavenum'phonea =.
missing_w`wavenum' headlph, result(r`wavenum'phonea)
replace r`wavenum'phonea = 0 if headlph==0
replace r`wavenum'phonea = 1 if headlph==1
label variable r`wavenum'phonea "r`wavenum'phonea:w`wavenum' R Some Diff-Use a telephone"

*wave 7 spouse difficulty using a telephone
gen s`wavenum'phonea =.
spouse r`wavenum'phonea, result(s`wavenum'phonea) wave(`wavenum')
label variable s`wavenum'phonea "s`wavenum'phonea:w`wavenum' S Some Diff-Use a telephone"

*value labels
label values r`wavenum'phonea diff
label values s`wavenum'phonea diff

*check 

***Some difficulty manging money***
*wave 7 respondent difficulty manging money
gen r`wavenum'moneya =.
missing_w`wavenum' headlmo, result(r`wavenum'moneya)
replace r`wavenum'moneya = 0 if headlmo==0
replace r`wavenum'moneya = 1 if headlmo==1
label variable r`wavenum'moneya "r`wavenum'moneya:w`wavenum' R Some Diff-Managing money"

*wave 7 spouse difficulty manging money
gen s`wavenum'moneya =.
spouse r`wavenum'moneya, result(s`wavenum'moneya) wave(`wavenum')
label variable s`wavenum'moneya "s`wavenum'moneya:w`wavenum' S Some Diff-Managing money"

*value labels
label values r`wavenum'moneya diff
label values s`wavenum'moneya diff

*check 

***Some difficulty taking medications***
*wave 7 respondent difficulty taking medications
gen r`wavenum'medsa =.
missing_w`wavenum' headlme, result(r`wavenum'medsa)
replace r`wavenum'medsa = 0 if headlme==0
replace r`wavenum'medsa = 1 if headlme==1
label variable r`wavenum'medsa "r`wavenum'medsa:w`wavenum' R Some Diff-Take medications"

*wave 7 spouse difficulty taking medications
gen s`wavenum'medsa =.
spouse r`wavenum'medsa, result(s`wavenum'medsa) wave(`wavenum')
label variable s`wavenum'medsa "s`wavenum'medsa:w`wavenum' S Some Diff-Take medications"

*value labels
label values r`wavenum'medsa diff
label values s`wavenum'medsa diff

*check 

***Some difficulty shopping for groceries***
*wave 7 respondent difficulty shopping for groceries
gen r`wavenum'shopa =.
missing_w`wavenum' headlsh, result(r`wavenum'shopa)
replace r`wavenum'shopa = 0 if headlsh==0
replace r`wavenum'shopa = 1 if headlsh==1
label variable r`wavenum'shopa "r`wavenum'shopa:w`wavenum' R Some Diff-Shop for grocery"

*wave 7 spouse difficulty shopping for groceries
gen s`wavenum'shopa =.
spouse r`wavenum'shopa, result(s`wavenum'shopa) wave(`wavenum')
label variable s`wavenum'shopa "s`wavenum'shopa:w`wavenum' S Some Diff-Shop for grocery"

*value labels
label values r`wavenum'shopa diff
label values s`wavenum'shopa diff

*check 

***Some difficulty preparing a hot meal***
*wave 7 respondent difficulty preparing a hot meal
gen r`wavenum'mealsa =.
missing_w`wavenum' headlpr, result(r`wavenum'mealsa)
replace r`wavenum'mealsa = 0 if headlpr==0
replace r`wavenum'mealsa = 1 if headlpr==1
label variable r`wavenum'mealsa "r`wavenum'mealsa:w`wavenum' R Some Diff-Prepare hot meal"

*wave 7 spouse difficulty preparing a hot meal
gen s`wavenum'mealsa =.
spouse r`wavenum'mealsa, result(s`wavenum'mealsa) wave(`wavenum')
label variable s`wavenum'mealsa "s`wavenum'mealsa:w`wavenum' S Some Diff-Prepare hot meal"

*value labels
label values r`wavenum'mealsa diff
label values s`wavenum'mealsa diff

*check 

***Some difficulty Doing work around the house or garden***
*wave 7 respondent difficulty Doing work around the house or garden
gen r`wavenum'housewka =.
missing_w`wavenum' headlho, result(r`wavenum'housewka)
replace r`wavenum'housewka = 0 if headlho==0
replace r`wavenum'housewka = 1 if headlho==1
label variable r`wavenum'housewka "r`wavenum'housewka:w`wavenum' R Some Diff-Doing work around the house or garden"

*wave 7 spouse difficulty Doing work around the house or garden
gen s`wavenum'housewka =.
spouse r`wavenum'housewka, result(s`wavenum'housewka) wave(`wavenum')
label variable s`wavenum'housewka "s`wavenum'housewka:w`wavenum' S Some Diff-Doing work around the house or garden"

*value labels
label values r`wavenum'housewka diff
label values s`wavenum'housewka diff

*check 


***Difficulty Walking 100m***
*wave 7 respondent difficulty walking 100m
gen r`wavenum'walk100a =.
missing_w`wavenum' hemobwa, result(r`wavenum'walk100a)
replace r`wavenum'walk100a = 0 if hemobwa==0
replace r`wavenum'walk100a = 1 if hemobwa==1
label variable r`wavenum'walk100a "r`wavenum'walk100a:w`wavenum' R Some Diff-Walk 100y"

*wave 7 spouse difficulty walking 100m
gen s`wavenum'walk100a =.
spouse r`wavenum'walk100a, result(s`wavenum'walk100a) wave(`wavenum')
label variable s`wavenum'walk100a "s`wavenum'walk100a:w`wavenum' S Some Diff-Walk 100y"

*value labels
label values r`wavenum'walk100a diff
label values s`wavenum'walk100a diff

*check 

***Difficulty sitting for 2 hours***
*wave 7 respondent difficulty sitting for 2 hours
gen r`wavenum'sita =.
missing_w`wavenum' hemobsi, result(r`wavenum'sita)
replace r`wavenum'sita = 0 if hemobsi==0
replace r`wavenum'sita = 1 if hemobsi==1
label variable r`wavenum'sita "r`wavenum'sita:w`wavenum' R Some Diff-Sit for 2 hours"

*wave 7 spouse difficulty sitting for 2 hours
gen s`wavenum'sita =.
spouse r`wavenum'sita, result(s`wavenum'sita) wave(`wavenum')
label variable s`wavenum'sita "s`wavenum'sita:w`wavenum' S Some Diff-Sit for 2 hours"

*value labels
label values r`wavenum'sita diff
label values s`wavenum'sita diff

*check 

***Difficulty getting up from a chair***
*wave 7 respondent difficulty getting up from a chair
gen r`wavenum'chaira =.
missing_w`wavenum' hemobch, result(r`wavenum'chaira)
replace r`wavenum'chaira = 0 if hemobch==0
replace r`wavenum'chaira = 1 if hemobch==1
label variable r`wavenum'chaira "r`wavenum'chaira:w`wavenum' R Some Diff-Get up fr chair"

*wave 7 spouse difficulty getting up from a chair
gen s`wavenum'chaira =.
spouse r`wavenum'chaira, result(s`wavenum'chaira) wave(`wavenum')
label variable s`wavenum'chaira "s`wavenum'chaira:w`wavenum' S Some Diff-Get up fr chair"

*value labels
label values r`wavenum'chaira diff
label values s`wavenum'chaira diff

*check 

***Difficulty climbing several flights of stairs***
*wave 7 respondent difficulty climbing several flights of stairs
gen r`wavenum'climsa =.
missing_w`wavenum' hemobcs, result(r`wavenum'climsa)
replace r`wavenum'climsa = 0 if hemobcs==0
replace r`wavenum'climsa = 1 if hemobcs==1
label variable r`wavenum'climsa "r`wavenum'climsa:w`wavenum' R Some Diff-Clmb sev flt str"

*wave 7 spouse difficulty climbing several flights of stairs
gen s`wavenum'climsa =.
spouse r`wavenum'climsa, result(s`wavenum'climsa) wave(`wavenum')
label variable s`wavenum'climsa "s`wavenum'climsa:w`wavenum' S Some Diff-Clmb sev flt str"

*value labels
label values r`wavenum'climsa diff
label values s`wavenum'climsa diff

*check 

***Difficulty climbing one flight of stairs***
*wave 7 respondent difficulty climbing one flight of stairs
gen r`wavenum'clim1a =.
missing_w`wavenum' hemobcl, result(r`wavenum'clim1a)
replace r`wavenum'clim1a = 0 if hemobcl==0
replace r`wavenum'clim1a = 1 if hemobcl==1
label variable r`wavenum'clim1a "r`wavenum'clim1a:w`wavenum' R Some Diff-Clmb 1 flt str"

*wave 7 spouse difficulty climbing one flight of stairs
gen s`wavenum'clim1a =.
spouse r`wavenum'clim1a, result(s`wavenum'clim1a) wave(`wavenum')
label variable s`wavenum'clim1a "s`wavenum'clim1a:w`wavenum' S Some Diff-Clmb 1 flt str"

*value labels
label values r`wavenum'clim1a diff
label values s`wavenum'clim1a diff

*check 

***Difficulty stooping/kneeling/crouching***
*wave 7 respondent difficulty stooping/kneeling/crouching
gen r`wavenum'stoopa =.
missing_w`wavenum' hemobst, result(r`wavenum'stoopa)
replace r`wavenum'stoopa = 0 if hemobst==0
replace r`wavenum'stoopa = 1 if hemobst==1
label variable r`wavenum'stoopa "r`wavenum'stoopa:w`wavenum' R Some Diff-Stoop/Kneel/Crch"

*wave 7 spouse difficulty stooping/kneeling/crouching
gen s`wavenum'stoopa =.
spouse r`wavenum'stoopa, result(s`wavenum'stoopa) wave(`wavenum')
label variable s`wavenum'stoopa "s`wavenum'stoopa:w`wavenum' S Some Diff-Stoop/Kneel/Crch"

*value labels
label values r`wavenum'stoopa diff
label values s`wavenum'stoopa diff

*check 

***Difficulty lifting/carrying 10lbs***
*wave 7 respondent difficulty lifting/carrying 10lbs
gen r`wavenum'lifta =.
missing_w`wavenum' hemobli, result(r`wavenum'lifta)
replace r`wavenum'lifta = 0 if hemobli==0
replace r`wavenum'lifta = 1 if hemobli==1
label variable r`wavenum'lifta "r`wavenum'lifta:w`wavenum' R Some Diff-Lift/carry 10lbs"

*wave 7 spouse difficulty lifting/carrying 10lbs
gen s`wavenum'lifta =.
spouse r`wavenum'lifta, result(s`wavenum'lifta) wave(`wavenum')
label variable s`wavenum'lifta "s`wavenum'lifta:w`wavenum' S Some Diff-Lift/carry 10lbs"

*value labels
label values r`wavenum'lifta diff
label values s`wavenum'lifta diff

*check 

***Difficulty picking up a dime***
*wave 7 respondent difficulty picking up a dime
gen r`wavenum'dimea =.
missing_w`wavenum' hemobpi, result(r`wavenum'dimea)
replace r`wavenum'dimea = 0 if hemobpi==0
replace r`wavenum'dimea = 1 if hemobpi==1
label variable r`wavenum'dimea "r`wavenum'dimea:w`wavenum' R Some Diff-Pick up a 5p coin"

*wave 7 spouse difficulty picking up a dime
gen s`wavenum'dimea =.
spouse r`wavenum'dimea, result(s`wavenum'dimea) wave(`wavenum')
label variable s`wavenum'dimea "s`wavenum'dimea:w`wavenum' S Some Diff-Pick up a 5p coin"

*value labels
label values r`wavenum'dimea diff
label values s`wavenum'dimea diff

*check 

***Difficulty reaching/extending arms up***
*wave 7 respondent difficulty reaching/extending arms up
gen r`wavenum'armsa =.
missing_w`wavenum' hemobre, result(r`wavenum'armsa)
replace r`wavenum'armsa = 0 if hemobre==0
replace r`wavenum'armsa = 1 if hemobre==1
label variable r`wavenum'armsa "r`wavenum'armsa:w`wavenum' R Some Diff-Rch/xtnd arms up"

*wave 7 spouse difficulty reaching/extending arms up
gen s`wavenum'armsa =.
spouse r`wavenum'armsa, result(s`wavenum'armsa) wave(`wavenum')
label variable s`wavenum'armsa "s`wavenum'armsa:w`wavenum' S Some Diff-Rch/xtnd arms up"

*value labels
label values r`wavenum'armsa diff
label values s`wavenum'armsa diff

*check 


***Difficulty pushing/pulling a large object***
*wave 7 respondent difficulty pushing/pulling a large object
gen r`wavenum'pusha =.
missing_w`wavenum' hemobpu, result(r`wavenum'pusha)
replace r`wavenum'pusha = 0 if hemobpu==0
replace r`wavenum'pusha = 1 if hemobpu==1
label variable r`wavenum'pusha "r`wavenum'pusha:w`wavenum' R Some Diff-Push/pull lg obj"

*wave 7 spouse difficulty pushing/pulling a large object
gen s`wavenum'pusha =.
spouse r`wavenum'pusha, result(s`wavenum'pusha) wave(`wavenum')
label variable s`wavenum'pusha "s`wavenum'pusha:w`wavenum' S Some Diff-Push/pull lg obj"

*value labels
label values r`wavenum'pusha diff
label values s`wavenum'pusha diff

*check 

***ADL Summary 0-5***
*wave 7 respondent ADL Summary 0-5
H_ELSA_summary_v adla, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata r`wavenum'beda r`wavenum'walkra) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adla "r`wavenum'adla:w`wavenum' R Some Diff-ADLs /0-5"

*wave 7 respondent Missing in ADL Summary
label variable r`wavenum'adlam "r`wavenum'adlam:w`wavenum' r Missings in Some Diff-ADLs /0-5"

*wave 7 spouse ADL Summary 0-5
gen s`wavenum'adla =.
spouse r`wavenum'adla, result(s`wavenum'adla) wave(`wavenum')
label variable s`wavenum'adla "s`wavenum'adla:w`wavenum' S Some Diff-ADLs /0-5"

*wave 7 spouse Missings in ADL Summary 0-5
gen s`wavenum'adlam =.
spouse r`wavenum'adlam, result(s`wavenum'adlam) wave(`wavenum')
label variable s`wavenum'adlam "s`wavenum'adlam:w`wavenum' S Missings in Some Diff-ADLs /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***ADL Wallace Summary 0-3***
*wave 7 respondent ADL Wallace Summary 0-3
H_ELSA_summary_v adlwa, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adlwa "r`wavenum'adlwa:w`wavenum' R Some Diff-ADLs:Wallace /0-3"

*wave 7 respondent Missings in ADL Wallace Summary 0-3
label variable r`wavenum'adlwam "r`wavenum'adlwam:w`wavenum' R Missings in Some Diff-ADLs:Wallace /0-3"

*wave 7 spouse ADL Wallace Summary 0-3
gen s`wavenum'adlwa =.
spouse r`wavenum'adlwa, result(s`wavenum'adlwa) wave(`wavenum')
label variable s`wavenum'adlwa "s`wavenum'adlwa:w`wavenum' S Some Diff-ADLs:Wallace /0-3"

*wave 7 spouse Missings in ADL Wallace Summary 0-3
gen s`wavenum'adlwam =.
spouse r`wavenum'adlwam, result(s`wavenum'adlwam) wave(`wavenum')
label variable s`wavenum'adlwam "s`wavenum'adlwam:w`wavenum' S Missings in Some Diff-ADLs:Wallace /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-3***
*wave 7 respondent IADLs Summary 0-3
H_ELSA_summary_v iadla, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadla "r`wavenum'iadla:w`wavenum' R Some Diff-IADLs: /0-3"

*wave 7 respondent Missings in IADLs Summary 0-3
label variable r`wavenum'iadlam "r`wavenum'iadlam:w`wavenum' R Missings in Some Diff-IADLs: /0-3"

*wave 7 spouse IADLs Summary 0-3
gen s`wavenum'iadla =.
spouse r`wavenum'iadla, result(s`wavenum'iadla) wave(`wavenum')
label variable s`wavenum'iadla "s`wavenum'iadla:w`wavenum' S Some Diff-IADLs: /0-3"

*wave 7 spouse Missings in IADLs Summary 0-3
gen s`wavenum'iadlam =.
spouse r`wavenum'iadlam, result(s`wavenum'iadlam) wave(`wavenum')
label variable s`wavenum'iadlam "s`wavenum'iadlam:w`wavenum' S Missings in Some Diff-IADLs: /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-5***
*wave 7 respondent IADLs Summary 0-5
H_ELSA_summary_v iadlza, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa r`wavenum'shopa r`wavenum'mealsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadlza "r`wavenum'iadlza:w`wavenum' R Some Diff-IADLs: /0-5"

*wave 7 respondent Missings in IADLs Summary 0-5
label variable r`wavenum'iadlzam "r`wavenum'iadlzam:w`wavenum' R Missings in Some Diff-IADLs: /0-5"

*wave 7 spouse IADLs Summary 0-5
gen s`wavenum'iadlza =.
spouse r`wavenum'iadlza, result(s`wavenum'iadlza) wave(`wavenum')
label variable s`wavenum'iadlza "s`wavenum'iadlza:w`wavenum' S Some Diff-IADLs: /0-5"

*wave 7 spouse Missings in IADLs Summary 0-5
gen s`wavenum'iadlzam =.
spouse r`wavenum'iadlzam, result(s`wavenum'iadlzam) wave(`wavenum')
label variable s`wavenum'iadlzam "s`wavenum'iadlzam:w`wavenum' S Missings in Some Diff-IADLs: /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Mobility Summary***
*wave 7 respondent Mobility Summary
H_ELSA_summary_v mobilb, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'climsa r`wavenum'clim1a) 
local varlist_m = r(varlist_m)
label variable r`wavenum'mobilb "r`wavenum'mobilb:w`wavenum' R Some Diff-Mobility /0-4"

*wave 7 respondent Missings in Mobility Summary
label variable r`wavenum'mobilbm "r`wavenum'mobilbm:w`wavenum' R Missings in Some Diff-Mobility /0-4"

*wave 7 spouse Mobility Summary
gen s`wavenum'mobilb =.
spouse r`wavenum'mobilb, result(s`wavenum'mobilb) wave(`wavenum')
label variable s`wavenum'mobilb "s`wavenum'mobilb:w`wavenum' S Some Diff-Mobility /0-4"

*wave 7 spouse Missings in Mobility Summary
gen s`wavenum'mobilbm =.
spouse r`wavenum'mobilbm, result(s`wavenum'mobilbm) wave(`wavenum')
label variable s`wavenum'mobilbm "s`wavenum'mobilbm:w`wavenum' S Missings in Some Diff-Mobility /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Large Muscle Summary***
*wave 7 respondent Large Muscle Summary
H_ELSA_summary_v lgmusa, wave(`wavenum') add(r`wavenum'sita r`wavenum'chaira r`wavenum'stoopa r`wavenum'pusha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'lgmusa "r`wavenum'lgmusa:w`wavenum' R Some Diff-Large muscle /0-4"

*wave 7 respondent Missings in Large Muscle Summary
label variable r`wavenum'lgmusam "r`wavenum'lgmusam:w`wavenum' R Missings in Some Diff-Large muscle /0-4"

*wave 7 spouse Large Muscle Summary
gen s`wavenum'lgmusa =.
spouse r`wavenum'lgmusa, result(s`wavenum'lgmusa) wave(`wavenum')
label variable s`wavenum'lgmusa "s`wavenum'lgmusa:w`wavenum' S Some Diff-Large muscle /0-4"

*wave 7 spouse Missings in Large Muscle Summary
gen s`wavenum'lgmusam =.
spouse r`wavenum'lgmusam, result(s`wavenum'lgmusam) wave(`wavenum')
label variable s`wavenum'lgmusam "s`wavenum'lgmusam:w`wavenum' S Missings in Some Diff-Large muscle /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Gross Motor Summary***
*wave 7 respondent Gross Motor Summary
H_ELSA_summary_v grossa, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'clim1a r`wavenum'beda r`wavenum'batha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'grossa "r`wavenum'grossa:w`wavenum' R Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 7 respondent Missings in Gross Motor Summary
label variable r`wavenum'grossam "r`wavenum'grossam:w`wavenum' R Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 7 spouse Gross Motor Summary
gen s`wavenum'grossa =.
spouse r`wavenum'grossa, result(s`wavenum'grossa) wave(`wavenum')
label variable s`wavenum'grossa "s`wavenum'grossa:w`wavenum' S Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 7 spouse Missings in Gross Motor Summary
gen s`wavenum'grossam =.
spouse r`wavenum'grossam, result(s`wavenum'grossam) wave(`wavenum')
label variable s`wavenum'grossam "s`wavenum'grossam:w`wavenum' S Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Fine Motor Summary***
*wave 7 respondent Fine Motor Summary
H_ELSA_summary_v finea, wave(`wavenum') add(r`wavenum'dimea r`wavenum'eata r`wavenum'dressa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'finea "r`wavenum'finea:w`wavenum' R Some Diff-Dime/eat/dress /0-3"

*wave 7 respondent Missings in Fine Motor Summary
label variable r`wavenum'fineam "r`wavenum'fineam:w`wavenum' R Missings in Some Diff-Dime/eat/dress /0-3"

*wave 7 spouse Fine Motor Summary
gen s`wavenum'finea =.
spouse r`wavenum'finea, result(s`wavenum'finea) wave(`wavenum')
label variable s`wavenum'finea "s`wavenum'finea:w`wavenum' S Some Diff-Dime/eat/dress /0-3"

*wave 7 spouse Missings in Fine Motor Summary
gen s`wavenum'fineam =.
spouse r`wavenum'fineam, result(s`wavenum'fineam) wave(`wavenum')
label variable s`wavenum'fineam "s`wavenum'fineam:w`wavenum' S Missings in Some Diff-Dime/eat/dress /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***Felt depressed (0,1)***
*wave 7 respondent Felt depressed (0,1)
gen r`wavenum'depres =.
missing_w`wavenum' PScedA, result(r`wavenum'depres)
replace r`wavenum'depres =.p if askpx == 1
replace r`wavenum'depres = 0 if PScedA == 2
replace r`wavenum'depres = 1 if PScedA == 1
label variable r`wavenum'depres "r`wavenum'depres:w`wavenum' r CESD: Felt depressed (0,1)"

*wave 7 spouse Felt depressed (0,1)
gen s`wavenum'depres =.
spouse r`wavenum'depres, result(s`wavenum'depres) wave(`wavenum')
label variable s`wavenum'depres "s`wavenum'depres:w`wavenum' s CESD: Felt depressed (0,1)"

*value labels
label values r`wavenum'depres cesd
label values s`wavenum'depres cesd

*check

***Everything is an effort***
*wave 7 respondent Everything is an effort
gen r`wavenum'effort =.
missing_w`wavenum' PScedB, result(r`wavenum'effort)
replace r`wavenum'effort =.p if askpx == 1
replace r`wavenum'effort = 0 if PScedB == 2
replace r`wavenum'effort = 1 if PScedB == 1
label variable r`wavenum'effort "r`wavenum'effort:w`wavenum' r CESD: Everthing an effort (0,1)"

*wave 7 spouse Everything is an effort
gen s`wavenum'effort =.
spouse r`wavenum'effort, result(s`wavenum'effort) wave(`wavenum')
label variable s`wavenum'effort "s`wavenum'effort:w`wavenum' s CESD: Everthing an effort (0,1)"

*value labels
label values r`wavenum'effort cesd
label values s`wavenum'effort cesd

*check

***Sleep was restless (0,1)***
*wave 7 respondent Sleep was restless (0,1)
gen r`wavenum'sleepr =.
missing_w`wavenum' PScedC, result(r`wavenum'sleepr)
replace r`wavenum'sleepr =.p if askpx == 1
replace r`wavenum'sleepr = 0 if PScedC == 2
replace r`wavenum'sleepr = 1 if PScedC == 1
label variable r`wavenum'sleepr "r`wavenum'sleepr:w`wavenum' r CESD: Sleep was restless (0,1)"

*wave 7 spouse Sleep was restless (0,1)
gen s`wavenum'sleepr =.
spouse r`wavenum'sleepr, result(s`wavenum'sleepr) wave(`wavenum')
label variable s`wavenum'sleepr "s`wavenum'sleepr:w`wavenum' s CESD: Sleep was restless (0,1)"

*value labels
label values r`wavenum'sleepr cesd
label values s`wavenum'sleepr cesd

*check

***Was happy (0,1)***
*wave 7 respondent Was happy (0,1)
gen r`wavenum'whappy =.
missing_w`wavenum' PScedD, result(r`wavenum'whappy)
replace r`wavenum'whappy =.p if askpx == 1
replace r`wavenum'whappy = 0 if PScedD == 2
replace r`wavenum'whappy = 1 if PScedD == 1
label variable r`wavenum'whappy "r`wavenum'whappy:w`wavenum' r CESD: Was happy (0,1)"

*wave 7 spouse Was happy (0,1)
gen s`wavenum'whappy =.
spouse r`wavenum'whappy, result(s`wavenum'whappy) wave(`wavenum')
label variable s`wavenum'whappy "s`wavenum'whappy:w`wavenum' s CESD: Was happy (0,1)"

*value labels
label values r`wavenum'whappy cesd
label values s`wavenum'whappy cesd

*check

***Felt lonely (0,1)***
*wave 7 respondent Felt lonely (0,1)
gen r`wavenum'flone =.
missing_w`wavenum' PScedE, result(r`wavenum'flone)
replace r`wavenum'flone =.p if askpx == 1
replace r`wavenum'flone = 0 if PScedE == 2
replace r`wavenum'flone = 1 if PScedE == 1
label variable r`wavenum'flone "r`wavenum'flone:w`wavenum' r CESD: Felt lonely (0,1)"

*wave 7 spouse Felt lonely (0,1)
gen s`wavenum'flone =.
spouse r`wavenum'flone, result(s`wavenum'flone) wave(`wavenum')
label variable s`wavenum'flone "s`wavenum'flone:w`wavenum' s CESD: Felt lonely (0,1)"

*value labels
label values r`wavenum'flone cesd
label values s`wavenum'flone cesd

*check

***Felt sad (0,1)***
*wave 7 respondent Felt sad (0,1)
gen r`wavenum'fsad =.
missing_w`wavenum' PScedG, result(r`wavenum'fsad)
replace r`wavenum'fsad =.p if askpx == 1
replace r`wavenum'fsad = 0 if PScedG == 2
replace r`wavenum'fsad = 1 if PScedG == 1
label variable r`wavenum'fsad "r`wavenum'fsad:w`wavenum' r CESD: Felt sad (0,1)"

*wave 7 spouse Felt sad (0,1)
gen s`wavenum'fsad =.
spouse r`wavenum'fsad, result(s`wavenum'fsad) wave(`wavenum')
label variable s`wavenum'fsad "s`wavenum'fsad:w`wavenum' s CESD: Felt sad (0,1)"

*value labels
label values r`wavenum'fsad cesd
label values s`wavenum'fsad cesd

*check

***Could not get going (0,1)***
*wave 7 respondent Could not get going (0,1)
gen r`wavenum'going =.
missing_w`wavenum' PScedH, result(r`wavenum'going)
replace r`wavenum'going =.p if askpx == 1
replace r`wavenum'going = 0 if PScedH == 2
replace r`wavenum'going = 1 if PScedH == 1
label variable r`wavenum'going "r`wavenum'going:w`wavenum' r CESD: Could not get going (0,1)"

*wave 7 spouse Could not get going (0,1)
gen s`wavenum'going =.
spouse r`wavenum'going, result(s`wavenum'going) wave(`wavenum')
label variable s`wavenum'going "s`wavenum'going:w`wavenum' s CESD: Could not get going (0,1)"

*value labels
label values r`wavenum'going cesd
label values s`wavenum'going cesd

*check

***Enjoyed life (0,1)***
*wave 7 respondent Enjoyed life (0,1)
gen r`wavenum'enlife =.
missing_w`wavenum' PScedF, result(r`wavenum'enlife)
replace r`wavenum'enlife =.p if askpx == 1
replace r`wavenum'enlife = 0 if PScedF == 2
replace r`wavenum'enlife = 1 if PScedF == 1
label variable r`wavenum'enlife "r`wavenum'enlife:w`wavenum' r CESD: Enjoyed life (0,1)"

*wave 7 spouse Enjoyed life (0,1)
gen s`wavenum'enlife =.
spouse r`wavenum'enlife, result(s`wavenum'enlife) wave(`wavenum')
label variable s`wavenum'enlife "s`wavenum'enlife:w`wavenum' s CESD: Enjoyed life (0,1)"

*value labels
label values r`wavenum'enlife cesd
label values s`wavenum'enlife cesd

*check

***CESD Score***
*wave 7 respondent CESD score number of missings
egen r`wavenum'cesdm = rowmiss(r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife) if inw`wavenum' == 1
label variable r`wavenum'cesdm "r`wavenum'cesdm:w`wavenum' r missings in CESD score"

*wave 7 spouse CESD score number of missings
gen s`wavenum'cesdm =.
spouse r`wavenum'cesdm, result(s`wavenum'cesdm) wave(`wavenum')
label variable s`wavenum'cesdm "s`wavenum'cesdm:w`wavenum' s missings in CESD score"

local cesd
foreach v of varlist r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going  {
	recode `v' (miss = 0), generate(`v'_m)
	local cesd `cesd' `v'_m
}

foreach u of varlist r`wavenum'whappy r`wavenum'enlife {
	recode `u' (miss = 1), generate(`u'_m)
	local cesd `cesd' `u'_m
}

*wave 7 respondent CESD score
gen r`wavenum'cesd=.
missing_H r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife, result(r`wavenum'cesd)
replace r`wavenum'cesd =.p if askpx == 1		 
replace r`wavenum'cesd = r`wavenum'depres_m + r`wavenum'effort_m + r`wavenum'sleepr_m + r`wavenum'flone_m + r`wavenum'fsad_m + r`wavenum'going_m + (1-r`wavenum'whappy_m) + (1-r`wavenum'enlife_m) if inrange(r`wavenum'cesdm,0,7)
label variable r`wavenum'cesd "r`wavenum'cesd:w`wavenum' r CESD Score"

*wave 7 spouse CESD score
gen s`wavenum'cesd =.
spouse r`wavenum'cesd, result(s`wavenum'cesd) wave(`wavenum')
label variable s`wavenum'cesd "s`wavenum'cesd:w`wavenum' s CESD Score"

*check 

*drop intermediate variables
drop `cesd'

***Ever had high blood pressure***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hibpe if !mi(r`w'hibpe) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had high blood pressure
gen r`wavenum'hibpe =.
missing_w`wavenum' hedacbp hedimbp, result(r`wavenum'hibpe)
replace r`wavenum'hibpe = 0 if preload == 0 & hedacbp != 2
replace r`wavenum'hibpe = 0 if hedimbp == 0
replace r`wavenum'hibpe = 0 if preload == 1 & hedacbp == 2
replace r`wavenum'hibpe = 1 if hedimbp == 1
replace r`wavenum'hibpe = 1 if preload == 1 & hedacbp != 2
label variable r`wavenum'hibpe "r`wavenum'hibpe:w`wavenum' r ever had high blood pressure"

*wave 7 respondent high blood pressure dispute flag
gen r`wavenum'hibpf =.
replace r`wavenum'hibpf = 0 if inlist(preload,0,1) | inlist(hedimbp,-9,-8,0,1)
replace r`wavenum'hibpf = 3 if preload == 1 & hedacbp == 2
label variable r`wavenum'hibpf "r`wavenum'hibpf:w`wavenum' r flag dispute chg high blood pressure"

*previous waves respondent high blood pressure dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpf = 6 if preload == 1 & hedacbp == 2 & r`w'hibpf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpe = 0 if preload == 1 & hedacbp == 2 & r`w'hibpe == 1
}

*value labels
label values r`wavenum'hibpe health_problems
label values r`wavenum'hibpf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}


drop preload

***Ever had diabetes***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'diabe if !mi(r`w'diabe) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had diabetes
gen r`wavenum'diabe =.
missing_w`wavenum' hedacdi hedimdi, result(r`wavenum'diabe)
replace r`wavenum'diabe = 0 if preload == 0 & hedacdi != 2
replace r`wavenum'diabe = 0 if hedimdi == 0
replace r`wavenum'diabe = 0 if preload == 1 & hedacdi == 2
replace r`wavenum'diabe = 1 if hedimdi == 1
replace r`wavenum'diabe = 1 if preload == 1 & hedacdi != 2
label variable r`wavenum'diabe "r`wavenum'diabe:w`wavenum' r ever had diabetes"

*wave 7 respondent diabetes dispute flag
gen r`wavenum'diabf =.
replace r`wavenum'diabf = 0 if inlist(preload,0,1) | inlist(hedimdi,-9,-8,0,1)
replace r`wavenum'diabf = 3 if preload == 1 & hedacdi == 2
label variable r`wavenum'diabf "r`wavenum'diabf:w`wavenum' r flag dispute chg diabetes"

*previous waves respondent diabetes dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabf = 6 if preload == 1 & hedacdi == 2 & r`w'diabf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabe = 0 if preload == 1 & hedacdi == 2 & r`w'diabe == 1
}

*value labels
label values r`wavenum'diabe health_problems
label values r`wavenum'diabf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had cancer***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'cancre if !mi(r`w'cancre) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had cancer
gen r`wavenum'cancre =.
missing_w`wavenum' hedbdca hedibca, result(r`wavenum'cancre)
replace r`wavenum'cancre = 0 if preload == 0 & hedbdca != 2
replace r`wavenum'cancre = 0 if hedibca == 0
replace r`wavenum'cancre = 0 if preload == 1 & hedbdca == 2
replace r`wavenum'cancre = 1 if hedibca == 1
replace r`wavenum'cancre = 1 if preload == 1 & hedbdca != 2
label variable r`wavenum'cancre "r`wavenum'cancre:w`wavenum' r ever had cancer"

*wave 7 respondent cancer dispute flag
gen r`wavenum'cancrf =.
replace r`wavenum'cancrf = 0 if inlist(preload,0,1) | inlist(hedibca,-9,-8,0,1)
replace r`wavenum'cancrf = 3 if preload == 1 & hedbdca == 2
label variable r`wavenum'cancrf "r`wavenum'cancrf:w`wavenum' r flag dispute chg cancer"

*previous waves respondent cancer dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancrf = 6 if preload == 1 & hedbdca == 2 & r`w'cancrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancre = 0 if preload == 1 & hedbdca == 2 & r`w'cancre == 1
}

*value labels
label values r`wavenum'cancre health_problems
label values r`wavenum'cancrf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had lung disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'lunge if !mi(r`w'lunge) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had lung disease
gen r`wavenum'lunge =.
missing_w`wavenum' hedbdlu hediblu, result(r`wavenum'lunge)
replace r`wavenum'lunge = 0 if preload == 0 & hedbdlu != 2
replace r`wavenum'lunge = 0 if hediblu == 0
replace r`wavenum'lunge = 0 if preload == 1 & hedbdlu == 2
replace r`wavenum'lunge = 1 if hediblu == 1
replace r`wavenum'lunge = 1 if preload == 1 & hedbdlu != 2
label variable r`wavenum'lunge "r`wavenum'lunge:w`wavenum' r ever had lung disease"

*wave 7 respondent lung disease dispute flag
gen r`wavenum'lungf =.
replace r`wavenum'lungf = 0 if inlist(preload,0,1) | inlist(hediblu,-9,-8,0,1)
replace r`wavenum'lungf = 3 if preload == 1 & hedbdlu == 2
label variable r`wavenum'lungf "r`wavenum'lungf:w`wavenum' r flag dispute chg lung disease"

*previous waves respondent lung disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lungf = 6 if preload == 1 & hedbdlu == 2 & r`w'lungf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lunge = 0 if preload == 1 & hedbdlu == 2 & r`w'lunge == 1
}

*value labels
label values r`wavenum'lunge health_problems
label values r`wavenum'lungf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had heart problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hearte if !mi(r`w'hearte) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had heart problems
gen r`wavenum'hearte =.
missing_w`wavenum' hedacan hedacmi hedachf hedachm hedacar hedacot ///
   				 hediman hedimmi hedimhf hedimhm hedimar hedim85, result(r`wavenum'hearte)
replace r`wavenum'hearte = 0 if preload == 0 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedacot != 2
replace r`wavenum'hearte = 0 if ( hediman == 0 | hedimmi == 0 | hedimhf == 0 | hedimhm == 0 ///
																 | hedimar == 0 | hedim85 == 0 )
replace r`wavenum'hearte = 0 if preload == 1 & (hedacan == 2 | hedacmi == 2 | hedachf == 2 ///
																						  | hedachm == 2 | hedacar == 2 | hedacot == 2	)									 
replace r`wavenum'hearte = 1 if ( hediman == 1 | hedimmi == 1 | hedimhf == 1 | hedimhm == 1 ///
																 | hedimar == 1 | hedim85 == 1 )
replace r`wavenum'hearte = 1 if preload == 1 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedacot != 2
label variable r`wavenum'hearte "r`wavenum'hearte:w`wavenum' r ever had heart problems"

*wave 7 respondent heart problems dispute flag
gen r`wavenum'heartf =.
replace r`wavenum'heartf = 0 if inlist(preload,0,1) | inlist(hediman,-9,-8,0,1) | inlist(hedimmi,-9,-8,0,1) ///
																					 | inlist(hedimhf,-9,-8,0,1) | inlist(hedimhm,-9,-8,0,1) ///
																					 | inlist(hedimar,-9,-8,0,1) | inlist(hedim85,-9,-8,0,1)
replace r`wavenum'heartf = 3 if preload == 1 & (hedacan == 2 | hedacmi == 2 ///
																		          | hedachf == 2 | hedachm == 2 ///
																		          | hedacar == 2 | hedacot == 2)
label variable r`wavenum'heartf "r`wavenum'heartf:w`wavenum' r flag dispute chg heart problems"


*previous waves respondent heart problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'heartf = 6 if preload == 1 & ( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'heartf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hearte = 0 if preload == 1 & ///
															( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedacot == 2 ) & r`w'hearte == 1
}

*value labels
label values r`wavenum'hearte health_problems
label values r`wavenum'heartf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had stroke***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'stroke if !mi(r`w'stroke) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had stroke
gen r`wavenum'stroke =.
missing_w`wavenum' hedacst hedimst, result(r`wavenum'stroke)
replace r`wavenum'stroke = 0 if preload == 0 & hedacst != 2
replace r`wavenum'stroke = 0 if hedimst == 0
replace r`wavenum'stroke = 0 if preload == 1 & hedacst == 2
replace r`wavenum'stroke = 1 if hedimst == 1
replace r`wavenum'stroke = 1 if preload == 1 & hedacst != 2
label variable r`wavenum'stroke "r`wavenum'stroke:w`wavenum' r ever had stroke"

*wave 7 respondent stroke dispute flag
gen r`wavenum'strokf =.
replace r`wavenum'strokf = 0 if inlist(preload,0,1) | inlist(hedimst,-9,-8,0,1)
replace r`wavenum'strokf = 3 if preload == 1 & hedacst == 2
label variable r`wavenum'strokf "r`wavenum'strokf:w`wavenum' r flag dispute chg stroke"

*previous waves respondent stroke dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'strokf = 6 if preload == 1 & hedacst == 2 & r`w'strokf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'stroke = 0 if preload == 1 & hedacst == 2 & r`w'stroke == 1
}

*value labels
label values r`wavenum'stroke health_problems
label values r`wavenum'strokf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had psych problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'psyche if !mi(r`w'psyche) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had psych problems
gen r`wavenum'psyche =.
missing_w`wavenum' hedbdps hedibps, result(r`wavenum'psyche)
replace r`wavenum'psyche = 0 if preload == 0 & hedbdps != 2
replace r`wavenum'psyche = 0 if hedibps == 0
replace r`wavenum'psyche = 0 if preload == 1 & hedbdps == 2
replace r`wavenum'psyche = 1 if hedibps == 1
replace r`wavenum'psyche = 1 if preload == 1 & hedbdps != 2
label variable r`wavenum'psyche "r`wavenum'psyche:w`wavenum' r ever had psych problems"

*wave 7 respondent psych problems dispute flag
gen r`wavenum'psychf =.
replace r`wavenum'psychf = 0 if inlist(preload,0,1) | inlist(hedibps,-9,-8,0,1)
replace r`wavenum'psychf = 3 if preload == 1 & hedbdps == 2
label variable r`wavenum'psychf "r`wavenum'psychf:w`wavenum' r flag dispute chg psych problems"

*previous waves respondent psych problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psychf = 6 if preload == 1 & hedbdps == 2 & r`w'psychf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psyche = 0 if preload == 1 & hedbdps == 2 & r`w'psyche == 1
}

*value labels
label values r`wavenum'psyche health_problems
label values r`wavenum'psychf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had arthritis***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'arthre if !mi(r`w'arthre) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had arthritis
gen r`wavenum'arthre =.
missing_w`wavenum' hedbdar hedibar, result(r`wavenum'arthre)
replace r`wavenum'arthre = 0 if preload == 0 & hedbdar != 2
replace r`wavenum'arthre = 0 if hedibar == 0
replace r`wavenum'arthre = 0 if preload == 1 & hedbdar == 2
replace r`wavenum'arthre = 1 if hedibar == 1
replace r`wavenum'arthre = 1 if preload == 1 & hedbdar != 2
label variable r`wavenum'arthre "r`wavenum'arthre:w`wavenum' r ever had arthritis"

*wave 7 respondent arthritis dispute flag
gen r`wavenum'arthrf =.
replace r`wavenum'arthrf = 0 if inlist(preload,0,1) | inlist(hedibar,-9,-8,0,1)
replace r`wavenum'arthrf = 3 if preload == 1 & hedbdar == 2
label variable r`wavenum'arthrf "r`wavenum'arthrf:w`wavenum' r flag dispute chg arthritis"

*previous waves respondent arthritis dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthrf = 6 if preload == 1 & hedbdar == 2 & r`w'arthrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthre = 0 if preload == 1 & hedbdar == 2 & r`w'arthre == 1
}

*value labels
label values r`wavenum'arthre health_problems
label values r`wavenum'arthrf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}
drop preload

***Ever had memory-related problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'memrye if !mi(r`w'memrye) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had memory-related problems
gen r`wavenum'memrye =.
missing_w`wavenum' hedbdad hedbdde hedibad hedibde, result(r`wavenum'memrye)
replace r`wavenum'memrye = 0 if preload == 0 & hedbdad != 2 & hedbdde != 2
replace r`wavenum'memrye = 0 if ( hedibad == 0 | hedibde == 0 )
replace r`wavenum'memrye = 0 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
replace r`wavenum'memrye = 1 if ( hedibad == 1 | hedibde == 1 )
replace r`wavenum'memrye = 1 if preload == 1 & hedbdad != 2 & hedbdde != 2
label variable r`wavenum'memrye "r`wavenum'memrye:w`wavenum' r ever had memory problem"

*wave 7 respondent memory-related problems dispute flag
gen r`wavenum'memryf =.
replace r`wavenum'memryf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'memryf = 3 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
label variable r`wavenum'memryf "r`wavenum'memryf:w`wavenum' r flag chg previous memory prob"

*previous waves respondent memory-related problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memryf = 6 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memryf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memrye = 0 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memrye == 1
}

*value labels
label values r`wavenum'memrye health_problems
label values r`wavenum'memryf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had asthma***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'asthmae if !mi(r`w'asthmae) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had asthma
gen r`wavenum'asthmae =.
missing_w`wavenum' hedbdas hedibas, result(r`wavenum'asthmae)
replace r`wavenum'asthmae = 0 if preload == 0 & hedbdas != 2
replace r`wavenum'asthmae = 0 if hedibas == 0
replace r`wavenum'asthmae = 0 if preload == 1 & hedbdas == 2
replace r`wavenum'asthmae = 1 if hedibas == 1
replace r`wavenum'asthmae = 1 if preload == 1 & hedbdas != 2
label variable r`wavenum'asthmae "r`wavenum'asthmae:w`wavenum' r ever had asthma"

*wave 7 respondent asthma dispute flag
gen r`wavenum'asthmaf =.
replace r`wavenum'asthmaf = 0 if inlist(preload,0,1) | inlist(hedibas,-9,-8,0,1)
replace r`wavenum'asthmaf = 3 if preload == 1 & hedbdas == 2
label variable r`wavenum'asthmaf "r`wavenum'asthmaf:w`wavenum' r flag chg previous asthma"

*previous waves respondent memory-related problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmaf = 6 if preload == 1 & hedbdas == 2 & r`w'asthmaf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmae = 0 if preload == 1 & hedbdas == 2 & r`w'asthmae == 1
}

*value labels
label values r`wavenum'asthmae health_problems
label values r`wavenum'asthmaf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had high cholesterol***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 2 {
	replace preload = r`w'hchole if !mi(r`w'hchole) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had high cholesterol
gen r`wavenum'hchole =.
missing_w`wavenum' hedimch hedacch, result(r`wavenum'hchole)
replace r`wavenum'hchole = 0 if preload == 0 & hedacch != 2
replace r`wavenum'hchole = 0 if hedimch==0
replace r`wavenum'hchole = 0 if preload == 1 & hedacch == 2
replace r`wavenum'hchole = 1 if hedimch == 1
replace r`wavenum'hchole = 1 if preload == 1 & hedacch != 2
label variable r`wavenum'hchole "r`wavenum'hchole:w`wavenum' r ever had high cholesterol"

*wave 7 respondent high cholesterol dispute flag
gen r`wavenum'hcholf =.
replace r`wavenum'hcholf = 0 if inlist(preload,0,1) | inlist(hedimch,-9,-8,0,1)
replace r`wavenum'hcholf = 3 if preload == 1 & hedacch == 2
label variable r`wavenum'hcholf "r`wavenum'hcholf:w`wavenum' r flag chg previous high cholesterol"

*previous waves respondent high cholesterol dispute flag
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hcholf = 6 if preload == 1 & hedacch == 2 & r`w'hcholf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hchole = 0 if preload == 1 & hedacch == 2 & r`w'hchole == 1
}

*value labels
label values r`wavenum'hchole health_problems
label values r`wavenum'hcholf health_problems_flag

drop preload

***Ever had cataracts***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'catrcte if !mi(r`w'catrcte) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had cataracts
gen r`wavenum'catrcte =.
missing_w`wavenum' heopcca heoptca, result(r`wavenum'catrcte)
replace r`wavenum'catrcte = 0 if preload == 0 & heopcca != 2
replace r`wavenum'catrcte = 0 if heoptca==0
replace r`wavenum'catrcte = 0 if preload == 1 & heopcca == 2
replace r`wavenum'catrcte = 1 if heoptca == 1
replace r`wavenum'catrcte = 1 if preload == 1 & heopcca != 2
label variable r`wavenum'catrcte "r`wavenum'catrcte:w`wavenum' r ever had cataracts"

*wave 7 respondent cataracts dispute flag
gen r`wavenum'catrctf =.
replace r`wavenum'catrctf = 0 if inlist(preload,0,1) | inlist(heoptca,-9,-8,0,1)
replace r`wavenum'catrctf = 3 if preload == 1 & heopcca == 2
label variable r`wavenum'catrctf "r`wavenum'catrctf:w`wavenum' r flag chg previous cataracts"

*previous waves respondent cataracts dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrctf = 6 if preload == 1 & heopcca == 2 & r`w'catrctf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrcte = 0 if preload == 1 & heopcca == 2 & r`w'catrcte == 1
}

*value labels
label values r`wavenum'catrcte health_problems
label values r`wavenum'catrctf health_problems_flag

drop preload

***Ever had parkinsons***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'parkine if !mi(r`w'parkine) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had parkinsons
gen r`wavenum'parkine =.
missing_w`wavenum' hedibpd hedbdpd, result(r`wavenum'parkine)
replace r`wavenum'parkine = 0 if preload == 0 & hedbdpd != 2
replace r`wavenum'parkine = 0 if hedibpd==0
replace r`wavenum'parkine = 0 if preload == 1 & hedbdpd == 2
replace r`wavenum'parkine = 1 if hedibpd == 1
replace r`wavenum'parkine = 1 if preload == 1 & hedbdpd != 2
label variable r`wavenum'parkine "r`wavenum'parkine:w`wavenum' r ever had parkinson disease"

*wave 7 respondent parkinsons dispute flag
gen r`wavenum'parkinf =.
replace r`wavenum'parkinf = 0 if inlist(preload,0,1) | inlist(hedibpd,-9,-8,0,1)
replace r`wavenum'parkinf = 3 if preload == 1 & hedbdpd == 2
label variable r`wavenum'parkinf "r`wavenum'parkinf:w`wavenum' r flag chg previous parkinson disease"

*previous waves respondent parkinsons dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkinf = 6 if preload == 1 & hedbdpd == 2 & r`w'parkinf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkine = 0 if preload == 1 & hedbdpd == 2 & r`w'parkine == 1
}

*value labels
label values r`wavenum'parkine health_problems
label values r`wavenum'parkinf health_problems_flag

drop preload

***Ever had hip fracture***
*wave 7 respondent ever had hip fracture
gen r`wavenum'hipe = .
missing_w`wavenum' HeFrac, result(r`wavenum'hipe)
replace r`wavenum'hipe = .a if inrange(r`wavenum'agey,1,59) & HeFrac==-1
replace r`wavenum'hipe = 0 if HeFrac==2
replace r`wavenum'hipe = 1 if HeFrac==1 |  (r`pre_wavenum'hipe==1 & inw`wavenum' == 1)
label variable r`wavenum'hipe "r`wavenum'hipe:w`wavenum' r ever had hip fracture"
label values r`wavenum'hipe health_problems

*wave 7 spouse ever had hip fracture
gen s`wavenum'hipe = .
spouse r`wavenum'hipe, result(s`wavenum'hipe) wave(`wavenum')
label variable s`wavenum'hipe "s`wavenum'hipe:w`wavenum' s ever had hip fracture"
label values s`wavenum'hipe health_problems

***Ever had Alzheimers disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'alzhe if !mi(r`w'alzhe) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had Alzheimers disease
gen r`wavenum'alzhe =.
missing_w`wavenum' hedbdad hedibad, result(r`wavenum'alzhe)
replace r`wavenum'alzhe = 0 if preload == 0 & hedbdad != 2
replace r`wavenum'alzhe = 0 if hedibad == 0
replace r`wavenum'alzhe = 0 if preload == 1 & hedbdad == 2
replace r`wavenum'alzhe = 1 if hedibad == 1
replace r`wavenum'alzhe = 1 if preload == 1 & hedbdad != 2
label variable r`wavenum'alzhe "r`wavenum'alzhe:w`wavenum' r ever had alzheimers"

*wave 7 respondent Alzheimers disease dispute flag
gen r`wavenum'alzhf =.
replace r`wavenum'alzhf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1)
replace r`wavenum'alzhf = 3 if preload == 1 & hedbdad == 2
label variable r`wavenum'alzhf "r`wavenum'alzhf:w`wavenum' r flag chg previous alzheimers"

*previous waves respondent Alzheimers disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhf = 6 if preload == 1 & hedbdad == 2 & r`w'alzhf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhe = 0 if preload == 1 & hedbdad == 2 & r`w'alzhe == 1
}

*value labels
label values r`wavenum'alzhe health_problems
label values r`wavenum'alzhf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had Dementia***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'demene if !mi(r`w'demene) & mi(preload) & inw`wavenum'==1
}

*wave 7 respondent ever had Dementia
gen r`wavenum'demene =.
missing_w`wavenum' hedbdde hedibde, result(r`wavenum'demene)
replace r`wavenum'demene = 0 if preload == 0 & hedbdde != 2
replace r`wavenum'demene = 0 if hedibde == 0
replace r`wavenum'demene = 0 if preload == 1 & hedbdde == 2
replace r`wavenum'demene = 1 if hedibde == 1
replace r`wavenum'demene = 1 if preload == 1 & hedbdde != 2
label variable r`wavenum'demene "r`wavenum'demene:w`wavenum' r ever had dementia"

*wave 7 respondent Dementia dispute flag
gen r`wavenum'demenf =.
replace r`wavenum'demenf = 0 if inlist(preload,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'demenf = 3 if preload == 1 & hedbdde == 2
label variable r`wavenum'demenf "r`wavenum'demenf:w`wavenum' r flag chg previous dementia"

*previous waves respondent Dementia dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demenf = 6 if preload == 1 & hedbdde == 2 & r`w'demenf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demene = 0 if preload == 1 & hedbdde == 2 & r`w'demene == 1
}

*value labels
label values r`wavenum'demene health_problems
label values r`wavenum'demenf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

gen preiwy = .
gen preiwm = .
forvalues w = `pre_wavenum' (-1) 1 {
	 replace preiwy = r`w'iwindy if inw`w' ==1 & mi(preiwy)
	 replace preiwm = r`w'iwindm if inw`w' ==1 & mi(preiwm)
	}


**Health behavior Preventive behaviors****
*wave 7 respondent ever had mammogram
gen r`wavenum'mammoge = .
missing_w`wavenum' HEMamB, result(r`wavenum'mammoge)
replace r`wavenum'mammoge = .a if inrange(r`wavenum'agey,1,46) | inrange(r`wavenum'agey,74,90)
replace r`wavenum'mammoge = .s if ragender==1 & inw`wavenum'==1
replace r`wavenum'mammoge = 0 if HEMamB==2
replace r`wavenum'mammoge = 1 if HEMamB==1
label variable r`wavenum'mammoge "r`wavenum'mammoge:w`wavenum' r ever had mammogram"
label values r`wavenum'mammoge health_prev

*wave 7 spouse ever had mammogram
gen s`wavenum'mammoge = .
spouse r`wavenum'mammoge, result(s`wavenum'mammoge) wave(`wavenum')
label variable s`wavenum'mammoge "s`wavenum'mammoge:w`wavenum' s ever had mammogram"
label values s`wavenum'mammoge health_prev

*wave 7 respondent had mammogram (x-ray of your breasts)? last 2 yrs
gen r`wavenum'mammog =.
missing_w`wavenum' hemamty hemamtm HEMamB, result(r`wavenum'mammog)
replace r`wavenum'mammog = .a if inrange(r`wavenum'agey,1,46) | inrange(r`wavenum'agey,74,90)
replace r`wavenum'mammog = .s if ragender ==1 & inw`wavenum' == 1
replace r`wavenum'mammog = 0 if  HEMamB ==2
replace r`wavenum'mammog = 0 if ((ym(r`wavenum'iwindy,r`wavenum'iwindm) - ym(hemamty,hemamtm) > 24 & preiwy == .) ///
															    | (ym(hemamty, hemamtm) < ym(preiwy,preiwm) & !mi(preiwy)))  ///
															  & !inlist(hemamty,-1,-8,-9) & !inlist(hemamtm,-1,-8,-9) & inw`wavenum'==1
replace r`wavenum'mammog = 0 if r`wavenum'iwindy - hemamty > 2 & !mi(r`wavenum'iwindy) & !inlist(hemamty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'mammog)														
replace r`wavenum'mammog = 1 if ((ym(r`wavenum'iwindy,r`wavenum'iwindm) - ym(hemamty,hemamtm)  <= 24 & preiwy == .) ///
														  | ((ym(hemamty, hemamtm) >= ym(preiwy,preiwm)) & !mi(preiwy))) ///
														   & !inlist(hemamty,-1,-8,-9) & !inlist(hemamtm,-1,-8,-9) & inw`wavenum'==1
replace r`wavenum'mammog = 1 if r`wavenum'iwindy - hemamty <=2 & !mi(r`wavenum'iwindy) & !inlist(hemamty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'mammog)
label variable r`wavenum'mammog "r`wavenum'mammog:w`wavenum' r prev mammogram last 2 yrs"
label values r`wavenum'mammog health_prev

*wave 7 spouse had mammogram (x-ray of your breasts) last 2 yrs
gen s`wavenum'mammog =.
spouse r`wavenum'mammog, result(s`wavenum'mammog) wave(`wavenum')
label variable s`wavenum'mammog "s`wavenum'mammog:w`wavenum' S prev mammogram last 2 yrs"
label values s`wavenum'mammog health_prev

*wave 7 respondent ever had prostate test
gen r`wavenum'proste = .
missing_w`wavenum' HEPro, result(r`wavenum'proste)
replace r`wavenum'proste = .a if inrange(r`wavenum'agey,1,54) | inrange(r`wavenum'agey,77,90)
replace r`wavenum'proste = .s if ragender==2 & inw`wavenum'==1
replace r`wavenum'proste = 0 if HEPro==2
replace r`wavenum'proste = 1 if HEPro==1
label variable r`wavenum'proste "r`wavenum'proste:w`wavenum' r ever had prostate test"
label values r`wavenum'proste health_prev

*wave 7 spouse ever had prostate test
gen s`wavenum'proste = .
spouse r`wavenum'proste, result(s`wavenum'proste) wave(`wavenum')
label variable s`wavenum'proste "s`wavenum'proste:w`wavenum' s ever had prostate test"
label values s`wavenum'proste health_prev

*wave 7 respondent had prostate-specific antigen (PSA) blood test or other test last 2 yrs
gen r`wavenum'prost =.
missing_w`wavenum' heproty heprotm HEPro, result(r`wavenum'prost)
replace r`wavenum'prost = .a if inrange(r`wavenum'agey,1,54) | inrange(r`wavenum'agey,77,90)
replace r`wavenum'prost = .s if ragender ==2 & inw`wavenum' == 1
replace r`wavenum'prost = 0 if HEPro ==2
replace r`wavenum'prost = 0 if ((ym(r6iwindy,r6iwindm) - ym(heproty, heprotm) > 24 & preiwy == .) ///
															    | (ym(heproty, heprotm) < ym(preiwy,preiwm) & !mi(preiwy))) ///
															  & !inlist(heproty,-1,-8,-9) & !inlist(heprotm,-1,-8,-9) & inw`wavenum'==1
replace r`wavenum'prost = 0 if r`wavenum'iwindy - heproty > 2 & !mi(r`wavenum'iwindy) & !inlist(heproty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'prost)
replace r`wavenum'prost = 1 if ((ym(r6iwindy,r6iwindm) - ym(heproty, heprotm)   <= 24 & preiwy == .) ///
														  | ((ym(heproty, heprotm) >= ym(preiwy,preiwm)) & !mi(preiwy))) ///
														   & !inlist(heproty,-1,-8,-9) & !inlist(heprotm,-1,-8,-9) & inw`wavenum'==1
replace r`wavenum'prost = 1 if r`wavenum'iwindy - heproty <= 2 & !mi(r`wavenum'iwindy) & !inlist(heproty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'prost)
label variable r`wavenum'prost "r`wavenum'prost:w`wavenum' r prev prostate test last 2 yrs"
label values r`wavenum'prost health_prev

*wave 7 spouse had prostate-specific antigen (PSA) last 2 yrs
gen s`wavenum'prost =.
spouse r`wavenum'prost, result(s`wavenum'prost) wave(`wavenum')
label variable s`wavenum'prost "s`wavenum'prost:w`wavenum' S prev prostate test last 2 yrs"
label values s`wavenum'prost health_prev

drop preiwy preiwm

***Vigorous physical activity***
*wave 7 respondent vigorous physical activity
gen r`wavenum'vgactx_e =.
missing_w`wavenum' HeActa, result(r`wavenum'vgactx_e)
replace r`wavenum'vgactx_e =.p if askpx == 1
replace r`wavenum'vgactx_e = 2 if HeActa == 1
replace r`wavenum'vgactx_e = 3 if HeActa == 2
replace r`wavenum'vgactx_e = 4 if HeActa == 3
replace r`wavenum'vgactx_e = 5 if HeActa == 4
label variable r`wavenum'vgactx_e "r`wavenum'vgactx_e:w`wavenum' R Freq vigorous phys activ"

*wave 7 spouse vigorous physical activity
gen s`wavenum'vgactx_e =.
spouse r`wavenum'vgactx_e, result(s`wavenum'vgactx_e) wave(`wavenum')
label variable s`wavenum'vgactx_e "s`wavenum'vgactx_e:w`wavenum' S Freq vigorous phys activ"

*label values
label values r`wavenum'vgactx_e activity
label values s`wavenum'vgactx_e activity

*check 

***Moderate physical activity***
*wave 7 respondent moderate physical activity
gen r`wavenum'mdactx_e =.
missing_w`wavenum' HeActb, result(r`wavenum'mdactx_e)
replace r`wavenum'mdactx_e = 2 if HeActb == 1
replace r`wavenum'mdactx_e = 3 if HeActb == 2
replace r`wavenum'mdactx_e = 4 if HeActb == 3
replace r`wavenum'mdactx_e = 5 if HeActb == 4
label variable r`wavenum'mdactx_e "r`wavenum'mdactx_e:w`wavenum' R Freq moderate phys activ"

*wave 7 spouse vigorous moderate activity
gen s`wavenum'mdactx_e =.
spouse r`wavenum'mdactx_e, result(s`wavenum'mdactx_e) wave(`wavenum')
label variable s`wavenum'mdactx_e "s`wavenum'mdactx_e:w`wavenum' S Freq moderate phys activ"

*label values
label values r`wavenum'mdactx_e activity
label values s`wavenum'mdactx_e activity

*check 

***Light physical activity***
*wave 7 respondent light physical activity
gen r`wavenum'ltactx_e =.
missing_w`wavenum' HeActc, result(r`wavenum'ltactx_e)
replace r`wavenum'ltactx_e = 2 if HeActc == 1
replace r`wavenum'ltactx_e = 3 if HeActc == 2
replace r`wavenum'ltactx_e = 4 if HeActc == 3
replace r`wavenum'ltactx_e = 5 if HeActc == 4
label variable r`wavenum'ltactx_e "r`wavenum'ltactx_e:w`wavenum' R Freq light phys activ"

*wave 7 spouse vigorous light activity
gen s`wavenum'ltactx_e =.
spouse r`wavenum'ltactx_e, result(s`wavenum'ltactx_e) wave(`wavenum')
label variable s`wavenum'ltactx_e "s`wavenum'ltactx_e:w`wavenum' S Freq light phys activ"

*label values
label values r`wavenum'ltactx_e activity
label values s`wavenum'ltactx_e activity

*check 

***Ever drinks alcohol***
*wave 7 respondent ever drinks alcohol
gen r`wavenum'drink =.
replace r`wavenum'drink =.m if scako == -9
replace r`wavenum'drink =.c if scako==-2
replace r`wavenum'drink = 0 if scako == 8
replace r`wavenum'drink = 1 if inrange(scako,1,7)
label variable r`wavenum'drink "r`wavenum'drink:w`wavenum' R ever drinks any alcohol"

*wave 7 spouse ever drinks alcohol
gen s`wavenum'drink =.
spouse r`wavenum'drink, result(s`wavenum'drink) wave(`wavenum')
label variable s`wavenum'drink "s`wavenum'drink:w`wavenum' S ever drinks any alcohol"

*label values
label values r`wavenum'drink ever_drink
label values s`wavenum'drink ever_drink

*check 

***Days per week drinks***
*wave 7 respondent days per week drinks
gen r`wavenum'drinkd_e =.
replace r`wavenum'drinkd_e =.m if scako == -9 | scal7a == -9 | scal7b == -9
replace r`wavenum'drinkd_e =.d if scako == -8 | scal7a == -8 | scal7b == -8
replace r`wavenum'drinkd_e =.c if scako==-2 | scal7a==-2 | scal7b==-2
replace r`wavenum'drinkd_e = 0 if scako == 8 | scal7a == 2
replace r`wavenum'drinkd_e = 1 if scal7b == 1
replace r`wavenum'drinkd_e = 2 if scal7b == 2
replace r`wavenum'drinkd_e = 3 if scal7b == 3
replace r`wavenum'drinkd_e = 4 if scal7b == 4
replace r`wavenum'drinkd_e = 5 if scal7b == 5
replace r`wavenum'drinkd_e = 6 if scal7b == 6
replace r`wavenum'drinkd_e = 7 if scal7b == 7
label variable r`wavenum'drinkd_e "r`wavenum'drinkd_e:w`wavenum' R # days/week drinks"

*wave spouse days per week drinks
gen s`wavenum'drinkd_e =.
spouse r`wavenum'drinkd_e, result(s`wavenum'drinkd_e) wave(`wavenum')
label variable s`wavenum'drinkd_e "s`wavenum'drinkd_e:w`wavenum' S # days/week drinks"

**label values
*label values r`wavenum'drinkd_e drinks_flag
*label values s`wavenum'drinkd_e drinks_flag

*check 

***Drinks per week***
*wave 7 respondent drinks per week
gen r`wavenum'drinkwn_e =.
replace r`wavenum'drinkwn_e =.m if scako == -9 | scal7a == -9 | scal7b == -9 | ///
																	scdrspi == -9 | scdrwin == -9 | scdrpin == -9
replace r`wavenum'drinkwn_e =.d if scako == -8 | scal7a == -8 | scal7b == -8 | ///
																	scdrspi == -8 | scdrwin == -8 | scdrpin == -8
replace r`wavenum'drinkwn_e =.c if scako==-2 | scal7a==-2 | scal7b==-2
replace r`wavenum'drinkwn_e = 0 if scako == 8 | inlist(scal7a,1,2) | inrange(scal7b,1,7)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrspi if !inlist(scdrspi,-9,-2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrwin if !inlist(scdrwin,-9,-2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrpin if !inlist(scdrpin,-9,-2,-1)
label variable r`wavenum'drinkwn_e "r`wavenum'drinkwn_e:w`wavenum' R # drinks/week"
replace r`wavenum'drinkwn_e=round(r`wavenum'drinkwn_e)

*wave 7 spouse drinks per week
gen s`wavenum'drinkwn_e =.
spouse r`wavenum'drinkwn_e, result(s`wavenum'drinkwn_e) wave(`wavenum')
label variable s`wavenum'drinkwn_e "s`wavenum'drinkwn_e:w`wavenum' S # drinks/week"

*label values
*label values r`wavenum'drinkwn_e drinks_flag
*label values s`wavenum'drinkwn_e drinks_flag

*check 

***Ever smoked cigarettes***
*wave 7 respondent ever smoked cigarettes
local smokever
gen r`wavenum'smokev =.
missing_w`wavenum' HeSmk HeSke, result(r`wavenum'smokev)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'smokev = r`w'smokev if inlist(r`w'smokev,0,1) & inw`wavenum'==1
	local smokever `smokever' r`w'smokev
}
replace r`wavenum'smokev = 0 if HeSmk == 2 | HeSke == 1
replace r`wavenum'smokev = 1 if HeSmk == 1 | inlist(HeSke,2,3)
label variable r`wavenum'smokev "r`wavenum'smokev:w`wavenum' R smoke ever"

*wave 7 spouse ever smoked cigarettes
gen s`wavenum'smokev =.
spouse r`wavenum'smokev, result(s`wavenum'smokev) wave(`wavenum')
label variable s`wavenum'smokev "s`wavenum'smokev:w`wavenum' S smoke ever"

*previous waves ever smoked if disputed
forvalues w = 1/`pre_wavenum' {
	replace r`w'smokev=0 if HeSke==1 & r`w'smokev==1
}

*label values
label values r`wavenum'smokev smokes
label values s`wavenum'smokev smokes

*check 

***Smokes cigarettes now***
*wave 7 respondent smokes cigarettes now
gen r`wavenum'smoken =.
missing_w`wavenum' HeSmk HESka, result(r`wavenum'smoken)
replace r`wavenum'smoken = 0 if HeSmk == 2 | HESka == 2
replace r`wavenum'smoken = 1 if HESka == 1
label variable r`wavenum'smoken "r`wavenum'smoken:w`wavenum' R smokes now"

*wave 7 spouse smokes cigarettes now
gen s`wavenum'smoken =.
spouse r`wavenum'smoken, result(s`wavenum'smoken) wave(`wavenum')
label variable s`wavenum'smoken "s`wavenum'smoken:w`wavenum' S smokes now"

*previous waves smokes now if disputed
tempvar stop
gen `stop'=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace `stop'=1 if HeSke==2 & r`w'smoken==1 & mi(`stop')
	replace r`w'smoken=0 if HeSke==2 & r`w'smoken==1 & `stop'!=2
	replace `stop'=2 if r`w'smoken==0 & `stop'==1
}

forvalues w = 1/`pre_wavenum' {
	replace r`w'smoken=0 if HeSke==1 & r`w'smoken==1
}

*label values
label values r`wavenum'smoken smokes
label values s`wavenum'smoken smokes

*check 


**Smoking frequency ****
*wave 7 respondent smoking frequency
gen r`wavenum'smokef = .
missing_w`wavenum' HeSmk HESka HeSkc HeSkb HECig , result(r`wavenum'smokef)
replace r`wavenum'smokef = 0  if r`wavenum'smoken == 0
replace r`wavenum'smokef = 0  if HECig ==2
replace r`wavenum'smokef = (HeSkb*5 + HeSkc*2)/7 if !inlist(HeSkb,-1,-8,-9) & !inlist(HeSkc,-1,-8,-9) 

label var r`wavenum'smokef "r`wavenum'smokef:w`wavenum' R # cigarettes/day"

*wave 7 spouse smoking frequency
gen s`wavenum'smokef = .
spouse r`wavenum'smokef, result(s`wavenum'smokef) wave(`wavenum')
label var s`wavenum'smokef "s`wavenum'smokef:w`wavenum' S # cigarettes/day"



***drop ELSA wave specific core file raw variables***
drop `health_w`wavenum'_core'



*set wave number
local wavenum=8
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2
local pre4_wavenum=`wavenum'-4
local pre6_wavenum=`wavenum'-6

***merge with wave specific core data***
local health_w`wavenum'_core askpx hehelf helwk ///
								 headl?? hemob?? ///
								 psceda pscedb pscedc pscedd pscede pscedf pscedg pscedh ///
								 hedia?? hedim?? hedib?? hedac?? hedbd?? ///
								 heacta heactb heactc hemamb hepro /*hemamty hemamtm heproty heprotm*/ ///
								 scako scal7a scal7b scdrspi scdrwin scdrpin  /// 
								 heska heskb heskc heskd heske heskf hesmk hecig ///
								 heoptca heopcca hefrac estwt respwts 
merge 1:1 idauniq using "$wave_8_core", keepusing(`health_w`wavenum'_core') nogen


***self-report of health***
*wave 8 respondent self-report of health
gen r`wavenum'shlt =.
missing_w`wavenum' hehelf, result(r`wavenum'shlt) 
replace r`wavenum'shlt = .p if askpx == 1 
replace r`wavenum'shlt = hehelf if inrange(hehelf,1,5)
label variable r`wavenum'shlt "r`wavenum'shlt:w`wavenum' r self-report of health"

*wave 8 spouse self-report of health
gen s`wavenum'shlt =.
spouse r`wavenum'shlt, result(s`wavenum'shlt) wave(`wavenum')
label variable s`wavenum'shlt "s`wavenum'shlt:w`wavenum' s self-report of health"

*value labels
label values r`wavenum'shlt health
label values s`wavenum'shlt health

*check 

***Whether health limits work***
*wave 8 respondent whether health limits work
gen r`wavenum'hlthlm =.
missing_w`wavenum' helwk, result(r`wavenum'hlthlm)
replace r`wavenum'hlthlm = .p if askpx == 1
replace r`wavenum'hlthlm = 0 if helwk == 2
replace r`wavenum'hlthlm = 1 if helwk == 1
label variable r`wavenum'hlthlm "r`wavenum'hlthlm:w`wavenum' r hlth problems limit work"

*wave 8 spouse whether health limits work
gen s`wavenum'hlthlm =.
spouse r`wavenum'hlthlm, result(s`wavenum'hlthlm) wave(`wavenum')
label variable s`wavenum'hlthlm "s`wavenum'hlthlm:w`wavenum' s hlth problems limit work"

*value labels
label values r`wavenum'hlthlm limitwork
label values s`wavenum'hlthlm limitwork

*check 

***Some difficulty walking cross room***
*wave 8 respondent difficulty walking across room
gen r`wavenum'walkra =.
missing_w`wavenum' headlwa, result(r`wavenum'walkra)
replace r`wavenum'walkra = 0 if headlwa==0
replace r`wavenum'walkra = 1 if headlwa==1
label variable r`wavenum'walkra "r`wavenum'walkra:w`wavenum' R Some Diff-Walk across room"

*wave 8 spouse difficulty walking across room 
gen s`wavenum'walkra =.
spouse r`wavenum'walkra, result(s`wavenum'walkra) wave(`wavenum')
label variable s`wavenum'walkra "s`wavenum'walkra:w`wavenum' S Some Diff-Walk across room"

*value labels
label values r`wavenum'walkra diff
label values s`wavenum'walkra diff

*check 

***Some difficulty dressing***
*wave 8 respondent difficulty dressing
gen r`wavenum'dressa =.
missing_w`wavenum' headldr, result(r`wavenum'dressa)
replace r`wavenum'dressa = 0 if headldr==0
replace r`wavenum'dressa = 1 if headldr==1
label variable r`wavenum'dressa "r`wavenum'dressa:w`wavenum' R Some Diff-Dressing"

*wave 8 spouse difficulty dressing
gen s`wavenum'dressa =.
spouse r`wavenum'dressa, result(s`wavenum'dressa) wave(`wavenum')
label variable s`wavenum'dressa "s`wavenum'dressa:w`wavenum' S Some Diff-Dressing"

*value labels
label values r`wavenum'dressa diff
label values s`wavenum'dressa diff

*check 

***Some difficulty bathing, shower***
*wave 8 respondent difficulty bathing, shower
gen r`wavenum'batha =.
missing_w`wavenum' headlba, result(r`wavenum'batha)
replace r`wavenum'batha = 0 if headlba==0 
replace r`wavenum'batha = 1 if headlba==1
label variable r`wavenum'batha "r`wavenum'batha:w`wavenum' R Some Diff-Bathing, shower"

*wave 8 spouse difficulty bathing, shower
gen s`wavenum'batha =.
spouse r`wavenum'batha, result(s`wavenum'batha) wave(`wavenum')
label variable s`wavenum'batha "s`wavenum'batha:w`wavenum' S Some Diff-Bathing, shower"

*value labels
label values r`wavenum'batha diff
label values s`wavenum'batha diff

*check 

***Some difficulty eating***
*wave 8 respondent difficulty eating
gen r`wavenum'eata =.
missing_w`wavenum' headlea, result(r`wavenum'eata)
replace r`wavenum'eata = 0 if headlea==0
replace r`wavenum'eata = 1 if headlea==1
label variable r`wavenum'eata "r`wavenum'eata:w`wavenum' R Some Diff-Eating"

*wave 8 spouse difficulty eating
gen s`wavenum'eata =.
spouse r`wavenum'eata, result(s`wavenum'eata) wave(`wavenum')
label variable s`wavenum'eata "s`wavenum'eata:w`wavenum' S Some Diff-Eating"

*value labels
label values r`wavenum'eata diff
label values s`wavenum'eata diff

*check 

***Some difficulty getting in/out of bed***
*wave 8 respondent difficulty getting in/out of bed
gen r`wavenum'beda =.
missing_w`wavenum' headlbe, result(r`wavenum'beda)
replace r`wavenum'beda = 0 if headlbe==0
replace r`wavenum'beda = 1 if headlbe==1

label variable r`wavenum'beda "r`wavenum'beda:w`wavenum' R Some Diff-Get in/out bed"

*wave 8 spouse difficulty getting in/out of bed
gen s`wavenum'beda =.
spouse r`wavenum'beda, result(s`wavenum'beda) wave(`wavenum')
label variable s`wavenum'beda "s`wavenum'beda:w`wavenum' S Some Diff-Get in/out bed"

*value labels
label values r`wavenum'beda diff
label values s`wavenum'beda diff

*check 

***Some difficulty using the toilet***
*wave 8 respondent difficulty using the toilet
gen r`wavenum'toilta =.
missing_w`wavenum' headlwc, result(r`wavenum'toilta)
replace r`wavenum'toilta = 0 if headlwc==0
replace r`wavenum'toilta = 1 if headlwc==1
label variable r`wavenum'toilta "r`wavenum'toilta:w`wavenum' R Some Diff-Using the toilet"

**wave 8 spouse difficulty using the toilet
gen s`wavenum'toilta =.
spouse r`wavenum'toilta, result(s`wavenum'toilta) wave(`wavenum')
label variable s`wavenum'toilta "s`wavenum'toilta:w`wavenum' S Some Diff-Using the toilet"

*value labels
label values r`wavenum'toilta diff
label values s`wavenum'toilta diff

*check 

***Some difficulty using using a map***
*wave 8 respondent difficulty using a map
gen r`wavenum'mapa =.
missing_w`wavenum' headlma, result(r`wavenum'mapa)
replace r`wavenum'mapa = 0 if headlma==0
replace r`wavenum'mapa = 1 if headlma==1
label variable r`wavenum'mapa "r`wavenum'mapa:w`wavenum' R Some Diff-Use a map"

*wave 8 spouse difficulty using a map
gen s`wavenum'mapa =.
spouse r`wavenum'mapa, result(s`wavenum'mapa) wave(`wavenum')
label variable s`wavenum'mapa "s`wavenum'mapa:w`wavenum' S Some Diff-Use a map"

*value labels
label values r`wavenum'mapa diff
label values s`wavenum'mapa diff

*check 

***Some difficulty using a telephone***
*wave 8 respondent difficulty using a telephone
gen r`wavenum'phonea =.
missing_w`wavenum' headlph, result(r`wavenum'phonea)
replace r`wavenum'phonea = 0 if headlph==0 
replace r`wavenum'phonea = 1 if headlph==1 
label variable r`wavenum'phonea "r`wavenum'phonea:w`wavenum' R Some Diff-Use a telephone"

*wave 8 spouse difficulty using a telephone
gen s`wavenum'phonea =.
spouse r`wavenum'phonea, result(s`wavenum'phonea) wave(`wavenum')
label variable s`wavenum'phonea "s`wavenum'phonea:w`wavenum' S Some Diff-Use a telephone"

*value labels
label values r`wavenum'phonea diff
label values s`wavenum'phonea diff

*check 

***Some difficulty manging money***
*wave 8 respondent difficulty manging money
* MV - VARIABLE CHANGE TO headldr5
gen r`wavenum'moneya =.
missing_w`wavenum' headlmo, result(r`wavenum'moneya)
replace r`wavenum'moneya = 0 if headlmo==0
replace r`wavenum'moneya = 1 if headlmo==1
label variable r`wavenum'moneya "r`wavenum'moneya:w`wavenum' R Some Diff-Managing money"

*wave 8 spouse difficulty manging money
gen s`wavenum'moneya =.
spouse r`wavenum'moneya, result(s`wavenum'moneya) wave(`wavenum')
label variable s`wavenum'moneya "s`wavenum'moneya:w`wavenum' S Some Diff-Managing money"

*value labels
label values r`wavenum'moneya diff
label values s`wavenum'moneya diff

*check 

***Some difficulty taking medications***
*wave 8 respondent difficulty taking medications
gen r`wavenum'medsa =.
missing_w`wavenum' headlme, result(r`wavenum'medsa)
replace r`wavenum'medsa = 0 if headlme==0 
replace r`wavenum'medsa = 1 if headlme==1
label variable r`wavenum'medsa "r`wavenum'medsa:w`wavenum' R Some Diff-Take medications"

*wave 8 spouse difficulty taking medications
gen s`wavenum'medsa =.
spouse r`wavenum'medsa, result(s`wavenum'medsa) wave(`wavenum')
label variable s`wavenum'medsa "s`wavenum'medsa:w`wavenum' S Some Diff-Take medications"

*value labels
label values r`wavenum'medsa diff
label values s`wavenum'medsa diff

*check 

***Some difficulty shopping for groceries***
*wave 8 respondent difficulty shopping for groceries
gen r`wavenum'shopa =.
missing_w`wavenum' headlsh, result(r`wavenum'shopa)
replace r`wavenum'shopa = 0 if headlsh==0 
replace r`wavenum'shopa = 1 if headlsh==1 
label variable r`wavenum'shopa "r`wavenum'shopa:w`wavenum' R Some Diff-Shop for grocery"

*wave 8 spouse difficulty shopping for groceries
gen s`wavenum'shopa =.
spouse r`wavenum'shopa, result(s`wavenum'shopa) wave(`wavenum')
label variable s`wavenum'shopa "s`wavenum'shopa:w`wavenum' S Some Diff-Shop for grocery"

*value labels
label values r`wavenum'shopa diff
label values s`wavenum'shopa diff

*check 

***Some difficulty preparing a hot meal***
*wave 8 respondent difficulty preparing a hot meal
gen r`wavenum'mealsa =.
missing_w`wavenum' headlpr, result(r`wavenum'mealsa)
replace r`wavenum'mealsa = 0 if headlpr==0
replace r`wavenum'mealsa = 1 if headlpr==1
label variable r`wavenum'mealsa "r`wavenum'mealsa:w`wavenum' R Some Diff-Prepare hot meal"

*wave 8 spouse difficulty preparing a hot meal
gen s`wavenum'mealsa =.
spouse r`wavenum'mealsa, result(s`wavenum'mealsa) wave(`wavenum')
label variable s`wavenum'mealsa "s`wavenum'mealsa:w`wavenum' S Some Diff-Prepare hot meal"

*value labels
label values r`wavenum'mealsa diff
label values s`wavenum'mealsa diff

*check 

***Some difficulty Doing work around the house or garden***
*wave 8 respondent difficulty Doing work around the house or garden
gen r`wavenum'housewka =.
missing_w`wavenum' headlho, result(r`wavenum'housewka)
replace r`wavenum'housewka = 0 if headlho==0 
replace r`wavenum'housewka = 1 if headlho==1 
label variable r`wavenum'housewka "r`wavenum'housewka:w`wavenum' R Some Diff-Doing work around the house or garden"

*wave 8 spouse difficulty Doing work around the house or garden
gen s`wavenum'housewka =.
spouse r`wavenum'housewka, result(s`wavenum'housewka) wave(`wavenum')
label variable s`wavenum'housewka "s`wavenum'housewka:w`wavenum' S Some Diff-Doing work around the house or garden"

*value labels
label values r`wavenum'housewka diff
label values s`wavenum'housewka diff

*check 


***Difficulty Walking 100m***
*wave 8 respondent difficulty walking 100m 
gen r`wavenum'walk100a =.
missing_w`wavenum' hemobwa, result(r`wavenum'walk100a)
replace r`wavenum'walk100a = 0 if hemobwa==0
replace r`wavenum'walk100a = 1 if hemobwa==1
label variable r`wavenum'walk100a "r`wavenum'walk100a:w`wavenum' R Some Diff-Walk 100y"

*wave 8 spouse difficulty walking 100m 
gen s`wavenum'walk100a =.
spouse r`wavenum'walk100a, result(s`wavenum'walk100a) wave(`wavenum')
label variable s`wavenum'walk100a "s`wavenum'walk100a:w`wavenum' S Some Diff-Walk 100y"

*value labels
label values r`wavenum'walk100a diff
label values s`wavenum'walk100a diff

*check 

***Difficulty sitting for 2 hours***
*wave 8 respondent difficulty sitting for 2 hours
* MV - VARIABLE CHANGED TO headla2
gen r`wavenum'sita =.
missing_w`wavenum' hemobsi, result(r`wavenum'sita)
replace r`wavenum'sita = 0 if hemobsi==0
replace r`wavenum'sita = 1 if hemobsi==1
label variable r`wavenum'sita "r`wavenum'sita:w`wavenum' R Some Diff-Sit for 2 hours"

*wave 8 spouse difficulty sitting for 2 hours
gen s`wavenum'sita =.
spouse r`wavenum'sita, result(s`wavenum'sita) wave(`wavenum')
label variable s`wavenum'sita "s`wavenum'sita:w`wavenum' S Some Diff-Sit for 2 hours"

*value labels
label values r`wavenum'sita diff
label values s`wavenum'sita diff

*check 

***Difficulty getting up from a chair***
*wave 8 respondent difficulty getting up from a chair
gen r`wavenum'chaira =.
missing_w`wavenum' hemobch, result(r`wavenum'chaira)
replace r`wavenum'chaira = 0 if hemobch==0
replace r`wavenum'chaira = 1 if hemobch==1
label variable r`wavenum'chaira "r`wavenum'chaira:w`wavenum' R Some Diff-Get up fr chair"

*wave 8 spouse difficulty getting up from a chair
gen s`wavenum'chaira =.
spouse r`wavenum'chaira, result(s`wavenum'chaira) wave(`wavenum')
label variable s`wavenum'chaira "s`wavenum'chaira:w`wavenum' S Some Diff-Get up fr chair"

*value labels
label values r`wavenum'chaira diff
label values s`wavenum'chaira diff

*check 

***Difficulty climbing several flights of stairs***
*wave 8 respondent difficulty climbing several flights of stairs
gen r`wavenum'climsa =.
missing_w`wavenum' hemobcs, result(r`wavenum'climsa)
replace r`wavenum'climsa = 0 if hemobcs==0
replace r`wavenum'climsa = 1 if hemobcs==1
label variable r`wavenum'climsa "r`wavenum'climsa:w`wavenum' R Some Diff-Clmb sev flt str"

*wave 8 spouse difficulty climbing several flights of stairs
gen s`wavenum'climsa =.
spouse r`wavenum'climsa, result(s`wavenum'climsa) wave(`wavenum')
label variable s`wavenum'climsa "s`wavenum'climsa:w`wavenum' S Some Diff-Clmb sev flt str"

*value labels
label values r`wavenum'climsa diff
label values s`wavenum'climsa diff

*check 

***Difficulty climbing one flight of stairs***
*wave 8 respondent difficulty climbing one flight of stairs
gen r`wavenum'clim1a =.
missing_w`wavenum' hemobcl, result(r`wavenum'clim1a)
replace r`wavenum'clim1a = 0 if hemobcl==0
replace r`wavenum'clim1a = 1 if hemobcl==1
label variable r`wavenum'clim1a "r`wavenum'clim1a:w`wavenum' R Some Diff-Clmb 1 flt str"

*wave 8 spouse difficulty climbing one flight of stairs
gen s`wavenum'clim1a =.
spouse r`wavenum'clim1a, result(s`wavenum'clim1a) wave(`wavenum')
label variable s`wavenum'clim1a "s`wavenum'clim1a:w`wavenum' S Some Diff-Clmb 1 flt str"

*value labels
label values r`wavenum'clim1a diff
label values s`wavenum'clim1a diff

*check 

***Difficulty stooping/kneeling/crouching***
*wave 8 respondent difficulty stooping/kneeling/crouching
gen r`wavenum'stoopa =.
missing_w`wavenum' hemobst, result(r`wavenum'stoopa)
replace r`wavenum'stoopa = 0 if hemobst==0
replace r`wavenum'stoopa = 1 if hemobst==1
label variable r`wavenum'stoopa "r`wavenum'stoopa:w`wavenum' R Some Diff-Stoop/Kneel/Crch"

*wave 8 spouse difficulty stooping/kneeling/crouching
gen s`wavenum'stoopa =.
spouse r`wavenum'stoopa, result(s`wavenum'stoopa) wave(`wavenum')
label variable s`wavenum'stoopa "s`wavenum'stoopa:w`wavenum' S Some Diff-Stoop/Kneel/Crch"

*value labels
label values r`wavenum'stoopa diff
label values s`wavenum'stoopa diff

*check 

***Difficulty lifting/carrying 10lbs***
*wave 8 respondent difficulty lifting/carrying 10lbs
gen r`wavenum'lifta =.
missing_w`wavenum' hemobli, result(r`wavenum'lifta)
replace r`wavenum'lifta = 0 if hemobli==0
replace r`wavenum'lifta = 1 if hemobli==1
label variable r`wavenum'lifta "r`wavenum'lifta:w`wavenum' R Some Diff-Lift/carry 10lbs"

*wave 8 spouse difficulty lifting/carrying 10lbs
gen s`wavenum'lifta =.
spouse r`wavenum'lifta, result(s`wavenum'lifta) wave(`wavenum')
label variable s`wavenum'lifta "s`wavenum'lifta:w`wavenum' S Some Diff-Lift/carry 10lbs"

*value labels
label values r`wavenum'lifta diff
label values s`wavenum'lifta diff

*check 

***Difficulty picking up a dime***
*wave 8 respondent difficulty picking up a dime FROM TABLE
gen r`wavenum'dimea =.
missing_w`wavenum' hemobpi, result(r`wavenum'dimea)
replace r`wavenum'dimea = 0 if hemobpi==0
replace r`wavenum'dimea = 1 if hemobpi==1
label variable r`wavenum'dimea "r`wavenum'dimea:w`wavenum' R Some Diff-Pick up a 5p coin"

*wave 8 spouse difficulty picking up a dime
gen s`wavenum'dimea =.
spouse r`wavenum'dimea, result(s`wavenum'dimea) wave(`wavenum')
label variable s`wavenum'dimea "s`wavenum'dimea:w`wavenum' S Some Diff-Pick up a 5p coin"

*value labels
label values r`wavenum'dimea diff
label values s`wavenum'dimea diff

*check 

***Difficulty reaching/extending arms up***
*wave 8 respondent difficulty reaching/extending arms up
gen r`wavenum'armsa =.
missing_w`wavenum' hemobre, result(r`wavenum'armsa)
replace r`wavenum'armsa = 0 if hemobre==0
replace r`wavenum'armsa = 1 if hemobre==1
label variable r`wavenum'armsa "r`wavenum'armsa:w`wavenum' R Some Diff-Rch/xtnd arms up"

*wave 8 spouse difficulty reaching/extending arms up
gen s`wavenum'armsa =.
spouse r`wavenum'armsa, result(s`wavenum'armsa) wave(`wavenum')
label variable s`wavenum'armsa "s`wavenum'armsa:w`wavenum' S Some Diff-Rch/xtnd arms up"

*value labels
label values r`wavenum'armsa diff
label values s`wavenum'armsa diff

*check 


***Difficulty pushing/pulling a large object***
*wave 8 respondent difficulty pushing/pulling a large object
gen r`wavenum'pusha =.
missing_w`wavenum' hemobpu, result(r`wavenum'pusha)
replace r`wavenum'pusha = 0 if hemobpu==0
replace r`wavenum'pusha = 1 if hemobpu==1
label variable r`wavenum'pusha "r`wavenum'pusha:w`wavenum' R Some Diff-Push/pull lg obj"

*wave 8 spouse difficulty pushing/pulling a large object
gen s`wavenum'pusha =.
spouse r`wavenum'pusha, result(s`wavenum'pusha) wave(`wavenum')
label variable s`wavenum'pusha "s`wavenum'pusha:w`wavenum' S Some Diff-Push/pull lg obj"

*value labels
label values r`wavenum'pusha diff
label values s`wavenum'pusha diff

*check 

***ADL Summary 0-5***
*wave 8 respondent ADL Summary 0-5
H_ELSA_summary_v adla, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata r`wavenum'beda r`wavenum'walkra) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adla "r`wavenum'adla:w`wavenum' R Some Diff-ADLs /0-5"

*wave 8 respondent Missing in ADL Summary
label variable r`wavenum'adlam "r`wavenum'adlam:w`wavenum' r Missings in Some Diff-ADLs /0-5"

*wave 8 spouse ADL Summary 0-5
gen s`wavenum'adla =.
spouse r`wavenum'adla, result(s`wavenum'adla) wave(`wavenum')
label variable s`wavenum'adla "s`wavenum'adla:w`wavenum' S Some Diff-ADLs /0-5"

*wave 8 spouse Missings in ADL Summary 0-5
gen s`wavenum'adlam =.
spouse r`wavenum'adlam, result(s`wavenum'adlam) wave(`wavenum')
label variable s`wavenum'adlam "s`wavenum'adlam:w`wavenum' S Missings in Some Diff-ADLs /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***ADL Wallace Summary 0-3***
*wave 8 respondent ADL Wallace Summary 0-3
H_ELSA_summary_v adlwa, wave(`wavenum') add(r`wavenum'batha r`wavenum'dressa r`wavenum'eata) 
local varlist_m = r(varlist_m)
label variable r`wavenum'adlwa "r`wavenum'adlwa:w`wavenum' R Some Diff-ADLs:Wallace /0-3"

*wave 8 respondent Missings in ADL Wallace Summary 0-3
label variable r`wavenum'adlwam "r`wavenum'adlwam:w`wavenum' R Missings in Some Diff-ADLs:Wallace /0-3"

*wave 8 spouse ADL Wallace Summary 0-3
gen s`wavenum'adlwa =.
spouse r`wavenum'adlwa, result(s`wavenum'adlwa) wave(`wavenum')
label variable s`wavenum'adlwa "s`wavenum'adlwa:w`wavenum' S Some Diff-ADLs:Wallace /0-3"

*wave 8 spouse Missings in ADL Wallace Summary 0-3
gen s`wavenum'adlwam =.
spouse r`wavenum'adlwam, result(s`wavenum'adlwam) wave(`wavenum')
label variable s`wavenum'adlwam "s`wavenum'adlwam:w`wavenum' S Missings in Some Diff-ADLs:Wallace /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-3***
*wave 8 respondent IADLs Summary 0-3
H_ELSA_summary_v iadla, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadla "r`wavenum'iadla:w`wavenum' R Some Diff-IADLs: /0-3"

*wave 8 respondent Missings in IADLs Summary 0-3
label variable r`wavenum'iadlam "r`wavenum'iadlam:w`wavenum' R Missings in Some Diff-IADLs: /0-3"

*wave 8 spouse IADLs Summary 0-3
gen s`wavenum'iadla =.
spouse r`wavenum'iadla, result(s`wavenum'iadla) wave(`wavenum')
label variable s`wavenum'iadla "s`wavenum'iadla:w`wavenum' S Some Diff-IADLs: /0-3"

*wave 8 spouse Missings in IADLs Summary 0-3
gen s`wavenum'iadlam =.
spouse r`wavenum'iadlam, result(s`wavenum'iadlam) wave(`wavenum')
label variable s`wavenum'iadlam "s`wavenum'iadlam:w`wavenum' S Missings in Some Diff-IADLs: /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***IADL Summary 0-5***
*wave 8 respondent IADLs Summary 0-5
H_ELSA_summary_v iadlza, wave(`wavenum') add(r`wavenum'phonea r`wavenum'moneya r`wavenum'medsa r`wavenum'shopa r`wavenum'mealsa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'iadlza "r`wavenum'iadlza:w`wavenum' R Some Diff-IADLs: /0-5"

*wave 8 respondent Missings in IADLs Summary 0-5
label variable r`wavenum'iadlzam "r`wavenum'iadlzam:w`wavenum' R Missings in Some Diff-IADLs: /0-5"

*wave 8 spouse IADLs Summary 0-5
gen s`wavenum'iadlza =.
spouse r`wavenum'iadlza, result(s`wavenum'iadlza) wave(`wavenum')
label variable s`wavenum'iadlza "s`wavenum'iadlza:w`wavenum' S Some Diff-IADLs: /0-5"

*wave 8 spouse Missings in IADLs Summary 0-5
gen s`wavenum'iadlzam =.
spouse r`wavenum'iadlzam, result(s`wavenum'iadlzam) wave(`wavenum')
label variable s`wavenum'iadlzam "s`wavenum'iadlzam:w`wavenum' S Missings in Some Diff-IADLs: /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Mobility Summary***
*wave 8 respondent Mobility Summary
H_ELSA_summary_v mobilb, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'climsa r`wavenum'clim1a) 
local varlist_m = r(varlist_m)
label variable r`wavenum'mobilb "r`wavenum'mobilb:w`wavenum' R Some Diff-Mobility /0-4"

*wave 8 respondent Missings in Mobility Summary
label variable r`wavenum'mobilbm "r`wavenum'mobilbm:w`wavenum' R Missings in Some Diff-Mobility /0-4"

*wave 8 spouse Mobility Summary
gen s`wavenum'mobilb =.
spouse r`wavenum'mobilb, result(s`wavenum'mobilb) wave(`wavenum')
label variable s`wavenum'mobilb "s`wavenum'mobilb:w`wavenum' S Some Diff-Mobility /0-4"

*wave 8 spouse Missings in Mobility Summary
gen s`wavenum'mobilbm =.
spouse r`wavenum'mobilbm, result(s`wavenum'mobilbm) wave(`wavenum')
label variable s`wavenum'mobilbm "s`wavenum'mobilbm:w`wavenum' S Missings in Some Diff-Mobility /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Large Muscle Summary***
*wave 8 respondent Large Muscle Summary
H_ELSA_summary_v lgmusa, wave(`wavenum') add(r`wavenum'sita r`wavenum'chaira r`wavenum'stoopa r`wavenum'pusha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'lgmusa "r`wavenum'lgmusa:w`wavenum' R Some Diff-Large muscle /0-4"

*wave 8 respondent Missings in Large Muscle Summary
label variable r`wavenum'lgmusam "r`wavenum'lgmusam:w`wavenum' R Missings in Some Diff-Large muscle /0-4"

*wave 8 spouse Large Muscle Summary
gen s`wavenum'lgmusa =.
spouse r`wavenum'lgmusa, result(s`wavenum'lgmusa) wave(`wavenum')
label variable s`wavenum'lgmusa "s`wavenum'lgmusa:w`wavenum' S Some Diff-Large muscle /0-4"

*wave 8 spouse Missings in Large Muscle Summary
gen s`wavenum'lgmusam =.
spouse r`wavenum'lgmusam, result(s`wavenum'lgmusam) wave(`wavenum')
label variable s`wavenum'lgmusam "s`wavenum'lgmusam:w`wavenum' S Missings in Some Diff-Large muscle /0-4"

*check 

*drop intermediate variables
drop `varlist_m'

***Gross Motor Summary***
*wave 8 respondent Gross Motor Summary
H_ELSA_summary_v grossa, wave(`wavenum') add(r`wavenum'walk100a r`wavenum'walkra r`wavenum'clim1a r`wavenum'beda r`wavenum'batha) 
local varlist_m = r(varlist_m)
label variable r`wavenum'grossa "r`wavenum'grossa:w`wavenum' R Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 8 respondent Missings in Gross Motor Summary
label variable r`wavenum'grossam "r`wavenum'grossam:w`wavenum' R Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 8 spouse Gross Motor Summary
gen s`wavenum'grossa =.
spouse r`wavenum'grossa, result(s`wavenum'grossa) wave(`wavenum')
label variable s`wavenum'grossa "s`wavenum'grossa:w`wavenum' S Some Diff-Wk,rn,clmb,bd,bth /0-5"

*wave 8 spouse Missings in Gross Motor Summary
gen s`wavenum'grossam =.
spouse r`wavenum'grossam, result(s`wavenum'grossam) wave(`wavenum')
label variable s`wavenum'grossam "s`wavenum'grossam:w`wavenum' S Missings in Some Diff-Wk,rn,clmb,bd,bth /0-5"

*check 

*drop intermediate variables
drop `varlist_m'

***Fine Motor Summary***
*wave 8 respondent Fine Motor Summary
H_ELSA_summary_v finea, wave(`wavenum') add(r`wavenum'dimea r`wavenum'eata r`wavenum'dressa) 
local varlist_m = r(varlist_m)
label variable r`wavenum'finea "r`wavenum'finea:w`wavenum' R Some Diff-Dime/eat/dress /0-3"

*wave 8 respondent Missings in Fine Motor Summary
label variable r`wavenum'fineam "r`wavenum'fineam:w`wavenum' R Missings in Some Diff-Dime/eat/dress /0-3"

*wave 8 spouse Fine Motor Summary
gen s`wavenum'finea =.
spouse r`wavenum'finea, result(s`wavenum'finea) wave(`wavenum')
label variable s`wavenum'finea "s`wavenum'finea:w`wavenum' S Some Diff-Dime/eat/dress /0-3"

*wave 8 spouse Missings in Fine Motor Summary
gen s`wavenum'fineam =.
spouse r`wavenum'fineam, result(s`wavenum'fineam) wave(`wavenum')
label variable s`wavenum'fineam "s`wavenum'fineam:w`wavenum' S Missings in Some Diff-Dime/eat/dress /0-3"

*check 

*drop intermediate variables
drop `varlist_m'

***Felt depressed (0,1)***
*wave 8 respondent Felt depressed (0,1)
gen r`wavenum'depres =.
missing_w`wavenum' psceda, result(r`wavenum'depres)
replace r`wavenum'depres =.p if askpx == 1
replace r`wavenum'depres = 0 if psceda == 2
replace r`wavenum'depres = 1 if psceda == 1
label variable r`wavenum'depres "r`wavenum'depres:w`wavenum' r CESD: Felt depressed (0,1)"

*wave 8 spouse Felt depressed (0,1)
gen s`wavenum'depres =.
spouse r`wavenum'depres, result(s`wavenum'depres) wave(`wavenum')
label variable s`wavenum'depres "s`wavenum'depres:w`wavenum' s CESD: Felt depressed (0,1)"

*value labels
label values r`wavenum'depres cesd
label values s`wavenum'depres cesd

*check

***Everything is an effort***
*wave 8 respondent Everything is an effort
gen r`wavenum'effort =.
missing_w`wavenum' pscedb, result(r`wavenum'effort)
replace r`wavenum'effort =.p if askpx == 1
replace r`wavenum'effort = 0 if pscedb == 2
replace r`wavenum'effort = 1 if pscedb == 1
label variable r`wavenum'effort "r`wavenum'effort:w`wavenum' r CESD: Everthing an effort (0,1)"

*wave 8 spouse Everything is an effort
gen s`wavenum'effort =.
spouse r`wavenum'effort, result(s`wavenum'effort) wave(`wavenum')
label variable s`wavenum'effort "s`wavenum'effort:w`wavenum' s CESD: Everthing an effort (0,1)"

*value labels
label values r`wavenum'effort cesd
label values s`wavenum'effort cesd

*check

***Sleep was restless (0,1)***
*wave 8 respondent Sleep was restless (0,1)
gen r`wavenum'sleepr =.
missing_w`wavenum' pscedc, result(r`wavenum'sleepr)
replace r`wavenum'sleepr =.p if askpx == 1
replace r`wavenum'sleepr = 0 if pscedc == 2
replace r`wavenum'sleepr = 1 if pscedc == 1
label variable r`wavenum'sleepr "r`wavenum'sleepr:w`wavenum' r CESD: Sleep was restless (0,1)"

*wave 8 spouse Sleep was restless (0,1)
gen s`wavenum'sleepr =.
spouse r`wavenum'sleepr, result(s`wavenum'sleepr) wave(`wavenum')
label variable s`wavenum'sleepr "s`wavenum'sleepr:w`wavenum' s CESD: Sleep was restless (0,1)"

*value labels
label values r`wavenum'sleepr cesd
label values s`wavenum'sleepr cesd

*check

***Was happy (0,1)***
*wave 8 respondent Was happy (0,1)
gen r`wavenum'whappy =.
missing_w`wavenum' pscedd, result(r`wavenum'whappy)
replace r`wavenum'whappy =.p if askpx == 1
replace r`wavenum'whappy = 0 if pscedd == 2
replace r`wavenum'whappy = 1 if pscedd == 1
label variable r`wavenum'whappy "r`wavenum'whappy:w`wavenum' r CESD: Was happy (0,1)"

*wave 8 spouse Was happy (0,1)
gen s`wavenum'whappy =.
spouse r`wavenum'whappy, result(s`wavenum'whappy) wave(`wavenum')
label variable s`wavenum'whappy "s`wavenum'whappy:w`wavenum' s CESD: Was happy (0,1)"

*value labels
label values r`wavenum'whappy cesd
label values s`wavenum'whappy cesd

*check

***Felt lonely (0,1)***
*wave 8 respondent Felt lonely (0,1)
gen r`wavenum'flone =.
missing_w`wavenum' pscede, result(r`wavenum'flone)
replace r`wavenum'flone =.p if askpx == 1
replace r`wavenum'flone = 0 if pscede == 2
replace r`wavenum'flone = 1 if pscede == 1
label variable r`wavenum'flone "r`wavenum'flone:w`wavenum' r CESD: Felt lonely (0,1)"

*wave 8 spouse Felt lonely (0,1)
gen s`wavenum'flone =.
spouse r`wavenum'flone, result(s`wavenum'flone) wave(`wavenum')
label variable s`wavenum'flone "s`wavenum'flone:w`wavenum' s CESD: Felt lonely (0,1)"

*value labels
label values r`wavenum'flone cesd
label values s`wavenum'flone cesd

*check

***Felt sad (0,1)***
*wave 8 respondent Felt sad (0,1)
gen r`wavenum'fsad =.
missing_w`wavenum' pscedg, result(r`wavenum'fsad)
replace r`wavenum'fsad =.p if askpx == 1
replace r`wavenum'fsad = 0 if pscedg == 2
replace r`wavenum'fsad = 1 if pscedg == 1
label variable r`wavenum'fsad "r`wavenum'fsad:w`wavenum' r CESD: Felt sad (0,1)"

*wave 8 spouse Felt sad (0,1)
gen s`wavenum'fsad =.
spouse r`wavenum'fsad, result(s`wavenum'fsad) wave(`wavenum')
label variable s`wavenum'fsad "s`wavenum'fsad:w`wavenum' s CESD: Felt sad (0,1)"

*value labels
label values r`wavenum'fsad cesd
label values s`wavenum'fsad cesd

*check

***Could not get going (0,1)***
*wave 8 respondent Could not get going (0,1)
gen r`wavenum'going =.
missing_w`wavenum' pscedh, result(r`wavenum'going)
replace r`wavenum'going =.p if askpx == 1
replace r`wavenum'going = 0 if pscedh == 2
replace r`wavenum'going = 1 if pscedh == 1
label variable r`wavenum'going "r`wavenum'going:w`wavenum' r CESD: Could not get going (0,1)"

*wave 8 spouse Could not get going (0,1)
gen s`wavenum'going =.
spouse r`wavenum'going, result(s`wavenum'going) wave(`wavenum')
label variable s`wavenum'going "s`wavenum'going:w`wavenum' s CESD: Could not get going (0,1)"

*value labels
label values r`wavenum'going cesd
label values s`wavenum'going cesd

*check

***Enjoyed life (0,1)***
*wave 8 respondent Enjoyed life (0,1)
gen r`wavenum'enlife =.
missing_w`wavenum' pscedf, result(r`wavenum'enlife)
replace r`wavenum'enlife =.p if askpx == 1
replace r`wavenum'enlife = 0 if pscedf == 2
replace r`wavenum'enlife = 1 if pscedf == 1
label variable r`wavenum'enlife "r`wavenum'enlife:w`wavenum' r CESD: Enjoyed life (0,1)"

*wave 8 spouse Enjoyed life (0,1)
gen s`wavenum'enlife =.
spouse r`wavenum'enlife, result(s`wavenum'enlife) wave(`wavenum')
label variable s`wavenum'enlife "s`wavenum'enlife:w`wavenum' s CESD: Enjoyed life (0,1)"

*value labels
label values r`wavenum'enlife cesd
label values s`wavenum'enlife cesd

*check

***CESD Score***
*wave 8 respondent CESD score number of missings
egen r`wavenum'cesdm = rowmiss(r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife) if inw`wavenum' == 1
label variable r`wavenum'cesdm "r`wavenum'cesdm:w`wavenum' r missings in CESD score"

*wave 8 spouse CESD score number of missings
gen s`wavenum'cesdm =.
spouse r`wavenum'cesdm, result(s`wavenum'cesdm) wave(`wavenum')
label variable s`wavenum'cesdm "s`wavenum'cesdm:w`wavenum' s missings in CESD score"

local cesd
foreach v of varlist r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going  {
	recode `v' (miss = 0), generate(`v'_m)
	local cesd `cesd' `v'_m
}

foreach u of varlist r`wavenum'whappy r`wavenum'enlife {
	recode `u' (miss = 1), generate(`u'_m)
	local cesd `cesd' `u'_m
}

*wave 8 respondent CESD score
gen r`wavenum'cesd=.
missing_H r`wavenum'depres r`wavenum'effort r`wavenum'sleepr r`wavenum'flone r`wavenum'fsad r`wavenum'going r`wavenum'whappy r`wavenum'enlife, result(r`wavenum'cesd)
replace r`wavenum'cesd =.p if askpx == 1		 
replace r`wavenum'cesd = r`wavenum'depres_m + r`wavenum'effort_m + r`wavenum'sleepr_m + r`wavenum'flone_m + r`wavenum'fsad_m + r`wavenum'going_m + (1-r`wavenum'whappy_m) + (1-r`wavenum'enlife_m) if inrange(r`wavenum'cesdm,0,7)
label variable r`wavenum'cesd "r`wavenum'cesd:w`wavenum' r CESD Score"

*wave 8 spouse CESD score
gen s`wavenum'cesd =.
spouse r`wavenum'cesd, result(s`wavenum'cesd) wave(`wavenum')
label variable s`wavenum'cesd "s`wavenum'cesd:w`wavenum' s CESD Score"

*check 

*drop intermediate variables
drop `cesd'

***Ever had high blood pressure***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hibpe if !mi(r`w'hibpe) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had high blood pressure
* VARIABLE CHANGED TO hediac
gen r`wavenum'hibpe =.
missing_w`wavenum' hedacbp hedimbp, result(r`wavenum'hibpe) 
replace r`wavenum'hibpe = 0 if preload == 0 & hedacbp != 2 
replace r`wavenum'hibpe = 0 if hedimbp == 0
replace r`wavenum'hibpe = 0 if preload == 1 & hedacbp == 2 
replace r`wavenum'hibpe = 1 if hedimbp == 1
replace r`wavenum'hibpe = 1 if preload == 1 & hedacbp != 2 
label variable r`wavenum'hibpe "r`wavenum'hibpe:w`wavenum' r ever had high blood pressure"

*wave 8 respondent high blood pressure dispute flag
gen r`wavenum'hibpf =.
replace r`wavenum'hibpf = 0 if inlist(preload,0,1) | inlist(hedimbp,-9,-8,0,1)
replace r`wavenum'hibpf = 3 if preload == 1 & hedacbp == 2
label variable r`wavenum'hibpf "r`wavenum'hibpf:w`wavenum' r flag dispute chg high blood pressure"

*previous waves respondent high blood pressure dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpf = 6 if preload == 1 & hedacbp == 2 & r`w'hibpf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hibpe = 0 if preload == 1 & hedacbp == 2 & r`w'hibpe == 1
}

*value labels
label values r`wavenum'hibpe health_problems
label values r`wavenum'hibpf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had diabetes***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'diabe if !mi(r`w'diabe) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had diabetes
gen r`wavenum'diabe =.
missing_w`wavenum' hedacdi hedimdi, result(r`wavenum'diabe)
replace r`wavenum'diabe = 0 if preload == 0 & hedacdi != 2
replace r`wavenum'diabe = 0 if hedimdi == 0
replace r`wavenum'diabe = 0 if preload == 1 & hedacdi == 2
replace r`wavenum'diabe = 1 if hedimdi == 1
replace r`wavenum'diabe = 1 if preload == 1 & hedacdi != 2
label variable r`wavenum'diabe "r`wavenum'diabe:w`wavenum' r ever had diabetes"

*wave 8 respondent diabetes dispute flag
gen r`wavenum'diabf =.
replace r`wavenum'diabf = 0 if inlist(preload,0,1) | inlist(hedimdi,-9,-8,0,1)
replace r`wavenum'diabf = 3 if preload == 1 & hedacdi == 2
label variable r`wavenum'diabf "r`wavenum'diabf:w`wavenum' r flag dispute chg diabetes"

*previous waves respondent diabetes dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabf = 6 if preload == 1 & hedacdi == 2 & r`w'diabf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'diabe = 0 if preload == 1 & hedacdi == 2 & r`w'diabe == 1
}

*value labels
label values r`wavenum'diabe health_problems
label values r`wavenum'diabf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had cancer***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'cancre if !mi(r`w'cancre) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had cancer
gen r`wavenum'cancre =.
missing_w`wavenum' hedbdca hedibca, result(r`wavenum'cancre)
replace r`wavenum'cancre = 0 if preload == 0 & hedbdca != 2
replace r`wavenum'cancre = 0 if hedibca == 0
replace r`wavenum'cancre = 0 if preload == 1 & hedbdca == 2
replace r`wavenum'cancre = 1 if hedibca == 1
replace r`wavenum'cancre = 1 if preload == 1 & hedbdca != 2
label variable r`wavenum'cancre "r`wavenum'cancre:w`wavenum' r ever had cancer"

*wave 8 respondent cancer dispute flag
gen r`wavenum'cancrf =.
replace r`wavenum'cancrf = 0 if inlist(preload,0,1) | inlist(hedibca,-9,-8,0,1)
replace r`wavenum'cancrf = 3 if preload == 1 & hedbdca == 2
label variable r`wavenum'cancrf "r`wavenum'cancrf:w`wavenum' r flag dispute chg cancer"

*previous waves respondent cancer dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancrf = 6 if preload == 1 & hedbdca == 2 & r`w'cancrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'cancre = 0 if preload == 1 & hedbdca == 2 & r`w'cancre == 1
}

*value labels
label values r`wavenum'cancre health_problems
label values r`wavenum'cancrf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had lung disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'lunge if !mi(r`w'lunge) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had lung disease
gen r`wavenum'lunge =.
missing_w`wavenum' hedbdlu hediblu, result(r`wavenum'lunge)
replace r`wavenum'lunge = 0 if preload == 0 & hedbdlu != 2
replace r`wavenum'lunge = 0 if hediblu == 0
replace r`wavenum'lunge = 0 if preload == 1 & hedbdlu == 2
replace r`wavenum'lunge = 1 if hediblu == 1
replace r`wavenum'lunge = 1 if preload == 1 & hedbdlu != 2
label variable r`wavenum'lunge "r`wavenum'lunge:w`wavenum' r ever had lung disease"

*wave 8 respondent lung disease dispute flag
gen r`wavenum'lungf =.
replace r`wavenum'lungf = 0 if inlist(preload,0,1) | inlist(hediblu,-9,-8,0,1)
replace r`wavenum'lungf = 3 if preload == 1 & hedbdlu == 2
label variable r`wavenum'lungf "r`wavenum'lungf:w`wavenum' r flag dispute chg lung disease"

*previous waves respondent lung disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lungf = 6 if preload == 1 & hedbdlu == 2 & r`w'lungf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'lunge = 0 if preload == 1 & hedbdlu == 2 & r`w'lunge == 1
}

*value labels
label values r`wavenum'lunge health_problems
label values r`wavenum'lungf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had heart problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'hearte if !mi(r`w'hearte) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had heart problems
gen r`wavenum'hearte =.
missing_w`wavenum' hedacan hedacmi hedachf hedachm hedacar hedac95 ///
   				 hediman hedimmi hedimhf hedimhm hedimar hedim85, result(r`wavenum'hearte)
replace r`wavenum'hearte = 0 if preload == 0 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedac95 != 2
replace r`wavenum'hearte = 0 if ( hediman == 0 | hedimmi == 0 | hedimhf == 0 | hedimhm == 0 ///
																 | hedimar == 0 | hedim85 == 0 )
replace r`wavenum'hearte = 0 if preload == 1 & (hedacan == 2 | hedacmi == 2 | hedachf == 2 ///
																						  | hedachm == 2 | hedacar == 2 | hedac95 == 2	)									 
replace r`wavenum'hearte = 1 if ( hediman == 1 | hedimmi == 1 | hedimhf == 1 | hedimhm == 1 ///
																 | hedimar == 1 | hedim85 == 1 )
replace r`wavenum'hearte = 1 if preload == 1 & hedacan != 2 & hedacmi != 2 & hedachf != 2 ///
																						 & hedachm != 2 & hedacar != 2 & hedac95 != 2
label variable r`wavenum'hearte "r`wavenum'hearte:w`wavenum' r ever had heart problems"

*wave 8 respondent heart problems dispute flag
gen r`wavenum'heartf =.
replace r`wavenum'heartf = 0 if inlist(preload,0,1) | inlist(hediman,-9,-8,0,1) | inlist(hedimmi,-9,-8,0,1) ///
																					 | inlist(hedimhf,-9,-8,0,1) | inlist(hedimhm,-9,-8,0,1) ///
																					 | inlist(hedimar,-9,-8,0,1) | inlist(hedim85,-9,-8,0,1)
replace r`wavenum'heartf = 3 if preload == 1 & (hedacan == 2 | hedacmi == 2 ///
																		          | hedachf == 2 | hedachm == 2 ///
																		          | hedacar == 2 | hedac95== 2)
label variable r`wavenum'heartf "r`wavenum'heartf:w`wavenum' r flag dispute chg heart problems"


*previous waves respondent heart problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'heartf = 6 if preload == 1 & ( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedac95 == 2 ) & r`w'heartf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'hearte = 0 if preload == 1 & ///
															( hedacan == 2 ///
															| hedacmi == 2 ///
															| hedachf == 2 ///
															| hedachm == 2 ///
															| hedacar == 2 ///
															| hedac95 == 2 ) & r`w'hearte == 1
}

*value labels
label values r`wavenum'hearte health_problems
label values r`wavenum'heartf health_problems_flag

*check 
*forvalues w = `wavenum' (-1) 1 {
*}

drop preload

***Ever had stroke***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'stroke if !mi(r`w'stroke) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had stroke
gen r`wavenum'stroke =.
missing_w`wavenum' hedacst hedimst, result(r`wavenum'stroke)
replace r`wavenum'stroke = 0 if preload == 0 & hedacst != 2
replace r`wavenum'stroke = 0 if hedimst == 0
replace r`wavenum'stroke = 0 if preload == 1 & hedacst == 2
replace r`wavenum'stroke = 1 if hedimst == 1
replace r`wavenum'stroke = 1 if preload == 1 & hedacst != 2
label variable r`wavenum'stroke "r`wavenum'stroke:w`wavenum' r ever had stroke"

*wave 8 respondent stroke dispute flag
gen r`wavenum'strokf =.
replace r`wavenum'strokf = 0 if inlist(preload,0,1) | inlist(hedimst,-9,-8,0,1)
replace r`wavenum'strokf = 3 if preload == 1 & hedacst == 2
label variable r`wavenum'strokf "r`wavenum'strokf:w`wavenum' r flag dispute chg stroke"

*previous waves respondent stroke dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'strokf = 6 if preload == 1 & hedacst == 2 & r`w'strokf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'stroke = 0 if preload == 1 & hedacst == 2 & r`w'stroke == 1
}

*value labels
label values r`wavenum'stroke health_problems
label values r`wavenum'strokf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had psych problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'psyche if !mi(r`w'psyche) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had psych problems
gen r`wavenum'psyche =.
missing_w`wavenum' hedbdps hedibps, result(r`wavenum'psyche)
replace r`wavenum'psyche = 0 if preload == 0 & hedbdps != 2
replace r`wavenum'psyche = 0 if hedibps == 0
replace r`wavenum'psyche = 0 if preload == 1 & hedbdps == 2
replace r`wavenum'psyche = 1 if hedibps == 1
replace r`wavenum'psyche = 1 if preload == 1 & hedbdps != 2
label variable r`wavenum'psyche "r`wavenum'psyche:w`wavenum' r ever had psych problems"

*wave 7 respondent psych problems dispute flag
gen r`wavenum'psychf =.
replace r`wavenum'psychf = 0 if inlist(preload,0,1) | inlist(hedibps,-9,-8,0,1)
replace r`wavenum'psychf = 3 if preload == 1 & hedbdps == 2
label variable r`wavenum'psychf "r`wavenum'psychf:w`wavenum' r flag dispute chg psych problems"

*previous waves respondent psych problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psychf = 6 if preload == 1 & hedbdps == 2 & r`w'psychf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'psyche = 0 if preload == 1 & hedbdps == 2 & r`w'psyche == 1
}

*value labels
label values r`wavenum'psyche health_problems
label values r`wavenum'psychf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had arthritis***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'arthre if !mi(r`w'arthre) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had arthritis
gen r`wavenum'arthre =.
missing_w`wavenum' hedbdar hedibar, result(r`wavenum'arthre)
replace r`wavenum'arthre = 0 if preload == 0 & hedbdar != 2
replace r`wavenum'arthre = 0 if hedibar == 0
replace r`wavenum'arthre = 0 if preload == 1 & hedbdar == 2
replace r`wavenum'arthre = 1 if hedibar == 1
replace r`wavenum'arthre = 1 if preload == 1 & hedbdar != 2
label variable r`wavenum'arthre "r`wavenum'arthre:w`wavenum' r ever had arthritis"

*wave 8 respondent arthritis dispute flag
gen r`wavenum'arthrf =.
replace r`wavenum'arthrf = 0 if inlist(preload,0,1) | inlist(hedibar,-9,-8,0,1)
replace r`wavenum'arthrf = 3 if preload == 1 & hedbdar == 2
label variable r`wavenum'arthrf "r`wavenum'arthrf:w`wavenum' r flag dispute chg arthritis"

*previous waves respondent arthritis dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthrf = 6 if preload == 1 & hedbdar == 2 & r`w'arthrf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'arthre = 0 if preload == 1 & hedbdar == 2 & r`w'arthre == 1
}

*value labels
label values r`wavenum'arthre health_problems
label values r`wavenum'arthrf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}
drop preload

***Ever had memory-related problems***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'memrye if !mi(r`w'memrye) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had memory-related problems
gen r`wavenum'memrye =.
missing_w`wavenum' hedbdad hedbdde hedibad hedibde, result(r`wavenum'memrye)
replace r`wavenum'memrye = 0 if preload == 0 & hedbdad != 2 & hedbdde != 2
replace r`wavenum'memrye = 0 if ( hedibad == 0 | hedibde == 0 )
replace r`wavenum'memrye = 0 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
replace r`wavenum'memrye = 1 if ( hedibad == 1 | hedibde == 1 )
replace r`wavenum'memrye = 1 if preload == 1 & hedbdad != 2 & hedbdde != 2
label variable r`wavenum'memrye "r`wavenum'memrye:w`wavenum' r ever had memory problem"

*wave 8 respondent memory-related problems dispute flag
gen r`wavenum'memryf =.
replace r`wavenum'memryf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'memryf = 3 if preload == 1 & (hedbdad == 2 | hedbdde == 2)
label variable r`wavenum'memryf "r`wavenum'memryf:w`wavenum' r flag chg previous memory prob"

*previous waves respondent memory-related problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memryf = 6 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memryf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'memrye = 0 if preload == 1 & ( hedbdad == 2 | hedbdde == 2 ) & r`w'memrye == 1
}

*value labels
label values r`wavenum'memrye health_problems
label values r`wavenum'memryf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had asthma***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'asthmae if !mi(r`w'asthmae) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had asthma
gen r`wavenum'asthmae =.
missing_w`wavenum' hedbdas hedibas, result(r`wavenum'asthmae)
replace r`wavenum'asthmae = 0 if preload == 0 & hedbdas != 2
replace r`wavenum'asthmae = 0 if hedibas == 0
replace r`wavenum'asthmae = 0 if preload == 1 & hedbdas == 2
replace r`wavenum'asthmae = 1 if hedibas == 1
replace r`wavenum'asthmae = 1 if preload == 1 & hedbdas != 2
label variable r`wavenum'asthmae "r`wavenum'asthmae:w`wavenum' r ever had asthma"

*wave 8 respondent asthma dispute flag
gen r`wavenum'asthmaf =.
replace r`wavenum'asthmaf = 0 if inlist(preload,0,1) | inlist(hedibas,-9,-8,0,1)
replace r`wavenum'asthmaf = 3 if preload == 1 & hedbdas == 2
label variable r`wavenum'asthmaf "r`wavenum'asthmaf:w`wavenum' r flag chg previous asthma"

*previous waves respondent memory-related problems dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmaf = 6 if preload == 1 & hedbdas == 2 & r`w'asthmaf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'asthmae = 0 if preload == 1 & hedbdas == 2 & r`w'asthmae == 1
}

*value labels
label values r`wavenum'asthmae health_problems
label values r`wavenum'asthmaf health_problems_flag

*check
*forvalues w = `pre_wavenum' (-1) 1 {
*}

drop preload

***Ever had high cholesterol***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 2 {
	replace preload = r`w'hchole if !mi(r`w'hchole) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had high cholesterol
gen r`wavenum'hchole =.
* MV hedacch IS NOW hedacch
missing_w`wavenum' hedimch hedacch, result(r`wavenum'hchole)
replace r`wavenum'hchole = 0 if preload == 0 & hedacch != 2
replace r`wavenum'hchole = 0 if hedimch==0
replace r`wavenum'hchole = 0 if preload == 1 & hedacch == 2
replace r`wavenum'hchole = 1 if hedimch == 1
replace r`wavenum'hchole = 1 if preload == 1 & hedacch != 2
label variable r`wavenum'hchole "r`wavenum'hchole:w`wavenum' r ever had high cholesterol"

*wave 8 respondent high cholesterol dispute flag
gen r`wavenum'hcholf =.
replace r`wavenum'hcholf = 0 if inlist(preload,0,1) | inlist(hedimch,-9,-8,0,1)
replace r`wavenum'hcholf = 3 if preload == 1 & hedacch == 2
label variable r`wavenum'hcholf "r`wavenum'hcholf:w`wavenum' r flag chg previous high cholesterol"

*previous waves respondent high cholesterol dispute flag
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hcholf = 6 if preload == 1 & hedacch == 2 & r`w'hcholf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 2 {
	replace r`w'hchole = 0 if preload == 1 & hedacch == 2 & r`w'hchole == 1
}

*value labels
label values r`wavenum'hchole health_problems
label values r`wavenum'hcholf health_problems_flag

drop preload

***Ever had cataracts***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'catrcte if !mi(r`w'catrcte) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had cataracts
gen r`wavenum'catrcte =.
missing_w`wavenum' heopcca heoptca, result(r`wavenum'catrcte)
replace r`wavenum'catrcte = 0 if preload == 0 & heopcca != 2
replace r`wavenum'catrcte = 0 if heoptca==0
replace r`wavenum'catrcte = 0 if preload == 1 & heopcca == 2
replace r`wavenum'catrcte = 1 if heoptca == 1
replace r`wavenum'catrcte = 1 if preload == 1 & heopcca != 2
label variable r`wavenum'catrcte "r`wavenum'catrcte:w`wavenum' r ever had cataracts"

*wave 8 respondent cataracts dispute flag
gen r`wavenum'catrctf =.
replace r`wavenum'catrctf = 0 if inlist(preload,0,1) | inlist(heoptca,-9,-8,0,1)
replace r`wavenum'catrctf = 3 if preload == 1 & heopcca == 2
label variable r`wavenum'catrctf "r`wavenum'catrctf:w`wavenum' r flag chg previous cataracts"

*previous waves respondent cataracts dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrctf = 6 if preload == 1 & heopcca == 2 & r`w'catrctf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'catrcte = 0 if preload == 1 & heopcca == 2 & r`w'catrcte == 1
}

*value labels
label values r`wavenum'catrcte health_problems
label values r`wavenum'catrctf health_problems_flag

drop preload

***Ever had parkinsons***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'parkine if !mi(r`w'parkine) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had parkinsons
gen r`wavenum'parkine =.
missing_w`wavenum' hedibpd hedbdpd, result(r`wavenum'parkine)
replace r`wavenum'parkine = 0 if preload == 0 & hedbdpd != 2
replace r`wavenum'parkine = 0 if hedibpd==0
replace r`wavenum'parkine = 0 if preload == 1 & hedbdpd == 2
replace r`wavenum'parkine = 1 if hedibpd == 1
replace r`wavenum'parkine = 1 if preload == 1 & hedbdpd != 2
label variable r`wavenum'parkine "r`wavenum'parkine:w`wavenum' r ever had parkinson disease"

*wave 8 respondent parkinsons dispute flag
gen r`wavenum'parkinf =.
replace r`wavenum'parkinf = 0 if inlist(preload,0,1) | inlist(hedibpd,-9,-8,0,1)
replace r`wavenum'parkinf = 3 if preload == 1 & hedbdpd == 2
label variable r`wavenum'parkinf "r`wavenum'parkinf:w`wavenum' r flag chg previous parkinson disease"

*previous waves respondent parkinsons dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkinf = 6 if preload == 1 & hedbdpd == 2 & r`w'parkinf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'parkine = 0 if preload == 1 & hedbdpd == 2 & r`w'parkine == 1
}

*value labels
label values r`wavenum'parkine health_problems
label values r`wavenum'parkinf health_problems_flag

drop preload

***Ever had hip fracture***
*wave 8 respondent ever had hip fracture
gen r`wavenum'hipe = .
missing_w`wavenum' hefrac, result(r`wavenum'hipe)
replace r`wavenum'hipe = .a if inrange(r`wavenum'agey,1,59) & hefrac==-1
replace r`wavenum'hipe = 0 if hefrac==2
replace r`wavenum'hipe = 1 if hefrac==1 |  (r`pre_wavenum'hipe==1 & inw`wavenum' == 1)
label variable r`wavenum'hipe "r`wavenum'hipe:w`wavenum' r ever had hip fracture"
label values r`wavenum'hipe health_problems

*wave 8 spouse ever had hip fracture
gen s`wavenum'hipe = .
spouse r`wavenum'hipe, result(s`wavenum'hipe) wave(`wavenum')
label variable s`wavenum'hipe "s`wavenum'hipe:w`wavenum' s ever had hip fracture"
label values s`wavenum'hipe health_problems

***Ever had Alzheimers disease***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'alzhe if !mi(r`w'alzhe) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had Alzheimers disease
gen r`wavenum'alzhe =.
missing_w`wavenum' hedbdad hedibad, result(r`wavenum'alzhe)
replace r`wavenum'alzhe = 0 if preload == 0 & hedbdad != 2
replace r`wavenum'alzhe = 0 if hedibad == 0
replace r`wavenum'alzhe = 0 if preload == 1 & hedbdad == 2
replace r`wavenum'alzhe = 1 if hedibad == 1
replace r`wavenum'alzhe = 1 if preload == 1 & hedbdad != 2
label variable r`wavenum'alzhe "r`wavenum'alzhe:w`wavenum' r ever had alzheimers"

*wave 8 respondent Alzheimers disease dispute flag
gen r`wavenum'alzhf =.
replace r`wavenum'alzhf = 0 if inlist(preload,0,1) | inlist(hedibad,-9,-8,0,1)
replace r`wavenum'alzhf = 3 if preload == 1 & hedbdad == 2
label variable r`wavenum'alzhf "r`wavenum'alzhf:w`wavenum' r flag chg previous alzheimers"

*previous waves respondent Alzheimers disease dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhf = 6 if preload == 1 & hedbdad == 2 & r`w'alzhf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'alzhe = 0 if preload == 1 & hedbdad == 2 & r`w'alzhe == 1
}

*value labels
label values r`wavenum'alzhe health_problems
label values r`wavenum'alzhf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

***Ever had Dementia***
*define preload
gen preload=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'demene if !mi(r`w'demene) & mi(preload) & inw`wavenum'==1
}

*wave 8 respondent ever had Dementia
gen r`wavenum'demene =.
missing_w`wavenum' hedbdde hedibde, result(r`wavenum'demene)
replace r`wavenum'demene = 0 if preload == 0 & hedbdde != 2
replace r`wavenum'demene = 0 if hedibde == 0
replace r`wavenum'demene = 0 if preload == 1 & hedbdde == 2
replace r`wavenum'demene = 1 if hedibde == 1
replace r`wavenum'demene = 1 if preload == 1 & hedbdde != 2
label variable r`wavenum'demene "r`wavenum'demene:w`wavenum' r ever had dementia"

*wave 8 respondent Dementia dispute flag
gen r`wavenum'demenf =.
replace r`wavenum'demenf = 0 if inlist(preload,0,1) | inlist(hedibde,-9,-8,0,1)
replace r`wavenum'demenf = 3 if preload == 1 & hedbdde == 2
label variable r`wavenum'demenf "r`wavenum'demenf:w`wavenum' r flag chg previous dementia"

*previous waves respondent Dementia dispute flag
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demenf = 6 if preload == 1 & hedbdde == 2 & r`w'demenf == 0
}

*reset previous waves if disputed
forvalues w = `pre_wavenum' (-1) 1 {
	replace r`w'demene = 0 if preload == 1 & hedbdde == 2 & r`w'demene == 1
}

*value labels
label values r`wavenum'demene health_problems
label values r`wavenum'demenf health_problems_flag

*check
forvalues w = `pre_wavenum' (-1) 1 {
}

drop preload

*gen preiwy = .
*gen preiwm = .
*forvalues w = `pre_wavenum' (-1) 1 {
*	 replace preiwy = r`w'iwindy if inw`w' ==1 & mi(preiwy)
*	 replace preiwm = r`w'iwindm if inw`w' ==1 & mi(preiwm)
*	}

***Health behavior Preventive behaviors****
*wave 8 respondent ever had mammogram
gen r`wavenum'mammoge = .
missing_w`wavenum' hemamb, result(r`wavenum'mammoge)
replace r`wavenum'mammoge = .a if inrange(r`wavenum'agey,1,46) | inrange(r`wavenum'agey,74,90)
replace r`wavenum'mammoge = .s if ragender==1 & inw`wavenum'==1
replace r`wavenum'mammoge = 0 if hemamb==2
replace r`wavenum'mammoge = 1 if hemamb==1
label variable r`wavenum'mammoge "r`wavenum'mammoge:w`wavenum' r ever had mammogram"
label values r`wavenum'mammoge health_prev

*wave 8 spouse ever had mammogram
gen s`wavenum'mammoge = .
spouse r`wavenum'mammoge, result(s`wavenum'mammoge) wave(`wavenum')
label variable s`wavenum'mammoge "s`wavenum'mammoge:w`wavenum' s ever had mammogram"
label values s`wavenum'mammoge health_prev

**wave 8 respondent had mammogram (x-ray of your breasts)? last 2 yrs
*gen r`wavenum'mammog =.
*missing_w`wavenum' hemamty hemamtm hemamb, result(r`wavenum'mammog)
*replace r`wavenum'mammog = .a if inrange(r`wavenum'agey,1,46) | inrange(r`wavenum'agey,74,90)
*replace r`wavenum'mammog = .s if ragender ==1 & inw`wavenum' == 1
*replace r`wavenum'mammog = 0 if  hemamb ==2
*replace r`wavenum'mammog = 0 if ((ym(r`wavenum'iwindy,r`wavenum'iwindm) - ym(hemamty,hemamtm) > 24 & preiwy == .) ///
*															    | (ym(hemamty, hemamtm) < ym(preiwy,preiwm) & !mi(preiwy)))  ///
*															  & !inlist(hemamty,-1,-8,-9) & !inlist(hemamtm,-1,-8,-9) & inw`wavenum'==1
*replace r`wavenum'mammog = 0 if r`wavenum'iwindy - hemamty > 2 & !mi(r`wavenum'iwindy) & !inlist(hemamty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'mammog)				
*replace r`wavenum'mammog = 1 if ((ym(r`wavenum'iwindy,r`wavenum'iwindm) - ym(hemamty,hemamtm)  <= 24 & preiwy == .) ///
*														  | ((ym(hemamty, hemamtm) >= ym(preiwy,preiwm)) & !mi(preiwy))) ///
*														   & !inlist(hemamty,-1,-8,-9) & !inlist(hemamtm,-1,-8,-9) & inw`wavenum'==1
*replace r`wavenum'mammog = 1 if r`wavenum'iwindy - hemamty <=2 & !mi(r`wavenum'iwindy) & !inlist(hemamty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'mammog)
*label variable r`wavenum'mammog "r`wavenum'mammog:w`wavenum' r prev mammogram last 2 yrs"
*label values r`wavenum'mammog health_prev
*
**wave 8 spouse had mammogram (x-ray of your breasts) last 2 yrs
*gen s`wavenum'mammog =.
*spouse r`wavenum'mammog, result(s`wavenum'mammog) wave(`wavenum')
*label variable s`wavenum'mammog "s`wavenum'mammog:w`wavenum' S prev mammogram last 2 yrs"
*label values s`wavenum'mammog health_prev

*wave 8 respondent ever had prostate test
gen r`wavenum'proste = .
missing_w`wavenum' hepro, result(r`wavenum'proste)
replace r`wavenum'proste = .a if inrange(r`wavenum'agey,1,54) | inrange(r`wavenum'agey,77,90)
replace r`wavenum'proste = .s if ragender==2 & inw`wavenum'==1
replace r`wavenum'proste = 0 if hepro==2
replace r`wavenum'proste = 1 if hepro==1
label variable r`wavenum'proste "r`wavenum'proste:w`wavenum' r ever had prostate test"
label values r`wavenum'proste health_prev

*wave 8 spouse ever had prostate test
gen s`wavenum'proste = .
spouse r`wavenum'proste, result(s`wavenum'proste) wave(`wavenum')
label variable s`wavenum'proste "s`wavenum'proste:w`wavenum' s ever had prostate test"
label values s`wavenum'proste health_prev
*
**wave 8 respondent had prostate-specific antigen (PSA) blood test or other test last 2 yrs
*gen r`wavenum'prost =.
*missing_w`wavenum' heproty heprotm hepro, result(r`wavenum'prost)
*replace r`wavenum'prost = .a if inrange(r`wavenum'agey,1,54) | inrange(r`wavenum'agey,77,90)
*replace r`wavenum'prost = .s if ragender ==2 & inw`wavenum' == 1
*replace r`wavenum'prost = 0 if hepro ==2
*replace r`wavenum'prost = 0 if ((ym(r6iwindy,r6iwindm) - ym(heproty, heprotm) > 24 & preiwy == .) ///
*															    | (ym(heproty, heprotm) < ym(preiwy,preiwm) & !mi(preiwy))) ///
*															  & !inlist(heproty,-1,-8,-9) & !inlist(heprotm,-1,-8,-9) & inw`wavenum'==1
*replace r`wavenum'prost = 0 if r`wavenum'iwindy - heproty > 2 & !mi(r`wavenum'iwindy) & !inlist(heproty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'prost)
*replace r`wavenum'prost = 1 if ((ym(r6iwindy,r6iwindm) - ym(heproty, heprotm)   <= 24 & preiwy == .) ///
*														  | ((ym(heproty, heprotm) >= ym(preiwy,preiwm)) & !mi(preiwy))) ///
*														   & !inlist(heproty,-1,-8,-9) & !inlist(heprotm,-1,-8,-9) & inw`wavenum'==1
*replace r`wavenum'prost = 1 if r`wavenum'iwindy - heproty <= 2 & !mi(r`wavenum'iwindy) & !inlist(heproty,-1,-8,-9) & inw`wavenum'==1 & mi(r`wavenum'prost)
*label variable r`wavenum'prost "r`wavenum'prost:w`wavenum' r prev prostate test last 2 yrs"
*label values r`wavenum'prost health_prev
*
**wave 8 spouse had prostate-specific antigen (PSA) last 2 yrs 
*gen s`wavenum'prost =.
*spouse r`wavenum'prost, result(s`wavenum'prost) wave(`wavenum')
*label variable s`wavenum'prost "s`wavenum'prost:w`wavenum' S prev prostate test last 2 yrs"
*label values s`wavenum'prost health_prev

*drop preiwy preiwm

***Vigorous physical activity***
*wave 8 respondent vigorous physical activity
gen r`wavenum'vgactx_e =.
missing_w`wavenum' heacta, result(r`wavenum'vgactx_e)
replace r`wavenum'vgactx_e =.p if askpx == 1
replace r`wavenum'vgactx_e = 2 if heacta == 1
replace r`wavenum'vgactx_e = 3 if heacta == 2
replace r`wavenum'vgactx_e = 4 if heacta == 3
replace r`wavenum'vgactx_e = 5 if heacta == 4
label variable r`wavenum'vgactx_e "r`wavenum'vgactx_e:w`wavenum' R Freq vigorous phys activ"

*wave 8 spouse vigorous physical activity
gen s`wavenum'vgactx_e =.
spouse r`wavenum'vgactx_e, result(s`wavenum'vgactx_e) wave(`wavenum')
label variable s`wavenum'vgactx_e "s`wavenum'vgactx_e:w`wavenum' S Freq vigorous phys activ"

*label values
label values r`wavenum'vgactx_e activity
label values s`wavenum'vgactx_e activity

*check 

***Moderate physical activity***
*wave 8 respondent moderate physical activity
gen r`wavenum'mdactx_e =.
missing_w`wavenum' heactb, result(r`wavenum'mdactx_e)
replace r`wavenum'mdactx_e = 2 if heactb == 1
replace r`wavenum'mdactx_e = 3 if heactb == 2
replace r`wavenum'mdactx_e = 4 if heactb == 3
replace r`wavenum'mdactx_e = 5 if heactb == 4
label variable r`wavenum'mdactx_e "r`wavenum'mdactx_e:w`wavenum' R Freq moderate phys activ"

*wave 8 spouse vigorous moderate activity
gen s`wavenum'mdactx_e =.
spouse r`wavenum'mdactx_e, result(s`wavenum'mdactx_e) wave(`wavenum')
label variable s`wavenum'mdactx_e "s`wavenum'mdactx_e:w`wavenum' S Freq moderate phys activ"

*label values
label values r`wavenum'mdactx_e activity
label values s`wavenum'mdactx_e activity

*check 

***Light physical activity***
*wave 8 respondent light physical activity
gen r`wavenum'ltactx_e =.
missing_w`wavenum' heactc, result(r`wavenum'ltactx_e)
replace r`wavenum'ltactx_e = 2 if heactc == 1
replace r`wavenum'ltactx_e = 3 if heactc == 2
replace r`wavenum'ltactx_e = 4 if heactc == 3
replace r`wavenum'ltactx_e = 5 if heactc == 4
label variable r`wavenum'ltactx_e "r`wavenum'ltactx_e:w`wavenum' R Freq light phys activ"

*wave 8 spouse vigorous light activity
gen s`wavenum'ltactx_e =.
spouse r`wavenum'ltactx_e, result(s`wavenum'ltactx_e) wave(`wavenum')
label variable s`wavenum'ltactx_e "s`wavenum'ltactx_e:w`wavenum' S Freq light phys activ"

*label values
label values r`wavenum'ltactx_e activity
label values s`wavenum'ltactx_e activity

*check 

***Ever drinks alcohol***
*wave 8 respondent ever drinks alcohol
gen r`wavenum'drink =.
replace r`wavenum'drink =.m if scako == -9
replace r`wavenum'drink =.i if scako == -3
replace r`wavenum'drink =.c if scako==-2
replace r`wavenum'drink = 0 if scako == 8
replace r`wavenum'drink = 1 if inrange(scako,1,7)
label variable r`wavenum'drink "r`wavenum'drink:w`wavenum' R ever drinks any alcohol"

*wave 8 spouse ever drinks alcohol
gen s`wavenum'drink =.
spouse r`wavenum'drink, result(s`wavenum'drink) wave(`wavenum')
label variable s`wavenum'drink "s`wavenum'drink:w`wavenum' S ever drinks any alcohol"

*label values
label values r`wavenum'drink ever_drink
label values s`wavenum'drink ever_drink

*check 

***Days per week drinks***
*wave 8 respondent days per week drinks
gen r`wavenum'drinkd_e =.
replace r`wavenum'drinkd_e =.m if scako == -9 | scal7a == -9 | scal7b == -9
replace r`wavenum'drinkd_e =.d if scako == -8 | scal7a == -8 | scal7b == -8
replace r`wavenum'drinkd_e =.i if scako == -3 | scal7a == -3 | scal7b == -3
replace r`wavenum'drinkd_e =.c if scako==-2 | scal7a==-2 | scal7b==-2
replace r`wavenum'drinkd_e = 0 if scako == 8 | scal7a == 2
replace r`wavenum'drinkd_e = 1 if scal7b == 1
replace r`wavenum'drinkd_e = 2 if scal7b == 2
replace r`wavenum'drinkd_e = 3 if scal7b == 3
replace r`wavenum'drinkd_e = 4 if scal7b == 4
replace r`wavenum'drinkd_e = 5 if scal7b == 5
replace r`wavenum'drinkd_e = 6 if scal7b == 6
replace r`wavenum'drinkd_e = 7 if scal7b == 7
label variable r`wavenum'drinkd_e "r`wavenum'drinkd_e:w`wavenum' R # days/week drinks"

*wave spouse days per week drinks
gen s`wavenum'drinkd_e =.
spouse r`wavenum'drinkd_e, result(s`wavenum'drinkd_e) wave(`wavenum')
label variable s`wavenum'drinkd_e "s`wavenum'drinkd_e:w`wavenum' S # days/week drinks"

**label values
*label values r`wavenum'drinkd_e drinks_flag
*label values s`wavenum'drinkd_e drinks_flag

*check 

***Drinks per week***
*wave 8 respondent drinks per week
gen r`wavenum'drinkwn_e =.
replace r`wavenum'drinkwn_e =.m if scako == -9 | scal7a == -9 | scal7b == -9 | ///
																	scdrspi == -9 | scdrwin == -9 | scdrpin == -9
replace r`wavenum'drinkwn_e =.d if scako == -8 | scal7a == -8 | scal7b == -8 | ///
																	scdrspi == -8 | scdrwin == -8 | scdrpin == -8
replace r`wavenum'drinkwn_e =.i if scako == -3 | scal7a == -3 | scal7b == -3 | ///
																	scdrspi == -3 | scdrwin == -3 | scdrpin == -3
replace r`wavenum'drinkwn_e =.c if scako==-2 | scal7a==-2 | scal7b==-2
replace r`wavenum'drinkwn_e = 0 if scako == 8 | inlist(scal7a,1,2) | inrange(scal7b,1,7)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrspi if !inlist(scdrspi,-9,-8, -3, -2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrwin if !inlist(scdrwin,-9,-8, -3, -2,-1)
replace r`wavenum'drinkwn_e = r`wavenum'drinkwn_e + scdrpin if !inlist(scdrpin,-9,-8, -3, -2,-1)
label variable r`wavenum'drinkwn_e "r`wavenum'drinkwn_e:w`wavenum' R # drinks/week"
replace r`wavenum'drinkwn_e=round(r`wavenum'drinkwn_e)

*wave 8 spouse drinks per week
gen s`wavenum'drinkwn_e =.
spouse r`wavenum'drinkwn_e, result(s`wavenum'drinkwn_e) wave(`wavenum')
label variable s`wavenum'drinkwn_e "s`wavenum'drinkwn_e:w`wavenum' S # drinks/week"

*label values
*label values r`wavenum'drinkwn_e drinks_flag
*label values s`wavenum'drinkwn_e drinks_flag

*check 

***Ever smoked cigarettes***
*wave 8 respondent ever smoked cigarettes
local smokever
gen r`wavenum'smokev =.
missing_w`wavenum' hesmk heske, result(r`wavenum'smokev)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'smokev = r`w'smokev if inlist(r`w'smokev,0,1) & inw`wavenum'==1
	local smokever `smokever' r`w'smokev
}
replace r`wavenum'smokev = 0 if hesmk == 2 | heske == 1
replace r`wavenum'smokev = 1 if hesmk == 1 | inlist(heske,2,3)
label variable r`wavenum'smokev "r`wavenum'smokev:w`wavenum' R smoke ever"

*wave 8 spouse ever smoked cigarettes
gen s`wavenum'smokev =.
spouse r`wavenum'smokev, result(s`wavenum'smokev) wave(`wavenum')
label variable s`wavenum'smokev "s`wavenum'smokev:w`wavenum' S smoke ever"

*previous waves ever smoked if disputed
forvalues w = 1/`pre_wavenum' {
	replace r`w'smokev=0 if heske==1 & r`w'smokev==1
}

*label values
label values r`wavenum'smokev smokes
label values s`wavenum'smokev smokes

*check 

***Smokes cigarettes now***
*wave 8 respondent smokes cigarettes now
gen r`wavenum'smoken =.
missing_w`wavenum' hesmk heska, result(r`wavenum'smoken)
replace r`wavenum'smoken = 0 if hesmk == 2 | heska == 2
replace r`wavenum'smoken = 1 if heska == 1
label variable r`wavenum'smoken "r`wavenum'smoken:w`wavenum' R smokes now"

*wave 8 spouse smokes cigarettes now
gen s`wavenum'smoken =.
spouse r`wavenum'smoken, result(s`wavenum'smoken) wave(`wavenum')
label variable s`wavenum'smoken "s`wavenum'smoken:w`wavenum' S smokes now"

*previous waves smokes now if disputed
tempvar stop
gen `stop'=.
forvalues w = `pre_wavenum' (-1) 1 {
	replace `stop'=1 if heske==2 & r`w'smoken==1 & mi(`stop')
	replace r`w'smoken=0 if heske==2 & r`w'smoken==1 & `stop'!=2
	replace `stop'=2 if r`w'smoken==0 & `stop'==1
}

forvalues w = 1/`pre_wavenum' {
	replace r`w'smoken=0 if heske==1 & r`w'smoken==1
}

*label values
label values r`wavenum'smoken smokes
label values s`wavenum'smoken smokes

*check 


**Smoking frequency ****
*wave 8 respondent smoking frequency
gen r`wavenum'smokef = .
missing_w`wavenum' hesmk heska heskc heskb hecig , result(r`wavenum'smokef)
replace r`wavenum'smokef = 0  if r`wavenum'smoken == 0
replace r`wavenum'smokef = 0  if hecig ==2
replace r`wavenum'smokef = (heskb*5 + heskc*2)/7 if !inlist(heskb,-1,-8,-9) & !inlist(heskc,-1,-8,-9) 

label var r`wavenum'smokef "r`wavenum'smokef:w`wavenum' R # cigarettes/day"

*wave 8 spouse smoking frequency
gen s`wavenum'smokef = .
spouse r`wavenum'smokef, result(s`wavenum'smokef) wave(`wavenum')
label var s`wavenum'smokef "s`wavenum'smokef:w`wavenum' S # cigarettes/day"


***Weight in kilograms***
*wave 8 respondent weight in kilograms - available in wave 8 core data
gen r`wavenum'weight =.
replace r`wavenum'weight = .m if missing(r`wavenum'weight) & inw`wavenum'==1
replace r`wavenum'weight = .p if askpx == 1
replace r`wavenum'weight = .r if inlist(respwts, -9, 2)
replace r`wavenum'weight = .e if respwts == -4
replace r`wavenum'weight = .o if respwts == 3
replace r`wavenum'weight = .a if respwts == 4
replace r`wavenum'weight = estwt if !inlist(estwt,.,-1)
label variable r`wavenum'weight "r`wavenum'weight:w`wavenum' r Weight in kilograms"

*wave 8 spouse weight in kilograms
gen s`wavenum'weight =.
spouse r`wavenum'weight, result(s`wavenum'weight) wave(`wavenum')
label variable s`wavenum'weight "s`wavenum'weight:w`wavenum' s Weight in kilograms"

***Height in meters***
*wave 8 respondent height in meters - height is not available in wave 8, so we can bring it from wave 6, 4 and 2.
gen r`wavenum'height =.
replace r`wavenum'height = .m if missing(r`wavenum'height) & inw`wavenum'==1
replace r`wavenum'height = r`pre_pre_wavenum'height if inw`pre_pre_wavenum'==1 & inw`wavenum'==1
replace r`wavenum'height = r`pre4_wavenum'height if missing(r`wavenum'height) & inw`pre4_wavenum'==1 & inw`wavenum'==1
replace r`wavenum'height = r`pre6_wavenum'height if missing(r`wavenum'height) & inw`pre6_wavenum'==1 & inw`wavenum'==1
replace r`wavenum'height = .s if missing(r`wavenum'height) & inw8==1 & inlist(inw7,0,1) & inw6==0 & inw5==0 & inw4==0 & inw3==0 & inw2==0 & inw1==0 //people who have ben added to the sample in wave 7 and 8
label variable r`wavenum'height "r`wavenum'height:w`wavenum' r Height in meters"

*wave 8 spouse height in meters
gen s`wavenum'height =.
spouse r`wavenum'height, result(s`wavenum'height) wave(`wavenum')
label variable s`wavenum'height "s`wavenum'height:w`wavenum' s Height in meters"

*check

***BMI***
*wave 8 respondent BMI
gen r`wavenum'bmi =.
replace r`wavenum'bmi = .m if r`wavenum'weight == .m | r`wavenum'height == .m 
replace r`wavenum'bmi = .n if r`wavenum'height == .n
replace r`wavenum'bmi = .s if r`wavenum'height == .s
replace r`wavenum'bmi = .p if r`wavenum'weight == .p
replace r`wavenum'bmi = .b if r`wavenum'weight == .b | r`wavenum'height == .b
replace r`wavenum'bmi = .r if r`wavenum'weight == .r | r`wavenum'height == .r
replace r`wavenum'bmi = .o if r`wavenum'weight == .o | r`wavenum'height == .o
replace r`wavenum'bmi = .a if r`wavenum'weight == .a | r`wavenum'height == .a
replace r`wavenum'bmi = .e if r`wavenum'weight == .e
replace r`wavenum'bmi = r`wavenum'weight/(r`wavenum'height * r`wavenum'height) if !inlist(r`wavenum'height,.a, .b, .m, .n, .o, .r, .s) & !inlist(r`wavenum'weight,.a, .b, .m, .n, .o, .r, .s, .p, .e)
label variable r`wavenum'bmi "r`wavenum'bmi:w`wavenum' r Body Mass Index=kg/m2"

*wave 8 spouse BMI
gen s`wavenum'bmi =.
spouse r`wavenum'bmi, result(s`wavenum'bmi) wave(`wavenum')
label variable s`wavenum'bmi "s`wavenum'bmi:w`wavenum' s Body Mass Index=kg/m2"

*check

***BMI Categories***
*wave 8 respondent BMI categories
gen r`wavenum'bmicat = .
replace r`wavenum'bmicat = .n if r`wavenum'height == .n
replace r`wavenum'bmicat = .m if r`wavenum'weight == .m | r`wavenum'height == .m 
replace r`wavenum'bmicat = .s if r`wavenum'height == .s
replace r`wavenum'bmicat = .p if r`wavenum'weight == .p
replace r`wavenum'bmicat = .b if r`wavenum'weight == .b | r`wavenum'height == .b
replace r`wavenum'bmicat = .r if r`wavenum'weight == .r | r`wavenum'height == .r
replace r`wavenum'bmicat = .o if r`wavenum'weight == .o | r`wavenum'height == .o
replace r`wavenum'bmicat = .a if r`wavenum'weight == .a | r`wavenum'height == .a
replace r`wavenum'bmicat = .e if r`wavenum'weight == .e
replace r`wavenum'bmicat = 1 if inrange(r`wavenum'bmi,1,18.49999)
replace r`wavenum'bmicat = 2 if inrange(r`wavenum'bmi,18.50,24.99999)
replace r`wavenum'bmicat = 3 if inrange(r`wavenum'bmi,25,29.99999)
replace r`wavenum'bmicat = 4 if inrange(r`wavenum'bmi,30,34.99999)
replace r`wavenum'bmicat = 5 if inrange(r`wavenum'bmi,35,39.99999)
replace r`wavenum'bmicat = 6 if inrange(r`wavenum'bmi,40,100)
label variable r`wavenum'bmicat "r`wavenum'bmicat:w`wavenum' r BMI categorization"
label values r`wavenum'bmicat bmicate

*wave 8 spouse BMI categories
gen s`wavenum'bmicat = .
spouse r`wavenum'bmicat, result(s`wavenum'bmicat) wave(`wavenum')
label variable s`wavenum'bmicat "s`wavenum'bmicat:w`wavenum' s BMI categorization"
label values s`wavenum'bmicat bmicate


***drop ELSA wave specific core file raw variables***
drop `health_w`wavenum'_core'



*set top wave number
local maxwave=8
local sp_maxwave=8
local pre_maxwave=`maxwave'-1


***Ever had high blood pressure***
*wave spouse ever had high blood pressure
forvalues w=1/`sp_maxwave' {
	gen s`w'hibpe =.
	spouse r`w'hibpe, result(s`w'hibpe) wave(`w')
	label variable s`w'hibpe "s`w'hibpe:w`w' s ever had high blood pressure"
	label values s`w'hibpe health_problems
}

*wave spouse high blood pressure dispute flag
forvalues w=1/`sp_maxwave' {
	gen s`w'hibpf =.
	spouse r`w'hibpf, result(s`w'hibpf) wave(`w')
	label variable s`w'hibpf "s`w'hibpf:w`w' s flag dispute chg high blood pressure"
	label values s`w'hibpf health_problems_flag
}

***Ever had diabetes***
*wave spouse ever had diabetes
forvalues w=1/`sp_maxwave' {
	gen s`w'diabe =.
	spouse r`w'diabe, result(s`w'diabe) wave(`w')
	label variable s`w'diabe "s`w'diabe:w`w' s ever had diabetes"
	label values s`w'diabe health_problems
}

*wave spouse diabetes dispute flag
forvalues w=1/`sp_maxwave' {
	gen s`w'diabf =.
	spouse r`w'diabf, result(s`w'diabf) wave(`w')
	label variable s`w'diabf "s`w'diabf:w`w' s flag dispute chg diabetes"
	label values s`w'diabf health_problems_flag
}

***Ever had cancer***
*wave spouse ever had cancer
forvalues w=1/`sp_maxwave' {
	gen s`w'cancre =.
	spouse r`w'cancre, result(s`w'cancre) wave(`w')
	label variable s`w'cancre "s`w'cancre:w`w' s ever had cancer"
	label values s`w'cancre health_problems
}

*wave spouse cancer dispute flag
forvalues w=1/`sp_maxwave' {
	gen s`w'cancrf =.
	spouse r`w'cancrf, result(s`w'cancrf) wave(`w')
	label variable s`w'cancrf "s`w'cancrf:w`w' s flag dispute chg cancer"
	label values s`w'cancrf health_problems_flag
}

***Ever had lung disease***
*wave spouse ever had lung disease
forvalues w=1/`sp_maxwave' {
	gen s`w'lunge =.
	spouse r`w'lunge, result(s`w'lunge) wave(`w')
	label variable s`w'lunge "s`w'lunge:w`w' s ever had lung disease"
	label values s`w'lunge health_problems
}

*wave spouse lung disease dispute flag
forvalues w=1/`sp_maxwave' {
	gen s`w'lungf =.
	spouse r`w'lungf, result(s`w'lungf) wave(`w')
	label variable s`w'lungf "s`w'lungf:w`w' s flag dispute chg lung disease"
	label values s`w'lungf health_problems_flag
}

***Ever had heart problems***
*wave spouse ever had heart problems
forvalues w=1/`sp_maxwave' {
	gen s`w'hearte =.
	spouse r`w'hearte, result(s`w'hearte) wave(`w')
	label variable s`w'hearte "s`w'hearte:w`w' s ever had heart problems"
	label values s`w'hearte health_problems
}

*wave spouse heart problems dispute flag
forvalues w=1/`sp_maxwave' {
	gen s`w'heartf =.
	spouse r`w'heartf, result(s`w'heartf) wave(`w')
	label variable s`w'heartf "s`w'heartf:w`w' s flag dispute chg heart problems"
	label values s`w'heartf health_problems_flag
}

***Ever had stroke***
*wave spouse ever had stroke
forvalues w=1/`sp_maxwave' {
	gen s`w'stroke =.
	spouse r`w'stroke, result(s`w'stroke) wave(`w')
	label variable s`w'stroke "s`w'stroke:w`w' s ever had stroke"
	label values s`w'stroke health_problems
}

*wave spouse stroke dispute flag
forvalues w=1/`sp_maxwave' {
	gen s`w'strokf =.
	spouse r`w'strokf, result(s`w'strokf) wave(`w')
	label variable s`w'strokf "s`w'strokf:w`w' s flag dispute chg stroke"
	label values s`w'strokf health_problems_flag
}

***Ever had psych problems***
*wave spouse ever had psych problems
forvalues w=1/`sp_maxwave' {
	gen s`w'psyche =.
	spouse r`w'psyche, result(s`w'psyche) wave(`w')
	label variable s`w'psyche "s`w'psyche:w`w' s ever had psych problems"
	label values s`w'psyche health_problems
}

*wave spouse psych problems dispute flag
forvalues w=1/`sp_maxwave' {
	gen s`w'psychf =.
	spouse r`w'psychf, result(s`w'psychf) wave(`w')
	label variable s`w'psychf "s`w'psychf:w`w' s flag dispute chg psych problems"
	label values s`w'psychf health_problems_flag
}

***Ever had arthritis***
*wave spouse ever had arthritis
forvalues w=1/`sp_maxwave' {
	gen s`w'arthre =.
	spouse r`w'arthre, result(s`w'arthre) wave(`w')
	label variable s`w'arthre "s`w'arthre:w`w' s ever had arthritis"
	label values s`w'arthre health_problems
}

*wave spouse arthritis dispute flag
forvalues w=1/`sp_maxwave' {
	gen s`w'arthrf =.
	spouse r`w'arthrf, result(s`w'arthrf) wave(`w')
	label variable s`w'arthrf "s`w'arthrf:w`w' s flag dispute chg arthritis"
	label values s`w'arthrf health_problems_flag
}

***Ever had memory-related problems***
*wave spouse ever had memory-related problems
forvalues w=1/`sp_maxwave' {
	gen s`w'memrye =.
	spouse r`w'memrye, result(s`w'memrye) wave(`w')
	label variable s`w'memrye "s`w'memrye:w`w' s ever had memory problem"
	label values s`w'memrye health_problems
}

*wave spouse ever had memory-related problems
forvalues w=1/`sp_maxwave' {
	gen s`w'memryf =.
	spouse r`w'memryf, result(s`w'memryf) wave(`w')
	label variable s`w'memryf "s`w'memryf:w`w' s flag chg previous memory prob"
	label values s`w'memryf health_problems_flag
}


***Ever had asthma***
*wave spouse ever had asthma problems
forvalues w=1/`sp_maxwave' {
	gen s`w'asthmae =.
	spouse r`w'asthmae, result(s`w'asthmae) wave(`w')
	label variable s`w'asthmae "s`w'asthmae:w`w' s ever had asthma"
	label values s`w'asthmae health_problems
}

*wave spouse ever had memory-related problems
forvalues w=1/`sp_maxwave' {
	gen s`w'asthmaf =.
	spouse r`w'asthmaf, result(s`w'asthmaf) wave(`w')
	label variable s`w'asthmaf "s`w'asthmaf:w`w' s flag chg previous asthma"
	label values s`w'asthmaf health_problems_flag
}

***Ever had high cholesterol***
*wave spouse ever had high cholesterol
forvalues w=2/`sp_maxwave' {
	gen s`w'hchole =.
	spouse r`w'hchole, result(s`w'hchole) wave(`w')
	label variable s`w'hchole "s`w'hchole:w`w' s ever had high cholesterol"
	label values s`w'hchole health_problems
}

*wave spouse ever had high cholesterol
forvalues w=2/`sp_maxwave' {
	gen s`w'hcholf =.
	spouse r`w'hcholf, result(s`w'hcholf) wave(`w')
	label variable s`w'hcholf "s`w'hcholf:w`w' s flag chg previous high cholesterol"
	label values s`w'hcholf health_problems_flag
}

***Ever had cataracts***
*wave spouse ever had cataracts
forvalues w=1/`sp_maxwave' {
	gen s`w'catrcte =.
	spouse r`w'catrcte, result(s`w'catrcte) wave(`w')
	label variable s`w'catrcte "s`w'catrcte:w`w' s ever had cataracts"
	label values s`w'catrcte health_problems
}

*wave spouse ever had cataracts
forvalues w=1/`sp_maxwave' {
	gen s`w'catrctf =.
	spouse r`w'catrctf, result(s`w'catrctf) wave(`w')
	label variable s`w'catrctf "s`w'catrctf:w`w' s flag chg previous cataracts"
	label values s`w'catrctf health_problems_flag
}

***Ever had parkinsons***
*wave spouse ever had parkinsons
forvalues w=1/`sp_maxwave' {
	gen s`w'parkine =.
	spouse r`w'parkine, result(s`w'parkine) wave(`w')
	label variable s`w'parkine "s`w'parkine:w`w' s ever had parkinson disease"
	label values s`w'parkine health_problems
}

*wave spouse ever had parkinsons
forvalues w=1/`sp_maxwave' {
	gen s`w'parkinf =.
	spouse r`w'parkinf, result(s`w'parkinf) wave(`w')
	label variable s`w'parkinf "s`w'parkinf:w`w' s flag chg previous parkinson disease"
	label values s`w'parkinf health_problems_flag
}

***Ever had alzheimer's***
*wave spouse ever had alzheimers
forvalues w=1/`sp_maxwave' {
	gen s`w'alzhe =.
	spouse r`w'alzhe, result(s`w'alzhe) wave(`w')
	label variable s`w'alzhe "s`w'alzhe:w`w' s ever had alzheimer's"
	label values s`w'alzhe health_problems
}

*wave spouse ever had alzheimers
forvalues w=1/`sp_maxwave' {
	gen s`w'alzhf =.
	spouse r`w'alzhf, result(s`w'alzhf) wave(`w')
	label variable s`w'alzhf "s`w'alzhf:w`w' s flag chg previous alzheimer's"
	label values s`w'alzhf health_problems_flag
}

***Ever had dementia***
*wave spouse ever had dementia
forvalues w=1/`sp_maxwave' {
	gen s`w'demene =.
	spouse r`w'demene, result(s`w'demene) wave(`w')
	label variable s`w'demene "s`w'demene:w`w' s ever had dementia"
	label values s`w'demene health_problems
}

*wave spouse ever had dementia
forvalues w=1/`sp_maxwave' {
	gen s`w'demenf =.
	spouse r`w'demenf, result(s`w'demenf) wave(`w')
	label variable s`w'demenf "s`w'demenf:w`w' s flag chg previous dementia"
	label values s`w'demenf health_problems_flag
}

***Change in self-reported health***
*wave respondent change in self-reported health & flag
foreach w of numlist 2 4/`maxwave' {
	gen preload =.
	if `w'==2 {
		replace preload = r1shlt if !missing(r1shlt)
	}
	if `w'==4 {
		replace preload = r2shlt if !missing(r1shlt) & mi(preload)
		replace preload = r1shlt if !missing(r1shlt) & mi(preload)
	}
	if `w'>4 {
		local pw=`w'-1
		forvalues pw_ = `pw' (-1) 4 {
			replace preload = r`pw_'shlt if !missing(r`pw_'shlt) & mi(preload)
		}
		replace preload = r2shlt if !missing(r1shlt) & mi(preload)
		replace preload = r1shlt if !missing(r1shlt) & mi(preload)
	}
	
	gen r`w'shltc =.
	missing_H r`w'shlt, result(r`w'shltc)
	replace r`w'shltc = .p if r`w'shlt == .p
	replace r`w'shltc = .c if mi(preload) & inw`w' == 1
	replace r`w'shltc = r`w'shlt - preload if !mi(r`w'shlt) & !mi(preload)
	label variable r`w'shltc "r`w'shltc:w`w' r Change in self-reported hlth"
	
	gen r`w'shltcf =.
	if `w'==2 {
		replace r`w'shltcf = 9 if (mi(preload) | inlist(r`w'shlt,.p,.m,.d,.r) | r`w'shltc==.c) & inw`w' == 1
		replace r`w'shltcf = 0 if preload==r1shlt & !missing(r1shlt) & !mi(r`w'shltc)
	}
	if `w'==4 {
	    replace r`w'shltcf = 9 if (mi(preload) | inlist(r`w'shlt,.p,.m,.d,.r) | r`w'shltc==.c) & inw`w' == 1
		replace r`w'shltcf = 1 if preload==r2shlt & !missing(r2shlt) & !mi(r`w'shltc) & mi(r`w'shltcf)
		replace r`w'shltcf = 0 if preload==r1shlt & !missing(r1shlt) & !mi(r`w'shltc) & mi(r`w'shltcf)
	}
	if `w'>4 {
		replace r`w'shltcf = 9 if (mi(preload) | inlist(r`w'shlt,.p,.m,.d,.r) | r`w'shltc==.c) & inw`w' == 1
		local pw=`w'-1
		forvalues pw_ = `pw' (-2) 4 {
			local flag=`pw_'-1
			replace r`w'shltcf = `flag' if preload==r`pw_'shlt & !missing(r`pw_'shlt)  & !mi(r`w'shltc) & mi(r`w'shltcf)
			replace r`w'shltcf = preload if !mi(preload) & mi(r`w'shltcf) & inw`w'==1
		}
		replace r`w'shltcf = 0 if preload==r1shlt & !missing(r1shlt) & !mi(r`w'shltc) & mi(r`w'shltcf)
	}
	label variable r`w'shltcf "r`w'shltcf:w`w' r Flag chg self-reported hlth"
	label values r`w'shltcf change_flag

	
	
	drop preload
}

*wave spouse change in self-reported
foreach w of numlist 2 4/`sp_maxwave' {
	gen s`w'shltc =.
	spouse r`w'shltc, result(s`w'shltc) wave(`w')
	label variable s`w'shltc "s`w'shltc:w`w' s Change in self-reported hlth"
}

*wave spouse flag change in self-reported health
foreach w of numlist 2 4/`sp_maxwave' {
	gen s`w'shltcf =.
	spouse r`w'shltcf, result(s`w'shltcf) wave(`w')
	label variable s`w'shltcf "s`w'shltcf:w`w' s Flag chg self-reported hlth"
	label values s`w'shltcf change_flag
}

***Change in self-reported health, European scale***
*wave respondent change in self-reported health & flag
foreach w of numlist 3 {
	gen preload =.
	if `w'==3 {
		replace preload = r1shlta if !missing(r1shlta)
	}
	if `w'>3 {
		local pw=`w'-2
		forvalues pw_ = `pw' (-2) 2 {
			replace preload = r`pw_'shlta if !missing(r`pw_'shlta) & mi(preload)
		}
		replace preload = r1shlta if !missing(r1shlta) & mi(preload)
	}
	
	gen r`w'shltac =.
	missing_H r`w'shlta, result(r`w'shltac)
	replace r`w'shltac = .p if r`w'shlta == .p
	replace r`w'shltac = .c if mi(preload) & inw`w' == 1
	replace r`w'shltac = r`w'shlta - preload if !mi(r`w'shlta) & !mi(preload)
	label variable r`w'shltac "r`w'shltac:w`w' r Change in self-reported hlth, European scale"
	
	gen r`w'shltacf =.
	if `w'==3 {
		replace r`w'shltacf = 9 if (mi(preload) | inlist(r`w'shlta,.p,.m,.d,.r) | r`w'shltac==.c) & inw`w' == 1
		replace r`w'shltacf = 0 if preload==r1shlta & !missing(r1shlta) & !mi(r`w'shltac)
	}
	if `w'>3 {
		replace r`w'shltacf = 9 if (mi(preload) | inlist(r`w'shlta,.p,.m,.d,.r) | r`w'shltac==.c) & inw`w' == 1
		local pw=`w'-2
		forvalues pw_ = `pw' (-2) 2 {
			local flag=`pw_'-1
			replace r`w'shltacf = `flag' if preload==r`pw_'shlta & !missing(r`pw_'shlta) ///
																			& !mi(r`w'shltac) & mi(r`w'shltacf)
		}
		replace r`w'shltacf = 0 if preload==r1shlta & !missing(r1shlta) & !mi(r`w'shltac) ///
															 & mi(r`w'shltacf)
	}
	label variable r`w'shltacf "r`w'shltacf:w`w' r Flag chg self-reported hlth, European scale"
	label values r`w'shltacf change_flag
	
	
	drop preload
}

*wave spouse change in self-reported
foreach w of numlist 3 {
	gen s`w'shltac =.
	spouse r`w'shltac, result(s`w'shltac) wave(`w')
	label variable s`w'shltac "s`w'shltac:w`w' s Change in self-reported hlth, European scale"
}

*wave spouse flag change in self-reported health
foreach w of numlist 3  {
	gen s`w'shltacf =.
	spouse r`w'shltacf, result(s`w'shltacf) wave(`w')
	label variable s`w'shltacf "s`w'shltacf:w`w' s Flag chg self-reported hlth, European scale"
	label values s`w'shltacf change_flag
}

***Change in ADLs***
*wave respondent change in ADLs & flag
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'adla if !missing(r`pw_'adla) & mi(preload)
	}
	
	gen r`w'adlc =.
	missing_H r`w'adla, result(r`w'adlc)
	replace r`w'adlc = .c if mi(preload) & inw`w' == 1
	replace r`w'adlc = r`w'adla - preload if !mi(r`w'adla) & !mi(preload)
	label variable r`w'adlc "r`w'adlc:w`w' r Change-ADLs /0-5"
	
	gen r`w'adlf =.
	replace r`w'adlf = 9 if (mi(preload) | inlist(r`w'adla,.p,.m,.d,.r) | r`w'adlc==.c) & inw`w' == 1
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		local flag=`pw_'-1
		replace r`w'adlf = `flag' if preload==r`pw_'adla & !missing(r`pw_'adla) ///
																 & !mi(r`w'adlc) & mi(r`w'adlf)
	}
	label variable r`w'adlf "r`w'adlf:w`w' r Chg Flag-ADLs /0-5"
	label values r`w'adlf change_flag
	
	
	drop preload
}


*wave spouse change in ADLs
forvalues w = 2/`sp_maxwave' {
	gen s`w'adlc =.
	spouse r`w'adlc, result(s`w'adlc) wave(`w')
	label variable s`w'adlc "s`w'adlc:w`w' s Change-ADLs /0-5"
}

*wave spouse flag change in ADLs
forvalues w = 2/`sp_maxwave' {
	gen s`w'adlf =.
	spouse r`w'adlf, result(s`w'adlf) wave(`w')
	label variable s`w'adlf "s`w'adlf:w`w' s Chg Flag-ADLs /0-5"
	label values s`w'adlf change_flag
}

***Change in gross motor summary***
*wave respondent change in gross motor summary and flag
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'grossa if !missing(r`pw_'grossa) & mi(preload)
	}
	
	gen r`w'grossc =.
	missing_H r`w'grossa, result(r`w'grossc) 
	replace r`w'grossc = .c if mi(preload) & inw`w' == 1
	replace r`w'grossc = r`w'grossa - preload if !mi(r`w'grossa) & !mi(preload)
	label variable r`w'grossc "r`w'grossc:w`w' r Chg:Walk1/R,Clim1,Bed,Bath/5"
	
	gen r`w'grossf =.
	replace r`w'grossf = 9 if (mi(preload) | inlist(r`w'grossa,.p,.m,.d,.r) | r`w'grossc==.c) & inw`w' == 1
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		local flag=`pw_'-1
		replace r`w'grossf = `flag' if preload==r`pw_'grossa & !missing(r`pw_'grossa) ///
																 & !mi(r`w'grossc) & mi(r`w'grossf)
	}
	label variable r`w'grossf "r`w'grossf:w`w' r ChgF:Walk1/R,Clim1,Bed,Bath /0-5"
	label values r`w'grossf change_flag
	
	
	drop preload
}

*wave spouse change in gross motor summary
forvalues w = 2/`sp_maxwave' {
	gen s`w'grossc =.
	spouse r`w'grossc, result(s`w'grossc) wave(`w')
	label variable s`w'grossc "s`w'grossc:w`w' s Chg:Walk1/R,Clim1,Bed,Bath/5"
}

*wave spouse flag change in gross motor summary
forvalues w = 2/`sp_maxwave' {
	gen s`w'grossf =.
	spouse r`w'grossf, result(s`w'grossf) wave(`w')
	label variable s`w'grossf "s`w'grossf:w`w' s ChgF:Walk1/R,Clim1,Bed,Bath /0-5"
	label values s`w'grossf change_flag
}

***Change in fine motor summary***
*wave respondent change in fine motor summary and flag
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'finea if !missing(r`pw_'finea) & mi(preload)
	}
	
	gen r`w'finec =.
	missing_H r`w'finea, result(r`w'finec)
	replace r`w'finec = .c if mi(preload) & inw`w' == 1
	replace r`w'finec = r`w'finea - preload if !mi(r`w'finea) & !mi(preload)
	label variable r`w'finec "r`w'finec:w`w' r Chg:Dime,Eat,Dress /0-3"
	
	gen r`w'finef =.
	replace r`w'finef = 9 if (mi(preload) | inlist(r`w'finea,.p,.m,.d,.r) | r`w'finec==.c) & inw`w' == 1
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		local flag=`pw_'-1
		replace r`w'finef = `flag' if preload==r`pw_'finea & !missing(r`pw_'finea) ///
																 & !mi(r`w'finec) & mi(r`w'finef)
	}
	label variable r`w'finef "r`w'finef:w`w' r ChgF:Dime,Eat,Dress /0-3"
	label values r`w'finef change_flag
	
	
	drop preload
}

*wave spouse change in fine motor summary
forvalues w = 2/`sp_maxwave' {
	gen s`w'finec =.
	spouse r`w'finec, result(s`w'finec) wave(`w')
	label variable s`w'finec "s`w'finec:w`w' s Chg:Dime,Eat,Dress /0-3"
}

*wave spouse flag change in fine motor summary
forvalues w = 2/`sp_maxwave' {
	gen s`w'finef =.
	spouse r`w'finef, result(s`w'finef) wave(`w')
	label variable s`w'finef "s`w'finef:w`w' s ChgF:Dime,Eat,Dress /0-3"
	label values s`w'finef change_flag
}

***Had high blood pressure since last interview***
*wave respondent had high blood pressure since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'hibpe if preload==.
	}
	
	gen r`w'hibps =.
	missing_H r`w'hibpe preload if r`w'hibpe!=., result(r`w'hibps)
	replace r`w'hibps = .c if !missing(r`w'hibpe) & preload ==.
	replace r`w'hibps = 0 if !missing(r`w'hibpe) & !missing(preload)
	replace r`w'hibps = 1 if preload == 0 & r`w'hibpe == 1
	label variable r`w'hibps "r`w'hibps:w`w' R had hi BP since last IW"
	label values r`w'hibps cond_since_p
	
	
	drop preload
}

*wave spouse had high blood pressure since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'hibps =.
	spouse r`w'hibps, result(s`w'hibps) wave(`w')
	label variable s`w'hibps "s`w'hibps:w`w' S had hi BP since last IW"
	label values s`w'hibps cond_since_p
}

***Had diabetes since last interview***
*wave respondent had diabetes since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'diabe if preload==.
	}
	
	gen r`w'diabs =.
	missing_H r`w'diabe preload if r`w'diabe!=., result(r`w'diabs)
	replace r`w'diabs = .c if !missing(r`w'diabe) & preload ==.
	replace r`w'diabs = 0 if !missing(r`w'diabe) & !missing(preload)
	replace r`w'diabs = 1 if preload == 0 & r`w'diabe == 1
	label variable r`w'diabs "r`w'diabs:w`w' R had diabetes since last IW"
	label values r`w'diabs cond_since_p
	
	
	drop preload
}

*wave spouse had diabetes since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'diabs =.
	spouse r`w'diabs, result(s`w'diabs) wave(`w')
	label variable s`w'diabs "s`w'diabs:w`w' S had diabetes since last IW"
	label values s`w'diabs cond_since_p
}

***Had cancer since last interview***
*wave respondent had cancer since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'cancre if preload==.
	}
	
	gen r`w'cancrs =.
	missing_H r`w'cancre preload if r`w'cancre!=., result(r`w'cancrs)
	replace r`w'cancrs = .c if !missing(r`w'cancre) & preload ==.
	replace r`w'cancrs = 0 if !missing(r`w'cancre) & !missing(preload)
	replace r`w'cancrs = 1 if preload == 0 & r`w'cancre == 1
	label variable r`w'cancrs "r`w'cancrs:w`w' R had cancer since last IW"
	label values r`w'cancrs cond_since_p
	
	
	drop preload
}

*wave spouse had cancer since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'cancrs =.
	spouse r`w'cancrs, result(s`w'cancrs) wave(`w')
	label variable s`w'cancrs "s`w'cancrs:w`w' S had cancer since last IW"
	label values s`w'cancrs cond_since_p
}

***Had lung disease since last interview***
*wave respondent had lung disease since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'lunge if preload==.
	}
	
	gen r`w'lungs =.
	missing_H r`w'lunge preload if r`w'lunge!=., result(r`w'lungs)
	replace r`w'lungs = .c if !missing(r`w'lunge) & preload ==.
	replace r`w'lungs = 0 if !missing(r`w'lunge) & !missing(preload)
	replace r`w'lungs = 1 if preload == 0 & r`w'lunge == 1
	label variable r`w'lungs "r`w'lungs:w`w' R had lung dis since last IW"
	label values r`w'lungs cond_since_p
	
	
	drop preload
}

*wave spouse had lung disease since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'lungs =.
	spouse r`w'lungs, result(s`w'lungs) wave(`w')
	label variable s`w'lungs "s`w'lungs:w`w' S had lung dis since last IW"
	label values s`w'lungs cond_since_p
}

***Had heart problem since last interview***
*wave respondent had heart problem since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'hearte if preload==.
	}
	
	gen r`w'hearts =.
	missing_H r`w'hearte preload if r`w'hearte!=., result(r`w'hearts)
	replace r`w'hearts = .c if !missing(r`w'hearte) & preload ==.
	replace r`w'hearts = 0 if !missing(r`w'hearte) & !missing(preload)
	replace r`w'hearts = 1 if preload == 0 & r`w'hearte == 1
	label variable r`w'hearts "r`w'hearts:w`w' R had heart prob since last IW"
	label values r`w'hearts cond_since_p
	
	
	drop preload
}

*wave spouse had heart problem since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'hearts =.
	spouse r`w'hearts, result(s`w'hearts) wave(`w')
	label variable s`w'hearts "s`w'hearts:w`w' S had heart prob since last IW"
	label values s`w'hearts cond_since_p
}

***Had stroke since last interview***
*wave respondent had stroke since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'stroke if preload==.
	}
	
	gen r`w'stroks =.
	missing_H r`w'stroke preload if r`w'stroke!=., result(r`w'stroks)
	replace r`w'stroks = .c if !missing(r`w'stroke) & preload ==.
	replace r`w'stroks = 0 if !missing(r`w'stroke) & !missing(preload)
	replace r`w'stroks = 1 if preload == 0 & r`w'stroke == 1
	label variable r`w'stroks "r`w'stroks:w`w' R had stroke since last IW"
	label values r`w'stroks cond_since_p
	
	
	drop preload
}

*wave spouse had stroke since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'stroks =.
	spouse r`w'stroks, result(s`w'stroks) wave(`w')
	label variable s`w'stroks "s`w'stroks:w`w' S had stroke since last IW"
	label values s`w'stroks cond_since_p
}

***Had psych prob since last interview***
*wave respondent had psych prob since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'psyche if preload==.
	}
	
	gen r`w'psychs =.
	missing_H r`w'psyche preload if r`w'psyche!=., result(r`w'psychs)
	replace r`w'psychs = .c if !missing(r`w'psyche) & preload ==.
	replace r`w'psychs = 0 if !missing(r`w'psyche) & !missing(preload)
	replace r`w'psychs = 1 if preload == 0 & r`w'psyche == 1
	label variable r`w'psychs "r`w'psychs:w`w' R had psych prob since last IW"
	label values r`w'psychs cond_since_p
	
	
	drop preload
}

*wave spouse had psych prob since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'psychs =.
	spouse r`w'psychs, result(s`w'psychs) wave(`w')
	label variable s`w'psychs "s`w'psychs:w`w' S had psych prob since last IW"
	label values s`w'psychs cond_since_p
}

***Had arthritis since last interview***
*wave 2 respondent had arthritis since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'arthre if preload==.
	}
	
	gen r`w'arthrs =.
	missing_H r`w'arthre preload if r`w'arthre!=., result(r`w'arthrs)
	replace r`w'arthrs = .c if !missing(r`w'arthre) & preload ==.
	replace r`w'arthrs = 0 if !missing(r`w'arthre) & !missing(preload)
	replace r`w'arthrs = 1 if preload == 0 & r`w'arthre == 1
	label variable r`w'arthrs "r`w'arthrs:w`w' R had arthritis since last IW"
	label values r`w'arthrs cond_since_p
	
	
	drop preload
}

*wave spouse had arthritis since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'arthrs =.
	spouse r`w'arthrs, result(s`w'arthrs) wave(`w')
	label variable s`w'arthrs "s`w'arthrs:w`w' S had arthritis since last IW"
	label values s`w'arthrs cond_since_p
}

***Had memory prob since last interview***
*wave respondent had memory prob since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'memrye if preload==.
	}
	
	gen r`w'memrys =.
	missing_H r`w'memrye preload if r`w'memrye!=., result(r`w'memrys)
	replace r`w'memrys = .c if !missing(r`w'memrye) & preload ==.
	replace r`w'memrys = 0 if !missing(r`w'memrye) & !missing(preload)
	replace r`w'memrys = 1 if preload == 0 & r`w'memrye == 1
	label variable r`w'memrys "r`w'memrys:w`w' R had memory prob since last IW"
	label values r`w'memrys cond_since_p
	
	
	drop preload
}

*wave spouse had memory prob since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'memrys =.
	spouse r`w'memrys, result(s`w'memrys) wave(`w')
	label variable s`w'memrys "s`w'memrys:w`w' S had memory prob since last IW"
	label values s`w'memrys cond_since_p
}


***Had asthma since last interview***
*wave respondent had asthma since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'asthmae if preload==.
	}
	
	gen r`w'asthmas =.
	missing_H r`w'asthmae preload if r`w'asthmae!=., result(r`w'asthmas)
	replace r`w'asthmas = .c if !missing(r`w'asthmae) & preload ==.
	replace r`w'asthmas = 0 if !missing(r`w'asthmae) & !missing(preload)
	replace r`w'asthmas = 1 if preload == 0 & r`w'asthmae == 1
	label variable r`w'asthmas "r`w'asthmas:w`w' R had asthma since last IW"
	label values r`w'asthmas cond_since_p
	
	
	drop preload
}

*wave spouse had asthma since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'asthmas =.
	spouse r`w'asthmas, result(s`w'asthmas) wave(`w')
	label variable s`w'asthmas "s`w'asthmas:w`w' S had asthma since last IW"
	label values s`w'asthmas cond_since_p
}

***Had high cholesterol since last interview***
*wave respondent had high cholesterol since last interview
forvalues w = 3/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'asthmae if preload==.
	}
	
	gen r`w'hchols =.
	missing_H r`w'hchole preload if r`w'hchole!=., result(r`w'hchols)
	replace r`w'hchols = .c if !missing(r`w'hchole) & preload ==.
	replace r`w'hchols = 0 if !missing(r`w'hchole) & !missing(preload)
	replace r`w'hchols = 1 if preload == 0 & r`w'hchole == 1
	label variable r`w'hchols "r`w'hchols:w`w' R had high cholesterol since last IW"
	label values r`w'hchols cond_since_p
	
	drop preload
}

*wave spouse had high cholesterol since last interview
forvalues w = 3/`sp_maxwave' {
	gen s`w'hchols =.
	spouse r`w'hchols, result(s`w'hchols) wave(`w')
	label variable s`w'hchols "s`w'hchols:w`w' S had high cholesterol since last IW"
	label values s`w'hchols cond_since_p
}

***Had cataracts since last interview***
*wave respondent had cataracts since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'catrcte if preload==.
	}
	
	gen r`w'catrcts =.
	missing_H r`w'catrcte preload if r`w'catrcte!=., result(r`w'catrcts)
	replace r`w'catrcts = .c if !missing(r`w'catrcte) & preload ==.
	replace r`w'catrcts = 0 if !missing(r`w'catrcte) & !missing(preload)
	replace r`w'catrcts = 1 if preload == 0 & r`w'catrcte == 1
	label variable r`w'catrcts "r`w'catrcts:w`w' R had cataracts since last IW"
	label values r`w'catrcts cond_since_p
	
	drop preload
}

*wave spouse had cataracts since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'catrcts =.
	spouse r`w'catrcts, result(s`w'catrcts) wave(`w')
	label variable s`w'catrcts "s`w'catrcts:w`w' S had cataracts since last IW"
	label values s`w'catrcts cond_since_p
}

***Had parkinsons since last interview***
*wave respondent had parkinsons since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'parkine if preload==.
	}
	
	gen r`w'parkins =.
	missing_H r`w'parkine preload if r`w'parkine!=., result(r`w'parkins)
	replace r`w'parkins = .c if !missing(r`w'parkine) & preload ==.
	replace r`w'parkins = 0 if !missing(r`w'parkine) & !missing(preload)
	replace r`w'parkins = 1 if preload == 0 & r`w'parkine == 1
	label variable r`w'parkins "r`w'catrcts:w`w' R had parkinson disease since last IW"
	label values r`w'parkins cond_since_p
	
	drop preload
}

*wave spouse had parkinsons since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'parkins =.
	spouse r`w'parkins, result(s`w'parkins) wave(`w')
	label variable s`w'parkins "s`w'parkins:w`w' S had parkinson disease since last IW"
	label values s`w'parkins cond_since_p
}

***Had hip fracture since last interview***
*wave respondent had hip fracture since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'hipe if preload==.
	}
	
	gen r`w'hips =.
	missing_H r`w'hipe preload if r`w'hipe!=., result(r`w'hips)
	replace r`w'hips = .c if !missing(r`w'hipe) & preload ==.
	replace r`w'hips = .a if (r`w'hipe == .a | r`pw'hipe==.a | preload == .a) & inw`w' == 1
	replace r`w'hips = 0 if (!missing(r`w'hipe) & !missing(preload)) & inw`w' == 1
	replace r`w'hips = 1 if preload == 0 & r`w'hipe == 1
	label variable r`w'hips "r`w'hips:w`w' R had hip fracture since last IW"
	label values r`w'hips cond_since_p
	
	drop preload
}

*wave spouse had hip fracture since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'hips =.
	spouse r`w'hips, result(s`w'hips) wave(`w')
	label variable s`w'hips "s`w'hips:w`w' S had hip fracture since last IW"
	label values s`w'hips cond_since_p
}

***Had alzheimers since last interview***
*wave respondent had alzheimers since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'alzhe if preload==.
	}
	
	gen r`w'alzhs =.
	missing_H r`w'alzhe preload if r`w'alzhe!=., result(r`w'alzhs)
	replace r`w'alzhs = .c if !missing(r`w'alzhe) & preload ==.
	replace r`w'alzhs = 0 if !missing(r`w'alzhe) & !missing(preload)
	replace r`w'alzhs = 1 if preload == 0 & r`w'alzhe == 1
	label variable r`w'alzhs "r`w'alzhs:w`w' R had alzheimer's since last IW"
	label values r`w'alzhs cond_since_p
	
	drop preload
}

*wave spouse had alzheimers since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'alzhs =.
	spouse r`w'alzhs, result(s`w'alzhs) wave(`w')
	label variable s`w'alzhs "s`w'alzhs:w`w' S had alzheimer's since last IW"
	label values s`w'alzhs cond_since_p
}

***Had dementia since last interview***
*wave respondent had dementia since last interview
forvalues w = 2/`maxwave' {
	gen preload =.
	local pw=`w'-1
	forvalues pw_ = `pw' (-1) 1 {
		replace preload = r`pw_'demene if preload==.
	}
	
	gen r`w'demens =.
	missing_H r`w'demene preload if r`w'demene!=., result(r`w'demens)
	replace r`w'demens = .c if !missing(r`w'demene) & preload ==.
	replace r`w'demens = 0 if !missing(r`w'demene) & !missing(preload)
	replace r`w'demens = 1 if preload == 0 & r`w'demene == 1
	label variable r`w'demens "r`w'demens:w`w' R had dementia since last IW"
	label values r`w'demens cond_since_p
	
	drop preload
}

*wave spouse had dementia since last interview
forvalues w = 2/`sp_maxwave' {
	gen s`w'demens =.
	spouse r`w'demens, result(s`w'demens) wave(`w')
	label variable s`w'demens "s`w'demens:w`w' S had dementia since last IW"
	label values s`w'demens cond_since_p
}



***Private Insurance***
label define yesno ///
   0 "0.no"  ///
   1 "1.yes" ///
   	.o ".o:Other" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .f ".f:Disputed existence of pension" ///
	 .d ".d:DK" ///
	 .p ".p:proxy" ///
	 .w ".w:currently not working"
	
***Source of insurance***
label define who ///
   0 "0.No private insurance" ///
   1 "1.Respondent" ///
   2 "2.Another family member" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK"
	 	 
******************************************************************************************



*set wave number
local wavenum=1
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 1 core data***
local insure_w1_core wpphi wphowu iali wpactw         
  
merge 1:1 idauniq using "$wave_1_core", keepusing(`insure_w1_core') nogen


***Covered by Private Health Insurance Program***
*wave 1 respondent covered by private health insurance
gen r`wavenum'hipriv = .
replace r`wavenum'hipriv = 1 if inlist(wpphi,1,2) 
replace r`wavenum'hipriv = 0 if wpphi ==3 
replace r`wavenum'hipriv =.d if wpphi ==-8
replace r`wavenum'hipriv =.r if wpphi ==-9
replace r`wavenum'hipriv =.m if wpphi ==-1
label variable r`wavenum'hipriv "r`wavenum'hipriv:w1 R covered by private health insurance"
label values r`wavenum'hipriv yesno

*wave 1 spouse covered by private health insurance
gen s`wavenum'hipriv =.
spouse r`wavenum'hipriv, result(s`wavenum'hipriv) wave(1)
label variable s`wavenum'hipriv "s`wavenum'hipriv:w1 S covered by private health insurance"
label values s`wavenum'hipriv yesno

*check 


***Source of insurance plan-specific employer-provided health insurance***
*wave 1 respondent source of insurance
gen r`wavenum'hpsrc = .
replace r`wavenum'hpsrc =.m if wpphi ==-1
replace r`wavenum'hpsrc =.d if wpphi ==-8
replace r`wavenum'hpsrc =.r if wpphi ==-9
replace r`wavenum'hpsrc = 0 if wpphi == 3
replace r`wavenum'hpsrc = 1 if wpphi == 1 
replace r`wavenum'hpsrc = 2 if wpphi == 2 
label variable r`wavenum'hpsrc "r`wavenum'hpsrc:w1 R source of insurance"
label values r`wavenum'hpsrc who

*wave 1 spouse source of insurance
gen s`wavenum'hpsrc =.
spouse r`wavenum'hpsrc, result(s`wavenum'hpsrc) wave(1)
label variable s`wavenum'hpsrc "s`wavenum'hpsrc:w1 S source of insurance"
label values s`wavenum'hpsrc who

*check 

***Covered by Life Insurance***
*wave 1 respondent covered by life insurance
gen r`wavenum'lifein = .
replace r`wavenum'lifein = 1 if iali ==1 
replace r`wavenum'lifein = 0 if iali ==2 
replace r`wavenum'lifein =.d if iali ==-8
replace r`wavenum'lifein =.r if iali ==-9
replace r`wavenum'lifein =.m if iali ==-1
label variable r`wavenum'lifein "r`wavenum'lifein:w1 R covered by life insurance"
label values r`wavenum'lifein yesno

*wave 1 spouse covered by life insurance
gen s`wavenum'lifein =.
spouse r`wavenum'lifein, result(s`wavenum'lifein) wave(1)
label variable s`wavenum'lifein "s`wavenum'lifein:w1 S covered by life insurance"
label values s`wavenum'lifein yesno

*check 




***drop ELSA wave 1 core file raw variables***
drop `insure_w1_core'

******************************************************************************************



*set wave number
local wavenum=2
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 2 core data***
local insure_w2_core wpphi wphowu iali wpactw               
merge 1:1 idauniq using "$wave_2_core", keepusing(`insure_w2_core') nogen


***Covered by Private Health Insurance Program***
*wave 2 R covered by private health insurance
gen r`wavenum'hipriv = .
replace r`wavenum'hipriv = 1 if inlist(wpphi,1,2) 
replace r`wavenum'hipriv = 0 if wpphi ==3 
replace r`wavenum'hipriv =.d if wpphi ==-8
replace r`wavenum'hipriv =.r if wpphi ==-9
replace r`wavenum'hipriv =.m if wpphi ==-1
label variable r`wavenum'hipriv "r`wavenum'hipriv:w2 R covered by private health insurance"
label values r`wavenum'hipriv yesno

*wave 2 S covered by private health insurance
gen s`wavenum'hipriv =.
spouse r`wavenum'hipriv, result(s`wavenum'hipriv) wave(2)
label variable s`wavenum'hipriv "s`wavenum'hipriv:w2 S covered by private health insurance"
label values s`wavenum'hipriv yesno

*check 


***Source of insurance plan-specific employer-provided health insurance***
*wave 2 R source of insurance
gen r`wavenum'hpsrc = .
replace r`wavenum'hpsrc =.m if wpphi ==-1
replace r`wavenum'hpsrc =.d if wpphi ==-8
replace r`wavenum'hpsrc =.r if wpphi ==-9
replace r`wavenum'hpsrc = 0 if wpphi == 3
replace r`wavenum'hpsrc = 1 if wpphi == 1 
replace r`wavenum'hpsrc = 2 if wpphi == 2 
label variable r`wavenum'hpsrc "r`wavenum'hpsrc:w2 R source of insurance"
label values r`wavenum'hpsrc who

*wave 2 S source of insurance
gen s`wavenum'hpsrc =.
spouse r`wavenum'hpsrc, result(s`wavenum'hpsrc) wave(2)
label variable s`wavenum'hpsrc "s`wavenum'hpsrc:w2 S source of insurance"
label values s`wavenum'hpsrc who

*check 

***Covered by Life Insurance***
*wave 2 R covered by life insurance
gen r`wavenum'lifein = .
replace r`wavenum'lifein = 1 if iali ==1 
replace r`wavenum'lifein = 0 if iali ==2 
replace r`wavenum'lifein =.d if iali ==-8
replace r`wavenum'lifein =.r if iali ==-9
replace r`wavenum'lifein =.m if iali ==-1
label variable r`wavenum'lifein "r`wavenum'lifein:w2 R covered by life insurance"
label values r`wavenum'lifein yesno

*wave 2 S covered by life insurance
gen s`wavenum'lifein =.
spouse r`wavenum'lifein, result(s`wavenum'lifein) wave(2)
label variable s`wavenum'lifein "s`wavenum'lifein:w2 S covered by life insurance"
label values s`wavenum'lifein yesno

*check 


***drop ELSA wave 2 core file raw variables***
drop `insure_w2_core'

******************************************************************************************



*set wave number
local wavenum=3
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 3 core data***
local insure_w3_core wpphi wphowu iali wpactw              
merge 1:1 idauniq using "$wave_3_core", keepusing(`insure_w3_core') nogen


***Covered by Private Health Insurance Program***
*wave 3 R covered by private health insurance
gen r`wavenum'hipriv = .
replace r`wavenum'hipriv = 1 if inlist(wpphi,1,2) 
replace r`wavenum'hipriv = 0 if wpphi ==3 
replace r`wavenum'hipriv =.d if wpphi ==-8
replace r`wavenum'hipriv =.r if wpphi ==-9
replace r`wavenum'hipriv =.m if wpphi ==-1
label variable r`wavenum'hipriv "r`wavenum'hipriv:w3 R covered by private health insurance"
label values r`wavenum'hipriv yesno

*wave 3 S covered by private health insurance
gen s`wavenum'hipriv =.
spouse r`wavenum'hipriv, result(s`wavenum'hipriv) wave(3)
label variable s`wavenum'hipriv "s`wavenum'hipriv:w3 S covered by private health insurance"
label values s`wavenum'hipriv yesno

*check 


***Source of insurance plan-specific employer-provided health insurance***
*wave 3 R source of insurance
gen r`wavenum'hpsrc = .
replace r`wavenum'hpsrc =.m if wpphi ==-1
replace r`wavenum'hpsrc =.d if wpphi ==-8
replace r`wavenum'hpsrc =.r if wpphi ==-9
replace r`wavenum'hpsrc = 0 if wpphi == 3
replace r`wavenum'hpsrc = 1 if wpphi == 1 
replace r`wavenum'hpsrc = 2 if wpphi == 2 
label variable r`wavenum'hpsrc "r`wavenum'hpsrc:w3 R source of insurance"
label values r`wavenum'hpsrc who

*wave 3 S source of insurance
gen s`wavenum'hpsrc =.
spouse r`wavenum'hpsrc, result(s`wavenum'hpsrc) wave(3)
label variable s`wavenum'hpsrc "s`wavenum'hpsrc:w3 S source of insurance"
label values s`wavenum'hpsrc who

*check 

***Covered by Life Insurance***
*wave 3 R covered by life insurance
gen r`wavenum'lifein = .
replace r`wavenum'lifein = 1 if iali ==1 
replace r`wavenum'lifein = 0 if iali ==2 
replace r`wavenum'lifein =.d if iali ==-8
replace r`wavenum'lifein =.r if iali ==-9
replace r`wavenum'lifein =.m if iali ==-1
label variable r`wavenum'lifein "r`wavenum'lifein:w3 R covered by life insurance"
label values r`wavenum'lifein yesno

*wave 3 S covered by life insurance
gen s`wavenum'lifein =.
spouse r`wavenum'lifein, result(s`wavenum'lifein) wave(3)
label variable s`wavenum'lifein "s`wavenum'lifein:w3 S covered by life insurance"
label values s`wavenum'lifein yesno


*check 


***drop ELSA wave 3 core file raw variables***
drop `insure_w3_core'

******************************************************************************************



*set wave number
local wavenum=4
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 4 core data***
local insure_w4_core wpphi wphowu iali wpactw              
merge 1:1 idauniq using "$wave_4_core", keepusing(`insure_w4_core') nogen


***Covered by Private Health Insurance Program***
*wave 4 R covered by private health insurance
gen r`wavenum'hipriv = .
replace r`wavenum'hipriv = 1 if inlist(wpphi,1,2) 
replace r`wavenum'hipriv = 0 if wpphi ==3 
replace r`wavenum'hipriv =.d if wpphi ==-8
replace r`wavenum'hipriv =.r if wpphi ==-9
replace r`wavenum'hipriv =.m if wpphi ==-1
label variable r`wavenum'hipriv "r`wavenum'hipriv:w4 R covered by private health insurance"
label values r`wavenum'hipriv yesno

*wave 4 S covered by private health insurance
gen s`wavenum'hipriv =.
spouse r`wavenum'hipriv, result(s`wavenum'hipriv) wave(4)
label variable s`wavenum'hipriv "s`wavenum'hipriv:w4 S covered by private health insurance"
label values s`wavenum'hipriv yesno

*check 


***Source of insurance plan-specific employer-provided health insurance***
*wave 4 R source of insurance
gen r`wavenum'hpsrc = .
replace r`wavenum'hpsrc =.m if wpphi ==-1
replace r`wavenum'hpsrc =.d if wpphi ==-8
replace r`wavenum'hpsrc =.r if wpphi ==-9
replace r`wavenum'hpsrc = 0 if wpphi == 3
replace r`wavenum'hpsrc = 1 if wpphi == 1 
replace r`wavenum'hpsrc = 2 if wpphi == 2 
label variable r`wavenum'hpsrc "r`wavenum'hpsrc:w4 R source of insurance"
label values r`wavenum'hpsrc who

*wave 4 S source of insurance
gen s`wavenum'hpsrc =.
spouse r`wavenum'hpsrc, result(s`wavenum'hpsrc) wave(4)
label variable s`wavenum'hpsrc "s`wavenum'hpsrc:w4 S source of insurance"
label values s`wavenum'hpsrc who

*check 

***Covered by Life Insurance***
*wave 4 R covered by life insurance
gen r`wavenum'lifein = .
replace r`wavenum'lifein = 1 if iali ==1 
replace r`wavenum'lifein = 0 if iali ==2 
replace r`wavenum'lifein =.d if iali ==-8
replace r`wavenum'lifein =.r if iali ==-9
replace r`wavenum'lifein =.m if iali ==-1
label variable r`wavenum'lifein "r`wavenum'lifein:w4 R covered by life insurance"
label values r`wavenum'lifein yesno

*wave 4 S covered by life insurance
gen s`wavenum'lifein =.
spouse r`wavenum'lifein, result(s`wavenum'lifein) wave(4)
label variable s`wavenum'lifein "s`wavenum'lifein:w4 S covered by life insurance"
label values s`wavenum'lifein yesno

*check 


***drop ELSA wave 4 core file raw variables***
drop `insure_w4_core'

******************************************************************************************




*set wave number
local wavenum=5
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 5 core data***
local insure_w5_core wpphi wphowu iali wpactw             
merge 1:1 idauniq using "$wave_5_core", keepusing(`insure_w5_core') nogen



***Covered by Private Health Insurance Program***
*wave 5 R covered by private health insurance
gen r`wavenum'hipriv = .
replace r`wavenum'hipriv = 1 if inlist(wpphi,1,2) 
replace r`wavenum'hipriv = 0 if wpphi ==3 
replace r`wavenum'hipriv =.d if wpphi ==-8
replace r`wavenum'hipriv =.r if wpphi ==-9
replace r`wavenum'hipriv =.m if wpphi ==-1
label variable r`wavenum'hipriv "r`wavenum'hipriv:w5 R covered by private health insurance"
label values r`wavenum'hipriv yesno

*wave 5 S covered by private health insurance
gen s`wavenum'hipriv =.
spouse r`wavenum'hipriv, result(s`wavenum'hipriv) wave(5)
label variable s`wavenum'hipriv "s`wavenum'hipriv:w5 S covered by private health insurance"
label values s`wavenum'hipriv yesno

*check 


***Source of insurance plan-specific employer-provided health insurance***
*wave 5 R source of insurance
gen r`wavenum'hpsrc = .
replace r`wavenum'hpsrc =.m if wpphi ==-1
replace r`wavenum'hpsrc =.d if wpphi ==-8
replace r`wavenum'hpsrc =.r if wpphi ==-9
replace r`wavenum'hpsrc = 0 if wpphi == 3
replace r`wavenum'hpsrc = 1 if wpphi == 1 
replace r`wavenum'hpsrc = 2 if wpphi == 2 
label variable r`wavenum'hpsrc "r`wavenum'hpsrc:w5 R source of insurance"
label values r`wavenum'hpsrc who

*wave 5 S source of insurance
gen s`wavenum'hpsrc =.
spouse r`wavenum'hpsrc, result(s`wavenum'hpsrc) wave(5)
label variable s`wavenum'hpsrc "s`wavenum'hpsrc:w5 S source of insurance"
label values s`wavenum'hpsrc who

*check 

***Covered by Life Insurance***
*wave 5 R covered by life insurance
gen r`wavenum'lifein = .
replace r`wavenum'lifein = 1 if iali ==1 
replace r`wavenum'lifein = 0 if iali ==2 
replace r`wavenum'lifein =.d if iali ==-8
replace r`wavenum'lifein =.r if iali ==-9
replace r`wavenum'lifein =.m if iali ==-1
label variable r`wavenum'lifein "r`wavenum'lifein:w5 R covered by life insurance"
label values r`wavenum'lifein yesno

*wave 5 S covered by life insurance
gen s`wavenum'lifein =.
spouse r`wavenum'lifein, result(s`wavenum'lifein) wave(5)
label variable s`wavenum'lifein "s`wavenum'lifein:w5 S covered by life insurance"
label values s`wavenum'lifein yesno

*check 


***drop ELSA wave 5 core file raw variables***
drop `insure_w5_core'

******************************************************************************************



*set wave number
local wavenum=6
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 6 core data***
local insure_w6_core WpPHI WpHowU IaLi WPActW            
merge 1:1 idauniq using "$wave_6_core", keepusing(`insure_w6_core') nogen



***Covered by Private Health Insurance Program***
*wave 6 R covered by private health insurance
gen r`wavenum'hipriv = .
replace r`wavenum'hipriv = 1 if inlist(WpPHI,1,2) 
replace r`wavenum'hipriv = 0 if WpPHI ==3 
replace r`wavenum'hipriv =.d if WpPHI ==-8
replace r`wavenum'hipriv =.r if WpPHI ==-9
replace r`wavenum'hipriv =.m if WpPHI ==-1
label variable r`wavenum'hipriv "r`wavenum'hipriv:w6 R covered by private health insurance"
label values r`wavenum'hipriv yesno

*wave 6 S covered by private health insurance
gen s`wavenum'hipriv =.
spouse r`wavenum'hipriv, result(s`wavenum'hipriv) wave(6)
label variable s`wavenum'hipriv "s`wavenum'hipriv:w6 S covered by private health insurance"
label values s`wavenum'hipriv yesno

*check 


***Source of insurance plan-specific employer-provided health insurance***
*wave 6 R source of insurance
gen r`wavenum'hpsrc = .
replace r`wavenum'hpsrc =.m if WpPHI ==-1
replace r`wavenum'hpsrc =.d if WpPHI ==-8
replace r`wavenum'hpsrc =.r if WpPHI ==-9
replace r`wavenum'hpsrc = 0 if WpPHI == 3
replace r`wavenum'hpsrc = 1 if WpPHI == 1 
replace r`wavenum'hpsrc = 2 if WpPHI == 2 
label variable r`wavenum'hpsrc "r`wavenum'hpsrc:w6 R source of insurance"
label values r`wavenum'hpsrc who

*wave 6 S source of insurance
gen s`wavenum'hpsrc =.
spouse r`wavenum'hpsrc, result(s`wavenum'hpsrc) wave(6)
label variable s`wavenum'hpsrc "s`wavenum'hpsrc:w6 S source of insurance"
label values s`wavenum'hpsrc who

*check 

***Covered by Life Insurance***
*wave 6 R covered by life insurance
gen r`wavenum'lifein = .
replace r`wavenum'lifein = 1 if IaLi ==1 
replace r`wavenum'lifein = 0 if IaLi ==2 
replace r`wavenum'lifein =.d if IaLi ==-8
replace r`wavenum'lifein =.r if IaLi ==-9
replace r`wavenum'lifein =.m if IaLi ==-1
label variable r`wavenum'lifein "r`wavenum'lifein:w6 R covered by life insurance"
label values r`wavenum'lifein yesno

*wave 6 S covered by life insurance
gen s`wavenum'lifein =.
spouse r`wavenum'lifein, result(s`wavenum'lifein) wave(6)
label variable s`wavenum'lifein "s`wavenum'lifein:w6 S covered by life insurance"
label values s`wavenum'lifein yesno

*check 


***drop ELSA wave 6 core file raw variables***
drop `insure_w6_core'

******************************************************************************************


*set wave number
local wavenum=7
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 7 core data***
local insure_w7_core WpPHI WpHowU IaLi WPActW            
merge 1:1 idauniq using "$wave_7_core", keepusing(`insure_w7_core') nogen



***Covered by Private Health Insurance Program***
*wave 7 R covered by private health insurance
gen r`wavenum'hipriv = .
replace r`wavenum'hipriv =.d if WpPHI ==-8
replace r`wavenum'hipriv =.r if WpPHI ==-9
replace r`wavenum'hipriv =.m if WpPHI ==-1
replace r`wavenum'hipriv = 1 if inlist(WpPHI,1,2) 
replace r`wavenum'hipriv = 0 if WpPHI ==3 

label variable r`wavenum'hipriv "r`wavenum'hipriv:w7 R covered by private health insurance"
label values r`wavenum'hipriv yesno

*wave 7 S covered by private health insurance
gen s`wavenum'hipriv =.
spouse r`wavenum'hipriv, result(s`wavenum'hipriv) wave(7)
label variable s`wavenum'hipriv "s`wavenum'hipriv:w7 S covered by private health insurance"
label values s`wavenum'hipriv yesno

*check 


***Source of insurance plan-specific employer-provided health insurance***
*wave 7 R source of insurance
gen r`wavenum'hpsrc = .
replace r`wavenum'hpsrc =.m if WpPHI ==-1
replace r`wavenum'hpsrc =.d if WpPHI ==-8
replace r`wavenum'hpsrc =.r if WpPHI ==-9
replace r`wavenum'hpsrc = 0 if WpPHI == 3
replace r`wavenum'hpsrc = 1 if WpPHI == 1 
replace r`wavenum'hpsrc = 2 if WpPHI == 2 
label variable r`wavenum'hpsrc "r`wavenum'hpsrc:w7 R source of insurance"
label values r`wavenum'hpsrc who

*wave 7 S source of insurance
gen s`wavenum'hpsrc =.
spouse r`wavenum'hpsrc, result(s`wavenum'hpsrc) wave(7)
label variable s`wavenum'hpsrc "s`wavenum'hpsrc:w7 S source of insurance"
label values s`wavenum'hpsrc who

*check 

***Covered by Life Insurance***
*wave 7 R covered by life insurance
gen r`wavenum'lifein = .
replace r`wavenum'lifein =.d if IaLi ==-8
replace r`wavenum'lifein =.r if IaLi ==-9
replace r`wavenum'lifein =.m if IaLi ==-1
replace r`wavenum'lifein = 1 if IaLi ==1 
replace r`wavenum'lifein = 0 if IaLi ==2 

label variable r`wavenum'lifein "r`wavenum'lifein:w7 R covered by life insurance"
label values r`wavenum'lifein yesno

*wave 7 S covered by life insurance
gen s`wavenum'lifein =.
spouse r`wavenum'lifein, result(s`wavenum'lifein) wave(7)
label variable s`wavenum'lifein "s`wavenum'lifein:w7 S covered by life insurance"
label values s`wavenum'lifein yesno

*check 


***drop ELSA wave 7 core file raw variables***
drop `insure_w7_core'

******************************************************************************************

*set wave number
local wavenum=8
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 8 core data***
local insure_w8_core wpphi wphowu iali wpactw            
merge 1:1 idauniq using "$wave_8_core", keepusing(`insure_w8_core') nogen



***Covered by Private Health Insurance Program***
*wave 8 R covered by private health insurance
gen r`wavenum'hipriv = .
replace r`wavenum'hipriv =.d if wpphi ==-8
replace r`wavenum'hipriv =.r if wpphi ==-9
replace r`wavenum'hipriv =.m if wpphi ==-1
replace r`wavenum'hipriv = 1 if inlist(wpphi,1,2) 
replace r`wavenum'hipriv = 0 if wpphi ==3 

label variable r`wavenum'hipriv "r`wavenum'hipriv:w8 R covered by private health insurance"
label values r`wavenum'hipriv yesno

*wave 8 S covered by private health insurance
gen s`wavenum'hipriv =.
spouse r`wavenum'hipriv, result(s`wavenum'hipriv) wave(8)
label variable s`wavenum'hipriv "s`wavenum'hipriv:w8 S covered by private health insurance"
label values s`wavenum'hipriv yesno

*check 


***Source of insurance plan-specific employer-provided health insurance***
*wave 8 R source of insurance
gen r`wavenum'hpsrc = .
replace r`wavenum'hpsrc =.m if wpphi ==-1
replace r`wavenum'hpsrc =.d if wpphi ==-8
replace r`wavenum'hpsrc =.r if wpphi ==-9
replace r`wavenum'hpsrc = 0 if wpphi == 3
replace r`wavenum'hpsrc = 1 if wpphi == 1 
replace r`wavenum'hpsrc = 2 if wpphi == 2 
label variable r`wavenum'hpsrc "r`wavenum'hpsrc:w8 R source of insurance"
label values r`wavenum'hpsrc who

*wave 8 S source of insurance
gen s`wavenum'hpsrc =.
spouse r`wavenum'hpsrc, result(s`wavenum'hpsrc) wave(8)
label variable s`wavenum'hpsrc "s`wavenum'hpsrc:w8 S source of insurance"
label values s`wavenum'hpsrc who

*check 

***Covered by Life Insurance***
*wave 8 R covered by life insurance
gen r`wavenum'lifein = .
replace r`wavenum'lifein =.d if iali ==-8
replace r`wavenum'lifein =.r if iali ==-9
replace r`wavenum'lifein =.m if iali ==-1
replace r`wavenum'lifein = 1 if iali ==1 
replace r`wavenum'lifein = 0 if iali ==2 

label variable r`wavenum'lifein "r`wavenum'lifein:w8 R covered by life insurance"
label values r`wavenum'lifein yesno

*wave 8 S covered by life insurance
gen s`wavenum'lifein =.
spouse r`wavenum'lifein, result(s`wavenum'lifein) wave(8)
label variable s`wavenum'lifein "s`wavenum'lifein:w8 S covered by life insurance"
label values s`wavenum'lifein yesno

*check 


***drop ELSA wave 8 core file raw variables***
drop `insure_w8_core'

******************************************************************************************

***cognition eligibility status***
label define cogelig ///
	1 "1.Cog meas" ///
	2 "2.Proxy IW" ///
	3 "3.Non-resp" ///
	.r ".r:Refuse" ///
	.m ".m:Missing" ///
	.d ".d:DK" ///
	.p ".p:Proxy" ///
	 .u ".u:Unmar"

***cognition month naming***
label define monthnaming ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	 .p ".p:Proxy" ///
	 .u ".u:Unmar"
	 
***cognition day naming***
label define daynaming ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	  .p ".p:Proxy" ///
	 .u ".u:Unmar"
	  
***cognition year naming***
label define yeaernaming ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
   .p ".p:Proxy" ///
	 .u ".u:Unmar"
   
***cognition day of week naming***
label define daywnaming ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	 .p ".p:Proxy" ///
	 .u ".u:Unmar"
	 
*Backwards counting
label define bwc20 ///
	 0 "0.Incorrect" ///
 	 1 "1.Correct, 2nd try" ///
 	 2 "2.Correct, 1st try" ///
	 .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	 .p ".p:Proxy" ///
	 .u ".u:Unmar"

*Correct in anser
label define ans ///
	 0 "0.Incorrect" ///
 	 1 "1.Correct" ///
	 .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	 .p ".p:Proxy" ///
	 .u ".u:Unmar"
		 
***Self-reported memory***
label define memory ///
   1 "1.Excellent"  ///
   2 "2.Very Good" /// 
   3 "3.Good" ///
   4 "4.Fair" ///
   5 "5.Poor" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	 .p ".p:Proxy" ///
	 .u ".u:Unmar"
	 
***Whether word list read by computer or interviewer***
label define readrc ///
   1 "1.Computer" ///
   2 "2.Interviewer" ///
	.r ".r:Refuse" ///
	.m ".m:Missing" ///
	.d ".d:DK" ///
	.p ".p:Proxy" ///
	 .u ".u:Unmar"

***Cognition testing flags***
label define imp ///
   0 "0.no" ///
   1 "1.yes" ///
	.r ".r:Refuse" ///
	.m ".m:Missing" ///
	.d ".d:DK" ///
	.p ".p:Proxy" ///
	 .u ".u:Unmar"
   
***backward counting flags***
label define back ///
   1 "1.first attempt" ///
   2 "2.second attempt" 
   
***prospective memory task 1***
label define prmemtask1 /// 
	0 "0.Did nothing/didn't remember" ///
	1 "1.Did something else" ///
	2 "2.Wrote something else in top left corner" ///
	3 "3.Wrote initials somewhere else" ///
	4 "4.Wrote initials in top left corner" ///
	.r ".r:Refuse" ///
	.m ".m:Missing" ///
	.d ".d:DK" ///
	.p ".p:Proxy" ///
	 .u ".u:Unmar"
	
***prospective memory task 2***
label define prmemtask2 /// 
	0 "0.Did nothing/didn't remember" ///
	1 "1.Did something else" ///
	2 "2.Reminded interviewer to record time" ///
	.r ".r:Refuse" ///
	.m ".m:Missing" ///
	.d ".d:DK" ///
	.p ".p:Proxy" ///
	 .u ".u:Unmar"
	 	 
	 	 
******************************************************************************************

*set wave number
local wavenum=1
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 1 core data***
local cog_w1_core cfmetm cflisen cflisd cfdatm cfdatd cfdaty cfday cfani ///                  
                     cfmscr askpx1 cftest cfimp cfwho1 cfwho2 cfwho3 cfmems cfpmb
merge 1:1 idauniq using "$wave_1_core", keepusing(`cog_w1_core') nogen


****cognition testing status***
**wave 1 respondent cognition testing status
*gen r`wavenum'status = .
*replace r`wavenum'status = 1 if askpx1 == -1
*replace r`wavenum'status = 2 if askpx1 == 1
*label variable r`wavenum'status "r`wavenum'status:w`wavenum' eligibility status"
*label values r`wavenum'status cogelig
*
**wave 1 spouse cognition testing status
*gen s`wavenum'status = .
*spouse r`wavenum'status, result(s`wavenum'status) wave(`wavenum')
*label variable s`wavenum'status "s`wavenum'status:w`wavenum' eligibility status"
*label values s`wavenum'status cogelig

***cognition testing conditions***
*wave 1 respondent whether factors impaired cognition tests
gen r`wavenum'cogimp= .
missing_w`wavenum' cfimp, result(r`wavenum'cogimp)
replace r`wavenum'cogimp = .p if askpx1 == 1
replace r`wavenum'cogimp = 0 if cfimp == 2
replace r`wavenum'cogimp = 1 if cfimp == 1 
label variable r`wavenum'cogimp "r`wavenum'cogimp:w`wavenum' r whether factors impaired cognition tests"
label values r`wavenum'cogimp imp

*wave 1 spouse whether factors impaired cognition tests
gen s`wavenum'cogimp =.
spouse r`wavenum'cogimp, result(s`wavenum'cogimp) wave(`wavenum')
label variable s`wavenum'cogimp "s`wavenum'cogimp:w`wavenum' s whether factors impaired cognition tests"
label values s`wavenum'cogimp imp

*check 

*wave 1 respondent whether other people present during cognition tests
gen r`wavenum'cogothp= .
missing_w`wavenum' cfwho1 cfwho2 cfwho3, result(r`wavenum'cogothp)
replace r`wavenum'cogothp = .p if askpx1 == 1
replace r`wavenum'cogothp = 0 if cfwho1 == 1 | cfwho2 == 1 | cfwho3 == 1
replace r`wavenum'cogothp = 1 if inlist(cfwho1,2,3,4,5) | inlist(cfwho2,2,3,4,5) | inlist(cfwho3,2,3,4,5)
label variable r`wavenum'cogothp "r`wavenum'cogothp:w`wavenum' r whether other people present during cog tests"
label values r`wavenum'cogothp imp

*wave 1 spouse whether other people in room during cognition tests
gen s`wavenum'cogothp =.
spouse r`wavenum'cogothp, result(s`wavenum'cogothp) wave(`wavenum')
label variable s`wavenum'cogothp "s`wavenum'cogothp:w`wavenum' s whether other people present during cog tests"
label values s`wavenum'cogothp imp

*check 

***cognition month naming***
*wave 1 respondent cognition month naming
gen r`wavenum'mo= .
replace r`wavenum'mo = 1 if cfdatm==1 
replace r`wavenum'mo = 0 if cfdatm==2
replace r`wavenum'mo = .m if inlist(cfdatm,-1,-2)
replace r`wavenum'mo = .d if cfdatm==-8
replace r`wavenum'mo = .r if cfdatm==-9
replace r`wavenum'mo = .p if cfdatm==-1 & askpx1 == 1
label variable r`wavenum'mo "r`wavenum'mo:w`wavenum' r cognition date naming-month"
label values r`wavenum'mo monthnaming

*wave 1 spouse month naming
gen s`wavenum'mo =.
spouse r`wavenum'mo, result(s`wavenum'mo) wave(1)
label variable s`wavenum'mo "s`wavenum'mo:w`wavenum' s cognition date naming-month"
label values s`wavenum'mo monthnaming

*check 

***cognition day naming***
*wave 1 respondent cognition day naming
gen r`wavenum'dy= .
replace r`wavenum'dy = 1 if cfdatd==1 
replace r`wavenum'dy = 0 if cfdatd==2
replace r`wavenum'dy = .m if inlist(cfdatd,-1,-2)
replace r`wavenum'dy = .d if cfdatd==-8
replace r`wavenum'dy = .r if cfdatd==-9
replace r`wavenum'dy = .p if cfdatd==-1 & askpx1 == 1
label variable r`wavenum'dy "r`wavenum'dy:w`wavenum' r cognition date naming-day of month"
label values r`wavenum'dy daynaming

*wave 1 spouse day naming
gen s`wavenum'dy =.
spouse r`wavenum'dy, result(s`wavenum'dy) wave(1)
label variable s`wavenum'dy "s`wavenum'dy:w`wavenum' s cognition date naming-day of month"
label values s`wavenum'dy daynaming

*check 

***cognition year naming***
*wave 1 respondent cognition year naming
gen r`wavenum'yr= .
replace r`wavenum'yr = 1 if cfdaty==1 
replace r`wavenum'yr = 0 if cfdaty==2
replace r`wavenum'yr = .m if inlist(cfdaty,-1,-2)
replace r`wavenum'yr = .d if cfdaty==-8
replace r`wavenum'yr = .r if cfdaty==-9
replace r`wavenum'yr = .p if cfdaty==-1 & askpx1 == 1
label variable r`wavenum'yr "r`wavenum'yr:w`wavenum' r cognition date naming-year"
label values r`wavenum'yr yeaernaming

*wave 1 spouse year naming
gen s`wavenum'yr =.
spouse r`wavenum'yr, result(s`wavenum'yr) wave(1)
label variable s`wavenum'yr "s`wavenum'yr:w`wavenum' s cognition date naming-year"
label values s`wavenum'yr yeaernaming

*check 

***cognition day of week naming***
*wave 1 respondent cognition day of week naming
gen r`wavenum'dw= .
replace r`wavenum'dw = 1 if cfday==1 
replace r`wavenum'dw = 0 if cfday==2
replace r`wavenum'dw = .m if inlist(cfday,-1,-2)
replace r`wavenum'dw = .d if cfday==-8
replace r`wavenum'dw = .r if cfday==-9
replace r`wavenum'dw = .p if cfday==-1 & askpx1 == 1
label variable r`wavenum'dw "r`wavenum'dw:w`wavenum' r cognition date naming-day of week"
label values r`wavenum'dw daywnaming

*wave 1 spouse day of week naming
gen s`wavenum'dw =.
spouse r`wavenum'dw, result(s`wavenum'dw) wave(1)
label variable s`wavenum'dw "s`wavenum'dw:w`wavenum' s cognition date naming-day of week"
label values s`wavenum'dw daywnaming

*check 

****cognition orient***
*wave 1 respondent cognition orient
egen r`wavenum'orient = rowtotal(r`wavenum'mo r`wavenum'dy r`wavenum'yr r`wavenum'dw) 
replace r`wavenum'orient= . if r`wavenum'mo== . & r`wavenum'dy== . & r`wavenum'yr== . & r`wavenum'dw== .
replace r`wavenum'orient= .m if r`wavenum'mo== .m & r`wavenum'dy== .m & r`wavenum'yr== .m & r`wavenum'dw== .m
replace r`wavenum'orient= .d if r`wavenum'mo== .d & r`wavenum'dy== .d & r`wavenum'yr== .d & r`wavenum'dw== .d
replace r`wavenum'orient= .r if r`wavenum'mo== .r & r`wavenum'dy== .r & r`wavenum'yr== .r & r`wavenum'dw== .r
replace r`wavenum'orient= .p if r`wavenum'mo== .p & r`wavenum'dy== .p & r`wavenum'yr== .p & r`wavenum'dw== .p
label variable r`wavenum'orient "r`wavenum'orient:w`wavenum' r cognition orient(summary date naming)"

**wave 1 spouse cognition orient
gen  s`wavenum'orient =.
spouse r`wavenum'orient, result(s`wavenum'orient) wave(1)
label variable  s`wavenum'orient "s`wavenum'orient:w`wavenum' s cognition orient (summary date naming)"

*check

***Self-reported memory***
*wave 1 respondent self-reported memory
gen r`wavenum'slfmem = .
replace r`wavenum'slfmem = cfmetm
replace r`wavenum'slfmem = .m if inlist(cfmetm,-1,-2)
replace r`wavenum'slfmem = .d if cfmetm==-8
replace r`wavenum'slfmem = .r if cfmetm==-9
replace r`wavenum'slfmem = .p if cfmetm==-1 & askpx1 == 1
label variable r`wavenum'slfmem "r`wavenum'slfmem:w`wavenum' r Self-reported memory"
label values r`wavenum'slfmem memory

**wave 1 spouse Self-reported memory***
gen  s`wavenum'slfmem =.
spouse r`wavenum'slfmem, result(s`wavenum'slfmem) wave(1)
label variable  s`wavenum'slfmem "s`wavenum'slfmem:w`wavenum' s Self-reported memory"
label values s`wavenum'slfmem memory

*check 

***verbal fluency score***
*wave 1 respondent verbal fluency score
gen r`wavenum'verbf= .
replace r`wavenum'verbf = cfani if inrange(cfani,0,100)
replace r`wavenum'verbf = .m if inlist(cfani,-1,-2)
replace r`wavenum'verbf = .d if cfani==-8
replace r`wavenum'verbf = .r if cfani==-9
replace r`wavenum'verbf = .p if cfani==-1 & askpx1 == 1
label variable r`wavenum'verbf "r`wavenum'verbf:w`wavenum' r verbal fluency score"

*wave 1 spouse verbal fluency score
gen s`wavenum'verbf =.
spouse r`wavenum'verbf, result(s`wavenum'verbf) wave(1)
label variable s`wavenum'verbf "s`wavenum'verbf:w`wavenum' s verbal fluency score"

*check 

***numeracy  score***
*wave 1 respondent numeracy  score
gen r`wavenum'numer_e= .
replace r`wavenum'numer_e = cfmscr 
replace r`wavenum'numer_e= .m if inlist(cfmscr,-1,-2)
replace r`wavenum'numer_e = .d if cfmscr==-8
replace r`wavenum'numer_e = .r if cfmscr==-9
replace r`wavenum'numer_e= .p if cfmscr==-1 & askpx1 == 1
label variable r`wavenum'numer_e "r`wavenum'numer_e:w`wavenum' r numeracy  score"

*wave 1 spouse numeracy  score
gen s`wavenum'numer_e =.
spouse r`wavenum'numer_e, result(s`wavenum'numer_e) wave(1)
label variable s`wavenum'numer_e "s`wavenum'numer_e:w`wavenum' s numeracy  score"

*check 

***immediate word recall***
*wave 1 respondent immediate word recall
gen r`wavenum'imrc =.
replace r`wavenum'imrc = cflisen if inrange(cflisen,0,10)
replace r`wavenum'imrc = .m if inlist(cflisen,-1,-2)
replace r`wavenum'imrc = .d if cflisen==-8
replace r`wavenum'imrc = .r if cflisen==-9
replace r`wavenum'imrc = .p if cflisen==-1 & askpx1 == 1
label variable r`wavenum'imrc "r`wavenum'imrc:w`wavenum' r immediate word recall"

*wave 1 spouse immediate word recall
gen s`wavenum'imrc =.
spouse r`wavenum'imrc, result(s`wavenum'imrc) wave(1)
label variable s`wavenum'imrc "s`wavenum'imrc:w`wavenum' s immediate word recall"

*check 

*wave 1 respondent whether word list read by computer or interviewer
gen r`wavenum'readrc =.
missing_w`wavenum' cftest, result(r`wavenum'readrc)
replace r`wavenum'readrc = .p if askpx1 == 1
replace r`wavenum'readrc = 1 if cftest == 1
replace r`wavenum'readrc = 2 if cftest == 2
label variable r`wavenum'readrc "r`wavenum'readrc:w`wavenum' r word recall list read by"
label values r`wavenum'readrc readrc

*wave 1 spouse whether word list read by computer or interviewer
gen s`wavenum'readrc =.
spouse r`wavenum'readrc, result(s`wavenum'readrc) wave(`wavenum')
label variable s`wavenum'readrc "s`wavenum'readrc:w`wavenum' s word recall list read by"
label values s`wavenum'readrc readrc

*check 

***delayed word recall***
*wave 1 respondent delayed word recall
gen r`wavenum'dlrc =.
replace r`wavenum'dlrc = cflisd if inrange(cflisd,0,10)
replace r`wavenum'dlrc = .m if inlist(cflisd,-1,-2)
replace r`wavenum'dlrc = .d if cflisd==-8
replace r`wavenum'dlrc = .r if cflisd==-9
replace r`wavenum'dlrc = .p if cflisd==-1 & askpx1 == 1
label variable r`wavenum'dlrc "r`wavenum'dlrc:w`wavenum' r delayed word recall"

*wave 1 spouse delayed word recall
gen s`wavenum'dlrc =.
spouse r`wavenum'dlrc, result(s`wavenum'dlrc) wave(1)
label variable s`wavenum'dlrc "s`wavenum'dlrc:w`wavenum' s delayed word recall"

*check 

***recall summary  score***
*wave 1 respondent recall summary  score
egen r`wavenum'tr20 = rowtotal(r`wavenum'imrc r`wavenum'dlrc) 
replace r`wavenum'tr20 = . if r`wavenum'imrc == . & r`wavenum'dlrc == .
replace r`wavenum'tr20 = .m if r`wavenum'imrc == .m & r`wavenum'dlrc == .m
replace r`wavenum'tr20 = .d if r`wavenum'imrc == .d & r`wavenum'dlrc == .d
replace r`wavenum'tr20 = .r if r`wavenum'imrc == .r & r`wavenum'dlrc == .r
replace r`wavenum'tr20 = .p if r`wavenum'imrc == .p & r`wavenum'dlrc == .p
label variable r`wavenum'tr20 "r`wavenum'tr20:w`wavenum' r recall summary  score"

*wave 1 spouse recall summary  score
gen s`wavenum'tr20 = .
spouse r`wavenum'tr20, result(s`wavenum'tr20) wave(1)
label variable s`wavenum'tr20 "s`wavenum'tr20:w`wavenum' s recall summary  score"

*check 

***Prospective Memory: Task 1***
*wave 1 respondent prospective memory task 1
gen r`wavenum'prmt1 = .
replace r`wavenum'prmt1 = .m if cfmems == -1
replace r`wavenum'prmt1 = .d if cfmems == -8
replace r`wavenum'prmt1 = .r if cfmems == -9
replace r`wavenum'prmt1 = .p if askpx1 == 1
replace r`wavenum'prmt1 = 0 if cfmems == 5
replace r`wavenum'prmt1 = 1 if cfmems == 4
replace r`wavenum'prmt1 = 2 if cfmems == 3
replace r`wavenum'prmt1 = 3 if cfmems == 2
replace r`wavenum'prmt1 = 4 if cfmems == 1
label variable r`wavenum'prmt1 "r`wavenum'prmt1:w`wavenum' r prospective memory task 1"
label values r`wavenum'prmt1 prmemtask1

*wave 1 spouse prospective memory task 1
gen s`wavenum'prmt1 = .
spouse r`wavenum'prmt1, result(s`wavenum'prmt1) wave(1)
label variable s`wavenum'prmt1 "s`wavenum'prmt1:w`wavenum' s prospective memory task 1"
label values s`wavenum'prmt1 prmemtask1

***Prospective Memory: Task 2***
*wave 1 respondent prospective memory task 2
gen r`wavenum'prmt2 = .
replace r`wavenum'prmt2 = .m if cfpmb == -1
replace r`wavenum'prmt2 = .d if cfpmb == -8
replace r`wavenum'prmt2 = .r if cfpmb == -9
replace r`wavenum'prmt2 = .p if askpx1 == 1
replace r`wavenum'prmt2 = 0 if cfpmb == 3
replace r`wavenum'prmt2 = 1 if cfpmb == 2
replace r`wavenum'prmt2 = 2 if cfpmb == 1
label variable r`wavenum'prmt2 "r`wavenum'prmt2:w`wavenum' r prospective memory task 2"
label values r`wavenum'prmt2 prmemtask2

*wave 1 spouse prospective memory task 2
gen s`wavenum'prmt2 = .
spouse r`wavenum'prmt2, result(s`wavenum'prmt2) wave(1)
label variable s`wavenum'prmt2 "s`wavenum'prmt2:w`wavenum' s prospective memory task 2"
label values s`wavenum'prmt2 prmemtask2


***drop ELSA wave 1 core file raw variables***
drop `cog_w1_core'




*set wave number
local wavenum=2
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 2 core data***
local cog_w2_core  CfLisEn CfLisD CfDatM CfDatD CfDatY CfDay CfAni askpx1 CfMetM ///
                   CfTest CfImp CfWho1 CfWho2 CfWho3 CfWho4 CfMemS 
                     
merge 1:1 idauniq using "$wave_2_core", keepusing(`cog_w2_core') nogen



****cognition testing status***
**wave 2 respondent cognition testing status
*gen r`wavenum'status = .
*replace r`wavenum'status = 1 if askpx1 == -1 & inw`wavenum' == 1
*replace r`wavenum'status = 2 if askpx1 == 1 & inw`wavenum' == 1
*replace r`wavenum'status = 3 if inw`wavenum' == 0
*label variable r`wavenum'status "r`wavenum'status:w`wavenum' eligibility status"
*label values r`wavenum'status cogelig
*
**wave 2 spouse cognition testing status
*gen s`wavenum'status = .
*spouse r`wavenum'status, result(s`wavenum'status) wave(`wavenum')
*label variable s`wavenum'status "s`wavenum'status:w`wavenum' eligibility status"
*label values s`wavenum'status cogelig

***cognition testing conditions***
*wave 2 respondent whether factors impaired cognition tests
gen r`wavenum'cogimp= .
missing_w`wavenum' CfImp, result(r`wavenum'cogimp)
replace r`wavenum'cogimp = .p if askpx1 == 1
replace r`wavenum'cogimp = 0 if CfImp == 2
replace r`wavenum'cogimp = 1 if CfImp == 1 
label variable r`wavenum'cogimp "r`wavenum'cogimp:w`wavenum' r whether factors impaired cognition tests"
label values r`wavenum'cogimp imp

*wave 2 spouse whether factors impaired cognition tests
gen s`wavenum'cogimp =.
spouse r`wavenum'cogimp, result(s`wavenum'cogimp) wave(`wavenum')
label variable s`wavenum'cogimp "s`wavenum'cogimp:w`wavenum' s whether factors impaired cognition tests"
label values s`wavenum'cogimp imp

*check 

*wave 2 respondent whether other people present during cognition tests
gen r`wavenum'cogothp= .
missing_w`wavenum' CfWho1 CfWho2 CfWho3 CfWho4, result(r`wavenum'cogothp)
replace r`wavenum'cogothp = .p if askpx1 == 1
replace r`wavenum'cogothp = 0 if CfWho1 == 1 | CfWho2 == 1 | CfWho3 == 1 | CfWho4 == 1
replace r`wavenum'cogothp = 1 if inlist(CfWho1,2,3,4,5) | inlist(CfWho2,2,3,4,5) | inlist(CfWho3,2,3,4,5) | inlist(CfWho4,2,3,4,5)
label variable r`wavenum'cogothp "r`wavenum'cogothp:w`wavenum' r whether other people present during cog tests"
label values r`wavenum'cogothp imp

*wave 2 spouse whether other people in room during cognition tests
gen s`wavenum'cogothp =.
spouse r`wavenum'cogothp, result(s`wavenum'cogothp) wave(`wavenum')
label variable s`wavenum'cogothp "s`wavenum'cogothp:w`wavenum' s whether other people present during cog tests"
label values s`wavenum'cogothp imp

*check 

***cognition month naming***
*wave 2 respondent cognition month naming
gen r`wavenum'mo= .
replace r`wavenum'mo = 1 if CfDatM==1 
replace r`wavenum'mo = 0 if CfDatM==2
replace r`wavenum'mo = .m if inlist(CfDatM,-1,-2)
replace r`wavenum'mo = .d if CfDatM==-8
replace r`wavenum'mo = .r if CfDatM==-9
replace r`wavenum'mo = .p if CfDatM==-1 & askpx1 == 1
label variable r`wavenum'mo "r`wavenum'mo:w`wavenum' r cognition date naming-month"
label values r`wavenum'mo monthnaming

*wave 2 spouse month naming
gen s`wavenum'mo =.
spouse r`wavenum'mo, result(s`wavenum'mo) wave(2)
label variable s`wavenum'mo "s`wavenum'mo:w`wavenum' s cognition date naming-month"
label values s`wavenum'mo monthnaming

*check 

***cognition day naming***
*wave 2 respondent cognition day naming
gen r`wavenum'dy= .
replace r`wavenum'dy = 1 if CfDatD==1 
replace r`wavenum'dy = 0 if CfDatD==2
replace r`wavenum'dy = .m if inlist(CfDatD,-1,-2)
replace r`wavenum'dy = .d if CfDatD==-8
replace r`wavenum'dy = .r if CfDatD==-9
replace r`wavenum'dy = .p if CfDatD==-1 & askpx1 == 1
label variable r`wavenum'dy "r`wavenum'dy:w`wavenum' r cognition date naming-day of month"
label values r`wavenum'dy daynaming

*wave 2 spouse day naming
gen s`wavenum'dy =.
spouse r`wavenum'dy, result(s`wavenum'dy) wave(2)
label variable s`wavenum'dy "s`wavenum'dy:w`wavenum' s cognition date naming-day of month"
label values s`wavenum'dy daynaming

*check 

***cognition year naming***
*wave 2 respondent cognition year naming
gen r`wavenum'yr= .
replace r`wavenum'yr = 1 if CfDatY==1 
replace r`wavenum'yr = 0 if CfDatY==2
replace r`wavenum'yr = .m if inlist(CfDatY,-1,-2)
replace r`wavenum'yr = .d if CfDatY==-8
replace r`wavenum'yr = .r if CfDatY==-9
replace r`wavenum'yr = .p if CfDatY==-1 & askpx1 == 1
label variable r`wavenum'yr "r`wavenum'yr:w`wavenum' r cognition date naming-year"
label values r`wavenum'yr yeaernaming

*wave 2 spouse year naming
gen s`wavenum'yr =.
spouse r`wavenum'yr, result(s`wavenum'yr) wave(2)
label variable s`wavenum'yr "s`wavenum'yr:w`wavenum' s cognition date naming-year"
label values s`wavenum'yr yeaernaming 

*check 

***cognition day of week naming***
*wave 2 respondent cognition day of week naming
gen r`wavenum'dw= .
replace r`wavenum'dw = 1 if CfDay==1 
replace r`wavenum'dw = 0 if CfDay==2
replace r`wavenum'dw = .m if inlist(CfDay,-1,-2)
replace r`wavenum'dw = .d if CfDay==-8
replace r`wavenum'dw = .r if CfDay==-9
replace r`wavenum'dw = .p if CfDay==-1 & askpx1 == 1
label variable r`wavenum'dw "r`wavenum'dw:w`wavenum' r cognition date naming-day of week"
label values r`wavenum'dw daywnaming

*wave 2 spouse day of week naming
gen s`wavenum'dw =.
spouse r`wavenum'dw, result(s`wavenum'dw) wave(2)
label variable s`wavenum'dw "s`wavenum'dw:w`wavenum' s cognition date naming-day of week"
label values s`wavenum'dw daywnaming

*check 

****cognition orient***
**wave 2 respondent cognition orient
egen r`wavenum'orient = rowtotal(r`wavenum'mo r`wavenum'dy r`wavenum'yr r`wavenum'dw) 
replace r`wavenum'orient= . if r`wavenum'mo== . & r`wavenum'dy== . & r`wavenum'yr== . & r`wavenum'dw== .
replace r`wavenum'orient= .m if r`wavenum'mo== .m & r`wavenum'dy== .m & r`wavenum'yr== .m & r`wavenum'dw== .m
replace r`wavenum'orient= .p if r`wavenum'mo== .p & r`wavenum'dy== .p & r`wavenum'yr== .p & r`wavenum'dw== .p
replace r`wavenum'orient= .d if r`wavenum'mo== .d & r`wavenum'dy== .d & r`wavenum'yr== .d & r`wavenum'dw== .d
replace r`wavenum'orient= .r if r`wavenum'mo== .r & r`wavenum'dy== .r & r`wavenum'yr== .r & r`wavenum'dw== .r
label variable r`wavenum'orient "r`wavenum'orient:w`wavenum' r cognition orient(summary date naming)"

**wave 2 spouse cognition orient
gen  s`wavenum'orient =.
spouse r`wavenum'orient, result(s`wavenum'orient) wave(2)
label variable  s`wavenum'orient "s`wavenum'orient:w`wavenum' s cognition orient (summary date naming)"

*check

***Self-reported memory***
*wave 2 respondent self-reported memory
gen r`wavenum'slfmem = .
replace r`wavenum'slfmem = CfMetM
replace r`wavenum'slfmem = .m if inlist(CfMetM,-1,-2)
replace r`wavenum'slfmem = .d if CfMetM==-8
replace r`wavenum'slfmem = .r if CfMetM==-9
replace r`wavenum'slfmem = .p if CfMetM==-1 & askpx1 == 1
label variable r`wavenum'slfmem "r`wavenum'slfmem:w`wavenum' r Self-reported memory"
label values r`wavenum'slfmem memory

**wave 2 spouse Self-reported memory***
gen  s`wavenum'slfmem =.
spouse r`wavenum'slfmem, result(s`wavenum'slfmem) wave(2)
label variable  s`wavenum'slfmem "s`wavenum'slfmem:w`wavenum' s Self-reported memory"
label values s`wavenum'slfmem memory 

*check 

***verbal fluency score***
*wave 2 respondent verbal fluency score
gen r`wavenum'verbf = .
replace r`wavenum'verbf = CfAni if inrange(CfAni,0,100)
replace r`wavenum'verbf = .m if inlist(CfAni,-1,-2)
replace r`wavenum'verbf = .d if CfAni==-8
replace r`wavenum'verbf = .r if CfAni==-9
replace r`wavenum'verbf = .p if CfAni==-1 & askpx1 == 1
label variable r`wavenum'verbf "r`wavenum'verbf:w`wavenum' r verbal fluency score"

*wave 2 spouse verbal fluency score
gen s`wavenum'verbf =.
spouse r`wavenum'verbf, result(s`wavenum'verbf) wave(2)
label variable s`wavenum'verbf "s`wavenum'verbf:w`wavenum' s verbal fluency score"

*check 

*wave2 has no numeracy section*

***immediate word recall***
*wave 2 respondent immediate word recall
gen r`wavenum'imrc =.
replace r`wavenum'imrc = CfLisEn if inrange(CfLisEn,0,10)
replace r`wavenum'imrc = .m if inlist(CfLisEn,-1,-2)
replace r`wavenum'imrc = .d if CfLisEn==-8
replace r`wavenum'imrc = .r if CfLisEn==-9
replace r`wavenum'imrc = .p if CfLisEn==-1 & askpx1 == 1
label variable r`wavenum'imrc "r`wavenum'imrc:w`wavenum' r immediate word recall"

*wave 2 spouse immediate word recall
gen s`wavenum'imrc =.
spouse r`wavenum'imrc, result(s`wavenum'imrc) wave(2)
label variable s`wavenum'imrc "s`wavenum'imrc:w`wavenum' s immediate word recall"

*check 

*wave 2 respondent whether word list read by computer or interviewer
gen r`wavenum'readrc =.
missing_w`wavenum' CfTest, result(r`wavenum'readrc)
replace r`wavenum'readrc = .p if askpx1 == 1
replace r`wavenum'readrc = 1 if CfTest == 1
replace r`wavenum'readrc = 2 if CfTest == 2
label variable r`wavenum'readrc "r`wavenum'readrc:w`wavenum' r word recall list read by"
label values r`wavenum'readrc readrc

*wave 2 spouse whether word list read by computer or interviewer
gen s`wavenum'readrc =.
spouse r`wavenum'readrc, result(s`wavenum'readrc) wave(`wavenum')
label variable s`wavenum'readrc "s`wavenum'readrc:w`wavenum' s word recall list read by"
label values s`wavenum'readrc readrc

*check 

***delayed word recall***
*wave 2 respondent delayed word recall
gen r`wavenum'dlrc =.
replace r`wavenum'dlrc = CfLisD if inrange(CfLisD,0,10)
replace r`wavenum'dlrc = .m if inlist(CfLisD,-1,-2)
replace r`wavenum'dlrc = .d if CfLisD==-8
replace r`wavenum'dlrc = .r if CfLisD==-9
replace r`wavenum'dlrc = .p if CfLisD==-1 & askpx1 == 1
label variable r`wavenum'dlrc "r`wavenum'dlrc:w`wavenum' r delayed word recall"

*wave 2 spouse delayed word recall
gen s`wavenum'dlrc =.
spouse r`wavenum'dlrc, result(s`wavenum'dlrc) wave(2)
label variable s`wavenum'dlrc "s`wavenum'dlrc:w`wavenum' s delayed word recall"

*check 

***recall summary  score***
*wave 2 respondent recall summary  score
egen r`wavenum'tr20 = rowtotal(r`wavenum'imrc r`wavenum'dlrc) 
replace r`wavenum'tr20= . if r`wavenum'imrc== . & r`wavenum'dlrc== .
replace r`wavenum'tr20= .m if r`wavenum'imrc== .m & r`wavenum'dlrc== .m
replace r`wavenum'tr20= .d if r`wavenum'imrc== .d & r`wavenum'dlrc== .d
replace r`wavenum'tr20= .r if r`wavenum'imrc== .r & r`wavenum'dlrc== .r
replace r`wavenum'tr20= .p if r`wavenum'imrc== .p & r`wavenum'dlrc== .p
label variable r`wavenum'tr20 "r2tr20:w2 r recall summary  score"

*wave 2 spouse recall summary  score
gen s2tr20 =.
spouse r2tr20, result(s2tr20) wave(2)
label variable s2tr20 "s2tr20:w2 s recall summary  score"

*check 

***Prospective Memory: Task 1***
*wave 2 respondent prospective memory task 1
gen r`wavenum'prmt1 = .
replace r`wavenum'prmt1 = .m if CfMemS == -1
replace r`wavenum'prmt1 = .d if CfMemS == -8
replace r`wavenum'prmt1 = .r if CfMemS == -9
replace r`wavenum'prmt1 = .p if askpx1 == 1
replace r`wavenum'prmt1 = 0 if CfMemS == 5
replace r`wavenum'prmt1 = 1 if CfMemS == 4
replace r`wavenum'prmt1 = 2 if CfMemS == 3
replace r`wavenum'prmt1 = 3 if CfMemS == 2
replace r`wavenum'prmt1 = 4 if CfMemS == 1
label variable r`wavenum'prmt1 "r`wavenum'prmt1:w`wavenum' r prospective memory task 1"
label values r`wavenum'prmt1 prmemtask1

*wave 2 spouse prospective memory task 1
gen s`wavenum'prmt1 = .
spouse r`wavenum'prmt1, result(s`wavenum'prmt1) wave(1)
label variable s`wavenum'prmt1 "s`wavenum'prmt1:w`wavenum' s prospective memory task 1"
label values s`wavenum'prmt1 prmemtask1

****Prospective Memory: task 2 not in wave 2

***drop ELSA wave 2 core file raw variables***
drop `cog_w2_core'

******************************************************************************************



*set wave number
local wavenum=3
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 3 core data***
local cog_w3_core cfmetm cflisen cflisd cfdatm cfdatd cfdaty cfday cfani askpx ///
                  cftest cfimp cfwhonon cfmems
merge 1:1 idauniq using "$wave_3_core", keepusing(`cog_w3_core') nogen


****cognition testing status***
**wave 3 respondent cognition testing status
*gen r`wavenum'status = .
*replace r`wavenum'status = 1 if askpx == -1 & inw`wavenum' == 1
*replace r`wavenum'status = 2 if askpx == 1 & inw`wavenum' == 1
*replace r`wavenum'status = 3 if inw`wavenum' == 0
*label variable r`wavenum'status "r`wavenum'status:w`wavenum' eligibility status"
*label values r`wavenum'status cogelig
*
**wave 3 spouse cognition testing status
*gen s`wavenum'status = .
*spouse r`wavenum'status, result(s`wavenum'status) wave(`wavenum')
*label variable s`wavenum'status "s`wavenum'status:w`wavenum' eligibility status"
*label values s`wavenum'status cogelig

***cognition testing conditions***
*wave 3 respondent whether factors impaired cognition tests
gen r`wavenum'cogimp= .
missing_w`wavenum' cfimp, result(r`wavenum'cogimp)
replace r`wavenum'cogimp = .p if askpx == 1
replace r`wavenum'cogimp = 0 if cfimp == 2
replace r`wavenum'cogimp = 1 if cfimp == 1 
label variable r`wavenum'cogimp "r`wavenum'cogimp:w`wavenum' r whether factors impaired cognition tests"
label values r`wavenum'cogimp imp

*wave 3 spouse whether factors impaired cognition tests
gen s`wavenum'cogimp =.
spouse r`wavenum'cogimp, result(s`wavenum'cogimp) wave(`wavenum')
label variable s`wavenum'cogimp "s`wavenum'cogimp:w`wavenum' s whether factors impaired cognition tests"
label values s`wavenum'cogimp imp

*check 

*wave 3 respondent whether other people present during cognition tests
gen r`wavenum'cogothp= .
missing_w`wavenum' cfwhonon, result(r`wavenum'cogothp)
replace r`wavenum'cogothp = .p if askpx == 1
replace r`wavenum'cogothp = 0 if cfwhonon == 1
replace r`wavenum'cogothp = 1 if cfwhonon == 0
label variable r`wavenum'cogothp "r`wavenum'cogothp:w`wavenum' r whether other people present during cog tests"
label values r`wavenum'cogothp imp

*wave 3 spouse whether other people in room during cognition tests
gen s`wavenum'cogothp =.
spouse r`wavenum'cogothp, result(s`wavenum'cogothp) wave(`wavenum')
label variable s`wavenum'cogothp "s`wavenum'cogothp:w`wavenum' s whether other people present during cog tests"
label values s`wavenum'cogothp imp

*check 

***cognition month naming***
*wave 3 respondent cognition month naming
gen r`wavenum'mo= .
replace r`wavenum'mo = 1 if cfdatm==1 
replace r`wavenum'mo = 0 if cfdatm==2
replace r`wavenum'mo = .m if inlist(cfdatm,-1,-2)
replace r`wavenum'mo = .d if cfdatm==-8
replace r`wavenum'mo = .r if cfdatm==-9
replace r`wavenum'mo = .p if cfdatm==-1 & askpx == 1
label variable r`wavenum'mo "r`wavenum'mo:w`wavenum' r cognition date naming-month"
label values r`wavenum'mo monthnaming

*wave 3 spouse month naming
gen s`wavenum'mo = .
spouse r`wavenum'mo, result(s`wavenum'mo) wave(3)
label variable s`wavenum'mo "s`wavenum'mo:w`wavenum' s cognition date naming-month"
label values s`wavenum'mo monthnaming

*check 

***cognition day naming***
*wave 3 respondent cognition day naming
gen r`wavenum'dy= .
replace r`wavenum'dy = 1 if cfdatd==1 
replace r`wavenum'dy = 0 if cfdatd==2
replace r`wavenum'dy = .m if inlist(cfdatd,-1,-2)
replace r`wavenum'dy = .d if cfdatd==-8
replace r`wavenum'dy = .r if cfdatd==-9
replace r`wavenum'dy = .p if cfdatd==-1 & askpx == 1
label variable r`wavenum'dy "r`wavenum'dy:w`wavenum' r cognition date naming-day of month"
label values r`wavenum'dy daynaming

*wave 3 spouse day naming
gen s`wavenum'dy = .
spouse r`wavenum'dy, result(s`wavenum'dy) wave(3)
label variable s`wavenum'dy "s`wavenum'dy:w`wavenum' s cognition date naming-day of month"
label values s`wavenum'dy daynaming

*check 

***cognition year naming***
*wave 3 respondent cognition year naming
gen r`wavenum'yr= .
replace r`wavenum'yr = 1 if cfdaty==1 
replace r`wavenum'yr = 0 if cfdaty==2
replace r`wavenum'yr = .m if inlist(cfdaty,-1,-2)
replace r`wavenum'yr = .d if cfdaty==-8
replace r`wavenum'yr = .r if cfdaty==-9
replace r`wavenum'yr = .p if cfdaty==-1 & askpx == 1
label variable r`wavenum'yr "r`wavenum'yr:w`wavenum' r cognition date naming-year"
label values r`wavenum'yr yeaernaming

*wave 3 spouse year naming
gen s`wavenum'yr =.
spouse r`wavenum'yr, result(s`wavenum'yr) wave(3)
label variable s`wavenum'yr "s`wavenum'yr:w`wavenum' s cognition date naming-year"
label values s`wavenum'yr yeaernaming

*check 

***cognition day of week naming***
*wave 3 respondent cognition day of week naming
gen r`wavenum'dw= .
replace r`wavenum'dw = 1 if cfday==1 
replace r`wavenum'dw = 0 if cfday==2
replace r`wavenum'dw = .m if inlist(cfday,-1,-2)
replace r`wavenum'dw = .d if cfday==-8
replace r`wavenum'dw = .r if cfday==-9
replace r`wavenum'dw = .p if cfday==-1 & askpx == 1
label variable r`wavenum'dw "r`wavenum'dw:w`wavenum' r cognition date naming-day of week"
label values r`wavenum'dw daywnaming

*wave 3 spouse day of week naming
gen s`wavenum'dw = .
spouse r`wavenum'dw, result(s`wavenum'dw) wave(3)
label variable s`wavenum'dw "s`wavenum'dw:w`wavenum' s cognition date naming-day of week"
label values s`wavenum'dw daywnaming

*check 

****cognition orient***
**wave 3 respondent cognition orient
egen r`wavenum'orient = rowtotal(r`wavenum'mo r`wavenum'dy r`wavenum'yr r`wavenum'dw) 
replace r`wavenum'orient= . if r`wavenum'mo== . & r`wavenum'dy== . & r`wavenum'yr== . & r`wavenum'dw== .
replace r`wavenum'orient= .m if r`wavenum'mo== .m & r`wavenum'dy== .m & r`wavenum'yr== .m & r`wavenum'dw== .m
replace r`wavenum'orient= .d if r`wavenum'mo== .d & r`wavenum'dy== .d & r`wavenum'yr== .d & r`wavenum'dw== .d
replace r`wavenum'orient= .r if r`wavenum'mo== .r & r`wavenum'dy== .r & r`wavenum'yr== .r & r`wavenum'dw== .r
replace r`wavenum'orient= .p if r`wavenum'mo== .p & r`wavenum'dy== .p & r`wavenum'yr== .p & r`wavenum'dw== .p
label variable r`wavenum'orient "r`wavenum'orient:w`wavenum' r cognition orient(summary date naming)"

**wave 3 spouse cognition orient
gen  s`wavenum'orient =.
spouse r`wavenum'orient, result(s`wavenum'orient) wave(3)
label variable  s`wavenum'orient "s`wavenum'orient:w`wavenum' s cognition orient (summary date naming)"

*check

***Self-reported memory***
*wave 3 respondent self-reported memory
gen r`wavenum'slfmem = .
replace r`wavenum'slfmem = cfmetm
replace r`wavenum'slfmem = .m if inlist(cfmetm,-1,-2)
replace r`wavenum'slfmem = .d if cfmetm==-8
replace r`wavenum'slfmem = .r if cfmetm==-9
replace r`wavenum'slfmem = .p if cfmetm==-1 & askpx == 1
label variable r`wavenum'slfmem "r`wavenum'slfmem:w`wavenum' r Self-reported memory"
label values r`wavenum'slfmem memory

**wave 3 spouse Self-reported memory***
gen  s`wavenum'slfmem =.
spouse r`wavenum'slfmem, result(s`wavenum'slfmem) wave(3)
label variable s`wavenum'slfmem "s`wavenum'slfmem:w`wavenum' s Self-reported memory"
label values s`wavenum'slfmem memory

*check 

***verbal fluency score***
*wave 3 respondent verbal fluency score
gen r`wavenum'verbf= .
replace r`wavenum'verbf = cfani if inrange(cfani,0,100)
replace r`wavenum'verbf = .m if inlist(cfani,-1,-2)
replace r`wavenum'verbf = .d if cfani==-8
replace r`wavenum'verbf = .r if cfani==-9
replace r`wavenum'verbf = .p if cfani==-1 & askpx == 1
label variable r`wavenum'verbf "r`wavenum'verbf:w`wavenum' r verbal fluency score"

*wave 3 spouse verbal fluency score
gen s`wavenum'verbf =.
spouse r`wavenum'verbf, result(s`wavenum'verbf) wave(3)
label variable s`wavenum'verbf "s`wavenum'verbf:w`wavenum' s verbal fluency score"

*check 

***numeracy  score not in wave 3**

***immediate word recall***
*wave 3 respondent immediate word recall
gen r`wavenum'imrc = .
replace r`wavenum'imrc = cflisen if inrange(cflisen,0,10)
replace r`wavenum'imrc = .m if inlist(cflisen,-1,-2)
replace r`wavenum'imrc = .d if cflisen==-8
replace r`wavenum'imrc = .r if cflisen==-9
replace r`wavenum'imrc = .p if cflisen==-1 & askpx == 1
label variable r`wavenum'imrc "r`wavenum'imrc:w`wavenum' r immediate word recall"

*wave 3 spouse immediate word recall
gen s`wavenum'imrc = .
spouse r`wavenum'imrc, result(s`wavenum'imrc) wave(3)
label variable s`wavenum'imrc "s`wavenum'imrc:w`wavenum' s immediate word recall"

*check 

*wave 3 respondent whether word list read by computer or interviewer
gen r`wavenum'readrc =.
missing_w`wavenum' cftest, result(r`wavenum'readrc)
replace r`wavenum'readrc = .p if askpx == 1
replace r`wavenum'readrc = 1 if cftest == 1
replace r`wavenum'readrc = 2 if cftest == 2
label variable r`wavenum'readrc "r`wavenum'readrc:w`wavenum' r word recall list read by"
label values r`wavenum'readrc readrc

*wave 3 spouse whether word list read by computer or interviewer
gen s`wavenum'readrc =.
spouse r`wavenum'readrc, result(s`wavenum'readrc) wave(`wavenum')
label variable s`wavenum'readrc "s`wavenum'readrc:w`wavenum' s word recall list read by"
label values s`wavenum'readrc readrc

*check 

***delayed word recall***
*wave 3 respondent delayed word recall
gen r`wavenum'dlrc = .
replace r`wavenum'dlrc = cflisd if inrange(cflisd,0,10)
replace r`wavenum'dlrc = .m if inlist(cflisd,-1,-2) 
replace r`wavenum'dlrc = .d if cflisd==-8
replace r`wavenum'dlrc = .r if cflisd==-9
replace r`wavenum'dlrc = .p if cflisd==-1 & askpx == 1
label variable r`wavenum'dlrc "r`wavenum'dlrc:w`wavenum' r delayed word recall"

*wave 3 spouse delayed word recall
gen s`wavenum'dlrc = .
spouse r`wavenum'dlrc, result(s`wavenum'dlrc) wave(3)
label variable s`wavenum'dlrc "s`wavenum'dlrc:w`wavenum' s delayed word recall"

*check 

***recall summary  score***
*wave 3 respondent recall summary  score
egen r`wavenum'tr20 = rowtotal(r`wavenum'imrc r`wavenum'dlrc) 
replace r`wavenum'tr20= . if r`wavenum'imrc== . & r`wavenum'dlrc== .
replace r`wavenum'tr20= .m if r`wavenum'imrc== .m & r`wavenum'dlrc== .m
replace r`wavenum'tr20= .d if r`wavenum'imrc== .d & r`wavenum'dlrc== .d
replace r`wavenum'tr20= .r if r`wavenum'imrc== .r & r`wavenum'dlrc== .r
replace r`wavenum'tr20= .p if r`wavenum'imrc== .p & r`wavenum'dlrc== .p
label variable r`wavenum'tr20 "r`wavenum'tr20:w`wavenum' r recall summary  score"

*wave 3 spouse recall summary  score
gen s3tr20 = .
spouse r3tr20, result(s3tr20) wave(3)
label variable s`wavenum'tr20 "s`wavenum'tr20:w`wavenum' s recall summary  score"

*check 

***Prospective Memory: Task 1***
*wave 3 respondent prospective memory task 1
gen r`wavenum'prmt1 = .
replace r`wavenum'prmt1 = .m if cfmems == -1
replace r`wavenum'prmt1 = .d if cfmems == -8
replace r`wavenum'prmt1 = .r if cfmems == -9
replace r`wavenum'prmt1 = .p if askpx == 1
replace r`wavenum'prmt1 = 0 if cfmems == 5
replace r`wavenum'prmt1 = 1 if cfmems == 4
replace r`wavenum'prmt1 = 2 if cfmems == 3
replace r`wavenum'prmt1 = 3 if cfmems == 2
replace r`wavenum'prmt1 = 4 if cfmems == 1
label variable r`wavenum'prmt1 "r`wavenum'prmt1:w`wavenum' r prospective memory task 1"
label values r`wavenum'prmt1 prmemtask1

*wave 3 spouse prospective memory task 1
gen s`wavenum'prmt1 = .
spouse r`wavenum'prmt1, result(s`wavenum'prmt1) wave(1)
label variable s`wavenum'prmt1 "s`wavenum'prmt1:w`wavenum' s prospective memory task 1"
label values s`wavenum'prmt1 prmemtask1

***Prospective Memory: Task 2 not in wave 3

***drop ELSA wave 3 core file raw variables***
drop `cog_w3_core'

******************************************************************************************

*set wave number
local wavenum=4
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 4 core data***
local cog_w4_core cfmetm cflisen cflisd cfdatm cfdatd cfdaty cfday cfani askpx ///
                     cfmscr cftest cfimp cfwhonon cfmems
merge 1:1 idauniq using "$wave_4_core", keepusing(`cog_w4_core') nogen


****cognition testing status***
**wave 4 respondent cognition testing status
*gen r`wavenum'status = .
*replace r`wavenum'status = 1 if askpx == -1 & inw`wavenum' == 1
*replace r`wavenum'status = 2 if askpx == 1 & inw`wavenum' == 1
*replace r`wavenum'status = 3 if inw`wavenum' == 0
*label variable r`wavenum'status "r`wavenum'status:w`wavenum' eligibility status"
*label values r`wavenum'status cogelig
*
**wave 4 spouse cognition testing status
*gen s`wavenum'status = .
*spouse r`wavenum'status, result(s`wavenum'status) wave(`wavenum')
*label variable s`wavenum'status "s`wavenum'status:w`wavenum' eligibility status"
*label values s`wavenum'status cogelig

***cognition testing conditions***
*wave 4 respondent whether factors impaired cognition tests
gen r`wavenum'cogimp= .
missing_w`wavenum' cfimp, result(r`wavenum'cogimp)
replace r`wavenum'cogimp = .p if askpx == 1
replace r`wavenum'cogimp = 0 if cfimp == 2
replace r`wavenum'cogimp = 1 if cfimp == 1 
label variable r`wavenum'cogimp "r`wavenum'cogimp:w`wavenum' r whether factors impaired cognition tests"
label values r`wavenum'cogimp imp

*wave 4 spouse whether factors impaired cognition tests
gen s`wavenum'cogimp =.
spouse r`wavenum'cogimp, result(s`wavenum'cogimp) wave(`wavenum')
label variable s`wavenum'cogimp "s`wavenum'cogimp:w`wavenum' s whether factors impaired cognition tests"
label values s`wavenum'cogimp imp

*check 

*wave 4 respondent whether other people present during cognition tests
gen r`wavenum'cogothp= .
missing_w`wavenum' cfwhonon, result(r`wavenum'cogothp)
replace r`wavenum'cogothp = .p if askpx == 1
replace r`wavenum'cogothp = 0 if cfwhonon == 1
replace r`wavenum'cogothp = 1 if cfwhonon == 0
label variable r`wavenum'cogothp "r`wavenum'cogothp:w`wavenum' r whether other people present during cog tests"
label values r`wavenum'cogothp imp

*wave 4 spouse whether other people in room during cognition tests
gen s`wavenum'cogothp =.
spouse r`wavenum'cogothp, result(s`wavenum'cogothp) wave(`wavenum')
label variable s`wavenum'cogothp "s`wavenum'cogothp:w`wavenum' s whether other people present during cog tests"
label values s`wavenum'cogothp imp

*check 

***cognition month naming***
*wave 4 respondent cognition month naming
gen r`wavenum'mo= .
replace r`wavenum'mo = 1 if cfdatm==1 
replace r`wavenum'mo = 0 if cfdatm==2
replace r`wavenum'mo = .m if inlist(cfdatm,-1,-2)
replace r`wavenum'mo = .d if cfdatm==-8
replace r`wavenum'mo = .r if cfdatm==-9
replace r`wavenum'mo = .p if cfdatm==-1 & askpx == 1
label variable r`wavenum'mo "r`wavenum'mo:w`wavenum' r cognition date naming-month"
label values r`wavenum'mo monthnaming

*wave 4 spouse month naming
gen s`wavenum'mo =.
spouse r`wavenum'mo, result(s`wavenum'mo) wave(4)
label variable s`wavenum'mo "s`wavenum'mo:w`wavenum' s cognition date naming-month"
label values s`wavenum'mo monthnaming

*check 

***cognition day naming***
*wave 4 respondent cognition day naming
gen r`wavenum'dy= .
replace r`wavenum'dy = 1 if cfdatd==1 
replace r`wavenum'dy = 0 if cfdatd==2
replace r`wavenum'dy = .m if inlist(cfdatd,-1,-2)
replace r`wavenum'dy = .d if cfdatd==-8
replace r`wavenum'dy = .r if cfdatd==-9
replace r`wavenum'dy = .p if cfdatd==-1 & askpx == 1
label variable r`wavenum'dy "r`wavenum'dy:w`wavenum' r cognition date naming-day of month"
label values r`wavenum'dy daynaming

*wave 4 spouse day naming
gen s`wavenum'dy =.
spouse r`wavenum'dy, result(s`wavenum'dy) wave(4)
label variable s`wavenum'dy "s`wavenum'dy:w`wavenum' s cognition date naming-day of month"
label values s`wavenum'dy daynaming

*check 

***cognition year naming***
*wave 4 respondent cognition year naming
gen r`wavenum'yr= .
replace r`wavenum'yr = 1 if cfdaty==1 
replace r`wavenum'yr = 0 if cfdaty==2
replace r`wavenum'yr = .m if inlist(cfdaty,-1,-2)
replace r`wavenum'yr = .d if cfdaty==-8
replace r`wavenum'yr = .r if cfdaty==-9
replace r`wavenum'yr = .p if cfdaty==-1 & askpx == 1
label variable r`wavenum'yr "r`wavenum'yr:w`wavenum' r cognition date naming-year"
label values r`wavenum'yr yeaernaming

*wave 4 spouse year naming
gen s`wavenum'yr =.
spouse r`wavenum'yr, result(s`wavenum'yr) wave(4)
label variable s`wavenum'yr "s`wavenum'yr:w`wavenum' s cognition date naming-year"
label values s`wavenum'yr yeaernaming

*check 

***cognition day of week naming***
*wave 4 respondent cognition day of week naming
gen r`wavenum'dw= .
replace r`wavenum'dw = 1 if cfday==1 
replace r`wavenum'dw = 0 if cfday==2
replace r`wavenum'dw = .m if inlist(cfday,-1,-2)
replace r`wavenum'dw = .d if cfday==-8
replace r`wavenum'dw = .r if cfday==-9
replace r`wavenum'dw = .p if cfday==-1 & askpx == 1
label variable r`wavenum'dw "r`wavenum'dw:w`wavenum' r cognition date naming-day of week"
label values r`wavenum'dw daywnaming

*wave 4 spouse day of week naming
gen s`wavenum'dw =.
spouse r`wavenum'dw, result(s`wavenum'dw) wave(4)
label variable s`wavenum'dw "s`wavenum'dw:w`wavenum' s cognition date naming-day of week"
label values s`wavenum'dw daywnaming

*check 

****cognition orient***
**wave 4 respondent cognition orient
egen r`wavenum'orient = rowtotal(r`wavenum'mo r`wavenum'dy r`wavenum'yr r`wavenum'dw) 
replace r`wavenum'orient= . if r`wavenum'mo== . & r`wavenum'dy== . & r`wavenum'yr== . & r`wavenum'dw== .
replace r`wavenum'orient= .m if r`wavenum'mo== .m & r`wavenum'dy== .m & r`wavenum'yr== .m & r`wavenum'dw== .m
replace r`wavenum'orient= .d if r`wavenum'mo== .d & r`wavenum'dy== .d & r`wavenum'yr== .d & r`wavenum'dw== .d
replace r`wavenum'orient= .r if r`wavenum'mo== .r & r`wavenum'dy== .r & r`wavenum'yr== .r & r`wavenum'dw== .r
replace r`wavenum'orient= .p if r`wavenum'mo== .p & r`wavenum'dy== .p & r`wavenum'yr== .p & r`wavenum'dw== .p
label variable r`wavenum'orient "r`wavenum'orient:w`wavenum' r cognition orient(summary date naming)"

**wave 4 spouse cognition orient
gen  s`wavenum'orient =.
spouse r`wavenum'orient, result(s`wavenum'orient) wave(4)
label variable  s`wavenum'orient "s`wavenum'orient:w`wavenum' s cognition orient (summary date naming)"

*check

***Self-reported memory***
*wave 4 respondent self-reported memory
gen r`wavenum'slfmem = .
replace r`wavenum'slfmem = cfmetm
replace r`wavenum'slfmem = .m if inlist(cfmetm,-1,-2)
replace r`wavenum'slfmem = .d if cfmetm==-8
replace r`wavenum'slfmem = .r if cfmetm==-9
replace r`wavenum'slfmem = .p if cfmetm==-1 & askpx == 1
label variable r`wavenum'slfmem "r`wavenum'slfmem:w`wavenum' r Self-reported memory"
label values r`wavenum'slfmem memory

**wave 4 spouse Self-reported memory***
gen  s`wavenum'slfmem =.
spouse r`wavenum'slfmem, result(s`wavenum'slfmem) wave(4)
label variable s`wavenum'slfmem "s`wavenum'slfmem:w`wavenum' s Self-reported memory"
label values s`wavenum'slfmem memory

*check 

***verbal fluency score***
*wave 4 respondent verbal fluency score
gen r`wavenum'verbf= .
replace r`wavenum'verbf = cfani if inrange(cfani,0,100)
replace r`wavenum'verbf = .m if inlist(cfani,-1,-2)
replace r`wavenum'verbf = .d if cfani==-8
replace r`wavenum'verbf = .r if cfani==-9
replace r`wavenum'verbf = .p if cfani==-1 & askpx == 1
label variable r`wavenum'verbf "r`wavenum'verbf:w`wavenum' r verbal fluency score"

*wave 4 spouse verbal fluency score
gen s`wavenum'verbf =.
spouse r`wavenum'verbf, result(s`wavenum'verbf) wave(4)
label variable s`wavenum'verbf "s`wavenum'verbf:w`wavenum' s verbal fluency score"

*check 

***numeracy  score***
*wave 4 respondent numeracy  score
gen r`wavenum'numer_e= .
replace r`wavenum'numer_e = cfmscr 
replace r`wavenum'numer_e = .d if cfmscr==-8
replace r`wavenum'numer_e = .r if cfmscr==-9
replace r`wavenum'numer_e = .p if cfmscr==-1 & askpx == 1
replace r`wavenum'numer_e = .m if inlist(cfmscr,-1,-2)
label variable r`wavenum'numer_e "r`wavenum'numer_e:w`wavenum' r numeracy  score"

*wave 4 spouse numeracy  score
gen s`wavenum'numer_e =.
spouse r`wavenum'numer_e, result(s`wavenum'numer_e) wave(4)
label variable s`wavenum'numer_e "s`wavenum'numer_e:w`wavenum' s numeracy  score"

*check 

***immediate word recall***
*wave 4 respondent immediate word recall
gen r`wavenum'imrc =.
replace r`wavenum'imrc = cflisen if inrange(cflisen,0,10)
replace r`wavenum'imrc = .d if cflisen==-8
replace r`wavenum'imrc = .r if cflisen==-9
replace r`wavenum'imrc = .m if inlist(cflisen,-1,-2)
replace r`wavenum'imrc = .p if cflisen==-1 & askpx == 1
label variable r`wavenum'imrc "r`wavenum'imrc:w`wavenum' r immediate word recall"

*wave 4 spouse immediate word recall
gen s`wavenum'imrc =.
spouse r`wavenum'imrc, result(s`wavenum'imrc) wave(4)
label variable s`wavenum'imrc "s`wavenum'imrc:w`wavenum' s immediate word recall"

*check 

*wave 4 respondent whether word list read by computer or interviewer
gen r`wavenum'readrc =.
missing_w`wavenum' cftest, result(r`wavenum'readrc)
replace r`wavenum'readrc = .p if askpx == 1
replace r`wavenum'readrc = 1 if cftest == 1
replace r`wavenum'readrc = 2 if cftest == 2
label variable r`wavenum'readrc "r`wavenum'readrc:w`wavenum' r word recall list read by"
label values r`wavenum'readrc readrc

*wave 4 spouse whether word list read by computer or interviewer
gen s`wavenum'readrc =.
spouse r`wavenum'readrc, result(s`wavenum'readrc) wave(`wavenum')
label variable s`wavenum'readrc "s`wavenum'readrc:w`wavenum' s word recall list read by"
label values s`wavenum'readrc readrc

*check 

***delayed word recall***
*wave 4 respondent delayed word recall
gen r`wavenum'dlrc =.
replace r`wavenum'dlrc = cflisd if inrange(cflisd,0,10)
replace r`wavenum'dlrc = .d if cflisd==-8
replace r`wavenum'dlrc = .r if cflisd==-9
replace r`wavenum'dlrc = .m if inlist(cflisd,-1,-2)
replace r`wavenum'dlrc = .p if cflisd==-1 & askpx == 1
label variable r`wavenum'dlrc "r`wavenum'dlrc:w`wavenum' r delayed word recall"

*wave 4 spouse delayed word recall
gen s`wavenum'dlrc =.
spouse r`wavenum'dlrc, result(s`wavenum'dlrc) wave(4)
label variable s`wavenum'dlrc "s`wavenum'dlrc:w`wavenum' s delayed word recall"

*check 

***recall summary  score***
*wave 4 respondent recall summary  score
egen r`wavenum'tr20 = rowtotal(r`wavenum'imrc r`wavenum'dlrc) 
replace r`wavenum'tr20= . if r`wavenum'imrc== . & r`wavenum'dlrc== .
replace r`wavenum'tr20= .d if r`wavenum'imrc== .d & r`wavenum'dlrc== .d
replace r`wavenum'tr20= .r if r`wavenum'imrc== .r & r`wavenum'dlrc== .r
replace r`wavenum'tr20= .p if r`wavenum'imrc== .p & r`wavenum'dlrc== .p
replace r`wavenum'tr20= .m if r`wavenum'imrc== .m & r`wavenum'dlrc== .m
label variable r`wavenum'tr20 "r`wavenum'tr20:w`wavenum' r recall summary  score"

*wave 4 spouse recall summary  score
gen s4tr20 =.
spouse r4tr20, result(s4tr20) wave(4)
label variable s4tr20 "s4tr20:w`wavenum' s recall summary  score"

*check 

***Prospective Memory: Task 1***
*wave 4 respondent prospective memory task 1
gen r`wavenum'prmt1 = .
replace r`wavenum'prmt1 = .m if cfmems == -1
replace r`wavenum'prmt1 = .d if cfmems == -8
replace r`wavenum'prmt1 = .r if cfmems == -9
replace r`wavenum'prmt1 = .p if askpx == 1
replace r`wavenum'prmt1 = 0 if cfmems == 5
replace r`wavenum'prmt1 = 1 if cfmems == 4
replace r`wavenum'prmt1 = 2 if cfmems == 3
replace r`wavenum'prmt1 = 3 if cfmems == 2
replace r`wavenum'prmt1 = 4 if cfmems == 1
label variable r`wavenum'prmt1 "r`wavenum'prmt1:w`wavenum' r prospective memory task 1"
label values r`wavenum'prmt1 prmemtask1

*wave 4 spouse prospective memory task 1
gen s`wavenum'prmt1 = .
spouse r`wavenum'prmt1, result(s`wavenum'prmt1) wave(1)
label variable s`wavenum'prmt1 "s`wavenum'prmt1:w`wavenum' s prospective memory task 1"
label values s`wavenum'prmt1 prmemtask1

***Prospective Memory: Task 2 not in wave 4

***drop ELSA wave 4 core file raw variables***
drop `cog_w4_core'

******************************************************************************************

*set wave number
local wavenum=5
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 5 core data***
local cog_w5_core  cflisen cflisd cfdatm cfdatd cfdaty cfday cfani askpx ///
                   cftest cfimp cfwhonon cfmems   
merge 1:1 idauniq using "$wave_5_core", keepusing(`cog_w5_core') nogen


****cognition testing status***
**wave 5 respondent cognition testing status
*gen r`wavenum'status = .
*replace r`wavenum'status = 1 if askpx == -1 & inw`wavenum' == 1
*replace r`wavenum'status = 2 if askpx == 1 & inw`wavenum' == 1
*replace r`wavenum'status = 3 if inw`wavenum' == 0
*label variable r`wavenum'status "r`wavenum'status:w`wavenum' eligibility status"
*label values r`wavenum'status cogelig
*
**wave 5 spouse cognition testing status
*gen s`wavenum'status = .
*spouse r`wavenum'status, result(s`wavenum'status) wave(`wavenum')
*label variable s`wavenum'status "s`wavenum'status:w`wavenum' eligibility status"
*label values s`wavenum'status cogelig

***cognition testing conditions***
*wave 5 respondent whether factors impaired cognition tests
gen r`wavenum'cogimp= .
missing_w`wavenum' cfimp, result(r`wavenum'cogimp)
replace r`wavenum'cogimp = .p if askpx == 1
replace r`wavenum'cogimp = 0 if cfimp == 2
replace r`wavenum'cogimp = 1 if cfimp == 1 
label variable r`wavenum'cogimp "r`wavenum'cogimp:w`wavenum' r whether factors impaired cognition tests"
label values r`wavenum'cogimp imp

*wave 5 spouse whether factors impaired cognition tests
gen s`wavenum'cogimp =.
spouse r`wavenum'cogimp, result(s`wavenum'cogimp) wave(`wavenum')
label variable s`wavenum'cogimp "s`wavenum'cogimp:w`wavenum' s whether factors impaired cognition tests"
label values s`wavenum'cogimp imp

*check 

*wave 5 respondent whether other people present during cognition tests
gen r`wavenum'cogothp= .
missing_w`wavenum' cfwhonon, result(r`wavenum'cogothp)
replace r`wavenum'cogothp = .p if askpx == 1
replace r`wavenum'cogothp = 0 if cfwhonon == 1
replace r`wavenum'cogothp = 1 if cfwhonon == 0
label variable r`wavenum'cogothp "r`wavenum'cogothp:w`wavenum' r whether other people present during cog tests"
label values r`wavenum'cogothp imp

*wave 5 spouse whether other people in room during cognition tests
gen s`wavenum'cogothp =.
spouse r`wavenum'cogothp, result(s`wavenum'cogothp) wave(`wavenum')
label variable s`wavenum'cogothp "s`wavenum'cogothp:w`wavenum' s whether other people present during cog tests"
label values s`wavenum'cogothp imp

*check 

***cognition month naming***
*wave 5 respondent cognition month naming
gen r`wavenum'mo= .
replace r`wavenum'mo = 1 if cfdatm==1 
replace r`wavenum'mo = 0 if cfdatm==2
replace r`wavenum'mo = .m if inlist(cfdatm,-1,-2)
replace r`wavenum'mo = .d if cfdatm==-8
replace r`wavenum'mo = .r if cfdatm==-9
replace r`wavenum'mo = .p if cfdatm==-1 & askpx == 1
label variable r`wavenum'mo "r`wavenum'mo:w`wavenum' r cognition date naming-month"
label values r`wavenum'mo monthnaming

*wave 5 spouse month naming
gen s`wavenum'mo =.
spouse r`wavenum'mo, result(s`wavenum'mo) wave(5)
label variable s`wavenum'mo "s`wavenum'mo:w`wavenum' s cognition date naming-month"
label values s`wavenum'mo monthnaming

*check 

***cognition day naming***
*wave 5 respondent cognition day naming
gen r`wavenum'dy= .
replace r`wavenum'dy = 1 if cfdatd==1 
replace r`wavenum'dy = 0 if cfdatd==2
replace r`wavenum'dy = .m if inlist(cfdatd,-1,-2)
replace r`wavenum'dy = .d if cfdatd==-8
replace r`wavenum'dy = .r if cfdatd==-9
replace r`wavenum'dy = .p if cfdatd==-1 & askpx == 1
label variable r`wavenum'dy "r`wavenum'dy:w`wavenum' r cognition date naming-day of month"
label values r`wavenum'dy daynaming

*wave 5 spouse day naming
gen s`wavenum'dy =.
spouse r`wavenum'dy, result(s`wavenum'dy) wave(5)
label variable s`wavenum'dy "s`wavenum'dy:w`wavenum' s cognition date naming-day of month"
label values s`wavenum'dy daynaming

*check 

***cognition year naming***
*wave 5 respondent cognition year naming
gen r`wavenum'yr= .
replace r`wavenum'yr = 1 if cfdaty==1 
replace r`wavenum'yr = 0 if cfdaty==2
replace r`wavenum'yr = .m if inlist(cfdaty,-1,-2)
replace r`wavenum'yr = .d if cfdaty==-8
replace r`wavenum'yr = .r if cfdaty==-9
replace r`wavenum'yr = .p if cfdaty==-1 & askpx == 1
label variable r`wavenum'yr "r`wavenum'yr:w`wavenum' r cognition date naming-year"
label values r`wavenum'yr yeaernaming

*wave 5 spouse year naming
gen s`wavenum'yr =.
spouse r`wavenum'yr, result(s`wavenum'yr) wave(5)
label variable s`wavenum'yr "s`wavenum'yr:w`wavenum' s cognition date naming-year"
label values s`wavenum'yr yeaernaming

*check 

***cognition day of week naming***
*wave 5 respondent cognition day of week naming
gen r`wavenum'dw= .
replace r`wavenum'dw = 1 if cfday==1 
replace r`wavenum'dw = 0 if cfday==2
replace r`wavenum'dw = .m if inlist(cfday,-1,-2)
replace r`wavenum'dw = .d if cfday==-8
replace r`wavenum'dw = .r if cfday==-9
replace r`wavenum'dw = .p if cfday==-1 & askpx == 1
label variable r`wavenum'dw "r`wavenum'dw:w`wavenum' r cognition date naming-day of week"
label values r`wavenum'dw daywnaming

*wave 5 spouse day of week naming
gen s`wavenum'dw =.
spouse r`wavenum'dw, result(s`wavenum'dw) wave(5)
label variable s`wavenum'dw "s`wavenum'dw:w`wavenum' s cognition date naming-day of week"
label values s`wavenum'dw daywnaming

*check 

****cognition orient***
**wave 5 respondent cognition orient
egen r`wavenum'orient = rowtotal(r`wavenum'mo r`wavenum'dy r`wavenum'yr r`wavenum'dw) 
replace r`wavenum'orient= . if r`wavenum'mo== . & r`wavenum'dy== . & r`wavenum'yr== . & r`wavenum'dw== .
replace r`wavenum'orient= .m if r`wavenum'mo== .m & r`wavenum'dy== .m & r`wavenum'yr== .m & r`wavenum'dw== .m
replace r`wavenum'orient= .d if r`wavenum'mo== .d & r`wavenum'dy== .d & r`wavenum'yr== .d & r`wavenum'dw== .d
replace r`wavenum'orient= .r if r`wavenum'mo== .r & r`wavenum'dy== .r & r`wavenum'yr== .r & r`wavenum'dw== .r
replace r`wavenum'orient= .p if r`wavenum'mo== .p & r`wavenum'dy== .p & r`wavenum'yr== .p & r`wavenum'dw== .p
label variable r`wavenum'orient "r`wavenum'orient:w`wavenum' r cognition orient(summary date naming)"

**wave 5 spouse cognition orient
gen  s`wavenum'orient =.
spouse r`wavenum'orient, result(s`wavenum'orient) wave(5)
label variable  s`wavenum'orient "s`wavenum'orient:w`wavenum' s cognition orient (summary date naming)"

*check

***self reported memory dropped**

***verbal fluency score***
*wave 5 respondent verbal fluency score
gen r`wavenum'verbf= .
replace r`wavenum'verbf = cfani if inrange(cfani,0,100)
replace r`wavenum'verbf = .m if inlist(cfani,-1,-2)
replace r`wavenum'verbf = .d if cfani==-8
replace r`wavenum'verbf = .r if cfani==-9
replace r`wavenum'verbf = .p if cfani==-1 & askpx == 1
label variable r`wavenum'verbf "r`wavenum'verbf:w`wavenum' r verbal fluency score"

*wave 5 spouse verbal fluency score
gen s`wavenum'verbf =.
spouse r`wavenum'verbf, result(s`wavenum'verbf) wave(5)
label variable s`wavenum'verbf "s`wavenum'verbf:w`wavenum' s verbal fluency score"

*check 

***numeracy  score not in wave 5***

***immediate word recall***
*wave 5 respondent immediate word recall
gen r`wavenum'imrc =.
replace r`wavenum'imrc = cflisen if inrange(cflisen,0,10)
replace r`wavenum'imrc = .m if inlist(cflisen,-1,-2)
replace r`wavenum'imrc = .d if cflisen==-8
replace r`wavenum'imrc = .r if cflisen==-9
replace r`wavenum'imrc = .p if cflisen==-1 & askpx == 1
label variable r`wavenum'imrc "r`wavenum'imrc:w`wavenum' r immediate word recall"

*wave 5 spouse immediate word recall
gen s`wavenum'imrc =.
spouse r`wavenum'imrc, result(s`wavenum'imrc) wave(5)
label variable s`wavenum'imrc "s`wavenum'imrc:w`wavenum' s immediate word recall"

*check 

*wave 5 respondent whether word list read by computer or interviewer
gen r`wavenum'readrc =.
missing_w`wavenum' cftest, result(r`wavenum'readrc)
replace r`wavenum'readrc = .p if askpx == 1
replace r`wavenum'readrc = 1 if cftest == 1
replace r`wavenum'readrc = 2 if cftest == 2
label variable r`wavenum'readrc "r`wavenum'readrc:w`wavenum' r word recall list read by"
label values r`wavenum'readrc readrc

*wave 5 spouse whether word list read by computer or interviewer
gen s`wavenum'readrc =.
spouse r`wavenum'readrc, result(s`wavenum'readrc) wave(`wavenum')
label variable s`wavenum'readrc "s`wavenum'readrc:w`wavenum' s word recall list read by"
label values s`wavenum'readrc readrc

*check 

***delayed word recall***
*wave 5 respondent delayed word recall
gen r`wavenum'dlrc =.
replace r`wavenum'dlrc = cflisd if inrange(cflisd,0,10)
replace r`wavenum'dlrc = .m if inlist(cflisd,-1,-2)
replace r`wavenum'dlrc = .d if cflisd==-8
replace r`wavenum'dlrc = .r if cflisd==-9
replace r`wavenum'dlrc = .p if cflisd==-1 & askpx == 1
label variable r`wavenum'dlrc "r`wavenum'dlrc:w`wavenum' r delayed word recall"

*wave 5 spouse delayed word recall
gen s`wavenum'dlrc =.
spouse r`wavenum'dlrc, result(s`wavenum'dlrc) wave(5)
label variable s`wavenum'dlrc "s`wavenum'dlrc:w`wavenum' s delayed word recall"

*check 

***recall summary  score***
*wave 5 respondent recall summary  score
egen r`wavenum'tr20 = rowtotal(r`wavenum'imrc r`wavenum'dlrc) 
replace r`wavenum'tr20= . if r`wavenum'imrc== . & r`wavenum'dlrc== .
replace r`wavenum'tr20= .m if r`wavenum'imrc== .m & r`wavenum'dlrc== .m
replace r`wavenum'tr20= .d if r`wavenum'imrc== .d & r`wavenum'dlrc== .d
replace r`wavenum'tr20= .r if r`wavenum'imrc== .r & r`wavenum'dlrc== .r
replace r`wavenum'tr20= .p if r`wavenum'imrc== .p & r`wavenum'dlrc== .p
label variable r`wavenum'tr20 "r`wavenum'tr20:w`wavenum' r recall summary  score"

*wave 5 spouse recall summary  score
gen s5tr20 =.
spouse r5tr20, result(s5tr20) wave(5)
label variable s5tr20 "s`wavenum'tr20:w`wavenum' s recall summary  score"

*check 

***Prospective Memory: Task 1***
*wave 5 respondent prospective memory task 1
gen r`wavenum'prmt1 = .
replace r`wavenum'prmt1 = .m if cfmems == -1
replace r`wavenum'prmt1 = .d if cfmems == -8
replace r`wavenum'prmt1 = .r if cfmems == -9
replace r`wavenum'prmt1 = .p if askpx == 1
replace r`wavenum'prmt1 = 0 if cfmems == 5
replace r`wavenum'prmt1 = 1 if cfmems == 4
replace r`wavenum'prmt1 = 2 if cfmems == 3
replace r`wavenum'prmt1 = 3 if cfmems == 2
replace r`wavenum'prmt1 = 4 if cfmems == 1
label variable r`wavenum'prmt1 "r`wavenum'prmt1:w`wavenum' r prospective memory task 1"
label values r`wavenum'prmt1 prmemtask1

*wave 5 spouse prospective memory task 1
gen s`wavenum'prmt1 = .
spouse r`wavenum'prmt1, result(s`wavenum'prmt1) wave(1)
label variable s`wavenum'prmt1 "s`wavenum'prmt1:w`wavenum' s prospective memory task 1"
label values s`wavenum'prmt1 prmemtask1

***Prospective Memory: Task 2 not in wave 5


***drop ELSA wave 5 core file raw variables***
drop `cog_w5_core'

******************************************************************************************

*set wave number
local wavenum=6
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 6 core data***
local cog_w6_core CfLisEn CfLisD CfDatM CfDatD CfDatY CfDay askpx ///
                    CfMScr CfTest CfImp cfwhonon
merge 1:1 idauniq using "$wave_6_core", keepusing(`cog_w6_core') nogen


****cognition testing status***
**wave 6 respondent cognition testing status
*gen r`wavenum'status = .
*replace r`wavenum'status = 1 if askpx == -1 & inw`wavenum' == 1
*replace r`wavenum'status = 2 if askpx == 1 & inw`wavenum' == 1
*replace r`wavenum'status = 3 if inw`wavenum' == 0
*label variable r`wavenum'status "r`wavenum'status:w`wavenum' eligibility status"
*label values r`wavenum'status cogelig
*
**wave 6 spouse cognition testing status
*gen s`wavenum'status = .
*spouse r`wavenum'status, result(s`wavenum'status) wave(`wavenum')
*label variable s`wavenum'status "s`wavenum'status:w`wavenum' eligibility status"
*label values s`wavenum'status cogelig

***cognition testing conditions***
*wave 6 respondent whether factors impaired cognition tests
gen r`wavenum'cogimp= .
missing_w`wavenum' CfImp, result(r`wavenum'cogimp)
replace r`wavenum'cogimp = .p if askpx == 1
replace r`wavenum'cogimp = 0 if CfImp == 2
replace r`wavenum'cogimp = 1 if CfImp == 1 
label variable r`wavenum'cogimp "r`wavenum'cogimp:w`wavenum' r whether factors impaired cognition tests"
label values r`wavenum'cogimp imp

*wave 6 spouse whether factors impaired cognition tests
gen s`wavenum'cogimp =.
spouse r`wavenum'cogimp, result(s`wavenum'cogimp) wave(`wavenum')
label variable s`wavenum'cogimp "s`wavenum'cogimp:w`wavenum' s whether factors impaired cognition tests"
label values s`wavenum'cogimp imp

*check 

*wave 6 respondent whether other people present during cognition tests
gen r`wavenum'cogothp= .
missing_w`wavenum' cfwhonon, result(r`wavenum'cogothp)
replace r`wavenum'cogothp = .p if askpx == 1
replace r`wavenum'cogothp = 0 if cfwhonon == 1
replace r`wavenum'cogothp = 1 if cfwhonon == 0
label variable r`wavenum'cogothp "r`wavenum'cogothp:w`wavenum' r whether other people present during cog tests"
label values r`wavenum'cogothp imp

*wave 6 spouse whether other people in room during cognition tests
gen s`wavenum'cogothp =.
spouse r`wavenum'cogothp, result(s`wavenum'cogothp) wave(`wavenum')
label variable s`wavenum'cogothp "s`wavenum'cogothp:w`wavenum' s whether other people present during cog tests"
label values s`wavenum'cogothp imp

*check 

***cognition month naming***
*wave 6 respondent cognition month naming
gen r`wavenum'mo= .
replace r`wavenum'mo = 1 if CfDatM==1 
replace r`wavenum'mo = 0 if CfDatM==2
replace r`wavenum'mo = .m if inlist(CfDatM,-1,-2)
replace r`wavenum'mo = .d if CfDatM==-8
replace r`wavenum'mo = .r if CfDatM==-9
replace r`wavenum'mo = .p if CfDatM==-1 & askpx == 1
label variable r`wavenum'mo "r`wavenum'mo:w`wavenum' r cognition date naming-month"
label values r`wavenum'mo monthnaming

*wave 6 spouse month naming
gen s`wavenum'mo =.
spouse r`wavenum'mo, result(s`wavenum'mo) wave(6)
label variable s`wavenum'mo "s`wavenum'mo:w`wavenum' s cognition date naming-month"
label values s`wavenum'mo monthnaming

*check 

***cognition day naming***
*wave 6 respondent cognition day naming
gen r`wavenum'dy= .
replace r`wavenum'dy = 1 if CfDatD==1 
replace r`wavenum'dy = 0 if CfDatD==2
replace r`wavenum'dy = .m if inlist(CfDatD,-1,-2)
replace r`wavenum'dy = .d if CfDatD==-8
replace r`wavenum'dy = .r if CfDatD==-9
replace r`wavenum'dy = .p if CfDatD==-1 & askpx == 1
label variable r`wavenum'dy "r`wavenum'dy:w`wavenum' r cognition date naming-day of month"
label values r`wavenum'dy daynaming

*wave 6 spouse day naming
gen s`wavenum'dy =.
spouse r`wavenum'dy, result(s`wavenum'dy) wave(6)
label variable s`wavenum'dy "s`wavenum'dy:w`wavenum' s cognition date naming-day of month"
label values s`wavenum'dy daynaming

*check 

***cognition year naming***
*wave 6 respondent cognition year naming
gen r`wavenum'yr= .
replace r`wavenum'yr = 1 if CfDatY==1 
replace r`wavenum'yr = 0 if CfDatY==2
replace r`wavenum'yr = .m if inlist(CfDatY,-1,-2)
replace r`wavenum'yr = .d if CfDatY==-8
replace r`wavenum'yr = .r if CfDatY==-9
replace r`wavenum'yr = .p if CfDatY==-1 & askpx == 1
label variable r`wavenum'yr "r`wavenum'yr:w`wavenum' r cognition date naming-year"
label values r`wavenum'yr yeaernaming

*wave 6 spouse year naming
gen s`wavenum'yr =.
spouse r`wavenum'yr, result(s`wavenum'yr) wave(6)
label variable s`wavenum'yr "s`wavenum'yr:w`wavenum' s cognition date naming-year"
label values s`wavenum'yr yeaernaming

*check 

***cognition day of week naming***
*wave 6 respondent cognition day of week naming
gen r`wavenum'dw= .
replace r`wavenum'dw = 1 if CfDay==1 
replace r`wavenum'dw = 0 if CfDay==2
replace r`wavenum'dw = .m if inlist(CfDay,-1,-2)
replace r`wavenum'dw = .d if CfDay==-8
replace r`wavenum'dw = .r if CfDay==-9
replace r`wavenum'dw = .p if CfDay==-1 & askpx == 1
label variable r`wavenum'dw "r`wavenum'dw:w`wavenum' r cognition date naming-day of week"
label values r`wavenum'dw daywnaming

*wave 6 spouse day of week naming
gen s`wavenum'dw =.
spouse r`wavenum'dw, result(s`wavenum'dw) wave(6)
label variable s`wavenum'dw "s`wavenum'dw:w`wavenum' s cognition date naming-day of week"
label values s`wavenum'dw daywnaming

*check 

****cognition orient***
**wave 6 respondent cognition orient
egen r`wavenum'orient = rowtotal(r`wavenum'mo r`wavenum'dy r`wavenum'yr r`wavenum'dw) 
replace r`wavenum'orient= . if r`wavenum'mo== . & r`wavenum'dy== . & r`wavenum'yr== . & r`wavenum'dw== .
replace r`wavenum'orient= .m if r`wavenum'mo== .m & r`wavenum'dy== .m & r`wavenum'yr== .m & r`wavenum'dw== .m
replace r`wavenum'orient= .d if r`wavenum'mo== .d & r`wavenum'dy== .d & r`wavenum'yr== .d & r`wavenum'dw== .d
replace r`wavenum'orient= .r if r`wavenum'mo== .r & r`wavenum'dy== .r & r`wavenum'yr== .r & r`wavenum'dw== .r
replace r`wavenum'orient= .p if r`wavenum'mo== .p & r`wavenum'dy== .p & r`wavenum'yr== .p & r`wavenum'dw== .p
label variable r`wavenum'orient "r`wavenum'orient:w`wavenum' r cognition orient(summary date naming)"

**wave 6 spouse cognition orient
gen  s`wavenum'orient =.
spouse r`wavenum'orient, result(s`wavenum'orient) wave(6)
label variable  s`wavenum'orient "s`wavenum'orient:w`wavenum' s cognition orient (summary date naming)"

*check

***self reported memory dropped**

***verbal fluency score not ask in wave 6***

***numeracy  score***
*wave 6 respondent numeracy  score
gen r`wavenum'numer_e= .
replace r`wavenum'numer_e = CfMScr 
replace r`wavenum'numer_e = .d if CfMScr==-8
replace r`wavenum'numer_e = .r if CfMScr==-9
replace r`wavenum'numer_e = .m if inlist(CfMScr,-1,-2)
replace r`wavenum'numer_e = .p if CfMScr== -1 & askpx == 1
replace r`wavenum'numer_e = .s if CfMScr== -1 &  !mi(r`pre_pre_wavenum'numer_e)
label variable r`wavenum'numer_e "r`wavenum'numer_e:w`wavenum' r numeracy  score"

*wave 6 spouse numeracy  score
gen s`wavenum'numer_e =.
spouse r`wavenum'numer_e, result(s`wavenum'numer_e) wave(6)
label variable s`wavenum'numer_e "s`wavenum'numer_e:w`wavenum' s numeracy  score"

*check 

***immediate word recall***
*wave 6 respondent immediate word recall
gen r`wavenum'imrc =.
replace r`wavenum'imrc = CfLisEn if inrange(CfLisEn,0,10)
replace r`wavenum'imrc = .m if inlist(CfLisEn,-1,-2)
replace r`wavenum'imrc = .d if CfLisEn==-8
replace r`wavenum'imrc = .r if CfLisEn==-9
replace r`wavenum'imrc = .p if CfLisEn==-1 & askpx == 1
label variable r`wavenum'imrc "r`wavenum'imrc:w`wavenum' r immediate word recall"

*wave 6 spouse immediate word recall
gen s`wavenum'imrc =.
spouse r`wavenum'imrc, result(s`wavenum'imrc) wave(6)
label variable s`wavenum'imrc "s`wavenum'imrc:w`wavenum' s immediate word recall"

*check 

*wave 6 respondent whether word list read by computer or interviewer
gen r`wavenum'readrc =.
missing_w`wavenum' CfTest, result(r`wavenum'readrc)
replace r`wavenum'readrc = .p if askpx == 1
replace r`wavenum'readrc = 1 if CfTest == 1
replace r`wavenum'readrc = 2 if CfTest == 2
label variable r`wavenum'readrc "r`wavenum'readrc:w`wavenum' r word recall list read by"
label values r`wavenum'readrc readrc

*wave 6 spouse whether word list read by computer or interviewer
gen s`wavenum'readrc =.
spouse r`wavenum'readrc, result(s`wavenum'readrc) wave(`wavenum')
label variable s`wavenum'readrc "s`wavenum'readrc:w`wavenum' s word recall list read by"
label values s`wavenum'readrc readrc

*check 

***delayed word recall***
*wave 6 respondent delayed word recall
gen r`wavenum'dlrc =.
replace r`wavenum'dlrc = CfLisD if inrange(CfLisD,0,10)
replace r`wavenum'dlrc = .m if inlist(CfLisD,-1,-2)
replace r`wavenum'dlrc = .d if CfLisD==-8
replace r`wavenum'dlrc = .r if CfLisD==-9
replace r`wavenum'dlrc = .p if CfLisD==-1 & askpx == 1
label variable r`wavenum'dlrc "r`wavenum'dlrc:w`wavenum' r delayed word recall"

*wave 6 spouse delayed word recall
gen s`wavenum'dlrc =.
spouse r`wavenum'dlrc, result(s`wavenum'dlrc) wave(6)
label variable s`wavenum'dlrc "s`wavenum'dlrc:w`wavenum' s delayed word recall"

*check 

***recall summary  score***
*wave 6 respondent recall summary  score
egen r`wavenum'tr20 = rowtotal(r`wavenum'imrc r`wavenum'dlrc) 
replace r`wavenum'tr20= . if r`wavenum'imrc== . & r`wavenum'dlrc== .
replace r`wavenum'tr20= .m if r`wavenum'imrc== .m & r`wavenum'dlrc== .m
replace r`wavenum'tr20= .d if r`wavenum'imrc== .d & r`wavenum'dlrc== .d
replace r`wavenum'tr20= .r if r`wavenum'imrc== .r & r`wavenum'dlrc== .r
replace r`wavenum'tr20= .p if r`wavenum'imrc== .p & r`wavenum'dlrc== .p
label variable r`wavenum'tr20 "r`wavenum'tr20:w`wavenum' r recall summary  score"

*wave 6 spouse recall summary  score
gen s6tr20 =.
spouse r6tr20, result(s6tr20) wave(6)
label variable s6tr20 "s`wavenum'tr20:w`wavenum' s recall summary  score"

*check 

***Prospective Memory tasks not in wave 6

***drop ELSA wave 6 core file raw variables***
drop `cog_w6_core'

******************************************************************************************

*set wave number
local wavenum=7
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 7 core data***
local cog_w7_core CfLisEn CfLisD CfDatM CfDatD CfDatY CfDay askpx ///
                    CfMScr CfTest CfImp cfwhonon CfSvA CfSvB CfSvC /// 
                    CfSvD CfSvE CfNmSc CfNmCA CfNmQn CfNmPM CfNmUS ///
                    CfAni CfC20Frst CfC20FScnd CfMetM
merge 1:1 idauniq using "$wave_7_core", keepusing(`cog_w7_core') nogen


****cognition testing status***
**wave 7 respondent cognition testing status
*gen r`wavenum'status = .
*replace r`wavenum'status = 1 if askpx == -1 & inw`wavenum' == 1
*replace r`wavenum'status = 2 if askpx == 1 & inw`wavenum' == 1
*replace r`wavenum'status = 3 if inw`wavenum' == 0
*label variable r`wavenum'status "r`wavenum'status:w`wavenum' eligibility status"
*label values r`wavenum'status cogelig
*
**wave 7 spouse cognition testing status
*gen s`wavenum'status = .
*spouse r`wavenum'status, result(s`wavenum'status) wave(`wavenum')
*label variable s`wavenum'status "s`wavenum'status:w`wavenum' eligibility status"
*label values s`wavenum'status cogelig

***cognition testing conditions***
*wave 7 respondent whether factors impaired cognition tests
gen r`wavenum'cogimp= .
replace r`wavenum'cogimp = .m if CfImp == -1
replace r`wavenum'cogimp = .d if CfImp == -8
replace r`wavenum'cogimp = .r if CfImp == -9
replace r`wavenum'cogimp = .p if askpx == 1
replace r`wavenum'cogimp = 0 if CfImp == 2
replace r`wavenum'cogimp = 1 if CfImp == 1 
label variable r`wavenum'cogimp "r`wavenum'cogimp:w`wavenum' r whether factors impaired cognition tests"
label values r`wavenum'cogimp imp

*wave 7 spouse whether factors impaired cognition tests
gen s`wavenum'cogimp =.
spouse r`wavenum'cogimp, result(s`wavenum'cogimp) wave(`wavenum')
label variable s`wavenum'cogimp "s`wavenum'cogimp:w`wavenum' s whether factors impaired cognition tests"
label values s`wavenum'cogimp imp

*check 

*wave 7 respondent whether other people present during cognition tests
gen r`wavenum'cogothp= .
missing_w`wavenum' cfwhonon, result(r`wavenum'cogothp)
replace r`wavenum'cogothp = .p if askpx == 1
replace r`wavenum'cogothp = 0 if cfwhonon == 1
replace r`wavenum'cogothp = 1 if cfwhonon == 0
label variable r`wavenum'cogothp "r`wavenum'cogothp:w`wavenum' r whether other people present during cog tests"
label values r`wavenum'cogothp imp

*wave 7 spouse whether other people in room during cognition tests
gen s`wavenum'cogothp =.
spouse r`wavenum'cogothp, result(s`wavenum'cogothp) wave(`wavenum')
label variable s`wavenum'cogothp "s`wavenum'cogothp:w`wavenum' s whether other people present during cog tests"
label values s`wavenum'cogothp imp

*check 

***Self-reported memory***
*wave 7 respondent self-reported memory
gen r`wavenum'slfmem = .
replace r`wavenum'slfmem = CfMetM
replace r`wavenum'slfmem = .m if CfMetM==-1
replace r`wavenum'slfmem = .d if CfMetM==-8
replace r`wavenum'slfmem = .r if CfMetM==-9
replace r`wavenum'slfmem = .p if CfMetM==-1 & askpx == 1

label variable r`wavenum'slfmem "r`wavenum'slfmem:w`wavenum' r Self-reported memory"
label values r`wavenum'slfmem memory 

**wave 7 spouse Self-reported memory***
gen  s`wavenum'slfmem =.
spouse r`wavenum'slfmem, result(s`wavenum'slfmem) wave(`wavenum')
label variable  s`wavenum'slfmem "s`wavenum'slfmem:w`wavenum' s Self-reported memory"
label values s`wavenum'slfmem memory

*check 

***cognition month naming***
*wave 7 respondent cognition month naming
gen r`wavenum'mo= .
replace r`wavenum'mo = .m if inlist(CfDatM,-1,-2)
replace r`wavenum'mo = .d if CfDatM==-8
replace r`wavenum'mo = .r if CfDatM==-9
replace r`wavenum'mo = .p if CfDatM==-1 & askpx == 1
replace r`wavenum'mo = 1 if CfDatM==1 
replace r`wavenum'mo = 0 if CfDatM==2
label variable r`wavenum'mo "r`wavenum'mo:w`wavenum' r cognition date naming-month"
label values r`wavenum'mo monthnaming

*wave 7 spouse month naming
gen s`wavenum'mo =.
spouse r`wavenum'mo, result(s`wavenum'mo) wave(7)
label variable s`wavenum'mo "s`wavenum'mo:w`wavenum' s cognition date naming-month"
label values s`wavenum'mo monthnaming

*check 

***cognition day naming***
*wave 7 respondent cognition day naming
gen r`wavenum'dy= .
replace r`wavenum'dy = .m if inlist(CfDatD,-1,-2)
replace r`wavenum'dy = .d if CfDatD==-8
replace r`wavenum'dy = .r if CfDatD==-9
replace r`wavenum'dy = .p if CfDatD==-1 & askpx == 1
replace r`wavenum'dy = 1 if CfDatD==1 
replace r`wavenum'dy = 0 if CfDatD==2
label variable r`wavenum'dy "r`wavenum'dy:w`wavenum' r cognition date naming-day of month"
label values r`wavenum'dy daynaming

*wave 7 spouse day naming
gen s`wavenum'dy =.
spouse r`wavenum'dy, result(s`wavenum'dy) wave(7)
label variable s`wavenum'dy "s`wavenum'dy:w`wavenum' s cognition date naming-day of month"
label values s`wavenum'dy daynaming

*check 

***cognition year naming***
*wave 7 respondent cognition year naming
gen r`wavenum'yr= .
replace r`wavenum'yr = .m if inlist(CfDatY,-1,-2)
replace r`wavenum'yr = .d if CfDatY==-8
replace r`wavenum'yr = .r if CfDatY==-9
replace r`wavenum'yr = .p if CfDatY==-1 & askpx == 1
replace r`wavenum'yr = 1 if CfDatY==1 
replace r`wavenum'yr = 0 if CfDatY==2
label variable r`wavenum'yr "r`wavenum'yr:w`wavenum' r cognition date naming-year"
label values r`wavenum'yr yeaernaming

*wave 7 spouse year naming
gen s`wavenum'yr =.
spouse r`wavenum'yr, result(s`wavenum'yr) wave(7)
label variable s`wavenum'yr "s`wavenum'yr:w`wavenum' s cognition date naming-year"
label values s`wavenum'yr yeaernaming

*check 

***cognition day of week naming***
*wave 7 respondent cognition day of week naming
gen r`wavenum'dw= .
replace r`wavenum'dw = .m if inlist(CfDay,-1,-2)
replace r`wavenum'dw = .d if CfDay==-8
replace r`wavenum'dw = .r if CfDay==-9
replace r`wavenum'dw = .p if CfDay==-1 & askpx == 1
replace r`wavenum'dw = 1 if CfDay==1 
replace r`wavenum'dw = 0 if CfDay==2
label variable r`wavenum'dw "r`wavenum'dw:w`wavenum' r cognition date naming-day of week"
label values r`wavenum'dw daywnaming

*wave 7 spouse day of week naming
gen s`wavenum'dw =.
spouse r`wavenum'dw, result(s`wavenum'dw) wave(7)
label variable s`wavenum'dw "s`wavenum'dw:w`wavenum' s cognition date naming-day of week"
label values s`wavenum'dw daywnaming

*check 

****cognition orient***
**wave 7 respondent cognition orient
egen r`wavenum'orient = rowtotal(r`wavenum'mo r`wavenum'dy r`wavenum'yr r`wavenum'dw) 
replace r`wavenum'orient= . if r`wavenum'mo== . & r`wavenum'dy== . & r`wavenum'yr== . & r`wavenum'dw== .
replace r`wavenum'orient= .m if r`wavenum'mo== .m & r`wavenum'dy== .m & r`wavenum'yr== .m & r`wavenum'dw== .m
replace r`wavenum'orient= .d if r`wavenum'mo== .d & r`wavenum'dy== .d & r`wavenum'yr== .d & r`wavenum'dw== .d
replace r`wavenum'orient= .r if r`wavenum'mo== .r & r`wavenum'dy== .r & r`wavenum'yr== .r & r`wavenum'dw== .r
replace r`wavenum'orient= .p if r`wavenum'mo== .p & r`wavenum'dy== .p & r`wavenum'yr== .p & r`wavenum'dw== .p
label variable r`wavenum'orient "r`wavenum'orient:w`wavenum' r cognition orient(summary date naming)"

**wave 7 spouse cognition orient
gen  s`wavenum'orient =.
spouse r`wavenum'orient, result(s`wavenum'orient) wave(7)
label variable  s`wavenum'orient "s`wavenum'orient:w`wavenum' s cognition orient (summary date naming)"

*check

***numeracy  score***
*wave 7 respondent numeracy  score
gen r`wavenum'numer_e= .
replace r`wavenum'numer_e = CfMScr 
replace r`wavenum'numer_e = .d if CfMScr==-8
replace r`wavenum'numer_e = .r if CfMScr==-9
replace r`wavenum'numer_e = .m if inlist(CfMScr,-1,-2)
replace r`wavenum'numer_e = .p if CfMScr==-1 & askpx == 1
replace r`wavenum'numer_e = .s if CfMScr==-1 & (!mi(r`pre_wavenum'numer_e) | !mi(r4numer_e))

label variable r`wavenum'numer_e "r`wavenum'numer_e:w`wavenum' r numeracy  score"

*wave 7 spouse numeracy  score
gen s`wavenum'numer_e =.
spouse r`wavenum'numer_e, result(s`wavenum'numer_e) wave(7)
label variable s`wavenum'numer_e "s`wavenum'numer_e:w`wavenum' s numeracy  score"

*check 

***immediate word recall***
*wave 7 respondent immediate word recall
gen r`wavenum'imrc =.
replace r`wavenum'imrc = .m if inlist(CfLisEn,-1,-2)
replace r`wavenum'imrc = .d if CfLisEn==-8
replace r`wavenum'imrc = .r if CfLisEn==-9 | CfTest==-9
replace r`wavenum'imrc = .p if CfLisEn==-1 & askpx == 1
replace r`wavenum'imrc = CfLisEn if inrange(CfLisEn,0,10)
label variable r`wavenum'imrc "r`wavenum'imrc:w`wavenum' r immediate word recall"

*wave 7 spouse immediate word recall
gen s`wavenum'imrc =.
spouse r`wavenum'imrc, result(s`wavenum'imrc) wave(7)
label variable s`wavenum'imrc "s`wavenum'imrc:w`wavenum' s immediate word recall"

*check 

*wave 7 respondent whether word list read by computer or interviewer
gen r`wavenum'readrc =.
missing_w`wavenum' CfTest, result(r`wavenum'readrc)
replace r`wavenum'readrc = .p if askpx == 1
replace r`wavenum'readrc = 1 if CfTest == 1
replace r`wavenum'readrc = 2 if CfTest == 2
label variable r`wavenum'readrc "r`wavenum'readrc:w`wavenum' r word recall list read by"
label values r`wavenum'readrc readrc

*wave 7 spouse whether word list read by computer or interviewer
gen s`wavenum'readrc =.
spouse r`wavenum'readrc, result(s`wavenum'readrc) wave(`wavenum')
label variable s`wavenum'readrc "s`wavenum'readrc:w`wavenum' s word recall list read by"
label values s`wavenum'readrc readrc

*check 


***delayed word recall***
*wave 7 respondent delayed word recall
gen r`wavenum'dlrc =.
replace r`wavenum'dlrc = .m if inlist(CfLisD,-1,-2)
replace r`wavenum'dlrc = .d if CfLisD==-8
replace r`wavenum'dlrc = .r if CfLisD==-9 | CfTest==-9
replace r`wavenum'dlrc = .p if CfLisD==-1 & askpx == 1
replace r`wavenum'dlrc = CfLisD if inrange(CfLisD,0,10)
label variable r`wavenum'dlrc "r`wavenum'dlrc:w`wavenum' r delayed word recall"

*wave 7 spouse delayed word recall
gen s`wavenum'dlrc =.
spouse r`wavenum'dlrc, result(s`wavenum'dlrc) wave(7)
label variable s`wavenum'dlrc "s`wavenum'dlrc:w`wavenum' s delayed word recall"

*check 

***recall summary  score***
*wave 7 respondent recall summary  score
egen r`wavenum'tr20 = rowtotal(r`wavenum'imrc r`wavenum'dlrc) 
replace r`wavenum'tr20= . if r`wavenum'imrc== . & r`wavenum'dlrc== .
replace r`wavenum'tr20= .m if r`wavenum'imrc== .m & r`wavenum'dlrc== .m
replace r`wavenum'tr20= .d if r`wavenum'imrc== .d & r`wavenum'dlrc== .d
replace r`wavenum'tr20= .r if r`wavenum'imrc== .r & r`wavenum'dlrc== .r
replace r`wavenum'tr20= .p if r`wavenum'imrc== .p & r`wavenum'dlrc== .p
label variable r`wavenum'tr20 "r`wavenum'tr20:w`wavenum' r recall summary  score"

*wave 7 spouse recall summary  score
gen s`wavenum'tr20 =.
spouse r`wavenum'tr20, result(s`wavenum'tr20) wave(7)
label variable s`wavenum'tr20 "s`wavenum'tr20:w`wavenum' s recall summary  score"

*check 

***Prospective Memory tasks not in wave 7

*** Backwards Counting From 20 ***
gen r`wavenum'bwc20 =.
replace r`wavenum'bwc20 = .m if CfC20Frst == -1
replace r`wavenum'bwc20 = .d if CfC20Frst==-8
replace r`wavenum'bwc20 = .r if CfC20Frst==-9
replace r`wavenum'bwc20 = .p if CfC20Frst==-1 & askpx == 1
replace r`wavenum'bwc20 = 0 if CfC20Frst == 2 | CfC20FScnd == 2
replace r`wavenum'bwc20 = 1 if CfC20FScnd == 1
replace r`wavenum'bwc20 = 2 if CfC20Frst == 1 

label variable r`wavenum'bwc20 "r`wavenum'bwc20:w`wavenum' r Backwards Counting From 20"
label values r`wavenum'bwc20 bwc20

gen s`wavenum'bwc20 =.
spouse r`wavenum'bwc20, result(s`wavenum'bwc20) wave(7)
label variable s`wavenum'bwc20 "s`wavenum'bwc20:w`wavenum' s Backwards Counting From 20"
label values s`wavenum'bwc20 bwc20

****Flag for backward counting
*gen r`wavenum'fbwc20 =.
*replace r`wavenum'fbwc20 = 1 if CfC20FScnd == -1
*replace r`wavenum'fbwc20 = 2 if inlist(CfC20FScnd,1,2)
*
*label variable r`wavenum'fbwc20 "r`wavenum'fbwc20:w`wavenum' r flag Backwards Counting From 20"
*label values r`wavenum'fbwc20 back
*
*gen s`wavenum'fbwc20 =.
*spouse r`wavenum'fbwc20, result(s`wavenum'fbwc20) wave(7)
*label variable s`wavenum'fbwc20 "s`wavenum'fbwc20:w`wavenum' s flag Backwards Counting From 20"
*label values s`wavenum'fbwc20 back

***series 7*******
gen r`wavenum'ser7=0 if inw`wavenum' == 1
missing_w`wavenum' CfSvA CfSvB CfSvC CfSvD CfSvE, result(r`wavenum'ser7)
replace r`wavenum'ser7= .p if CfSvA==-1 & askpx==1
replace r`wavenum'ser7= r`wavenum'ser7+1 if CfSvA==93 & !mi(r`wavenum'ser7)
replace r`wavenum'ser7= r`wavenum'ser7+1 if CfSvB==(CfSvA - 7) & !mi(r`wavenum'ser7) & !mi(CfSvB) & !mi(CfSvA)
replace r`wavenum'ser7= r`wavenum'ser7+1 if CfSvC==(CfSvB - 7) & !mi(r`wavenum'ser7) & !mi(CfSvC) & !mi(CfSvB)
replace r`wavenum'ser7= r`wavenum'ser7+1 if CfSvD==(CfSvC - 7) & !mi(r`wavenum'ser7) & !mi(CfSvD) & !mi(CfSvC)
replace r`wavenum'ser7= r`wavenum'ser7+1 if CfSvE==(CfSvD - 7) & !mi(r`wavenum'ser7) & !mi(CfSvE) & !mi(CfSvD)
label variable r`wavenum'ser7  "r`wavenum'ser7:w`wavenum' R serial 7s"

*wave 7 spouse series 7
gen s`wavenum'ser7 =.
spouse r`wavenum'ser7, result(s`wavenum'ser7) wave(`wavenum')
label variable s`wavenum'ser7 "s`wavenum'ser7:w`wavenum' S serial 7s"

***Object naming***
***scissors
gen r`wavenum'scis =.
replace r`wavenum'scis = .m if CfNmSc == -1
replace r`wavenum'scis = .d if CfNmSc==-8
replace r`wavenum'scis = .r if CfNmSc==-9
replace r`wavenum'scis = .p if CfNmSc==-1 & askpx == 1
replace r`wavenum'scis = 0 if CfNmSc == 2 
replace r`wavenum'scis = 1 if CfNmSc == 1 

label variable r`wavenum'scis "r`wavenum'scis:w`wavenum' r object naming scissors"
label values r`wavenum'scis ans

gen s`wavenum'scis =.
spouse r`wavenum'scis, result(s`wavenum'scis) wave(7)
label variable s`wavenum'scis "s`wavenum'scis:w`wavenum' s object naming scissors"
label values s`wavenum'scis ans

**Cactus
gen r`wavenum'cact =.
replace r`wavenum'cact = .m if CfNmCA == -1
replace r`wavenum'cact = .d if CfNmCA ==-8
replace r`wavenum'cact = .r if CfNmCA ==-9
replace r`wavenum'cact = .p if CfNmCA ==-1 & askpx == 1
replace r`wavenum'cact = 0 if CfNmCA == 2 
replace r`wavenum'cact = 1 if CfNmCA == 1

label variable r`wavenum'cact "r`wavenum'cact:w`wavenum' r object naming cactus"
label values r`wavenum'cact ans

gen s`wavenum'cact =.
spouse r`wavenum'cact, result(s`wavenum'cact) wave(7)
label variable s`wavenum'cact "s`wavenum'cact:w`wavenum' s object naming cactus"
label values s`wavenum'cact ans

***President naming***
**monarch
gen r`wavenum'mnrc =.
replace r`wavenum'mnrc = .m if CfNmQn == -1
replace r`wavenum'mnrc = .d if CfNmQn ==-8
replace r`wavenum'mnrc = .r if CfNmQn ==-9
replace r`wavenum'mnrc = .p if CfNmQn ==-1 & askpx == 1
replace r`wavenum'mnrc = 0 if CfNmQn == 2 
replace r`wavenum'mnrc = 1 if CfNmQn == 1

label variable r`wavenum'mnrc "r`wavenum'mnrc:w`wavenum' r current monarch"
label values r`wavenum'mnrc ans

gen s`wavenum'mnrc =.
spouse  r`wavenum'mnrc, result(s`wavenum'mnrc) wave(7)
label variable s`wavenum'mnrc "s`wavenum'mnrc:w`wavenum' s current monarch"
label values s`wavenum'mnrc ans

**prime minster***
gen r`wavenum'pm =.
replace r`wavenum'pm = .m if CfNmPM == -1
replace r`wavenum'pm = .d if CfNmPM ==-8
replace r`wavenum'pm = .r if CfNmPM ==-9
replace r`wavenum'pm = .p if CfNmPM ==-1 & askpx == 1
replace r`wavenum'pm = 0 if CfNmPM == 2 
replace r`wavenum'pm = 1 if CfNmPM == 1

label variable r`wavenum'pm "r`wavenum'pm:w`wavenum' r current prime minster"
label values r`wavenum'pm ans

gen s`wavenum'pm =.
spouse r`wavenum'pm, result(s`wavenum'pm) wave(7)
label variable s`wavenum'pm "s`wavenum'pm:w`wavenum' s current prime minster"
label values s`wavenum'pm ans

***president
gen r`wavenum'pres =.
replace r`wavenum'pres = .m if CfNmUS == -1
replace r`wavenum'pres = .d if CfNmUS ==-8
replace r`wavenum'pres = .r if CfNmUS ==-9
replace r`wavenum'pres = .p if CfNmUS ==-1 & askpx == 1
replace r`wavenum'pres = 0 if CfNmUS == 2 
replace r`wavenum'pres = 1 if CfNmUS == 1

label variable r`wavenum'pres "r`wavenum'pres:w`wavenum' r current US president"
label values r`wavenum'pres ans

gen s`wavenum'pres =.
spouse r`wavenum'pres, result(s`wavenum'pres) wave(7)
label variable s`wavenum'pres "s`wavenum'pres:w`wavenum' s current US president"
label values s`wavenum'pres ans


***verbal fluency score***
*wave 7 respondent verbal fluency score
gen r`wavenum'verbf= .
replace r`wavenum'verbf = .m if CfAni == -1
replace r`wavenum'verbf = .d if CfAni == -8
replace r`wavenum'verbf = .r if CfAni == -9
replace r`wavenum'verbf = .p if CfAni == -1 & askpx == 1
replace r`wavenum'verbf = CfAni if inrange(CfAni,0,100)

label variable r`wavenum'verbf "r`wavenum'verbf:w`wavenum' r verbal fluency score"

*wave 7 spouse verbal fluency score
gen s`wavenum'verbf =.
spouse r`wavenum'verbf, result(s`wavenum'verbf) wave(`wavenum')
label variable s`wavenum'verbf "s`wavenum'verbf:w`wavenum' s verbal fluency score"



***drop ELSA wave 7 core file raw variables***
drop `cog_w7_core'

******************************************************************************************

*set wave number
local wavenum=8
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

**merge with wave 8 core data***
local cog_w8_core cflisen cflisd cfdatm cfdatd cfdaty cfday askpx ///
                    cfmscr cftest cfimp cfwhonon cfsva cfsvb cfsvc /// 
                    cfsvd cfsve cfnmsc cfnmca cfnmqn cfnmpm cfnmus ///
                    cfani cfc20frst cfc20fscnd cfmetm
merge 1:1 idauniq using "$wave_8_core", keepusing(`cog_w8_core') nogen


****cognition testing status***
**wave 8 respondent cognition testing status
*gen r`wavenum'status = .
*replace r`wavenum'status = 1 if askpx == -1 & inw`wavenum' == 1
*replace r`wavenum'status = 2 if askpx == 1 & inw`wavenum' == 1
*replace r`wavenum'status = 3 if inw`wavenum' == 0
*label variable r`wavenum'status "r`wavenum'status:w`wavenum' eligibility status"
*label values r`wavenum'status cogelig
*
**wave 8 spouse cognition testing status
*gen s`wavenum'status = .
*spouse r`wavenum'status, result(s`wavenum'status) wave(`wavenum')
*label variable s`wavenum'status "s`wavenum'status:w`wavenum' eligibility status"
*label values s`wavenum'status cogelig

***cognition testing conditions***
*wave 8 respondent whether factors impaired cognition tests
gen r`wavenum'cogimp= .
replace r`wavenum'cogimp = .m if cfimp == -1
replace r`wavenum'cogimp = .d if cfimp == -8
replace r`wavenum'cogimp = .r if cfimp == -9
replace r`wavenum'cogimp = .p if askpx == 1
replace r`wavenum'cogimp = 0 if cfimp == 2
replace r`wavenum'cogimp = 1 if cfimp == 1 
label variable r`wavenum'cogimp "r`wavenum'cogimp:w`wavenum' r whether factors impaired cognition tests"
label values r`wavenum'cogimp imp

*wave 8 spouse whether factors impaired cognition tests
gen s`wavenum'cogimp =.
spouse r`wavenum'cogimp, result(s`wavenum'cogimp) wave(`wavenum')
label variable s`wavenum'cogimp "s`wavenum'cogimp:w`wavenum' s whether factors impaired cognition tests"
label values s`wavenum'cogimp imp

*check 

*wave 8 respondent whether other people present during cognition tests
gen r`wavenum'cogothp= .
missing_w`wavenum' cfwhonon, result(r`wavenum'cogothp)
replace r`wavenum'cogothp = .p if askpx == 1
replace r`wavenum'cogothp = 0 if cfwhonon == 1
replace r`wavenum'cogothp = 1 if cfwhonon == 0
label variable r`wavenum'cogothp "r`wavenum'cogothp:w`wavenum' r whether other people present during cog tests"
label values r`wavenum'cogothp imp

*wave 8 spouse whether other people in room during cognition tests
gen s`wavenum'cogothp =.
spouse r`wavenum'cogothp, result(s`wavenum'cogothp) wave(`wavenum')
label variable s`wavenum'cogothp "s`wavenum'cogothp:w`wavenum' s whether other people present during cog tests"
label values s`wavenum'cogothp imp

*check 

***Self-reported memory***
*wave 8 respondent self-reported memory
gen r`wavenum'slfmem = .
replace r`wavenum'slfmem = cfmetm
replace r`wavenum'slfmem = .m if cfmetm==-1
replace r`wavenum'slfmem = .d if cfmetm==-8
replace r`wavenum'slfmem = .r if cfmetm==-9
replace r`wavenum'slfmem = .p if cfmetm==-1 & askpx == 1

label variable r`wavenum'slfmem "r`wavenum'slfmem:w`wavenum' r Self-reported memory"
label values r`wavenum'slfmem memory 

**wave 8 spouse Self-reported memory***
gen  s`wavenum'slfmem =.
spouse r`wavenum'slfmem, result(s`wavenum'slfmem) wave(`wavenum')
label variable  s`wavenum'slfmem "s`wavenum'slfmem:w`wavenum' s Self-reported memory"
label values s`wavenum'slfmem memory

*check 

***cognition month naming***
*wave 8 respondent cognition month naming
gen r`wavenum'mo= .
replace r`wavenum'mo = .m if inlist(cfdatm,-1,-2)
replace r`wavenum'mo = .d if cfdatm==-8
replace r`wavenum'mo = .r if cfdatm==-9
replace r`wavenum'mo = .p if cfdatm==-1 & askpx == 1
replace r`wavenum'mo = 1 if cfdatm==1 
replace r`wavenum'mo = 0 if cfdatm==2
label variable r`wavenum'mo "r`wavenum'mo:w`wavenum' r cognition date naming-month"
label values r`wavenum'mo monthnaming

*wave 8 spouse month naming
gen s`wavenum'mo =.
spouse r`wavenum'mo, result(s`wavenum'mo) wave(8)
label variable s`wavenum'mo "s`wavenum'mo:w`wavenum' s cognition date naming-month"
label values s`wavenum'mo monthnaming

*check 

***cognition day naming***
*wave 8 respondent cognition day naming
gen r`wavenum'dy= .
replace r`wavenum'dy = .m if inlist(cfdatd,-1,-2)
replace r`wavenum'dy = .d if cfdatd==-8
replace r`wavenum'dy = .r if cfdatd==-9
replace r`wavenum'dy = .p if cfdatd==-1 & askpx == 1
replace r`wavenum'dy = 1 if cfdatd==1 
replace r`wavenum'dy = 0 if cfdatd==2
label variable r`wavenum'dy "r`wavenum'dy:w`wavenum' r cognition date naming-day of month"
label values r`wavenum'dy daynaming

*wave 8 spouse day naming
gen s`wavenum'dy =.
spouse r`wavenum'dy, result(s`wavenum'dy) wave(8)
label variable s`wavenum'dy "s`wavenum'dy:w`wavenum' s cognition date naming-day of month"
label values s`wavenum'dy daynaming

*check 

***cognition year naming***
*wave 8 respondent cognition year naming
gen r`wavenum'yr= .
replace r`wavenum'yr = .m if inlist(cfdaty,-1,-2)
replace r`wavenum'yr = .d if cfdaty==-8
replace r`wavenum'yr = .r if cfdaty==-9
replace r`wavenum'yr = .p if cfdaty==-1 & askpx == 1
replace r`wavenum'yr = 1 if cfdaty==1 
replace r`wavenum'yr = 0 if cfdaty==2
label variable r`wavenum'yr "r`wavenum'yr:w`wavenum' r cognition date naming-year"
label values r`wavenum'yr yeaernaming

*wave 8 spouse year naming
gen s`wavenum'yr =.
spouse r`wavenum'yr, result(s`wavenum'yr) wave(8)
label variable s`wavenum'yr "s`wavenum'yr:w`wavenum' s cognition date naming-year"
label values s`wavenum'yr yeaernaming

*check 

***cognition day of week naming***
*wave 8 respondent cognition day of week naming
gen r`wavenum'dw= .
replace r`wavenum'dw = .m if inlist(cfday,-1,-2)
replace r`wavenum'dw = .d if cfday==-8
replace r`wavenum'dw = .r if cfday==-9
replace r`wavenum'dw = .p if cfday==-1 & askpx == 1
replace r`wavenum'dw = 1 if cfday==1 
replace r`wavenum'dw = 0 if cfday==2
label variable r`wavenum'dw "r`wavenum'dw:w`wavenum' r cognition date naming-day of week"
label values r`wavenum'dw daywnaming

*wave 8 spouse day of week naming
gen s`wavenum'dw =.
spouse r`wavenum'dw, result(s`wavenum'dw) wave(8)
label variable s`wavenum'dw "s`wavenum'dw:w`wavenum' s cognition date naming-day of week"
label values s`wavenum'dw daywnaming

*check 

****cognition orient***
**wave 8 respondent cognition orient
egen r`wavenum'orient = rowtotal(r`wavenum'mo r`wavenum'dy r`wavenum'yr r`wavenum'dw) 
replace r`wavenum'orient= . if r`wavenum'mo== . & r`wavenum'dy== . & r`wavenum'yr== . & r`wavenum'dw== .
replace r`wavenum'orient= .m if r`wavenum'mo== .m & r`wavenum'dy== .m & r`wavenum'yr== .m & r`wavenum'dw== .m
replace r`wavenum'orient= .d if r`wavenum'mo== .d & r`wavenum'dy== .d & r`wavenum'yr== .d & r`wavenum'dw== .d
replace r`wavenum'orient= .r if r`wavenum'mo== .r & r`wavenum'dy== .r & r`wavenum'yr== .r & r`wavenum'dw== .r
replace r`wavenum'orient= .p if r`wavenum'mo== .p & r`wavenum'dy== .p & r`wavenum'yr== .p & r`wavenum'dw== .p
label variable r`wavenum'orient "r`wavenum'orient:w`wavenum' r cognition orient(summary date naming)"

**wave 8 spouse cognition orient
gen  s`wavenum'orient =.
spouse r`wavenum'orient, result(s`wavenum'orient) wave(8)
label variable  s`wavenum'orient "s`wavenum'orient:w`wavenum' s cognition orient (summary date naming)"

*check

***numeracy  score***
*wave 8 respondent numeracy  score
gen r`wavenum'numer_e= .
replace r`wavenum'numer_e = cfmscr 
replace r`wavenum'numer_e = .d if cfmscr==-8
replace r`wavenum'numer_e = .r if cfmscr==-9
replace r`wavenum'numer_e = .m if inlist(cfmscr,-1,-2)
replace r`wavenum'numer_e = .p if cfmscr==-1 & askpx == 1
replace r`wavenum'numer_e = .s if cfmscr==-1 & (!mi(r`pre_wavenum'numer_e) | !mi(r6numer_e) | !mi(r4numer_e))

label variable r`wavenum'numer_e "r`wavenum'numer_e:w`wavenum' r numeracy  score"

*wave 8 spouse numeracy  score
gen s`wavenum'numer_e =.
spouse r`wavenum'numer_e, result(s`wavenum'numer_e) wave(8)
label variable s`wavenum'numer_e "s`wavenum'numer_e:w`wavenum' s numeracy  score"

*check 

***immediate word recall***
*wave 8 respondent immediate word recall
gen r`wavenum'imrc =.
replace r`wavenum'imrc = .m if inlist(cflisen,-1,-2)
replace r`wavenum'imrc = .d if cflisen==-8
replace r`wavenum'imrc = .r if cflisen==-9 | cftest==-9
replace r`wavenum'imrc = .p if cflisen==-1 & askpx == 1
replace r`wavenum'imrc = cflisen if inrange(cflisen,0,10)
label variable r`wavenum'imrc "r`wavenum'imrc:w`wavenum' r immediate word recall"

*wave 8 spouse immediate word recall
gen s`wavenum'imrc =.
spouse r`wavenum'imrc, result(s`wavenum'imrc) wave(8)
label variable s`wavenum'imrc "s`wavenum'imrc:w`wavenum' s immediate word recall"

*check 

*wave 8 respondent whether word list read by computer or interviewer
gen r`wavenum'readrc =.
missing_w`wavenum' cftest, result(r`wavenum'readrc)
replace r`wavenum'readrc = .p if askpx == 1
replace r`wavenum'readrc = 1 if cftest == 1
replace r`wavenum'readrc = 2 if cftest == 2
label variable r`wavenum'readrc "r`wavenum'readrc:w`wavenum' r word recall list read by"
label values r`wavenum'readrc readrc

*wave 8 spouse whether word list read by computer or interviewer
gen s`wavenum'readrc =.
spouse r`wavenum'readrc, result(s`wavenum'readrc) wave(`wavenum')
label variable s`wavenum'readrc "s`wavenum'readrc:w`wavenum' s word recall list read by"
label values s`wavenum'readrc readrc

*check 


***delayed word recall***
*wave 8 respondent delayed word recall
gen r`wavenum'dlrc =.
replace r`wavenum'dlrc = .m if inlist(cflisd,-1,-2)
replace r`wavenum'dlrc = .d if cflisd==-8
replace r`wavenum'dlrc = .r if cflisd==-9 | cftest==-9
replace r`wavenum'dlrc = .p if cflisd==-1 & askpx == 1
replace r`wavenum'dlrc = cflisd if inrange(cflisd,0,10)
label variable r`wavenum'dlrc "r`wavenum'dlrc:w`wavenum' r delayed word recall"

*wave 8 spouse delayed word recall
gen s`wavenum'dlrc =.
spouse r`wavenum'dlrc, result(s`wavenum'dlrc) wave(8)
label variable s`wavenum'dlrc "s`wavenum'dlrc:w`wavenum' s delayed word recall"

*check 

***recall summary  score***
*wave 8 respondent recall summary  score
egen r`wavenum'tr20 = rowtotal(r`wavenum'imrc r`wavenum'dlrc) 
replace r`wavenum'tr20= . if r`wavenum'imrc== . & r`wavenum'dlrc== .
replace r`wavenum'tr20= .m if r`wavenum'imrc== .m & r`wavenum'dlrc== .m
replace r`wavenum'tr20= .d if r`wavenum'imrc== .d & r`wavenum'dlrc== .d
replace r`wavenum'tr20= .r if r`wavenum'imrc== .r & r`wavenum'dlrc== .r
replace r`wavenum'tr20= .p if r`wavenum'imrc== .p & r`wavenum'dlrc== .p
label variable r`wavenum'tr20 "r`wavenum'tr20:w`wavenum' r recall summary  score"

*wave 8 spouse recall summary  score
gen s`wavenum'tr20 =.
spouse r`wavenum'tr20, result(s`wavenum'tr20) wave(8)
label variable s`wavenum'tr20 "s`wavenum'tr20:w`wavenum' s recall summary  score"

*check 

***Prospective Memory tasks not in wave 8

*** Backwards Counting From 20 ***
gen r`wavenum'bwc20 =.
replace r`wavenum'bwc20 = .m if cfc20frst == -1
replace r`wavenum'bwc20 = .d if cfc20frst==-8 | cfc20fscnd==-8
replace r`wavenum'bwc20 = .r if cfc20frst==-9 | cfc20fscnd == -9
replace r`wavenum'bwc20 = .p if cfc20frst==-1 & askpx == 1
replace r`wavenum'bwc20 = 0 if cfc20frst == 2 | cfc20fscnd == 2
replace r`wavenum'bwc20 = 1 if cfc20fscnd == 1
replace r`wavenum'bwc20 = 2 if cfc20frst == 1 

label variable r`wavenum'bwc20 "r`wavenum'bwc20:w`wavenum' r Backwards Counting From 20"
label values r`wavenum'bwc20 bwc20

gen s`wavenum'bwc20 =.
spouse r`wavenum'bwc20, result(s`wavenum'bwc20) wave(8)
label variable s`wavenum'bwc20 "s`wavenum'bwc20:w`wavenum' s Backwards Counting From 20"
label values s`wavenum'bwc20 bwc20

****Flag for backward counting
*gen r`wavenum'fbwc20 =.
*replace r`wavenum'fbwc20 = 1 if cfc20fscnd == -1
*replace r`wavenum'fbwc20 = 2 if inlist(cfc20fscnd,1,2)
*
*label variable r`wavenum'fbwc20 "r`wavenum'fbwc20:w`wavenum' r flag Backwards Counting From 20"
*label values r`wavenum'fbwc20 back
*
*gen s`wavenum'fbwc20 =.
*spouse r`wavenum'fbwc20, result(s`wavenum'fbwc20) wave(8)
*label variable s`wavenum'fbwc20 "s`wavenum'fbwc20:w`wavenum' s flag Backwards Counting From 20"
*label values s`wavenum'fbwc20 back

***series 7*******
gen r`wavenum'ser7=0 if inw`wavenum' == 1
missing_w`wavenum' cfsva cfsvb cfsvc cfsvd cfsve, result(r`wavenum'ser7)
replace r`wavenum'ser7= .p if cfsva==-1 & askpx==1
replace r`wavenum'ser7= r`wavenum'ser7+1 if cfsva==93 & !mi(r`wavenum'ser7)
replace r`wavenum'ser7= r`wavenum'ser7+1 if cfsvb==(cfsva - 7) & !mi(r`wavenum'ser7) & !mi(cfsvb) & !mi(cfsva)
replace r`wavenum'ser7= r`wavenum'ser7+1 if cfsvc==(cfsvb - 7) & !mi(r`wavenum'ser7) & !mi(cfsvc) & !mi(cfsvb)
replace r`wavenum'ser7= r`wavenum'ser7+1 if cfsvd==(cfsvc - 7) & !mi(r`wavenum'ser7) & !mi(cfsvd) & !mi(cfsvc)
replace r`wavenum'ser7= r`wavenum'ser7+1 if cfsve==(cfsvd - 7) & !mi(r`wavenum'ser7) & !mi(cfsve) & !mi(cfsvd)
label variable r`wavenum'ser7  "r`wavenum'ser7:w`wavenum' R serial 7s"

*wave 8 spouse series 7
gen s`wavenum'ser7 =.
spouse r`wavenum'ser7, result(s`wavenum'ser7) wave(`wavenum')
label variable s`wavenum'ser7 "s`wavenum'ser7:w`wavenum' S serial 7s"

***Object naming***
***scissors
gen r`wavenum'scis =.
replace r`wavenum'scis = .m if cfnmsc == -1
replace r`wavenum'scis = .d if cfnmsc==-8
replace r`wavenum'scis = .r if cfnmsc==-9
replace r`wavenum'scis = .p if cfnmsc==-1 & askpx == 1
replace r`wavenum'scis = 0 if cfnmsc == 2 
replace r`wavenum'scis = 1 if cfnmsc == 1 

label variable r`wavenum'scis "r`wavenum'scis:w`wavenum' r object naming scissors"
label values r`wavenum'scis ans

gen s`wavenum'scis =.
spouse r`wavenum'scis, result(s`wavenum'scis) wave(8)
label variable s`wavenum'scis "s`wavenum'scis:w`wavenum' s object naming scissors"
label values s`wavenum'scis ans

**Cactus
gen r`wavenum'cact =.
replace r`wavenum'cact = .m if cfnmca == -1
replace r`wavenum'cact = .d if cfnmca ==-8
replace r`wavenum'cact = .r if cfnmca ==-9
replace r`wavenum'cact = .p if cfnmca ==-1 & askpx == 1
replace r`wavenum'cact = 0 if cfnmca == 2 
replace r`wavenum'cact = 1 if cfnmca == 1

label variable r`wavenum'cact "r`wavenum'cact:w`wavenum' r object naming cactus"
label values r`wavenum'cact ans

gen s`wavenum'cact =.
spouse r`wavenum'cact, result(s`wavenum'cact) wave(8)
label variable s`wavenum'cact "s`wavenum'cact:w`wavenum' s object naming cactus"
label values s`wavenum'cact ans

***President naming***
**monarch
gen r`wavenum'mnrc =.
replace r`wavenum'mnrc = .m if cfnmqn == -1
replace r`wavenum'mnrc = .d if cfnmqn ==-8
replace r`wavenum'mnrc = .r if cfnmqn ==-9
replace r`wavenum'mnrc = .p if cfnmqn ==-1 & askpx == 1
replace r`wavenum'mnrc = 0 if cfnmqn == 2 
replace r`wavenum'mnrc = 1 if cfnmqn == 1

label variable r`wavenum'mnrc "r`wavenum'mnrc:w`wavenum' r current monarch"
label values r`wavenum'mnrc ans

gen s`wavenum'mnrc =.
spouse  r`wavenum'mnrc, result(s`wavenum'mnrc) wave(8)
label variable s`wavenum'mnrc "s`wavenum'mnrc:w`wavenum' s current monarch"
label values s`wavenum'mnrc ans

**prime minster***
gen r`wavenum'pm =.
replace r`wavenum'pm = .m if cfnmpm == -1
replace r`wavenum'pm = .d if cfnmpm ==-8
replace r`wavenum'pm = .r if cfnmpm ==-9
replace r`wavenum'pm = .p if cfnmpm ==-1 & askpx == 1
replace r`wavenum'pm = 0 if cfnmpm == 2 
replace r`wavenum'pm = 1 if cfnmpm == 1

label variable r`wavenum'pm "r`wavenum'pm:w`wavenum' r current prime minster"
label values r`wavenum'pm ans

gen s`wavenum'pm =.
spouse r`wavenum'pm, result(s`wavenum'pm) wave(8)
label variable s`wavenum'pm "s`wavenum'pm:w`wavenum' s current prime minster"
label values s`wavenum'pm ans

***president
gen r`wavenum'pres =.
replace r`wavenum'pres = .m if cfnmus == -1
replace r`wavenum'pres = .d if cfnmus ==-8
replace r`wavenum'pres = .r if cfnmus ==-9
replace r`wavenum'pres = .p if cfnmus ==-1 & askpx == 1
replace r`wavenum'pres = 0 if cfnmus == 2 
replace r`wavenum'pres = 1 if cfnmus == 1

label variable r`wavenum'pres "r`wavenum'pres:w`wavenum' r current US president"
label values r`wavenum'pres ans

gen s`wavenum'pres =.
spouse r`wavenum'pres, result(s`wavenum'pres) wave(8)
label variable s`wavenum'pres "s`wavenum'pres:w`wavenum' s current US president"
label values s`wavenum'pres ans


***verbal fluency score***
*wave 8 respondent verbal fluency score
gen r`wavenum'verbf= .
replace r`wavenum'verbf = .m if cfani == -1
replace r`wavenum'verbf = .d if cfani == -8
replace r`wavenum'verbf = .r if cfani == -9
replace r`wavenum'verbf = .p if cfani == -1 & askpx == 1
replace r`wavenum'verbf = cfani if inrange(cfani,0,100)

label variable r`wavenum'verbf "r`wavenum'verbf:w`wavenum' r verbal fluency score"

*wave 8 spouse verbal fluency score
gen s`wavenum'verbf =.
spouse r`wavenum'verbf, result(s`wavenum'verbf) wave(`wavenum')
label variable s`wavenum'verbf "s`wavenum'verbf:w`wavenum' s verbal fluency score"



***drop ELSA wave 8 core file raw variables***
drop `cog_w8_core'

******************************************************************************************

***asset flag
label define assflag ///
   1 "1.continuous value" ///
   2 "2.closed range bracket"       ///
   3 "3.open range bracket"     ///
   5 "5.no value/bracket"        ///
   6 "6.no asset"           ///
   7 "7.dk"     ///
   8 "8.non-sample member" ///
   9 "9.non-responding spouse" ///
  10 "10.institutional interview"

***business asset flag
label define typebracket ///
	1 "1.continuous value" ///
  2 "2.closed range bracket" ///
  3 "3.open range bracket" ///
  4 "4.range card bracket" ///
  5 "5.no value/bracket" ///
  6 "6.no asset" ///
  7 "7.dk ownership" ///
  8 "8.non-sample member" ///
  9 "9.non-responding spouse" ///
  10 "10.institutional interview"
                     		 
***household primary residence flag
label define tothn ///
   0 "0.not more than one couple"  ///
   1 "1.more than one couple" ///
   .m ".m:missing, not imputed"        
   
***home ownership
label define homeown ///
	0 "0.don't own home" ///
	1 "1.own home"          		 
 
******************************************************************************************


***merge with wave 1 core data***
local asset_w1_core perid howhn01 howhn02 howhn03 howhn04 hotenu
merge 1:1 idauniq using "$wave_1_core", keepusing(`asset_w1_core') nogen

***merge with wave 1 financial derived variables data***
local asset_w1_fina idahhw1 coupid ///
                    farm_bu_i busv_bu_i othbusv_bu_i ///
                    farm_bu_t busv_bu_t othbusv_bu_t ///
                    hsval_hh_i ///
                    hsval_hh_t ///
                    hdebt_hh_i ///
                    hdebt_hh_t ///
                    home_bu_i ///
                    home_bu_t ///
                    tessa_bu_i cashisa_bu_i shisa_bu_i pep_bu_i ///
                    tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t ///
                    shares_bu_i trusts_bu_i ///
                    shares_bu_t trusts_bu_t ///
                    save_bu_i nsav_bu_i ///
                    save_bu_t nsav_bu_t ///
                    prbonds_bu_i bonds_bu_i ///
                    prbonds_bu_t bonds_bu_t ///
                    ccard_bu_i prdebt_bu_i odebt_bu_i ///
                    ccard_bu_t prdebt_bu_t odebt_bu_t ///
                    othsav_bu_i jntass_bu_i ///
                    othsav_bu_t jntass_bu_t ///
                    tothass_bu_i ///
                    tothass_bu_t
merge 1:1 idauniq using "$wave_1_fina", keepusing(`asset_w1_fina') nogen


***net value of business***
*wave 1 household net value of business
gen h1absns = .
replace h1absns = .m if (mi(farm_bu_i) | mi(busv_bu_i) | mi(othbusv_bu_i)) & inw1==1
replace h1absns = farm_bu_i + busv_bu_i + othbusv_bu_i if !mi(farm_bu_i) & !mi(busv_bu_i) & !mi(othbusv_bu_i)
label variable h1absns "h1absns:w1 assets: business"

*wave 1 household net value of business flag
gen h1afbsns = .
combine_ass_flags2 farm_bu_t busv_bu_t othbusv_bu_t, result(h1afbsns)
label variable h1afbsns "h1afbsns:w1 asst flag: business"
label values h1afbsns typebracket

*check 

***primary residence***
*wave 1 household value of primary residence
gen owner1= howhn01 // determine perid of first owner
recode owner1 (-9=.) (-8=.) (-1=.)
gen owner2= howhn02 // determine perid of second owner
recode owner2 (-9=.) (-8=.) (-1=.)
gen owner3= howhn03 // determine perid of third owner
recode owner3 (-9=.) (-8=.) (-1=.)
gen owner4= howhn04 // determine perid of fourth owner
recode owner4 (-9=.) (-8=.) (-1=.)
gen owner=(perid==owner1)|(perid==owner2)|(perid==owner3)|(perid==owner4) // indicate any home ownership by individual
bysort coupid: egen owner_bu=max(owner) if !missing(coupid) // indicate any home ownership by couple 

gen hsval_bu_i=0 // generate house value
replace hsval_bu_i=hsval_hh_i if owner_bu==1 

gen hdebt_bu_i=0 // generate house debt
replace hdebt_bu_i=hdebt_hh_i if owner_bu==1

bysort coupid: gen nobs_bu=_n if !missing(coupid)
bysort idahhw1: egen n_owner=sum(owner_bu) if nobs_bu==1 & !missing(idahhw1)
bysort coupid: egen n_owner_bu=max(n_owner) if !missing(coupid) // generate number of couples who own house per household

gen ad_hsval_bu_i=0 // generate house value weighted for number of couples who own house
replace ad_hsval_bu_i=(hsval_bu_i/n_owner_bu) if n_owner_bu>0

gen ad_hdebt_bu_i=0 // generate house debt weighted for number of couples who own house
replace ad_hdebt_bu_i=(hdebt_bu_i/n_owner_bu) if n_owner_bu>0

*wave 1 household value of house/prim res
gen h1ahous = .
replace h1ahous = .m if mi(ad_hsval_bu_i) & inw1==1
replace h1ahous = ad_hsval_bu_i if !mi(ad_hsval_bu_i)
label variable h1ahous "h1ahous:w1 value of house/prim res"

*wave 1 household value of house/prim res flag
gen h1afhous = .
combine_ass_flags2 hsval_hh_t, result(h1afhous)
label variable h1afhous "h1afhous:w1 flag: value of house/prim res"

*check 

*wave 1 household value of mortgage/prim res
gen h1amort = .
replace h1amort = .m if mi(ad_hdebt_bu_i) & inw1==1
replace h1amort = ad_hdebt_bu_i if !mi(ad_hdebt_bu_i)
label variable h1amort "h1amort:w1 value of mortgage/prim res"

*wave 1 household value of mortgage/prim res flag
gen h1afmort = .
combine_ass_flags2 hdebt_hh_t, result(h1afmort)
label variable h1afmort "h1afmort:w1 flag: value of mortgage/prim res"

*check 

*wave 1 net value of house/prim res
gen h1atoth = .
replace h1atoth = .m if (mi(ad_hsval_bu_i) | mi(ad_hdebt_bu_i)) & inw1==1 
replace h1atoth = (ad_hsval_bu_i - ad_hdebt_bu_i) if !mi(ad_hsval_bu_i) & !mi(ad_hdebt_bu_i)
label variable h1atoth "h1atoth:w1 net value of house/prim res"

*wave 1 household multiple couple home ownership flag
gen h1aftothn = .
replace h1aftothn = .m if (inlist(hsval_hh_i,-2,-3,.) | inlist(hdebt_hh_i,-2,-3,.)) & inw1 == 1
replace h1aftothn = 0 if n_owner_bu<=1 & (!inlist(hsval_hh_i,-2,-3,.) | !inlist(hdebt_hh_i,-2,-3,.)) & inw1 == 1
replace h1aftothn = 1 if n_owner_bu>1 & inw1 == 1
label variable h1aftothn "h1aftothn:w1 flag: multiple couple home ownership"
label values h1aftothn tothn

*wave 1 household net value of primary residence flag
gen h1aftoth = .
combine_ass_flags2 hsval_hh_t hdebt_hh_t, result(h1aftoth)
label variable h1aftoth "h1aftoth:w1 flag: net value of house/prim res"

*check 

*wave 1 household whether own home
gen h1ahown = .
missing_w1 hotenu, result(h1ahown)
replace h1ahown = 0 if inlist(hotenu,4,5,6) | (inlist(hotenu,1,2,3) & owner_bu == 0)
replace h1ahown = 1 if inlist(hotenu,1,2,3) & owner_bu == 1
label variable h1ahown "h1ahown:w1 whether own home"
label values h1ahown homeown

drop owner1- ad_hsval_bu_i ad_hdebt_bu_i

***net value of other real estate***
*wave 1 household net value of other real estate
gen h1arles = .
replace h1arles = .m if mi(home_bu_i) & inw1==1
replace h1arles = home_bu_i if !mi(home_bu_i)
label variable h1arles "h1arles:w1 assets: other real estate"

*wave 1 household net value of other real estate flag
gen h1afrles = .
combine_ass_flags2 home_bu_t, result(h1afrles)
label variable h1afrles "h1afrles:w1 asst flag: other real estate"

*check 

***net value of ISA, PEPS, TESSA***
*wave 1 household net value of ISA, PEPS, TESSA
gen h1aira = .
replace h1aira = .m if (mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | mi(pep_bu_i)) & inw1==1
replace h1aira = tessa_bu_i + cashisa_bu_i + shisa_bu_i + pep_bu_i if ///
		!mi(tessa_bu_i) & !mi(cashisa_bu_i) & !mi(shisa_bu_i) & !mi(pep_bu_i)
label variable h1aira "h1aira:w1 assets: ISA, PEPS, TESSA"

*wave 1 household net value of ISA, PEPS, TESSA flag
gen h1afira = .
combine_ass_flags2 tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t, result(h1afira)
label variable h1afira "h1afira:w1 asst flag: ISA, PEPS, TESSA"

*check 

***net value of stocks, shares, and investment funds ***
*wave 1 household net value of stocks, shares, and investment funds 
gen h1astck = .
replace h1astck = .m if (mi(shares_bu_i) | mi(trusts_bu_i)) & inw1==1
replace h1astck = shares_bu_i + trusts_bu_i if !mi(shares_bu_i) & !mi(trusts_bu_i)
label variable h1astck "h1astck:w1 assets: stocks"

*wave 1 household net value of stocks, shares, and investment funds flag
gen h1afstck = .
combine_ass_flags2 shares_bu_t trusts_bu_t, result(h1afstck)
label variable h1afstck "h1afstck:w1 asst flag: stocks"

*check 

***net value of current, savings account accounts ***
*wave 1 household net value of current, savings account accounts 
gen h1achck = .
replace h1achck = .m if (mi(save_bu_i) | mi(nsav_bu_i)) & inw1==1
replace h1achck = save_bu_i + nsav_bu_i if !mi(save_bu_i) & !mi(nsav_bu_i)
label variable h1achck "h1achck:w1 assets: current,savings acct"

*wave 1 household net value of current, savings account accounts flag
gen h1afchck = .
combine_ass_flags2 save_bu_t nsav_bu_t, result(h1afchck)
label variable h1afchck "h1afchck:w1 asst flag: current,savings acct"

*check 

***net value of bonds and bond funds ***
*wave 1 household net value of bonds and bond funds 
gen h1abond = .
replace h1abond = .m if (mi(prbonds_bu_i) | mi(bonds_bu_i)) & inw1==1
replace h1abond = prbonds_bu_i + bonds_bu_i if !mi(prbonds_bu_i) & !mi(bonds_bu_i)
label variable h1abond "h1abond:w1 assets: bonds"

*wave 1 household net value of bonds and bond funds flag
gen h1afbond = .
combine_ass_flags2 prbonds_bu_t bonds_bu_t, result(h1afbond)
label variable h1afbond "h1afbond:w1 asst flag: bonds"

*check 

***net value of other debt ***
*wave 1 household net value of other debt 
gen h1adebt = . 
replace h1adebt = .m if (mi(ccard_bu_i) | mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw1==1
replace h1adebt = ccard_bu_i + prdebt_bu_i + odebt_bu_i if ///
		!mi(ccard_bu_i) & !mi(prdebt_bu_i) & !mi(odebt_bu_i)
label variable h1adebt "h1adebt:w1 assets: debts"

*wave 1 household net value of other debt flag
gen h1afdebt = .
combine_ass_flags2 ccard_bu_t prdebt_bu_t odebt_bu_t, result(h1afdebt)
label variable h1afdebt "h1afdebt:w1 asst flag: debts"

*check 


***net value of non-housing financial wealth***
*wave 1 household net value of non-housing financial wealth
gen h1atotf = .
replace h1atotf = .m if (mi(save_bu_i) | mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | ///
		mi(prbonds_bu_i) | mi(nsav_bu_i) | mi(pep_bu_i) | mi(shares_bu_i) | mi(trusts_bu_i) | mi(bonds_bu_i) | ///
		mi(othsav_bu_i) | mi(jntass_bu_i) | mi(ccard_bu_i) | mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw1==1
replace h1atotf = save_bu_i + tessa_bu_i + cashisa_bu_i + shisa_bu_i + prbonds_bu_i + nsav_bu_i + ///
		pep_bu_i + shares_bu_i + trusts_bu_i + bonds_bu_i + othsav_bu_i + jntass_bu_i - ccard_bu_i - prdebt_bu_i - odebt_bu_i ///
		if h1atotf !=.m 
label variable h1atotf "h1atotf:w1 non-housing financial wealth"

*wave 1 household net value of non-housing financial wealth flag
gen h1aftotf = .
combine_ass_flags2 save_bu_t tessa_bu_t cashisa_bu_t shisa_bu_t prbonds_bu_t nsav_bu_t pep_bu_t ///
		shares_bu_t trusts_bu_t bonds_bu_t othsav_bu_t jntass_bu_t ccard_bu_t prdebt_bu_t odebt_bu_t, result(h1aftotf)
label variable h1aftotf "h1aftotf:w1 flag: non-housing financial wealth"

*check

***net value of total family wealth***
*wave 1 net value of total family wealth
gen h1atotb = .
replace h1atotb = .m if (h1absns==.m | h1atoth==.m | h1atotf==.m | mi(home_bu_i) | mi(tothass_bu_i)) & inw1==1
replace h1atotb = h1absns + h1atoth + h1atotf + home_bu_i + tothass_bu_i if h1atotb !=.m
label variable h1atotb "h1atotb:w1 total all assets inc. 2nd hm"

*wave 1 net value of total family wealth flag
gen other_ass_flag = . // create temporary flag for two raw variables 
combine_ass_flags2 home_bu_t tothass_bu_t, result(other_ass_flag)
gen h1aftotb = .
combine_ass_flags9 h1afbsns h1aftoth h1aftotf other_ass_flag, result(h1aftotb)
label variable h1aftotb "h1aftotb:w1 flag total all assets inc. 2nd hm"

*check 

drop other_ass_flag


***drop ELSA wave 1 core file raw variables***
drop `asset_w1_core'

***drop ELSA wave 1 financial derived file raw variables***
drop `asset_w1_fina'

******************************************************************************************

***merge with wave 2 core data***
local asset_w2_core PersNo howhn01 howhn02 howhn03 howhn04 howhn05 hotenu
merge 1:1 idauniq using "$wave_2_core", keepusing(`asset_w2_core') nogen

***merge with wave 2 financial derived variables data***
local asset_w2_fina idahhw2 coupid ///
                    farm_bu_i busv_bu_i othbusv_bu_i ///
                    farm_bu_t busv_bu_t othbusv_bu_t ///
                    hsval_hh_i ///
                    hsval_hh_t ///
                    hdebt_hh_i ///
                    hdebt_hh_t ///
                    home_bu_i ///
                    home_bu_t ///
                    tessa_bu_i cashisa_bu_i shisa_bu_i pep_bu_i ///
                    tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t ///
                    shares_bu_i trusts_bu_i ///
                    shares_bu_t trusts_bu_t ///
                    save_bu_i nsav_bu_i ///
                    save_bu_t nsav_bu_t ///
                    prbonds_bu_i bonds_bu_i ///
                    prbonds_bu_t bonds_bu_t ///
                    ccard_bu_i prdebt_bu_i odebt_bu_i ///
                    ccard_bu_t prdebt_bu_t odebt_bu_t ///
                    othsav_bu_i jntass_bu_i ///
                    othsav_bu_t jntass_bu_t ///
                    tothass_bu_i ///
                    tothass_bu_t
                           
merge 1:1 idauniq using "$wave_2_fina", keepusing(`asset_w2_fina') nogen


***net value of business***
*wave 2 household net value of business
gen h2absns = .
replace h2absns = .m if(mi(farm_bu_i) | mi(busv_bu_i) | mi(othbusv_bu_i)) & inw2==1
replace h2absns = farm_bu_i + busv_bu_i + othbusv_bu_i if ///
		!mi(farm_bu_i) & !mi(busv_bu_i) & !mi(othbusv_bu_i)
label variable h2absns "h2absns:w2 assets: business"

*wave 2 household net value of business flag
gen h2afbsns = .
combine_ass_flags2 farm_bu_t busv_bu_t othbusv_bu_t, result(h2afbsns)
label variable h2afbsns "h2afbsns:w2 asst flag: business"
label values h2afbsns typebracket

*check 

***value of primary residence***
*wave 2 household value of primary residence
gen owner1= howhn01 // determine persno of first owner
recode owner1 (-9=.) (-8=.) (-1=.) (97=.)
gen owner2= howhn02 // determine persno of second owner
recode owner2 (-9=.) (-8=.) (-1=.) (97=.)
gen owner3= howhn03 // determine persno of third owner
recode owner3 (-9=.) (-8=.) (-1=.) (97=.)
gen owner4= howhn04 // determine persno of forth owner
recode owner4 (-9=.) (-8=.) (-1=.) (97=.)
gen owner5= howhn05 // determine persno of fifth owner
recode owner5 (-9=.) (-8=.) (-1=.) (97=.)
gen owner=(PersNo==owner1)|(PersNo==owner2)|(PersNo==owner3)|(PersNo==owner4) |(PersNo==owner5) // indicate any home ownership by individual
bysort coupid: egen owner_bu=max(owner) if !missing(coupid) // indicate any home ownership by couple

gen hsval_bu_i=0 // generate house value
replace hsval_bu_i=hsval_hh_i if owner_bu==1

gen hdebt_bu_i=0 // generate house debt
replace hdebt_bu_i=hdebt_hh_i if owner_bu==1

bysort coupid: gen nobs_bu=_n if !missing(coupid)
bysort idahhw2: egen n_owner=sum(owner_bu) if nobs_bu==1 & !missing(idahhw2)
bysort coupid: egen n_owner_bu=max(n_owner) if !missing(coupid) // generate number of couples who own house per household

gen ad_hsval_bu_i=0 // generate house value weighted for number of couples who own house
replace ad_hsval_bu_i=(hsval_bu_i/n_owner_bu) if n_owner_bu>0

gen ad_hdebt_bu_i=0 // generate house debt weighted for number of couples who own house
replace ad_hdebt_bu_i=(hdebt_bu_i/n_owner_bu) if n_owner_bu>0

*wave 2 household value of house/prim res
gen h2ahous = .
replace h2ahous = .m if mi(ad_hsval_bu_i) & inw2==1
replace h2ahous = ad_hsval_bu_i if !mi(ad_hsval_bu_i)
label variable h2ahous "h2ahous:w2 value of house/prim res"

*wave 2 household value of house/prim res flag
gen h2afhous = .
combine_ass_flags2 hsval_hh_t, result(h2afhous)
label variable h2afhous "h2afhous:w2 flag: value of house/prim res"

*check 

*wave 2 household value of mortgage/prim res
gen h2amort = .
replace h2amort = .m if mi(ad_hdebt_bu_i) & inw2==1
replace h2amort = ad_hdebt_bu_i if !mi(ad_hdebt_bu_i)
label variable h2amort "h2amort:w2 value of mortgage/prim res"

*wave 2 household value of mortgage/prim res flag
gen h2afmort = .
combine_ass_flags2 hdebt_hh_t, result(h2afmort)
label variable h2afmort "h2afmort:w2 flag: value of mortgage/prim res"

*check 

*wave 2 household net value of house/prim res
gen h2atoth = .
replace h2atoth = .m if (mi(ad_hsval_bu_i) | mi(ad_hdebt_bu_i)) & inw2==1
replace h2atoth = (ad_hsval_bu_i- ad_hdebt_bu_i) if !mi(ad_hsval_bu_i) & !mi(ad_hdebt_bu_i)
label variable h2atoth "h2atoth:w2 net value of house/prim res"

*wave 2 household multiple couple home ownership flag
gen h2aftothn = .
replace h2aftothn = .m if (inlist(hsval_hh_i,-2,-3,.) | inlist(hdebt_hh_i,-2,-3,.)) & inw2 == 1
replace h2aftothn = 0 if n_owner_bu<=1 & (!inlist(hsval_hh_i,-2,-3,.) | !inlist(hdebt_hh_i,-2,-3,.)) & inw2 == 1
replace h2aftothn = 1 if n_owner_bu>1  & inw2 == 1
label variable h2aftothn "h2aftothn:w2 flag: multiple couple home ownership"
label values h2aftothn tothn


*wave 2 household net value of primary residence flag
gen h2aftoth = .
combine_ass_flags2 hsval_hh_t hdebt_hh_t, result(h2aftoth)
label variable h2aftoth "h2aftoth:w2 flag: net value of house/prim res"

*check 

*wave 2 household whether own home
gen h2ahown = .
missing_w2 hotenu, result(h2ahown)
replace h2ahown = 0 if inlist(hotenu,4,5,6) | (inlist(hotenu,1,2,3) & owner_bu == 0)
replace h2ahown = 1 if inlist(hotenu,1,2,3) & owner_bu == 1
label variable h2ahown "h2ahown:w2 whether own home"
label values h2ahown homeown

drop owner1- ad_hsval_bu_i ad_hdebt_bu_i

***net value of other real estate***
*wave 2 household net value of other real estate
gen h2arles = .
replace h2arles = .m if mi(home_bu_i) & inw2==1
replace h2arles = home_bu_i if !mi(home_bu_i)
label variable h2arles "h2arles:w2 assets: other real estate"

*wave 2 household net value of other real estate flag
gen h2afrles = .
combine_ass_flags2 home_bu_t, result(h2afrles)
label variable h2afrles "h2afrles:w2 asst flag: other real estate"

*check 

***net value of ISA, PEPS, TESSA***
*wave 2 household net value of ISA, PEPS, TESSA
gen h2aira = .
replace h2aira = .m if (mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | mi(pep_bu_i)) & inw2==1
replace h2aira = tessa_bu_i + cashisa_bu_i + shisa_bu_i + pep_bu_i if ///
		!mi(tessa_bu_i) & !mi(cashisa_bu_i) & !mi(shisa_bu_i) & !mi(pep_bu_i)
label variable h2aira "h2aira:w2 assets: ISA, PEPS, TESSA"

*wave 2 household net value of ISA, PEPS, TESSA flag
gen h2afira = .
combine_ass_flags2 tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t, result(h2afira)
label variable h2afira "h2afira:w2 asst flag: ISA, PEPS, TESSA"

*check 

***net value of stocks, shares, and investment funds ***
*wave 2 household net value of stocks, shares, and investment funds 
gen h2astck = .
replace h2astck = .m if (mi(shares_bu_i) | mi(trusts_bu_i)) & inw2==1
replace h2astck = shares_bu_i + trusts_bu_i if !mi(shares_bu_i) & !mi(trusts_bu_i)
label variable h2astck "h2astck:w2 assets: stocks"

*wave 2 household net value of stocks, shares, and investment funds flag
gen h2afstck = .
combine_ass_flags2 shares_bu_t trusts_bu_t, result(h2afstck)
label variable h2afstck "h2afstck:w2 asst flag: stocks"

*check 

***net value of current, savings account accounts ***
*wave 2 household net value of current, savings account accounts 
gen h2achck = .
replace h2achck = .m if (mi(save_bu_i) | mi(nsav_bu_i)) & inw2==1
replace h2achck = save_bu_i + nsav_bu_i if !mi(save_bu_i) & !mi(nsav_bu_i)
label variable h2achck "h2achck:w2 assets: current,savings acct"

*wave 2 household net value of current, savings account accounts flag
gen h2afchck = .
combine_ass_flags2 save_bu_t nsav_bu_t, result(h2afchck)
label variable h2afchck "h2afchck:w2 asst flag: current,savings acct"

*check 

***net value of bonds and bond funds ***
*wave 2 household net value of bonds and bond funds 
gen h2abond = .
replace h2abond = .m if (mi(prbonds_bu_i) | mi(bonds_bu_i)) & inw2==1
replace h2abond = prbonds_bu_i + bonds_bu_i if !mi(prbonds_bu_i) & !mi(bonds_bu_i)
label variable h2abond "h2abond:w2 assets: bonds"

*wave 2 household net value of bonds and bond funds flag
gen h2afbond = .
combine_ass_flags2 prbonds_bu_t bonds_bu_t, result(h2afbond)
label variable h2afbond "h2afbond:w2 asst flag: bonds"

*check 

***net value of other debt ***
*wave 2 household net value of other debt 
gen h2adebt = .
replace h2adebt = .m if (mi(ccard_bu_i) | mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw2==1
replace h2adebt = ccard_bu_i + prdebt_bu_i + odebt_bu_i if ///
		!mi(ccard_bu_i) & !mi(prdebt_bu_i) & !mi(odebt_bu_i) 
label variable h2adebt "h2adebt:w2 assets: debts"

*wave 2 household net value of other debt flag
gen h2afdebt = .
combine_ass_flags2 ccard_bu_t prdebt_bu_t odebt_bu_t, result(h2afdebt)
label variable h2afdebt "h2afdebt:w2 asst flag: debts"

*check 

***net value of non-housing financial wealth***
*wave 2 household net value of non-housing financial wealth
gen h2atotf = .
replace h2atotf = .m if (mi(save_bu_i) | mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | ///
		mi(prbonds_bu_i) | mi(nsav_bu_i) | mi(pep_bu_i) | mi(shares_bu_i) | mi(trusts_bu_i) | ///
		mi(bonds_bu_i) | mi(othsav_bu_i) | mi(jntass_bu_i) | mi(ccard_bu_i) | mi(prdebt_bu_i) | ///
		mi(odebt_bu_i)) & inw2==1
replace h2atotf = save_bu_i + tessa_bu_i + cashisa_bu_i + shisa_bu_i + prbonds_bu_i + ///
		nsav_bu_i + pep_bu_i + shares_bu_i + trusts_bu_i + bonds_bu_i + othsav_bu_i + ///
		jntass_bu_i - ccard_bu_i - prdebt_bu_i - odebt_bu_i if h2atotf !=.m
label variable h2atotf "h2atotf:w2 non-housing financial wealth"

*wave 2 household net value of non-housing financial wealth flag
gen h2aftotf = .
combine_ass_flags2 save_bu_t tessa_bu_t cashisa_bu_t shisa_bu_t prbonds_bu_t nsav_bu_t ///
		pep_bu_t shares_bu_t trusts_bu_t bonds_bu_t othsav_bu_t jntass_bu_t ccard_bu_t ///
		prdebt_bu_t odebt_bu_t, result(h2aftotf)
label variable h2aftotf "h2aftotf:w2 flag: non-housing financial wealth"

*check 

***net value of total family wealth***
*wave 2 household net value of total family wealth
gen h2atotb = .
replace h2atotb = .m if (h2absns==.m | h2atoth==.m | h2atotf==.m | mi(home_bu_i) | mi(tothass_bu_i)) & inw2==1
replace h2atotb = h2absns + h2atoth + h2atotf + home_bu_i + tothass_bu_i if h2atotb !=.m
label variable h2atotb "h2atotb:w2 total all assets inc. 2nd hm"

*wave 2 household net value of total family wealth flag
gen other_ass_flag = . // create temporary flag for two raw variables 
combine_ass_flags2 home_bu_t tothass_bu_t, result(other_ass_flag)
gen h2aftotb = . 
combine_ass_flags9 h2afbsns h2aftoth h2aftotf other_ass_flag, result(h2aftotb)
label variable h2aftotb "h2aftotb:w2 flag total all assets inc. 2nd hm"

*check 

drop other_ass_flag


***drop ELSA wave 2 core file raw variables***
drop `asset_w2_core'

***drop ELSA wave 2 financial derived file raw variables***
drop `asset_w2_fina'

******************************************************************************************

*set wave number
local wavenum=3

***merge with wave 3 core data***
local asset_w3_core perid howh1 howh2 howh3 howh4 howh5 howh6 howh7 howh8 howh9 howh10 howh11 howh12 hotenu
merge 1:1 idauniq using "$wave_3_core", keepusing(`asset_w3_core') nogen

***merge with wave 3 financial derived variables data***
local asset_w3_fina idahhw3 coupid ///
                    farm_bu_i busv_bu_i othbusv_bu_i ///
                    farm_bu_t busv_bu_t othbusv_bu_t ///
                    hsval_hh_i ///
                    hsval_hh_t ///
                    hdebt_hh_i ///
                    hdebt_hh_t ///
                    home_bu_i ///
                    home_bu_t ///
                    tessa_bu_i cashisa_bu_i shisa_bu_i pep_bu_i ///
                    tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t ///
                    shares_bu_i trusts_bu_i ///
                    shares_bu_t trusts_bu_t ///
                    save_bu_i nsav_bu_i ///
                    save_bu_t nsav_bu_t ///
                    prbonds_bu_i bonds_bu_i ///
                    prbonds_bu_t bonds_bu_t ///
                    ccard_bu_i prdebt_bu_i odebt_bu_i ///
                    ccard_bu_t prdebt_bu_t odebt_bu_t ///
                    othsav_bu_i jntass_bu_i ///
                    othsav_bu_t jntass_bu_t ///
                    tothass_bu_i ///
                    tothass_bu_t
                           
merge 1:1 idauniq using "$wave_3_fina", keepusing(`asset_w3_fina') nogen


***net value of business***
*wave 3 household net value of business
gen h`wavenum'absns = .
replace h`wavenum'absns = .m if (mi(farm_bu_i) | mi(busv_bu_i) | mi(othbusv_bu_i)) & inw`wavenum'==1
replace h`wavenum'absns = farm_bu_i + busv_bu_i + othbusv_bu_i if h`wavenum'absns !=.m
label variable h`wavenum'absns "h`wavenum'absns:w`wavenum' assets: business"

*wave 3 household net value of business flag
gen h`wavenum'afbsns = .
combine_ass_flags2 farm_bu_t busv_bu_t othbusv_bu_t, result(h`wavenum'afbsns)
label variable h`wavenum'afbsns "h`wavenum'afbsns:w`wavenum' asst flag: business"
label values h`wavenum'afbsns typebracket

*check 

***net value of primary residence***
*wave 3 household net value of primary residence
gen owner1= howh1 // whether person 1 is owner
recode owner1 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner2= howh2 // whether person 2 is owner
recode owner2 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner3= howh3 // whether person 3 is owner
recode owner3 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner4= howh4 // whether person 4 is owner
recode owner4 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner5= howh5 // whether person 5 is owner
recode owner5 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner6= howh6 // whether person 6 is owner
recode owner6 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner7= howh7 // whether person 7 is owner
recode owner7 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner8= howh8 // whether person 8 is owner
recode owner8 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner9= howh9 // whether person 9 is owner
recode owner9 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner10= howh10 // whether person 10 is owner
recode owner10 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner11= howh11 // whether person 11 is owner
recode owner11 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner12= howh12 // whether person 12 is owner
recode owner12 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner=(perid==1 & owner1==1) ///
					|(perid==2 & owner2==1) ///
					|(perid==3 & owner3==1) ///
					|(perid==4 & owner4==1) ///
					|(perid==5 & owner5==1) ///
					|(perid==6 & owner6==1) ///
					|(perid==7 & owner7==1) ///
					|(perid==8 & owner8==1) ///
					|(perid==9 & owner9==1) ///
					|(perid==10 & owner10==1) ///
					|(perid==11 & owner11==1) ///
					|(perid==12 & owner12==1) // indicate any home ownership by individual
bysort coupid: egen owner_bu=max(owner) // indicate any home ownership by couple
replace owner_bu = owner if inlist(coupid,-10,.)

gen hsval_bu_i=0 // generate house value
replace hsval_bu_i=. if coupid==-10
replace hsval_bu_i=hsval_hh_i if (owner_bu==1 & coupid!=-10)

gen hdebt_bu_i=0 // generate house debt
replace hdebt_bu_i=. if coupid==-10
replace hdebt_bu_i=hdebt_hh_i if (owner_bu==1 & coupid!=-10)

*generate value of the house and debt weighted by number of benefit units that are houseowners
bysort coupid: gen nobs_bu=_n if !inlist(coupid,-10,.) // assign sequential number by couple
replace nobs_bu = 1 if inlist(coupid,-10,.) // assign number 1 to everyone without a couple id
bysort idahhw`wavenum': egen n_owner=sum(owner_bu) if nobs_bu==1 & !missing(idahhw`wavenum')
bysort coupid: egen n_owner_bu=max(n_owner) if !inlist(coupid,-10,.) // generate number of couples who own house per household
replace n_owner_bu = n_owner if inlist(coupid,-10,.)

gen ad_hsval_bu_i=0 // generate house value weighted for number of couples who own house
replace ad_hsval_bu_i=(hsval_bu_i/n_owner_bu) if n_owner_bu>0

gen ad_hdebt_bu_i=0 // generate house debt weighted for number of couples who own house
replace ad_hdebt_bu_i=(hdebt_bu_i/n_owner_bu) if n_owner_bu>0

*wave 3 household value of house/prim res
gen h`wavenum'ahous = .
replace h`wavenum'ahous = .m if mi(ad_hsval_bu_i) & inw`wavenum'==1
replace h`wavenum'ahous = ad_hsval_bu_i if h`wavenum'ahous !=.m
label variable h`wavenum'ahous "h`wavenum'ahous:w`wavenum' value of house/prim res"

*wave 3 household value of house/prim res flag
gen h`wavenum'afhous = .
combine_ass_flags2 hsval_hh_t, result(h`wavenum'afhous)
label variable h`wavenum'afhous "h`wavenum'afhous:w`wavenum' flag: value of house/prim res"

*check 
	
*wave 3 household value of mortgage/prim res
gen h`wavenum'amort = .
replace h`wavenum'amort = .m if mi(ad_hdebt_bu_i) & inw`wavenum'==1
replace h`wavenum'amort = ad_hdebt_bu_i if h`wavenum'amort !=.m
label variable h`wavenum'amort "h`wavenum'amort:w`wavenum' value of mortgage/prim res"

*wave 3 household value of mortgage/prim res flag
gen h`wavenum'afmort = .
combine_ass_flags2 hdebt_hh_t, result(h`wavenum'afmort)
label variable h`wavenum'afmort "h`wavenum'afmort:w`wavenum' flag: value of mortgage/prim res"

*check 

*wave 3 household net value of house/prim res
gen h`wavenum'atoth = .
replace h`wavenum'atoth = .m if (mi(ad_hsval_bu_i) | mi(ad_hdebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atoth = (ad_hsval_bu_i - ad_hdebt_bu_i) if h`wavenum'atoth !=.m
label variable h`wavenum'atoth "h`wavenum'atoth:w`wavenum' net value of house/prim res"

*wave 3 household multiple couple home ownership flag
gen h`wavenum'aftothn = .
replace h`wavenum'aftothn = .m if (mi(hsval_hh_i) | mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 0 if n_owner_bu<=1 & (!mi(hsval_hh_i) | !mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 1 if n_owner_bu>1  & inw`wavenum' == 1
label variable h`wavenum'aftothn "h`wavenum'aftothn:w`wavenum' flag: multiple couple home ownership"
label values h`wavenum'aftothn tothn

*wave 3 household net value of primary residence flag
gen h`wavenum'aftoth = .
combine_ass_flags2 hsval_hh_t hdebt_hh_t, result(h`wavenum'aftoth)
label variable h`wavenum'aftoth "h`wavenum'aftoth:w`wavenum' flag: net value of house/prim res"

*check 

*wave 3 household whether own home
gen h`wavenum'ahown = .
missing_w`wavenum' hotenu, result(h`wavenum'ahown)
replace h`wavenum'ahown = 0 if inlist(hotenu,4,5,6) | (inlist(hotenu,1,2,3) & owner_bu == 0)
replace h`wavenum'ahown = 1 if inlist(hotenu,1,2,3) & owner_bu == 1
label variable h`wavenum'ahown "h`wavenum'ahown:w`wavenum' whether own home"
label values h`wavenum'ahown homeown

*drop intermediate variables
drop owner? owner1? owner owner_bu hsval_bu_i hdebt_bu_i nobs_bu n_owner n_owner_bu ad_hsval_bu_i ad_hdebt_bu_i

***net value of other real estate***
*wave 3 household net value of other real estate
gen h`wavenum'arles = .
replace h`wavenum'arles = .m if mi(home_bu_i) & inw`wavenum'==1
replace h`wavenum'arles = home_bu_i if h`wavenum'arles !=.m
label variable h`wavenum'arles "h`wavenum'arles:w`wavenum' assets: other real estate"

*wave 3 household net value of other real estate flag
gen h`wavenum'afrles = .
combine_ass_flags2 home_bu_t, result(h`wavenum'afrles)
label variable h`wavenum'afrles "h`wavenum'afrles:w`wavenum' asst flag: other real estate"

*check 

***net value of ISA, PEPS, TESSA***
*wave 3 household net value of ISA, PEPS, TESSA
gen h`wavenum'aira = .
replace h`wavenum'aira = .m if (mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | ///
		mi(pep_bu_i)) & inw`wavenum'==1 
replace h`wavenum'aira = tessa_bu_i + cashisa_bu_i + shisa_bu_i + pep_bu_i if h`wavenum'aira !=.m
label variable h`wavenum'aira "h`wavenum'aira:w`wavenum' assets: ISA, PEPS, TESSA"

*wave 3 household net value of ISA, PEPS, TESSA flag
gen h`wavenum'afira = .
combine_ass_flags2 tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t, result(h`wavenum'afira)
label variable h`wavenum'afira "h`wavenum'afira:w`wavenum' asst flag: ISA, PEPS, TESSA"

*check 

***net value of stocks, shares, and investment funds ***
*wave 3 household net value of stocks, shares, and investment funds 
gen h`wavenum'astck = .
replace h`wavenum'astck = .m if (mi(shares_bu_i) | mi(trusts_bu_i)) & inw`wavenum'==1
replace h`wavenum'astck = shares_bu_i + trusts_bu_i if h`wavenum'astck !=.m
label variable h`wavenum'astck "h`wavenum'astck:w`wavenum' assets: stocks"

*wave 3 household net value of stocks, shares, and investment funds flag
gen h`wavenum'afstck = .
combine_ass_flags2 shares_bu_t trusts_bu_t, result(h`wavenum'afstck)
label variable h`wavenum'afstck "h`wavenum'afstck:w`wavenum' asst flag: stocks"

*check 

***net value of current, savings account accounts ***
*wave 3 household net value of current, savings account accounts 
gen h`wavenum'achck = .
replace h`wavenum'achck = .m if (mi(save_bu_i) | mi(nsav_bu_i)) & inw`wavenum'==1 
replace h`wavenum'achck = save_bu_i + nsav_bu_i if h`wavenum'achck !=.m
label variable h`wavenum'achck "h`wavenum'achck:w`wavenum' assets: current,savings acct"

*wave 3 household net value of current, savings account accounts flag
gen h`wavenum'afchck = .
combine_ass_flags2 save_bu_t nsav_bu_t, result(h`wavenum'afchck)
label variable h`wavenum'afchck "h`wavenum'afchck:w`wavenum' asst flag: current,savings acct"

*check 

***net value of bonds and bond funds ***
*wave 3 household net value of bonds and bond funds 
gen h`wavenum'abond = .
replace h`wavenum'abond = .m if (mi(prbonds_bu_i) | mi(bonds_bu_i)) & inw`wavenum'==1
replace h`wavenum'abond = prbonds_bu_i + bonds_bu_i if h`wavenum'abond !=.m
label variable h`wavenum'abond "h`wavenum'abond:w`wavenum' assets: bonds"

*wave 3 household net value of bonds and bond funds flag
gen h`wavenum'afbond = .
combine_ass_flags2 prbonds_bu_t bonds_bu_t, result(h`wavenum'afbond)
label variable h`wavenum'afbond "h`wavenum'afbond:w`wavenum' asst flag: bonds"

*check 

***net value of other debt ***
*wave 3 household net value of other debt 
gen h`wavenum'adebt = .
replace h`wavenum'adebt = .m if (mi(ccard_bu_i) | mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'adebt = ccard_bu_i + prdebt_bu_i + odebt_bu_i if h`wavenum'adebt !=.m
label variable h`wavenum'adebt "h`wavenum'adebt:w`wavenum' assets: debts"

*wave 3 household net value of other debt flag
gen h`wavenum'afdebt = .
combine_ass_flags2 ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'afdebt)
label variable h`wavenum'afdebt "h`wavenum'afdebt:w`wavenum' asst flag: debts"

*check 

***net value of non-housing financial wealth***
*wave 3 household net value of non-housing financial wealth
gen h`wavenum'atotf = .
replace h`wavenum'atotf = .m if (mi(save_bu_i) | mi(tessa_bu_i) | mi(cashisa_bu_i) | ///
		mi(shisa_bu_i) | mi(prbonds_bu_i) | mi(nsav_bu_i) | mi(pep_bu_i) | mi(shares_bu_i) | ///
		mi(trusts_bu_i) | mi(bonds_bu_i) | mi(othsav_bu_i) | mi(jntass_bu_i) | mi(ccard_bu_i) | ///
		mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotf = save_bu_i + tessa_bu_i + cashisa_bu_i + shisa_bu_i + ///
                      prbonds_bu_i + nsav_bu_i + pep_bu_i + shares_bu_i + ///
                      trusts_bu_i + bonds_bu_i + othsav_bu_i + jntass_bu_i - ///
                      ccard_bu_i - prdebt_bu_i - odebt_bu_i if h`wavenum'atotf !=.m
label variable h`wavenum'atotf "h`wavenum'atotf:w`wavenum' non-housing financial wealth"

*wave 3 household net value of non-housing financial wealth flag
gen h`wavenum'aftotf = .
combine_ass_flags2 save_bu_t tessa_bu_t cashisa_bu_t shisa_bu_t prbonds_bu_t nsav_bu_t pep_bu_t shares_bu_t trusts_bu_t bonds_bu_t othsav_bu_t jntass_bu_t ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'aftotf)
label variable h`wavenum'aftotf "h`wavenum'aftotf:w`wavenum' flag: non-housing financial wealth"

*check 

***net value of total family wealth***
*wave 3 net value of total family wealth
gen h`wavenum'atotb = .
replace h`wavenum'atotb = .m if (h`wavenum'absns==.m | h`wavenum'atoth==.m | h`wavenum'atotf==.m | ///
		mi(home_bu_i) | mi(tothass_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotb = h`wavenum'absns + h`wavenum'atoth + h`wavenum'atotf + home_bu_i + tothass_bu_i if h`wavenum'atotb !=.m
label variable h`wavenum'atotb "h`wavenum'atotb:w`wavenum' total all assets inc. 2nd hm"

*wave 3 net value of total family wealth flag
gen other_ass_flag = . // create temporary flag for two raw variables 
combine_ass_flags2 home_bu_t tothass_bu_t, result(other_ass_flag)
gen h`wavenum'aftotb = .
combine_ass_flags9 h`wavenum'afbsns h`wavenum'aftoth h`wavenum'aftotf other_ass_flag, result(h`wavenum'aftotb)
label variable h`wavenum'aftotb "h`wavenum'aftotb:w`wavenum' flag total all assets inc. 2nd hm"

*check 

*drop intermediate variables
drop other_ass_flag


***drop ELSA wave 3 core file raw variables***
drop `asset_w3_core'

***drop ELSA wave 3 financial derived file raw variables***
drop `asset_w3_fina'

******************************************************************************************

	

*set wave number
local wavenum=4

***merge with wave 4 core data***
local asset_w4_core perid howh1 howh2 howh3 howh4 howh5 howh6 howh7 howh8 howh9 howh10 howh11 howh12 hotenu
merge 1:1 idauniq using "$wave_4_core", keepusing(`asset_w4_core') nogen

***merge with wave 4 financial derived variables data***
local asset_w4_fina idahhw4 coupid ///
                    farm_bu_i busv_bu_i othbusv_bu_i ///
                    farm_bu_t busv_bu_t othbusv_bu_t ///
                    hsval_hh_i ///
                    hsval_hh_t ///
                    hdebt_hh_i ///
                    hdebt_hh_t ///
                    home_bu_i ///
                    home_bu_t ///
                    tessa_bu_i cashisa_bu_i shisa_bu_i pep_bu_i ///
                    tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t ///
                    shares_bu_i trusts_bu_i ///
                    shares_bu_t trusts_bu_t ///
                    save_bu_i nsav_bu_i ///
                    save_bu_t nsav_bu_t ///
                    prbonds_bu_i bonds_bu_i ///
                    prbonds_bu_t bonds_bu_t ///
                    ccard_bu_i prdebt_bu_i odebt_bu_i ///
                    ccard_bu_t prdebt_bu_t odebt_bu_t ///
                    othsav_bu_i jntass_bu_i ///
                    othsav_bu_t jntass_bu_t ///
                    tothass_bu_i ///
                    tothass_bu_t
                           
merge 1:1 idauniq using "$wave_4_fina", keepusing(`asset_w4_fina') nogen


***net value of business***
*wave 4 household net value of business
gen h`wavenum'absns = .
replace h`wavenum'absns = .m if (mi(farm_bu_i) | mi(busv_bu_i) | mi(othbusv_bu_i)) & inw`wavenum'==1
replace h`wavenum'absns = farm_bu_i + busv_bu_i + othbusv_bu_i if h`wavenum'absns !=.m
label variable h`wavenum'absns "h`wavenum'absns:w`wavenum' assets: business"

*wave 4 household net value of business flag
gen h`wavenum'afbsns = .
combine_ass_flags2 farm_bu_t busv_bu_t othbusv_bu_t, result(h`wavenum'afbsns)
label variable h`wavenum'afbsns "h`wavenum'afbsns:w`wavenum' asst flag: business"
label values h`wavenum'afbsns typebracket

*check 

***net value of primary residence***
*wave 4 household net value of primary residence
gen owner1= howh1 // whether person 1 is owner
recode owner1 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner2= howh2 // whether person 2 is owner
recode owner2 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner3= howh3 // whether person 3 is owner
recode owner3 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner4= howh4 // whether person 4 is owner
recode owner4 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner5= howh5 // whether person 5 is owner
recode owner5 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner6= howh6 // whether person 6 is owner
recode owner6 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner7= howh7 // whether person 7 is owner
recode owner7 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner8= howh8 // whether person 8 is owner
recode owner8 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner9= howh9 // whether person 9 is owner
recode owner9 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner10= howh10 // whether person 10 is owner
recode owner10 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner11= howh11 // whether person 11 is owner
recode owner11 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner12= howh12 // whether person 12 is owner
recode owner12 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner=(perid==1 & owner1==1) ///
					|(perid==2 & owner2==1) ///
					|(perid==3 & owner3==1) ///
					|(perid==4 & owner4==1) ///
					|(perid==5 & owner5==1) ///
					|(perid==6 & owner6==1) ///
					|(perid==7 & owner7==1) ///
					|(perid==8 & owner8==1) ///
					|(perid==9 & owner9==1) ///
					|(perid==10 & owner10==1) ///
					|(perid==11 & owner11==1) ///
					|(perid==12 & owner12==1) // indicate any home ownership by individual
bysort coupid: egen owner_bu=max(owner) // indicate any home ownership by couple
replace owner_bu = owner if inlist(coupid,-10,.)

gen hsval_bu_i=0 // generate house value
replace hsval_bu_i=. if coupid==-10
replace hsval_bu_i=hsval_hh_i if (owner_bu==1 & coupid!=-10)

gen hdebt_bu_i=0 // generate house debt
replace hdebt_bu_i=. if coupid==-10
replace hdebt_bu_i=hdebt_hh_i if (owner_bu==1 & coupid!=-10)

*generate value of the house and debt weighted by number of benefit units that are houseowners
bysort coupid: gen nobs_bu=_n if !inlist(coupid,-10,.) // assign sequential number by couple
replace nobs_bu = 1 if inlist(coupid,-10,.) // assign number 1 to everyone without a couple id
bysort idahhw`wavenum': egen n_owner=sum(owner_bu) if nobs_bu==1 & !missing(idahhw`wavenum')
bysort coupid: egen n_owner_bu=max(n_owner) if !inlist(coupid,-10,.) // generate number of couples who own house per household
replace n_owner_bu = n_owner if inlist(coupid,-10,.)

gen ad_hsval_bu_i=0 // generate house value weighted for number of couples who own house
replace ad_hsval_bu_i=(hsval_bu_i/n_owner_bu) if n_owner_bu>0

gen ad_hdebt_bu_i=0 // generate house debt weighted for number of couples who own house
replace ad_hdebt_bu_i=(hdebt_bu_i/n_owner_bu) if n_owner_bu>0

*wave 4 household value of house/prim res
gen h`wavenum'ahous = .
replace h`wavenum'ahous = .m if mi(ad_hsval_bu_i) & inw`wavenum'==1
replace h`wavenum'ahous = ad_hsval_bu_i if h`wavenum'ahous !=.m
label variable h`wavenum'ahous "h`wavenum'ahous:w`wavenum' value of house/prim res"

*wave 4 household value of house/prim res flag
gen h`wavenum'afhous = .
combine_ass_flags2 hsval_hh_t, result(h`wavenum'afhous)
label variable h`wavenum'afhous "h`wavenum'afhous:w`wavenum' flag: value of house/prim res"

*check 
	
*wave 4 household value of mortgage/prim res
gen h`wavenum'amort = .
replace h`wavenum'amort = .m if mi(ad_hdebt_bu_i) & inw`wavenum'==1
replace h`wavenum'amort = ad_hdebt_bu_i if h`wavenum'amort !=.m
label variable h`wavenum'amort "h`wavenum'amort:w`wavenum' value of mortgage/prim res"

*wave 4 household value of mortgage/prim res flag
gen h`wavenum'afmort = .
combine_ass_flags2 hdebt_hh_t, result(h`wavenum'afmort)
label variable h`wavenum'afmort "h`wavenum'afmort:w`wavenum' flag: value of mortgage/prim res"

*check 

*wave 4 household net value of house/prim res
gen h`wavenum'atoth = .
replace h`wavenum'atoth = .m if (mi(ad_hsval_bu_i) | mi(ad_hdebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atoth = (ad_hsval_bu_i - ad_hdebt_bu_i) if h`wavenum'atoth !=.m
label variable h`wavenum'atoth "h`wavenum'atoth:w`wavenum' net value of house/prim res"

*wave 4 household multiple couple home ownership flag
gen h`wavenum'aftothn = .
replace h`wavenum'aftothn = .m if (mi(hsval_hh_i) | mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 0 if n_owner_bu<=1 & (!mi(hsval_hh_i) | !mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 1 if n_owner_bu>1  & inw`wavenum' == 1
label variable h`wavenum'aftothn "h`wavenum'aftothn:w`wavenum' flag: multiple couple home ownership"
label values h`wavenum'aftothn tothn

*wave 4 household net value of primary residence flag
gen h`wavenum'aftoth = .
combine_ass_flags2 hsval_hh_t hdebt_hh_t, result(h`wavenum'aftoth)
label variable h`wavenum'aftoth "h`wavenum'aftoth:w`wavenum' flag: net value of house/prim res"

*check 

*wave 4 household whether own home
gen h`wavenum'ahown = .
missing_w`wavenum' hotenu, result(h`wavenum'ahown)
replace h`wavenum'ahown = 0 if inlist(hotenu,4,5,6) | (inlist(hotenu,1,2,3) & owner_bu == 0)
replace h`wavenum'ahown = 1 if inlist(hotenu,1,2,3) & owner_bu == 1
label variable h`wavenum'ahown "h`wavenum'ahown:w`wavenum' whether own home"
label values h`wavenum'ahown homeown

*drop intermediate variables
drop owner? owner1? owner owner_bu hsval_bu_i hdebt_bu_i nobs_bu n_owner n_owner_bu ad_hsval_bu_i ad_hdebt_bu_i

***net value of other real estate***
*wave 4 household net value of other real estate
gen h`wavenum'arles = .
replace h`wavenum'arles = .m if mi(home_bu_i) & inw`wavenum'==1
replace h`wavenum'arles = home_bu_i if h`wavenum'arles !=.m
label variable h`wavenum'arles "h`wavenum'arles:w`wavenum' assets: other real estate"

*wave 4 household net value of other real estate flag
gen h`wavenum'afrles = .
combine_ass_flags2 home_bu_t, result(h`wavenum'afrles)
label variable h`wavenum'afrles "h`wavenum'afrles:w`wavenum' asst flag: other real estate"

*check 

***net value of ISA, PEPS, TESSA***
*wave 4 household net value of ISA, PEPS, TESSA
gen h`wavenum'aira = .
replace h`wavenum'aira = .m if (mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | ///
		mi(pep_bu_i)) & inw`wavenum'==1 
replace h`wavenum'aira = tessa_bu_i + cashisa_bu_i + shisa_bu_i + pep_bu_i if h`wavenum'aira !=.m
label variable h`wavenum'aira "h`wavenum'aira:w`wavenum' assets: ISA, PEPS, TESSA"

*wave 4 household net value of ISA, PEPS, TESSA flag
gen h`wavenum'afira = .
combine_ass_flags2 tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t, result(h`wavenum'afira)
label variable h`wavenum'afira "h`wavenum'afira:w`wavenum' asst flag: ISA, PEPS, TESSA"

*check 

***net value of stocks, shares, and investment funds ***
*wave 4 household net value of stocks, shares, and investment funds 
gen h`wavenum'astck = .
replace h`wavenum'astck = .m if (mi(shares_bu_i) | mi(trusts_bu_i)) & inw`wavenum'==1
replace h`wavenum'astck = shares_bu_i + trusts_bu_i if h`wavenum'astck !=.m
label variable h`wavenum'astck "h`wavenum'astck:w`wavenum' assets: stocks"

*wave 4 household net value of stocks, shares, and investment funds flag
gen h`wavenum'afstck = .
combine_ass_flags2 shares_bu_t trusts_bu_t, result(h`wavenum'afstck)
label variable h`wavenum'afstck "h`wavenum'afstck:w`wavenum' asst flag: stocks"

*check 

***net value of current, savings accounts ****wave household net value of current, savings account accounts 
gen h`wavenum'achck = .
replace h`wavenum'achck = .m if (mi(save_bu_i) | mi(nsav_bu_i)) & inw`wavenum'==1 
replace h`wavenum'achck = save_bu_i + nsav_bu_i if h`wavenum'achck !=.m
label variable h`wavenum'achck "h`wavenum'achck:w`wavenum' assets: current,savings acct"

*wave 4 household net value of current, savings accounts flag
gen h`wavenum'afchck=.
combine_ass_flags2 save_bu_t nsav_bu_t, result(h`wavenum'afchck)
label variable h`wavenum'afchck "h`wavenum'afchck:w`wavenum' asst flag: current,savings acct"

*check 

***net value of bonds and bond funds ***
*wave 4 household net value of bonds and bond funds 
gen h`wavenum'abond = .
replace h`wavenum'abond = .m if (mi(prbonds_bu_i) | mi(bonds_bu_i)) & inw`wavenum'==1
replace h`wavenum'abond = prbonds_bu_i + bonds_bu_i if h`wavenum'abond !=.m
label variable h`wavenum'abond "h`wavenum'abond:w`wavenum' assets: bonds"

*wave 4 household net value of bonds and bond funds flag
gen h`wavenum'afbond = .
combine_ass_flags2 prbonds_bu_t bonds_bu_t, result(h`wavenum'afbond)
label variable h`wavenum'afbond "h`wavenum'afbond:w`wavenum' asst flag: bonds"

*check 

***net value of other debt ****wave household net value of other debt 
gen h`wavenum'adebt = .
replace h`wavenum'adebt = .m if (mi(ccard_bu_i) | mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'adebt = ccard_bu_i + prdebt_bu_i + odebt_bu_i if h`wavenum'adebt !=.m
label variable h`wavenum'adebt "h`wavenum'adebt:w`wavenum' assets: debts"

*wave 4 household net value of other debt flag
gen h`wavenum'afdebt = .
combine_ass_flags2 ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'afdebt)
label variable h`wavenum'afdebt "h`wavenum'afdebt:w`wavenum' asst flag: debts"

*check 

***net value of non-housing financial wealth***
*wave 4 household net value of non-housing financial wealth
gen h`wavenum'atotf = .
replace h`wavenum'atotf = .m if (mi(save_bu_i) | mi(tessa_bu_i) | mi(cashisa_bu_i) | ///
		mi(shisa_bu_i) | mi(prbonds_bu_i) | mi(nsav_bu_i) | mi(pep_bu_i) | mi(shares_bu_i) | ///
		mi(trusts_bu_i) | mi(bonds_bu_i) | mi(othsav_bu_i) | mi(jntass_bu_i) | mi(ccard_bu_i) | ///
		mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotf = save_bu_i + tessa_bu_i + cashisa_bu_i + shisa_bu_i + ///
                      prbonds_bu_i + nsav_bu_i + pep_bu_i + shares_bu_i + ///
                      trusts_bu_i + bonds_bu_i + othsav_bu_i + jntass_bu_i - ///
                      ccard_bu_i - prdebt_bu_i - odebt_bu_i if h`wavenum'atotf !=.m
label variable h`wavenum'atotf "h`wavenum'atotf:w`wavenum' non-housing financial wealth"

*wave 4 household net value of non-housing financial wealth flag
gen h`wavenum'aftotf =.
combine_ass_flags2 save_bu_t tessa_bu_t cashisa_bu_t shisa_bu_t prbonds_bu_t nsav_bu_t pep_bu_t shares_bu_t trusts_bu_t bonds_bu_t othsav_bu_t jntass_bu_t ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'aftotf)
label variable h`wavenum'aftotf "h`wavenum'aftotf:w`wavenum' flag: non-housing financial wealth"

*check 

***net value of total family wealth***
*wave 4 net value of total family wealth
gen h`wavenum'atotb = .
replace h`wavenum'atotb = .m if (h`wavenum'absns==.m | h`wavenum'atoth==.m | h`wavenum'atotf==.m | ///
		mi(home_bu_i) | mi(tothass_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotb = h`wavenum'absns + h`wavenum'atoth + h`wavenum'atotf + home_bu_i + tothass_bu_i if h`wavenum'atotb !=.m
label variable h`wavenum'atotb "h`wavenum'atotb:w`wavenum' total all assets inc. 2nd hm"

*wave 4 net value of total family wealth flag
gen other_ass_flag = . // create temporary flag for two raw variables 
combine_ass_flags2 home_bu_t tothass_bu_t, result(other_ass_flag)
gen h`wavenum'aftotb =.
combine_ass_flags9 h`wavenum'afbsns h`wavenum'aftoth h`wavenum'aftotf other_ass_flag, result(h`wavenum'aftotb)
label variable h`wavenum'aftotb "h`wavenum'aftotb:w`wavenum' flag total all assets inc. 2nd hm"

*check 

*drop intermediate variables
drop other_ass_flag


***drop ELSA wave 4 core file raw variables***
drop `asset_w4_core'

***drop ELSA wave 4 financial derived file raw variables***
drop `asset_w4_fina'

******************************************************************************************

	
	

*set wave number
local wavenum=5

***merge with wave 5 core data***
local asset_w5_core perid howh1 howh2 howh3 howh4 howh5 howh6 howh7 howh8 howh9 howh10 howh11 howh12 howh13 howh14 howh15 howh16 hotenu
merge 1:1 idauniq using "$wave_5_core", keepusing(`asset_w5_core') nogen

***merge with wave 5 financial derived variables data***
local asset_w5_fina idahhw5 coupid ///
                    farm_bu_i busv_bu_i othbusv_bu_i ///
                    farm_bu_t busv_bu_t othbusv_bu_t ///
                    hsval_hh_i ///
                    hsval_hh_t ///
                    hdebt_hh_i ///
                    hdebt_hh_t ///
                    home_bu_i ///
                    home_bu_t ///
                    tessa_bu_i cashisa_bu_i shisa_bu_i pep_bu_i ///
                    tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t ///
                    shares_bu_i trusts_bu_i ///
                    shares_bu_t trusts_bu_t ///
                    save_bu_i nsav_bu_i ///
                    save_bu_t nsav_bu_t ///
                    prbonds_bu_i bonds_bu_i ///
                    prbonds_bu_t bonds_bu_t ///
                    ccard_bu_i prdebt_bu_i odebt_bu_i ///
                    ccard_bu_t prdebt_bu_t odebt_bu_t ///
                    othsav_bu_i jntass_bu_i ///
                    othsav_bu_t jntass_bu_t ///
                    tothass_bu_i ///
                    tothass_bu_t
                           
merge 1:1 idauniq using "$wave_5_fina", keepusing(`asset_w5_fina') nogen


***net value of business***
*wave 5 household net value of business
gen h`wavenum'absns = .
replace h`wavenum'absns = .m if (mi(farm_bu_i) | mi(busv_bu_i) | mi(othbusv_bu_i)) & inw`wavenum'==1
replace h`wavenum'absns = farm_bu_i + busv_bu_i + othbusv_bu_i if h`wavenum'absns !=.m
label variable h`wavenum'absns "h`wavenum'absns:w`wavenum' assets: business"

*wave 5 household net value of business flag
gen h`wavenum'afbsns = .
combine_ass_flags2 farm_bu_t busv_bu_t othbusv_bu_t, result(h`wavenum'afbsns)
label variable h`wavenum'afbsns "h`wavenum'afbsns:w`wavenum' asst flag: business"
label values h`wavenum'afbsns typebracket

*check 

***net value of primary residence***
*wave 5 household net value of primary residence
gen owner1= howh1 // whether person 1 is owner
recode owner1 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner2= howh2 // whether person 2 is owner
recode owner2 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner3= howh3 // whether person 3 is owner
recode owner3 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner4= howh4 // whether person 4 is owner
recode owner4 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner5= howh5 // whether person 5 is owner
recode owner5 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner6= howh6 // whether person 6 is owner
recode owner6 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner7= howh7 // whether person 7 is owner
recode owner7 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner8= howh8 // whether person 8 is owner
recode owner8 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner9= howh9 // whether person 9 is owner
recode owner9 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner10= howh10 // whether person 10 is owner
recode owner10 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner11= howh11 // whether person 11 is owner
recode owner11 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner12= howh12 // whether person 12 is owner
recode owner12 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner13= howh13 // whether person 13 is owner
recode owner13 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner14= howh14 // whether person 14 is owner
recode owner14 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner15= howh15 // whether person 15 is owner
recode owner15 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner16= howh16 // whether person 16 is owner
recode owner16 (-9=.) (-8=.) (-1=.) (-2=.)
gen owner=(perid==1 & owner1==1) ///
					|(perid==2 & owner2==1) ///
					|(perid==3 & owner3==1) ///
					|(perid==4 & owner4==1) ///
					|(perid==5 & owner5==1) ///
					|(perid==6 & owner6==1) ///
					|(perid==7 & owner7==1) ///
					|(perid==8 & owner8==1) ///
					|(perid==9 & owner9==1) ///
					|(perid==10 & owner10==1) ///
					|(perid==11 & owner11==1) ///
					|(perid==12 & owner12==1) ///
					|(perid==13 & owner13==1) ///
					|(perid==14 & owner14==1) ///
					|(perid==15 & owner15==1) ///
					|(perid==16 & owner16==1) // indicate any home ownership by individual
bysort coupid: egen owner_bu=max(owner) // indicate any home ownership by couple
replace owner_bu = owner if inlist(coupid,-10,.)

gen hsval_bu_i=0 // generate house value
replace hsval_bu_i=. if coupid==-10
replace hsval_bu_i=hsval_hh_i if (owner_bu==1 & coupid!=-10)

gen hdebt_bu_i=0 // generate house debt
replace hdebt_bu_i=. if coupid==-10
replace hdebt_bu_i=hdebt_hh_i if (owner_bu==1 & coupid!=-10)

*generate value of the house and debt weighted by number of benefit units that are houseowners
bysort coupid: gen nobs_bu=_n if !inlist(coupid,-10,.) // assign sequential number by couple
replace nobs_bu = 1 if inlist(coupid,-10,.) // assign number 1 to everyone without a couple id
bysort idahhw`wavenum': egen n_owner=sum(owner_bu) if nobs_bu==1 & !missing(idahhw`wavenum')
bysort coupid: egen n_owner_bu=max(n_owner) if !inlist(coupid,-10,.) // generate number of couples who own house per household
replace n_owner_bu = n_owner if inlist(coupid,-10,.)

gen ad_hsval_bu_i=0 // generate house value weighted for number of couples who own house
replace ad_hsval_bu_i=(hsval_bu_i/n_owner_bu) if n_owner_bu>0

gen ad_hdebt_bu_i=0 // generate house debt weighted for number of couples who own house
replace ad_hdebt_bu_i=(hdebt_bu_i/n_owner_bu) if n_owner_bu>0

*wave 5 household value of house/prim res
gen h`wavenum'ahous = .
replace h`wavenum'ahous = .m if mi(ad_hsval_bu_i) & inw`wavenum'==1
replace h`wavenum'ahous = ad_hsval_bu_i if h`wavenum'ahous !=.m
label variable h`wavenum'ahous "h`wavenum'ahous:w`wavenum' value of house/prim res"

*wave 5 household value of house/prim res flag
gen h`wavenum'afhous = .
combine_ass_flags2 hsval_hh_t, result(h`wavenum'afhous)
label variable h`wavenum'afhous "h`wavenum'afhous:w`wavenum' flag: value of house/prim res"

*check 
	
*wave 5 household value of mortgage/prim res
gen h`wavenum'amort = .
replace h`wavenum'amort = .m if mi(ad_hdebt_bu_i) & inw`wavenum'==1
replace h`wavenum'amort = ad_hdebt_bu_i if h`wavenum'amort !=.m
label variable h`wavenum'amort "h`wavenum'amort:w`wavenum' value of mortgage/prim res"

*wave 5 household value of mortgage/prim res flag
gen h`wavenum'afmort = .
combine_ass_flags2 hdebt_hh_t, result(h`wavenum'afmort)
label variable h`wavenum'afmort "h`wavenum'afmort:w`wavenum' flag: value of mortgage/prim res"

*check 

*wave 5 household net value of house/prim res
gen h`wavenum'atoth = .
replace h`wavenum'atoth = .m if (mi(ad_hsval_bu_i) | mi(ad_hdebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atoth = (ad_hsval_bu_i - ad_hdebt_bu_i) if h`wavenum'atoth !=.m
label variable h`wavenum'atoth "h`wavenum'atoth:w`wavenum' net value of house/prim res"

*wave 5 household multiple couple home ownership flag
gen h`wavenum'aftothn =.
replace h`wavenum'aftothn = .m if (mi(hsval_hh_i) | mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 0 if n_owner_bu<=1 & (!mi(hsval_hh_i) | !mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 1 if n_owner_bu>1  & inw`wavenum' == 1
label variable h`wavenum'aftothn "h`wavenum'aftothn:w`wavenum' flag: multiple couple home ownership"
label values h`wavenum'aftothn tothn

*wave 5 household net value of primary residence flag
gen h`wavenum'aftoth = .
combine_ass_flags2 hsval_hh_t hdebt_hh_t, result(h`wavenum'aftoth)
label variable h`wavenum'aftoth "h`wavenum'aftoth:w`wavenum' flag: net value of house/prim res"

*check 

*wave 5 household whether own home
gen h`wavenum'ahown = .
missing_w`wavenum' hotenu, result(h`wavenum'ahown)
replace h`wavenum'ahown = 0 if inlist(hotenu,4,5,6) | (inlist(hotenu,1,2,3) & owner_bu == 0)
replace h`wavenum'ahown = 1 if inlist(hotenu,1,2,3) & owner_bu == 1
label variable h`wavenum'ahown "h`wavenum'ahown:w`wavenum' whether own home"
label values h`wavenum'ahown homeown

*drop intermediate variables
drop owner? owner1? owner owner_bu hsval_bu_i hdebt_bu_i nobs_bu n_owner n_owner_bu ad_hsval_bu_i ad_hdebt_bu_i

***net value of other real estate***
*wave 5 household net value of other real estate
gen h`wavenum'arles = .
replace h`wavenum'arles = .m if mi(home_bu_i) & inw`wavenum'==1
replace h`wavenum'arles = home_bu_i if h`wavenum'arles !=.m
label variable h`wavenum'arles "h`wavenum'arles:w`wavenum' assets: other real estate"

*wave 5 household net value of other real estate flag
gen h`wavenum'afrles = .
combine_ass_flags2 home_bu_t, result(h`wavenum'afrles)
label variable h`wavenum'afrles "h`wavenum'afrles:w`wavenum' asst flag: other real estate"

*check 

***net value of ISA, PEPS, TESSA***
*wave 5 household net value of ISA, PEPS, TESSA
gen h`wavenum'aira = .
replace h`wavenum'aira = .m if (mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | ///
		mi(pep_bu_i)) & inw`wavenum'==1 
replace h`wavenum'aira = tessa_bu_i + cashisa_bu_i + shisa_bu_i + pep_bu_i if h`wavenum'aira !=.m
label variable h`wavenum'aira "h`wavenum'aira:w`wavenum' assets: ISA, PEPS, TESSA"

*wave 5 household net value of ISA, PEPS, TESSA flag
gen h`wavenum'afira = .
combine_ass_flags2 tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t, result(h`wavenum'afira)
label variable h`wavenum'afira "h`wavenum'afira:w`wavenum' asst flag: ISA, PEPS, TESSA"

*check 

***net value of stocks, shares, and investment funds ***
*wave 5 household net value of stocks, shares, and investment funds 
gen h`wavenum'astck = .
replace h`wavenum'astck = .m if (mi(shares_bu_i) | mi(trusts_bu_i)) & inw`wavenum'==1
replace h`wavenum'astck = shares_bu_i + trusts_bu_i if h`wavenum'astck !=.m
label variable h`wavenum'astck "h`wavenum'astck:w`wavenum' assets: stocks"

*wave 5 household net value of stocks, shares, and investment funds flag
gen h`wavenum'afstck = .
combine_ass_flags2 shares_bu_t trusts_bu_t, result(h`wavenum'afstck)
label variable h`wavenum'afstck "h`wavenum'afstck:w`wavenum' asst flag: stocks"

*check 

***net value of current, savings accounts ****wave household net value of current, savings account accounts 
gen h`wavenum'achck = .
replace h`wavenum'achck = .m if (mi(save_bu_i) | mi(nsav_bu_i)) & inw`wavenum'==1 
replace h`wavenum'achck = save_bu_i + nsav_bu_i if h`wavenum'achck !=.m
label variable h`wavenum'achck "h`wavenum'achck:w`wavenum' assets: current,savings acct"

*wave 5 household net value of current, savings accounts flag
gen h`wavenum'afchck = .
combine_ass_flags2 save_bu_t nsav_bu_t, result(h`wavenum'afchck)
label variable h`wavenum'afchck "h`wavenum'afchck:w`wavenum' asst flag: current,savings acct"

*check 

***net value of bonds and bond funds ***
*wave 5 household net value of bonds and bond funds 
gen h`wavenum'abond = .
replace h`wavenum'abond = .m if (mi(prbonds_bu_i) | mi(bonds_bu_i)) & inw`wavenum'==1
replace h`wavenum'abond = prbonds_bu_i + bonds_bu_i if h`wavenum'abond !=.m
label variable h`wavenum'abond "h`wavenum'abond:w`wavenum' assets: bonds"

*wave 5 household net value of bonds and bond funds flag
gen h`wavenum'afbond = .
combine_ass_flags2 prbonds_bu_t bonds_bu_t, result(h`wavenum'afbond)
label variable h`wavenum'afbond "h`wavenum'afbond:w`wavenum' asst flag: bonds"

*check 

***net value of other debt ****wave household net value of other debt 
gen h`wavenum'adebt = .
replace h`wavenum'adebt = .m if (mi(ccard_bu_i) | mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'adebt = ccard_bu_i + prdebt_bu_i + odebt_bu_i if h`wavenum'adebt !=.m
label variable h`wavenum'adebt "h`wavenum'adebt:w`wavenum' assets: debts"

*wave 5 household net value of other debt flag
gen h`wavenum'afdebt = .
combine_ass_flags2 ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'afdebt)
label variable h`wavenum'afdebt "h`wavenum'afdebt:w`wavenum' asst flag: debts"

*check 

***net value of non-housing financial wealth***
*wave 5 household net value of non-housing financial wealth
gen h`wavenum'atotf = .
replace h`wavenum'atotf = .m if (mi(save_bu_i) | mi(tessa_bu_i) | mi(cashisa_bu_i) | ///
		mi(shisa_bu_i) | mi(prbonds_bu_i) | mi(nsav_bu_i) | mi(pep_bu_i) | mi(shares_bu_i) | ///
		mi(trusts_bu_i) | mi(bonds_bu_i) | mi(othsav_bu_i) | mi(jntass_bu_i) | mi(ccard_bu_i) | ///
		mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotf = save_bu_i + tessa_bu_i + cashisa_bu_i + shisa_bu_i + ///
                      prbonds_bu_i + nsav_bu_i + pep_bu_i + shares_bu_i + ///
                      trusts_bu_i + bonds_bu_i + othsav_bu_i + jntass_bu_i - ///
                      ccard_bu_i - prdebt_bu_i - odebt_bu_i if h`wavenum'atotf !=.m
label variable h`wavenum'atotf "h`wavenum'atotf:w`wavenum' non-housing financial wealth"

*wave 5 household net value of non-housing financial wealth flag
gen h`wavenum'aftotf = .
combine_ass_flags2 save_bu_t tessa_bu_t cashisa_bu_t shisa_bu_t prbonds_bu_t nsav_bu_t pep_bu_t shares_bu_t trusts_bu_t bonds_bu_t othsav_bu_t jntass_bu_t ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'aftotf)
label variable h`wavenum'aftotf "h`wavenum'aftotf:w`wavenum' flag: non-housing financial wealth"

*check 

***net value of total family wealth***
*wave 5 net value of total family wealth
gen h`wavenum'atotb = .
replace h`wavenum'atotb = .m if (h`wavenum'absns==.m | h`wavenum'atoth==.m | h`wavenum'atotf==.m | ///
		mi(home_bu_i) | mi(tothass_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotb = h`wavenum'absns + h`wavenum'atoth + h`wavenum'atotf + home_bu_i + tothass_bu_i if h`wavenum'atotb !=.m
label variable h`wavenum'atotb "h`wavenum'atotb:w`wavenum' total all assets inc. 2nd hm"

*wave 5 net value of total family wealth flag
gen other_ass_flag = . // create temporary flag for two raw variables 
combine_ass_flags2 home_bu_t tothass_bu_t, result(other_ass_flag)
gen h`wavenum'aftotb = .
combine_ass_flags9 h`wavenum'afbsns h`wavenum'aftoth h`wavenum'aftotf other_ass_flag, result(h`wavenum'aftotb)
label variable h`wavenum'aftotb "h`wavenum'aftotb:w`wavenum' flag total all assets inc. 2nd hm"

*check 

*drop intermediate variables
drop other_ass_flag


***drop ELSA wave 5 core file raw variables***
drop `asset_w5_core'

***drop ELSA wave 5 financial derived file raw variables***
drop `asset_w5_fina'

******************************************************************************************

	

*set wave number
local wavenum=6

***merge with wave 6 core data***
local asset_w6_core perid howh1 howh2 howh3 howh4 howh5 howh6 howh7 howh8 howh9 howh10 howh11 howh12 howh13 howh14 howh15 howh16 HoTenu
merge 1:1 idauniq using "$wave_6_core", keepusing(`asset_w6_core') nogen

***merge with wave 6 financial derived variables data***
local asset_w6_fina idahhw6 coupid ///
                    farm_bu_i busv_bu_i othbusv_bu_i ///
                    farm_bu_t busv_bu_t othbusv_bu_t ///
                    hsval_hh_i ///
                    hsval_hh_t ///
                    hdebt_hh_i ///
                    hdebt_hh_t ///
                    home_bu_i ///
                    home_bu_t ///
                    tessa_bu_i cashisa_bu_i shisa_bu_i pep_bu_i ///
                    tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t ///
                    shares_bu_i trusts_bu_i ///
                    shares_bu_t trusts_bu_t ///
                    save_bu_i nsav_bu_i ///
                    save_bu_t nsav_bu_t ///
                    prbonds_bu_i bonds_bu_i ///
                    prbonds_bu_t bonds_bu_t ///
                    ccard_bu_i prdebt_bu_i odebt_bu_i ///
                    ccard_bu_t prdebt_bu_t odebt_bu_t ///
                    othsav_bu_i jntass_bu_i ///
                    othsav_bu_t jntass_bu_t ///
                    tothass_bu_i ///
                    tothass_bu_t
                           
merge 1:1 idauniq using "$wave_6_fina", keepusing(`asset_w6_fina') nogen


***net value of business***
*wave 6 household net value of business
gen h`wavenum'absns = .
replace h`wavenum'absns = .m if (mi(farm_bu_i) | mi(busv_bu_i) | mi(othbusv_bu_i)) & inw`wavenum'==1
replace h`wavenum'absns = farm_bu_i + busv_bu_i + othbusv_bu_i if h`wavenum'absns !=.m
label variable h`wavenum'absns "h`wavenum'absns:w`wavenum' assets: business"

*wave 6 household net value of business flag
gen h`wavenum'afbsns = .
combine_ass_flags2 farm_bu_t busv_bu_t othbusv_bu_t, result(h`wavenum'afbsns)
label variable h`wavenum'afbsns "h`wavenum'afbsns:w`wavenum' asst flag: business"
label values h`wavenum'afbsns typebracket

*check 

***net value of primary residence***
*wave 6 household net value of primary residence
gen owner1= howh1 // whether person 1 is owner
recode owner1 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner2= howh2 // whether person 2 is owner
recode owner2 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner3= howh3 // whether person 3 is owner
recode owner3 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner4= howh4 // whether person 4 is owner
recode owner4 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner5= howh5 // whether person 5 is owner
recode owner5 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner6= howh6 // whether person 6 is owner
recode owner6 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner7= howh7 // whether person 7 is owner
recode owner7 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner8= howh8 // whether person 8 is owner
recode owner8 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner9= howh9 // whether person 9 is owner
recode owner9 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner10= howh10 // whether person 10 is owner
recode owner10 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner11= howh11 // whether person 11 is owner
recode owner11 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner12= howh12 // whether person 12 is owner
recode owner12 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner13= howh13 // whether person 13 is owner
recode owner13 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner14= howh14 // whether person 14 is owner
recode owner14 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner15= howh15 // whether person 15 is owner
recode owner15 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner16= howh16 // whether person 16 is owner
recode owner16 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner=(perid==1 & owner1==1) ///
					|(perid==2 & owner2==1) ///
					|(perid==3 & owner3==1) ///
					|(perid==4 & owner4==1) ///
					|(perid==5 & owner5==1) ///
					|(perid==6 & owner6==1) ///
					|(perid==7 & owner7==1) ///
					|(perid==8 & owner8==1) ///
					|(perid==9 & owner9==1) ///
					|(perid==10 & owner10==1) ///
					|(perid==11 & owner11==1) ///
					|(perid==12 & owner12==1) ///
					|(perid==13 & owner13==1) ///
					|(perid==14 & owner14==1) ///
					|(perid==15 & owner15==1) ///
					|(perid==16 & owner16==1) // indicate any home ownership by individual
bysort coupid: egen owner_bu=max(owner) // indicate any home ownership by couple
replace owner_bu = owner if inlist(coupid,-10,.)

gen hsval_bu_i=0 // generate house value
replace hsval_bu_i=. if coupid==-10
replace hsval_bu_i=hsval_hh_i if (owner_bu==1 & coupid!=-10)

gen hdebt_bu_i=0 // generate house debt
replace hdebt_bu_i=. if coupid==-10
replace hdebt_bu_i=hdebt_hh_i if (owner_bu==1 & coupid!=-10)

*generate value of the house and debt weighted by number of benefit units that are houseowners
bysort coupid: gen nobs_bu=_n if !inlist(coupid,-10,.) // assign sequential number by couple
replace nobs_bu = 1 if inlist(coupid,-10,.) // assign number 1 to everyone without a couple id
bysort idahhw`wavenum': egen n_owner=sum(owner_bu) if nobs_bu==1 & !missing(idahhw`wavenum')
bysort coupid: egen n_owner_bu=max(n_owner) if !inlist(coupid,-10,.) // generate number of couples who own house per household
replace n_owner_bu = n_owner if inlist(coupid,-10,.)

gen ad_hsval_bu_i=0 // generate house value weighted for number of couples who own house
replace ad_hsval_bu_i=(hsval_bu_i/n_owner_bu) if n_owner_bu>0

gen ad_hdebt_bu_i=0 // generate house debt weighted for number of couples who own house
replace ad_hdebt_bu_i=(hdebt_bu_i/n_owner_bu) if n_owner_bu>0

*wave 6 household value of house/prim res
gen h`wavenum'ahous = .
replace h`wavenum'ahous = .m if mi(ad_hsval_bu_i) & inw`wavenum'==1
replace h`wavenum'ahous = ad_hsval_bu_i if h`wavenum'ahous !=.m
label variable h`wavenum'ahous "h`wavenum'ahous:w`wavenum' value of house/prim res"

*wave 6 household value of house/prim res flag
gen h`wavenum'afhous = .
combine_ass_flags2 hsval_hh_t, result(h`wavenum'afhous)
label variable h`wavenum'afhous "h`wavenum'afhous:w`wavenum' flag: value of house/prim res"

*check 
	
*wave 6 household value of mortgage/prim res
gen h`wavenum'amort = .
replace h`wavenum'amort = .m if mi(ad_hdebt_bu_i) & inw`wavenum'==1
replace h`wavenum'amort = ad_hdebt_bu_i if h`wavenum'amort !=.m
label variable h`wavenum'amort "h`wavenum'amort:w`wavenum' value of mortgage/prim res"

*wave 6 household value of mortgage/prim res flag
gen h`wavenum'afmort = .
combine_ass_flags2 hdebt_hh_t, result(h`wavenum'afmort)
label variable h`wavenum'afmort "h`wavenum'afmort:w`wavenum' flag: value of mortgage/prim res"

*check 

*wave 6 household net value of house/prim res
gen h`wavenum'atoth = .
replace h`wavenum'atoth = .m if (mi(ad_hsval_bu_i) | mi(ad_hdebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atoth = (ad_hsval_bu_i - ad_hdebt_bu_i) if h`wavenum'atoth !=.m
label variable h`wavenum'atoth "h`wavenum'atoth:w`wavenum' net value of house/prim res"

*wave 6 household multiple couple home ownership flag
gen h`wavenum'aftothn = .
replace h`wavenum'aftothn = .m if (mi(hsval_hh_i) | mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 0 if n_owner_bu<=1 & (!mi(hsval_hh_i) | !mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 1 if n_owner_bu>1  & inw`wavenum' == 1
label variable h`wavenum'aftothn "h`wavenum'aftothn:w`wavenum' flag: multiple couple home ownership"
label values h`wavenum'aftothn tothn

*wave 6 household net value of primary residence flag
gen h`wavenum'aftoth = .
combine_ass_flags2 hsval_hh_t hdebt_hh_t, result(h`wavenum'aftoth)
label variable h`wavenum'aftoth "h`wavenum'aftoth:w`wavenum' flag: net value of house/prim res"

*check 

*wave 6 household whether own home
gen h`wavenum'ahown = .
missing_w`wavenum' HoTenu, result(h`wavenum'ahown)
replace h`wavenum'ahown = .m if HoTenu == -3
replace h`wavenum'ahown = 0 if inlist(HoTenu,4,5,6) | (inlist(HoTenu,1,2,3) & owner_bu == 0)
replace h`wavenum'ahown = 1 if inlist(HoTenu,1,2,3) & owner_bu == 1
label variable h`wavenum'ahown "h`wavenum'ahown:w`wavenum' whether own home"
label values h`wavenum'ahown homeown

*drop intermediate variables
drop owner? owner1? owner owner_bu hsval_bu_i hdebt_bu_i nobs_bu n_owner n_owner_bu ad_hsval_bu_i ad_hdebt_bu_i

***net value of other real estate***
*wave 6 household net value of other real estate
gen h`wavenum'arles = .
replace h`wavenum'arles = .m if mi(home_bu_i) & inw`wavenum'==1
replace h`wavenum'arles = home_bu_i if h`wavenum'arles !=.m
label variable h`wavenum'arles "h`wavenum'arles:w`wavenum' assets: other real estate"

*wave 6 household net value of other real estate flag
gen h`wavenum'afrles = .
combine_ass_flags2 home_bu_t, result(h`wavenum'afrles)
label variable h`wavenum'afrles "h`wavenum'afrles:w`wavenum' asst flag: other real estate"

*check 

***net value of ISA, PEPS, TESSA***
*wave 6 household net value of ISA, PEPS, TESSA
gen h`wavenum'aira = .
replace h`wavenum'aira = .m if (mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | ///
		mi(pep_bu_i)) & inw`wavenum'==1 
replace h`wavenum'aira = tessa_bu_i + cashisa_bu_i + shisa_bu_i + pep_bu_i if h`wavenum'aira !=.m
label variable h`wavenum'aira "h`wavenum'aira:w`wavenum' assets: ISA, PEPS, TESSA"

*wave 6 household net value of ISA, PEPS, TESSA flag
gen h`wavenum'afira = .
combine_ass_flags2 tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t, result(h`wavenum'afira)
label variable h`wavenum'afira "h`wavenum'afira:w`wavenum' asst flag: ISA, PEPS, TESSA"

*check 

***net value of stocks, shares, and investment funds ***
*wave 6 household net value of stocks, shares, and investment funds 
gen h`wavenum'astck = .
replace h`wavenum'astck = .m if (mi(shares_bu_i) | mi(trusts_bu_i)) & inw`wavenum'==1
replace h`wavenum'astck = shares_bu_i + trusts_bu_i if h`wavenum'astck !=.m
label variable h`wavenum'astck "h`wavenum'astck:w`wavenum' assets: stocks"

*wave 6 household net value of stocks, shares, and investment funds flag
gen h`wavenum'afstck = .
combine_ass_flags2 shares_bu_t trusts_bu_t, result(h`wavenum'afstck)
label variable h`wavenum'afstck "h`wavenum'afstck:w`wavenum' asst flag: stocks"

*check 

***net value of current, savings accounts ****wave household net value of current, savings account accounts 
gen h`wavenum'achck = .
replace h`wavenum'achck = .m if (mi(save_bu_i) | mi(nsav_bu_i)) & inw`wavenum'==1 
replace h`wavenum'achck = save_bu_i + nsav_bu_i if h`wavenum'achck !=.m
label variable h`wavenum'achck "h`wavenum'achck:w`wavenum' assets: current,savings acct"

*wave 6 household net value of current, savings accounts flag
gen h`wavenum'afchck = .
combine_ass_flags2 save_bu_t nsav_bu_t, result(h`wavenum'afchck)
label variable h`wavenum'afchck "h`wavenum'afchck:w`wavenum' asst flag: current,savings acct"

*check 

***net value of bonds and bond funds ***
*wave 6 household net value of bonds and bond funds 
gen h`wavenum'abond = .
replace h`wavenum'abond = .m if (mi(prbonds_bu_i) | mi(bonds_bu_i)) & inw`wavenum'==1
replace h`wavenum'abond = prbonds_bu_i + bonds_bu_i if h`wavenum'abond !=.m
label variable h`wavenum'abond "h`wavenum'abond:w`wavenum' assets: bonds"

*wave 6 household net value of bonds and bond funds flag
gen h`wavenum'afbond = .
combine_ass_flags2 prbonds_bu_t bonds_bu_t, result(h`wavenum'afbond)
label variable h`wavenum'afbond "h`wavenum'afbond:w`wavenum' asst flag: bonds"

*check 

***net value of other debt ****wave household net value of other debt 
gen h`wavenum'adebt = .
replace h`wavenum'adebt = .m if (mi(ccard_bu_i) | mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'adebt = ccard_bu_i + prdebt_bu_i + odebt_bu_i if h`wavenum'adebt !=.m
label variable h`wavenum'adebt "h`wavenum'adebt:w`wavenum' assets: debts"

*wave 6 household net value of other debt flag
gen h`wavenum'afdebt = .
combine_ass_flags2 ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'afdebt)
label variable h`wavenum'afdebt "h`wavenum'afdebt:w`wavenum' asst flag: debts"

*check 

***net value of non-housing financial wealth***
*wave 6 household net value of non-housing financial wealth
gen h`wavenum'atotf = .
replace h`wavenum'atotf = .m if (mi(save_bu_i) | mi(tessa_bu_i) | mi(cashisa_bu_i) | ///
		mi(shisa_bu_i) | mi(prbonds_bu_i) | mi(nsav_bu_i) | mi(pep_bu_i) | mi(shares_bu_i) | ///
		mi(trusts_bu_i) | mi(bonds_bu_i) | mi(othsav_bu_i) | mi(jntass_bu_i) | mi(ccard_bu_i) | ///
		mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotf = save_bu_i + tessa_bu_i + cashisa_bu_i + shisa_bu_i + ///
                      prbonds_bu_i + nsav_bu_i + pep_bu_i + shares_bu_i + ///
                      trusts_bu_i + bonds_bu_i + othsav_bu_i + jntass_bu_i - ///
                      ccard_bu_i - prdebt_bu_i - odebt_bu_i if h`wavenum'atotf !=.m
label variable h`wavenum'atotf "h`wavenum'atotf:w`wavenum' non-housing financial wealth"

*wave 6 household net value of non-housing financial wealth flag
gen h`wavenum'aftotf = .
combine_ass_flags2 save_bu_t tessa_bu_t cashisa_bu_t shisa_bu_t prbonds_bu_t nsav_bu_t pep_bu_t shares_bu_t trusts_bu_t bonds_bu_t othsav_bu_t jntass_bu_t ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'aftotf)
label variable h`wavenum'aftotf "h`wavenum'aftotf:w`wavenum' flag: non-housing financial wealth"

*check 

***net value of total family wealth***
*wave 6 net value of total family wealth
gen h`wavenum'atotb = .
replace h`wavenum'atotb = .m if (h`wavenum'absns==.m | h`wavenum'atoth==.m | h`wavenum'atotf==.m | ///
		mi(home_bu_i) | mi(tothass_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotb = h`wavenum'absns + h`wavenum'atoth + h`wavenum'atotf + home_bu_i + tothass_bu_i if h`wavenum'atotb !=.m
label variable h`wavenum'atotb "h`wavenum'atotb:w`wavenum' total all assets inc. 2nd hm"

*wave 6 net value of total family wealth flag
gen other_ass_flag = . // create temporary flag for two raw variables 
combine_ass_flags2 home_bu_t tothass_bu_t, result(other_ass_flag)
gen h`wavenum'aftotb = .
combine_ass_flags9 h`wavenum'afbsns h`wavenum'aftoth h`wavenum'aftotf other_ass_flag, result(h`wavenum'aftotb)
label variable h`wavenum'aftotb "h`wavenum'aftotb:w`wavenum' flag total all assets inc. 2nd hm"

*check 

*drop intermediate variables
drop other_ass_flag


***drop ELSA wave 6 core file raw variables***
drop `asset_w6_core'

***drop ELSA wave 6 financial derived file raw variables***
drop `asset_w6_fina'

******************************************************************************************

	

*set wave number
local wavenum=7

***merge with wave 7 core data***
local asset_w7_core perid howh1 howh2 howh3 howh4 howh5 howh6 howh7 howh8 howh9 howh10 howh11 howh12 howh13 howh14 howh15 howh16 HoTenu
merge 1:1 idauniq using "$wave_7_core", keepusing(`asset_w7_core') nogen

***merge with wave 7 financial derived variables data***
local asset_w7_fina idahhw7 coupid ///
                    farm_bu_i busv_bu_i othbusv_bu_i ///
                    farm_bu_t busv_bu_t othbusv_bu_t ///
                    hsval_hh_i ///
                    hsval_hh_t ///
                    hdebt_hh_i ///
                    hdebt_hh_t ///
                    home_bu_i ///
                    home_bu_t ///
                    tessa_bu_i cashisa_bu_i shisa_bu_i pep_bu_i ///
                    tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t ///
                    shares_bu_i trusts_bu_i ///
                    shares_bu_t trusts_bu_t ///
                    save_bu_i nsav_bu_i ///
                    save_bu_t nsav_bu_t ///
                    prbonds_bu_i bonds_bu_i ///
                    prbonds_bu_t bonds_bu_t ///
                    ccard_bu_i prdebt_bu_i odebt_bu_i ///
                    ccard_bu_t prdebt_bu_t odebt_bu_t ///
                    othsav_bu_i jntass_bu_i ///
                    othsav_bu_t jntass_bu_t ///
                    tothass_bu_i ///
                    tothass_bu_t
                           
merge 1:1 idauniq using "$wave_7_fina", keepusing(`asset_w7_fina') nogen


***net value of business***
*wave 7 household net value of business
gen h`wavenum'absns = .
replace h`wavenum'absns = .m if (mi(farm_bu_i) | mi(busv_bu_i) | mi(othbusv_bu_i)) & inw`wavenum'==1
replace h`wavenum'absns = farm_bu_i + busv_bu_i + othbusv_bu_i if h`wavenum'absns !=.m
label variable h`wavenum'absns "h`wavenum'absns:w`wavenum' assets: business"

*wave 7 household net value of business flag
gen h`wavenum'afbsns = .
combine_ass_flags2 farm_bu_t busv_bu_t othbusv_bu_t, result(h`wavenum'afbsns)
label variable h`wavenum'afbsns "h`wavenum'afbsns:w`wavenum' asst flag: business"
label values h`wavenum'afbsns typebracket

*check 

***net value of primary residence***
*wave 7 household net value of primary residence
gen owner1= howh1 // whether person 1 is owner
recode owner1 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner2= howh2 // whether person 2 is owner
recode owner2 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner3= howh3 // whether person 3 is owner
recode owner3 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner4= howh4 // whether person 4 is owner
recode owner4 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner5= howh5 // whether person 5 is owner
recode owner5 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner6= howh6 // whether person 6 is owner
recode owner6 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner7= howh7 // whether person 7 is owner
recode owner7 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner8= howh8 // whether person 8 is owner
recode owner8 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner9= howh9 // whether person 9 is owner
recode owner9 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner10= howh10 // whether person 10 is owner
recode owner10 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner11= howh11 // whether person 11 is owner
recode owner11 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner12= howh12 // whether person 12 is owner
recode owner12 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner13= howh13 // whether person 13 is owner
recode owner13 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner14= howh14 // whether person 14 is owner
recode owner14 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner15= howh15 // whether person 15 is owner
recode owner15 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner16= howh16 // whether person 16 is owner
recode owner16 (-9=.) (-8=.) (-1=.) (-3=.) (-2=.)
gen owner=(perid==1 & owner1==1) ///
					|(perid==2 & owner2==1) ///
					|(perid==3 & owner3==1) ///
					|(perid==4 & owner4==1) ///
					|(perid==5 & owner5==1) ///
					|(perid==6 & owner6==1) ///
					|(perid==7 & owner7==1) ///
					|(perid==8 & owner8==1) ///
					|(perid==9 & owner9==1) ///
					|(perid==10 & owner10==1) ///
					|(perid==11 & owner11==1) ///
					|(perid==12 & owner12==1) ///
					|(perid==13 & owner13==1) ///
					|(perid==14 & owner14==1) ///
					|(perid==15 & owner15==1) ///
					|(perid==16 & owner16==1) // indicate any home ownership by individual
bysort coupid: egen owner_bu=max(owner) // indicate any home ownership by couple
replace owner_bu = owner if inlist(coupid,-10,.)

gen hsval_bu_i=0 // generate house value
replace hsval_bu_i=. if coupid==-10
replace hsval_bu_i=hsval_hh_i if (owner_bu==1 & coupid!=-10)

gen hdebt_bu_i=0 // generate house debt
replace hdebt_bu_i=. if coupid==-10
replace hdebt_bu_i=hdebt_hh_i if (owner_bu==1 & coupid!=-10)

*generate value of the house and debt weighted by number of benefit units that are houseowners
bysort coupid: gen nobs_bu=_n if !inlist(coupid,-10,.) // assign sequential number by couple
replace nobs_bu = 1 if inlist(coupid,-10,.) // assign number 1 to everyone without a couple id
bysort idahhw`wavenum': egen n_owner=sum(owner_bu) if nobs_bu==1 & !missing(idahhw`wavenum')
bysort coupid: egen n_owner_bu=max(n_owner) if !inlist(coupid,-10,.) // generate number of couples who own house per household
replace n_owner_bu = n_owner if inlist(coupid,-10,.)

gen ad_hsval_bu_i=0 // generate house value weighted for number of couples who own house
replace ad_hsval_bu_i=(hsval_bu_i/n_owner_bu) if n_owner_bu>0

gen ad_hdebt_bu_i=0 // generate house debt weighted for number of couples who own house
replace ad_hdebt_bu_i=(hdebt_bu_i/n_owner_bu) if n_owner_bu>0

*wave 7 household value of house/prim res
gen h`wavenum'ahous = .
replace h`wavenum'ahous = .m if mi(ad_hsval_bu_i) & inw`wavenum'==1
replace h`wavenum'ahous = ad_hsval_bu_i if h`wavenum'ahous !=.m
label variable h`wavenum'ahous "h`wavenum'ahous:w`wavenum' value of house/prim res"

*wave 7 household value of house/prim res flag
gen h`wavenum'afhous = .
combine_ass_flags2 hsval_hh_t, result(h`wavenum'afhous)
label variable h`wavenum'afhous "h`wavenum'afhous:w`wavenum' flag: value of house/prim res"

*check 
	
*wave 7 household value of mortgage/prim res
gen h`wavenum'amort = .
replace h`wavenum'amort = .m if mi(ad_hdebt_bu_i) & inw`wavenum'==1
replace h`wavenum'amort = ad_hdebt_bu_i if h`wavenum'amort !=.m
label variable h`wavenum'amort "h`wavenum'amort:w`wavenum' value of mortgage/prim res"

*wave 7 household value of mortgage/prim res flag
gen h`wavenum'afmort = .
combine_ass_flags2 hdebt_hh_t, result(h`wavenum'afmort)
label variable h`wavenum'afmort "h`wavenum'afmort:w`wavenum' flag: value of mortgage/prim res"

*check 

*wave 7 household net value of house/prim res
gen h`wavenum'atoth = .
replace h`wavenum'atoth = .m if (mi(ad_hsval_bu_i) | mi(ad_hdebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atoth = (ad_hsval_bu_i - ad_hdebt_bu_i) if h`wavenum'atoth !=.m
label variable h`wavenum'atoth "h`wavenum'atoth:w`wavenum' net value of house/prim res"

*wave 7 household multiple couple home ownership flag
gen h`wavenum'aftothn = .
replace h`wavenum'aftothn = .m if (mi(hsval_hh_i) | mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 0 if n_owner_bu<=1 & (!mi(hsval_hh_i) | !mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 1 if n_owner_bu>1  & inw`wavenum' == 1
label variable h`wavenum'aftothn "h`wavenum'aftothn:w`wavenum' flag: multiple couple home ownership"
label values h`wavenum'aftothn tothn

*wave 7 household net value of primary residence flag
gen h`wavenum'aftoth = .
combine_ass_flags2 hsval_hh_t hdebt_hh_t, result(h`wavenum'aftoth)
label variable h`wavenum'aftoth "h`wavenum'aftoth:w`wavenum' flag: net value of house/prim res"

*check 

*wave 7 household whether own home
gen h`wavenum'ahown = .
missing_w`wavenum' HoTenu, result(h`wavenum'ahown)
replace h`wavenum'ahown = .m if HoTenu == -3
replace h`wavenum'ahown = 0 if inlist(HoTenu,4,5,6) | (inlist(HoTenu,1,2,3) & owner_bu == 0)
replace h`wavenum'ahown = 1 if inlist(HoTenu,1,2,3) & owner_bu == 1
label variable h`wavenum'ahown "h`wavenum'ahown:w`wavenum' whether own home"
label values h`wavenum'ahown homeown

*drop intermediate variables
drop owner? owner1? owner owner_bu hsval_bu_i hdebt_bu_i nobs_bu n_owner n_owner_bu ad_hsval_bu_i ad_hdebt_bu_i

***net value of other real estate***
*wave 7 household net value of other real estate
gen h`wavenum'arles = .
replace h`wavenum'arles = .m if mi(home_bu_i) & inw`wavenum'==1
replace h`wavenum'arles = home_bu_i if h`wavenum'arles !=.m
label variable h`wavenum'arles "h`wavenum'arles:w`wavenum' assets: other real estate"

*wave 7 household net value of other real estate flag
gen h`wavenum'afrles = .
combine_ass_flags2 home_bu_t, result(h`wavenum'afrles)
label variable h`wavenum'afrles "h`wavenum'afrles:w`wavenum' asst flag: other real estate"

*check 

***net value of ISA, PEPS, TESSA***
*wave 7 household net value of ISA, PEPS, TESSA
gen h`wavenum'aira = .
replace h`wavenum'aira = .m if (mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | ///
		mi(pep_bu_i)) & inw`wavenum'==1 
replace h`wavenum'aira = tessa_bu_i + cashisa_bu_i + shisa_bu_i + pep_bu_i if h`wavenum'aira !=.m
label variable h`wavenum'aira "h`wavenum'aira:w`wavenum' assets: ISA, PEPS, TESSA"

*wave 7 household net value of ISA, PEPS, TESSA flag
gen h`wavenum'afira = .
combine_ass_flags2 tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t, result(h`wavenum'afira)
label variable h`wavenum'afira "h`wavenum'afira:w`wavenum' asst flag: ISA, PEPS, TESSA"

*check 

***net value of stocks, shares, and investment funds ***
*wave 7 household net value of stocks, shares, and investment funds 
gen h`wavenum'astck = .
replace h`wavenum'astck = .m if (mi(shares_bu_i) | mi(trusts_bu_i)) & inw`wavenum'==1
replace h`wavenum'astck = shares_bu_i + trusts_bu_i if h`wavenum'astck !=.m
label variable h`wavenum'astck "h`wavenum'astck:w`wavenum' assets: stocks"

*wave 7 household net value of stocks, shares, and investment funds flag
gen h`wavenum'afstck = .
combine_ass_flags2 shares_bu_t trusts_bu_t, result(h`wavenum'afstck)
label variable h`wavenum'afstck "h`wavenum'afstck:w`wavenum' asst flag: stocks"

*check 

***net value of current, savings accounts ****wave household net value of current, savings account accounts 
gen h`wavenum'achck = .
replace h`wavenum'achck = .m if (mi(save_bu_i) | mi(nsav_bu_i)) & inw`wavenum'==1 
replace h`wavenum'achck = save_bu_i + nsav_bu_i if h`wavenum'achck !=.m
label variable h`wavenum'achck "h`wavenum'achck:w`wavenum' assets: current,savings acct"

*wave 7 household net value of current, savings accounts flag
gen h`wavenum'afchck = .
combine_ass_flags2 save_bu_t nsav_bu_t, result(h`wavenum'afchck)
label variable h`wavenum'afchck "h`wavenum'afchck:w`wavenum' asst flag: current,savings acct"

*check 

***net value of bonds and bond funds ***
*wave 7 household net value of bonds and bond funds 
gen h`wavenum'abond = .
replace h`wavenum'abond = .m if (mi(prbonds_bu_i) | mi(bonds_bu_i)) & inw`wavenum'==1
replace h`wavenum'abond = prbonds_bu_i + bonds_bu_i if h`wavenum'abond !=.m
label variable h`wavenum'abond "h`wavenum'abond:w`wavenum' assets: bonds"

*wave 7 household net value of bonds and bond funds flag
gen h`wavenum'afbond = .
combine_ass_flags2 prbonds_bu_t bonds_bu_t, result(h`wavenum'afbond)
label variable h`wavenum'afbond "h`wavenum'afbond:w`wavenum' asst flag: bonds"

*check 

***net value of other debt ****wave household net value of other debt 
gen h`wavenum'adebt = .
replace h`wavenum'adebt = .m if (mi(ccard_bu_i) | mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'adebt = ccard_bu_i + prdebt_bu_i + odebt_bu_i if h`wavenum'adebt !=.m
label variable h`wavenum'adebt "h`wavenum'adebt:w`wavenum' assets: debts"

*wave 7 household net value of other debt flag
gen h`wavenum'afdebt = .
combine_ass_flags2 ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'afdebt)
label variable h`wavenum'afdebt "h`wavenum'afdebt:w`wavenum' asst flag: debts"

*check 

***net value of non-housing financial wealth***
*wave 7 household net value of non-housing financial wealth
gen h`wavenum'atotf = .
replace h`wavenum'atotf = .m if (mi(save_bu_i) | mi(tessa_bu_i) | mi(cashisa_bu_i) | ///
		mi(shisa_bu_i) | mi(prbonds_bu_i) | mi(nsav_bu_i) | mi(pep_bu_i) | mi(shares_bu_i) | ///
		mi(trusts_bu_i) | mi(bonds_bu_i) | mi(othsav_bu_i) | mi(jntass_bu_i) | mi(ccard_bu_i) | ///
		mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotf = save_bu_i + tessa_bu_i + cashisa_bu_i + shisa_bu_i + ///
                      prbonds_bu_i + nsav_bu_i + pep_bu_i + shares_bu_i + ///
                      trusts_bu_i + bonds_bu_i + othsav_bu_i + jntass_bu_i - ///
                      ccard_bu_i - prdebt_bu_i - odebt_bu_i if h`wavenum'atotf !=.m
label variable h`wavenum'atotf "h`wavenum'atotf:w`wavenum' non-housing financial wealth"

*wave household net value of non-housing financial wealth flag
gen h`wavenum'aftotf = .
combine_ass_flags2 save_bu_t tessa_bu_t cashisa_bu_t shisa_bu_t prbonds_bu_t nsav_bu_t pep_bu_t shares_bu_t trusts_bu_t bonds_bu_t othsav_bu_t jntass_bu_t ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'aftotf)
label variable h`wavenum'aftotf "h`wavenum'aftotf:w`wavenum' flag: non-housing financial wealth"

*check 

***net value of total family wealth***
*wave 7 net value of total family wealth
gen h`wavenum'atotb = .
replace h`wavenum'atotb = .m if (h`wavenum'absns==.m | h`wavenum'atoth==.m | h`wavenum'atotf==.m | ///
		mi(home_bu_i) | mi(tothass_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotb = h`wavenum'absns + h`wavenum'atoth + h`wavenum'atotf + home_bu_i + tothass_bu_i if h`wavenum'atotb !=.m
label variable h`wavenum'atotb "h`wavenum'atotb:w`wavenum' total all assets inc. 2nd hm"

*wave 7 net value of total family wealth flag
gen other_ass_flag = . // create temporary flag for two raw variables 
combine_ass_flags2 home_bu_t tothass_bu_t, result(other_ass_flag)
gen h`wavenum'aftotb = .
combine_ass_flags9 h`wavenum'afbsns h`wavenum'aftoth h`wavenum'aftotf other_ass_flag, result(h`wavenum'aftotb)
label variable h`wavenum'aftotb "h`wavenum'aftotb:w`wavenum' flag total all assets inc. 2nd hm"

*check 

*drop intermediate variables
drop other_ass_flag


***drop ELSA wave 7 core file raw variables***
drop `asset_w7_core'

***drop ELSA wave 7 financial derived file raw variables***
drop `asset_w7_fina'

******************************************************************************************

	

*set wave number
local wavenum=8

***merge with wave 8 core data***
local asset_w8_core perid howh1 howh2 howh3 howh4 howh5 howh6 howh7 howh8 howh9 howh10 howh11 howh12 howh13 howh14 howh15 howh16 hotenu
merge 1:1 idauniq using "$wave_8_core", keepusing(`asset_w8_core') nogen

***merge with wave 8 financial derived variables data***
local asset_w8_fina idahhw8 coupid ///
                    farm_bu_i busv_bu_i othbusv_bu_i ///
                    farm_bu_t busv_bu_t othbusv_bu_t ///
                    hsval_hh_i ///
                    hsval_hh_t ///
                    hdebt_hh_i ///
                    hdebt_hh_t ///
                    home_bu_i ///
                    home_bu_t ///
                    tessa_bu_i cashisa_bu_i shisa_bu_i pep_bu_i ///
                    tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t ///
                    shares_bu_i trusts_bu_i ///
                    shares_bu_t trusts_bu_t ///
                    save_bu_i nsav_bu_i ///
                    save_bu_t nsav_bu_t ///
                    prbonds_bu_i bonds_bu_i ///
                    prbonds_bu_t bonds_bu_t ///
                    ccard_bu_i prdebt_bu_i odebt_bu_i ///
                    ccard_bu_t prdebt_bu_t odebt_bu_t ///
                    othsav_bu_i jntass_bu_i ///
                    othsav_bu_t jntass_bu_t ///
                    tothass_bu_i ///
                    tothass_bu_t
                           
merge 1:1 idauniq using "$wave_8_fina", keepusing(`asset_w8_fina') nogen


***net value of business***
*wave 8 household net value of business
gen h`wavenum'absns = .
replace h`wavenum'absns = .m if (mi(farm_bu_i) | mi(busv_bu_i) | mi(othbusv_bu_i)) & inw`wavenum'==1
replace h`wavenum'absns = farm_bu_i + busv_bu_i + othbusv_bu_i if h`wavenum'absns !=.m
label variable h`wavenum'absns "h`wavenum'absns:w`wavenum' assets: business"

*wave 8 household net value of business flag
gen h`wavenum'afbsns = .
combine_ass_flags2 farm_bu_t busv_bu_t othbusv_bu_t, result(h`wavenum'afbsns)
replace h`wavenum'afbsns = .m if h`wavenum'afbsns==. & inw`wavenum'==1
label variable h`wavenum'afbsns "h`wavenum'afbsns:w`wavenum' asst flag: business"
label values h`wavenum'afbsns typebracket

*check 

***net value of primary residence***
*wave 8 household net value of primary residence
gen owner1= howh1 // whether person 1 is owner
recode owner1 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner2= howh2 // whether person 2 is owner
recode owner2 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner3= howh3 // whether person 3 is owner
recode owner3 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner4= howh4 // whether person 4 is owner
recode owner4 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner5= howh5 // whether person 5 is owner
recode owner5 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner6= howh6 // whether person 6 is owner
recode owner6 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner7= howh7 // whether person 7 is owner
recode owner7 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner8= howh8 // whether person 8 is owner
recode owner8 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner9= howh9 // whether person 9 is owner
recode owner9 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner10= howh10 // whether person 10 is owner
recode owner10 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner11= howh11 // whether person 11 is owner
recode owner11 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner12= howh12 // whether person 12 is owner
recode owner12 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner13= howh13 // whether person 13 is owner
recode owner13 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner14= howh14 // whether person 14 is owner
recode owner14 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner15= howh15 // whether person 15 is owner
recode owner15 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner16= howh16 // whether person 16 is owner
recode owner16 (-9=.) (-8=.) (-1=.) (-4=.) (-3=.) (-2=.)
gen owner=(perid==1 & owner1==1) ///
					|(perid==2 & owner2==1) ///
					|(perid==3 & owner3==1) ///
					|(perid==4 & owner4==1) ///
					|(perid==5 & owner5==1) ///
					|(perid==6 & owner6==1) ///
					|(perid==7 & owner7==1) ///
					|(perid==8 & owner8==1) ///
					|(perid==9 & owner9==1) ///
					|(perid==10 & owner10==1) ///
					|(perid==11 & owner11==1) ///
					|(perid==12 & owner12==1) ///
					|(perid==13 & owner13==1) ///
					|(perid==14 & owner14==1) ///
					|(perid==15 & owner15==1) ///
					|(perid==16 & owner16==1) // indicate any home ownership by individual
bysort coupid: egen owner_bu=max(owner) // indicate any home ownership by couple
replace owner_bu = owner if inlist(coupid,-10,.)

gen hsval_bu_i=0 // generate house value
replace hsval_bu_i=. if coupid==-10
replace hsval_bu_i=hsval_hh_i if (owner_bu==1 & coupid!=-10)

gen hdebt_bu_i=0 // generate house debt
replace hdebt_bu_i=. if coupid==-10
replace hdebt_bu_i=hdebt_hh_i if (owner_bu==1 & coupid!=-10)

*generate value of the house and debt weighted by number of benefit units that are houseowners
bysort coupid: gen nobs_bu=_n if !inlist(coupid,-10,.) // assign sequential number by couple
replace nobs_bu = 1 if inlist(coupid,-10,.) // assign number 1 to everyone without a couple id
bysort idahhw`wavenum': egen n_owner=sum(owner_bu) if nobs_bu==1 & !missing(idahhw`wavenum')
bysort coupid: egen n_owner_bu=max(n_owner) if !inlist(coupid,-10,.) // generate number of couples who own house per household
replace n_owner_bu = n_owner if inlist(coupid,-10,.)

gen ad_hsval_bu_i=0 // generate house value weighted for number of couples who own house
replace ad_hsval_bu_i=(hsval_bu_i/n_owner_bu) if n_owner_bu>0

gen ad_hdebt_bu_i=0 // generate house debt weighted for number of couples who own house
replace ad_hdebt_bu_i=(hdebt_bu_i/n_owner_bu) if n_owner_bu>0

*wave 8 household value of house/prim res
gen h`wavenum'ahous = .
replace h`wavenum'ahous = .m if mi(ad_hsval_bu_i) & inw`wavenum'==1
replace h`wavenum'ahous = ad_hsval_bu_i if h`wavenum'ahous !=.m
label variable h`wavenum'ahous "h`wavenum'ahous:w`wavenum' value of house/prim res"

*wave 8 household value of house/prim res flag
gen h`wavenum'afhous = .
combine_ass_flags2 hsval_hh_t, result(h`wavenum'afhous)
replace h`wavenum'afhous = .m if h`wavenum'afhous==. & inw`wavenum'==1
label variable h`wavenum'afhous "h`wavenum'afhous:w`wavenum' flag: value of house/prim res"

*check 
	
*wave 8 household value of mortgage/prim res
gen h`wavenum'amort = .
replace h`wavenum'amort = .m if mi(ad_hdebt_bu_i) & inw`wavenum'==1
replace h`wavenum'amort = ad_hdebt_bu_i if h`wavenum'amort !=.m
label variable h`wavenum'amort "h`wavenum'amort:w`wavenum' value of mortgage/prim res"

*wave 8 household value of mortgage/prim res flag
gen h`wavenum'afmort = .
combine_ass_flags2 hdebt_hh_t, result(h`wavenum'afmort)
replace h`wavenum'afmort = .m if h`wavenum'afmort==. & inw`wavenum'==1
label variable h`wavenum'afmort "h`wavenum'afmort:w`wavenum' flag: value of mortgage/prim res"

*check 

*wave 8 household net value of house/prim res
gen h`wavenum'atoth = .
replace h`wavenum'atoth = .m if (mi(ad_hsval_bu_i) | mi(ad_hdebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atoth = (ad_hsval_bu_i - ad_hdebt_bu_i) if h`wavenum'atoth !=.m
label variable h`wavenum'atoth "h`wavenum'atoth:w`wavenum' net value of house/prim res"

*wave 8 household multiple couple home ownership flag
gen h`wavenum'aftothn = .
replace h`wavenum'aftothn = .m if (mi(hsval_hh_i) | mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 0 if n_owner_bu<=1 & (!mi(hsval_hh_i) | !mi(hsval_hh_i)) & inw`wavenum' == 1
replace h`wavenum'aftothn = 1 if n_owner_bu>1  & inw`wavenum' == 1
label variable h`wavenum'aftothn "h`wavenum'aftothn:w`wavenum' flag: multiple couple home ownership"
label values h`wavenum'aftothn tothn

*wave 8 household net value of primary residence flag
gen h`wavenum'aftoth = .
combine_ass_flags2 hsval_hh_t hdebt_hh_t, result(h`wavenum'aftoth)
replace h`wavenum'aftoth = .m if h`wavenum'aftoth==. & inw`wavenum'==1
label variable h`wavenum'aftoth "h`wavenum'aftoth:w`wavenum' flag: net value of house/prim res"

*check 

*wave 8 household whether own home
gen h`wavenum'ahown = .
missing_w`wavenum' hotenu, result(h`wavenum'ahown)
replace h`wavenum'ahown = .m if hotenu == -3
replace h`wavenum'ahown = 0 if inlist(hotenu,4,5,6) | (inlist(hotenu,1,2,3) & owner_bu == 0)
replace h`wavenum'ahown = 1 if inlist(hotenu,1,2,3) & owner_bu == 1
label variable h`wavenum'ahown "h`wavenum'ahown:w`wavenum' whether own home"
label values h`wavenum'ahown homeown

*drop intermediate variables
drop owner? owner1? owner owner_bu hsval_bu_i hdebt_bu_i nobs_bu n_owner n_owner_bu ad_hsval_bu_i ad_hdebt_bu_i

***net value of other real estate***
*wave 8 household net value of other real estate
gen h`wavenum'arles = .
replace h`wavenum'arles = .m if mi(home_bu_i) & inw`wavenum'==1
replace h`wavenum'arles = home_bu_i if h`wavenum'arles !=.m
label variable h`wavenum'arles "h`wavenum'arles:w`wavenum' assets: other real estate"

*wave 8 household net value of other real estate flag
gen h`wavenum'afrles = .
combine_ass_flags2 home_bu_t, result(h`wavenum'afrles)
replace h`wavenum'afrles = .m if h`wavenum'afrles==. & inw`wavenum'==1
label variable h`wavenum'afrles "h`wavenum'afrles:w`wavenum' asst flag: other real estate"

*check 

***net value of ISA, PEPS, TESSA***
*wave 8 household net value of ISA, PEPS, TESSA
gen h`wavenum'aira = .
replace h`wavenum'aira = .m if (mi(tessa_bu_i) | mi(cashisa_bu_i) | mi(shisa_bu_i) | ///
		mi(pep_bu_i)) & inw`wavenum'==1 
replace h`wavenum'aira = tessa_bu_i + cashisa_bu_i + shisa_bu_i + pep_bu_i if h`wavenum'aira !=.m
label variable h`wavenum'aira "h`wavenum'aira:w`wavenum' assets: ISA, PEPS, TESSA"

*wave 8 household net value of ISA, PEPS, TESSA flag
gen h`wavenum'afira = .
combine_ass_flags2 tessa_bu_t cashisa_bu_t shisa_bu_t pep_bu_t, result(h`wavenum'afira)
replace h`wavenum'afira = .m if h`wavenum'afira==. & inw`wavenum'==1
label variable h`wavenum'afira "h`wavenum'afira:w`wavenum' asst flag: ISA, PEPS, TESSA"

*check 

***net value of stocks, shares, and investment funds ***
*wave 8 household net value of stocks, shares, and investment funds 
gen h`wavenum'astck = .
replace h`wavenum'astck = .m if (mi(shares_bu_i) | mi(trusts_bu_i)) & inw`wavenum'==1
replace h`wavenum'astck = shares_bu_i + trusts_bu_i if h`wavenum'astck !=.m
label variable h`wavenum'astck "h`wavenum'astck:w`wavenum' assets: stocks"

*wave 8 household net value of stocks, shares, and investment funds flag
gen h`wavenum'afstck = .
combine_ass_flags2 shares_bu_t trusts_bu_t, result(h`wavenum'afstck)
replace h`wavenum'afstck = .m if h`wavenum'afstck==. & inw`wavenum'==1
label variable h`wavenum'afstck "h`wavenum'afstck:w`wavenum' asst flag: stocks"

*check 

***net value of current, savings accounts ****wave household net value of current, savings account accounts 
gen h`wavenum'achck = .
replace h`wavenum'achck = .m if (mi(save_bu_i) | mi(nsav_bu_i)) & inw`wavenum'==1 
replace h`wavenum'achck = save_bu_i + nsav_bu_i if h`wavenum'achck !=.m
label variable h`wavenum'achck "h`wavenum'achck:w`wavenum' assets: current,savings acct"

*wave 8 household net value of current, savings accounts flag
gen h`wavenum'afchck = .
combine_ass_flags2 save_bu_t nsav_bu_t, result(h`wavenum'afchck)
replace h`wavenum'afchck = .m if h`wavenum'afchck==. & inw`wavenum'==1
label variable h`wavenum'afchck "h`wavenum'afchck:w`wavenum' asst flag: current,savings acct"

*check 

***net value of bonds and bond funds ***
*wave 8 household net value of bonds and bond funds 
gen h`wavenum'abond = .
replace h`wavenum'abond = .m if (mi(prbonds_bu_i) | mi(bonds_bu_i)) & inw`wavenum'==1
replace h`wavenum'abond = prbonds_bu_i + bonds_bu_i if h`wavenum'abond !=.m
label variable h`wavenum'abond "h`wavenum'abond:w`wavenum' assets: bonds"

*wave 8 household net value of bonds and bond funds flag
gen h`wavenum'afbond = .
combine_ass_flags2 prbonds_bu_t bonds_bu_t, result(h`wavenum'afbond)
replace h`wavenum'afbond = .m if h`wavenum'afbond==. & inw`wavenum'==1
label variable h`wavenum'afbond "h`wavenum'afbond:w`wavenum' asst flag: bonds"

*check 

***net value of other debt ****wave household net value of other debt 
gen h`wavenum'adebt = .
replace h`wavenum'adebt = .m if (mi(ccard_bu_i) | mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'adebt = ccard_bu_i + prdebt_bu_i + odebt_bu_i if h`wavenum'adebt !=.m
label variable h`wavenum'adebt "h`wavenum'adebt:w`wavenum' assets: debts"

*wave 8 household net value of other debt flag
gen h`wavenum'afdebt = .
combine_ass_flags2 ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'afdebt)
replace h`wavenum'afdebt = .m if h`wavenum'afdebt==. & inw`wavenum'==1
label variable h`wavenum'afdebt "h`wavenum'afdebt:w`wavenum' asst flag: debts"

*check 

***net value of non-housing financial wealth***
*wave 8 household net value of non-housing financial wealth
gen h`wavenum'atotf = .
replace h`wavenum'atotf = .m if (mi(save_bu_i) | mi(tessa_bu_i) | mi(cashisa_bu_i) | ///
		mi(shisa_bu_i) | mi(prbonds_bu_i) | mi(nsav_bu_i) | mi(pep_bu_i) | mi(shares_bu_i) | ///
		mi(trusts_bu_i) | mi(bonds_bu_i) | mi(othsav_bu_i) | mi(jntass_bu_i) | mi(ccard_bu_i) | ///
		mi(prdebt_bu_i) | mi(odebt_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotf = save_bu_i + tessa_bu_i + cashisa_bu_i + shisa_bu_i + ///
                      prbonds_bu_i + nsav_bu_i + pep_bu_i + shares_bu_i + ///
                      trusts_bu_i + bonds_bu_i + othsav_bu_i + jntass_bu_i - ///
                      ccard_bu_i - prdebt_bu_i - odebt_bu_i if h`wavenum'atotf !=.m
label variable h`wavenum'atotf "h`wavenum'atotf:w`wavenum' non-housing financial wealth"

*wave household net value of non-housing financial wealth flag
gen h`wavenum'aftotf = .
combine_ass_flags2 save_bu_t tessa_bu_t cashisa_bu_t shisa_bu_t prbonds_bu_t nsav_bu_t pep_bu_t shares_bu_t trusts_bu_t bonds_bu_t othsav_bu_t jntass_bu_t ccard_bu_t prdebt_bu_t odebt_bu_t, result(h`wavenum'aftotf)
replace h`wavenum'aftotf = .m if h`wavenum'aftotf==. & inw`wavenum'==1
label variable h`wavenum'aftotf "h`wavenum'aftotf:w`wavenum' flag: non-housing financial wealth"

*check 

***net value of total family wealth***
*wave 8 net value of total family wealth
gen h`wavenum'atotb = .
replace h`wavenum'atotb = .m if (h`wavenum'absns==.m | h`wavenum'atoth==.m | h`wavenum'atotf==.m | ///
		mi(home_bu_i) | mi(tothass_bu_i)) & inw`wavenum'==1
replace h`wavenum'atotb = h`wavenum'absns + h`wavenum'atoth + h`wavenum'atotf + home_bu_i + tothass_bu_i if h`wavenum'atotb !=.m
label variable h`wavenum'atotb "h`wavenum'atotb:w`wavenum' total all assets inc. 2nd hm"

*wave 8 net value of total family wealth flag
gen other_ass_flag = . // create temporary flag for two raw variables 
combine_ass_flags2 home_bu_t tothass_bu_t, result(other_ass_flag)
gen h`wavenum'aftotb = .
combine_ass_flags9 h`wavenum'afbsns h`wavenum'aftoth h`wavenum'aftotf other_ass_flag, result(h`wavenum'aftotb)
replace h`wavenum'aftotb = .m if h`wavenum'aftotb==. & inw`wavenum'==1
label variable h`wavenum'aftotb "h`wavenum'aftotb:w`wavenum' flag total all assets inc. 2nd hm"

*check 

*drop intermediate variables
drop other_ass_flag


***drop ELSA wave 8 core file raw variables***
drop `asset_w8_core'

***drop ELSA wave 8 financial derived file raw variables***
drop `asset_w8_fina'

******************************************************************************************

	

***income flag
label define incflag ///
	   1 "1.continuous value" ///
	   2 "2.closed range bracket"       ///
	   3 "3.open range bracket"     ///
	   5 "5.no value/bracket"        ///
	   6 "6.no income"           ///
	   7 "7.dk"     ///
	   8 "8.non-sample member" ///
	   9 "9.non-responding spouse" ///
	  10 "10.institutional interview"
	  
***tax flag
label define taxflag ///
	1 "1.Before tax" ///
	2 "2.After tax" ///
	3 "3.Mixed before & after tax"
	 
	 

******************************************************************************************

	

*set wave number
local wavenum=1

***merge with wave 1 financial derived variables data***
local income_w1_fina thp_r_i oj_r_i sedraw_bu_i ///
                     thp_r_t oj_r_t sedraw_bu_t ///
                     thp_p_i oj_p_i thp_p_t oj_p_t ///
                     ppinc_r_s ppinc_r_t ppinc_p_s ppinc_p_t ///
                     spen_r_i widpen_r_i ///
                     spen_r_t widpen_r_t ///
                     spen_p_i widpen_p_i ///
                     spen_p_t widpen_p_t ///
                     farmi_bu_i netprof_bu_i homei_bu_i savei_bu_i isai_bu_i tessai_bu_i ///
                     farmi_bu_t netprof_bu_t homei_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
                     nsavi_bu_i pepi_bu_i sharesi_bu_i prbondsi_bu_i trustsi_bu_i bondsi_bu_i othsavi_bu_i ///
                     nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t ///
                     icb_r_i icb_p_i sda_r_i sda_p_i ssp_r_i ssp_p_i attall_r_i attall_p_i ///
                     icb_r_t icb_p_t sda_r_t sda_p_t ssp_r_t ssp_p_t attall_r_t attall_p_t ///
                     dla_r_i dla_p_i indinj_r_i indinj_p_i war_r_i war_p_i ///
                     dla_r_t dla_p_t indinj_r_t indinj_p_t war_r_t war_p_t ///
                     invcare_r_i invcare_p_i dptc_r_i dptc_p_i is_r_i is_p_i wftc_r_i wftc_p_i ///
                     invcare_r_t invcare_p_t dptc_r_t dptc_p_t is_r_t is_p_t wftc_r_t wftc_p_t ///
                     jsa_r_i jsa_p_i gall_r_i gall_p_i cb_r_i cb_p_i ///
                     jsa_r_t jsa_p_t gall_r_t gall_p_t cb_r_t cb_p_t ///
                     othpay_r_i othpay_p_i ///
                     othpay_r_t othpay_p_t                           
merge 1:1 idauniq using "$wave_1_fina", keepusing(`income_w1_fina') nogen

***merge with wave 1 core data***
local income_w1_core hofood hooutf askpx1 hobas horent hoperi hotenu ///
										hoba hoba2 hoba3 hoba4 hoba5 hoba6 hoba7 ///
										hobp hobp2 hobp3 hobp4 hobp5 hobp6 hobp7
merge 1:1 idauniq using "$wave_1_core", keepusing(`income_w1_core') nogen


***Employment Earnings***
*wave 1 respondent earnings from main job after tax
gen r1itmain = .
replace r1itmain = .m if mi(thp_r_i) & inw1==1
replace r1itmain = thp_r_i*52 if !mi(thp_r_i)

*wave 1 respondent earnings from 2nd job after tax
gen r1itsec = .
replace r1itsec = .m if mi(oj_r_i) & inw1==1
replace r1itsec = oj_r_i*52 if !mi(oj_r_i)

**wave 1 respondent total earnings after tax
gen r1itearn = .
replace r1itearn = .m if r1itmain==.m | r1itsec==.m
replace r1itearn = r1itmain + r1itsec if !mi(r1itmain) & !mi(r1itsec)
label variable r1itearn "r1itearn:w1 income: r employment earnings (after tax)"

*wave 1 spouse earnings from main job after tax
gen s1itmain = .
replace s1itmain = .m if mi(thp_p_i) & inw1==1
replace s1itmain = .u if w1spouse == 0 & s1idauniq == 0
replace s1itmain = .v if w1spouse == 1 & s1idauniq == 0
replace s1itmain = thp_p_i*52 if !mi(thp_p_i)

*wave 1 spouse earnings from 2nd job after tax
gen s1itsec = .
replace s1itsec = .m if mi(oj_p_i) & inw1==1
replace s1itsec = .u if w1spouse == 0 & s1idauniq == 0
replace s1itsec = .v if w1spouse == 1 & s1idauniq == 0
replace s1itsec = oj_p_i*52 if !mi(oj_p_i)

**wave 1 spouse total earnings after tax
gen s1itearn = .
replace s1itearn = .m if s1itmain==.m | s1itsec==.m
replace s1itearn = .u if w1spouse == 0 & s1idauniq == 0
replace s1itearn = .v if w1spouse == 1 & s1idauniq == 0
replace s1itearn = s1itmain + s1itsec if !mi(s1itmain) & !mi(s1itsec)
label variable s1itearn "s1itearn:w1 income: s employment earnings (after tax)"

***Employment Earnings Flag***
*wave 1 respondent earnings flag
gen r1itifearn = .
combine_inc_flags2 thp_r_t oj_r_t, result(r1itifearn)
label variable r1itifearn "r1itifearn:w1 impflag: r employment earnings"
label values r1itifearn incflag

*wave 1 spouse earnings flag
gen s1itifearn = .
combine_inc_flags2 thp_p_t oj_p_t, result(s1itifearn)
label variable s1itifearn "s1itifearn:w1 impflag: s employment earnings"
label values s1itifearn incflag

*check 

*drop intermediate variables
drop r1itmain 
drop s1itmain
drop r1itsec
drop s1itsec

***Self-Employment Earnings***
*wave 1 household self-employment earnings before tax
gen h1isemp = .
replace h1isemp = .m if (mi(sedraw_bu_i) | mi(netprof_bu_i)) & inw1==1
replace h1isemp = .u if w1spouse == 0 & s1idauniq == 0
replace h1isemp = .v if w1spouse == 1 & s1idauniq == 0
replace h1isemp = (sedraw_bu_i + netprof_bu_i)*52 if !mi(sedraw_bu_i) & !mi(netprof_bu_i)
label variable h1isemp "h1isemp:w1 income: self-employ earnings (before tax)"

***Self-Employment Earnings Flag***
*wave 1 household self-employment earnings flag
gen h1iifsemp = .
combine_inc_flags2 sedraw_bu_t netprof_bu_t, result(h1iifsemp)
label variable h1iifsemp "h1iifsemp:w1 impflag: self-employ earnings"
label values h1iifsemp incflag

*check

***Rental Income from Other Property***
*wave 1 household rental income from other property after tax
gen h1itrent = .
replace h1itrent = .m if mi(homei_bu_i) & inw1==1
replace h1itrent = .u if w1spouse == 0 & s1idauniq == 0
replace h1itrent = .v if w1spouse == 1 & s1idauniq == 0
replace h1itrent = homei_bu_i*52 if !mi(homei_bu_i)
label variable h1itrent "h1itrent:w1 income: rental income from other property (after tax)"

***Rental Income from Other Property Flag***
*wave 1 household rental income from other property flag
gen h1itifrent = .
combine_inc_flags2 homei_bu_t, result(h1itifrent)
label variable h1itifrent "h1itifrent:w1 impflag: rental income from other property"
label values h1itifrent incflag

*check

***Interest Income from Financial Assets***
*wave 1 household interest income from financial assets after tax
gen h1ittrest = .
replace h1ittrest = .m if (mi(farmi_bu_i) | mi(savei_bu_i) | mi(isai_bu_i) | mi(tessai_bu_i) | ///
		mi(nsavi_bu_i) | mi(pepi_bu_i) | mi(sharesi_bu_i) | mi(prbondsi_bu_i) | mi(trustsi_bu_i) | ///
		mi(bondsi_bu_i) | mi(othsavi_bu_i)) & inw1==1 
replace h1ittrest = .u if w1spouse == 0 & s1idauniq == 0
replace h1ittrest = .v if w1spouse == 1 & s1idauniq == 0
replace h1ittrest = (farmi_bu_i + savei_bu_i + isai_bu_i + tessai_bu_i + nsavi_bu_i ///
		 + pepi_bu_i + sharesi_bu_i + prbondsi_bu_i + trustsi_bu_i + bondsi_bu_i + othsavi_bu_i)*52 ///
		 if !mi(farmi_bu_i) & !mi(savei_bu_i) & !mi(isai_bu_i) & !mi(tessai_bu_i) & !mi(nsavi_bu_i) ///
		 & !mi(pepi_bu_i) & !mi(sharesi_bu_i) & !mi(prbondsi_bu_i) & !mi(trustsi_bu_i) & !mi(bondsi_bu_i) & !mi(othsavi_bu_i)
label variable h1ittrest "h1ittrest:w1 income: interest income from financial assets (after tax)"

***Interest Income from Financial Assets Flag***
*wave 1 household interest income from financial assets flag
gen h1ittfrest = .
combine_inc_flags2 farmi_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
		nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t, result(h1ittfrest)
label variable h1ittfrest "h1ittfrest:w1 impflag: interest income from financial assets"
label values h1ittfrest incflag

*check

***Capital Income***
*wave 1 household capital income
gen h1icap = .
replace h1icap = .m if h1isemp==.m | h1itrent==.m | h1ittrest==.m
replace h1icap = .u if w1spouse == 0 & s1idauniq == 0
replace h1icap = .v if w1spouse == 1 & s1idauniq == 0
replace h1icap = h1isemp + h1itrent + h1ittrest if !mi(h1isemp) & !mi(h1itrent) & !mi(h1ittrest)
label variable h1icap "h1icap:w1 income: couple level capital income"

*wave 1 household capital income imputation flag
gen h1ifcap = .
combine_inc_flags2 sedraw_bu_t homei_bu_t farmi_bu_t netprof_bu_t savei_bu_t isai_bu_t ///
		tessai_bu_t nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t othsavi_bu_t, result(h1ifcap)
label variable h1ifcap "h1ifcap:w1 impflag: couple level capital income"
label values h1ifcap incflag

*wave 1 household capital income tax flag
gen h1itfcap = .
replace h1itfcap = .u if w1spouse == 0 & s1idauniq == 0
replace h1itfcap = .v if w1spouse == 1 & s1idauniq == 0
replace h1itfcap = 2 if h1isemp == 0 & !missing(h1isemp) 
replace h1itfcap = 3 if h1isemp ~= 0 & !missing(h1isemp)
label variable h1itfcap "h1itfcap:w1 taxflag: couple level capital income"
label values h1itfcap taxflag

*check

***Income from Employer/Private Pension & Annuity***
*wave 1 respondent income from pension & annuity
gen r1itpena = .
replace r1itpena = .m if mi(ppinc_r_s) & inw1==1
replace r1itpena = ppinc_r_s*52 if !mi(ppinc_r_s)
label variable r1itpena "r1itpena:w1 income: r pension + annuity (after tax)"

*wave 1 spouse income from pension & annuity
gen s1itpena = .
replace s1itpena = .m if mi(ppinc_p_s) & inw1==1
replace s1itpena = .u if w1spouse == 0 & s1idauniq == 0
replace s1itpena = .v if w1spouse == 1 & s1idauniq == 0
replace s1itpena = ppinc_p_s*52 if !mi(ppinc_p_s)
label variable s1itpena "s1itpena:w1 income: s pension + annuity (after tax)"

***Income from Employer/Private Pension & Annuity Flag***
*wave 1 respondent income from pension & annuity flag
gen r1itifpena = .
combine_inc_flags2 ppinc_r_t, result(r1itifpena)
label variable r1itifpena "r1itifpena:w1 impflag: r pension + annuity"
label values r1itifpena incflag

*wave 1 spouse income from pension & annuity flag
gen s1itifpena = .
combine_inc_flags2 ppinc_p_t, result(s1itifpena)
label variable s1itifpena "s1itifpena:w1 impflag: s pension + annuity"
label values s1itifpena incflag

*check 

***Individual Disability Pension***
*wave 1 respondent individual disability pension
gen r1issdi = .
replace r1issdi = .m if (mi(icb_r_i) | mi(sda_r_i) | mi(attall_r_i) | mi(dla_r_i) | mi(indinj_r_i) | ///
		mi(invcare_r_i) | mi(dptc_r_i)) & inw1==1 
replace r1issdi = (icb_r_i + sda_r_i + attall_r_i + dla_r_i + indinj_r_i + invcare_r_i + dptc_r_i)*52 ///
							if !mi(icb_r_i) & !mi(sda_r_i) & !mi(attall_r_i) & !mi(dla_r_i) & !mi(indinj_r_i) & !mi(invcare_r_i) & !mi(dptc_r_i)
replace r1issdi = .t if (r1issdi > 100000 & !missing(r1issdi))
label variable r1issdi "r1issdi:w1 income: r public disability pension"

*wave 1 spouse individual disability pension
gen s1issdi = .
replace s1issdi = .m if (mi(icb_p_i) | mi(sda_p_i) | mi(attall_p_i) | mi(dla_p_i) | mi(indinj_p_i) | ///
		mi(invcare_p_i) | mi(dptc_p_i)) & inw1==1 
replace s1issdi = .u if w1spouse == 0 & s1idauniq == 0
replace s1issdi = .v if w1spouse == 1 & s1idauniq == 0
replace s1issdi = (icb_p_i + sda_p_i + attall_p_i + dla_p_i + indinj_p_i + invcare_p_i + dptc_p_i)*52 ///
									if !mi(icb_p_i) & !mi(sda_p_i) & !mi(attall_p_i) & !mi(dla_p_i) & !mi(indinj_p_i) & !mi(invcare_p_i) & !mi(dptc_p_i)
replace s1issdi = .t if (s1issdi > 100000 & !missing(s1issdi))
label variable s1issdi "s1issdi:w1 income: s public disability pension"

***Individual Disability Pension Flag***
*wave 1 respondent individual disability pension flag
gen r1ifssdi = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t invcare_r_t dptc_r_t, result(r1ifssdi)
label variable r1ifssdi "r1ifssdi:w1 impflag: r public disability pension"
label values r1ifssdi incflag

*wave 1 spouse individual disability pension flag
gen s1ifssdi = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t invcare_p_t dptc_p_t, result(s1ifssdi)
label variable s1ifssdi "s1ifssdi:w1 impflag: s public disability pension"
label values s1ifssdi incflag

*check

***Individual Income from Public Pension without Disability***
*wave 1 respondent income from public pension without disability
gen r1isret = .
replace r1isret = .m if (mi(spen_r_i) | mi(widpen_r_i)) & inw1==1
replace r1isret = (spen_r_i + widpen_r_i)*52 if !mi(spen_r_i) & !mi(widpen_r_i)
replace r1isret = .t if (r1isret > 100000 & !missing(r1isret))
label variable r1isret "r1isret:w1 income: r public old-age pension"

*wave 1 spouse income from public pension without disability
gen s1isret = .
replace s1isret = .m if (mi(spen_p_i) | mi(widpen_p_i)) & inw1==1
replace s1isret = .u if w1spouse == 0 & s1idauniq == 0
replace s1isret = .v if w1spouse == 1 & s1idauniq == 0
replace s1isret = (spen_p_i + widpen_p_i)*52 if !mi(spen_p_i) & !mi(widpen_p_i)
replace s1isret = .t if (s1isret > 100000 & !missing(s1isret))
label variable s1isret "s1isret:w1 income: s public old-age pension"

***Individual Income from Public Pension without Disability Flag***
*wave 1 respondent income public pension without disability flag
gen r1ifsret = .
combine_inc_flags2 spen_r_t widpen_r_t, result(r1ifsret)
label variable r1ifsret "r1ifsret:w1 incflag: r public old-age pension"
label values r1ifsret incflag

*wave 1 spouse income from public pension without disability flag
gen s1ifsret = .
combine_inc_flags2 spen_p_t widpen_p_t, result(s1ifsret)
label variable s1ifsret "s1ifsret:w1 incflag: s public old-age pension"
label values s1ifsret incflag

*check 


***Main Public Pension***
*wave 1 respondent main public pension
gen r1ipubpen = .
replace r1ipubpen = .m if r1issdi==.m | r1isret==.m 
replace r1ipubpen = .t if r1issdi==.t | r1isret==.t
replace r1ipubpen = r1issdi + r1isret if !mi(r1issdi) & !mi(r1isret)
label variable r1ipubpen "r1ipubpen:w1 income: r public pensions"

*wave 1 spouse main public pension
gen s1ipubpen = .
replace s1ipubpen = .m if s1issdi==.m | s1isret==.m
replace s1ipubpen = .t if s1issdi==.t | s1isret==.t
replace s1ipubpen = .u if w1spouse == 0 & s1idauniq == 0
replace s1ipubpen = .v if w1spouse == 1 & s1idauniq == 0
replace s1ipubpen = s1issdi + s1isret if !mi(s1issdi) & !mi(s1isret)
label variable s1ipubpen "s1ipubpen:w1 income: s public pensions"

***Main Public Pension Flag***
*wave 1 respondent main public pension flag
gen r1ifpubpen = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t invcare_r_t dptc_r_t spen_r_t widpen_r_t, result(r1ifpubpen)
label variable r1ifpubpen "r1ifpubpen:w1 impflag: r public pensions"
label values r1ifpubpen incflag

*wave 1 spouse main public pension flag
gen s1ifpubpen = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t invcare_p_t dptc_p_t spen_p_t widpen_p_t, result(s1ifpubpen)
label variable s1ifpubpen "s1ifpubpen:w1 impflag: s public pensions"
label values s1ifpubpen incflag

***War Pension***
*wave 1 respondent war pension
gen r1ivet = .
replace r1ivet = .m if mi(war_r_i) & inw1==1
replace r1ivet = war_r_i*52 if !mi(war_r_i)
label variable r1ivet "r1ivet:w1 income: r war pension"

*wave 1 spouse war pension
gen s1ivet = .
replace s1ivet = .m if mi(war_p_i) & inw1==1
replace s1ivet = .u if w1spouse == 0 & s1idauniq == 0
replace s1ivet = .v if w1spouse == 1 & s1idauniq == 0
replace s1ivet = war_p_i*52 if !mi(war_p_i)
label variable s1ivet "s1ivet:w1 income: s war pension"

***War Pension Flag***
*wave 1 respondent war pension flag
gen r1ifvet = .
combine_inc_flags2 war_r_t, result(r1ifvet)
label variable r1ifvet "r1ifvet:w1 impflag: r war pension"
label values r1ifvet incflag

*wave 1 spouse war pension flag
gen s1ifvet = .
combine_inc_flags2 war_p_t, result(s1ifvet)
label variable s1ifvet "s1ifvet:w1 impflag: s war pension"
label values s1ifvet incflag

*check

***Income Support***
*wave 1 respondent income support
gen r1iwelf = .
replace r1iwelf = .m if (mi(is_r_i) | mi(wftc_r_i) | mi(gall_r_i) | mi(cb_r_i)) & inw1==1 
replace r1iwelf = (is_r_i + wftc_r_i + gall_r_i + cb_r_i)*52 ///
							if !mi(is_r_i) & !mi(wftc_r_i) & !mi(gall_r_i) & !mi(cb_r_i)
replace r1iwelf = .t if (r1iwelf > 100000 & !missing(r1iwelf))
label variable r1iwelf "r1iwelf:w1 income: r income support"

*wave 1 spouse income support
gen s1iwelf = .
replace s1iwelf = .m if (mi(is_p_i) | mi(wftc_p_i) | mi(gall_p_i) | mi(cb_p_i)) & inw1==1 
replace s1iwelf = .u if w1spouse == 0 & s1idauniq == 0
replace s1iwelf = .v if w1spouse == 1 & s1idauniq == 0
replace s1iwelf = (is_p_i + wftc_p_i + gall_p_i + cb_p_i)*52 ///
									if !mi(is_p_i) & !mi(wftc_p_i) & !mi(gall_p_i) & !mi(cb_p_i)
replace s1iwelf = .t if (s1iwelf > 100000 & !missing(s1iwelf))
label variable s1iwelf "s1iwelf:w1 income: s income support"

***Income Support Flag***
*wave 1 respondent income support flag
gen r1ifwelf = .
combine_inc_flags2 is_r_t wftc_r_t gall_r_t cb_r_t, result(r1ifwelf)
label variable r1ifwelf "r1ifwelf:w1 impflag: r income support"
label values r1ifwelf incflag

*wave 1 spouse income support flag
gen s1ifwelf = .
combine_inc_flags2 is_p_t wftc_p_t gall_p_t cb_p_t, result(s1ifwelf)
label variable s1ifwelf "s1ifwelf:w1 impflag: s income support"
label values s1ifwelf incflag

*check

***Worker's Comp/Short-Term Disability***
*wave 1 respondent worker's comp
gen r1iwcmp = .
replace r1iwcmp = .m if mi(ssp_r_i) & inw1==1 
replace r1iwcmp = ssp_r_i*52 if !mi(ssp_r_i)
label variable r1iwcmp "r1iwcmp:w1 income: r workers comp"

*wave 1 spouse worker's comp
gen s1iwcmp = .
replace s1iwcmp = .m if mi(ssp_p_i) & inw1==1
replace s1iwcmp = .u if w1spouse == 0 & s1idauniq == 0
replace s1iwcmp = .v if w1spouse == 1 & s1idauniq == 0
replace s1iwcmp = ssp_p_i*52 if !mi(ssp_p_i)
label variable s1iwcmp "s1iwcmp:w1 income: s workers comp"

***Worker's Comp/Short-Term Disability Flag***
*wave 1 respondent worker's comp flag
gen r1ifwcmp = .
combine_inc_flags2 ssp_r_t, result(r1ifwcmp)
label variable r1ifwcmp "r1ifwcmp:w1 impflag: r workers comp"
label values r1ifwcmp incflag

*wave 1 spouse worker's comp flag
gen s1ifwcmp = .
combine_inc_flags2 ssp_p_t, result(s1ifwcmp)
label variable s1ifwcmp "s1ifwcmp:w1 impflag: s workers comp"
label values s1ifwcmp incflag

*check

***Unemployment Transfers***
*wave 1 respondent unemployment transfers
gen r1iunem = .
replace r1iunem = .m if mi(jsa_r_i) & inw1==1 
replace r1iunem = jsa_r_i*52 if !mi(jsa_r_i)
replace r1iunem = .t if (r1iunem > 10000 & !missing(r1iunem))
label variable r1iunem "r1iunem:w1 income: r unemployment"

*wave 1 spouse unemployment transfers
gen s1iunem = .
replace s1iunem = .m if mi(jsa_p_i) & inw1==1
replace s1iunem = .u if w1spouse == 0 & s1idauniq == 0
replace s1iunem = .v if w1spouse == 1 & s1idauniq == 0
replace s1iunem = jsa_p_i*52 if !mi(jsa_p_i)
replace s1iunem = .t if (s1iunem > 10000 & !missing(s1iunem))
label variable s1iunem "s1iunem:w1 income: s unemployment"

***Unemployment Transfers Flag***
*wave 1 respondent unemployment transfers flag
gen r1ifunem = .
combine_inc_flags2 jsa_r_t, result(r1ifunem)
label variable r1ifunem "r1ifunem:w1 impflag: r unemployment"
label values r1ifunem incflag

*wave 1 spouse unemployment transfers flag
gen s1ifunem = .
combine_inc_flags2 jsa_r_t, result(r1ifunem)
label variable s1ifunem "s1ifunem:w1 impflag: s unemployment"
label values s1ifunem incflag

*check

***Other Government Transfers***
*wave 1 respondent other government transfers
gen r1igxfr = .
replace r1igxfr = .m if r1ivet==.m | r1iwelf==.m | r1iwcmp==.m | r1iunem==.m 
replace r1igxfr = .t if r1ivet==.t | r1iwelf==.t | r1iwcmp==.t | r1iunem==.t
replace r1igxfr = r1ivet + r1iwelf + r1iwcmp + r1iunem ///
							if !mi(r1ivet) & !mi(r1iwelf) & !mi(r1iwcmp) & !mi(r1iunem)
label variable r1igxfr "r1igxfr:w1 income: r other gov transfers"

*wave 1 spouse other government transfers
gen s1igxfr = .
replace s1igxfr = .m if s1ivet==.m | s1iwelf==.m | s1iwcmp==.m | s1iunem==.m
replace s1igxfr = .t if s1ivet==.t | s1iwelf==.t | s1iwcmp==.t | s1iunem==.t
replace s1igxfr = .u if w1spouse == 0 & s1idauniq == 0
replace s1igxfr = .v if w1spouse == 1 & s1idauniq == 0
replace s1igxfr = s1ivet + s1iwelf + s1iwcmp + s1iunem ///
									if !mi(s1ivet) & !mi(s1iwelf) & !mi(s1iwcmp) & !mi(s1iunem)
label variable s1igxfr "s1igxfr:w1 income: s other gov transfers"

***Other Government Transfers Flag***
*wave 1 respondent other government transfers flag
gen r1ifgxfr = .
combine_inc_flags2 war_r_t is_r_t ssp_r_t jsa_r_t wftc_r_t gall_r_t cb_r_t, result(r1ifgxfr)
label variable r1ifgxfr "r1ifgxfr:w1 impflag: r other gov transfers"
label values r1ifgxfr incflag

*wave 1 spouse other government transfers flag
gen s1ifgxfr = .
combine_inc_flags2 war_p_t is_p_t ssp_p_t jsa_p_t wftc_p_t gall_p_t cb_p_t, result(s1ifgxfr)
label variable s1ifgxfr "s1ifgxfr:w1 impflag: s other gov transfers"
label values s1ifgxfr incflag

drop r`wavenum'ivet r`wavenum'iwelf r`wavenum'iwcmp r`wavenum'iunem 
drop s`wavenum'ivet s`wavenum'iwelf s`wavenum'iwcmp s`wavenum'iunem

drop r`wavenum'ifvet r`wavenum'ifwelf r`wavenum'ifwcmp r`wavenum'ifunem 
drop s`wavenum'ifvet s`wavenum'ifwelf s`wavenum'ifwcmp s`wavenum'ifunem

*check

***Other Household Income***
*wave 1 other household income
gen h1iothr = .
replace h1iothr = .m if (mi(othpay_r_i) | mi(othpay_p_i)) & inw1==1
replace h1iothr = .u if w1spouse == 0 & s1idauniq == 0
replace h1iothr = .v if w1spouse == 1 & s1idauniq == 0
replace h1iothr = othpay_r_i*52 if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(othpay_r_i)
replace h1iothr = (othpay_r_i + othpay_p_i)*52 if inlist(r`wavenum'mstat,1,3) & !mi(othpay_r_i) & !mi(othpay_p_i)
replace h1iothr = .t if (h1iothr > 100000 & !missing(h1iothr))
label variable h1iothr "h1iothr:w1 income: other income"

***Other Household Income Flag***
*wave 1 other household income flag
gen h1ifothr = .
combine_inc_flags2 othpay_r_t othpay_p_t, result(h1ifothr)
label variable h1ifothr "h1ifothr:w1 impflag: other income"
label values h1ifothr incflag

*check

***Total Family Income***
*wave 1 household total family income
gen h1itot = .
replace h1itot = .m if r1itearn==.m | s1itearn==.m | h1icap==.m | r1itpena==.m | s1itpena==.m | ///
		 r1ipubpen==.m | s1ipubpen==.m | r1igxfr==.m | s1igxfr==.m | h1iothr==.m
replace h1itot = .t if r1itearn==.t | s1itearn==.t | h1icap==.t | r1itpena==.t | s1itpena==.t | ///
		 r1ipubpen==.t | s1ipubpen==.t | r1igxfr==.t | s1igxfr==.t | h1iothr==.t
replace h1itot = .u if w1spouse == 0 & s1idauniq == 0
replace h1itot = .v if w1spouse == 1 & s1idauniq == 0
replace h1itot = r1itearn + h1icap + r1itpena + r1ipubpen + r1igxfr + h1iothr /// 
									if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(r1itearn) & !mi(h1icap) ///
									& !mi(r1itpena) & !mi(r1ipubpen) & !mi(r1igxfr) & !mi(h1iothr)
replace h1itot = r1itearn + s1itearn + h1icap + r1itpena + s1itpena + r1ipubpen ///
									+ s1ipubpen + r1igxfr + s1igxfr + h1iothr ///
									if inlist(r`wavenum'mstat,1,3) & !mi(r1itearn) & !mi(s1itearn) & !mi(h1icap) ///
									& !mi(r1itpena) & !mi(s1itpena) & !mi(r1ipubpen) & !mi(s1ipubpen) ///
									& !mi(r1igxfr) & !mi(s1igxfr) & !mi(h1iothr)
replace h1itot = .t if (h1itot > 900000 & !missing(h1itot))
label variable h1itot "h1itot:w1 income: total couple level income"

*wave 1 household total family income imputation flag
gen h1iftot = .
combine_inc_flags9 r1itifearn s1itifearn h1ifcap r1itifpena s1itifpena r1ifpubpen s1ifpubpen r1ifgxfr s1ifgxfr h1ifothr, result(h1iftot)
label variable h1iftot "h1iftot:w1 impflag: total couple level income"
label values h1iftot incflag

*wave 1 household total family income tax flag
gen h1ifttot = .
replace h1ifttot = .m if h1isemp==.m
replace h1ifttot = .u if w1spouse == 0 & s1idauniq == 0
replace h1ifttot = .v if w1spouse == 1 & s1idauniq == 0
replace h1ifttot = 2 if h1isemp == 0 & !missing(h1isemp) 
replace h1ifttot = 3 if h1isemp ~= 0 & !missing(h1isemp)
label variable h1ifttot "h1ifttot:w1 taxflag: total couple level income"
label values h1ifttot taxflag

*check 

********Consumption*********
***monthly Food Consumption In House***
*wave 1 household monthly food consumption in house
gen hh1cfoodi = .
replace hh1cfoodi = .m if hofood == -1
replace hh1cfoodi = .p if askpx1 == 1
replace hh1cfoodi = .d if hofood == -8
replace hh1cfoodi = .r if hofood == -9
replace hh1cfoodi = hofood if inrange(hofood,0,1000)
label variable hh1cfoodi "hh1cfoodi:w1 hhold monthly food consumption in house" 

***monthly Food Consumption Outside House***
*wave 1 household monthly food consumption outside house
gen hh1cfoodo1m = .
replace hh1cfoodo1m = .m if hooutf == -1
replace hh1cfoodo1m = .p if askpx1 == 1
replace hh1cfoodo1m = .d if hooutf == -8
replace hh1cfoodo1m = .r if hooutf == -9
replace hh1cfoodo1m = hooutf if inrange(hooutf,0,2000)
label variable hh1cfoodo1m "hh1cfoodo1m:w1 hhold monthly food consumption outside house"

***monthly Total Food Consumption***
*wave 1 household total food consumption
gen hh1cfood1m = .
replace hh1cfood1m = .m if hofood == -1 | hooutf == -1
replace hh1cfood1m = .p if askpx1 == 1
replace hh1cfood1m = .d if hofood == -8 | hooutf == -8
replace hh1cfood1m = .r if hofood == -9 | hooutf == -9
replace hh1cfood1m = (hh1cfoodi * 4.34524) + hh1cfoodo1m if inrange(hofood,0,1000) & inrange(hooutf,0,2000)
label variable hh1cfood1m "hh1cfood1m:w1 hhold total monthly food consumption"

****Monthly Rent Expenditure***
**wave 1 household monthly rent
gen hh1crent = .
replace hh1crent = .m if horent == -1 | inlist(hoperi,-1,95,96) | hotenu == -1
replace hh1crent = .p if askpx1 == 1
replace hh1crent = .d if horent == -8 | hoperi == -8 | hotenu == -8
replace hh1crent = .r if horent == -9 | hoperi == -9 | hotenu == -9
replace hh1crent = 0 if inlist(hotenu,1,2,5,6) | hoperi == 97 | inlist(horent,9997,99997)
replace hh1crent = horent if inlist(hoperi,4,5) & inrange(horent,0,100000)
replace hh1crent = horent*4.348125 if hoperi==1 & inrange(horent,0,100000)
replace hh1crent = horent*2.1740625 if hoperi==2 & inrange(horent,0,100000)
replace hh1crent = horent*1.449374 if hoperi==3 & inrange(horent,0,100000)
replace hh1crent = horent/2 if hoperi==7 & inrange(horent,0,100000)
replace hh1crent = horent/1.5 if hoperi==8 & inrange(horent,0,100000)
replace hh1crent = horent/1.333 if hoperi==9 & inrange(horent,0,100000)
replace hh1crent = horent/1.2 if hoperi==10 & inrange(horent,0,100000)
replace hh1crent = horent/3 if hoperi==13 & inrange(horent,0,100000)
replace hh1crent = horent/6 if hoperi==26 & inrange(horent,0,100000)
replace hh1crent = horent/12 if hoperi==52 & inrange(horent,0,100000)
label variable hh1crent "hh1crent:w1 hhold monthly rent"

****Monthly Total Consumption***
*gen hh1ctot = .
*replace hh1ctot = .m if hh1cfood==.m|hh1crent==.m
*replace hh1ctot = .p if hh1cfood==.p|hh1crent==.p
*replace hh1ctot = .d if hh1cfood==.d|hh1crent==.d
*replace hh1ctot = .r if hh1cfood==.r|hh1crent==.r
*replace hh1ctot = (hh1cfood*4.348125) + hh1crent if inrange(hh1cfood,0,15000) & inrange(hh1crent,0,990000)
*label variable hh1ctot "hh1ctot:w1 hhold total monthly consumption"


***drop ELSA wave 1 financial derived file raw variables***
drop `income_w1_fina'

***drop ELSA wave 1 core variables***
drop `income_w1_core'

******************************************************************************************

	

*set wave number
local wavenum=2

***merge with wave 2 financial derived variables data***
local income_w2_fina thp_r_i oj_r_i sedraw_bu_i ///
                     thp_r_t oj_r_t sedraw_bu_t ///
                     thp_p_t oj_p_t thp_p_i oj_p_i ///
                     ppinc_r_s ppinc_r_t ppinc_p_s ppinc_p_t ///
                     spen_r_i widpen_r_i ///
                     spen_r_t widpen_r_t ///
                     spen_p_i widpen_p_i ///
                     spen_p_t widpen_p_t ///
                     farmi_bu_i netprof_bu_i homei_bu_i savei_bu_i isai_bu_i tessai_bu_i ///
                     farmi_bu_t netprof_bu_t homei_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
                     nsavi_bu_i pepi_bu_i sharesi_bu_i prbondsi_bu_i trustsi_bu_i bondsi_bu_i othsavi_bu_i ///
                     nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t ///
                     icb_r_i icb_p_i sda_r_i sda_p_i ssp_r_i ssp_p_i attall_r_i attall_p_i dla_r_i dla_p_i ///
                     icb_r_t icb_p_t sda_r_t sda_p_t ssp_r_t ssp_p_t attall_r_t attall_p_t dla_r_t dla_p_t ///
                     indinj_r_i indinj_p_i war_r_i war_p_i carers_r_i carers_p_i is_r_i is_p_i pc_r_i pc_p_i ///
                     indinj_r_t indinj_p_t war_r_t war_p_t carers_r_t carers_p_t is_r_t is_p_t pc_r_t pc_p_t ///
                     wtc_r_i wtc_p_i jsa_r_i jsa_p_i gall_r_i gall_p_i cb_r_i cb_p_i ctc_r_i ctc_p_i ///
                     wtc_r_t wtc_p_t jsa_r_t jsa_p_t gall_r_t gall_p_t cb_r_t cb_p_t ctc_r_t ctc_p_t ///
                     othpay_r_i othpay_p_i ///
                     othpay_r_t othpay_p_t               
merge 1:1 idauniq using "$wave_2_fina", keepusing(`income_w2_fina') nogen

***merge with wave 2 core data***
local income_w2_core hofood hooutf hocl holeis askpx1 ///
										horent hoperi hotenu hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 ///
										hofbqs hofbms hofbqw hofbmw hofd ///
										hofdm hofdq hofbmw hofbqw hofpw hofps hofow hofos hofsw hofsm hofsq ///
										hogdm hogdq hogbmw hogbms hogbqw hogbqs hogpw hogps hogow hogos ///
										hoedm hoedq hoebmw hoebms hoebqw hoebqs hoepw hoeps hoeow hoeos ///
										hofcw hofcs hofpgw hofpgs hofoiw hofois hofww hofws hofxw hofxs ///
										hofsup hoftog hofpay hofb hofsp hogpay hogd hoed hogbp hoepay
merge 1:1 idauniq using "$wave_2_core", keepusing(`income_w2_core') nogen


***Employment Earnings***
*wave 2 respondent earnings from main job after tax
gen r2itmain = .
replace r2itmain = .m if mi(thp_r_i) & inw2==1
replace r2itmain = thp_r_i*52 if !mi(thp_r_i)

*wave 2 respondent earnings from 2nd job after tax
gen r2itsec = .
replace r2itsec = .m if mi(oj_r_i) & inw2==1
replace r2itsec = oj_r_i*52 if !mi(oj_r_i)

**wave 2 respondent total earnings after tax
gen r2itearn = .
replace r2itearn = .m if r2itmain==.m | r2itsec==.m 
replace r2itearn = r2itmain + r2itsec if !mi(r2itmain) & !mi(r2itsec)
label variable r2itearn "r2itearn:w2 income: r employment earnings (after tax)"

*wave 2 spouse earnings from main job after tax
gen s2itmain = .
replace s2itmain = .m if mi(thp_p_i) & inw2==1
replace s2itmain = .u if w2spouse == 0 & s2idauniq == 0
replace s2itmain = .v if w2spouse == 1 & s2idauniq == 0
replace s2itmain = thp_p_i*52 if !mi(thp_p_i)

*wave 2 spouse earnings from 2nd job after tax
gen s2itsec = .
replace s2itsec = .m if mi(oj_p_i) & inw2==1
replace s2itsec = .u if w2spouse == 0 & s2idauniq == 0
replace s2itsec = .v if w2spouse == 1 & s2idauniq == 0
replace s2itsec = oj_p_i*52 if !mi(oj_p_i)

**wave 2 spouse total earnings after tax
gen s2itearn = .
replace s2itearn = .m if s2itmain==.m | s2itsec==.m
replace s2itearn = .u if w2spouse == 0 & s2idauniq == 0
replace s2itearn = .v if w2spouse == 1 & s2idauniq == 0
replace s2itearn = s2itmain + s2itsec if !mi(s2itmain) & !mi(s2itsec)
label variable s2itearn "s2itearn:w2 income: s employment earnings (after tax)"

***Employment Earnings Flag***
*wave 2 respondent earnings flag
gen r2itifearn = .
combine_inc_flags2 thp_r_t oj_r_t, result(r2itifearn)
label variable r2itifearn "r2itifearn:w2 impflag: r employment earnings"
label values r2itifearn incflag

*wave 2 spouse earnings flag
gen s2itifearn = .
combine_inc_flags2 thp_p_t oj_p_t, result(s2itifearn)
label variable s2itifearn "s2itifearn:w2 impflag: s employment earnings"
label values s2itifearn incflag

*check 

*drop intermediate variables
drop r2itmain 
drop s2itmain
drop r2itsec
drop s2itsec

***Self-Employment Earnings***
*wave 2 household self-employment earnings before tax
gen h2isemp = .
replace h2isemp = .m if (mi(sedraw_bu_i) | mi(netprof_bu_i)) & inw2==1
replace h2isemp = .u if w2spouse == 0 & s2idauniq == 0
replace h2isemp = .v if w2spouse == 1 & s2idauniq == 0
replace h2isemp = (sedraw_bu_i + netprof_bu_i)*52 if !mi(sedraw_bu_i) & !mi(netprof_bu_i)
label variable h2isemp "h2isemp:w2 income: self-employ earnings (before tax)"

***Self-Employment Earnings Flag***
*wave 2 household self-employment earnings flag
gen h2iifsemp = .
combine_inc_flags2 sedraw_bu_t netprof_bu_t, result(h2iifsemp)
label variable h2iifsemp "h2iifsemp:w2 impflag: self-employ earnings"
label values h2iifsemp incflag

*check

***Rental Income from Other Property***
*wave 2 household rental income from other property after tax
gen h2itrent = .
replace h2itrent = .m if mi(homei_bu_i) & inw2==1
replace h2itrent = .u if w2spouse == 0 & s2idauniq == 0
replace h2itrent = .v if w2spouse == 1 & s2idauniq == 0
replace h2itrent = homei_bu_i*52 if !mi(homei_bu_i)
label variable h2itrent "h2itrent:w2 income: rental income from other property (after tax)"

***Rental Income from Other Property Flag***
*wave 2 household rental income from other property flag
gen h2itifrent = .
combine_inc_flags2 homei_bu_t, result(h2itifrent)
label variable h2itifrent "h2itifrent:w2 impflag: rental income from other property"
label values h2itifrent incflag

*check

***Interest Income from Financial Assets***
*wave 2 household interest income from financial assets after tax
gen h2ittrest = .
replace h2ittrest = .m if (mi(farmi_bu_i) | mi(savei_bu_i) | mi(isai_bu_i) | mi(tessai_bu_i) | ///
		mi(nsavi_bu_i) | mi(pepi_bu_i) | mi(sharesi_bu_i) | mi(prbondsi_bu_i) | mi(trustsi_bu_i) | ///
		mi(bondsi_bu_i) | mi(othsavi_bu_i)) & inw2==1
replace h2ittrest = .u if w2spouse == 0 & s2idauniq == 0
replace h2ittrest = .v if w2spouse == 1 & s2idauniq == 0
replace h2ittrest = (farmi_bu_i + savei_bu_i + isai_bu_i + tessai_bu_i + nsavi_bu_i ///
		 + pepi_bu_i + sharesi_bu_i + prbondsi_bu_i + trustsi_bu_i + bondsi_bu_i + othsavi_bu_i)*52 ///
		 if !mi(farmi_bu_i) & !mi(savei_bu_i) & !mi(isai_bu_i) & !mi(tessai_bu_i) & !mi(nsavi_bu_i) ///
		 & !mi(pepi_bu_i) & !mi(sharesi_bu_i) & !mi(prbondsi_bu_i) & !mi(trustsi_bu_i) & !mi(bondsi_bu_i) & !mi(othsavi_bu_i)
label variable h2ittrest "h2ittrest:w2 income: interest income from financial assets (after tax)"

***Interest Income from Financial Assets Flag***
*wave 2 household interest income from financial assets flag
gen h2ittfrest = .
combine_inc_flags2 farmi_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
		nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t, result(h2ittfrest)
label variable h2ittfrest "h2ittfrest:w2 impflag: interest income from financial assets"
label values h2ittfrest incflag

*check

***Capital Income***
*wave 2 household capital income
gen h2icap = .
replace h2icap = .m if h2isemp==.m | h2itrent==.m | h2ittrest==.m
replace h2icap = .u if w2spouse == 0 & s2idauniq == 0
replace h2icap = .v if w2spouse == 1 & s2idauniq == 0
replace h2icap = h2isemp + h2itrent + h2ittrest if !mi(h2isemp) & !mi(h2itrent) & !mi(h2ittrest)
label variable h2icap "h2icap:w2 income: couple level capital income"

*wave 2 household capital income imputation flag
gen h2ifcap = .
combine_inc_flags2 sedraw_bu_t homei_bu_t farmi_bu_t netprof_bu_t savei_bu_t isai_bu_t ///
		tessai_bu_t nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t othsavi_bu_t, result(h2ifcap)
label variable h2ifcap "h2ifcap:w2 impflag: couple level capital income"
label values h2ifcap incflag

*wave 2 household capital income tax flag
gen h2itfcap = .
replace h2itfcap = .m if h2isemp==.m
replace h2itfcap = .u if w2spouse == 0 & s2idauniq == 0
replace h2itfcap = .v if w2spouse == 1 & s2idauniq == 0
replace h2itfcap = 2 if h2isemp == 0 & !missing(h2isemp)
replace h2itfcap = 3 if h2isemp ~= 0 & !missing(h2isemp)
label variable h2itfcap "h2itfcap:w2 taxflag: couple level capital income"
label values h2itfcap taxflag

*check

***Income from Employer/Private Pension & Annuity***
*wave 2 respondent income from pension & annuity
gen r2itpena = .
replace r2itpena = .m if mi(ppinc_r_s) & inw2==1 
replace r2itpena = ppinc_r_s*52 if !mi(ppinc_r_s)
label variable r2itpena "r2itpena:w2 income: r pension + annuity (after tax)"

*wave 2 spouse income from pension & annuity
gen s2itpena = .
replace s2itpena = .m if mi(ppinc_p_s) & inw2==1
replace s2itpena = .u if w2spouse == 0 & s2idauniq == 0
replace s2itpena = .v if w2spouse == 1 & s2idauniq == 0
replace s2itpena = ppinc_p_s*52 if !mi(ppinc_p_s)
label variable s2itpena "s2itpena:w2 income: s pension + annuity (after tax)"

***Income from Employer/Private Pension & Annuity Flag***
*wave 2 respondent income from pension & annuity flag
gen r2itifpena = .
combine_inc_flags2 ppinc_r_t, result(r2itifpena)
label variable r2itifpena "r2itifpena:w2 impflag: r pension + annuity"
label values r2itifpena incflag

*wave 2 spouse income from pension & annuity flag
gen s2itifpena = .
combine_inc_flags2 ppinc_p_t, result(s2itifpena)
label variable s2itifpena "s2itifpena:w2 impflag: s pension + annuity"
label values s2itifpena incflag

*check 

***Individual Disability Pension***
*wave 2 respondent individual disability pension
gen r2issdi = .
replace r2issdi = .m if (mi(icb_r_i) | mi(sda_r_i) | mi(attall_r_i) | mi(dla_r_i) | ///
		mi(indinj_r_i) | mi(carers_r_i)) & inw2==1
replace r2issdi = (icb_r_i + sda_r_i + attall_r_i + dla_r_i + indinj_r_i + carers_r_i)*52 ///
		if !mi(icb_r_i) & !mi(sda_r_i) & !mi(attall_r_i) & !mi(dla_r_i) & !mi(indinj_r_i) & !mi(carers_r_i)
replace r2issdi = .t if (r2issdi > 100000 & !missing(r2issdi))
label variable r2issdi "r2issdi:w2 income: r public disability pension"

*wave 2 spouse individual disability pension
gen s2issdi = .
replace s2issdi = .m if (mi(icb_p_i) | mi(sda_p_i) | mi(attall_p_i) | mi(dla_p_i) | ///
		mi(indinj_p_i) | mi(carers_p_i)) & inw2==1
replace s2issdi = .u if w2spouse == 0 & s2idauniq == 0
replace s2issdi = .v if w2spouse == 1 & s2idauniq == 0
replace s2issdi = (icb_p_i + sda_p_i + attall_p_i + dla_p_i + indinj_p_i + carers_p_i)*52 ///
		if !mi(icb_p_i) & !mi(sda_p_i) & !mi(attall_p_i) & !mi(dla_p_i) & !mi(indinj_p_i) & !mi(carers_p_i)
replace s2issdi = .t if (s2issdi > 100000 & !missing(s2issdi))
label variable s2issdi "s2issdi:w2 income: s public disability pension"

***Individual Disability Pension Flag***
*wave 2 respondent individual disability pension flag
gen r2ifssdi = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t, result(r2ifssdi)
label variable r2ifssdi "r2ifssdi:w2 impflag: r public disability pension"
label values r2ifssdi incflag

*wave 2 spouse individual disability pension flag
gen s2ifssdi = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t, result(s2ifssdi)
label variable s2ifssdi "s2ifssdi:w2 impflag: s public disability pension"
label values s2ifssdi incflag

*check

***Individual Income from Public Pension without Disability***
*wave 2 respondent income from public pension without disability
gen r2isret = .
replace r2isret = .m if (mi(spen_r_i) | mi(widpen_r_i)) & inw2==1 
replace r2isret = (spen_r_i + widpen_r_i)*52 if !mi(spen_r_i) & !mi(widpen_r_i)
replace r2isret = .t if (r2isret > 100000 & !missing(r2isret))
label variable r2isret "r2isret:w2 income: r public old-age pension"

*wave 2 spouse income from public pension without disability
gen s2isret = .
replace s2isret = .m if (mi(spen_p_i) | mi(widpen_p_i)) & inw2==1
replace s2isret = .u if w2spouse == 0 & s2idauniq == 0
replace s2isret = .v if w2spouse == 1 & s2idauniq == 0
replace s2isret = (spen_p_i + widpen_p_i)*52 if !mi(spen_p_i) & !mi(widpen_p_i)
replace s2isret = .t if (s2isret > 100000 & !missing(s2isret))
label variable s2isret "s2isret:w2 income: s public old-age pension"

***Individual Income from Public Pension without Disability Flag***
*wave 2 respondent income public pension without disability flag
gen r2ifsret = .
combine_inc_flags2 spen_r_t widpen_r_t, result(r2ifsret)
label variable r2ifsret "r2ifsret:w2 incflag: r public old-age pension"
label values r2ifsret incflag

*wave 2 spouse income from public pension without disability flag
gen s2ifsret = .
combine_inc_flags2 spen_p_t widpen_p_t, result(s2ifsret)
label variable s2ifsret "s2ifsret:w2 incflag: s public old-age pension"
label values s2ifsret incflag

*check 


***Main Public Pension***
*wave 2 respondent main public pension
gen r2ipubpen = .
replace r2ipubpen = .m if r2issdi==.m | r2isret==.m 
replace r2ipubpen = .t if r2issdi==.t | r2isret==.t
replace r2ipubpen = r2issdi + r2isret if !mi(r2issdi) & !mi(r2isret)
label variable r2ipubpen "r2ipubpen:w2 income: r public pensions"

*wave 2 spouse main public pension
gen s2ipubpen = .
replace s2ipubpen = .m if s2issdi==.m | s2isret==.m
replace s2ipubpen = .t if s2issdi==.t | s2isret==.t
replace s2ipubpen = .u if w2spouse == 0 & s2idauniq == 0
replace s2ipubpen = .v if w2spouse == 1 & s2idauniq == 0
replace s2ipubpen = s2issdi + s2isret  if !mi(s2issdi) & !mi(s2isret)
label variable s2ipubpen "s2ipubpen:w2 income: s public pensions"

***Main Public Pension Flag***
*wave 2 respondent main public pension flag
gen r2ifpubpen = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t spen_r_t widpen_r_t, result(r2ifpubpen)
label variable r2ifpubpen "r2ifpubpen:w2 impflag: r public pensions"
label values r2ifpubpen incflag

*wave 2 spouse main public pension flag
gen s2ifpubpen = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t spen_p_t widpen_p_t, result(s2ifpubpen)
label variable s2ifpubpen "s2ifpubpen:w2 impflag: s public pensions"
label values s2ifpubpen incflag

***War Pension***
*wave 2 respondent war pension
gen r2ivet = .
replace r2ivet = .m if mi(war_r_i) & inw2==1 
replace r2ivet = war_r_i*52 if !mi(war_r_i)
label variable r2ivet "r2ivet:w2 income: r war pension"

*wave 2 spouse war pension
gen s2ivet = .
replace s2ivet = .m if mi(war_p_i) & inw2==1
replace s2ivet = .u if w2spouse == 0 & s2idauniq == 0
replace s2ivet = .v if w2spouse == 1 & s2idauniq == 0
replace s2ivet = war_p_i*52 if !mi(war_p_i)
label variable s2ivet "s2ivet:w2 income: s war pension"

***War Pension Flag***
*wave 2 respondent war pension flag
gen r2ifvet = .
combine_inc_flags2 war_r_t, result(r2ifvet)
label variable r2ifvet "r2ifvet:w2 impflag: r war pension"
label values r2ifvet incflag

*wave 2 spouse war pension flag
gen s2ifvet = .
combine_inc_flags2 war_p_t, result(r2ifvet)
label variable s2ifvet "s2ifvet:w2 impflag: s war pension"
label values s2ifvet incflag

*check

***Income Support***
*wave 2 respondent income support
gen r2iwelf = .
replace r2iwelf = .m if (mi(is_r_i) | mi(wtc_r_i) | mi(gall_r_i) | mi(cb_r_i) | ///
		mi(ctc_r_i) | mi(pc_r_i)) & inw2==1  
replace r2iwelf = (is_r_i + wtc_r_i + gall_r_i + cb_r_i + ctc_r_i + pc_r_i)*52 ///
			if !mi(is_r_i) & !mi(wtc_r_i) & !mi(gall_r_i) & !mi(cb_r_i) & !mi(ctc_r_i) & !mi(pc_r_i)
replace r2iwelf = .t if (r2iwelf > 100000 & !missing(r2iwelf))
label variable r2iwelf "r2iwelf:w2 income: r income support"

*wave 2 spouse income support
gen s2iwelf = .
replace s2iwelf = .m if (mi(is_p_i) | mi(wtc_p_i) | mi(gall_p_i) | mi(cb_p_i) | ///
		mi(ctc_p_i) | mi(pc_p_i)) & inw2==1
replace s2iwelf = .u if w2spouse == 0 & s2idauniq == 0
replace s2iwelf = .v if w2spouse == 1 & s2idauniq == 0
replace s2iwelf = (is_p_i + wtc_p_i + gall_p_i + cb_p_i + ctc_p_i + pc_p_i)*52 ///
			if !mi(is_p_i) & !mi(wtc_p_i) & !mi(gall_p_i) & !mi(cb_p_i) & !mi(ctc_p_i) & !mi(pc_p_i)
replace s2iwelf = .t if (s2iwelf > 100000 & !missing(s2iwelf))
label variable s2iwelf "s2iwelf:w2 income: s income support"

***Income Support Flag***
*wave 2 respondent income support flag
gen r2ifwelf = .
combine_inc_flags2 is_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r2ifwelf)
label variable r2ifwelf "r2ifwelf:w2 impflag: r income support"
label values r2ifwelf incflag

*wave 2 spouse income support flag
gen s2ifwelf = .
combine_inc_flags2 is_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s2ifwelf)
label variable s2ifwelf "s2ifwelf:w2 impflag: s income support"
label values s2ifwelf incflag

*check

***Worker's Comp/Short-Term Disability***
*wave 2 respondent worker's comp
gen r2iwcmp = .
replace r2iwcmp = .m if mi(ssp_r_i) & inw2==1 
replace r2iwcmp = ssp_r_i*52 if !mi(ssp_r_i)
label variable r2iwcmp "r2iwcmp:w2 income: r workers comp"

*wave 2 spouse worker's comp
gen s2iwcmp = .
replace s2iwcmp = .m if mi(ssp_p_i) & inw2==1
replace s2iwcmp = .u if w2spouse == 0 & s2idauniq == 0
replace s2iwcmp = .v if w2spouse == 1 & s2idauniq == 0
replace s2iwcmp = ssp_p_i*52 if !mi(ssp_p_i)
label variable s2iwcmp "s2iwcmp:w2 income: s workers comp"

***Worker's Comp/Short-Term Disability Flag***
*wave 2 respondent worker's comp flag
gen r2ifwcmp = .
combine_inc_flags2 ssp_r_t, result(r2ifwcmp)
label variable r2ifwcmp "r2ifwcmp:w2 impflag: r workers comp"
label values r2ifwcmp incflag

*wave 2 spouse worker's comp flag
gen s2ifwcmp = .
combine_inc_flags2 ssp_p_t, result(s2ifwcmp)
label variable s2ifwcmp "s2ifwcmp:w2 impflag: s workers comp"
label values s2ifwcmp incflag

*check

***Unemployment Transfers***
*wave 2 respondent unemployment transfers
gen r2iunem = .
replace r2iunem = .m if mi(jsa_r_i) & inw2==1
replace r2iunem = jsa_r_i*52 if !mi(jsa_r_i)
replace r2iunem = .t if (r2iunem > 10000 & !missing(r2iunem))
label variable r2iunem "r2iunem:w2 income: r unemployment"

*wave 2 spouse unemployment transfers
gen s2iunem = .
replace s2iunem = .m if mi(jsa_p_i) & inw2==1
replace s2iunem = .u if w2spouse == 0 & s2idauniq == 0
replace s2iunem = .v if w2spouse == 1 & s2idauniq == 0
replace s2iunem = jsa_p_i*52 if !mi(jsa_p_i)
replace s2iunem = .t if (s2iunem > 10000 & !missing(s2iunem))
label variable s2iunem "s2iunem:w2 income: s unemployment"

***Unemployment Transfers Flag***
*wave 2 respondent unemployment transfers flag
gen r2ifunem = .
combine_inc_flags2 jsa_r_t, result(r2ifunem)
label variable r2ifunem "r2ifunem:w2 impflag: r unemployment"
label values r2ifunem incflag

*wave 2 spouse unemployment transfers flag
gen s2ifunem = .
combine_inc_flags2 jsa_p_t, result(s2ifunem)
label variable s2ifunem "s2ifunem:w2 impflag: s unemployment"
label values s2ifunem incflag

*check

***Other Government Transfers***
*wave 2 respondent other government transfers
gen r2igxfr = .
replace r2igxfr = .m if r2ivet==.m | r2iwelf==.m | r2iwcmp==.m | r2iunem==.m 
replace r2igxfr = .t if r2ivet==.t | r2iwelf==.t | r2iwcmp==.t | r2iunem==.t
replace r2igxfr = r2ivet + r2iwelf + r2iwcmp + r2iunem ///
							if !mi(r2ivet) & !mi(r2iwelf) & !mi(r2iwcmp) & !mi(r2iunem)
label variable r2igxfr "r2igxfr:w2 income: r other gov transfers"

*wave 2 spouse other government transfers
gen s2igxfr = .
replace s2igxfr = .m if s2ivet==.m | s2iwelf==.m | s2iwcmp==.m | s2iunem==.m
replace s2igxfr = .t if s2ivet==.t | s2iwelf==.t | s2iwcmp==.t | s2iunem==.t
replace s2igxfr = .u if w2spouse == 0 & s2idauniq == 0
replace s2igxfr = .v if w2spouse == 1 & s2idauniq == 0
replace s2igxfr = s2ivet + s2iwelf + s2iwcmp + s2iunem ///
								if !mi(s2ivet) & !mi(s2iwelf) & !mi(s2iwcmp) & !mi(s2iunem)
label variable s2igxfr "s2igxfr:w2 income: s other gov transfers"

***Other Government Transfers Flag***
*wave 2 respondent other government transfers flag
gen r2ifgxfr = .
combine_inc_flags2 war_r_t is_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t ssp_r_t jsa_r_t , result(r2ifgxfr)
label variable r2ifgxfr "r2ifgxfr:w2 impflag: r other gov transfers"
label values r2ifgxfr incflag

*wave 2 spouse other government transfers flag
gen s2ifgxfr = .
combine_inc_flags2 war_p_t is_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t ssp_p_t jsa_p_t , result(s2ifgxfr)
label variable s2ifgxfr "s2ifgxfr:w2 impflag: s other gov transfers"
label values s2ifgxfr incflag

drop r`wavenum'ivet r`wavenum'iwelf r`wavenum'iwcmp r`wavenum'iunem 
drop s`wavenum'ivet s`wavenum'iwelf s`wavenum'iwcmp s`wavenum'iunem

drop r`wavenum'ifvet r`wavenum'ifwelf r`wavenum'ifwcmp r`wavenum'ifunem 
drop s`wavenum'ifvet s`wavenum'ifwelf s`wavenum'ifwcmp s`wavenum'ifunem

*check

***Other Household Income***
*wave 2 other household income
gen h2iothr = .
replace h2iothr = .m if (mi(othpay_r_i) | mi(othpay_p_i)) & inw2==1
replace h2iothr = .u if w2spouse == 0 & s2idauniq == 0
replace h2iothr = .v if w2spouse == 1 & s2idauniq == 0
replace h2iothr = othpay_r_i*52 if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(othpay_r_i)
replace h2iothr = (othpay_r_i + othpay_p_i)*52 if inlist(r`wavenum'mstat,1,3) & !mi(othpay_r_i) & !mi(othpay_p_i)
replace h2iothr = .t if (h2iothr > 100000 & !missing(h2iothr))
label variable h2iothr "h2iothr:w2 income: other income"

***Other Regular Payments Flag***
*wave 2 other household income flag
gen h2ifothr = .
combine_inc_flags2 othpay_r_t othpay_p_t, result(h2ifothr)
label variable h2ifothr "h2ifothr:w2 impflag: other income"
label values h2ifothr incflag

*check

***Total Family Income***
*wave 2 household total family income
gen h2itot = .
replace h2itot = .m if r2itearn==.m | s2itearn==.m | h2icap==.m | r2itpena==.m | s2itpena==.m | ///
		r2ipubpen==.m | s2ipubpen==.m | r2igxfr==.m | s2igxfr==.m | h2iothr==.m 
replace h2itot = .t if r2itearn==.t | s2itearn==.t | h2icap==.t | r2itpena==.t | s2itpena==.t | ///
		r2ipubpen==.t | s2ipubpen==.t | r2igxfr==.t | s2igxfr==.t | h2iothr==.t 
replace h2itot = .u if w2spouse == 0 & s2idauniq == 0
replace h2itot = .v if w2spouse == 1 & s2idauniq == 0
replace h2itot = r2itearn + h2icap + r2itpena + r2ipubpen + r2igxfr + h2iothr ///
									if  !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(r2itearn) & !mi(h2icap) ///
									& !mi(r2itpena) & !mi(r2ipubpen) & !mi(r2igxfr) & !mi(h2iothr)
replace h2itot = r2itearn + s2itearn + h2icap + r2itpena + s2itpena + r2ipubpen /// 
									+ s2ipubpen + r2igxfr + s2igxfr + h2iothr  ///
									if inlist(r`wavenum'mstat,1,3) & !mi(r2itearn) & !mi(s2itearn) & !mi(h2icap) ///
									& !mi(r2itpena) & !mi(s2itpena) & !mi(r2ipubpen) & !mi(s2ipubpen) ///
									& !mi(r2igxfr) & !mi(s2igxfr) & !mi(h2iothr)
replace h2itot = .t if (h2itot > 900000 & !missing(h2itot))
label variable h2itot "h2itot:w2 income: total couple level income"

*wave 2 household total family income imputation flag
gen h2iftot = .
combine_inc_flags9 r2itifearn s2itifearn h2ifcap r2itifpena s2itifpena r2ifpubpen s2ifpubpen r2ifgxfr s2ifgxfr h2ifothr, result(h2iftot)
label variable h2iftot "h2iftot:w2 impflag: total couple level income"
label values h2iftot incflag

*wave 2 household total family income tax flag
gen h2ifttot = .
replace h2ifttot = .m if h2isemp==.m
replace h2ifttot = .t if h2isemp==.t
replace h2ifttot = .u if w2spouse == 0 & s2idauniq == 0
replace h2ifttot = .v if w2spouse == 1 & s2idauniq == 0
replace h2ifttot = 2 if h2isemp == 0 & !missing(h2isemp) 
replace h2ifttot = 3 if h2isemp ~= 0 & !missing(h2isemp)
label variable h2ifttot "h2ifttot:w2 taxflag: total couple level income"
label values h2ifttot taxflag

*check 

********Consumption*********
***monthly Food Consumption In House***
*wave 2 household monthly food consumption in house
gen hh2cfoodi = .
replace hh2cfoodi = .m if hofood == -1
replace hh2cfoodi = .p if askpx1 == 1
replace hh2cfoodi = .d if hofood == -8
replace hh2cfoodi = .r if hofood == -9
replace hh2cfoodi = hofood if inrange(hofood,0,1000)
label variable hh2cfoodi "hh2cfoodi:w2 hhold monthly food consumption in house" 

***monthly Food Consumption Outside House***
*wave 2 household monthly food consumption outside house
gen hh2cfoodo1m = .
replace hh2cfoodo1m = .m if hooutf == -1
replace hh2cfoodo1m = .p if askpx1 == 1
replace hh2cfoodo1m = .d if hooutf == -8
replace hh2cfoodo1m = .r if hooutf == -9
replace hh2cfoodo1m = hooutf if inrange(hooutf,0,2000)
label variable hh2cfoodo1m "hh2cfoodo1m:w2 hhold monthly food consumption outside house"

***monthly Total Food Consumption***
*wave 2 household total food consumption
gen hh2cfood1m = .
replace hh2cfood1m = .m if hofood == -1 | hooutf == -1
replace hh2cfood1m = .p if askpx1 == 1
replace hh2cfood1m = .d if hofood == -8 | hooutf == -8
replace hh2cfood1m = .r if hofood == -9 | hooutf == -9
replace hh2cfood1m = (hh2cfoodi * 4.34524) + hh2cfoodo1m if inrange(hh2cfoodi,0,1000) & inrange(hh2cfoodo1m,0,2000)
label variable hh2cfood1m "hh2cfood1m:w2 hhold total monthly food consumption"

***Monthly Clothing Expenditure***
*wave 2 household monthly clothing expenditure
gen hh2cclo1m = .
replace hh2cclo1m = .m if hocl == -1
replace hh2cclo1m = .p if askpx1 == 1
replace hh2cclo1m = .d if hocl == -8
replace hh2cclo1m = .r if hocl == -9
replace hh2cclo1m = hocl if inrange(hocl,0,5000)
label variable hh2cclo1m "hh2cclo1m:w2 hhold monthly clothing exp"

***Monthly Leisure Activities Expenditure***
*wave 2 household monthly leisure activity expenditure
gen hh2clei1m = .
replace hh2clei1m = .m if inlist(holeis,-1,-3)
replace hh2clei1m = .p if askpx1 == 1
replace hh2clei1m = .d if holeis == -8
replace hh2clei1m = .r if holeis == -9
replace hh2clei1m = holeis if inrange(holeis,0,5500)
label variable hh2clei1m "hh2clei1m:w2 hhold monthly leisure exp"

***Monthly Rent Expenditure***
*wave 2 household monthly rent
gen hh2crent = .
replace hh2crent = .m if horent == -1 | inlist(hoperi,-1,95,96) | hotenu == -1
replace hh2crent = .p if askpx1 == 1
replace hh2crent = .d if horent == -8 | hoperi == -8 | hotenu == -8
replace hh2crent = .r if horent == -9 | hoperi == -9 | hotenu == -9
replace hh2crent = 0 if inlist(hotenu,1,2,5,6) | hoperi == 97 | inlist(horent,9997,99997)
replace hh2crent = horent if inlist(hoperi,4,5) & inrange(horent,0,100000)
replace hh2crent = horent*4.348125 if hoperi==1 & inrange(horent,0,100000)
replace hh2crent = horent*2.1740625 if hoperi==2 & inrange(horent,0,100000)
replace hh2crent = horent*1.449374 if hoperi==3 & inrange(horent,0,100000)
replace hh2crent = horent/2 if hoperi==7 & inrange(horent,0,100000)
replace hh2crent = horent/1.5 if hoperi==8 & inrange(horent,0,100000)
replace hh2crent = horent/1.333 if hoperi==9 & inrange(horent,0,100000)
replace hh2crent = horent/1.2 if hoperi==10 & inrange(horent,0,100000)
replace hh2crent = horent/3 if hoperi==13 & inrange(horent,0,100000)
replace hh2crent = horent/6 if hoperi==26 & inrange(horent,0,100000)
replace hh2crent = horent/12 if hoperi==52 & inrange(horent,0,100000)
label variable hh2crent "hh2crent:w2 hhold monthly rent"

***Monthly Utility/Fuel Expenditure***
*wave 2 household monthly gas & electricity
gen nogas  = 1 if inlist(hofuel1,-1,2,3,4,5,6,95) & inlist(hofuel2,-1,2,3,4,5,6,95) & inlist(hofuel3,-1,2,3,4,5,6,95) & inlist(hofuel4,-1,2,3,4,5,6,95) & inlist(hofuel5,-1,2,3,4,5,6,95)
gen noelec = 1 if inlist(hofuel1,-1,1,3,4,5,6,95) & inlist(hofuel2,-1,1,3,4,5,6,95) & inlist(hofuel3,-1,1,3,4,5,6,95) & inlist(hofuel4,-1,1,3,4,5,6,95) & inlist(hofuel5,-1,1,3,4,5,6,95)
gen nocoal = 1 if inlist(hofuel1,-1,1,2,4,5,6,95) & inlist(hofuel2,-1,1,2,4,5,6,95) & inlist(hofuel3,-1,1,2,4,5,6,95) & inlist(hofuel4,-1,1,2,4,5,6,95) & inlist(hofuel5,-1,1,2,4,5,6,95)
gen nopar  = 1 if inlist(hofuel1,-1,1,2,3,5,6,95) & inlist(hofuel2,-1,1,2,3,5,6,95) & inlist(hofuel3,-1,1,2,3,5,6,95) & inlist(hofuel4,-1,1,2,3,5,6,95) & inlist(hofuel5,-1,1,2,3,5,6,95)
gen nooil  = 1 if inlist(hofuel1,-1,1,2,3,4,6,95) & inlist(hofuel2,-1,1,2,3,4,6,95) & inlist(hofuel3,-1,1,2,3,4,6,95) & inlist(hofuel4,-1,1,2,3,4,6,95) & inlist(hofuel5,-1,1,2,3,4,6,95)
gen nowood = 1 if inlist(hofuel1,-1,1,2,3,4,5,95) & inlist(hofuel2,-1,1,2,3,4,5,95) & inlist(hofuel3,-1,1,2,3,4,5,95) & inlist(hofuel4,-1,1,2,3,4,5,95) & inlist(hofuel5,-1,1,2,3,4,5,95)
gen nooth  = 1 if inlist(hofuel1,-1,1,2,3,4,5,6)  & inlist(hofuel2,-1,1,2,3,4,5,6)  & inlist(hofuel3,-1,1,2,3,4,5,6)  & inlist(hofuel4,-1,1,2,3,4,5,6)  & inlist(hofuel5,-1,1,2,3,4,5,6)

*gas and electric by direct debit
gen gseld = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofsup hoftog hofpay hofd hofdm hofdq, result(gseld)
replace gseld = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,2,3,4,5,6,7,95) 
replace gseld = hofdm if inrange(hofdm,0,500)
replace gseld = hofdq/3 if inrange(hofdq,0,500)

*gas and electric by bill
gen gselb = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofsup hoftog hofpay hofb hofbmw hofbms hofbqw hofbqs, result(gselb)
replace gselb = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,3,4,5,6,7,95) 
replace gselb = (hofbmw + hofbms)/2 if inrange(hofbmw,0,500) & inrange(hofbms,0,500)
replace gselb = (hofbqw + hofbqs)/2/3 if inrange(hofbqw,0,500) & inrange(hofbqs,0,500)

*gas and electric by prepay
gen gselp= .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofsup hoftog hofpay hofpw hofps, result(gselp)
replace gselp = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,4,5,6,7,95) 
replace gselp = (hofpw + hofps)/2*4.348125 if inrange(hofpw,0,500) & inrange(hofps,0,500)

*gas and electric by other payment method
gen gselo= .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofsup hoftog hofpay hofow hofos, result(gselo)
replace gselo = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,7) 
replace gselo = (hofow + hofos)/2*4.348125 if inrange(hofow,0,500) & inrange(hofos,0,500)

*gas and electric by staywarm scheme
gen gsels= .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofsup hoftog hofpay hofsp hofsw hofsm hofsq, result(gsels)
replace gsels = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,4,5,6,95) 
replace gsels = hofsw*4.348125 if inrange(hofsw,0,500)
replace gsels = hofsm if inrange(hofsm,0,500)
replace gsels = hofsq/3 if inrange(hofsq,0,500)

*all gas and electric
gen gsel = .
missing_H gseld gselb gselp gselo gsels, result(gsel)
replace gsel = gseld + gselb + gselp + gselo + gsels if !mi(gseld) & !mi(gselb) & !mi(gselp) & !mi(gselo) & !mi(gsels)

drop gseld gselb gselp gselo gsels

*wave 2 household monthly gas
*gas by direct debit
gen gasd = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hoftog hogpay hogd hogdm hogdq, result(gasd)
replace gasd = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,2,3,4,5,6,95)
replace gasd = hogdm if inrange(hogdm,0,500)
replace gasd = hogdq/3 if inrange(hogdq,0,500)

*gas by bill
gen gasb = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hoftog hogpay hogbp hogbmw hogbms hogbqw hogbqs, result(gasb)
replace gasb = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,3,4,5,6,95)
replace gasb = (hogbmw + hogbms)/2 if inrange(hogbmw,0,500) & inrange(hogbms,0,500)
replace gasb = (hogbqw + hogbqs)/2/3 if inrange(hogbqw,0,500) & inrange(hogbqs,0,500)

*gas by prepay
gen gasp = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hoftog hogpay hogpw hogps, result(gasp)
replace gasp = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,4,5,6,95)
replace gasp = (hogpw + hogps)/2*4.348125 if inrange(hogpw,0,500) & inrange(hogps,0,500)

*gas by other paymenet method
gen gaso=.
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hoftog hogpay hogow hogos, result(gaso)
replace gaso = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,3)
replace gaso = (hogow + hogos)/2*4.348125 if inrange(hogow,0,500) & inrange(hogos,0,500)

*all gas
gen gas = .
missing_H gasd gasb gasp gaso, result(gas)
replace gas = gasd + gasb + gasp + gaso if !mi(gasd) & !mi(gasb) & !mi(gasp) & !mi(gaso)

drop gasd gasb gasp gaso

*wave 2 household monthly electricity
*electricity by direct debit
gen elecd = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hoftog hoepay hoedm hoedq, result(elecd)
replace elecd = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,2,3,4,5,6,95)
replace elecd = hoedm if inrange(hoedm,0,500)
replace elecd = hoedq/3 if inrange(hoedq,0,500)

*electricity by bill
gen elecb = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hoftog hoepay hoebmw hoebms hoebqw hoebqs, result(elecb)
replace elecb = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,3,4,5,6,95)
replace elecb = (hoebmw + hoebms)/2 if inrange(hoebmw,0,500) & inrange(hoebms,0,500)
replace elecb = (hoebqw + hoebqs)/2/3 if inrange(hoebqw,0,500) & inrange(hoebqs,0,500)

*electricity by prepay
gen elecp =.
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hoftog hoepay hoepw hoeps, result(elecp)
replace elecp = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,4,5,6,95)
replace elecp = (hoepw + hoeps)/2*4.348125 if inrange(hoepw,0,500) & inrange(hoeps,0,500)

*electricity by other payment method
gen eleco = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hoftog hoepay hoeow hoeos, result(eleco)
replace eleco = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,3)
replace eleco = (hoeow + hoeos)/2*4.348125 if inrange(hoeow,0,500) & inrange(hoeos,0,500)

*all electricity
gen elec = .
missing_H elecd elecb elecp eleco, result(elec)
replace elec = elecd + elecb + elecp + eleco if !mi(elecd) & !mi(elecb) & !mi(elecp) & !mi(eleco)

drop elecd elecb elecp eleco

*wave 2 household monthly coal
gen coal = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofcw hofcs, result(coal)
replace coal = 0 if nocoal == 1 
replace coal = (hofcw + hofcs)/2*4.348125 if inrange(hofcw,0,100) & inrange(hofcs,0,100)

*wave 2 household monthly paraffin
gen para = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofpgw hofpgs, result(para)
replace para = 0 if nopar == 1
replace para = (hofpgw + hofpgs)/2*4.348125 if inrange(hofpgw,0,100) & inrange(hofpgs,0,100)

*wave 2 household monthly oil
gen oil = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofoiw hofois, result(oil)
replace oil = 0 if nooil == 1
replace oil = (hofoiw + hofois)/2*4.348125 if inrange(hofoiw,0,100) & inrange(hofois,0,100)

*wave 2 household monthly wood
gen wood = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofww hofws, result(wood)
replace wood = 0 if nowood == 1
replace wood = (hofww + hofws)/2*4.348125 if inrange(hofww,0,100) & inrange(hofws,0,100)

*wave 2 household monthly other
gen oth = .
missing_w2 hofuel1 hofuel2 hofuel3 hofuel4 hofuel5 hofxw hofxs, result(oth)
replace oth = 0 if nooth == 1
replace oth = (hofxw + hofxs)/2*4.348125 if inrange(hofxw,0,100) & inrange(hofxs,0,100)

drop nogas noelec nocoal nopar nooil nowood nooth 

*wave 2 household utility/fuel
gen hh2cutil = .
missing_H gsel gas elec coal para oil wood oth, result(hh2cutil)
replace hh2cutil = .p if askpx1 == 1
replace hh2cutil = gsel + gas + elec + coal + para + oil + wood + oth if !mi(gsel) & !mi(gas) & !mi(elec) & !mi(coal) & !mi(para) & !mi(oil) & !mi(wood) & !mi(oth)
label variable hh2cutil "hh2cutil:w2 hhold monthly utility/fuel"

drop gsel gas elec coal para oil wood oth

***Monthly Total Consumption***
*wave 2 household monthly total consumption
gen hh2ctot1m = .
missing_H hh2cfood1m hh2cclo1m hh2clei1m hh2crent hh2cutil, result(hh2ctot1m)
replace hh2ctot1m = .p if askpx1 == 1
replace hh2ctot1m = hh2cfood1m + hh2cclo1m + hh2clei1m + hh2crent + hh2cutil if ///
                    inrange(hh2cfood1m,0,15000) & ///
                    inrange(hh2cclo1m,0,2500) & ///
                    inrange(hh2clei1m,0,6000) & ///
                    inrange(hh2crent,0,990000) & ///
                    inrange(hh2cutil,0,1000)
label variable hh2ctot1m "hh2ctot1m:w2 hhold total monthly consumption"


***drop ELSA wave 2 financial derived file raw variables***
drop `income_w2_fina'

***drop ELSA wave 2 core variables***
drop `income_w2_core'

******************************************************************************************

*set wave number
local wavenum=3

***merge with wave 3 financial derived variables data***
local income_w3_fina thp_r_i oj_r_i sedraw_bu_i ///
                     thp_r_t oj_r_t sedraw_bu_t ///
                     thp_p_i oj_p_i thp_p_t oj_p_t ///
                     ppinc_r_s ppinc_r_t ppinc_p_s ppinc_p_t ///
                     spen_r_i widpen_r_i ///
                     spen_r_t widpen_r_t ///
                     spen_p_i widpen_p_i ///
                     spen_p_t widpen_p_t ///
                     farmi_bu_i netprof_bu_i homei_bu_i savei_bu_i isai_bu_i tessai_bu_i ///
                     farmi_bu_t netprof_bu_t homei_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
                     nsavi_bu_i pepi_bu_i sharesi_bu_i prbondsi_bu_i trustsi_bu_i bondsi_bu_i othsavi_bu_i ///
                     nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t ///
                     icb_r_i icb_p_i sda_r_i sda_p_i ssp_r_i ssp_p_i attall_r_i attall_p_i dla_r_i dla_p_i ///
                     icb_r_t icb_p_t sda_r_t sda_p_t ssp_r_t ssp_p_t attall_r_t attall_p_t dla_r_t dla_p_t ///
                     indinj_r_i indinj_p_i war_r_i war_p_i carers_r_i carers_p_i is_r_i is_p_i pc_r_i pc_p_i ///
                     indinj_r_t indinj_p_t war_r_t war_p_t carers_r_t carers_p_t is_r_t is_p_t pc_r_t pc_p_t ///
                     wtc_r_i wtc_p_i jsa_r_i jsa_p_i gall_r_i gall_p_i cb_r_i cb_p_i ctc_r_i ctc_p_i ///
                     wtc_r_t wtc_p_t jsa_r_t jsa_p_t gall_r_t gall_p_t cb_r_t cb_p_t ctc_r_t ctc_p_t ///
                     othpay_r_i othpay_p_i ///
                     othpay_r_t othpay_p_t                
merge 1:1 idauniq using "$wave_3_fina", keepusing(`income_w3_fina') nogen

***merge with wave 3 core data***
local income_w3_core hofood hooutf hocl askpx ///
										horent hoperi hotenu hofuelga hofuelel hofuelco hofuelpa hofueloi hofuelwo hofuel95 ///
										hofbqs hofbms hofbqw hofbmw hofd ///
										hofdm hofdq hofbmw hofbqw hofpw hofps hofow hofos hofsw hofsm hofsq ///
										hogdm hogdq hogbmw hogbms hogbqw hogbqs hogpw hogps hogow hogos ///
										hoedm hoedq hoebmw hoebms hoebqw hoebqs hoepw hoeps hoeow hoeos ///
										hofcw hofcs hofpgw hofpgs hofoiw hofois hofww hofws hofxw hofxs ///
										hofsup hoftog hofpay hofb hofsp hogpay hogd hogbp hoepay
merge 1:1 idauniq using "$wave_3_core", keepusing(`income_w3_core') nogen
 

***Employment Earnings***
*wave 3 respondent earnings from main job after tax
gen r`wavenum'itmain = .
replace r`wavenum'itmain = .m if mi(thp_r_i) & inw`wavenum'==1 
replace r`wavenum'itmain = thp_r_i*52 if !mi(thp_r_i)

*wave 3 respondent earnings from 2nd job after tax
gen r`wavenum'itsec = .
replace r`wavenum'itsec = .m if mi(oj_r_i) & inw`wavenum'==1 
replace r`wavenum'itsec = oj_r_i*52 if !mi(oj_r_i)

**wave 3 respondent total earnings after tax
gen r`wavenum'itearn = .
replace r`wavenum'itearn = .m if r`wavenum'itmain==.m | r`wavenum'itsec==.m 
replace r`wavenum'itearn = r`wavenum'itmain + r`wavenum'itsec if !mi(r`wavenum'itmain) & !mi(r`wavenum'itsec)
label variable r`wavenum'itearn "r`wavenum'itearn:w`wavenum' income: r employment earnings (after tax)"

*wave 3 spouse earnings from main job after tax
gen s`wavenum'itmain = .
replace s`wavenum'itmain = .m if mi(thp_p_i) & inw`wavenum'==1
replace s`wavenum'itmain = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = thp_p_i*52 if !mi(thp_p_i)

*wave 3 spouse earnings from 2nd job after tax
gen s`wavenum'itsec = .
replace s`wavenum'itsec = .m if mi(oj_p_i) & inw`wavenum'==1
replace s`wavenum'itsec = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = oj_p_i*52 if !mi(oj_p_i)

**wave 3 spouse total earnings after tax
gen s`wavenum'itearn = .
replace s`wavenum'itearn = .m if s`wavenum'itmain==.m | s`wavenum'itearn==.m
replace s`wavenum'itearn = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = s`wavenum'itmain + s`wavenum'itsec if !mi(s`wavenum'itmain) & !mi(s`wavenum'itsec)
label variable s`wavenum'itearn "s`wavenum'itearn:w`wavenum' income: s employment earnings (after tax)"

***Employment Earnings Flag***
*wave 3 respondent earnings flag
gen r`wavenum'itifearn = .
combine_inc_flags2 thp_r_t oj_r_t, result(r`wavenum'itifearn)
label variable r`wavenum'itifearn "r`wavenum'itifearn:w`wavenum' impflag: r employment earnings"
label values r`wavenum'itifearn incflag

*wave 3 spouse earnings flag
gen s`wavenum'itifearn = .
combine_inc_flags2 thp_p_t oj_p_t, result(s`wavenum'itifearn)
label variable s`wavenum'itifearn "s`wavenum'itifearn:w`wavenum' impflag: s employment earnings"
label values s`wavenum'itifearn incflag

*check 

*drop intermediate variables
drop r`wavenum'itmain 
drop s`wavenum'itmain
drop r`wavenum'itsec
drop s`wavenum'itsec

***Self-Employment Earnings***
*wave 3 household self-employment earnings before tax
gen h`wavenum'isemp = .
replace h`wavenum'isemp = .m if (mi(sedraw_bu_i) | mi(netprof_bu_i)) & inw`wavenum'==1
replace h`wavenum'isemp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = (sedraw_bu_i + netprof_bu_i)*52 if !mi(sedraw_bu_i) & !mi(netprof_bu_i)
label variable h`wavenum'isemp "h`wavenum'isemp:w`wavenum' income: self-employ earnings (before tax)"

***Self-Employment Earnings Flag***
*wave 3 household self-employment earnings flag
gen h`wavenum'iifsemp = .
combine_inc_flags2 sedraw_bu_t netprof_bu_t, result(h`wavenum'iifsemp)
label variable h`wavenum'iifsemp "h`wavenum'iifsemp:w`wavenum' impflag: self-employ earnings"
label values h`wavenum'iifsemp incflag

*check

***Rental Income from Other Property***
*wave 3 household rental income from other property after tax
gen h`wavenum'itrent = .
replace h`wavenum'itrent = .m if mi(homei_bu_i) & inw`wavenum'==1
replace h`wavenum'itrent = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = homei_bu_i*52 if !mi(homei_bu_i)
label variable h`wavenum'itrent "h`wavenum'itrent:w`wavenum' income: rental income from other property (after tax)"

***Rental Income from Other Property Flag***
*wave 3 household rental income from other property flag
gen h`wavenum'itifrent = .
combine_inc_flags2 homei_bu_t, result(h`wavenum'itifrent)
label variable h`wavenum'itifrent "h`wavenum'itifrent:w`wavenum' impflag: rental income from other property"
label values h`wavenum'itifrent incflag

*check

***Interest Income from Financial Assets***
*wave 3 household interest income from financial assets after tax
gen h`wavenum'ittrest = .
replace h`wavenum'ittrest = .m if (mi(farmi_bu_i) | mi(savei_bu_i) | mi(isai_bu_i) | mi(tessai_bu_i) | ///
		mi(nsavi_bu_i) | mi(pepi_bu_i) | mi(sharesi_bu_i) | mi(prbondsi_bu_i) | mi(trustsi_bu_i) | ///
		mi(bondsi_bu_i) | mi(othsavi_bu_i)) & inw`wavenum'==1
replace h`wavenum'ittrest = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = (farmi_bu_i + savei_bu_i + isai_bu_i + tessai_bu_i + nsavi_bu_i ///
		 + pepi_bu_i + sharesi_bu_i + prbondsi_bu_i + trustsi_bu_i + bondsi_bu_i + othsavi_bu_i)*52 ///
		 if !mi(farmi_bu_i) & !mi(savei_bu_i) & !mi(isai_bu_i) & !mi(tessai_bu_i) & !mi(nsavi_bu_i) ///
		 & !mi(pepi_bu_i) & !mi(sharesi_bu_i) & !mi(prbondsi_bu_i) & !mi(trustsi_bu_i) & !mi(bondsi_bu_i) & !mi(othsavi_bu_i)
label variable h`wavenum'ittrest "h`wavenum'ittrest:w`wavenum' income: interest income from financial assets (after tax)"

***Interest Income from Financial Assets Flag***
*wave 3 household interest income from financial assets flag
gen h`wavenum'ittfrest = .
combine_inc_flags2 farmi_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
		nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t, result(h`wavenum'ittfrest)
label variable h`wavenum'ittfrest "h`wavenum'ittfrest:w`wavenum' impflag: interest income from financial assets"
label values h`wavenum'ittfrest incflag

*check

***Capital Income***
*wave 3 household capital income
gen h`wavenum'icap = .
replace h`wavenum'icap = .m if h`wavenum'isemp==.m | h`wavenum'itrent==.m | h`wavenum'ittrest==.m
replace h`wavenum'icap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'icap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'icap = h`wavenum'isemp + h`wavenum'itrent + h`wavenum'ittrest ///
		 if !mi(h`wavenum'isemp) & !mi(h`wavenum'itrent) & !mi(h`wavenum'ittrest)
label variable h`wavenum'icap "h`wavenum'icap:w`wavenum' income: couple level capital income"

*wave 3 household capital income imputation flag
gen h`wavenum'ifcap = .
combine_inc_flags2 sedraw_bu_t homei_bu_t farmi_bu_t netprof_bu_t savei_bu_t isai_bu_t ///
		tessai_bu_t nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t othsavi_bu_t, result(h`wavenum'ifcap)
label variable h`wavenum'ifcap "h`wavenum'ifcap:w`wavenum' impflag: couple level capital income"
label values h`wavenum'ifcap incflag

*wave 3 household capital income tax flag
gen h`wavenum'itfcap = .
replace h`wavenum'itfcap = .m if h`wavenum'isemp == .m
replace h`wavenum'itfcap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'itfcap = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'itfcap "h`wavenum'itfcap:w`wavenum' taxflag: couple level capital income"
label values h`wavenum'itfcap taxflag

*check

***Income from Employer/Private Pension & Annuity***
*wave 3 respondent income from pension & annuity
gen r`wavenum'itpena = .
replace r`wavenum'itpena = .m if mi(ppinc_r_s) & inw`wavenum'==1 
replace r`wavenum'itpena = ppinc_r_s*52 if !mi(ppinc_r_s)
label variable r`wavenum'itpena "r`wavenum'itpena:w`wavenum' income: r pension + annuity (after tax)"

*wave 3 spouse income from pension & annuity
gen s`wavenum'itpena = .
replace s`wavenum'itpena = .m if mi(ppinc_p_s) & inw`wavenum'==1
replace s`wavenum'itpena = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = ppinc_p_s*52 if !mi(ppinc_p_s)
label variable s`wavenum'itpena "s`wavenum'itpena:w`wavenum' income: s pension + annuity (after tax)"

***Income from Employer/Private Pension & Annuity Flag***
*wave 3 respondent income from pension & annuity flag
gen r`wavenum'itifpena = .
combine_inc_flags2 ppinc_r_t, result(r`wavenum'itifpena)
label variable r`wavenum'itifpena "r`wavenum'itifpena:w`wavenum' impflag: r pension + annuity"
label values r`wavenum'itifpena incflag

*wave 3 spouse income from pension & annuity flag
gen s`wavenum'itifpena = .
combine_inc_flags2 ppinc_p_t, result(s`wavenum'itifpena)
label variable s`wavenum'itifpena "s`wavenum'itifpena:w`wavenum' impflag: s pension + annuity"
label values s`wavenum'itifpena incflag

*check 

***Individual Disability Pension***
*wave 3 respondent individual disability pension
gen r`wavenum'issdi = .
replace r`wavenum'issdi = .m if (mi(icb_r_i) | mi(sda_r_i) | mi(attall_r_i) | mi(dla_r_i) | ///
		mi(indinj_r_i) | mi(carers_r_i)) & inw`wavenum'==1 
replace r`wavenum'issdi = (icb_r_i + sda_r_i + attall_r_i + dla_r_i + indinj_r_i + carers_r_i)*52 ///
		if !mi(icb_r_i) & !mi(sda_r_i) & !mi(attall_r_i) & !mi(dla_r_i) & !mi(indinj_r_i) & !mi(carers_r_i)
replace r`wavenum'issdi = .t if (r`wavenum'issdi > 100000 & !missing(r`wavenum'issdi))
label variable r`wavenum'issdi "r`wavenum'issdi:w`wavenum' income: r public disability pension"

*wave 3 spouse individual disability pension
gen s`wavenum'issdi = .
replace s`wavenum'issdi = .m if (mi(icb_p_i) | mi(sda_p_i) | mi(attall_p_i) | mi(dla_p_i) | ///
		mi(indinj_p_i) | mi(carers_p_i)) & inw`wavenum'==1 
replace s`wavenum'issdi = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = (icb_p_i + sda_p_i + attall_p_i + dla_p_i + indinj_p_i + carers_p_i)*52 ///
		if !mi(icb_p_i) & !mi(sda_p_i) & !mi(attall_p_i) & !mi(dla_p_i) & !mi(indinj_p_i) & !mi(carers_p_i)
replace s`wavenum'issdi = .t if (s`wavenum'issdi > 100000 & !missing(s`wavenum'issdi))
label variable s`wavenum'issdi "s`wavenum'issdi:w`wavenum' income: s public disability pension"

***Individual Disability Pension Flag***
*wave 3 respondent individual disability pension flag
gen r`wavenum'ifssdi = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t, result(r`wavenum'ifssdi)
label variable r`wavenum'ifssdi "r`wavenum'ifssdi:w`wavenum' impflag: r public disability pension"
label values r`wavenum'ifssdi incflag

*wave 3 spouse individual disability pension flag
gen s`wavenum'ifssdi = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t, result(s`wavenum'ifssdi)
label variable s`wavenum'ifssdi "s`wavenum'ifssdi:w`wavenum' impflag: s public disability pension"
label values s`wavenum'ifssdi incflag

*check

***Individual Income from Public Pension without Disability***
*wave 3 respondent income from public pension without disability
gen r`wavenum'isret = .
replace r`wavenum'isret = .m if (mi(spen_r_i) | mi(widpen_r_i)) & inw`wavenum'==1 
replace r`wavenum'isret = (spen_r_i + widpen_r_i)*52 if !mi(spen_r_i) & !mi(widpen_r_i)
replace r`wavenum'isret = .t if (r`wavenum'isret > 100000 & !missing(r`wavenum'isret))
label variable r`wavenum'isret "r`wavenum'isret:w`wavenum' income: r public old-age pension"

*wave 3 spouse income from public pension without disability
gen s`wavenum'isret = .
replace s`wavenum'isret = .m if (mi(spen_p_i) | mi(widpen_p_i)) & inw`wavenum'==1
replace s`wavenum'isret = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'isret = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'isret = (spen_p_i + widpen_p_i)*52 if !mi(spen_p_i) & !mi(widpen_p_i)
replace s`wavenum'isret = .t if (s`wavenum'isret > 100000 & !missing(s`wavenum'isret))
label variable s`wavenum'isret "s`wavenum'isret:w`wavenum' income: s public old-age pension"

***Individual Income from Public Pension without Disability Flag***
*wave 3 respondent income public pension without disability flag
gen r`wavenum'ifsret = .
combine_inc_flags2 spen_r_t widpen_r_t, result(r`wavenum'ifsret)
label variable r`wavenum'ifsret "r`wavenum'ifsret:w`wavenum' incflag: r public old-age pension"
label values r`wavenum'ifsret incflag

*wave 3 spouse income from public pension without disability flag
gen s`wavenum'ifsret = .
combine_inc_flags2 spen_p_t widpen_p_t, result(s`wavenum'ifsret)
label variable s`wavenum'ifsret "s`wavenum'ifsret:w`wavenum' incflag: s public old-age pension"
label values s`wavenum'ifsret incflag

*check 


***Main Public Pension***
*wave 3 respondent main public pension
gen r`wavenum'ipubpen = .
replace r`wavenum'ipubpen = .m if r`wavenum'issdi==.m | r`wavenum'isret==.m 
replace r`wavenum'ipubpen = .t if r`wavenum'issdi==.t | r`wavenum'isret==.t
replace r`wavenum'ipubpen = r`wavenum'issdi + r`wavenum'isret if !mi(r`wavenum'issdi) & !mi(r`wavenum'isret)
label variable r`wavenum'ipubpen "r`wavenum'ipubpen:w`wavenum' income: r public pensions"

*wave 3 spouse main public pension
gen s`wavenum'ipubpen = .
replace s`wavenum'ipubpen = .m if s`wavenum'issdi==.m | s`wavenum'isret==.m
replace s`wavenum'ipubpen = .t if s`wavenum'issdi==.t | s`wavenum'isret==.t
replace s`wavenum'ipubpen = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = s`wavenum'issdi + s`wavenum'isret if !mi(s`wavenum'issdi) & !mi(s`wavenum'isret)
label variable s`wavenum'ipubpen "s`wavenum'ipubpen:w`wavenum' income: s public pensions"

***Main Public Pension Flag***
*wave 3 respondent main public pension flag
gen r`wavenum'ifpubpen = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t spen_r_t widpen_r_t, result(r`wavenum'ifpubpen)
label variable r`wavenum'ifpubpen "r`wavenum'ifpubpen:w`wavenum' impflag: r public pensions"
label values r`wavenum'ifpubpen incflag

*wave 3 spouse main public pension flag
gen s`wavenum'ifpubpen = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t spen_p_t widpen_p_t, result(s`wavenum'ifpubpen)
label variable s`wavenum'ifpubpen "s`wavenum'ifpubpen:w`wavenum' impflag: s public pensions"
label values s`wavenum'ifpubpen incflag

***War Pension***
*wave 3 respondent war pension
gen r`wavenum'ivet = .
replace r`wavenum'ivet = .m if mi(war_r_i) & inw`wavenum'==1 
replace r`wavenum'ivet = war_r_i*52 if !mi(war_r_i)
label variable r`wavenum'ivet "r`wavenum'ivet:w`wavenum' income: r war pension"

*wave 3 spouse war pension
gen s`wavenum'ivet = .
replace s`wavenum'ivet = .m if mi(war_p_i) & inw`wavenum'==1
replace s`wavenum'ivet = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = war_p_i*52 if !mi(war_p_i)
label variable s`wavenum'ivet "s`wavenum'ivet:w`wavenum' income: s war pension"

***War Pension Flag***
*wave 3 respondent war pension flag
gen r`wavenum'ifvet = .
combine_inc_flags2 war_r_t, result(r`wavenum'ifvet)
label variable r`wavenum'ifvet "r`wavenum'ifvet:w`wavenum' impflag: r war pension"
label values r`wavenum'ifvet incflag

*wave 3 spouse war pension flag
gen s`wavenum'ifvet = .
combine_inc_flags2 war_p_t, result(s`wavenum'ifvet)
label variable s`wavenum'ifvet "s`wavenum'ifvet:w`wavenum' impflag: s war pension"
label values s`wavenum'ifvet incflag

*check

***Income Support***
*wave 3 respondent income support
gen r`wavenum'iwelf = .
replace r`wavenum'iwelf = .m if (mi(is_r_i) | mi(wtc_r_i) | mi(gall_r_i) | mi(cb_r_i) | ///
		mi(ctc_r_i) | mi(pc_r_i)) & inw`wavenum'==1 
replace r`wavenum'iwelf = (is_r_i + wtc_r_i + gall_r_i + cb_r_i + ctc_r_i + pc_r_i)*52 ///
		if !mi(is_r_i) & !mi(wtc_r_i) & !mi(gall_r_i) & !mi(cb_r_i) & !mi(ctc_r_i) & !mi(pc_r_i)
replace r`wavenum'iwelf = .t if (r`wavenum'iwelf > 100000 & !missing(r`wavenum'iwelf))
label variable r`wavenum'iwelf "r`wavenum'iwelf:w`wavenum' income: r income support"

*wave 3 spouse income support
gen s`wavenum'iwelf = .
replace s`wavenum'iwelf = .m if (mi(is_p_i) | mi(wtc_p_i) | mi(gall_p_i) | mi(cb_p_i) | ///
		mi(ctc_p_i) | mi(pc_p_i)) & inw`wavenum'==1 
replace s`wavenum'iwelf = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = (is_p_i + wtc_p_i + gall_p_i + cb_p_i + ctc_p_i + pc_p_i)*52 ///
		if !mi(is_p_i) & !mi(wtc_p_i) & !mi(gall_p_i) & !mi(cb_p_i) & !mi(ctc_p_i) & !mi(pc_p_i)
replace s`wavenum'iwelf = .t if (s`wavenum'iwelf > 100000 & !missing(s`wavenum'iwelf))
label variable s`wavenum'iwelf "s`wavenum'iwelf:w`wavenum' income: s income support"

***Income Support Flag***
*wave 3 respondent income support flag
gen r`wavenum'ifwelf = .
combine_inc_flags2 is_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifwelf)
label variable r`wavenum'ifwelf "r`wavenum'ifwelf:w`wavenum' impflag: r income support"
label values r`wavenum'ifwelf incflag

*wave 3 spouse income support flag
gen s`wavenum'ifwelf = .
combine_inc_flags2 is_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifwelf)
label variable s`wavenum'ifwelf "s`wavenum'ifwelf:w`wavenum' impflag: s income support"
label values s`wavenum'ifwelf incflag

*check

***Worker's Comp/Short-Term Disability***
*wave 3 respondent worker's comp
gen r`wavenum'iwcmp = .
replace r`wavenum'iwcmp = .m if mi(ssp_r_i) & inw`wavenum'==1 
replace r`wavenum'iwcmp = ssp_r_i*52 if !mi(ssp_r_i)
label variable r`wavenum'iwcmp "r`wavenum'iwcmp:w`wavenum' income: r workers comp"

*wave 3 spouse worker's comp
gen s`wavenum'iwcmp = .
replace s`wavenum'iwcmp = .m if mi(ssp_p_i) & inw`wavenum'==1
replace s`wavenum'iwcmp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = ssp_p_i*52 if !mi(ssp_p_i)
label variable s`wavenum'iwcmp "s`wavenum'iwcmp:w`wavenum' income: s workers comp"

***Worker's Comp/Short-Term Disability Flag***
*wave 3 respondent worker's comp flag
gen r`wavenum'ifwcmp = .
combine_inc_flags2 ssp_r_t, result(r`wavenum'ifwcmp)
label variable r`wavenum'ifwcmp "r`wavenum'ifwcmp:w`wavenum' impflag: r workers comp"
label values r`wavenum'ifwcmp incflag

*wave 3 spouse worker's comp flag
gen s`wavenum'ifwcmp = .
combine_inc_flags2 ssp_p_t, result(s`wavenum'ifwcmp)
label variable s`wavenum'ifwcmp "s`wavenum'ifwcmp:w`wavenum' impflag: s workers comp"
label values s`wavenum'ifwcmp incflag

*check

***Unemployment Transfers***
*wave 3 respondent unemployment transfers
gen r`wavenum'iunem = .
replace r`wavenum'iunem = .m if mi(jsa_r_i) & inw`wavenum'==1
replace r`wavenum'iunem = jsa_r_i*52  if !mi(jsa_r_i)
replace r`wavenum'iunem = .t if (r`wavenum'iunem > 10000 & !missing(r`wavenum'iunem))
label variable r`wavenum'iunem "r`wavenum'iunem:w`wavenum' income: r unemployment"

*wave 3 spouse unemployment transfers
gen s`wavenum'iunem = .
replace s`wavenum'iunem = .m if mi(jsa_p_i) & inw`wavenum'==1
replace s`wavenum'iunem = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = jsa_p_i*52 if !mi(jsa_p_i)
replace s`wavenum'iunem = .t if (s`wavenum'iunem > 10000 & !missing(s`wavenum'iunem))
label variable s`wavenum'iunem "s`wavenum'iunem:w`wavenum' income: s unemployment"

***Unemployment Transfers Flag***
*wave 3 respondent unemployment transfers flag
gen r`wavenum'ifunem = .
combine_inc_flags2 jsa_r_t, result(r`wavenum'ifunem)
label variable r`wavenum'ifunem "r`wavenum'ifunem:w`wavenum' impflag: r unemployment"
label values r`wavenum'ifunem incflag

*wave 3 spouse unemployment transfers flag
gen s`wavenum'ifunem = .
combine_inc_flags2 jsa_p_t, result(s`wavenum'ifunem)
label variable s`wavenum'ifunem "s`wavenum'ifunem:w`wavenum' impflag: s unemployment"
label values s`wavenum'ifunem incflag

*check

***Other Government Transfers***
*wave 3 respondent other government transfers
gen r`wavenum'igxfr = .
replace r`wavenum'igxfr = .m if r`wavenum'ivet==.m | r`wavenum'iwelf==.m | r`wavenum'iwcmp==.m | r`wavenum'iunem==.m
replace r`wavenum'igxfr = .t if r`wavenum'ivet==.t | r`wavenum'iwelf==.t | r`wavenum'iwcmp==.t | r`wavenum'iunem==.t
replace r`wavenum'igxfr = r`wavenum'ivet + r`wavenum'iwelf + r`wavenum'iwcmp + r`wavenum'iunem ///
		if !mi(r`wavenum'ivet) & !mi(r`wavenum'iwelf) & !mi(r`wavenum'iwcmp) & !mi(r`wavenum'iunem)
label variable r`wavenum'igxfr "r`wavenum'igxfr:w`wavenum' income: r other gov transfers"

*wave 3 spouse other government transfers
gen s`wavenum'igxfr = .
replace s`wavenum'igxfr = .m if s`wavenum'ivet==.m | s`wavenum'iwelf==.m | s`wavenum'iwcmp==.m | s`wavenum'iunem==.m
replace s`wavenum'igxfr = .t if s`wavenum'ivet==.t | s`wavenum'iwelf==.t | s`wavenum'iwcmp==.t | s`wavenum'iunem==.t
replace s`wavenum'igxfr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = s`wavenum'ivet + s`wavenum'iwelf + s`wavenum'iwcmp + s`wavenum'iunem ///
		if !mi(s`wavenum'ivet) & !mi(s`wavenum'iwelf) & !mi(s`wavenum'iwcmp) & !mi(s`wavenum'iunem)
label variable s`wavenum'igxfr "s`wavenum'igxfr:w`wavenum' income: s other gov transfers"

***Other Government Transfers Flag***
*wave 3 respondent other government transfers flag
gen r`wavenum'ifgxfr = .
combine_inc_flags2 war_r_t is_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t ssp_r_t jsa_r_t, result(r`wavenum'ifgxfr)
label variable r`wavenum'ifgxfr "r`wavenum'ifgxfr:w`wavenum' impflag: r other gov transfers"
label values r`wavenum'ifgxfr incflag

*wave 3 spouse other government transfers flag
gen s`wavenum'ifgxfr = .
combine_inc_flags2 war_p_t is_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t ssp_p_t jsa_p_t, result(s`wavenum'ifgxfr)
label variable s`wavenum'ifgxfr "s`wavenum'ifgxfr:w`wavenum' impflag: s other gov transfers"
label values s`wavenum'ifgxfr incflag

drop r`wavenum'ivet r`wavenum'iwelf r`wavenum'iwcmp r`wavenum'iunem 
drop s`wavenum'ivet s`wavenum'iwelf s`wavenum'iwcmp s`wavenum'iunem

drop r`wavenum'ifvet r`wavenum'ifwelf r`wavenum'ifwcmp r`wavenum'ifunem 
drop s`wavenum'ifvet s`wavenum'ifwelf s`wavenum'ifwcmp s`wavenum'ifunem

*check

***Other Household Income***
*wave 3 other household income
gen h`wavenum'iothr = .
replace h`wavenum'iothr = .m if (mi(othpay_r_i) | mi(othpay_p_i)) & inw`wavenum'==1
replace h`wavenum'iothr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = othpay_r_i*52 if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(othpay_r_i)
replace h`wavenum'iothr = (othpay_r_i + othpay_p_i)*52 if inlist(r`wavenum'mstat,1,3) & !mi(othpay_r_i) & !mi(othpay_p_i)
replace h`wavenum'iothr = .t if (h`wavenum'iothr > 100000 & !missing(h`wavenum'iothr))
label variable h`wavenum'iothr "h`wavenum'iothr:w`wavenum' income: other income"

***Other Household Income Flag***
*wave 3 other household income flag
gen h`wavenum'ifothr = .
combine_inc_flags2 othpay_r_t othpay_p_t, result(h`wavenum'ifothr)
label variable h`wavenum'ifothr "h`wavenum'ifothr:w`wavenum' impflag: other income"
label values h`wavenum'ifothr incflag

*check

***Total Family Income***
*wave 3 household total family income
gen h`wavenum'itot = .
replace h`wavenum'itot = .m if r`wavenum'itearn==.m | s`wavenum'itearn==.m | h`wavenum'icap==.m | ///
		r`wavenum'itpena==.m | s`wavenum'itpena==.m | r`wavenum'ipubpen==.m | s`wavenum'ipubpen==.m | ///
		r`wavenum'igxfr==.m | s`wavenum'igxfr==.m | h`wavenum'iothr==.m
replace h`wavenum'itot = .t if r`wavenum'itearn==.t | s`wavenum'itearn==.t | h`wavenum'icap==.t | ///
		r`wavenum'itpena==.t | s`wavenum'itpena==.t | r`wavenum'ipubpen==.t | s`wavenum'ipubpen==.t | ///
		r`wavenum'igxfr==.t | s`wavenum'igxfr==.t | h`wavenum'iothr==.t
replace h`wavenum'itot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itot = r`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena + r`wavenum'ipubpen + r`wavenum'igxfr ///
										+ h`wavenum'iothr if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(r`wavenum'itearn) ///
										& !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(r`wavenum'ipubpen) & !mi(r`wavenum'igxfr) ///
									  & !mi(h`wavenum'iothr)
replace h`wavenum'itot = r`wavenum'itearn + s`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena ///
										+ s`wavenum'itpena + r`wavenum'ipubpen + s`wavenum'ipubpen + r`wavenum'igxfr ///
										+ s`wavenum'igxfr + h`wavenum'iothr if inlist(r`wavenum'mstat,1,3) & !mi(r`wavenum'itearn) ///
										& !mi(s`wavenum'itearn) & !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(s`wavenum'itpena) ///
										& !mi(r`wavenum'ipubpen) & !mi(s`wavenum'ipubpen) & !mi(r`wavenum'igxfr) & !mi(s`wavenum'igxfr) ///
										& !mi(h`wavenum'iothr)
replace h`wavenum'itot = .t if (h`wavenum'itot > 900000 & !missing(h`wavenum'itot))
label variable h`wavenum'itot "h`wavenum'itot:w`wavenum' income: total couple level income"

*wave 3 household total family income imputation flag
gen h`wavenum'iftot = .
combine_inc_flags9 r`wavenum'itifearn s`wavenum'itifearn h`wavenum'ifcap r`wavenum'itifpena s`wavenum'itifpena r`wavenum'ifpubpen s`wavenum'ifpubpen r`wavenum'ifgxfr s`wavenum'ifgxfr h`wavenum'ifothr, result(h`wavenum'iftot)
label variable h`wavenum'iftot "h`wavenum'iftot:w`wavenum' impflag: total couple level income"
label values h`wavenum'iftot incflag

*wave 3 household total family income tax flag
gen h`wavenum'ifttot = .
replace h`wavenum'ifttot = .m if h`wavenum'isemp==.m
replace h`wavenum'ifttot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'ifttot = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'ifttot "h`wavenum'ifttot:w`wavenum' taxflag: total couple level income"
label values h`wavenum'ifttot taxflag

*check 

********Consumption*********
***monthly Food Consumption In House***
*wave 3 household monthly food consumption in house
gen hh`wavenum'cfoodi = .
replace hh`wavenum'cfoodi = .m if hofood == -1
replace hh`wavenum'cfoodi = .p if askpx == 1
replace hh`wavenum'cfoodi = .d if hofood == -8
replace hh`wavenum'cfoodi = .r if hofood == -9
replace hh`wavenum'cfoodi = hofood if inrange(hofood,0,1000)
label variable hh`wavenum'cfoodi "hh`wavenum'cfoodi:w`wavenum' hhold monthly food consumption in house" 

***monthly Food Consumption Outside House***
*wave 3 household monthly food consumption outside house
gen hh`wavenum'cfoodo1m = .
replace hh`wavenum'cfoodo1m = .m if hooutf == -1
replace hh`wavenum'cfoodo1m = .p if askpx == 1
replace hh`wavenum'cfoodo1m = .d if hooutf == -8
replace hh`wavenum'cfoodo1m = .r if hooutf == -9
replace hh`wavenum'cfoodo1m = hooutf if inrange(hooutf,0,2000)
label variable hh`wavenum'cfoodo1m "hh`wavenum'cfoodo1m:w`wavenum' hhold monthly food consumption outside house"

***monthly Total Food Consumption***
*wave 3 household total food consumption
gen hh`wavenum'cfood1m = .
replace hh`wavenum'cfood1m = .m if hofood == -1 | hooutf == -1
replace hh`wavenum'cfood1m = .p if askpx == 1
replace hh`wavenum'cfood1m = .d if hofood == -8 | hooutf == -8
replace hh`wavenum'cfood1m = .r if hofood == -9 | hooutf == -9
replace hh`wavenum'cfood1m = (hh`wavenum'cfoodi * 4.34524) + hh`wavenum'cfoodo1m if inrange(hh`wavenum'cfoodi,0,1000) & inrange(hh`wavenum'cfoodo1m,0,2000)
label variable hh`wavenum'cfood1m "hh`wavenum'cfood1m:w`wavenum' hhold total monthly food consumption"

***Monthly Clothing Expenditure***
*wave 3 household monthly clothing expenditure
gen hh`wavenum'cclo1m = .
replace hh`wavenum'cclo1m = .m if inlist(hocl,-1,-3)
replace hh`wavenum'cclo1m = .p if askpx == 1
replace hh`wavenum'cclo1m = .d if hocl == -8
replace hh`wavenum'cclo1m = .r if hocl == -9
replace hh`wavenum'cclo1m = hocl if inrange(hocl,0,5000)
label variable hh`wavenum'cclo1m "hh`wavenum'cclo1m:w`wavenum' hhold monthly clothing exp"

***Monthly Rent Expenditure***
*wave 3 household monthly rent
gen hh`wavenum'crent = .
replace hh`wavenum'crent = .m if horent == -1 | inlist(hoperi,-1,95,96) | hotenu == -1
replace hh`wavenum'crent = .p if askpx == 1
replace hh`wavenum'crent = .d if horent == -8 | hoperi == -8 | hotenu == -8
replace hh`wavenum'crent = .r if horent == -9 | hoperi == -9 | hotenu == -9
replace hh`wavenum'crent = 0 if inlist(hotenu,1,2,5,6) | hoperi == 97 | inlist(horent,9997,99997)
replace hh`wavenum'crent = horent if inlist(hoperi,4,5) & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*4.348125 if hoperi==1 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*2.1740625 if hoperi==2 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*1.449374 if hoperi==3 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/2 if hoperi==7 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.5 if hoperi==8 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.333 if hoperi==9 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.2 if hoperi==10 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/3 if hoperi==13 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/6 if hoperi==26 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/12 if hoperi==52 & inrange(horent,0,100000)
label variable hh`wavenum'crent "hh`wavenum'crent:w`wavenum' hhold monthly rent"

***Monthly Utility/Fuel Expenditure***
*wave 3 household monthly gas & electricity
gen nogas = 1 if inlist(hofuelga,-1,0)
gen noelec = 1 if inlist(hofuelel,-1,0)
gen nocoal = 1 if inlist(hofuelco,-1,0)
gen nopar = 1 if inlist(hofuelpa,-1,0)
gen nooil = 1 if inlist(hofueloi,-1,0)
gen nowood = 1 if inlist(hofuelwo,-1,0)
gen nooth = 1 if inlist(hofuel95,-1,0)

*gas and electric by direct debit
gen gseld = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofdm, result(gseld)
replace gseld = 0 if (nogas == 1 | noelec == 1 ) | hofsup == 2 | hoftog == 2 | inlist(hofpay,2,3,4,5,6,7,95)
replace gseld = hofdm if inrange(hofdm,0,1000)

*gas and electric by bill
gen gselb = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofbmw hofbms hofbqw hofbqs, result(gselb)
replace gselb = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,3,4,5,6,7,95) 
replace gselb = (hofbmw + hofbms)/2 if inrange(hofbmw,0,500) & inrange(hofbms,0,500)
replace gselb = (hofbqw + hofbqs)/2/3 if inrange(hofbqw,0,500) & inrange(hofbqs,0,500)

*gas and electric by prepay
gen gselp = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofpw hofps, result(gselp)
replace gselp = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,4,5,6,7,95) 
replace gselp = (hofpw + hofps)/2*4.348125 if inrange(hofpw,0,500) & inrange(hofps,0,500)

*gas and electric by other payment method
gen gselo = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofow hofos, result(gselo)
replace gselo = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,7) 
replace gselo = (hofow + hofos)/2*4.348125 if inrange(hofow,0,500) & inrange(hofos,0,500)

*gas and electric by staywarm scheme
gen gsels = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofsw hofsm hofsq, result(gsels)
replace gsels = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,4,5,6,95) 
replace gsels = hofsw*4.348125 if inrange(hofsw,0,500)
replace gsels = hofsm if inrange(hofsm,0,500)
replace gsels = hofsq/3 if inrange(hofsq,0,500)

*all gas and electric
gen gsel = .
missing_H gseld gselb gselp gselo gsels, result(gsel)
replace gsel = gseld + gselb + gselp + gselo + gsels if !mi(gseld) & !mi(gselb) & !mi(gselp) & !mi(gselo) & !mi(gsels)

drop gseld gselb gselp gselo gsels

*wave 3 household monthly gas
*gas by direct debit
gen gasd = .
missing_w2 hofuelga hoftog hogpay hogd hogdm hogdq, result(gasd)
replace gasd = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,2,3,4,5,6,95)
replace gasd = hogdm if inrange(hogdm,0,500)
replace gasd = hogdq/3 if inrange(hogdq,0,500)

*gas by bill
gen gasb = .
missing_w2 hofuelga hoftog hogpay hogbp hogbmw hogbms, result(gasb)
replace gasb = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,3,4,5,6,95)
replace gasb = (hogbmw + hogbms)/2 if inrange(hogbmw,0,500) & inrange(hogbms,0,500)
replace gasb = (hogbqw + hogbqs)/2/3 if inrange(hogbqw,0,500) & inrange(hogbqs,0,500)

*gas by prepay
gen gasp = .
missing_w2 hofuelga hoftog hogpay hogpw hogps, result(gasp)
replace gasp = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,4,5,6,95)
replace gasp = (hogpw + hogps)/2*4.348125 if inrange(hogpw,0,500) & inrange(hogps,0,500)

*gas by other paymenet method
gen gaso=.
missing_w2 hofuelga hoftog hogpay hogow hogos, result(gaso)
replace gaso = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,3)
replace gaso = (hogow + hogos)/2*4.348125 if inrange(hogow,0,500) & inrange(hogos,0,500)

*all gas
gen gas = .
missing_H gasd gasb gasp gaso, result(gas)
replace gas = gasd + gasb + gasp + gaso if !mi(gasd) & !mi(gasb) & !mi(gasp) & !mi(gaso)

drop gasd gasb gasp gaso

*wave 3 household monthly electricity
*electricity by direct debig
gen elecd = .
missing_w2 hofuelel hoftog hoepay hoedm hoedq, result(elecd)
replace elecd = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,2,3,4,5,6,95)
replace elecd = hoedm if inrange(hoedm,0,500)
replace elecd = hoedq/3 if inrange(hoedq,0,500)

*electricity by bill
gen elecb = .
missing_w2 hofuelel hoftog hoepay hoebmw hoebms hoebqw hoebqs, result(elecb)
replace elecb = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,3,4,5,6,95)
replace elecb = (hoebmw + hoebms)/2 if inrange(hoebmw,0,500) & inrange(hoebms,0,500)
replace elecb = (hoebqw + hoebqs)/2/3 if inrange(hoebqw,0,500) & inrange(hoebqs,0,500)

*electricity by prepay
gen elecp =.
missing_w2 hofuelel hoftog hoepay hoepw hoeps, result(elecp)
replace elecp = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,4,5,6,95)
replace elecp = (hoepw + hoeps)/2*4.348125 if inrange(hoepw,0,500) & inrange(hoeps,0,500)

*electricity by other payment method
gen eleco = .
missing_w2 hofuelel hoftog hoepay hoeow hoeos, result(eleco)
replace eleco = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,3)
replace eleco = (hoeow + hoeos)/2*4.348125 if inrange(hoeow,0,500) & inrange(hoeos,0,500)

*all electricity
gen elec = .
missing_H elecd elecb elecp eleco, result(elec)
replace elec = elecd + elecb + elecp + eleco if !mi(elecd) & !mi(elecb) & !mi(elecp) & !mi(eleco)

drop elecd elecb elecp eleco

*wave 3 household monthly coal
gen coal = .
missing_w2 hofuelco hofcw hofcs, result(coal)
replace coal = 0 if nocoal == 1 
replace coal = (hofcw + hofcs)/2*4.348125 if inrange(hofcw,0,100) & inrange(hofcs,0,100)

*wave 3 household monthly paraffin
gen para = .
missing_w2 hofuelpa hofpgw hofpgs, result(para)
replace para = 0 if nopar == 1
replace para = (hofpgw + hofpgs)/2*4.348125 if inrange(hofpgw,0,100) & inrange(hofpgs,0,100)

*wave 3 household monthly oil
gen oil = .
missing_w2 hofueloi hofoiw hofois, result(oil)
replace oil = 0 if nooil == 1
replace oil = (hofoiw + hofois)/2*4.348125 if inrange(hofoiw,0,100) & inrange(hofois,0,100)

*wave 3 household monthly wood
gen wood = .
missing_w2 hofuelwo hofww hofws, result(wood)
replace wood = 0 if nowood == 1
replace wood = (hofww + hofws)/2*4.348125 if inrange(hofww,0,100) & inrange(hofws,0,100)

*wave 3 household monthly other
gen oth = .
missing_w2 hofuel95 hofxw hofxs, result(oth)
replace oth = 0 if nooth == 1
replace oth = (hofxw + hofxs)/2*4.348125 if inrange(hofxw,0,100) & inrange(hofxs,0,100)

drop nogas noelec nocoal nopar nooil nowood nooth 

*wave 3 household utility/fuel
gen hh`wavenum'cutil = .
missing_H gsel gas elec coal para oil wood oth, result(hh`wavenum'cutil)
replace hh`wavenum'cutil = .p if askpx == 1
replace hh`wavenum'cutil = gsel + gas + elec + coal + para + oil + wood + oth if !mi(gsel) & !mi(gas) & !mi(elec) & !mi(coal) & !mi(para) & !mi(oil) & !mi(wood) & !mi(oth)
label variable hh`wavenum'cutil "hh`wavenum'cutil:w`wavenum' hhold monthly utility/fuel"

drop gsel gas elec coal para oil wood oth

***Monthly Total Consumption***
*wave 3 household monthly total consumption
gen hh`wavenum'ctot1m = .
missing_H hh`wavenum'cfood1m hh`wavenum'cclo1m hh`wavenum'crent hh`wavenum'cutil, result(hh`wavenum'ctot1m)
replace hh`wavenum'ctot1m = .p if askpx == 1
replace hh`wavenum'ctot1m = hh`wavenum'cfood1m + hh`wavenum'cclo1m + hh`wavenum'crent + hh`wavenum'cutil if ///
                    inrange(hh`wavenum'cfood1m,0,15000) & ///
                    inrange(hh`wavenum'cclo1m,0,5000) & ///
                    inrange(hh`wavenum'crent,0,990000) & ///
                    inrange(hh`wavenum'cutil,0,1000)
label variable hh`wavenum'ctot1m "hh`wavenum'ctot1m:w`wavenum' hhold total monthly consumption"


***drop ELSA wave 3 financial derived file raw variables***
drop `income_w3_fina'

***drop ELSA wave 3 core variables***
drop `income_w3_core'

******************************************************************************************

*set wave number
local wavenum=4

***merge with wave 4 financial derived variables data***
local income_w4_fina thp_r_i oj_r_i sedraw_bu_i ///
                     thp_r_t oj_r_t sedraw_bu_t ///
                     thp_p_i oj_p_i thp_p_t oj_p_t ///
                     ppinc_r_s ppinc_r_t ppinc_p_s ppinc_p_t ///
                     spen_r_i widpen_r_i ///
                     spen_r_t widpen_r_t ///
                     spen_p_i widpen_p_i ///
                     spen_p_t widpen_p_t ///
                     farmi_bu_i netprof_bu_i homei_bu_i savei_bu_i isai_bu_i tessai_bu_i ///
                     farmi_bu_t netprof_bu_t homei_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
                     nsavi_bu_i pepi_bu_i sharesi_bu_i prbondsi_bu_i trustsi_bu_i bondsi_bu_i othsavi_bu_i ///
                     nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t ///
                     icb_r_i icb_p_i sda_r_i sda_p_i ssp_r_i ssp_p_i attall_r_i attall_p_i dla_r_i dla_p_i ///
                     icb_r_t icb_p_t sda_r_t sda_p_t ssp_r_t ssp_p_t attall_r_t attall_p_t dla_r_t dla_p_t ///
                     indinj_r_i indinj_p_i war_r_i war_p_i carers_r_i carers_p_i is_r_i is_p_i pc_r_i pc_p_i ///
                     indinj_r_t indinj_p_t war_r_t war_p_t carers_r_t carers_p_t is_r_t is_p_t pc_r_t pc_p_t ///
                     wtc_r_i wtc_p_i jsa_r_i jsa_p_i gall_r_i gall_p_i cb_r_i cb_p_i ctc_r_i ctc_p_i ///
                     wtc_r_t wtc_p_t jsa_r_t jsa_p_t gall_r_t gall_p_t cb_r_t cb_p_t ctc_r_t ctc_p_t ///
                     othpay_r_i othpay_p_i ///
                     othpay_r_t othpay_p_t
merge 1:1 idauniq using "$wave_4_fina", keepusing(`income_w4_fina') nogen

***merge with wave 4 core data***
local income_w4_core hofood hooutf hocl holeis askpx ///
										horent hoperi hotenu hofuelga hofuelel hofuelco hofuelpa hofueloi hofuelwo hofuel95 ///
										hofbqs hofbms hofbqw hofbmw hofd ///
										hofdm hofdq hofbmw hofbqw hofpw hofps hofow hofos hofsw hofsm hofsq ///
										hogdm hogdq hogbmw hogbms hogbqw hogbqs hogpw hogps hogow hogos ///
										hoedm hoedq hoebmw hoebms hoebqw hoebqs hoepw hoeps hoeow hoeos ///
										hofcw hofcs hofpgw hofpgs hofoiw hofois hofww hofws hofxw hofxs ///
										hofsup hoftog hofpay hofb hofsp hogpay hogd hogbp hoepay
merge 1:1 idauniq using "$wave_4_core", keepusing(`income_w4_core') nogen


***Employment Earnings***
*wave 4 respondent earnings from main job after tax
gen r`wavenum'itmain = .
replace r`wavenum'itmain = .m if mi(thp_r_i) & inw`wavenum'==1 
replace r`wavenum'itmain = thp_r_i*52 if !mi(thp_r_i)

*wave 4 respondent earnings from 2nd job after tax
gen r`wavenum'itsec = .
replace r`wavenum'itsec = .m if mi(oj_r_i) & inw`wavenum'==1 
replace r`wavenum'itsec = oj_r_i*52 if !mi(oj_r_i)

**wave 4 respondent total earnings after tax
gen r`wavenum'itearn = .
replace r`wavenum'itearn = .m if r`wavenum'itmain==.m | r`wavenum'itsec==.m 
replace r`wavenum'itearn = r`wavenum'itmain + r`wavenum'itsec if !mi(r`wavenum'itmain) & !mi(r`wavenum'itsec)
label variable r`wavenum'itearn "r`wavenum'itearn:w`wavenum' income: r employment earnings (after tax)"

*wave 4 spouse earnings from main job after tax
gen s`wavenum'itmain = .
replace s`wavenum'itmain = .m if mi(thp_p_i) & inw`wavenum'==1
replace s`wavenum'itmain = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = thp_p_i*52 if !mi(thp_p_i)

*wave 4 spouse earnings from 2nd job after tax
gen s`wavenum'itsec = .
replace s`wavenum'itsec = .m if mi(oj_p_i) & inw`wavenum'==1
replace s`wavenum'itsec = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = oj_p_i*52 if !mi(oj_p_i)

**wave 4 spouse total earnings after tax
gen s`wavenum'itearn = .
replace s`wavenum'itearn = .m if s`wavenum'itmain==.m | s`wavenum'itearn==.m
replace s`wavenum'itearn = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = s`wavenum'itmain + s`wavenum'itsec if !mi(s`wavenum'itmain) & !mi(s`wavenum'itsec)
label variable s`wavenum'itearn "s`wavenum'itearn:w`wavenum' income: s employment earnings (after tax)"

***Employment Earnings Flag***
*wave 4 respondent earnings flag
gen r`wavenum'itifearn = .
combine_inc_flags2 thp_r_t oj_r_t, result(r`wavenum'itifearn)
label variable r`wavenum'itifearn "r`wavenum'itifearn:w`wavenum' impflag: r employment earnings"
label values r`wavenum'itifearn incflag

*wave 4 spouse earnings flag
gen s`wavenum'itifearn = .
combine_inc_flags2 thp_p_t oj_p_t, result(s`wavenum'itifearn)
label variable s`wavenum'itifearn "s`wavenum'itifearn:w`wavenum' impflag: s employment earnings"
label values s`wavenum'itifearn incflag

*check 

*drop intermediate variables
drop r`wavenum'itmain 
drop s`wavenum'itmain
drop r`wavenum'itsec
drop s`wavenum'itsec

***Self-Employment Earnings***
*wave 4 household self-employment earnings before tax
gen h`wavenum'isemp = .
replace h`wavenum'isemp = .m if (mi(sedraw_bu_i) | mi(netprof_bu_i)) & inw`wavenum'==1
replace h`wavenum'isemp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = (sedraw_bu_i + netprof_bu_i)*52 if !mi(sedraw_bu_i) & !mi(netprof_bu_i)
label variable h`wavenum'isemp "h`wavenum'isemp:w`wavenum' income: self-employ earnings (before tax)"

***Self-Employment Earnings Flag***
*wave 4 household self-employment earnings flag
gen h`wavenum'iifsemp = .
combine_inc_flags2 sedraw_bu_t netprof_bu_t, result(h`wavenum'iifsemp)
label variable h`wavenum'iifsemp "h`wavenum'iifsemp:w`wavenum' impflag: self-employ earnings"
label values h`wavenum'iifsemp incflag

*check

***Rental Income from Other Property***
*wave 4 household rental income from other property after tax
gen h`wavenum'itrent = .
replace h`wavenum'itrent = .m if mi(homei_bu_i) & inw`wavenum'==1
replace h`wavenum'itrent = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = homei_bu_i*52 if !mi(homei_bu_i)
label variable h`wavenum'itrent "h`wavenum'itrent:w`wavenum' income: rental income from other property (after tax)"

***Rental Income from Other Property Flag***
*wave 4 household rental income from other property flag
gen h`wavenum'itifrent = .
combine_inc_flags2 homei_bu_t, result(h`wavenum'itifrent)
label variable h`wavenum'itifrent "h`wavenum'itifrent:w`wavenum' impflag: rental income from other property"
label values h`wavenum'itifrent incflag

*check

***Interest Income from Financial Assets***
*wave 4 household interest income from financial assets after tax
gen h`wavenum'ittrest = .
replace h`wavenum'ittrest = .m if (mi(farmi_bu_i) | mi(savei_bu_i) | mi(isai_bu_i) | mi(tessai_bu_i) | ///
		mi(nsavi_bu_i) | mi(pepi_bu_i) | mi(sharesi_bu_i) | mi(prbondsi_bu_i) | mi(trustsi_bu_i) | ///
		mi(bondsi_bu_i) | mi(othsavi_bu_i)) & inw`wavenum'==1
replace h`wavenum'ittrest = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = (farmi_bu_i + savei_bu_i + isai_bu_i + tessai_bu_i + nsavi_bu_i ///
		 + pepi_bu_i + sharesi_bu_i + prbondsi_bu_i + trustsi_bu_i + bondsi_bu_i + othsavi_bu_i)*52 ///
		 if !mi(farmi_bu_i) & !mi(savei_bu_i) & !mi(isai_bu_i) & !mi(tessai_bu_i) & !mi(nsavi_bu_i) ///
		 & !mi(pepi_bu_i) & !mi(sharesi_bu_i) & !mi(prbondsi_bu_i) & !mi(trustsi_bu_i) & !mi(bondsi_bu_i) & !mi(othsavi_bu_i)
label variable h`wavenum'ittrest "h`wavenum'ittrest:w`wavenum' income: interest income from financial assets (after tax)"

***Interest Income from Financial Assets Flag***
*wave 4 household interest income from financial assets flag
gen h`wavenum'ittfrest = .
combine_inc_flags2 farmi_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
		nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t, result(h`wavenum'ittfrest)
label variable h`wavenum'ittfrest "h`wavenum'ittfrest:w`wavenum' impflag: interest income from financial assets"
label values h`wavenum'ittfrest incflag

*check

***Capital Income***
*wave 4 household capital income
gen h`wavenum'icap = .
replace h`wavenum'icap = .m if h`wavenum'isemp==.m | h`wavenum'itrent==.m | h`wavenum'ittrest==.m
replace h`wavenum'icap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'icap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'icap = h`wavenum'isemp + h`wavenum'itrent + h`wavenum'ittrest ///
		if !mi(h`wavenum'isemp) & !mi(h`wavenum'itrent) & !mi(h`wavenum'ittrest)
label variable h`wavenum'icap "h`wavenum'icap:w`wavenum' income: couple level capital income"

*wave 4 household capital income imputation flag
gen h`wavenum'ifcap = .
combine_inc_flags2 sedraw_bu_t homei_bu_t farmi_bu_t netprof_bu_t savei_bu_t isai_bu_t ///
		tessai_bu_t nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t othsavi_bu_t, result(h`wavenum'ifcap)
label variable h`wavenum'ifcap "h`wavenum'ifcap:w`wavenum' impflag: couple level capital income"
label values h`wavenum'ifcap incflag

*wave 4 household capital income tax flag
gen h`wavenum'itfcap = .
replace h`wavenum'itfcap = .m if h`wavenum'isemp == .m
replace h`wavenum'itfcap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'itfcap = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'itfcap "h`wavenum'itfcap:w`wavenum' taxflag: couple level capital income"
label values h`wavenum'itfcap taxflag

*check

***Income from Employer/Private Pension & Annuity***
*wave 4 respondent income from pension & annuity
gen r`wavenum'itpena = .
replace r`wavenum'itpena = .m if mi(ppinc_r_s) & inw`wavenum'==1 
replace r`wavenum'itpena = ppinc_r_s*52 if !mi(ppinc_r_s)
label variable r`wavenum'itpena "r`wavenum'itpena:w`wavenum' income: r pension + annuity (after tax)"

*wave 4 spouse income from pension & annuity
gen s`wavenum'itpena = .
replace s`wavenum'itpena = .m if mi(ppinc_p_s) & inw`wavenum'==1
replace s`wavenum'itpena = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = ppinc_p_s*52 if !mi(ppinc_p_s)
label variable s`wavenum'itpena "s`wavenum'itpena:w`wavenum' income: s pension + annuity (after tax)"

***Income from Employer/Private Pension & Annuity Flag***
*wave 4 respondent income from pension & annuity flag
gen r`wavenum'itifpena = .
combine_inc_flags2 ppinc_r_t, result(r`wavenum'itifpena)
label variable r`wavenum'itifpena "r`wavenum'itifpena:w`wavenum' impflag: r pension + annuity"
label values r`wavenum'itifpena incflag

*wave 4 spouse income from pension & annuity flag
gen s`wavenum'itifpena = .
combine_inc_flags2 ppinc_p_t, result(s`wavenum'itifpena)
label variable s`wavenum'itifpena "s`wavenum'itifpena:w`wavenum' impflag: s pension + annuity"
label values s`wavenum'itifpena incflag

*check 

***Individual Disability Pension***
*wave 4 respondent individual disability pension
gen r`wavenum'issdi = .
replace r`wavenum'issdi = .m if (mi(icb_r_i) | mi(sda_r_i) | mi(attall_r_i) | mi(dla_r_i) | ///
		mi(indinj_r_i) | mi(carers_r_i)) & inw`wavenum'==1 
replace r`wavenum'issdi = (icb_r_i + sda_r_i + attall_r_i + dla_r_i + indinj_r_i + carers_r_i)*52 ///
		if !mi(icb_r_i) & !mi(sda_r_i) & !mi(attall_r_i) & !mi(dla_r_i) & !mi(indinj_r_i) & !mi(carers_r_i)
replace r`wavenum'issdi = .t if (r`wavenum'issdi > 100000 & !missing(r`wavenum'issdi))
label variable r`wavenum'issdi "r`wavenum'issdi:w`wavenum' income: r public disability pension"

*wave 4 spouse individual disability pension
gen s`wavenum'issdi = .
replace s`wavenum'issdi = .m if (mi(icb_p_i) | mi(sda_p_i) | mi(attall_p_i) | mi(dla_p_i) | ///
		mi(indinj_p_i) | mi(carers_p_i)) & inw`wavenum'==1 
replace s`wavenum'issdi = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = (icb_p_i + sda_p_i + attall_p_i + dla_p_i + indinj_p_i + carers_p_i)*52 ///
		if !mi(icb_p_i) & !mi(sda_p_i) & !mi(attall_p_i) & !mi(dla_p_i) & !mi(indinj_p_i) & !mi(carers_p_i)
replace s`wavenum'issdi = .t if (s`wavenum'issdi > 100000 & !missing(s`wavenum'issdi))
label variable s`wavenum'issdi "s`wavenum'issdi:w`wavenum' income: s public disability pension"

***Individual Disability Pension Flag***
*wave 4 respondent individual disability pension flag
gen r`wavenum'ifssdi = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t, result(r`wavenum'ifssdi)
label variable r`wavenum'ifssdi "r`wavenum'ifssdi:w`wavenum' impflag: r public disability pension"
label values r`wavenum'ifssdi incflag

*wave 4 spouse individual disability pension flag
gen s`wavenum'ifssdi = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t, result(s`wavenum'ifssdi)
label variable s`wavenum'ifssdi "s`wavenum'ifssdi:w`wavenum' impflag: s public disability pension"
label values s`wavenum'ifssdi incflag

*check

***Individual Income from Public Pension without Disability***
*wave 4 respondent income from public pension without disability
gen r`wavenum'isret = .
replace r`wavenum'isret = .m if (mi(spen_r_i) | mi(widpen_r_i)) & inw`wavenum'==1 
replace r`wavenum'isret = (spen_r_i + widpen_r_i)*52 if !mi(spen_r_i) & !mi(widpen_r_i)
replace r`wavenum'isret = .t if (r`wavenum'isret > 100000 & !missing(r`wavenum'isret))
label variable r`wavenum'isret "r`wavenum'isret:w`wavenum' income: r public old-age pension"

*wave 4 spouse income from public pension without disability
gen s`wavenum'isret = .
replace s`wavenum'isret = .m if (mi(spen_p_i) | mi(widpen_p_i)) & inw`wavenum'==1
replace s`wavenum'isret = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'isret = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'isret = (spen_p_i + widpen_p_i)*52 if !mi(spen_p_i) & !mi(widpen_p_i)
replace s`wavenum'isret = .t if (s`wavenum'isret > 100000 & !missing(s`wavenum'isret))
label variable s`wavenum'isret "s`wavenum'isret:w`wavenum' income: s public old-age pension"

***Individual Income from Public Pension without Disability Flag***
*wave 4 respondent income public pension without disability flag
gen r`wavenum'ifsret = .
combine_inc_flags2 spen_r_t widpen_r_t, result(r`wavenum'ifsret)
label variable r`wavenum'ifsret "r`wavenum'ifsret:w`wavenum' incflag: r public old-age pension"
label values r`wavenum'ifsret incflag

*wave 4 spouse income from public pension without disability flag
gen s`wavenum'ifsret = .
combine_inc_flags2 spen_p_t widpen_p_t, result(s`wavenum'ifsret)
label variable s`wavenum'ifsret "s`wavenum'ifsret:w`wavenum' incflag: s public old-age pension"
label values s`wavenum'ifsret incflag

*check 


***Main Public Pension***
*wave 4 respondent main public pension
gen r`wavenum'ipubpen = .
replace r`wavenum'ipubpen = .m if r`wavenum'issdi==.m | r`wavenum'isret==.m 
replace r`wavenum'ipubpen = .t if r`wavenum'issdi==.t | r`wavenum'isret==.t
replace r`wavenum'ipubpen = r`wavenum'issdi + r`wavenum'isret if !mi(r`wavenum'issdi) & !mi(r`wavenum'isret)
label variable r`wavenum'ipubpen "r`wavenum'ipubpen:w`wavenum' income: r public pensions"

*wave 4 spouse main public pension
gen s`wavenum'ipubpen = .
replace s`wavenum'ipubpen = .m if s`wavenum'issdi==.m | s`wavenum'isret==.m
replace s`wavenum'ipubpen = .t if s`wavenum'issdi==.t | s`wavenum'isret==.t
replace s`wavenum'ipubpen = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = s`wavenum'issdi + s`wavenum'isret if !mi(s`wavenum'issdi) & !mi(s`wavenum'isret)
label variable s`wavenum'ipubpen "s`wavenum'ipubpen:w`wavenum' income: s public pensions"

***Main Public Pension Flag***
*wave 4 respondent main public pension flag
gen r`wavenum'ifpubpen = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t spen_r_t widpen_r_t, result(r`wavenum'ifpubpen)
label variable r`wavenum'ifpubpen "r`wavenum'ifpubpen:w`wavenum' impflag: r public pensions"
label values r`wavenum'ifpubpen incflag

*wave 4 spouse main public pension flag
gen s`wavenum'ifpubpen = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t spen_p_t widpen_p_t, result(s`wavenum'ifpubpen)
label variable s`wavenum'ifpubpen "s`wavenum'ifpubpen:w`wavenum' impflag: s public pensions"
label values s`wavenum'ifpubpen incflag

***War Pension***
*wave 4 respondent war pension
gen r`wavenum'ivet = .
replace r`wavenum'ivet = .m if mi(war_r_i) & inw`wavenum'==1 
replace r`wavenum'ivet = war_r_i*52 if !mi(war_r_i)
label variable r`wavenum'ivet "r`wavenum'ivet:w`wavenum' income: r war pension"

*wave 4 spouse war pension
gen s`wavenum'ivet = .
replace s`wavenum'ivet = .m if mi(war_p_i) & inw`wavenum'==1
replace s`wavenum'ivet = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = war_p_i*52 if !mi(war_p_i)
label variable s`wavenum'ivet "s`wavenum'ivet:w`wavenum' income: s war pension"

***War Pension Flag***
*wave 4 respondent war pension flag
gen r`wavenum'ifvet = .
combine_inc_flags2 war_r_t, result(r`wavenum'ifvet)
label variable r`wavenum'ifvet "r`wavenum'ifvet:w`wavenum' impflag: r war pension"
label values r`wavenum'ifvet incflag

*wave 4 spouse war pension flag
gen s`wavenum'ifvet = .
combine_inc_flags2 war_p_t, result(s`wavenum'ifvet)
label variable s`wavenum'ifvet "s`wavenum'ifvet:w`wavenum' impflag: s war pension"
label values s`wavenum'ifvet incflag

*check

***Income Support***
*wave 4 respondent income support
gen r`wavenum'iwelf = .
replace r`wavenum'iwelf = .m if (mi(is_r_i) | mi(wtc_r_i) | mi(gall_r_i) | mi(cb_r_i) | ///
		mi(ctc_r_i) | mi(pc_r_i)) & inw`wavenum'==1 
replace r`wavenum'iwelf = (is_r_i + wtc_r_i + gall_r_i + cb_r_i + ctc_r_i + pc_r_i)*52 ///
		if !mi(is_r_i) & !mi(wtc_r_i) & !mi(gall_r_i) & !mi(cb_r_i) & !mi(ctc_r_i) & !mi(pc_r_i)
replace r`wavenum'iwelf = .t if (r`wavenum'iwelf > 100000 & !missing(r`wavenum'iwelf))
label variable r`wavenum'iwelf "r`wavenum'iwelf:w`wavenum' income: r income support"

*wave 4 spouse income support
gen s`wavenum'iwelf = .
replace s`wavenum'iwelf = .m if (mi(is_p_i) | mi(wtc_p_i) | mi(gall_p_i) | mi(cb_p_i) | ///
		mi(ctc_p_i) | mi(pc_p_i)) & inw`wavenum'==1 
replace s`wavenum'iwelf = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = (is_p_i + wtc_p_i + gall_p_i + cb_p_i + ctc_p_i + pc_p_i)*52 ///
		if !mi(is_p_i) & !mi(wtc_p_i) & !mi(gall_p_i) & !mi(cb_p_i) & !mi(ctc_p_i) & !mi(pc_p_i)
replace s`wavenum'iwelf = .t if (s`wavenum'iwelf > 100000 & !missing(s`wavenum'iwelf))
label variable s`wavenum'iwelf "s`wavenum'iwelf:w`wavenum' income: s income support"

***Income Support Flag***
*wave 4 respondent income support flag
gen r`wavenum'ifwelf = .
combine_inc_flags2 is_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifwelf)
label variable r`wavenum'ifwelf "r`wavenum'ifwelf:w`wavenum' impflag: r income support"
label values r`wavenum'ifwelf incflag

*wave 4 spouse income support flag
gen s`wavenum'ifwelf = .
combine_inc_flags2 is_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifwelf)
label variable s`wavenum'ifwelf "s`wavenum'ifwelf:w`wavenum' impflag: s income support"
label values s`wavenum'ifwelf incflag

*check

***Worker's Comp/Short-Term Disability***
*wave 4 respondent worker's comp
gen r`wavenum'iwcmp = .
replace r`wavenum'iwcmp = .m if mi(ssp_r_i) & inw`wavenum'==1 
replace r`wavenum'iwcmp = ssp_r_i*52 if !mi(ssp_r_i)
label variable r`wavenum'iwcmp "r`wavenum'iwcmp:w`wavenum' income: r workers comp"

*wave 4 spouse worker's comp
gen s`wavenum'iwcmp = .
replace s`wavenum'iwcmp = .m if mi(ssp_p_i) & inw`wavenum'==1
replace s`wavenum'iwcmp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = ssp_p_i*52 if !mi(ssp_p_i)
label variable s`wavenum'iwcmp "s`wavenum'iwcmp:w`wavenum' income: s workers comp"

***Worker's Comp/Short-Term Disability Flag***
*wave 4 respondent worker's comp flag
gen r`wavenum'ifwcmp = .
combine_inc_flags2 ssp_r_t, result(r`wavenum'ifwcmp)
label variable r`wavenum'ifwcmp "r`wavenum'ifwcmp:w`wavenum' impflag: r workers comp"
label values r`wavenum'ifwcmp incflag

*wave 4 spouse worker's comp flag
gen s`wavenum'ifwcmp = .
combine_inc_flags2 ssp_p_t, result(s`wavenum'ifwcmp)
label variable s`wavenum'ifwcmp "s`wavenum'ifwcmp:w`wavenum' impflag: s workers comp"
label values s`wavenum'ifwcmp incflag

*check

***Unemployment Transfers***
*wave 4 respondent unemployment transfers
gen r`wavenum'iunem = .
replace r`wavenum'iunem = .m if mi(jsa_r_i) & inw`wavenum'==1
replace r`wavenum'iunem = jsa_r_i*52  if !mi(jsa_r_i)
replace r`wavenum'iunem = .t if (r`wavenum'iunem > 10000 & !missing(r`wavenum'iunem))
label variable r`wavenum'iunem "r`wavenum'iunem:w`wavenum' income: r unemployment"

*wave 4 spouse unemployment transfers
gen s`wavenum'iunem = .
replace s`wavenum'iunem = .m if mi(jsa_p_i) & inw`wavenum'==1
replace s`wavenum'iunem = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = jsa_p_i*52 if !mi(jsa_p_i)
label variable s`wavenum'iunem "s`wavenum'iunem:w`wavenum' income: s unemployment"

***Unemployment Transfers Flag***
*wave 4 respondent unemployment transfers flag
gen r`wavenum'ifunem = .
combine_inc_flags2 jsa_r_t, result(r`wavenum'ifunem)
label variable r`wavenum'ifunem "r`wavenum'ifunem:w`wavenum' impflag: r unemployment"
label values r`wavenum'ifunem incflag

*wave 4 spouse unemployment transfers flag
gen s`wavenum'ifunem = .
combine_inc_flags2 jsa_p_t, result(s`wavenum'ifunem)
label variable s`wavenum'ifunem "s`wavenum'ifunem:w`wavenum' impflag: s unemployment"
label values s`wavenum'ifunem incflag

*check

***Other Government Transfers***
*wave 4 respondent other government transfers
gen r`wavenum'igxfr = .
replace r`wavenum'igxfr = .m if r`wavenum'ivet==.m | r`wavenum'iwelf==.m | r`wavenum'iwcmp==.m | r`wavenum'iunem==.m
replace r`wavenum'igxfr = .t if r`wavenum'ivet==.t | r`wavenum'iwelf==.t | r`wavenum'iwcmp==.t | r`wavenum'iunem==.t
replace r`wavenum'igxfr = r`wavenum'ivet + r`wavenum'iwelf + r`wavenum'iwcmp + r`wavenum'iunem ///
		if !mi(r`wavenum'ivet) & !mi(r`wavenum'iwelf) & !mi(r`wavenum'iwcmp) & !mi(r`wavenum'iunem)
label variable r`wavenum'igxfr "r`wavenum'igxfr:w`wavenum' income: r other gov transfers"

*wave 4 spouse other government transfers
gen s`wavenum'igxfr = .
replace s`wavenum'igxfr = .m if s`wavenum'ivet==.m | s`wavenum'iwelf==.m | s`wavenum'iwcmp==.m | s`wavenum'iunem==.m
replace s`wavenum'igxfr = .t if s`wavenum'ivet==.t | s`wavenum'iwelf==.t | s`wavenum'iwcmp==.t | s`wavenum'iunem==.t
replace s`wavenum'igxfr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = s`wavenum'ivet + s`wavenum'iwelf + s`wavenum'iwcmp + s`wavenum'iunem ///
		if !mi(s`wavenum'ivet) & !mi(s`wavenum'iwelf) & !mi(s`wavenum'iwcmp) & !mi(s`wavenum'iunem)
label variable s`wavenum'igxfr "s`wavenum'igxfr:w`wavenum' income: s other gov transfers"

***Other Government Transfers Flag***
*wave 4 respondent other government transfers flag
gen r`wavenum'ifgxfr = .
combine_inc_flags2 war_r_t is_r_t ssp_r_t jsa_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifgxfr)
label variable r`wavenum'ifgxfr "r`wavenum'ifgxfr:w`wavenum' impflag: r other gov transfers"
label values r`wavenum'ifgxfr incflag

*wave 4 spouse other government transfers flag
gen s`wavenum'ifgxfr = .
combine_inc_flags2 war_p_t is_p_t ssp_p_t jsa_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifgxfr)
label variable s`wavenum'ifgxfr "s`wavenum'ifgxfr:w`wavenum' impflag: s other gov transfers"
label values s`wavenum'ifgxfr incflag

drop r`wavenum'ivet r`wavenum'iwelf r`wavenum'iwcmp r`wavenum'iunem 
drop s`wavenum'ivet s`wavenum'iwelf s`wavenum'iwcmp s`wavenum'iunem

drop r`wavenum'ifvet r`wavenum'ifwelf r`wavenum'ifwcmp r`wavenum'ifunem 
drop s`wavenum'ifvet s`wavenum'ifwelf s`wavenum'ifwcmp s`wavenum'ifunem

*check

***Other Household Income***
*wave 4 other household income
gen h`wavenum'iothr = .
replace h`wavenum'iothr = .m if (mi(othpay_r_i) | mi(othpay_p_i)) & inw`wavenum'==1
replace h`wavenum'iothr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = othpay_r_i*52 if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(othpay_r_i)
replace h`wavenum'iothr = (othpay_r_i + othpay_p_i)*52 if inlist(r`wavenum'mstat,1,3) & !mi(othpay_r_i) & !mi(othpay_p_i)
replace h`wavenum'iothr = .t if (h`wavenum'iothr > 100000 & !missing(h`wavenum'iothr))
label variable h`wavenum'iothr "h`wavenum'iothr:w`wavenum' income: other income"

***Other Household Income Flag***
*wave 4 other household income flag
gen h`wavenum'ifothr = .
combine_inc_flags2 othpay_r_t othpay_p_t, result(h`wavenum'ifothr)
label variable h`wavenum'ifothr "h`wavenum'ifothr:w`wavenum' impflag: other income"
label values h`wavenum'ifothr incflag

*check

***Total Family Income***
*wave 4 household total family income
gen h`wavenum'itot = .
replace h`wavenum'itot = .m if r`wavenum'itearn==.m | s`wavenum'itearn==.m | h`wavenum'icap==.m | ///
		r`wavenum'itpena==.m | s`wavenum'itpena==.m | r`wavenum'ipubpen==.m | s`wavenum'ipubpen==.m | ///
		r`wavenum'igxfr==.m | s`wavenum'igxfr==.m | h`wavenum'iothr==.m
replace h`wavenum'itot = .t if r`wavenum'itearn==.t | s`wavenum'itearn==.t | h`wavenum'icap==.t | ///
		r`wavenum'itpena==.t | s`wavenum'itpena==.t | r`wavenum'ipubpen==.t | s`wavenum'ipubpen==.t | ///
		r`wavenum'igxfr==.t | s`wavenum'igxfr==.t | h`wavenum'iothr==.t
replace h`wavenum'itot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itot = r`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena + r`wavenum'ipubpen /// 
												+ r`wavenum'igxfr + h`wavenum'iothr if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(r`wavenum'itearn) ///
										& !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(r`wavenum'ipubpen) & !mi(r`wavenum'igxfr) ///
									  & !mi(h`wavenum'iothr)
replace h`wavenum'itot = r`wavenum'itearn + s`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena /// 
												+ s`wavenum'itpena + r`wavenum'ipubpen + s`wavenum'ipubpen + r`wavenum'igxfr ///
												+ s`wavenum'igxfr + h`wavenum'iothr if inlist(r`wavenum'mstat,1,3) & !mi(r`wavenum'itearn) ///
										& !mi(s`wavenum'itearn) & !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(s`wavenum'itpena) ///
										& !mi(r`wavenum'ipubpen) & !mi(s`wavenum'ipubpen) & !mi(r`wavenum'igxfr) & !mi(s`wavenum'igxfr) ///
										& !mi(h`wavenum'iothr)
replace h`wavenum'itot = .t if (h`wavenum'itot > 900000 & !missing(h`wavenum'itot))
label variable h`wavenum'itot "h`wavenum'itot:w`wavenum' income: total couple level income"

*wave 4 household total family income imputation flag
gen h`wavenum'iftot = .
combine_inc_flags9 r`wavenum'itifearn s`wavenum'itifearn h`wavenum'ifcap r`wavenum'itifpena s`wavenum'itifpena r`wavenum'ifpubpen s`wavenum'ifpubpen r`wavenum'ifgxfr s`wavenum'ifgxfr h`wavenum'ifothr, result(h`wavenum'iftot)
label variable h`wavenum'iftot "h`wavenum'iftot:w`wavenum' impflag: total couple level income"
label values h`wavenum'iftot incflag

*wave 4 household total family income tax flag
gen h`wavenum'ifttot = .
replace h`wavenum'ifttot = .m if h`wavenum'isemp==.m
replace h`wavenum'ifttot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'ifttot = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'ifttot "h`wavenum'ifttot:w`wavenum' taxflag: total couple level income"
label values h`wavenum'ifttot taxflag

*check 

********Consumption*********
***monthly Food Consumption In House***
*wave 4 household monthly food consumption in house
gen hh`wavenum'cfoodi = .
replace hh`wavenum'cfoodi = .m if hofood == -1
replace hh`wavenum'cfoodi = .p if askpx == 1
replace hh`wavenum'cfoodi = .d if hofood == -8
replace hh`wavenum'cfoodi = .r if hofood == -9
replace hh`wavenum'cfoodi = hofood if inrange(hofood,0,1000)
label variable hh`wavenum'cfoodi "hh`wavenum'cfoodi:w`wavenum' hhold monthly food consumption in house" 

***monthly Food Consumption Outside House***
*wave 4 household monthly food consumption outside house
gen hh`wavenum'cfoodo1m = .
replace hh`wavenum'cfoodo1m = .m if hooutf == -1
replace hh`wavenum'cfoodo1m = .p if askpx == 1
replace hh`wavenum'cfoodo1m = .d if hooutf == -8
replace hh`wavenum'cfoodo1m = .r if hooutf == -9
replace hh`wavenum'cfoodo1m = hooutf if inrange(hooutf,0,2000)
label variable hh`wavenum'cfoodo1m "hh`wavenum'cfoodo1m:w`wavenum' hhold monthly food consumption outside house"

***monthly Total Food Consumption***
*wave 4 household total food consumption
gen hh`wavenum'cfood1m = .
replace hh`wavenum'cfood1m = .m if hofood == -1 | hooutf == -1
replace hh`wavenum'cfood1m = .p if askpx == 1
replace hh`wavenum'cfood1m = .d if hofood == -8 | hooutf == -8
replace hh`wavenum'cfood1m = .r if hofood == -9 | hooutf == -9
replace hh`wavenum'cfood1m = (hh`wavenum'cfoodi * 4.34524) + hh`wavenum'cfoodo1m if inrange(hh`wavenum'cfoodi,0,1000) & inrange(hh`wavenum'cfoodo1m,0,2000)
label variable hh`wavenum'cfood1m "hh`wavenum'cfood1m:w`wavenum' hhold total monthly food consumption"

***Monthly Clothing Expenditure***
*wave 4 household monthly clothing expenditure
gen hh`wavenum'cclo1m = .
replace hh`wavenum'cclo1m = .m if inlist(hocl,-1,-3)
replace hh`wavenum'cclo1m = .p if askpx == 1
replace hh`wavenum'cclo1m = .d if hocl == -8
replace hh`wavenum'cclo1m = .r if hocl == -9
replace hh`wavenum'cclo1m = hocl if inrange(hocl,0,5000)
label variable hh`wavenum'cclo1m "hh`wavenum'cclo1m:w`wavenum' hhold monthly clothing exp"

***Monthly Leisure Activities Expenditure***
*wave 4 household monthly leisure activity expenditure
gen hh`wavenum'clei1m = .
replace hh`wavenum'clei1m = .m if inlist(holeis,-1,-3)
replace hh`wavenum'clei1m = .p if askpx == 1
replace hh`wavenum'clei1m = .d if holeis == -8
replace hh`wavenum'clei1m = .r if holeis == -9
replace hh`wavenum'clei1m = holeis if inrange(holeis,0,5500)
label variable hh`wavenum'clei1m "hh`wavenum'clei1m:w`wavenum' hhold monthly leisure exp"

***Monthly Rent Expenditure***
*wave 4 household monthly rent
gen hh`wavenum'crent = .
replace hh`wavenum'crent = .m if horent == -1 | inlist(hoperi,-1,95,96) | hotenu == -1
replace hh`wavenum'crent = .p if askpx == 1
replace hh`wavenum'crent = .d if horent == -8 | hoperi == -8 | hotenu == -8
replace hh`wavenum'crent = .r if horent == -9 | hoperi == -9 | hotenu == -9
replace hh`wavenum'crent = 0 if inlist(hotenu,1,2,5,6) | hoperi == 97 | horent == 99997
replace hh`wavenum'crent = horent if inlist(hoperi,4,5) & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*4.348125 if hoperi==1 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*2.1740625 if hoperi==2 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*1.449374 if hoperi==3 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/2 if hoperi==7 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.5 if hoperi==8 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.333 if hoperi==9 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.2 if hoperi==10 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/3 if hoperi==13 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/6 if hoperi==26 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/12 if hoperi==52 & inrange(horent,0,100000)
label variable hh`wavenum'crent "hh`wavenum'crent:w`wavenum' hhold monthly rent"

***Monthly Utility/Fuel Expenditure***
*wave 4 household monthly gas & electricity
gen nogas = 1 if inlist(hofuelga,-1,0)
gen noelec = 1 if inlist(hofuelel,-1,0)
gen nocoal = 1 if inlist(hofuelco,-1,0)
gen nopar = 1 if inlist(hofuelpa,-1,0)
gen nooil = 1 if inlist(hofueloi,-1,0)
gen nowood = 1 if inlist(hofuelwo,-1,0)
gen nooth = 1 if inlist(hofuel95,-1,0)

*gas and electric by direct debit
gen gseld = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofdm, result(gseld)
replace gseld = 0 if (nogas == 1 | noelec == 1 ) | hofsup == 2 | hoftog == 2 | inlist(hofpay,2,3,4,5,6,7,95)
replace gseld = hofdm if inrange(hofdm,0,1000)

*gas and electric by bill
gen gselb = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofbmw hofbms hofbqw hofbqs, result(gselb)
replace gselb = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,3,4,5,6,7,95) 
replace gselb = (hofbmw + hofbms)/2 if inrange(hofbmw,0,500) & inrange(hofbms,0,500)
replace gselb = (hofbqw + hofbqs)/2/3 if inrange(hofbqw,0,500) & inrange(hofbqs,0,500)

*gas and electric by prepay
gen gselp = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofpw hofps, result(gselp)
replace gselp = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,4,5,6,7,95) 
replace gselp = (hofpw + hofps)/2*4.348125 if inrange(hofpw,0,500) & inrange(hofps,0,500)

*gas and electric by other payment method
gen gselo = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofow hofos, result(gselo)
replace gselo = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,7) 
replace gselo = (hofow + hofos)/2*4.348125 if inrange(hofow,0,500) & inrange(hofos,0,500)

*gas and electric by staywarm scheme
gen gsels = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofsw hofsm hofsq, result(gsels)
replace gsels = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,4,5,6,95) 
replace gsels = hofsw*4.348125 if inrange(hofsw,0,500)
replace gsels = hofsm if inrange(hofsm,0,500)
replace gsels = hofsq/3 if inrange(hofsq,0,500)

*all gas and electric
gen gsel = .
missing_H gseld gselb gselp gselo gsels, result(gsel)
replace gsel = gseld + gselb + gselp + gselo + gsels if !mi(gseld) & !mi(gselb) & !mi(gselp) & !mi(gselo) & !mi(gsels)

drop gseld gselb gselp gselo gsels

*wave 4 household monthly gas
*gas by direct debit
gen gasd = .
missing_w2 hofuelga hoftog hogpay hogd hogdm hogdq, result(gasd)
replace gasd = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,2,3,4,5,6,95)
replace gasd = hogdm if inrange(hogdm,0,500)
replace gasd = hogdq/3 if inrange(hogdq,0,500)

*gas by bill
gen gasb = .
missing_w2 hofuelga hoftog hogpay hogbp hogbmw hogbms hogbqw hogbqs, result(gasb)
replace gasb = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,3,4,5,6,95)
replace gasb = (hogbmw + hogbms)/2 if inrange(hogbmw,0,500) & inrange(hogbms,0,500)
replace gasb = (hogbqw + hogbqs)/2/3 if inrange(hogbqw,0,500) & inrange(hogbqs,0,500)

*gas by prepay
gen gasp = .
missing_w2 hofuelga hoftog hogpay hogpw hogps, result(gasp)
replace gasp = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,4,5,6,95)
replace gasp = (hogpw + hogps)/2*4.348125 if inrange(hogpw,0,500) & inrange(hogps,0,500)

*gas by other paymenet method
gen gaso=.
missing_w2 hofuelga hoftog hogpay hogow hogos, result(gaso)
replace gaso = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,3)
replace gaso = (hogow + hogos)/2*4.348125 if inrange(hogow,0,500) & inrange(hogos,0,500)

*all gas
gen gas = .
missing_H gasd gasb gasp gaso, result(gas)
replace gas = gasd + gasb + gasp + gaso if !mi(gasd) & !mi(gasb) & !mi(gasp) & !mi(gaso)

drop gasd gasb gasp gaso

*wave 4 household monthly electricity
*electricity by direct debig
gen elecd = .
missing_w2 hofuelel hoftog hoepay hoedm hoedq, result(elecd)
replace elecd = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,2,3,4,5,6,95)
replace elecd = hoedm if inrange(hoedm,0,500)
replace elecd = hoedq/3 if inrange(hoedq,0,500)

*electricity by bill
gen elecb = .
missing_w2 hofuelel hoftog hoepay hoebmw hoebms hoebqw hoebqs, result(elecb)
replace elecb = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,3,4,5,6,95)
replace elecb = (hoebmw + hoebms)/2 if inrange(hoebmw,0,500) & inrange(hoebms,0,500)
replace elecb = (hoebqw + hoebqs)/2/3 if inrange(hoebqw,0,500) & inrange(hoebqs,0,500)

*electricity by prepay
gen elecp =.
missing_w2 hofuelel hoftog hoepay hoepw hoeps, result(elecp)
replace elecp = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,4,5,6,95)
replace elecp = (hoepw + hoeps)/2*4.348125 if inrange(hoepw,0,500) & inrange(hoeps,0,500)

*electricity by other payment method
gen eleco = .
missing_w2 hofuelel hoftog hoepay hoeow hoeos, result(eleco)
replace eleco = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,3)
replace eleco = (hoeow + hoeos)/2*4.348125 if inrange(hoeow,0,500) & inrange(hoeos,0,500)

*all electricity
gen elec = .
missing_H elecd elecb elecp eleco, result(elec)
replace elec = elecd + elecb + elecp + eleco if !mi(elecd) & !mi(elecb) & !mi(elecp) & !mi(eleco)

drop elecd elecb elecp eleco

*wave 4 household monthly coal
gen coal = .
missing_w2 hofuelco hofcw hofcs, result(coal)
replace coal = 0 if nocoal == 1 
replace coal = (hofcw + hofcs)/2*4.348125 if inrange(hofcw,0,100) & inrange(hofcs,0,100)

*wave 4 household monthly paraffin
gen para = .
missing_w2 hofuelpa hofpgw hofpgs, result(para)
replace para = 0 if nopar == 1
replace para = (hofpgw + hofpgs)/2*4.348125 if inrange(hofpgw,0,100) & inrange(hofpgs,0,100)

*wave 4 household monthly oil
gen oil = .
missing_w2 hofueloi hofoiw hofois, result(oil)
replace oil = 0 if nooil == 1
replace oil = (hofoiw + hofois)/2*4.348125 if inrange(hofoiw,0,100) & inrange(hofois,0,100)

*wave 4 household monthly wood
gen wood = .
missing_w2 hofuelwo hofww hofws, result(wood)
replace wood = 0 if nowood == 1
replace wood = (hofww + hofws)/2*4.348125 if inrange(hofww,0,100) & inrange(hofws,0,100)

*wave 4 household monthly other
gen oth = .
missing_w2 hofuel95 hofxw hofxs, result(oth)
replace oth = 0 if nooth == 1
replace oth = (hofxw + hofxs)/2*4.348125 if inrange(hofxw,0,100) & inrange(hofxs,0,100)

drop nogas noelec nocoal nopar nooil nowood nooth 

*wave 4 household utility/fuel
gen hh`wavenum'cutil = .
missing_H gsel gas elec coal para oil wood oth, result(hh`wavenum'cutil)
replace hh`wavenum'cutil = .p if askpx == 1
replace hh`wavenum'cutil = gsel + gas + elec + coal + para + oil + wood + oth if !mi(gsel) & !mi(gas) & !mi(elec) & !mi(coal) & !mi(para) & !mi(oil) & !mi(wood) & !mi(oth)
label variable hh`wavenum'cutil "hh`wavenum'cutil:w`wavenum' hhold monthly utility/fuel"

drop gsel gas elec coal para oil wood oth

***Monthly Total Consumption***
*wave 4 household monthly total consumption
gen hh`wavenum'ctot1m = .
missing_H hh`wavenum'cfood1m hh`wavenum'cclo1m hh`wavenum'clei1m hh`wavenum'crent hh`wavenum'cutil, result(hh`wavenum'ctot1m)
replace hh`wavenum'ctot1m = .p if askpx == 1
replace hh`wavenum'ctot1m = hh`wavenum'cfood1m + hh`wavenum'cclo1m + hh`wavenum'clei1m + hh`wavenum'crent + hh`wavenum'cutil if ///
                    inrange(hh`wavenum'cfood1m,0,15000) & ///
                    inrange(hh`wavenum'cclo1m,0,5000) & ///
                    inrange(hh`wavenum'clei1m,0,6000) & ///
                    inrange(hh`wavenum'crent,0,990000) & ///
                    inrange(hh`wavenum'cutil,0,1000)
label variable hh`wavenum'ctot1m "hh`wavenum'ctot1m:w`wavenum' hhold total monthly consumption"



***drop ELSA wave 4 financial derived file raw variables***
drop `income_w4_fina'

***drop ELSA wave 4 core variables***
drop `income_w4_core'

******************************************************************************************

*set wave number
local wavenum=5

***merge with wave 5 financial derived variables data***
local income_w5_fina thp_r_i oj_r_i sedraw_bu_i ///
                     thp_r_t oj_r_t sedraw_bu_t ///
                     thp_p_i oj_p_i thp_p_t oj_p_t ///
                     ppinc_r_s ppinc_r_t ppinc_p_s ppinc_p_t ///
                     spen_r_i widpen_r_i ///
                     spen_r_t widpen_r_t ///
                     spen_p_i widpen_p_i ///
                     spen_p_t widpen_p_t ///
                     farmi_bu_i netprof_bu_i homei_bu_i savei_bu_i isai_bu_i tessai_bu_i ///
                     farmi_bu_t netprof_bu_t homei_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
                     nsavi_bu_i pepi_bu_i sharesi_bu_i prbondsi_bu_i trustsi_bu_i bondsi_bu_i othsavi_bu_i ///
                     nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t ///
                     icb_r_i icb_p_i sda_r_i sda_p_i ssp_r_i ssp_p_i attall_r_i attall_p_i dla_r_i dla_p_i ///
                     icb_r_t icb_p_t sda_r_t sda_p_t ssp_r_t ssp_p_t attall_r_t attall_p_t dla_r_t dla_p_t ///
                     indinj_r_i indinj_p_i war_r_i war_p_i carers_r_i carers_p_i is_r_i is_p_i pc_r_i pc_p_i ///
                     indinj_r_t indinj_p_t war_r_t war_p_t carers_r_t carers_p_t is_r_t is_p_t pc_r_t pc_p_t ///
                     wtc_r_i wtc_p_i jsa_r_i jsa_p_i gall_r_i gall_p_i cb_r_i cb_p_i ctc_r_i ctc_p_i ///
                     wtc_r_t wtc_p_t jsa_r_t jsa_p_t gall_r_t gall_p_t cb_r_t cb_p_t ctc_r_t ctc_p_t ///
                     othpay_r_i othpay_p_i ///
                     othpay_r_t othpay_p_t  
merge 1:1 idauniq using "$wave_5_fina", keepusing(`income_w5_fina') nogen

***merge with wave 5 core data***
local income_w5_core hofood hooutf hocl holeis askpx ///
										horent hoperi hotenu hofuelga hofuelel hofuelco hofuelpa hofueloi hofuelwo hofuel95 ///
										hofbqs hofbms hofbqw hofbmw hofd ///
										hofdm hofdq hofbmw hofbqw hofpw hofps hofow hofos hofsw hofsm hofsq ///
										hogdm hogdq hogbmw hogbms hogbqw hogbqs hogpw hogps hogow hogos ///
										hoedm hoedq hoebmw hoebms hoebqw hoebqs hoepw hoeps hoeow hoeos ///
										hofcw hofcs hofpgw hofpgs hofoiw hofois hofww hofws hofxw hofxs ///
										hofsup hoftog hofpay hofb hofsp hogpay hogd hogbp hoepay
merge 1:1 idauniq using "$wave_5_core", keepusing(`income_w5_core') nogen


***Employment Earnings***
*wave 5 respondent earnings from main job after tax
gen r`wavenum'itmain = .
replace r`wavenum'itmain = .m if mi(thp_r_i) & inw`wavenum'==1 
replace r`wavenum'itmain = thp_r_i*52 if !mi(thp_r_i)

*wave 5 respondent earnings from 2nd job after tax
gen r`wavenum'itsec = .
replace r`wavenum'itsec = .m if mi(oj_r_i) & inw`wavenum'==1 
replace r`wavenum'itsec = oj_r_i*52 if !mi(oj_r_i)

**wave 5 respondent total earnings after tax
gen r`wavenum'itearn = .
replace r`wavenum'itearn = .m if r`wavenum'itmain==.m | r`wavenum'itsec==.m 
replace r`wavenum'itearn = r`wavenum'itmain + r`wavenum'itsec if !mi(r`wavenum'itmain) & !mi(r`wavenum'itsec)
label variable r`wavenum'itearn "r`wavenum'itearn:w`wavenum' income: r employment earnings (after tax)"

*wave 5 spouse earnings from main job after tax
gen s`wavenum'itmain = .
replace s`wavenum'itmain = .m if mi(thp_p_i) & inw`wavenum'==1
replace s`wavenum'itmain = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = thp_p_i*52 if !mi(thp_p_i)

*wave 5 spouse earnings from 2nd job after tax
gen s`wavenum'itsec = .
replace s`wavenum'itsec = .m if mi(oj_p_i) & inw`wavenum'==1
replace s`wavenum'itsec = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = oj_p_i*52 if !mi(oj_p_i)

**wave 5 spouse total earnings after tax
gen s`wavenum'itearn = .
replace s`wavenum'itearn = .m if s`wavenum'itmain==.m | s`wavenum'itearn==.m
replace s`wavenum'itearn = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = s`wavenum'itmain + s`wavenum'itsec if !mi(s`wavenum'itmain) & !mi(s`wavenum'itsec)
label variable s`wavenum'itearn "s`wavenum'itearn:w`wavenum' income: s employment earnings (after tax)"

***Employment Earnings Flag***
*wave 5 respondent earnings flag
gen r`wavenum'itifearn = .
combine_inc_flags2 thp_r_t oj_r_t, result(r`wavenum'itifearn)
label variable r`wavenum'itifearn "r`wavenum'itifearn:w`wavenum' impflag: r employment earnings"
label values r`wavenum'itifearn incflag

*wave 5 spouse earnings flag
gen s`wavenum'itifearn = .
combine_inc_flags2 thp_p_t oj_p_t, result(s`wavenum'itifearn)
label variable s`wavenum'itifearn "s`wavenum'itifearn:w`wavenum' impflag: s employment earnings"
label values s`wavenum'itifearn incflag

*check 

*drop intermediate variables
drop r`wavenum'itmain 
drop s`wavenum'itmain
drop r`wavenum'itsec
drop s`wavenum'itsec

***Self-Employment Earnings***
*wave 5 household self-employment earnings before tax
gen h`wavenum'isemp = .
replace h`wavenum'isemp = .m if (mi(sedraw_bu_i) | mi(netprof_bu_i)) & inw`wavenum'==1
replace h`wavenum'isemp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = (sedraw_bu_i + netprof_bu_i)*52 if !mi(sedraw_bu_i) & !mi(netprof_bu_i)
label variable h`wavenum'isemp "h`wavenum'isemp:w`wavenum' income: self-employ earnings (before tax)"

***Self-Employment Earnings Flag***
*wave 5 household self-employment earnings flag
gen h`wavenum'iifsemp = .
combine_inc_flags2 sedraw_bu_t netprof_bu_t, result(h`wavenum'iifsemp)
label variable h`wavenum'iifsemp "h`wavenum'iifsemp:w`wavenum' impflag: self-employ earnings"
label values h`wavenum'iifsemp incflag

*check

***Rental Income from Other Property***
*wave 5 household rental income from other property after tax
gen h`wavenum'itrent = .
replace h`wavenum'itrent = .m if mi(homei_bu_i) & inw`wavenum'==1
replace h`wavenum'itrent = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = homei_bu_i*52 if !mi(homei_bu_i)
label variable h`wavenum'itrent "h`wavenum'itrent:w`wavenum' income: rental income from other property (after tax)"

***Rental Income from Other Property Flag***
*wave 5 household rental income from other property flag
gen h`wavenum'itifrent = .
combine_inc_flags2 homei_bu_t, result(h`wavenum'itifrent)
label variable h`wavenum'itifrent "h`wavenum'itifrent:w`wavenum' impflag: rental income from other property"
label values h`wavenum'itifrent incflag

*check

***Interest Income from Financial Assets***
*wave 5 household interest income from financial assets after tax
gen h`wavenum'ittrest = .
replace h`wavenum'ittrest = .m if (mi(farmi_bu_i) | mi(savei_bu_i) | mi(isai_bu_i) | mi(tessai_bu_i) | ///
		mi(nsavi_bu_i) | mi(pepi_bu_i) | mi(sharesi_bu_i) | mi(prbondsi_bu_i) | mi(trustsi_bu_i) | ///
		mi(bondsi_bu_i) | mi(othsavi_bu_i)) & inw`wavenum'==1
replace h`wavenum'ittrest = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = (farmi_bu_i + savei_bu_i + isai_bu_i + tessai_bu_i + nsavi_bu_i ///
		+ pepi_bu_i + sharesi_bu_i + prbondsi_bu_i + trustsi_bu_i + bondsi_bu_i + othsavi_bu_i)*52 ///
		if !mi(farmi_bu_i) & !mi(savei_bu_i) & !mi(isai_bu_i) & !mi(tessai_bu_i) & !mi(nsavi_bu_i) ///
		 & !mi(pepi_bu_i) & !mi(sharesi_bu_i) & !mi(prbondsi_bu_i) & !mi(trustsi_bu_i) & !mi(bondsi_bu_i) & !mi(othsavi_bu_i)
label variable h`wavenum'ittrest "h`wavenum'ittrest:w`wavenum' income: interest income from financial assets (after tax)"

***Interest Income from Financial Assets Flag***
*wave 5 household interest income from financial assets flag
gen h`wavenum'ittfrest = .
combine_inc_flags2 farmi_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
		nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t, result(h`wavenum'ittfrest)
label variable h`wavenum'ittfrest "h`wavenum'ittfrest:w`wavenum' impflag: interest income from financial assets"
label values h`wavenum'ittfrest incflag

*check

***Capital Income***
*wave 5 household capital income
gen h`wavenum'icap = .
replace h`wavenum'icap = .m if h`wavenum'isemp==.m | h`wavenum'itrent==.m | h`wavenum'ittrest==.m
replace h`wavenum'icap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'icap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'icap = h`wavenum'isemp + h`wavenum'itrent + h`wavenum'ittrest ///
		 if !mi(h`wavenum'isemp) & !mi(h`wavenum'itrent) & !mi(h`wavenum'ittrest)
label variable h`wavenum'icap "h`wavenum'icap:w`wavenum' income: couple level capital income"

*wave 5 household capital income imputation flag
gen h`wavenum'ifcap = .
combine_inc_flags2 sedraw_bu_t homei_bu_t farmi_bu_t netprof_bu_t savei_bu_t isai_bu_t ///
		tessai_bu_t nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t othsavi_bu_t, result(h`wavenum'ifcap)
label variable h`wavenum'ifcap "h`wavenum'ifcap:w`wavenum' impflag: couple level capital income"
label values h`wavenum'ifcap incflag

*wave 5 household capital income tax flag
gen h`wavenum'itfcap = .
replace h`wavenum'itfcap = .m if h`wavenum'isemp == .m
replace h`wavenum'itfcap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'itfcap = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'itfcap "h`wavenum'itfcap:w`wavenum' taxflag: couple level capital income"
label values h`wavenum'itfcap taxflag

*check

***Income from Employer/Private Pension & Annuity***
*wave 5 respondent income from pension & annuity
gen r`wavenum'itpena = .
replace r`wavenum'itpena = .m if mi(ppinc_r_s) & inw`wavenum'==1 
replace r`wavenum'itpena = ppinc_r_s*52 if !mi(ppinc_r_s)
label variable r`wavenum'itpena "r`wavenum'itpena:w`wavenum' income: r pension + annuity (after tax)"

*wave 5 spouse income from pension & annuity
gen s`wavenum'itpena = .
replace s`wavenum'itpena = .m if mi(ppinc_p_s) & inw`wavenum'==1
replace s`wavenum'itpena = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = ppinc_p_s*52 if !mi(ppinc_p_s)
label variable s`wavenum'itpena "s`wavenum'itpena:w`wavenum' income: s pension + annuity (after tax)"

***Income from Employer/Private Pension & Annuity Flag***
*wave 5 respondent income from pension & annuity flag
gen r`wavenum'itifpena = .
combine_inc_flags2 ppinc_r_t, result(r`wavenum'itifpena)
label variable r`wavenum'itifpena "r`wavenum'itifpena:w`wavenum' impflag: r pension + annuity"
label values r`wavenum'itifpena incflag

*wave 5 spouse income from pension & annuity flag
gen s`wavenum'itifpena = .
combine_inc_flags2 ppinc_p_t, result(s`wavenum'itifpena)
label variable s`wavenum'itifpena "s`wavenum'itifpena:w`wavenum' impflag: s pension + annuity"
label values s`wavenum'itifpena incflag

*check 

***Individual Disability Pension***
*wave 5 respondent individual disability pension
gen r`wavenum'issdi = .
replace r`wavenum'issdi = .m if (mi(icb_r_i) | mi(sda_r_i) | mi(attall_r_i) | mi(dla_r_i) | ///
		mi(indinj_r_i) | mi(carers_r_i)) & inw`wavenum'==1 
replace r`wavenum'issdi = (icb_r_i + sda_r_i + attall_r_i + dla_r_i + indinj_r_i + carers_r_i)*52 ///
		if !mi(icb_r_i) & !mi(sda_r_i) & !mi(attall_r_i) & !mi(dla_r_i) & !mi(indinj_r_i) & !mi(carers_r_i)
replace r`wavenum'issdi = .t if (r`wavenum'issdi > 100000 & !missing(r`wavenum'issdi))
label variable r`wavenum'issdi "r`wavenum'issdi:w`wavenum' income: r public disability pension"

*wave 5 spouse individual disability pension
gen s`wavenum'issdi = .
replace s`wavenum'issdi = .m if (mi(icb_p_i) | mi(sda_p_i) | mi(attall_p_i) | mi(dla_p_i) | ///
		mi(indinj_p_i) | mi(carers_p_i)) & inw`wavenum'==1 
replace s`wavenum'issdi = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = (icb_p_i + sda_p_i + attall_p_i + dla_p_i + indinj_p_i + carers_p_i)*52 ///
		if !mi(icb_p_i) & !mi(sda_p_i) & !mi(attall_p_i) & !mi(dla_p_i) & !mi(indinj_p_i) & !mi(carers_p_i)
replace s`wavenum'issdi = .t if (s`wavenum'issdi > 100000 & !missing(s`wavenum'issdi))
label variable s`wavenum'issdi "s`wavenum'issdi:w`wavenum' income: s public disability pension"

***Individual Disability Pension Flag***
*wave 5 respondent individual disability pension flag
gen r`wavenum'ifssdi = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t, result(r`wavenum'ifssdi)
label variable r`wavenum'ifssdi "r`wavenum'ifssdi:w`wavenum' impflag: r public disability pension"
label values r`wavenum'ifssdi incflag

*wave 5 spouse individual disability pension flag
gen s`wavenum'ifssdi = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t, result(s`wavenum'ifssdi)
label variable s`wavenum'ifssdi "s`wavenum'ifssdi:w`wavenum' impflag: s public disability pension"
label values s`wavenum'ifssdi incflag

*check

***Individual Income from Public Pension without Disability***
*wave 5 respondent income from public pension without disability
gen r`wavenum'isret = .
replace r`wavenum'isret = .m if (mi(spen_r_i) | mi(widpen_r_i)) & inw`wavenum'==1 
replace r`wavenum'isret = (spen_r_i + widpen_r_i)*52 if !mi(spen_r_i) & !mi(widpen_r_i)
replace r`wavenum'isret = .t if (r`wavenum'isret > 100000 & !missing(r`wavenum'isret))
label variable r`wavenum'isret "r`wavenum'isret:w`wavenum' income: r public old-age pension"

*wave 5 spouse income from public pension without disability
gen s`wavenum'isret = .
replace s`wavenum'isret = .m if (mi(spen_p_i) | mi(widpen_p_i)) & inw`wavenum'==1
replace s`wavenum'isret = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'isret = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'isret = (spen_p_i + widpen_p_i)*52 if !mi(spen_p_i) & !mi(widpen_p_i)
replace s`wavenum'isret = .t if (s`wavenum'isret > 100000 & !missing(s`wavenum'isret))
label variable s`wavenum'isret "s`wavenum'isret:w`wavenum' income: s public old-age pension"

***Individual Income from Public Pension without Disability Flag***
*wave 5 respondent income public pension without disability flag
gen r`wavenum'ifsret = .
combine_inc_flags2 spen_r_t widpen_r_t, result(r`wavenum'ifsret)
label variable r`wavenum'ifsret "r`wavenum'ifsret:w`wavenum' incflag: r public old-age pension"
label values r`wavenum'ifsret incflag

*wave 5 spouse income from public pension without disability flag
gen s`wavenum'ifsret = .
combine_inc_flags2 spen_p_t widpen_p_t, result(s`wavenum'ifsret)
label variable s`wavenum'ifsret "s`wavenum'ifsret:w`wavenum' incflag: s public old-age pension"
label values s`wavenum'ifsret incflag

*check 


***Main Public Pension***
*wave 5 respondent main public pension
gen r`wavenum'ipubpen = .
replace r`wavenum'ipubpen = .m if r`wavenum'issdi==.m | r`wavenum'isret==.m 
replace r`wavenum'ipubpen = .t if r`wavenum'issdi==.t | r`wavenum'isret==.t
replace r`wavenum'ipubpen = r`wavenum'issdi + r`wavenum'isret if !mi(r`wavenum'issdi) & !mi(r`wavenum'isret)
label variable r`wavenum'ipubpen "r`wavenum'ipubpen:w`wavenum' income: r public pensions"

*wave 5 spouse main public pension
gen s`wavenum'ipubpen = .
replace s`wavenum'ipubpen = .m if s`wavenum'issdi==.m | s`wavenum'isret==.m
replace s`wavenum'ipubpen = .t if s`wavenum'issdi==.t | s`wavenum'isret==.t
replace s`wavenum'ipubpen = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = s`wavenum'issdi + s`wavenum'isret if !mi(s`wavenum'issdi) & !mi(s`wavenum'isret)
label variable s`wavenum'ipubpen "s`wavenum'ipubpen:w`wavenum' income: s public pensions"

***Main Public Pension Flag***
*wave 5 respondent main public pension flag
gen r`wavenum'ifpubpen = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t spen_r_t widpen_r_t, result(r`wavenum'ifpubpen)
label variable r`wavenum'ifpubpen "r`wavenum'ifpubpen:w`wavenum' impflag: r public pensions"
label values r`wavenum'ifpubpen incflag

*wave 5 spouse main public pension flag
gen s`wavenum'ifpubpen = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t spen_p_t widpen_p_t, result(s`wavenum'ifpubpen)
label variable s`wavenum'ifpubpen "s`wavenum'ifpubpen:w`wavenum' impflag: s public pensions"
label values s`wavenum'ifpubpen incflag

***War Pension***
*wave 5 respondent war pension
gen r`wavenum'ivet = .
replace r`wavenum'ivet = .m if mi(war_r_i) & inw`wavenum'==1 
replace r`wavenum'ivet = war_r_i*52 if !mi(war_r_i)
label variable r`wavenum'ivet "r`wavenum'ivet:w`wavenum' income: r war pension"

*wave 5 spouse war pension
gen s`wavenum'ivet = .
replace s`wavenum'ivet = .m if mi(war_p_i) & inw`wavenum'==1
replace s`wavenum'ivet = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = war_p_i*52 if !mi(war_p_i)
label variable s`wavenum'ivet "s`wavenum'ivet:w`wavenum' income: s war pension"

***War Pension Flag***
*wave 5 respondent war pension flag
gen r`wavenum'ifvet = .
combine_inc_flags2 war_r_t, result(r`wavenum'ifvet)
label variable r`wavenum'ifvet "r`wavenum'ifvet:w`wavenum' impflag: r war pension"
label values r`wavenum'ifvet incflag

*wave 5 spouse war pension flag
gen s`wavenum'ifvet = .
combine_inc_flags2 war_p_t, result(r`wavenum'ifvet)
label variable s`wavenum'ifvet "s`wavenum'ifvet:w`wavenum' impflag: s war pension"
label values s`wavenum'ifvet incflag

*check

***Income Support***
*wave 5 respondent income support
gen r`wavenum'iwelf = .
replace r`wavenum'iwelf = .m if (mi(is_r_i) | mi(wtc_r_i) | mi(gall_r_i) | mi(cb_r_i) | ///
		mi(ctc_r_i) | mi(pc_r_i)) & inw`wavenum'==1 
replace r`wavenum'iwelf = (is_r_i + wtc_r_i + gall_r_i + cb_r_i + ctc_r_i + pc_r_i)*52 ///
		if !mi(is_r_i) & !mi(wtc_r_i) & !mi(gall_r_i) & !mi(cb_r_i) & !mi(ctc_r_i) & !mi(pc_r_i)
replace r`wavenum'iwelf = .t if (r`wavenum'iwelf > 100000 & !missing(r`wavenum'iwelf))
label variable r`wavenum'iwelf "r`wavenum'iwelf:w`wavenum' income: r income support"

*wave 5 spouse income support
gen s`wavenum'iwelf = .
replace s`wavenum'iwelf = .m if (mi(is_p_i) | mi(wtc_p_i) | mi(gall_p_i) | mi(cb_p_i) | ///
		mi(ctc_p_i) | mi(pc_p_i)) & inw`wavenum'==1 
replace s`wavenum'iwelf = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = (is_p_i + wtc_p_i + gall_p_i + cb_p_i + ctc_p_i + pc_p_i)*52 ///
		if !mi(is_p_i) & !mi(wtc_p_i) & !mi(gall_p_i) & !mi(cb_p_i) & !mi(ctc_p_i) & !mi(pc_p_i)
replace s`wavenum'iwelf = .t if (s`wavenum'iwelf > 100000 & !missing(s`wavenum'iwelf))
label variable s`wavenum'iwelf "s`wavenum'iwelf:w`wavenum' income: s income support"

***Income Support Flag***
*wave 5 respondent income support flag
gen r`wavenum'ifwelf = .
combine_inc_flags2 is_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifwelf)
label variable r`wavenum'ifwelf "r`wavenum'ifwelf:w`wavenum' impflag: r income support"
label values r`wavenum'ifwelf incflag

*wave 5 spouse income support flag
gen s`wavenum'ifwelf = .
combine_inc_flags2 is_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifwelf)
label variable s`wavenum'ifwelf "s`wavenum'ifwelf:w`wavenum' impflag: s income support"
label values s`wavenum'ifwelf incflag

*check

***Worker's Comp/Short-Term Disability***
*wave 5 respondent worker's comp
gen r`wavenum'iwcmp = .
replace r`wavenum'iwcmp = .m if mi(ssp_r_i) & inw`wavenum'==1 
replace r`wavenum'iwcmp = ssp_r_i*52 if !mi(ssp_r_i)
label variable r`wavenum'iwcmp "r`wavenum'iwcmp:w`wavenum' income: r workers comp"

*wave 5 spouse worker's comp
gen s`wavenum'iwcmp = .
replace s`wavenum'iwcmp = .m if mi(ssp_p_i) & inw`wavenum'==1
replace s`wavenum'iwcmp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = ssp_p_i*52 if !mi(ssp_p_i)
label variable s`wavenum'iwcmp "s`wavenum'iwcmp:w`wavenum' income: s workers comp"

***Worker's Comp/Short-Term Disability Flag***
*wave 5 respondent worker's comp flag
gen r`wavenum'ifwcmp = .
combine_inc_flags2 ssp_r_t, result(r`wavenum'ifwcmp)
label variable r`wavenum'ifwcmp "r`wavenum'ifwcmp:w`wavenum' impflag: r workers comp"
label values r`wavenum'ifwcmp incflag

*wave 5 spouse worker's comp flag
gen s`wavenum'ifwcmp = .
combine_inc_flags2 ssp_p_t, result(s`wavenum'ifwcmp)
label variable s`wavenum'ifwcmp "s`wavenum'ifwcmp:w`wavenum' impflag: s workers comp"
label values s`wavenum'ifwcmp incflag

*check

***Unemployment Transfers***
*wave 5 respondent unemployment transfers
gen r`wavenum'iunem = .
replace r`wavenum'iunem = .m if mi(jsa_r_i) & inw`wavenum'==1
replace r`wavenum'iunem = jsa_r_i*52  if !mi(jsa_r_i)
replace r`wavenum'iunem = .t if (r`wavenum'iunem > 10000 & !missing(r`wavenum'iunem))
label variable r`wavenum'iunem "r`wavenum'iunem:w`wavenum' income: r unemployment"

*wave 5 spouse unemployment transfers
gen s`wavenum'iunem = .
replace s`wavenum'iunem = .m if mi(jsa_p_i) & inw`wavenum'==1
replace s`wavenum'iunem = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = jsa_p_i*52  if !mi(jsa_p_i)
replace s`wavenum'iunem = .t if (s`wavenum'iunem > 10000 & !missing(s`wavenum'iunem))
label variable s`wavenum'iunem "s`wavenum'iunem:w`wavenum' income: s unemployment"

***Unemployment Transfers Flag***
*wave 5 respondent unemployment transfers flag
gen r`wavenum'ifunem = .
combine_inc_flags2 jsa_r_t, result(r`wavenum'ifunem)
label variable r`wavenum'ifunem "r`wavenum'ifunem:w`wavenum' impflag: r unemployment"
label values r`wavenum'ifunem incflag

*wave 5 spouse unemployment transfers flag
gen s`wavenum'ifunem = .
combine_inc_flags2 jsa_p_t, result(s`wavenum'ifunem)
label variable s`wavenum'ifunem "s`wavenum'ifunem:w`wavenum' impflag: s unemployment"
label values s`wavenum'ifunem incflag

*check

***Other Government Transfers***
*wave 5 respondent other government transfers
gen r`wavenum'igxfr = .
replace r`wavenum'igxfr = .m if r`wavenum'ivet==.m | r`wavenum'iwelf==.m | r`wavenum'iwcmp==.m | r`wavenum'iunem==.m
replace r`wavenum'igxfr = .t if r`wavenum'ivet==.t | r`wavenum'iwelf==.t | r`wavenum'iwcmp==.t | r`wavenum'iunem==.t
replace r`wavenum'igxfr = r`wavenum'ivet + r`wavenum'iwelf + r`wavenum'iwcmp + r`wavenum'iunem ///
		if !mi(r`wavenum'ivet) & !mi(r`wavenum'iwelf) & !mi(r`wavenum'iwcmp) & !mi(r`wavenum'iunem)
label variable r`wavenum'igxfr "r`wavenum'igxfr:w`wavenum' income: r other gov transfers"

*wave 5 spouse other government transfers
gen s`wavenum'igxfr = .
replace s`wavenum'igxfr = .m if s`wavenum'ivet==.m | s`wavenum'iwelf==.m | s`wavenum'iwcmp==.m | s`wavenum'iunem==.m
replace s`wavenum'igxfr = .t if s`wavenum'ivet==.t | s`wavenum'iwelf==.t | s`wavenum'iwcmp==.t | s`wavenum'iunem==.t
replace s`wavenum'igxfr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = s`wavenum'ivet + s`wavenum'iwelf + s`wavenum'iwcmp + s`wavenum'iunem ///
		if !mi(s`wavenum'ivet) & !mi(s`wavenum'iwelf) & !mi(s`wavenum'iwcmp) & !mi(s`wavenum'iunem)
label variable s`wavenum'igxfr "s`wavenum'igxfr:w`wavenum' income: s other gov transfers"

***Other Government Transfers Flag***
*wave 5 respondent other government transfers flag
gen r`wavenum'ifgxfr = .
combine_inc_flags2 war_r_t is_r_t ssp_r_t jsa_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifgxfr)
label variable r`wavenum'ifgxfr "r`wavenum'ifgxfr:w`wavenum' impflag: r other gov transfers"
label values r`wavenum'ifgxfr incflag

*wave 5 spouse other government transfers flag
gen s`wavenum'ifgxfr = .
combine_inc_flags2 war_p_t is_p_t ssp_p_t jsa_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifgxfr)
label variable s`wavenum'ifgxfr "s`wavenum'ifgxfr:w`wavenum' impflag: s other gov transfers"
label values s`wavenum'ifgxfr incflag

drop r`wavenum'ivet r`wavenum'iwelf r`wavenum'iwcmp r`wavenum'iunem 
drop s`wavenum'ivet s`wavenum'iwelf s`wavenum'iwcmp s`wavenum'iunem

drop r`wavenum'ifvet r`wavenum'ifwelf r`wavenum'ifwcmp r`wavenum'ifunem 
drop s`wavenum'ifvet s`wavenum'ifwelf s`wavenum'ifwcmp s`wavenum'ifunem

*check

***Other Household Income***
*wave 5 other household income
gen h`wavenum'iothr = .
replace h`wavenum'iothr = .m if (mi(othpay_r_i) | mi(othpay_p_i)) & inw`wavenum'==1
replace h`wavenum'iothr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = othpay_r_i*52 if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(othpay_r_i)
replace h`wavenum'iothr = (othpay_r_i + othpay_p_i)*52 if inlist(r`wavenum'mstat,1,3) & !mi(othpay_r_i) & !mi(othpay_p_i)
replace h`wavenum'iothr = .t if (h`wavenum'iothr > 100000 & !missing(h`wavenum'iothr))
label variable h`wavenum'iothr "h`wavenum'iothr:w`wavenum' income: other income"

***Other Household Income Flag***
*wave 5 other household income flag
gen h`wavenum'ifothr = .
combine_inc_flags2 othpay_r_t othpay_p_t, result(h`wavenum'ifothr)
label variable h`wavenum'ifothr "h`wavenum'ifothr:w`wavenum' impflag: other income"
label values h`wavenum'ifothr incflag

*check

***Total Family Income***
*wave 5 household total family income
gen h`wavenum'itot = .
replace h`wavenum'itot = .m if r`wavenum'itearn==.m | s`wavenum'itearn==.m | h`wavenum'icap==.m | ///
		r`wavenum'itpena==.m | s`wavenum'itpena==.m | r`wavenum'ipubpen==.m | s`wavenum'ipubpen==.m | ///
		r`wavenum'igxfr==.m | s`wavenum'igxfr==.m | h`wavenum'iothr==.m
replace h`wavenum'itot = .t if r`wavenum'itearn==.t | s`wavenum'itearn==.t | h`wavenum'icap==.t | ///
		r`wavenum'itpena==.t | s`wavenum'itpena==.t | r`wavenum'ipubpen==.t | s`wavenum'ipubpen==.t | ///
		r`wavenum'igxfr==.t | s`wavenum'igxfr==.t | h`wavenum'iothr==.t
replace h`wavenum'itot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itot = r`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena + r`wavenum'ipubpen ///
												+ r`wavenum'igxfr + h`wavenum'iothr if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(r`wavenum'itearn) ///
										& !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(r`wavenum'ipubpen) & !mi(r`wavenum'igxfr) ///
									  & !mi(h`wavenum'iothr)
replace h`wavenum'itot = r`wavenum'itearn + s`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena /// 
												+ s`wavenum'itpena + r`wavenum'ipubpen + s`wavenum'ipubpen + r`wavenum'igxfr ///
												+ s`wavenum'igxfr + h`wavenum'iothr if inlist(r`wavenum'mstat,1,3) & !mi(r`wavenum'itearn) ///
										& !mi(s`wavenum'itearn) & !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(s`wavenum'itpena) ///
										& !mi(r`wavenum'ipubpen) & !mi(s`wavenum'ipubpen) & !mi(r`wavenum'igxfr) & !mi(s`wavenum'igxfr) ///
										& !mi(h`wavenum'iothr)
replace h`wavenum'itot = .t if (h`wavenum'itot > 900000 & !missing(h`wavenum'itot))
label variable h`wavenum'itot "h`wavenum'itot:w`wavenum' income: total couple level income"

*wave 5 household total family income imputation flag
gen h`wavenum'iftot = .
combine_inc_flags9 r`wavenum'itifearn s`wavenum'itifearn h`wavenum'ifcap r`wavenum'itifpena s`wavenum'itifpena r`wavenum'ifpubpen s`wavenum'ifpubpen r`wavenum'ifgxfr s`wavenum'ifgxfr h`wavenum'ifothr, result(h`wavenum'iftot)
label variable h`wavenum'iftot "h`wavenum'iftot:w`wavenum' impflag: total couple level income"
label values h`wavenum'iftot incflag

*wave 5 household total family income tax flag
gen h`wavenum'ifttot = .
replace h`wavenum'ifttot = .m if h`wavenum'isemp==.m
replace h`wavenum'ifttot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'ifttot = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'ifttot "h`wavenum'ifttot:w`wavenum' taxflag: total couple level income"
label values h`wavenum'ifttot taxflag

*check 

********Consumption*********
***monthly Food Consumption In House***
*wave 5 household monthly food consumption in house
gen hh`wavenum'cfoodi = .
replace hh`wavenum'cfoodi = .m if hofood == -1
replace hh`wavenum'cfoodi = .p if askpx == 1
replace hh`wavenum'cfoodi = .d if hofood == -8
replace hh`wavenum'cfoodi = .r if hofood == -9
replace hh`wavenum'cfoodi = hofood if inrange(hofood,0,1000)
label variable hh`wavenum'cfoodi "hh`wavenum'cfoodi:w`wavenum' hhold monthly food consumption in house" 

***monthly Food Consumption Outside House***
*wave 5 household monthly food consumption outside house
gen hh`wavenum'cfoodo1m = .
replace hh`wavenum'cfoodo1m = .m if hooutf == -1
replace hh`wavenum'cfoodo1m = .p if askpx == 1
replace hh`wavenum'cfoodo1m = .d if hooutf == -8
replace hh`wavenum'cfoodo1m = .r if hooutf == -9
replace hh`wavenum'cfoodo1m = hooutf if inrange(hooutf,0,2000)
label variable hh`wavenum'cfoodo1m "hh`wavenum'cfoodo1m:w`wavenum' hhold monthly food consumption outside house"

***monthly Total Food Consumption***
*wave 5 household total food consumption
gen hh`wavenum'cfood1m = .
replace hh`wavenum'cfood1m = .m if hofood == -1 | hooutf == -1
replace hh`wavenum'cfood1m = .p if askpx == 1
replace hh`wavenum'cfood1m = .d if hofood == -8 | hooutf == -8
replace hh`wavenum'cfood1m = .r if hofood == -9 | hooutf == -9
replace hh`wavenum'cfood1m = (hh`wavenum'cfoodi * 4.34524) + hh`wavenum'cfoodo1m if inrange(hh`wavenum'cfoodi,0,1000) & inrange(hh`wavenum'cfoodo1m,0,2000)
label variable hh`wavenum'cfood1m "hh`wavenum'cfood1m:w`wavenum' hhold total monthly food consumption"

***Monthly Clothing Expenditure***
*wave 5 household monthly clothing expenditure
gen hh`wavenum'cclo1m = .
replace hh`wavenum'cclo1m = .m if inlist(hocl,-1,-3)
replace hh`wavenum'cclo1m = .p if askpx == 1
replace hh`wavenum'cclo1m = .d if hocl == -8
replace hh`wavenum'cclo1m = .r if hocl == -9
replace hh`wavenum'cclo1m = hocl if inrange(hocl,0,5000)
label variable hh`wavenum'cclo1m "hh`wavenum'cclo1m:w`wavenum' hhold monthly clothing exp"

***Monthly Leisure Activities Expenditure***
*wave 5 household monthly leisure activity expenditure
gen hh`wavenum'clei1m = .
replace hh`wavenum'clei1m = .m if inlist(holeis,-1,-3)
replace hh`wavenum'clei1m = .p if askpx == 1
replace hh`wavenum'clei1m = .d if holeis == -8
replace hh`wavenum'clei1m = .r if holeis == -9
replace hh`wavenum'clei1m = holeis if inrange(holeis,0,5500)
label variable hh`wavenum'clei1m "hh`wavenum'clei1m:w`wavenum' hhold monthly leisure exp"

***Monthly Rent Expenditure***
*wave 5 household monthly rent
gen hh`wavenum'crent = .
replace hh`wavenum'crent = .m if horent == -1 | inlist(hoperi,-1,95,96) | hotenu == -1
replace hh`wavenum'crent = .p if askpx == 1
replace hh`wavenum'crent = .d if horent == -8 | hoperi == -8 | hotenu == -8
replace hh`wavenum'crent = .r if horent == -9 | hoperi == -9 | hotenu == -9
replace hh`wavenum'crent = 0 if inlist(hotenu,1,2,5,6) | hoperi == 97 | horent == 99997
replace hh`wavenum'crent = horent if inlist(hoperi,4,5) & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*4.348125 if hoperi==1 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*2.1740625 if hoperi==2 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*1.449374 if hoperi==3 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/2 if hoperi==7 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.5 if hoperi==8 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.333 if hoperi==9 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.2 if hoperi==10 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/3 if hoperi==13 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/6 if hoperi==26 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/12 if hoperi==52 & inrange(horent,0,100000)
label variable hh`wavenum'crent "hh`wavenum'crent:w`wavenum' hhold monthly rent"

***Monthly Utility/Fuel Expenditure***
*wave 5 household monthly gas & electricity
gen nogas = 1 if inlist(hofuelga,-1,0)
gen noelec = 1 if inlist(hofuelel,-1,0)
gen nocoal = 1 if inlist(hofuelco,-1,0)
gen nopar = 1 if inlist(hofuelpa,-1,0)
gen nooil = 1 if inlist(hofueloi,-1,0)
gen nowood = 1 if inlist(hofuelwo,-1,0)
gen nooth = 1 if inlist(hofuel95,-1,0)

*gas and electric by direct debit
gen gseld = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofdm, result(gseld)
replace gseld = 0 if (nogas == 1 | noelec == 1 ) | hofsup == 2 | hoftog == 2 | inlist(hofpay,2,3,4,5,6,7,95)
replace gseld = hofdm if inrange(hofdm,0,1000)

*gas and electric by bill
gen gselb = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofbmw hofbqw hofbms hofbqs, result(gselb)
replace gselb = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,3,4,5,6,7,95) 
replace gselb = (hofbmw + hofbms)/2 if inrange(hofbmw,0,500) & inrange(hofbms,0,500)
replace gselb = (hofbqw + hofbqs)/2/3 if inrange(hofbqw,0,500) & inrange(hofbqs,0,500)

*gas and electric by prepay
gen gselp = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofpw hofps, result(gselp)
replace gselp = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,4,5,6,7,95) 
replace gselp = (hofpw + hofps)/2*4.348125 if inrange(hofpw,0,500) & inrange(hofps,0,500)

*gas and electric by other payment method
gen gselo = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofow hofos, result(gselo)
replace gselo = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,7) 
replace gselo = (hofow + hofos)/2*4.348125 if inrange(hofow,0,500) & inrange(hofos,0,500)

*gas and electric by staywarm scheme
gen gsels = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofsw hofsm hofsq, result(gsels)
replace gsels = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,4,5,6,95) 
replace gsels = hofsw*4.348125 if inrange(hofsw,0,500)
replace gsels = hofsm if inrange(hofsm,0,500)
replace gsels = hofsq/3 if inrange(hofsq,0,500)

*all gas and electric
gen gsel = .
missing_H gseld gselb gselp gselo gsels, result(gsel)
replace gsel = gseld + gselb + gselp + gselo + gsels if !mi(gseld) & !mi(gselb) & !mi(gselp) & !mi(gselo) & !mi(gsels)

drop gseld gselb gselp gselo gsels

*wave 5 household monthly gas
*gas by direct debit
gen gasd = .
missing_w2 hofuelga hoftog hogpay hogd hogdm hogdq, result(gasd)
replace gasd = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,2,3,4,5,6,95)
replace gasd = hogdm if inrange(hogdm,0,500)
replace gasd = hogdq/3 if inrange(hogdq,0,500)

*gas by bill
gen gasb = .
missing_w2 hofuelga hoftog hogpay hogbp hogbmw hogbms hogbqw hogbqs, result(gasb)
replace gasb = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,3,4,5,6,95)
replace gasb = (hogbmw + hogbms)/2 if inrange(hogbmw,0,500) & inrange(hogbms,0,500)
replace gasb = (hogbqw + hogbqs)/2/3 if inrange(hogbqw,0,500) & inrange(hogbqs,0,500)

*gas by prepay
gen gasp = .
missing_w2 hofuelga hoftog hogpay hogpw hogps, result(gasp)
replace gasp = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,4,5,6,95)
replace gasp = (hogpw + hogps)/2*4.348125 if inrange(hogpw,0,500) & inrange(hogps,0,500)

*gas by other paymenet method
gen gaso=.
missing_w2 hofuelga hoftog hogpay hogow hogos, result(gaso)
replace gaso = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,3)
replace gaso = (hogow + hogos)/2*4.348125 if inrange(hogow,0,500) & inrange(hogos,0,500)

*all gas
gen gas = .
missing_H gasd gasb gasp gaso, result(gas)
replace gas = gasd + gasb + gasp + gaso if !mi(gasd) & !mi(gasb) & !mi(gasp) & !mi(gaso)

drop gasd gasb gasp gaso

*wave 5 household monthly electricity
*electricity by direct debig
gen elecd = .
missing_w2 hofuelel hoftog hoepay hoedm hoedq, result(elecd)
replace elecd = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,2,3,4,5,6,95)
replace elecd = hoedm if inrange(hoedm,0,500)
replace elecd = hoedq/3 if inrange(hoedq,0,500)

*electricity by bill
gen elecb = .
missing_w2 hofuelel hoftog hoepay hoebmw hoebms hoebqw hoebqs, result(elecb)
replace elecb = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,3,4,5,6,95)
replace elecb = (hoebmw + hoebms)/2 if inrange(hoebmw,0,500) & inrange(hoebms,0,500)
replace elecb = (hoebqw + hoebqs)/2/3 if inrange(hoebqw,0,500) & inrange(hoebqs,0,500)

*electricity by prepay
gen elecp =.
missing_w2 hofuelel hoftog hoepay hoepw hoeps, result(elecp)
replace elecp = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,4,5,6,95)
replace elecp = (hoepw + hoeps)/2*4.348125 if inrange(hoepw,0,500) & inrange(hoeps,0,500)

*electricity by other payment method
gen eleco = .
missing_w2 hofuelel hoftog hoepay hoeow hoeos, result(eleco)
replace eleco = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,3)
replace eleco = (hoeow + hoeos)/2*4.348125 if inrange(hoeow,0,500) & inrange(hoeos,0,500)

*all electricity
gen elec = .
missing_H elecd elecb elecp eleco, result(elec)
replace elec = elecd + elecb + elecp + eleco if !mi(elecd) & !mi(elecb) & !mi(elecp) & !mi(eleco)

drop elecd elecb elecp eleco

*wave 5 household monthly coal
gen coal = .
missing_w2 hofuelco hofcw hofcs, result(coal)
replace coal = 0 if nocoal == 1 
replace coal = (hofcw + hofcs)/2*4.348125 if inrange(hofcw,0,100) & inrange(hofcs,0,100)

*wave 5 household monthly paraffin
gen para = .
missing_w2 hofuelpa hofpgw hofpgs, result(para)
replace para = 0 if nopar == 1
replace para = (hofpgw + hofpgs)/2*4.348125 if inrange(hofpgw,0,100) & inrange(hofpgs,0,100)

*wave 5 household monthly oil
gen oil = .
missing_w2 hofueloi hofoiw hofois, result(oil)
replace oil = 0 if nooil == 1
replace oil = (hofoiw + hofois)/2*4.348125 if inrange(hofoiw,0,100) & inrange(hofois,0,100)

*wave 5 household monthly wood
gen wood = .
missing_w2 hofuelwo hofww hofws, result(wood)
replace wood = 0 if nowood == 1
replace wood = (hofww + hofws)/2*4.348125 if inrange(hofww,0,100) & inrange(hofws,0,100)

*wave 5 household monthly other
gen oth = .
missing_w2 hofuel95 hofxs hofxw, result(oth)
replace oth = 0 if nooth == 1
replace oth = (hofxw + hofxs)/2*4.348125 if inrange(hofxw,0,100) & inrange(hofxs,0,100)

drop nogas noelec nocoal nopar nooil nowood nooth 

*wave 5 household utility/fuel
gen hh`wavenum'cutil = .
missing_H gsel gas elec coal para oil wood oth, result(hh`wavenum'cutil)
replace hh`wavenum'cutil = .p if askpx == 1
replace hh`wavenum'cutil = gsel + gas + elec + coal + para + oil + wood + oth if !mi(gsel) & !mi(gas) & !mi(elec) & !mi(coal) & !mi(para) & !mi(oil) & !mi(wood) & !mi(oth)
label variable hh`wavenum'cutil "hh`wavenum'cutil:w`wavenum' hhold monthly utility/fuel"

drop gsel gas elec coal para oil wood oth

***Monthly Total Consumption***
*wave 5 household monthly total consumption
gen hh`wavenum'ctot1m = .
missing_H hh`wavenum'cfood1m hh`wavenum'cclo1m hh`wavenum'clei1m hh`wavenum'crent hh`wavenum'cutil, result(hh`wavenum'ctot1m)
replace hh`wavenum'ctot1m = .p if askpx == 1
replace hh`wavenum'ctot1m = hh`wavenum'cfood1m + hh`wavenum'cclo1m + hh`wavenum'clei1m + hh`wavenum'crent + hh`wavenum'cutil if ///
                    inrange(hh`wavenum'cfood1m,0,15000) & ///
                    inrange(hh`wavenum'cclo1m,0,5000) & ///
                    inrange(hh`wavenum'clei1m,0,6000) & ///
                    inrange(hh`wavenum'crent,0,990000) & ///
                    inrange(hh`wavenum'cutil,0,1000)
label variable hh`wavenum'ctot1m "hh`wavenum'ctot1m:w`wavenum' hhold total monthly consumption"


***drop ELSA wave 5 financial derived file raw variables***
drop `income_w5_fina'

***drop ELSA wave 5 core variables***
drop `income_w5_core'

******************************************************************************************

	

*set wave number
local wavenum=6

***merge with wave 6 financial derived variables data***
local income_w6_fina thp_r_i oj_r_i sedraw_bu_i ///
                     thp_r_t oj_r_t sedraw_bu_t ///
                     thp_p_i oj_p_i thp_p_t oj_p_t ///
                     ppinc_r_s ppinc_r_t ppinc_p_s ppinc_p_t ///
                     spen_r_i widpen_r_i ///
                     spen_r_t widpen_r_t ///
                     spen_p_i widpen_p_i ///
                     spen_p_t widpen_p_t ///
                     farmi_bu_i netprof_bu_i homei_bu_i savei_bu_i isai_bu_i tessai_bu_i ///
                     farmi_bu_t netprof_bu_t homei_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
                     nsavi_bu_i pepi_bu_i sharesi_bu_i prbondsi_bu_i trustsi_bu_i bondsi_bu_i othsavi_bu_i ///
                     nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t ///
                     icb_r_i icb_p_i sda_r_i sda_p_i ssp_r_i ssp_p_i attall_r_i attall_p_i dla_r_i dla_p_i ///
                     icb_r_t icb_p_t sda_r_t sda_p_t ssp_r_t ssp_p_t attall_r_t attall_p_t dla_r_t dla_p_t ///
                     indinj_r_i indinj_p_i war_r_i war_p_i carers_r_i carers_p_i is_r_i is_p_i pc_r_i pc_p_i ///
                     indinj_r_t indinj_p_t war_r_t war_p_t carers_r_t carers_p_t is_r_t is_p_t pc_r_t pc_p_t ///
                     wtc_r_i wtc_p_i jsa_r_i jsa_p_i gall_r_i gall_p_i cb_r_i cb_p_i ctc_r_i ctc_p_i ///
                     wtc_r_t wtc_p_t jsa_r_t jsa_p_t gall_r_t gall_p_t cb_r_t cb_p_t ctc_r_t ctc_p_t ///
                     othpay_r_i othpay_p_i ///
                     othpay_r_t othpay_p_t               
merge 1:1 idauniq using "$wave_6_fina", keepusing(`income_w6_fina') nogen

***merge with wave 6 core data***
local income_w6_core HoFood HoOutf HoCl HoLeis askpx ///
										HoRent HoPeri HoTenu hofuelga hofuelel hofuelco hofuelpa hofueloi hofuelwo hofuel95 ///
										HoFBqs HoFBms HoFBqw HoFBmw HoFD ///
										HoFDm HoFDq HoFBmw HoFBqw HoFPw HoFPs HoFOw HoFOs HoFSw HoFSm HoFSq ///
										HoGDm HoGDq HoGBmw HoGBms HoGBqw HoGBqs HoGPw HoGPs HoGOw HoGOs ///
										HoEDm HoEDq HoEBmw HoEBms HoEBqw HoEBqs HoEPw HoEPs HoEOw HoEOs ///
										HoFCw HoFCs HoFPGw HoFPGs HoFOIw HoFOIs HoFWw HoFWs HoFXw HoFXs ///
										HoFSup HoFTog HoFPay HoFB HoFSp HoGPay HoGD HoGBp HoEPay
merge 1:1 idauniq using "$wave_6_core", keepusing(`income_w6_core') nogen


***Employment Earnings***
*wave 6 respondent earnings from main job after tax
gen r`wavenum'itmain = .
replace r`wavenum'itmain = .m if mi(thp_r_i) & inw`wavenum'==1 
replace r`wavenum'itmain = thp_r_i*52 if !mi(thp_r_i)

*wave 6 respondent earnings from 2nd job after tax
gen r`wavenum'itsec = .
replace r`wavenum'itsec = .m if mi(oj_r_i) & inw`wavenum'==1 
replace r`wavenum'itsec = oj_r_i*52 if !mi(oj_r_i)

**wave 6 respondent total earnings after tax
egen r`wavenum'itearn = rowtotal(r`wavenum'itmain r`wavenum'itsec), m
replace r`wavenum'itearn = .m if r`wavenum'itearn==. & inw`wavenum'==1
label variable r`wavenum'itearn "r`wavenum'itearn:w`wavenum' income: r employment earnings (after tax)"

*wave 6 spouse earnings from main job after tax
gen s`wavenum'itmain = .
replace s`wavenum'itmain = .m if mi(thp_p_i) & inw`wavenum'==1
replace s`wavenum'itmain = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = thp_p_i*52 if !mi(thp_p_i)

*wave 6 spouse earnings from 2nd job after tax
gen s`wavenum'itsec = .
replace s`wavenum'itsec = .m if mi(oj_p_i) & inw`wavenum'==1
replace s`wavenum'itsec = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = oj_p_i*52 if !mi(oj_p_i)

**wave 6 spouse total earnings after tax
gen s`wavenum'itearn = .
replace s`wavenum'itearn = .m if s`wavenum'itmain==.m | s`wavenum'itearn==.m
replace s`wavenum'itearn = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = s`wavenum'itmain + s`wavenum'itsec if !mi(s`wavenum'itmain) & !mi(s`wavenum'itsec)
label variable s`wavenum'itearn "s`wavenum'itearn:w`wavenum' income: s employment earnings (after tax)"

***Employment Earnings Flag***
*wave 6 respondent earnings flag
gen r`wavenum'itifearn = .
combine_inc_flags2 thp_r_t oj_r_t, result(r`wavenum'itifearn)
label variable r`wavenum'itifearn "r`wavenum'itifearn:w`wavenum' impflag: r employment earnings"
label values r`wavenum'itifearn incflag

*wave 6 spouse earnings flag
gen s`wavenum'itifearn = .
combine_inc_flags2 thp_p_t oj_p_t, result(s`wavenum'itifearn)
label variable s`wavenum'itifearn "s`wavenum'itifearn:w`wavenum' impflag: s employment earnings"
label values s`wavenum'itifearn incflag

*check 

*drop intermediate variables
drop r`wavenum'itmain 
drop s`wavenum'itmain
drop r`wavenum'itsec
drop s`wavenum'itsec

***Self-Employment Earnings***
*wave 6 household self-employment earnings before tax
gen h`wavenum'isemp = .
replace h`wavenum'isemp = .m if (mi(sedraw_bu_i) | mi(netprof_bu_i)) & inw`wavenum'==1
replace h`wavenum'isemp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = (sedraw_bu_i + netprof_bu_i)*52 if !mi(sedraw_bu_i) & !mi(netprof_bu_i)
label variable h`wavenum'isemp "h`wavenum'isemp:w`wavenum' income: self-employ earnings (before tax)"

***Self-Employment Earnings Flag***
*wave 6 household self-employment earnings flag
gen h`wavenum'iifsemp = .
combine_inc_flags2 sedraw_bu_t netprof_bu_t, result(h`wavenum'iifsemp)
label variable h`wavenum'iifsemp "h`wavenum'iifsemp:w`wavenum' impflag: self-employ earnings"
label values h`wavenum'iifsemp incflag

*check

***Rental Income from Other Property***
*wave 6 household rental income from other property after tax
gen h`wavenum'itrent = .
replace h`wavenum'itrent = .m if mi(homei_bu_i) & inw`wavenum'==1
replace h`wavenum'itrent = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = homei_bu_i*52 if !mi(homei_bu_i)
label variable h`wavenum'itrent "h`wavenum'itrent:w`wavenum' income: rental income from other property (after tax)"

***Rental Income from Other Property Flag***
*wave 6 household rental income from other property flag
gen h`wavenum'itifrent = .
combine_inc_flags2 homei_bu_t, result(h`wavenum'itifrent)
label variable h`wavenum'itifrent "h`wavenum'itifrent:w`wavenum' impflag: rental income from other property"
label values h`wavenum'itifrent incflag

*check

***Interest Income from Financial Assets***
*wave 6 household interest income from financial assets after tax
gen h`wavenum'ittrest = .
replace h`wavenum'ittrest = .m if (mi(farmi_bu_i) | mi(savei_bu_i) | mi(isai_bu_i) | mi(tessai_bu_i) | ///
		mi(nsavi_bu_i) | mi(pepi_bu_i) | mi(sharesi_bu_i) | mi(prbondsi_bu_i) | mi(trustsi_bu_i) | ///
		mi(bondsi_bu_i) | mi(othsavi_bu_i)) & inw`wavenum'==1
replace h`wavenum'ittrest = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = (farmi_bu_i + savei_bu_i + isai_bu_i + tessai_bu_i + nsavi_bu_i ///
		+ pepi_bu_i + sharesi_bu_i + prbondsi_bu_i + trustsi_bu_i + bondsi_bu_i + othsavi_bu_i)*52 ///
		if !mi(farmi_bu_i) & !mi(savei_bu_i) & !mi(isai_bu_i) & !mi(tessai_bu_i) & !mi(nsavi_bu_i) ///
		 & !mi(pepi_bu_i) & !mi(sharesi_bu_i) & !mi(prbondsi_bu_i) & !mi(trustsi_bu_i) & !mi(bondsi_bu_i) & !mi(othsavi_bu_i)
label variable h`wavenum'ittrest "h`wavenum'ittrest:w`wavenum' income: interest income from financial assets (after tax)"

***Interest Income from Financial Assets Flag***
*wave 6 household interest income from financial assets flag
gen h`wavenum'ittfrest = .
combine_inc_flags2 farmi_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
		nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t, result(h`wavenum'ittfrest)
label variable h`wavenum'ittfrest "h`wavenum'ittfrest:w`wavenum' impflag: interest income from financial assets"
label values h`wavenum'ittfrest incflag

*check

***Capital Income***
*wave 6 household capital income
gen h`wavenum'icap = .
replace h`wavenum'icap = .m if h`wavenum'isemp==.m | h`wavenum'itrent==.m | h`wavenum'ittrest==.m
replace h`wavenum'icap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'icap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'icap = h`wavenum'isemp + h`wavenum'itrent + h`wavenum'ittrest ///
		 if !mi(h`wavenum'isemp) & !mi(h`wavenum'itrent) & !mi(h`wavenum'ittrest)
label variable h`wavenum'icap "h`wavenum'icap:w`wavenum' income: couple level capital income"

*wave 6 household capital income imputation flag
gen h`wavenum'ifcap = .
combine_inc_flags2 sedraw_bu_t homei_bu_t farmi_bu_t netprof_bu_t savei_bu_t isai_bu_t ///
		tessai_bu_t nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t othsavi_bu_t, result(h`wavenum'ifcap)
label variable h`wavenum'ifcap "h`wavenum'ifcap:w`wavenum' impflag: couple level capital income"
label values h`wavenum'ifcap incflag

*wave 6 household capital income tax flag
gen h`wavenum'itfcap = .
replace h`wavenum'itfcap = .m if h`wavenum'isemp == .m
replace h`wavenum'itfcap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'itfcap = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'itfcap "h`wavenum'itfcap:w`wavenum' taxflag: couple level capital income"
label values h`wavenum'itfcap taxflag

*check

***Income from Employer/Private Pension & Annuity***
*wave 6 respondent income from pension & annuity
gen r`wavenum'itpena = .
replace r`wavenum'itpena = .m if mi(ppinc_r_s) & inw`wavenum'==1 
replace r`wavenum'itpena = ppinc_r_s*52 if !mi(ppinc_r_s)
label variable r`wavenum'itpena "r`wavenum'itpena:w`wavenum' income: r pension + annuity (after tax)"

*wave 6 spouse income from pension & annuity
gen s`wavenum'itpena = .
replace s`wavenum'itpena = .m if mi(ppinc_p_s) & inw`wavenum'==1
replace s`wavenum'itpena = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = ppinc_p_s*52 if !mi(ppinc_p_s)
label variable s`wavenum'itpena "s`wavenum'itpena:w`wavenum' income: s pension + annuity (after tax)"

***Income from Employer/Private Pension & Annuity Flag***
*wave 6 respondent income from pension & annuity flag
gen r`wavenum'itifpena = .
combine_inc_flags2 ppinc_r_t, result(r`wavenum'itifpena)
label variable r`wavenum'itifpena "r`wavenum'itifpena:w`wavenum' impflag: r pension + annuity"
label values r`wavenum'itifpena incflag

*wave 6 spouse income from pension & annuity flag
gen s`wavenum'itifpena = .
combine_inc_flags2 ppinc_p_t, result(s`wavenum'itifpena)
label variable s`wavenum'itifpena "s`wavenum'itifpena:w`wavenum' impflag: s pension + annuity"
label values s`wavenum'itifpena incflag

*check 

***Individual Disability Pension***
*wave 6 respondent individual disability pension
gen r`wavenum'issdi = .
replace r`wavenum'issdi = .m if (mi(icb_r_i) | mi(sda_r_i) | mi(attall_r_i) | mi(dla_r_i) | ///
		mi(indinj_r_i) | mi(carers_r_i)) & inw`wavenum'==1 
replace r`wavenum'issdi = (icb_r_i + sda_r_i + attall_r_i + dla_r_i + indinj_r_i + carers_r_i)*52 ///
		if !mi(icb_r_i) & !mi(sda_r_i) & !mi(attall_r_i) & !mi(dla_r_i) & !mi(indinj_r_i) & !mi(carers_r_i)
replace r`wavenum'issdi = .t if (r`wavenum'issdi > 100000 & !missing(r`wavenum'issdi))
label variable r`wavenum'issdi "r`wavenum'issdi:w`wavenum' income: r public disability pension"

*wave 6 spouse individual disability pension
gen s`wavenum'issdi = .
replace s`wavenum'issdi = .m if (mi(icb_p_i) | mi(sda_p_i) | mi(attall_p_i) | mi(dla_p_i) | ///
		mi(indinj_p_i) | mi(carers_p_i)) & inw`wavenum'==1
replace s`wavenum'issdi = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = (icb_p_i + sda_p_i + attall_p_i + dla_p_i + indinj_p_i + carers_p_i)*52 ///
		if !mi(icb_p_i) & !mi(sda_p_i) & !mi(attall_p_i) & !mi(dla_p_i) & !mi(indinj_p_i) & !mi(carers_p_i)
replace s`wavenum'issdi = .t if (s`wavenum'issdi > 100000 & !missing(s`wavenum'issdi))
label variable s`wavenum'issdi "s`wavenum'issdi:w`wavenum' income: s public disability pension"

***Individual Disability Pension Flag***
*wave 6 respondent individual disability pension flag
gen r`wavenum'ifssdi = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t, result(r`wavenum'ifssdi)
label variable r`wavenum'ifssdi "r`wavenum'ifssdi:w`wavenum' impflag: r public disability pension"
label values r`wavenum'ifssdi incflag

*wave 6 spouse individual disability pension flag
gen s`wavenum'ifssdi = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t, result(s`wavenum'ifssdi)
label variable s`wavenum'ifssdi "s`wavenum'ifssdi:w`wavenum' impflag: s public disability pension"
label values s`wavenum'ifssdi incflag

*check

***Individual Income from Public Pension without Disability***
*wave 6 respondent income from public pension without disability
gen r`wavenum'isret = .
replace r`wavenum'isret = .m if (mi(spen_r_i) | mi(widpen_r_i)) & inw`wavenum'==1 
replace r`wavenum'isret = (spen_r_i + widpen_r_i)*52 if !mi(spen_r_i) & !mi(widpen_r_i)
replace r`wavenum'isret = .t if (r`wavenum'isret > 100000 & !missing(r`wavenum'isret))
label variable r`wavenum'isret "r`wavenum'isret:w`wavenum' income: r public old-age pension"

*wave 6 spouse income from public pension without disability
gen s`wavenum'isret = .
replace s`wavenum'isret = .m if (mi(spen_p_i) | mi(widpen_p_i)) & inw`wavenum'==1
replace s`wavenum'isret = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'isret = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'isret = (spen_p_i + widpen_p_i)*52 if !mi(spen_p_i) & !mi(widpen_p_i)
replace s`wavenum'isret = .t if (s`wavenum'isret > 100000 & !missing(s`wavenum'isret))
label variable s`wavenum'isret "s`wavenum'isret:w`wavenum' income: s public old-age pension"

***Individual Income from Public Pension without Disability Flag***
*wave 6 respondent income public pension without disability flag
gen r`wavenum'ifsret = .
combine_inc_flags2 spen_r_t widpen_r_t, result(r`wavenum'ifsret)
label variable r`wavenum'ifsret "r`wavenum'ifsret:w`wavenum' incflag: r public old-age pension"
label values r`wavenum'ifsret incflag

*wave 6 spouse income from public pension without disability flag
gen s`wavenum'ifsret = .
combine_inc_flags2 spen_p_t widpen_p_t, result(s`wavenum'ifsret)
label variable s`wavenum'ifsret "s`wavenum'ifsret:w`wavenum' incflag: s public old-age pension"
label values s`wavenum'ifsret incflag

*check 


***Main Public Pension***
*wave 6 respondent main public pension
gen r`wavenum'ipubpen = .
replace r`wavenum'ipubpen = .m if r`wavenum'issdi==.m | r`wavenum'isret==.m 
replace r`wavenum'ipubpen = .t if r`wavenum'issdi==.t | r`wavenum'isret==.t
replace r`wavenum'ipubpen = r`wavenum'issdi + r`wavenum'isret if !mi(r`wavenum'issdi) & !mi(r`wavenum'isret)
label variable r`wavenum'ipubpen "r`wavenum'ipubpen:w`wavenum' income: r public pensions"

*wave 6 spouse main public pension
gen s`wavenum'ipubpen = .
replace s`wavenum'ipubpen = .m if s`wavenum'issdi==.m | s`wavenum'isret==.m
replace s`wavenum'ipubpen = .t if s`wavenum'issdi==.t | s`wavenum'isret==.t
replace s`wavenum'ipubpen = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = s`wavenum'issdi + s`wavenum'isret if !mi(s`wavenum'issdi) & !mi(s`wavenum'isret)
label variable s`wavenum'ipubpen "s`wavenum'ipubpen:w`wavenum' income: s public pensions"

***Main Public Pension Flag***
*wave 6 respondent main public pension flag
gen r`wavenum'ifpubpen = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t spen_r_t widpen_r_t, result(r`wavenum'ifpubpen)
label variable r`wavenum'ifpubpen "r`wavenum'ifpubpen:w`wavenum' impflag: r public pensions"
label values r`wavenum'ifpubpen incflag

*wave 6 spouse main public pension flag
gen s`wavenum'ifpubpen = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t spen_p_t widpen_p_t, result(s`wavenum'ifpubpen)
label variable s`wavenum'ifpubpen "s`wavenum'ifpubpen:w`wavenum' impflag: s public pensions"
label values s`wavenum'ifpubpen incflag

***War Pension***
*wave 6 respondent war pension
gen r`wavenum'ivet = .
replace r`wavenum'ivet = .m if mi(war_r_i) & inw`wavenum'==1 
replace r`wavenum'ivet = war_r_i*52 if !mi(war_r_i)
label variable r`wavenum'ivet "r`wavenum'ivet:w`wavenum' income: r war pension"

*wave 6 spouse war pension
gen s`wavenum'ivet = .
replace s`wavenum'ivet = .m if mi(war_p_i) & inw`wavenum'==1
replace s`wavenum'ivet = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = war_p_i*52 if !mi(war_p_i)
label variable s`wavenum'ivet "s`wavenum'ivet:w`wavenum' income: s war pension"

***War Pension Flag***
*wave 6 respondent war pension flag
gen r`wavenum'ifvet = .
combine_inc_flags2 war_r_t, result(r`wavenum'ifvet)
label variable r`wavenum'ifvet "r`wavenum'ifvet:w`wavenum' impflag: r war pension"
label values r`wavenum'ifvet incflag

*wave 6 spouse war pension flag
gen s`wavenum'ifvet = .
combine_inc_flags2 war_p_t, result(s`wavenum'ifvet)
label variable s`wavenum'ifvet "s`wavenum'ifvet:w`wavenum' impflag: s war pension"
label values s`wavenum'ifvet incflag

*check

***Income Support***
*wave 6 respondent income support
gen r`wavenum'iwelf = .
replace r`wavenum'iwelf = .m if (mi(is_r_i) | mi(wtc_r_i) | mi(gall_r_i) | mi(cb_r_i) | ///
		mi(ctc_r_i) | mi(pc_r_i)) & inw`wavenum'==1 
replace r`wavenum'iwelf = (is_r_i + wtc_r_i + gall_r_i + cb_r_i + ctc_r_i + pc_r_i)*52 ///
		if !mi(is_r_i) & !mi(wtc_r_i) & !mi(gall_r_i) & !mi(cb_r_i) & !mi(ctc_r_i) & !mi(pc_r_i)
replace r`wavenum'iwelf = .t if (r`wavenum'iwelf > 100000 & !missing(r`wavenum'iwelf))
label variable r`wavenum'iwelf "r`wavenum'iwelf:w`wavenum' income: r income support"

*wave 6 spouse income support
gen s`wavenum'iwelf = .
replace s`wavenum'iwelf = .m if (mi(is_p_i) | mi(wtc_p_i) | mi(gall_p_i) | mi(cb_p_i) | ///
		mi(ctc_p_i) | mi(pc_p_i)) & inw`wavenum'==1 
replace s`wavenum'iwelf = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = (is_p_i + wtc_p_i + gall_p_i + cb_p_i + ctc_p_i + pc_p_i)*52 ///
		if !mi(is_p_i) & !mi(wtc_p_i) & !mi(gall_p_i) & !mi(cb_p_i) & !mi(ctc_p_i) & !mi(pc_p_i)
replace s`wavenum'iwelf = .t if (s`wavenum'iwelf > 100000 & !missing(s`wavenum'iwelf))
label variable s`wavenum'iwelf "s`wavenum'iwelf:w`wavenum' income: s income support"

***Income Support Flag***
*wave 6 respondent income support flag
gen r`wavenum'ifwelf = .
combine_inc_flags2 is_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifwelf)
label variable r`wavenum'ifwelf "r`wavenum'ifwelf:w`wavenum' impflag: r income support"
label values r`wavenum'ifwelf incflag

*wave 6 spouse income support flag
gen s`wavenum'ifwelf = .
combine_inc_flags2 is_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifwelf)
label variable s`wavenum'ifwelf "s`wavenum'ifwelf:w`wavenum' impflag: s income support"
label values s`wavenum'ifwelf incflag

*check

***Worker's Comp/Short-Term Disability***
*wave 6 respondent worker's comp
gen r`wavenum'iwcmp = .
replace r`wavenum'iwcmp = .m if mi(ssp_r_i) & inw`wavenum'==1 
replace r`wavenum'iwcmp = ssp_r_i*52 if !mi(ssp_r_i)
label variable r`wavenum'iwcmp "r`wavenum'iwcmp:w`wavenum' income: r workers comp"

*wave 6 spouse worker's comp
gen s`wavenum'iwcmp = .
replace s`wavenum'iwcmp = .m if mi(ssp_p_i) & inw`wavenum'==1
replace s`wavenum'iwcmp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = ssp_p_i*52 if !mi(ssp_p_i)
label variable s`wavenum'iwcmp "s`wavenum'iwcmp:w`wavenum' income: s workers comp"

***Worker's Comp/Short-Term Disability Flag***
*wave 6 respondent worker's comp flag
gen r`wavenum'ifwcmp = .
combine_inc_flags2 ssp_r_t, result(r`wavenum'ifwcmp)
label variable r`wavenum'ifwcmp "r`wavenum'ifwcmp:w`wavenum' impflag: r workers comp"
label values r`wavenum'ifwcmp incflag

*wave 6 spouse worker's comp flag
gen s`wavenum'ifwcmp = .
combine_inc_flags2 ssp_p_t, result(s`wavenum'ifwcmp)
label variable s`wavenum'ifwcmp "s`wavenum'ifwcmp:w`wavenum' impflag: s workers comp"
label values s`wavenum'ifwcmp incflag

*check

***Unemployment Transfers***
*wave 6 respondent unemployment transfers
gen r`wavenum'iunem = .
replace r`wavenum'iunem = .m if mi(jsa_r_i) & inw`wavenum'==1
replace r`wavenum'iunem = jsa_r_i*52  if !mi(jsa_r_i)
replace r`wavenum'iunem = .t if (r`wavenum'iunem > 10000 & !missing(r`wavenum'iunem))
label variable r`wavenum'iunem "r`wavenum'iunem:w`wavenum' income: r unemployment"

*wave 6 spouse unemployment transfers
gen s`wavenum'iunem = .
replace s`wavenum'iunem = .m if mi(jsa_p_i) & inw`wavenum'==1
replace s`wavenum'iunem = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = jsa_p_i*52  if !mi(jsa_p_i)
replace s`wavenum'iunem = .t if (s`wavenum'iunem > 10000 & !missing(s`wavenum'iunem))
label variable s`wavenum'iunem "s`wavenum'iunem:w`wavenum' income: s unemployment"

***Unemployment Transfers Flag***
*wave 6 respondent unemployment transfers flag
gen r`wavenum'ifunem = .
combine_inc_flags2 jsa_r_t, result(r`wavenum'ifunem)
label variable r`wavenum'ifunem "r`wavenum'ifunem:w`wavenum' impflag: r unemployment"
label values r`wavenum'ifunem incflag

*wave 6 spouse unemployment transfers flag
gen s`wavenum'ifunem = .
combine_inc_flags2 jsa_p_t, result(s`wavenum'ifunem)
label variable s`wavenum'ifunem "s`wavenum'ifunem:w`wavenum' impflag: s unemployment"
label values s`wavenum'ifunem incflag

*check

***Other Government Transfers***
*wave 6 respondent other government transfers
gen r`wavenum'igxfr = .
replace r`wavenum'igxfr = .m if r`wavenum'ivet==.m | r`wavenum'iwelf==.m | r`wavenum'iwcmp==.m | r`wavenum'iunem==.m
replace r`wavenum'igxfr = .t if r`wavenum'ivet==.t | r`wavenum'iwelf==.t | r`wavenum'iwcmp==.t | r`wavenum'iunem==.t
replace r`wavenum'igxfr = r`wavenum'ivet + r`wavenum'iwelf + r`wavenum'iwcmp + r`wavenum'iunem ///
		if !mi(r`wavenum'ivet) & !mi(r`wavenum'iwelf) & !mi(r`wavenum'iwcmp) & !mi(r`wavenum'iunem)
label variable r`wavenum'igxfr "r`wavenum'igxfr:w`wavenum' income: r other gov transfers"

*wave 6 spouse other government transfers
gen s`wavenum'igxfr = .
replace s`wavenum'igxfr = .m if s`wavenum'ivet==.m | s`wavenum'iwelf==.m | s`wavenum'iwcmp==.m | s`wavenum'iunem==.m
replace s`wavenum'igxfr = .t if s`wavenum'ivet==.t | s`wavenum'iwelf==.t | s`wavenum'iwcmp==.t | s`wavenum'iunem==.t
replace s`wavenum'igxfr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = s`wavenum'ivet + s`wavenum'iwelf + s`wavenum'iwcmp + s`wavenum'iunem ///
		if !mi(s`wavenum'ivet) & !mi(s`wavenum'iwelf) & !mi(s`wavenum'iwcmp) & !mi(s`wavenum'iunem)
label variable s`wavenum'igxfr "s`wavenum'igxfr:w`wavenum' income: s other gov transfers"

***Other Government Transfers Flag***
*wave 6 respondent other government transfers flag
gen r`wavenum'ifgxfr = .
combine_inc_flags2 war_r_t is_r_t ssp_r_t jsa_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifgxfr)
label variable r`wavenum'ifgxfr "r`wavenum'ifgxfr:w`wavenum' impflag: r other gov transfers"
label values r`wavenum'ifgxfr incflag

*wave 6 spouse other government transfers flag
gen s`wavenum'ifgxfr = .
combine_inc_flags2 war_p_t is_p_t ssp_p_t jsa_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifgxfr)
label variable s`wavenum'ifgxfr "s`wavenum'ifgxfr:w`wavenum' impflag: s other gov transfers"
label values s`wavenum'ifgxfr incflag

drop r`wavenum'ivet r`wavenum'iwelf r`wavenum'iwcmp r`wavenum'iunem 
drop s`wavenum'ivet s`wavenum'iwelf s`wavenum'iwcmp s`wavenum'iunem

drop r`wavenum'ifvet r`wavenum'ifwelf r`wavenum'ifwcmp r`wavenum'ifunem 
drop s`wavenum'ifvet s`wavenum'ifwelf s`wavenum'ifwcmp s`wavenum'ifunem

*check

***Other Household Income***
*wave 6 other household income
gen h`wavenum'iothr = .
replace h`wavenum'iothr = .m if (mi(othpay_r_i) | mi(othpay_p_i)) & inw`wavenum'==1
replace h`wavenum'iothr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = othpay_r_i*52 if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(othpay_r_i)
replace h`wavenum'iothr = (othpay_r_i + othpay_p_i)*52 if inlist(r`wavenum'mstat,1,3) & !mi(othpay_r_i) & !mi(othpay_p_i)
replace h`wavenum'iothr = .t if (h`wavenum'iothr > 100000 & !missing(h`wavenum'iothr))
label variable h`wavenum'iothr "h`wavenum'iothr:w`wavenum' income: other income"

***Other Household Income Flag***
*wave 6 other household income flag
gen h`wavenum'ifothr = .
combine_inc_flags2 othpay_r_t othpay_p_t, result(h`wavenum'ifothr)
label variable h`wavenum'ifothr "h`wavenum'ifothr:w`wavenum' impflag: other income"
label values h`wavenum'ifothr incflag

*check

***Total Family Income***
*wave 6 household total family income
gen h`wavenum'itot = .
replace h`wavenum'itot = .m if r`wavenum'itearn==.m | s`wavenum'itearn==.m | h`wavenum'icap==.m | ///
		r`wavenum'itpena==.m | s`wavenum'itpena==.m | r`wavenum'ipubpen==.m | s`wavenum'ipubpen==.m | ///
		r`wavenum'igxfr==.m | s`wavenum'igxfr==.m | h`wavenum'iothr==.m
replace h`wavenum'itot = .t if r`wavenum'itearn==.t | s`wavenum'itearn==.t | h`wavenum'icap==.t | ///
		r`wavenum'itpena==.t | s`wavenum'itpena==.t | r`wavenum'ipubpen==.t | s`wavenum'ipubpen==.t | ///
		r`wavenum'igxfr==.t | s`wavenum'igxfr==.t | h`wavenum'iothr==.t
replace h`wavenum'itot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itot = r`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena + r`wavenum'ipubpen ///
												+ r`wavenum'igxfr + h`wavenum'iothr if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(r`wavenum'itearn) ///
										& !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(r`wavenum'ipubpen) & !mi(r`wavenum'igxfr) ///
									  & !mi(h`wavenum'iothr)
replace h`wavenum'itot = r`wavenum'itearn + s`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena /// 
												+ s`wavenum'itpena + r`wavenum'ipubpen + s`wavenum'ipubpen + r`wavenum'igxfr /// 
												+ s`wavenum'igxfr + h`wavenum'iothr if inlist(r`wavenum'mstat,1,3) & !mi(r`wavenum'itearn) ///
										& !mi(s`wavenum'itearn) & !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(s`wavenum'itpena) ///
										& !mi(r`wavenum'ipubpen) & !mi(s`wavenum'ipubpen) & !mi(r`wavenum'igxfr) & !mi(s`wavenum'igxfr) ///
										& !mi(h`wavenum'iothr)
replace h`wavenum'itot = .t if (h`wavenum'itot > 900000 & !missing(h`wavenum'itot))
label variable h`wavenum'itot "h`wavenum'itot:w`wavenum' income: total couple level income"

*wave 6 household total family income imputation flag
gen h`wavenum'iftot = .
combine_inc_flags9 r`wavenum'itifearn s`wavenum'itifearn h`wavenum'ifcap r`wavenum'itifpena s`wavenum'itifpena r`wavenum'ifpubpen s`wavenum'ifpubpen r`wavenum'ifgxfr s`wavenum'ifgxfr h`wavenum'ifothr, result(h`wavenum'iftot)
label variable h`wavenum'iftot "h`wavenum'iftot:w`wavenum' impflag: total couple level income"
label values h`wavenum'iftot incflag

*wave 6 household total family income tax flag
gen h`wavenum'ifttot = .
replace h`wavenum'ifttot = .m if h`wavenum'isemp==.m
replace h`wavenum'ifttot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'ifttot = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'ifttot "h`wavenum'ifttot:w`wavenum' taxflag: total couple level income"
label values h`wavenum'ifttot taxflag

*check 

********Consumption*********
***monthly Food Consumption In House***
*wave 6 household monthly food consumption in house
gen hh`wavenum'cfoodi = .
replace hh`wavenum'cfoodi = .m if inlist(HoFood,-1,-3)
replace hh`wavenum'cfoodi = .p if askpx == 1
replace hh`wavenum'cfoodi = .d if HoFood == -8
replace hh`wavenum'cfoodi = .r if HoFood == -9
replace hh`wavenum'cfoodi = HoFood if inrange(HoFood,0,1000)
label variable hh`wavenum'cfoodi "hh`wavenum'cfoodi:w`wavenum' hhold monthly food consumption in house" 

***monthly Food Consumption Outside House***
*wave 6 household monthly food consumption outside house
gen hh`wavenum'cfoodo1m = .
replace hh`wavenum'cfoodo1m = .m if inlist(HoOutf,-1,-3)
replace hh`wavenum'cfoodo1m = .p if askpx == 1
replace hh`wavenum'cfoodo1m = .d if HoOutf == -8
replace hh`wavenum'cfoodo1m = .r if HoOutf == -9
replace hh`wavenum'cfoodo1m = HoOutf if inrange(HoOutf,0,2000)
label variable hh`wavenum'cfoodo1m "hh`wavenum'cfoodo1m:w`wavenum' hhold monthly food consumption outside house"

***monthly Total Food Consumption***
*wave 6 household total food consumption
gen hh`wavenum'cfood1m = .
replace hh`wavenum'cfood1m = .m if inlist(HoFood,-1,-3) | inlist(HoOutf,-1,-3)
replace hh`wavenum'cfood1m = .p if askpx == 1
replace hh`wavenum'cfood1m = .d if HoFood == -8 | HoOutf == -8
replace hh`wavenum'cfood1m = .r if HoFood == -9 | HoOutf == -9
replace hh`wavenum'cfood1m = (hh`wavenum'cfoodi * 4.34524) + hh`wavenum'cfoodo1m if inrange(hh`wavenum'cfoodi,0,1000) & inrange(hh`wavenum'cfoodo1m,0,2000)
label variable hh`wavenum'cfood1m "hh`wavenum'cfood1m:w`wavenum' hhold total monthly food consumption"

***Monthly Clothing Expenditure***
*wave 6 household monthly clothing expenditure
gen hh`wavenum'cclo1m = .
replace hh`wavenum'cclo1m = .m if inlist(HoCl,-1,-3)
replace hh`wavenum'cclo1m = .p if askpx == 1
replace hh`wavenum'cclo1m = .d if HoCl == -8
replace hh`wavenum'cclo1m = .r if HoCl == -9
replace hh`wavenum'cclo1m = HoCl if inrange(HoCl,0,5000)
label variable hh`wavenum'cclo1m "hh`wavenum'cclo1m:w`wavenum' hhold monthly clothing exp"

***Monthly Leisure Activities Expenditure***
*wave 6 household monthly leisure activity expenditure
gen hh`wavenum'clei1m = .
replace hh`wavenum'clei1m = .m if inlist(HoLeis,-1,-3)
replace hh`wavenum'clei1m = .p if askpx == 1
replace hh`wavenum'clei1m = .d if HoLeis == -8
replace hh`wavenum'clei1m = .r if HoLeis == -9
replace hh`wavenum'clei1m = HoLeis if inrange(HoLeis,0,5500)
label variable hh`wavenum'clei1m "hh`wavenum'clei1m:w`wavenum' hhold monthly leisure exp"

***Monthly Rent Expenditure***
*wave 6 household monthly rent
gen hh`wavenum'crent = .
replace hh`wavenum'crent = .m if HoRent == -1 | inlist(HoPeri,-1,-2,-3,95,96) | HoTenu == -1
replace hh`wavenum'crent = .p if askpx == 1
replace hh`wavenum'crent = .d if HoRent == -8 | HoPeri == -8 | HoTenu == -8
replace hh`wavenum'crent = .r if HoRent == -9 | HoPeri == -9 | HoTenu == -9
replace hh`wavenum'crent = 0 if inlist(HoTenu,1,2,5,6) | HoPeri == 97 | HoRent == 99997
replace hh`wavenum'crent = HoRent if inlist(HoPeri,4,5) & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent*4.348125 if HoPeri==1 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent*2.1740625 if HoPeri==2 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent*1.449374 if HoPeri==3 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/2 if HoPeri==7 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/1.5 if HoPeri==8 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/1.333 if HoPeri==9 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/1.2 if HoPeri==10 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/3 if HoPeri==13 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/6 if HoPeri==26 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/12 if HoPeri==52 & inrange(HoRent,0,100000)
label variable hh`wavenum'crent "hh`wavenum'crent:w`wavenum' hhold monthly rent"

***Monthly Utility/Fuel Expenditure***
*wave 6 household monthly gas & electricity
gen nogas = 1 if inlist(hofuelga,-1,0)
gen noelec = 1 if inlist(hofuelel,-1,0)
gen nocoal = 1 if inlist(hofuelco,-1,0)
gen nopar = 1 if inlist(hofuelpa,-1,0)
gen nooil = 1 if inlist(hofueloi,-1,0)
gen nowood = 1 if inlist(hofuelwo,-1,0)
gen nooth = 1 if inlist(hofuel95,-1,0)

*gas and electric by direct debit
gen gseld = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFDm, result(gseld)
replace gseld = 0 if (nogas == 1 | noelec == 1 ) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,2,3,4,5,6,7,95) | HoFDm == -3 
replace gseld = HoFDm if inrange(HoFDm,0,1000)

*gas and electric by bill
gen gselb = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFBmw HoFBms HoFBqw HoFBqs, result(gselb)
replace gselb = 0 if (nogas == 1 |  noelec == 1) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,1,3,4,5,6,7,95) | HoFBmw == -3 | HoFBms == -3 | HoFBqw == -3 | HoFBqs == -3
replace gselb = (HoFBmw + HoFBms)/2 if inrange(HoFBmw,0,1000) & inrange(HoFBms,0,1000)
replace gselb = (HoFBqw + HoFBqs)/2/3 if inrange(HoFBqw,0,1000) & inrange(HoFBqs,0,1000)

*gas and electric by prepay
gen gselp = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFPw HoFPs, result(gselp)
replace gselp = 0 if (nogas == 1 |  noelec == 1) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,1,2,4,5,6,7,95) | HoFPw == -3 | HoFPs == -3
replace gselp = (HoFPw + HoFPs)/2*4.348125 if inrange(HoFPw,0,500) & inrange(HoFPs,0,500)

*gas and electric by other payment method
gen gselo = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFOw HoFOs, result(gselo)
replace gselo = 0 if (nogas == 1 |  noelec == 1) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,1,2,3,7) | HoFOw == -3 | HoFOs == -3
replace gselo = (HoFOw + HoFOs)/2*4.348125 if inrange(HoFOw,0,500) & inrange(HoFOs,0,500)

*gas and electric by staywarm scheme
gen gsels = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFSw HoFSm HoFSq, result(gsels)
replace gsels = 0 if (nogas == 1 |  noelec == 1) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,1,2,3,4,5,6,95) | HoFSw == -3 | HoFSm == -3 | HoFSq == -3
replace gsels = HoFSw*4.348125 if inrange(HoFSw,0,500)
replace gsels = HoFSm if inrange(HoFSm,0,500)
replace gsels = HoFSq/3 if inrange(HoFSq,0,500)

*all gas and electric
gen gsel = .
missing_H gseld gselb gselp gselo gsels, result(gsel)
replace gsel = gseld + gselb + gselp + gselo + gsels if !mi(gseld) & !mi(gselb) & !mi(gselp) & !mi(gselo) & !mi(gsels)

drop gseld gselb gselp gselo gsels

*wave 6 household monthly gas
*gas by direct debit
gen gasd = .
missing_w2 hofuelga HoFTog HoGPay HoGD HoGDm HoGDq, result(gasd)
replace gasd = 0 if nogas == 1 | HoFTog == 1 | inlist(HoGPay,2,3,4,5,6,95) | HoGDm == -3 | HoGDq == -3
replace gasd = HoGDm if inrange(HoGDm,0,500)
replace gasd = HoGDq/3 if inrange(HoGDq,0,500)

*gas by bill
gen gasb = .
missing_w2 hofuelga HoFTog HoGPay HoGBp HoGBmw HoGBms HoGBqw HoGBqs, result(gasb)
replace gasb = 0 if nogas == 1 | HoFTog == 1 | inlist(HoGPay,1,3,4,5,6,95) | HoGBmw == -3 | HoGBms == -3 | HoGBqw == -3 | HoGBqs == -3
replace gasb = (HoGBmw + HoGBms)/2 if inrange(HoGBmw,0,500) & inrange(HoGBms,0,500)
replace gasb = (HoGBqw + HoGBqs)/2/3 if inrange(HoGBqw,0,500) & inrange(HoGBqs,0,500)

*gas by prepay
gen gasp = .
missing_w2 hofuelga HoFTog HoGPay HoGPw HoGPs, result(gasp)
replace gasp = 0 if nogas == 1 | HoFTog == 1 | inlist(HoGPay,1,2,4,5,6,95) | HoGPw == -3 | HoGPs == -3
replace gasp = (HoGPw + HoGPs)/2*4.348125 if inrange(HoGPw,0,500) & inrange(HoGPs,0,500)

*gas by other paymenet method
gen gaso=.
missing_w2 hofuelga HoFTog HoGPay HoGOw HoGOs, result(gaso)
replace gaso = 0 if nogas == 1 | HoFTog == 1 | inlist(HoGPay,1,2,3) | HoGOw == -3 | HoGOs == -3
replace gaso = (HoGOw + HoGOs)/2*4.348125 if inrange(HoGOw,0,500) & inrange(HoGOs,0,500)

*all gas
gen gas = .
missing_H gasd gasb gasp gaso, result(gas)
replace gas = gasd + gasb + gasp + gaso if !mi(gasd) & !mi(gasb) & !mi(gasp) & !mi(gaso)

drop gasd gasb gasp gaso

*wave 6 household monthly electricity
*electricity by direct debig
gen elecd = .
missing_w2 hofuelel HoFTog HoEPay HoEDm HoEDq, result(elecd)
replace elecd = 0 if noelec == 1 | HoFTog == 1 | inlist(HoEPay,2,3,4,5,6,95) | HoEDm == -3 | HoEDq == -3
replace elecd = HoEDm if inrange(HoEDm,0,500)
replace elecd = HoEDq/3 if inrange(HoEDq,0,500)

*electricity by bill
gen elecb = .
missing_w2 hofuelel HoFTog HoEPay HoEBmw HoEBms HoEBqw HoEBqs, result(elecb)
replace elecb = 0 if noelec == 1 | HoFTog == 1 | inlist(HoEPay,1,3,4,5,6,95) | HoEBmw == -3 | HoEBms == -3 | HoEBqw == -3 | HoEBqs == -3
replace elecb = (HoEBmw + HoEBms)/2 if inrange(HoEBmw,0,500) & inrange(HoEBms,0,500)
replace elecb = (HoEBqw + HoEBqs)/2/3 if inrange(HoEBqw,0,500) & inrange(HoEBqs,0,500)

*electricity by prepay
gen elecp =.
missing_w2 hofuelel HoFTog HoEPay HoEPw HoEPs, result(elecp)
replace elecp = 0 if noelec == 1 | HoFTog == 1 | inlist(HoEPay,1,2,4,5,6,95) | HoEPw == -3 | HoEPs == -3
replace elecp = (HoEPw + HoEPs)/2*4.348125 if inrange(HoEPw,0,500) & inrange(HoEPs,0,500)

*electricity by other payment method
gen eleco = .
missing_w2 hofuelel HoFTog HoEPay HoEOw HoEOs, result(eleco)
replace eleco = 0 if noelec == 1 | HoFTog == 1 | inlist(HoEPay,1,2,3) | HoEOw == -3 | HoEOs == -3
replace eleco = (HoEOw + HoEOs)/2*4.348125 if inrange(HoEOw,0,500) & inrange(HoEOs,0,500)

*all electricity
gen elec = .
missing_H elecd elecb elecp eleco, result(elec)
replace elec = elecd + elecb + elecp + eleco if !mi(elecd) & !mi(elecb) & !mi(elecp) & !mi(eleco)

drop elecd elecb elecp eleco

*wave 6 household monthly coal
gen coal = .
missing_w2 hofuelco HoFCw HoFCs, result(coal)
replace coal = 0 if nocoal == 1 | HoFCw == -3 | HoFCs == -3
replace coal = (HoFCw + HoFCs)/2*4.348125 if inrange(HoFCw,0,100) & inrange(HoFCs,0,100)

*wave 6 household monthly paraffin
gen para = .
missing_w2 hofuelpa HoFPGw HoFPGs, result(para)
replace para = 0 if nopar == 1 | HoFPGw == -3 | HoFPGs == -3
replace para = (HoFPGw + HoFPGs)/2*4.348125 if inrange(HoFPGw,0,100) & inrange(HoFPGs,0,100)

*wave 6 household monthly oil
gen oil = .
missing_w2 hofueloi HoFOIw HoFOIs, result(oil)
replace oil = 0 if nooil == 1 | HoFOIw == -3 | HoFOIs == -3
replace oil = (HoFOIw + HoFOIs)/2*4.348125 if inrange(HoFOIw,0,100) & inrange(HoFOIs,0,100)

*wave 6 household monthly wood
gen wood = .
missing_w2 hofuelwo HoFWw HoFWs, result(wood)
replace wood = 0 if nowood == 1 | HoFWw == -3 | HoFWs == -3
replace wood = (HoFWw + HoFWs)/2*4.348125 if inrange(HoFWw,0,100) & inrange(HoFWs,0,100)

*wave 6 household monthly other
gen oth = .
missing_w2 hofuel95 HoFXw HoFXs, result(oth)
replace oth = 0 if nooth == 1 | HoFXw == -3 | HoFXs == -3
replace oth = (HoFXw + HoFXs)/2*4.348125 if inrange(HoFXw,0,100) & inrange(HoFXs,0,100)

drop nogas noelec nocoal nopar nooil nowood nooth 

*wave 6 household utility/fuel
gen hh`wavenum'cutil = .
missing_H gsel gas elec coal para oil wood oth, result(hh`wavenum'cutil)
replace hh`wavenum'cutil = .p if askpx == 1
replace hh`wavenum'cutil = gsel + gas + elec + coal + para + oil + wood + oth if !mi(gsel) & !mi(gas) & !mi(elec) & !mi(coal) & !mi(para) & !mi(oil) & !mi(wood) & !mi(oth)
label variable hh`wavenum'cutil "hh`wavenum'cutil:w`wavenum' hhold monthly utility/fuel"

drop gsel gas elec coal para oil wood oth

***Monthly Total Consumption***
*wave 6 household monthly total consumption
gen hh`wavenum'ctot1m = .
missing_H hh`wavenum'cfood1m hh`wavenum'cclo1m hh`wavenum'clei1m hh`wavenum'crent hh`wavenum'cutil, result(hh`wavenum'ctot1m)
replace hh`wavenum'ctot1m = .p if askpx == 1
replace hh`wavenum'ctot1m = hh`wavenum'cfood1m + hh`wavenum'cclo1m + hh`wavenum'clei1m + hh`wavenum'crent + hh`wavenum'cutil if ///
                    inrange(hh`wavenum'cfood1m,0,15000) & ///
                    inrange(hh`wavenum'cclo1m,0,5000) & ///
                    inrange(hh`wavenum'clei1m,0,6000) & ///
                    inrange(hh`wavenum'crent,0,990000) & ///
                    inrange(hh`wavenum'cutil,0,1000)
label variable hh`wavenum'ctot1m "hh`wavenum'ctot1m:w`wavenum' hhold total monthly consumption"


***drop ELSA wave 6 financial derived file raw variables***
drop `income_w6_fina'

***drop ELSA wave 6 core variables***
drop `income_w6_core'

******************************************************************************************

*set wave number
local wavenum=7

***merge with wave 7 financial derived variables data***
local income_w7_fina thp_r_i oj_r_i sedraw_bu_i ///
                     thp_r_t oj_r_t sedraw_bu_t ///
                     thp_p_i oj_p_i thp_p_t oj_p_t ///
                     ppinc_r_s ppinc_r_t ppinc_p_s ppinc_p_t ///
                     spen_r_i widpen_r_i ///
                     spen_r_t widpen_r_t ///
                     spen_p_i widpen_p_i ///
                     spen_p_t widpen_p_t ///
                     farmi_bu_i netprof_bu_i homei_bu_i savei_bu_i isai_bu_i tessai_bu_i ///
                     farmi_bu_t netprof_bu_t homei_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
                     nsavi_bu_i pepi_bu_i sharesi_bu_i prbondsi_bu_i trustsi_bu_i bondsi_bu_i othsavi_bu_i ///
                     nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t ///
                     icb_r_i icb_p_i sda_r_i sda_p_i ssp_r_i ssp_p_i attall_r_i attall_p_i dla_r_i dla_p_i ///
                     icb_r_t icb_p_t sda_r_t sda_p_t ssp_r_t ssp_p_t attall_r_t attall_p_t dla_r_t dla_p_t ///
                     indinj_r_i indinj_p_i war_r_i war_p_i carers_r_i carers_p_i is_r_i is_p_i pc_r_i pc_p_i ///
                     indinj_r_t indinj_p_t war_r_t war_p_t carers_r_t carers_p_t is_r_t is_p_t pc_r_t pc_p_t ///
                     wtc_r_i wtc_p_i jsa_r_i jsa_p_i gall_r_i gall_p_i cb_r_i cb_p_i ctc_r_i ctc_p_i ///
                     wtc_r_t wtc_p_t jsa_r_t jsa_p_t gall_r_t gall_p_t cb_r_t cb_p_t ctc_r_t ctc_p_t ///
                     othpay_r_i othpay_p_i ///
                     othpay_r_t othpay_p_t               
merge 1:1 idauniq using "$wave_7_fina", keepusing(`income_w7_fina') nogen

***merge with wave 7 core data***
local income_w7_core HoFood HoOutf HoCl HoLeis askpx ///
										HoRent HoPeri HoTenu hofuelga hofuelel hofuelco hofuelpa hofueloi hofuelwo hofuel95 ///
										HoFBqs HoFBms HoFBqw HoFBmw HoFD ///
										HoFDm HoFDq HoFBmw HoFBqw HoFPw HoFPs HoFOw HoFOs HoFSw HoFSm HoFSq ///
										HoGDm HoGDq HoGBmw HoGBms HoGBqw HoGBqs HoGPw HoGPs HoGOw HoGOs ///
										HoEDm HoEDq HoEBmw HoEBms HoEBqw HoEBqs HoEPw HoEPs HoEOw HoEOs ///
										HoFCw HoFCs HoFPGw HoFPGs HoFOIw HoFOIs HoFWw HoFWs HoFXw HoFXs ///
										HoFSup HoFTog HoFPay HoFB HoFSp HoGPay HoGD HoGBp HoEPay
merge 1:1 idauniq using "$wave_7_core", keepusing(`income_w7_core') nogen


***Employment Earnings***
*wave 7 respondent earnings from main job after tax
gen r`wavenum'itmain = .
replace r`wavenum'itmain = .m if mi(thp_r_i) & inw`wavenum'==1 
replace r`wavenum'itmain = thp_r_i*52 if !mi(thp_r_i)

*wave 7 respondent earnings from 2nd job after tax
gen r`wavenum'itsec = .
replace r`wavenum'itsec = .m if mi(oj_r_i) & inw`wavenum'==1 
replace r`wavenum'itsec = oj_r_i*52 if !mi(oj_r_i)

**wave 7 respondent total earnings after tax
egen r`wavenum'itearn = rowtotal(r`wavenum'itmain r`wavenum'itsec), m
replace r`wavenum'itearn = .m if r`wavenum'itearn==. & inw`wavenum'==1
label variable r`wavenum'itearn "r`wavenum'itearn:w`wavenum' income: r employment earnings (after tax)"

*wave 7 spouse earnings from main job after tax
gen s`wavenum'itmain = .
replace s`wavenum'itmain = .m if mi(thp_p_i) & inw`wavenum'==1
replace s`wavenum'itmain = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = thp_p_i*52 if !mi(thp_p_i)

*wave 7 spouse earnings from 2nd job after tax
gen s`wavenum'itsec = .
replace s`wavenum'itsec = .m if mi(oj_p_i) & inw`wavenum'==1
replace s`wavenum'itsec = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = oj_p_i*52 if !mi(oj_p_i)

**wave 7 spouse total earnings after tax
gen s`wavenum'itearn = .
replace s`wavenum'itearn = .m if s`wavenum'itmain==.m | s`wavenum'itearn==.m
replace s`wavenum'itearn = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = s`wavenum'itmain + s`wavenum'itsec if !mi(s`wavenum'itmain) & !mi(s`wavenum'itsec)
label variable s`wavenum'itearn "s`wavenum'itearn:w`wavenum' income: s employment earnings (after tax)"

***Employment Earnings Flag***
*wave 7 respondent earnings flag
gen r`wavenum'itifearn = .
combine_inc_flags2 thp_r_t oj_r_t, result(r`wavenum'itifearn)
label variable r`wavenum'itifearn "r`wavenum'itifearn:w`wavenum' impflag: r employment earnings"
label values r`wavenum'itifearn incflag

*wave 7 spouse earnings flag
gen s`wavenum'itifearn = .
combine_inc_flags2 thp_p_t oj_p_t, result(s`wavenum'itifearn)
label variable s`wavenum'itifearn "s`wavenum'itifearn:w`wavenum' impflag: s employment earnings"
label values s`wavenum'itifearn incflag

*check 

*drop intermediate variables
drop r`wavenum'itmain 
drop s`wavenum'itmain
drop r`wavenum'itsec
drop s`wavenum'itsec

***Self-Employment Earnings***
*wave 7 household self-employment earnings before tax
gen h`wavenum'isemp = .
replace h`wavenum'isemp = .m if (mi(sedraw_bu_i) | mi(netprof_bu_i)) & inw`wavenum'==1
replace h`wavenum'isemp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = (sedraw_bu_i + netprof_bu_i)*52 if !mi(sedraw_bu_i) & !mi(netprof_bu_i)
label variable h`wavenum'isemp "h`wavenum'isemp:w`wavenum' income: self-employ earnings (before tax)"

***Self-Employment Earnings Flag***
*wave 7 household self-employment earnings flag
gen h`wavenum'iifsemp = .
combine_inc_flags2 sedraw_bu_t netprof_bu_t, result(h`wavenum'iifsemp)
label variable h`wavenum'iifsemp "h`wavenum'iifsemp:w`wavenum' impflag: self-employ earnings"
label values h`wavenum'iifsemp incflag

*check

***Rental Income from Other Property***
*wave 7 household rental income from other property after tax
gen h`wavenum'itrent = .
replace h`wavenum'itrent = .m if mi(homei_bu_i) & inw`wavenum'==1
replace h`wavenum'itrent = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = homei_bu_i*52 if !mi(homei_bu_i)
label variable h`wavenum'itrent "h`wavenum'itrent:w`wavenum' income: rental income from other property (after tax)"

***Rental Income from Other Property Flag***
*wave 7 household rental income from other property flag
gen h`wavenum'itifrent = .
combine_inc_flags2 homei_bu_t, result(h`wavenum'itifrent)
label variable h`wavenum'itifrent "h`wavenum'itifrent:w`wavenum' impflag: rental income from other property"
label values h`wavenum'itifrent incflag

*check

***Interest Income from Financial Assets***
*wave 7 household interest income from financial assets after tax
gen h`wavenum'ittrest = .
replace h`wavenum'ittrest = .m if (mi(farmi_bu_i) | mi(savei_bu_i) | mi(isai_bu_i) | mi(tessai_bu_i) | ///
		mi(nsavi_bu_i) | mi(pepi_bu_i) | mi(sharesi_bu_i) | mi(prbondsi_bu_i) | mi(trustsi_bu_i) | ///
		mi(bondsi_bu_i) | mi(othsavi_bu_i)) & inw`wavenum'==1
replace h`wavenum'ittrest = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = (farmi_bu_i + savei_bu_i + isai_bu_i + tessai_bu_i + nsavi_bu_i ///
		+ pepi_bu_i + sharesi_bu_i + prbondsi_bu_i + trustsi_bu_i + bondsi_bu_i + othsavi_bu_i)*52 ///
		if !mi(farmi_bu_i) & !mi(savei_bu_i) & !mi(isai_bu_i) & !mi(tessai_bu_i) & !mi(nsavi_bu_i) ///
		 & !mi(pepi_bu_i) & !mi(sharesi_bu_i) & !mi(prbondsi_bu_i) & !mi(trustsi_bu_i) & !mi(bondsi_bu_i) & !mi(othsavi_bu_i)
label variable h`wavenum'ittrest "h`wavenum'ittrest:w`wavenum' income: interest income from financial assets (after tax)"

***Interest Income from Financial Assets Flag***
*wave 7 household interest income from financial assets flag
gen h`wavenum'ittfrest = .
combine_inc_flags2 farmi_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
		nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t, result(h`wavenum'ittfrest)
label variable h`wavenum'ittfrest "h`wavenum'ittfrest:w`wavenum' impflag: interest income from financial assets"
label values h`wavenum'ittfrest incflag

*check

***Capital Income***
*wave 7 household capital income
gen h`wavenum'icap = .
replace h`wavenum'icap = .m if h`wavenum'isemp==.m | h`wavenum'itrent==.m | h`wavenum'ittrest==.m
replace h`wavenum'icap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'icap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'icap = h`wavenum'isemp + h`wavenum'itrent + h`wavenum'ittrest ///
		 if !mi(h`wavenum'isemp) & !mi(h`wavenum'itrent) & !mi(h`wavenum'ittrest)
label variable h`wavenum'icap "h`wavenum'icap:w`wavenum' income: couple level capital income"

*wave 7 household capital income imputation flag
gen h`wavenum'ifcap = .
combine_inc_flags2 sedraw_bu_t homei_bu_t farmi_bu_t netprof_bu_t savei_bu_t isai_bu_t ///
		tessai_bu_t nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t othsavi_bu_t, result(h`wavenum'ifcap)
label variable h`wavenum'ifcap "h`wavenum'ifcap:w`wavenum' impflag: couple level capital income"
label values h`wavenum'ifcap incflag

*wave 7 household capital income tax flag
gen h`wavenum'itfcap = .
replace h`wavenum'itfcap = .m if h`wavenum'isemp == .m
replace h`wavenum'itfcap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'itfcap = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'itfcap "h`wavenum'itfcap:w`wavenum' taxflag: couple level capital income"
label values h`wavenum'itfcap taxflag

*check

***Income from Employer/Private Pension & Annuity***
*wave 7 respondent income from pension & annuity
gen r`wavenum'itpena = .
replace r`wavenum'itpena = .m if mi(ppinc_r_s) & inw`wavenum'==1 
replace r`wavenum'itpena = ppinc_r_s*52 if !mi(ppinc_r_s)
label variable r`wavenum'itpena "r`wavenum'itpena:w`wavenum' income: r pension + annuity (after tax)"

*wave 7 spouse income from pension & annuity
gen s`wavenum'itpena = .
replace s`wavenum'itpena = .m if mi(ppinc_p_s) & inw`wavenum'==1
replace s`wavenum'itpena = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = ppinc_p_s*52 if !mi(ppinc_p_s)
label variable s`wavenum'itpena "s`wavenum'itpena:w`wavenum' income: s pension + annuity (after tax)"

***Income from Employer/Private Pension & Annuity Flag***
*wave 7 respondent income from pension & annuity flag
gen r`wavenum'itifpena = .
combine_inc_flags2 ppinc_r_t, result(r`wavenum'itifpena)
label variable r`wavenum'itifpena "r`wavenum'itifpena:w`wavenum' impflag: r pension + annuity"
label values r`wavenum'itifpena incflag

*wave 7 spouse income from pension & annuity flag
gen s`wavenum'itifpena = .
combine_inc_flags2 ppinc_p_t, result(s`wavenum'itifpena)
label variable s`wavenum'itifpena "s`wavenum'itifpena:w`wavenum' impflag: s pension + annuity"
label values s`wavenum'itifpena incflag

*check 

***Individual Disability Pension***
*wave 7 respondent individual disability pension
gen r`wavenum'issdi = .
replace r`wavenum'issdi = .m if (mi(icb_r_i) | mi(sda_r_i) | mi(attall_r_i) | mi(dla_r_i) | ///
		mi(indinj_r_i) | mi(carers_r_i)) & inw`wavenum'==1 
replace r`wavenum'issdi = (icb_r_i + sda_r_i + attall_r_i + dla_r_i + indinj_r_i + carers_r_i)*52 ///
		if !mi(icb_r_i) & !mi(sda_r_i) & !mi(attall_r_i) & !mi(dla_r_i) & !mi(indinj_r_i) & !mi(carers_r_i)
replace r`wavenum'issdi = .t if (r`wavenum'issdi > 100000 & !missing(r`wavenum'issdi))
label variable r`wavenum'issdi "r`wavenum'issdi:w`wavenum' income: r public disability pension"

*wave 7 spouse individual disability pension
gen s`wavenum'issdi = .
replace s`wavenum'issdi = .m if (mi(icb_p_i) | mi(sda_p_i) | mi(attall_p_i) | mi(dla_p_i) | ///
		mi(indinj_p_i) | mi(carers_p_i)) & inw`wavenum'==1 
replace s`wavenum'issdi = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = (icb_p_i + sda_p_i + attall_p_i + dla_p_i + indinj_p_i + carers_p_i)*52 ///
		if !mi(icb_p_i) & !mi(sda_p_i) & !mi(attall_p_i) & !mi(dla_p_i) & !mi(indinj_p_i) & !mi(carers_p_i)
replace s`wavenum'issdi = .t if (s`wavenum'issdi > 100000 & !missing(s`wavenum'issdi))
label variable s`wavenum'issdi "s`wavenum'issdi:w`wavenum' income: s public disability pension"

***Individual Disability Pension Flag***
*wave 7 respondent individual disability pension flag
gen r`wavenum'ifssdi = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t, result(r`wavenum'ifssdi)
label variable r`wavenum'ifssdi "r`wavenum'ifssdi:w`wavenum' impflag: r public disability pension"
label values r`wavenum'ifssdi incflag

*wave 7 spouse individual disability pension flag
gen s`wavenum'ifssdi = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t, result(s`wavenum'ifssdi)
label variable s`wavenum'ifssdi "s`wavenum'ifssdi:w`wavenum' impflag: s public disability pension"
label values s`wavenum'ifssdi incflag

*check

***Individual Income from Public Pension without Disability***
*wave 7 respondent income from public pension without disability
gen r`wavenum'isret = .
replace r`wavenum'isret = .m if (mi(spen_r_i) | mi(widpen_r_i)) & inw`wavenum'==1 
replace r`wavenum'isret = (spen_r_i + widpen_r_i)*52 if !mi(spen_r_i) & !mi(widpen_r_i)
replace r`wavenum'isret = .t if (r`wavenum'isret > 100000 & !missing(r`wavenum'isret))
label variable r`wavenum'isret "r`wavenum'isret:w`wavenum' income: r public old-age pension"

*wave 7 spouse income from public pension without disability
gen s`wavenum'isret = .
replace s`wavenum'isret = .m if (mi(spen_p_i) | mi(widpen_p_i)) & inw`wavenum'==1
replace s`wavenum'isret = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'isret = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'isret = (spen_p_i + widpen_p_i)*52 if !mi(spen_p_i) & !mi(widpen_p_i)
replace s`wavenum'isret = .t if (s`wavenum'isret > 100000 & !missing(s`wavenum'isret))
label variable s`wavenum'isret "s`wavenum'isret:w`wavenum' income: s public old-age pension"

***Individual Income from Public Pension without Disability Flag***
*wave 7 respondent income public pension without disability flag
gen r`wavenum'ifsret = .
combine_inc_flags2 spen_r_t widpen_r_t, result(r`wavenum'ifsret)
label variable r`wavenum'ifsret "r`wavenum'ifsret:w`wavenum' incflag: r public old-age pension"
label values r`wavenum'ifsret incflag

*wave 7 spouse income from public pension without disability flag
gen s`wavenum'ifsret = .
combine_inc_flags2 spen_p_t widpen_p_t, result(s`wavenum'ifsret)
label variable s`wavenum'ifsret "s`wavenum'ifsret:w`wavenum' incflag: s public old-age pension"
label values s`wavenum'ifsret incflag

*check 


***Main Public Pension***
*wave 7 respondent main public pension
gen r`wavenum'ipubpen = .
replace r`wavenum'ipubpen = .m if r`wavenum'issdi==.m | r`wavenum'isret==.m 
replace r`wavenum'ipubpen = .t if r`wavenum'issdi==.t | r`wavenum'isret==.t
replace r`wavenum'ipubpen = r`wavenum'issdi + r`wavenum'isret if !mi(r`wavenum'issdi) & !mi(r`wavenum'isret)
label variable r`wavenum'ipubpen "r`wavenum'ipubpen:w`wavenum' income: r public pensions"

*wave 7 spouse main public pension
gen s`wavenum'ipubpen = .
replace s`wavenum'ipubpen = .m if s`wavenum'issdi==.m | s`wavenum'isret==.m
replace s`wavenum'ipubpen = .t if s`wavenum'issdi==.t | s`wavenum'isret==.t
replace s`wavenum'ipubpen = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = s`wavenum'issdi + s`wavenum'isret if !mi(s`wavenum'issdi) & !mi(s`wavenum'isret)
label variable s`wavenum'ipubpen "s`wavenum'ipubpen:w`wavenum' income: s public pensions"

***Main Public Pension Flag***
*wave 7 respondent main public pension flag
gen r`wavenum'ifpubpen = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t spen_r_t widpen_r_t, result(r`wavenum'ifpubpen)
label variable r`wavenum'ifpubpen "r`wavenum'ifpubpen:w`wavenum' impflag: r public pensions"
label values r`wavenum'ifpubpen incflag

*wave 7 spouse main public pension flag
gen s`wavenum'ifpubpen = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t spen_p_t widpen_p_t, result(s`wavenum'ifpubpen)
label variable s`wavenum'ifpubpen "s`wavenum'ifpubpen:w`wavenum' impflag: s public pensions"
label values s`wavenum'ifpubpen incflag

***War Pension***
*wave 7 respondent war pension
gen r`wavenum'ivet = .
replace r`wavenum'ivet = .m if mi(war_r_i) & inw`wavenum'==1 
replace r`wavenum'ivet = war_r_i*52 if !mi(war_r_i)
label variable r`wavenum'ivet "r`wavenum'ivet:w`wavenum' income: r war pension"

*wave 7 spouse war pension
gen s`wavenum'ivet = .
replace s`wavenum'ivet = .m if mi(war_p_i) & inw`wavenum'==1
replace s`wavenum'ivet = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = war_p_i*52 if !mi(war_p_i)
label variable s`wavenum'ivet "s`wavenum'ivet:w`wavenum' income: s war pension"

***War Pension Flag***
*wave 7 respondent war pension flag
gen r`wavenum'ifvet = .
combine_inc_flags2 war_r_t, result(r`wavenum'ifvet)
label variable r`wavenum'ifvet "r`wavenum'ifvet:w`wavenum' impflag: r war pension"
label values r`wavenum'ifvet incflag

*wave 7 spouse war pension flag
gen s`wavenum'ifvet = .
combine_inc_flags2 war_p_t, result(s`wavenum'ifvet)
label variable s`wavenum'ifvet "s`wavenum'ifvet:w`wavenum' impflag: s war pension"
label values s`wavenum'ifvet incflag

*check

***Income Support***
*wave 7 respondent income support
gen r`wavenum'iwelf = .
replace r`wavenum'iwelf = .m if (mi(is_r_i) | mi(wtc_r_i) | mi(gall_r_i) | mi(cb_r_i) | ///
		mi(ctc_r_i) | mi(pc_r_i)) & inw`wavenum'==1 
replace r`wavenum'iwelf = (is_r_i + wtc_r_i + gall_r_i + cb_r_i + ctc_r_i + pc_r_i)*52 ///
		if !mi(is_r_i) & !mi(wtc_r_i) & !mi(gall_r_i) & !mi(cb_r_i) & !mi(ctc_r_i) & !mi(pc_r_i)
replace r`wavenum'iwelf = .t if (r`wavenum'iwelf > 100000 & !missing(r`wavenum'iwelf))
label variable r`wavenum'iwelf "r`wavenum'iwelf:w`wavenum' income: r income support"

*wave 7 spouse income support
gen s`wavenum'iwelf = .
replace s`wavenum'iwelf = .m if (mi(is_p_i) | mi(wtc_p_i) | mi(gall_p_i) | mi(cb_p_i) | ///
		mi(ctc_p_i) | mi(pc_p_i)) & inw`wavenum'==1 
replace s`wavenum'iwelf = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = (is_p_i + wtc_p_i + gall_p_i + cb_p_i + ctc_p_i + pc_p_i)*52 ///
		if !mi(is_p_i) & !mi(wtc_p_i) & !mi(gall_p_i) & !mi(cb_p_i) & !mi(ctc_p_i) & !mi(pc_p_i)
replace s`wavenum'iwelf = .t if (s`wavenum'iwelf > 100000 & !missing(s`wavenum'iwelf))
label variable s`wavenum'iwelf "s`wavenum'iwelf:w`wavenum' income: s income support"

***Income Support Flag***
*wave 7 respondent income support flag
gen r`wavenum'ifwelf = .
combine_inc_flags2 is_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifwelf)
label variable r`wavenum'ifwelf "r`wavenum'ifwelf:w`wavenum' impflag: r income support"
label values r`wavenum'ifwelf incflag

*wave 7 spouse income support flag
gen s`wavenum'ifwelf = .
combine_inc_flags2 is_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifwelf)
label variable s`wavenum'ifwelf "s`wavenum'ifwelf:w`wavenum' impflag: s income support"
label values s`wavenum'ifwelf incflag

*check

***Worker's Comp/Short-Term Disability***
*wave 7 respondent worker's comp
gen r`wavenum'iwcmp = .
replace r`wavenum'iwcmp = .m if mi(ssp_r_i) & inw`wavenum'==1 
replace r`wavenum'iwcmp = ssp_r_i*52 if !mi(ssp_r_i)
label variable r`wavenum'iwcmp "r`wavenum'iwcmp:w`wavenum' income: r workers comp"

*wave 7 spouse worker's comp
gen s`wavenum'iwcmp = .
replace s`wavenum'iwcmp = .m if mi(ssp_p_i) & inw`wavenum'==1
replace s`wavenum'iwcmp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = ssp_p_i*52 if !mi(ssp_p_i)
label variable s`wavenum'iwcmp "s`wavenum'iwcmp:w`wavenum' income: s workers comp"

***Worker's Comp/Short-Term Disability Flag***
*wave 7 respondent worker's comp flag
gen r`wavenum'ifwcmp = .
combine_inc_flags2 ssp_r_t, result(r`wavenum'ifwcmp)
label variable r`wavenum'ifwcmp "r`wavenum'ifwcmp:w`wavenum' impflag: r workers comp"
label values r`wavenum'ifwcmp incflag

*wave 7 spouse worker's comp flag
gen s`wavenum'ifwcmp = .
combine_inc_flags2 ssp_p_t, result(s`wavenum'ifwcmp)
label variable s`wavenum'ifwcmp "s`wavenum'ifwcmp:w`wavenum' impflag: s workers comp"
label values s`wavenum'ifwcmp incflag

*check

***Unemployment Transfers***
*wave 7 respondent unemployment transfers
gen r`wavenum'iunem = .
replace r`wavenum'iunem = .m if mi(jsa_r_i) & inw`wavenum'==1
replace r`wavenum'iunem = jsa_r_i*52  if !mi(jsa_r_i)
replace r`wavenum'iunem = .t if (r`wavenum'iunem > 10000 & !missing(r`wavenum'iunem))
label variable r`wavenum'iunem "r`wavenum'iunem:w`wavenum' income: r unemployment"

*wave 7 spouse unemployment transfers
gen s`wavenum'iunem = .
replace s`wavenum'iunem = .m if mi(jsa_p_i) & inw`wavenum'==1
replace s`wavenum'iunem = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = jsa_p_i*52  if !mi(jsa_p_i)
replace s`wavenum'iunem = .t if (s`wavenum'iunem > 10000 & !missing(s`wavenum'iunem))
label variable s`wavenum'iunem "s`wavenum'iunem:w`wavenum' income: s unemployment"

***Unemployment Transfers Flag***
*wave 7 respondent unemployment transfers flag
gen r`wavenum'ifunem = .
combine_inc_flags2 jsa_r_t, result(r`wavenum'ifunem)
label variable r`wavenum'ifunem "r`wavenum'ifunem:w`wavenum' impflag: r unemployment"
label values r`wavenum'ifunem incflag

*wave 7 spouse unemployment transfers flag
gen s`wavenum'ifunem = .
combine_inc_flags2 jsa_p_t, result(s`wavenum'ifunem)
label variable s`wavenum'ifunem "s`wavenum'ifunem:w`wavenum' impflag: s unemployment"
label values s`wavenum'ifunem incflag

*check

***Other Government Transfers***
*wave 7 respondent other government transfers
gen r`wavenum'igxfr = .
replace r`wavenum'igxfr = .m if r`wavenum'ivet==.m | r`wavenum'iwelf==.m | r`wavenum'iwcmp==.m | r`wavenum'iunem==.m
replace r`wavenum'igxfr = .t if r`wavenum'ivet==.t | r`wavenum'iwelf==.t | r`wavenum'iwcmp==.t | r`wavenum'iunem==.t
replace r`wavenum'igxfr = r`wavenum'ivet + r`wavenum'iwelf + r`wavenum'iwcmp + r`wavenum'iunem ///
		if !mi(r`wavenum'ivet) & !mi(r`wavenum'iwelf) & !mi(r`wavenum'iwcmp) & !mi(r`wavenum'iunem)
label variable r`wavenum'igxfr "r`wavenum'igxfr:w`wavenum' income: r other gov transfers"

*wave 7 spouse other government transfers
gen s`wavenum'igxfr = .
replace s`wavenum'igxfr = .m if s`wavenum'ivet==.m | s`wavenum'iwelf==.m | s`wavenum'iwcmp==.m | s`wavenum'iunem==.m
replace s`wavenum'igxfr = .t if s`wavenum'ivet==.t | s`wavenum'iwelf==.t | s`wavenum'iwcmp==.t | s`wavenum'iunem==.t
replace s`wavenum'igxfr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = s`wavenum'ivet + s`wavenum'iwelf + s`wavenum'iwcmp + s`wavenum'iunem ///
		if !mi(s`wavenum'ivet) & !mi(s`wavenum'iwelf) & !mi(s`wavenum'iwcmp) & !mi(s`wavenum'iunem)
label variable s`wavenum'igxfr "s`wavenum'igxfr:w`wavenum' income: s other gov transfers"

***Other Government Transfers Flag***
*wave 7 respondent other government transfers flag
gen r`wavenum'ifgxfr = .
combine_inc_flags2 war_r_t is_r_t ssp_r_t jsa_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifgxfr)
label variable r`wavenum'ifgxfr "r`wavenum'ifgxfr:w`wavenum' impflag: r other gov transfers"
label values r`wavenum'ifgxfr incflag

*wave 7 spouse other government transfers flag
gen s`wavenum'ifgxfr = .
combine_inc_flags2 war_p_t is_p_t ssp_p_t jsa_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifgxfr)
label variable s`wavenum'ifgxfr "s`wavenum'ifgxfr:w`wavenum' impflag: s other gov transfers"
label values s`wavenum'ifgxfr incflag

drop r`wavenum'ivet r`wavenum'iwelf r`wavenum'iwcmp r`wavenum'iunem 
drop s`wavenum'ivet s`wavenum'iwelf s`wavenum'iwcmp s`wavenum'iunem

drop r`wavenum'ifvet r`wavenum'ifwelf r`wavenum'ifwcmp r`wavenum'ifunem 
drop s`wavenum'ifvet s`wavenum'ifwelf s`wavenum'ifwcmp s`wavenum'ifunem

*check

***Other Household Income***
*wave 7 other household income
gen h`wavenum'iothr = .
replace h`wavenum'iothr = .m if (mi(othpay_r_i) | mi(othpay_p_i)) & inw`wavenum'==1
replace h`wavenum'iothr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = othpay_r_i*52 if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(othpay_r_i)
replace h`wavenum'iothr = (othpay_r_i + othpay_p_i)*52 if inlist(r`wavenum'mstat,1,3) & !mi(othpay_r_i) & !mi(othpay_p_i)
replace h`wavenum'iothr = .t if (h`wavenum'iothr > 100000 & !missing(h`wavenum'iothr))
label variable h`wavenum'iothr "h`wavenum'iothr:w`wavenum' income: other income"

***Other Household Income Flag***
*wave 7 other household income flag
gen h`wavenum'ifothr = .
combine_inc_flags2 othpay_r_t othpay_p_t, result(h`wavenum'ifothr)
label variable h`wavenum'ifothr "h`wavenum'ifothr:w`wavenum' impflag: other income"
label values h`wavenum'ifothr incflag

*check

***Total Family Income***
*wave 7 household total family income
gen h`wavenum'itot = .
replace h`wavenum'itot = .m if r`wavenum'itearn==.m | s`wavenum'itearn==.m | h`wavenum'icap==.m | ///
		r`wavenum'itpena==.m | s`wavenum'itpena==.m | r`wavenum'ipubpen==.m | s`wavenum'ipubpen==.m | ///
		r`wavenum'igxfr==.m | s`wavenum'igxfr==.m | h`wavenum'iothr==.m
replace h`wavenum'itot = .t if r`wavenum'itearn==.t | s`wavenum'itearn==.t | h`wavenum'icap==.t | ///
		r`wavenum'itpena==.t | s`wavenum'itpena==.t | r`wavenum'ipubpen==.t | s`wavenum'ipubpen==.t | ///
		r`wavenum'igxfr==.t | s`wavenum'igxfr==.t | h`wavenum'iothr==.t
replace h`wavenum'itot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itot = r`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena + r`wavenum'ipubpen ///
												+ r`wavenum'igxfr + h`wavenum'iothr if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(r`wavenum'itearn) ///
										& !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(r`wavenum'ipubpen) & !mi(r`wavenum'igxfr) ///
									  & !mi(h`wavenum'iothr)
replace h`wavenum'itot = r`wavenum'itearn + s`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena /// 
												+ s`wavenum'itpena + r`wavenum'ipubpen + s`wavenum'ipubpen + r`wavenum'igxfr /// 
												+ s`wavenum'igxfr + h`wavenum'iothr if inlist(r`wavenum'mstat,1,3) & !mi(r`wavenum'itearn) ///
										& !mi(s`wavenum'itearn) & !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(s`wavenum'itpena) ///
										& !mi(r`wavenum'ipubpen) & !mi(s`wavenum'ipubpen) & !mi(r`wavenum'igxfr) & !mi(s`wavenum'igxfr) ///
										& !mi(h`wavenum'iothr)
replace h`wavenum'itot = .t if (h`wavenum'itot > 900000 & !missing(h`wavenum'itot))
label variable h`wavenum'itot "h`wavenum'itot:w`wavenum' income: total couple level income"

*wave 7 household total family income imputation flag
gen h`wavenum'iftot = .
combine_inc_flags9 r`wavenum'itifearn s`wavenum'itifearn h`wavenum'ifcap r`wavenum'itifpena s`wavenum'itifpena r`wavenum'ifpubpen s`wavenum'ifpubpen r`wavenum'ifgxfr s`wavenum'ifgxfr h`wavenum'ifothr, result(h`wavenum'iftot)
label variable h`wavenum'iftot "h`wavenum'iftot:w`wavenum' impflag: total couple level income"
label values h`wavenum'iftot incflag

*wave 7 household total family income tax flag
gen h`wavenum'ifttot = .
replace h`wavenum'ifttot = .m if h`wavenum'isemp==.m
replace h`wavenum'ifttot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'ifttot = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'ifttot "h`wavenum'ifttot:w`wavenum' taxflag: total couple level income"
label values h`wavenum'ifttot taxflag

*check 

********Consumption*********
***monthly Food Consumption In House***
*wave 7 household monthly food consumption in house
gen hh`wavenum'cfoodi = .
replace hh`wavenum'cfoodi = .m if inlist(HoFood,-1,-3)
replace hh`wavenum'cfoodi = .p if askpx == 1
replace hh`wavenum'cfoodi = .d if HoFood == -8
replace hh`wavenum'cfoodi = .r if HoFood == -9
replace hh`wavenum'cfoodi = HoFood if inrange(HoFood,0,2000)
label variable hh`wavenum'cfoodi "hh`wavenum'cfoodi:w`wavenum' hhold monthly food consumption in house" 

***monthly Food Consumption Outside House***
*wave 7 household monthly food consumption outside house
gen hh`wavenum'cfoodo1m = .
replace hh`wavenum'cfoodo1m = .m if inlist(HoOutf,-1,-3)
replace hh`wavenum'cfoodo1m = .p if askpx == 1
replace hh`wavenum'cfoodo1m = .d if HoOutf == -8
replace hh`wavenum'cfoodo1m = .r if HoOutf == -9
replace hh`wavenum'cfoodo1m = HoOutf if inrange(HoOutf,0,2000)
label variable hh`wavenum'cfoodo1m "hh`wavenum'cfoodo1m:w`wavenum' hhold monthly food consumption outside house"

***monthly Total Food Consumption***
*wave 7 household total food consumption
gen hh`wavenum'cfood1m = .
replace hh`wavenum'cfood1m = .m if inlist(HoFood,-1,-3) | inlist(HoOutf,-1,-3)
replace hh`wavenum'cfood1m = .p if askpx == 1
replace hh`wavenum'cfood1m = .d if HoFood == -8 | HoOutf == -8
replace hh`wavenum'cfood1m = .r if HoFood == -9 | HoOutf == -9
replace hh`wavenum'cfood1m =(hh`wavenum'cfoodi * 4.34524) + hh`wavenum'cfoodo1m if inrange(hh`wavenum'cfoodi,0,2000) & inrange(hh`wavenum'cfoodo1m,0,2000)
label variable hh`wavenum'cfood1m "hh`wavenum'cfood1m:w`wavenum' hhold total monthly food consumption"

***Monthly Clothing Expenditure***
*wave 7 household monthly clothing expenditure
gen hh`wavenum'cclo1m = .
replace hh`wavenum'cclo1m = .m if inlist(HoCl,-1,-3)
replace hh`wavenum'cclo1m = .p if askpx == 1
replace hh`wavenum'cclo1m = .d if HoCl == -8
replace hh`wavenum'cclo1m = .r if HoCl == -9
replace hh`wavenum'cclo1m = HoCl if inrange(HoCl,0,5000)
label variable hh`wavenum'cclo1m "hh`wavenum'cclo1m:w`wavenum' hhold monthly clothing exp"

***Monthly Leisure Activities Expenditure***
*wave 7 household monthly leisure activity expenditure
gen hh`wavenum'clei1m = .
replace hh`wavenum'clei1m = .m if inlist(HoLeis,-1,-3)
replace hh`wavenum'clei1m = .p if askpx == 1
replace hh`wavenum'clei1m = .d if HoLeis == -8
replace hh`wavenum'clei1m = .r if HoLeis == -9
replace hh`wavenum'clei1m = HoLeis if inrange(HoLeis,0,10000)
label variable hh`wavenum'clei1m "hh`wavenum'clei1m:w`wavenum' hhold monthly leisure exp"

***Monthly Rent Expenditure***
*wave 7 household monthly rent
gen hh`wavenum'crent = .
replace hh`wavenum'crent = .m if HoRent == -1 | inlist(HoPeri,-1,-2,-3,95,96) | HoTenu == -1
replace hh`wavenum'crent = .p if askpx == 1
replace hh`wavenum'crent = .d if HoRent == -8 | HoPeri == -8 | HoTenu == -8
replace hh`wavenum'crent = .r if HoRent == -9 | HoPeri == -9 | HoTenu == -9
replace hh`wavenum'crent = 0 if inlist(HoTenu,1,2,5,6) | HoPeri == 97 | HoRent == 99997
replace hh`wavenum'crent = HoRent if inlist(HoPeri,4,5) & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent*4.348125 if HoPeri==1 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent*2.1740625 if HoPeri==2 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent*1.449374 if HoPeri==3 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/2 if HoPeri==7 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/1.5 if HoPeri==8 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/1.333 if HoPeri==9 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/1.2 if HoPeri==10 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/3 if HoPeri==13 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/6 if HoPeri==26 & inrange(HoRent,0,100000)
replace hh`wavenum'crent = HoRent/12 if HoPeri==52 & inrange(HoRent,0,100000)
label variable hh`wavenum'crent "hh`wavenum'crent:w`wavenum' hhold monthly rent"

***Monthly Utility/Fuel Expenditure***
*wave 7 household monthly gas & electricity
gen nogas = 1 if inlist(hofuelga,-1,0)
gen noelec = 1 if inlist(hofuelel,-1,0)
gen nocoal = 1 if inlist(hofuelco,-1,0)
gen nopar = 1 if inlist(hofuelpa,-1,0)
gen nooil = 1 if inlist(hofueloi,-1,0)
gen nowood = 1 if inlist(hofuelwo,-1,0)
gen nooth = 1 if inlist(hofuel95,-1,0)

*gas and electric by direct debit
gen gseld = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFDm, result(gseld)
replace gseld = 0 if (nogas == 1 | noelec == 1 ) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,2,3,4,5,6,7,95) | HoFDm == -3 
replace gseld = HoFDm if inrange(HoFDm,0,1000)

*gas and electric by bill
gen gselb = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFBmw HoFBms HoFBqw HoFBqs, result(gselb)
replace gselb = 0 if (nogas == 1 |  noelec == 1) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,1,3,4,5,6,7,95) | HoFBmw == -3 | HoFBms == -3 | HoFBqw == -3 | HoFBqs == -3
replace gselb = (HoFBmw + HoFBms)/2 if inrange(HoFBmw,0,1000) & inrange(HoFBms,0,1000)
replace gselb = (HoFBqw + HoFBqs)/2/3 if inrange(HoFBqw,0,1000) & inrange(HoFBqs,0,1000)

*gas and electric by prepay
gen gselp = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFPw HoFPs, result(gselp)
replace gselp = 0 if (nogas == 1 |  noelec == 1) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,1,2,4,5,6,7,95) | HoFPw == -3 | HoFPs == -3
replace gselp = (HoFPw + HoFPs)/2*4.348125 if inrange(HoFPw,0,500) & inrange(HoFPs,0,500)

*gas and electric by other payment method
gen gselo = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFOw HoFOs, result(gselo)
replace gselo = 0 if (nogas == 1 |  noelec == 1) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,1,2,3,7) | HoFOw == -3 | HoFOs == -3
replace gselo = (HoFOw + HoFOs)/2*4.348125 if inrange(HoFOw,0,500) & inrange(HoFOs,0,500)

*gas and electric by staywarm scheme
gen gsels = .
missing_w2 hofuelga hofuelel HoFSup HoFTog HoFPay HoFD HoFSw HoFSm HoFSq, result(gsels)
replace gsels = 0 if (nogas == 1 |  noelec == 1) | HoFSup == 2 | HoFTog == 2 | inlist(HoFPay,1,2,3,4,5,6,95) | HoFSw == -3 | HoFSm == -3 | HoFSq == -3
replace gsels = HoFSw*4.348125 if inrange(HoFSw,0,500)
replace gsels = HoFSm if inrange(HoFSm,0,500)
replace gsels = HoFSq/3 if inrange(HoFSq,0,500)

*all gas and electric
gen gsel = .
missing_H gseld gselb gselp gselo gsels, result(gsel)
replace gsel = gseld + gselb + gselp + gselo + gsels if !mi(gseld) & !mi(gselb) & !mi(gselp) & !mi(gselo) & !mi(gsels)

drop gseld gselb gselp gselo gsels

*wave 7 household monthly gas
*gas by direct debit
gen gasd = .
missing_w2 hofuelga HoFTog HoGPay HoGD HoGDm HoGDq, result(gasd)
replace gasd = 0 if nogas == 1 | HoFTog == 1 | inlist(HoGPay,2,3,4,5,6,95) | HoGDm == -3 | HoGDq == -3
replace gasd = HoGDm if inrange(HoGDm,0,500)
replace gasd = HoGDq/3 if inrange(HoGDq,0,500)

*gas by bill
gen gasb = .
missing_w2 hofuelga HoFTog HoGPay HoGBp HoGBmw HoGBms HoGBqw HoGBqs, result(gasb)
replace gasb = 0 if nogas == 1 | HoFTog == 1 | inlist(HoGPay,1,3,4,5,6,95) | HoGBmw == -3 | HoGBms == -3 | HoGBqw == -3 | HoGBqs == -3
replace gasb = (HoGBmw + HoGBms)/2 if inrange(HoGBmw,0,500) & inrange(HoGBms,0,500)
replace gasb = (HoGBqw + HoGBqs)/2/3 if inrange(HoGBqw,0,500) & inrange(HoGBqs,0,500)

*gas by prepay
gen gasp = .
missing_w2 hofuelga HoFTog HoGPay HoGPw HoGPs, result(gasp)
replace gasp = 0 if nogas == 1 | HoFTog == 1 | inlist(HoGPay,1,2,4,5,6,95) | HoGPw == -3 | HoGPs == -3
replace gasp = (HoGPw + HoGPs)/2*4.348125 if inrange(HoGPw,0,500) & inrange(HoGPs,0,500)

*gas by other paymenet method
gen gaso=.
missing_w2 hofuelga HoFTog HoGPay HoGOw HoGOs, result(gaso)
replace gaso = 0 if nogas == 1 | HoFTog == 1 | inlist(HoGPay,1,2,3) | HoGOw == -3 | HoGOs == -3
replace gaso = (HoGOw + HoGOs)/2*4.348125 if inrange(HoGOw,0,500) & inrange(HoGOs,0,500)

*all gas
gen gas = .
missing_H gasd gasb gasp gaso, result(gas)
replace gas = gasd + gasb + gasp + gaso if !mi(gasd) & !mi(gasb) & !mi(gasp) & !mi(gaso)

drop gasd gasb gasp gaso

*wave 7 household monthly electricity
*electricity by direct debig
gen elecd = .
missing_w2 hofuelel HoFTog HoEPay HoEDm HoEDq, result(elecd)
replace elecd = 0 if noelec == 1 | HoFTog == 1 | inlist(HoEPay,2,3,4,5,6,95) | HoEDm == -3 | HoEDq == -3
replace elecd = HoEDm if inrange(HoEDm,0,500)
replace elecd = HoEDq/3 if inrange(HoEDq,0,500)

*electricity by bill
gen elecb = .
missing_w2 hofuelel HoFTog HoEPay HoEBmw HoEBms HoEBqw HoEBqs, result(elecb)
replace elecb = 0 if noelec == 1 | HoFTog == 1 | inlist(HoEPay,1,3,4,5,6,95) | HoEBmw == -3 | HoEBms == -3 | HoEBqw == -3 | HoEBqs == -3
replace elecb = (HoEBmw + HoEBms)/2 if inrange(HoEBmw,0,500) & inrange(HoEBms,0,500)
replace elecb = (HoEBqw + HoEBqs)/2/3 if inrange(HoEBqw,0,500) & inrange(HoEBqs,0,500)

*electricity by prepay
gen elecp =.
missing_w2 hofuelel HoFTog HoEPay HoEPw HoEPs, result(elecp)
replace elecp = 0 if noelec == 1 | HoFTog == 1 | inlist(HoEPay,1,2,4,5,6,95) | HoEPw == -3 | HoEPs == -3
replace elecp = (HoEPw + HoEPs)/2*4.348125 if inrange(HoEPw,0,500) & inrange(HoEPs,0,500)

*electricity by other payment method
gen eleco = .
missing_w2 hofuelel HoFTog HoEPay HoEOw HoEOs, result(eleco)
replace eleco = 0 if noelec == 1 | HoFTog == 1 | inlist(HoEPay,1,2,3) | HoEOw == -3 | HoEOs == -3
replace eleco = (HoEOw + HoEOs)/2*4.348125 if inrange(HoEOw,0,500) & inrange(HoEOs,0,500)

*all electricity
gen elec = .
missing_H elecd elecb elecp eleco, result(elec)
replace elec = elecd + elecb + elecp + eleco if !mi(elecd) & !mi(elecb) & !mi(elecp) & !mi(eleco)

drop elecd elecb elecp eleco

*wave 7 household monthly coal
gen coal = .
missing_w2 hofuelco HoFCw HoFCs, result(coal)
replace coal = 0 if nocoal == 1 | HoFCw == -3 | HoFCs == -3
replace coal = (HoFCw + HoFCs)/2*4.348125 if inrange(HoFCw,0,100) & inrange(HoFCs,0,100)

*wave 7 household monthly paraffin
gen para = .
missing_w2 hofuelpa HoFPGw HoFPGs, result(para)
replace para = 0 if nopar == 1 | HoFPGw == -3 | HoFPGs == -3
replace para = (HoFPGw + HoFPGs)/2*4.348125 if inrange(HoFPGw,0,100) & inrange(HoFPGs,0,100)

*wave 7 household monthly oil
gen oil = .
missing_w2 hofueloi HoFOIw HoFOIs, result(oil)
replace oil = 0 if nooil == 1 | HoFOIw == -3 | HoFOIs == -3
replace oil = (HoFOIw + HoFOIs)/2*4.348125 if inrange(HoFOIw,0,100) & inrange(HoFOIs,0,100)

*wave 7 household monthly wood
gen wood = .
missing_w2 hofuelwo HoFWw HoFWs, result(wood)
replace wood = 0 if nowood == 1 | HoFWw == -3 | HoFWs == -3
replace wood = (HoFWw + HoFWs)/2*4.348125 if inrange(HoFWw,0,100) & inrange(HoFWs,0,100)

*wave 7 household monthly other
gen oth = .
missing_w2 hofuel95 HoFXw HoFXs, result(oth)
replace oth = 0 if nooth == 1 | HoFXw == -3 | HoFXs == -3
replace oth = (HoFXw + HoFXs)/2*4.348125 if inrange(HoFXw,0,100) & inrange(HoFXs,0,100)

drop nogas noelec nocoal nopar nooil nowood nooth 

*wave 7 household utility/fuel
gen hh`wavenum'cutil = .
missing_H gsel gas elec coal para oil wood oth, result(hh`wavenum'cutil)
replace hh`wavenum'cutil = .p if askpx == 1
replace hh`wavenum'cutil = gsel + gas + elec + coal + para + oil + wood + oth if !mi(gsel) & !mi(gas) & !mi(elec) & !mi(coal) & !mi(para) & !mi(oil) & !mi(wood) & !mi(oth)
label variable hh`wavenum'cutil "hh`wavenum'cutil:w`wavenum' hhold monthly utility/fuel"

drop gsel gas elec coal para oil wood oth

***Monthly Total Consumption***
*wave 7 household monthly total consumption
gen hh`wavenum'ctot1m = .
missing_H hh`wavenum'cfood1m hh`wavenum'cclo1m hh`wavenum'clei1m hh`wavenum'crent hh`wavenum'cutil, result(hh`wavenum'ctot1m)
replace hh`wavenum'ctot1m = .p if askpx == 1
replace hh`wavenum'ctot1m = hh`wavenum'cfood1m + hh`wavenum'cclo1m + hh`wavenum'clei1m + hh`wavenum'crent + hh`wavenum'cutil if ///
                    inrange(hh`wavenum'cfood1m,0,15000) & ///
                    inrange(hh`wavenum'cclo1m,0,5000) & ///
                    inrange(hh`wavenum'clei1m,0,10000) & ///
                    inrange(hh`wavenum'crent,0,990000) & ///
                    inrange(hh`wavenum'cutil,0,1000)
label variable hh`wavenum'ctot1m "hh`wavenum'ctot1m:w`wavenum' hhold total monthly consumption"


***drop ELSA wave 7 financial derived file raw variables***
drop `income_w7_fina'

***drop ELSA wave 7 core variables***
drop `income_w7_core'

******************************************************************************************

*set wave number
local wavenum=8

***merge with wave 8 financial derived variables data***
local income_w8_fina thp_r_i oj_r_i sedraw_bu_i ///
                     thp_r_t oj_r_t sedraw_bu_t ///
                     thp_p_i oj_p_i thp_p_t oj_p_t ///
                     ppinc_r_s ppinc_r_t ppinc_p_s ppinc_p_t ///
                     spinc_r_s widpen_r_i ///
                     spinc_r_t widpen_r_t ///
                     spinc_p_s widpen_p_i ///
                     spinc_p_t widpen_p_t ///
                     farmi_bu_i netprof_bu_i homei_bu_i savei_bu_i isai_bu_i tessai_bu_i ///
                     farmi_bu_t netprof_bu_t homei_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
                     nsavi_bu_i pepi_bu_i sharesi_bu_i prbondsi_bu_i trustsi_bu_i bondsi_bu_i othsavi_bu_i ///
                     nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t ///
                     icb_r_i icb_p_i sda_r_i sda_p_i ssp_r_i ssp_p_i attall_r_i attall_p_i dla_r_i dla_p_i ///
                     icb_r_t icb_p_t sda_r_t sda_p_t ssp_r_t ssp_p_t attall_r_t attall_p_t dla_r_t dla_p_t ///
                     indinj_r_i indinj_p_i war_r_i war_p_i carers_r_i carers_p_i is_r_i is_p_i pc_r_i pc_p_i ///
                     indinj_r_t indinj_p_t war_r_t war_p_t carers_r_t carers_p_t is_r_t is_p_t pc_r_t pc_p_t ///
                     wtc_r_i wtc_p_i jsa_r_i jsa_p_i gall_r_i gall_p_i cb_r_i cb_p_i ctc_r_i ctc_p_i ///
                     wtc_r_t wtc_p_t jsa_r_t jsa_p_t gall_r_t gall_p_t cb_r_t cb_p_t ctc_r_t ctc_p_t ///
                     othpay_r_i othpay_p_i ///
                     othpay_r_t othpay_p_t              
merge 1:1 idauniq using "$wave_8_fina", keepusing(`income_w8_fina') nogen

***merge with wave 8 core data***
local income_w8_core hofood hooutf hocl holeis askpx ///
										horent hoperi hotenu hofuelga hofuelel hofuelco hofuelpa hofueloi hofuelwo hofuel95 ///
										hofbqs hofbms hofbqw hofbmw hofd ///
										hofdm hofdq hofbmw hofbqw hofpw hofps hofow hofos hofsw hofsm hofsq ///
										hogdm hogdq  hogbmw hogbms hogbqw hogbqs hogpw hogps hogow hogos ///
										hoedm hoedq hoebmw hoebms hoebqw hoebqs hoepw hoeps hoeow hoeos ///
										hofcw hofcs hofpgw hofpgs hofoiw hofois hofww hofws hofxw hofxs ///
										hofsup hoftog hofpay hofb hofsp hogpay hogd hogbp hoepay
merge 1:1 idauniq using "$wave_8_core", keepusing(`income_w8_core') nogen


***Employment Earnings***
*wave 8 respondent earnings from main job after tax
gen r`wavenum'itmain = .
replace r`wavenum'itmain = .m if mi(thp_r_i) & inw`wavenum'==1 
replace r`wavenum'itmain = thp_r_i*52 if !mi(thp_r_i)

*wave 8 respondent earnings from 2nd job after tax
gen r`wavenum'itsec = .
replace r`wavenum'itsec = .m if mi(oj_r_i) & inw`wavenum'==1 
replace r`wavenum'itsec = oj_r_i*52 if !mi(oj_r_i)

**wave 8 respondent total earnings after tax
egen r`wavenum'itearn = rowtotal(r`wavenum'itmain r`wavenum'itsec), m
replace r`wavenum'itearn = .m if r`wavenum'itearn==. & inw`wavenum'==1
label variable r`wavenum'itearn "r`wavenum'itearn:w`wavenum' income: r employment earnings (after tax)"

*wave 8 spouse earnings from main job after tax
gen s`wavenum'itmain = .
replace s`wavenum'itmain = .m if mi(thp_p_i) & inw`wavenum'==1
replace s`wavenum'itmain = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itmain = thp_p_i*52 if !mi(thp_p_i)

*wave 8 spouse earnings from 2nd job after tax
gen s`wavenum'itsec = .
replace s`wavenum'itsec = .m if mi(oj_p_i) & inw`wavenum'==1
replace s`wavenum'itsec = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itsec = oj_p_i*52 if !mi(oj_p_i)

**wave 8 spouse total earnings after tax
gen s`wavenum'itearn = .
replace s`wavenum'itearn = .m if s`wavenum'itmain==.m | s`wavenum'itearn==.m
replace s`wavenum'itearn = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itearn = s`wavenum'itmain + s`wavenum'itsec if !mi(s`wavenum'itmain) & !mi(s`wavenum'itsec)
label variable s`wavenum'itearn "s`wavenum'itearn:w`wavenum' income: s employment earnings (after tax)"

***Employment Earnings Flag***
*wave 8 respondent earnings flag
gen r`wavenum'itifearn = .
combine_inc_flags2 thp_r_t oj_r_t, result(r`wavenum'itifearn)
replace r`wavenum'itifearn = .m if r`wavenum'itifearn==. & inw`wavenum'==1
label variable r`wavenum'itifearn "r`wavenum'itifearn:w`wavenum' impflag: r employment earnings"
label values r`wavenum'itifearn incflag

*wave 8 spouse earnings flag
gen s`wavenum'itifearn = .
combine_inc_flags2 thp_p_t oj_p_t, result(s`wavenum'itifearn)
replace s`wavenum'itifearn = .m if s`wavenum'itifearn==. & inw`wavenum'==1
label variable s`wavenum'itifearn "s`wavenum'itifearn:w`wavenum' impflag: s employment earnings"
label values s`wavenum'itifearn incflag

*check 

*drop intermediate variables
drop r`wavenum'itmain 
drop s`wavenum'itmain
drop r`wavenum'itsec
drop s`wavenum'itsec

***Self-Employment Earnings***
*wave 8 household self-employment earnings before tax
gen h`wavenum'isemp = .
replace h`wavenum'isemp = .m if (mi(sedraw_bu_i) | mi(netprof_bu_i)) & inw`wavenum'==1
replace h`wavenum'isemp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'isemp = (sedraw_bu_i + netprof_bu_i)*52 if !mi(sedraw_bu_i) & !mi(netprof_bu_i)
label variable h`wavenum'isemp "h`wavenum'isemp:w`wavenum' income: self-employ earnings (before tax)"

***Self-Employment Earnings Flag***
*wave 8 household self-employment earnings flag
gen h`wavenum'iifsemp = .
combine_inc_flags2 sedraw_bu_t netprof_bu_t, result(h`wavenum'iifsemp)
replace h`wavenum'iifsemp = .m if h`wavenum'iifsemp==. & inw`wavenum'==1
label variable h`wavenum'iifsemp "h`wavenum'iifsemp:w`wavenum' impflag: self-employ earnings"
label values h`wavenum'iifsemp incflag

*check

***Rental Income from Other Property***
*wave 8 household rental income from other property after tax
gen h`wavenum'itrent = .
replace h`wavenum'itrent = .m if mi(homei_bu_i) & inw`wavenum'==1
replace h`wavenum'itrent = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itrent = homei_bu_i*52 if !mi(homei_bu_i)
label variable h`wavenum'itrent "h`wavenum'itrent:w`wavenum' income: rental income from other property (after tax)"

***Rental Income from Other Property Flag***
*wave 8 household rental income from other property flag
gen h`wavenum'itifrent = .
combine_inc_flags2 homei_bu_t, result(h`wavenum'itifrent)
replace h`wavenum'itifrent = .m if h`wavenum'itifrent==. & inw`wavenum'==1
label variable h`wavenum'itifrent "h`wavenum'itifrent:w`wavenum' impflag: rental income from other property"
label values h`wavenum'itifrent incflag

*check

***Interest Income from Financial Assets***
*wave 8 household interest income from financial assets after tax
gen h`wavenum'ittrest = .
replace h`wavenum'ittrest = .m if (mi(farmi_bu_i) | mi(savei_bu_i) | mi(isai_bu_i) | mi(tessai_bu_i) | ///
		mi(nsavi_bu_i) | mi(pepi_bu_i) | mi(sharesi_bu_i) | mi(prbondsi_bu_i) | mi(trustsi_bu_i) | ///
		mi(bondsi_bu_i) | mi(othsavi_bu_i)) & inw`wavenum'==1
replace h`wavenum'ittrest = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ittrest = (farmi_bu_i + savei_bu_i + isai_bu_i + tessai_bu_i + nsavi_bu_i ///
		+ pepi_bu_i + sharesi_bu_i + prbondsi_bu_i + trustsi_bu_i + bondsi_bu_i + othsavi_bu_i)*52 ///
		if !mi(farmi_bu_i) & !mi(savei_bu_i) & !mi(isai_bu_i) & !mi(tessai_bu_i) & !mi(nsavi_bu_i) ///
		 & !mi(pepi_bu_i) & !mi(sharesi_bu_i) & !mi(prbondsi_bu_i) & !mi(trustsi_bu_i) & !mi(bondsi_bu_i) & !mi(othsavi_bu_i)
label variable h`wavenum'ittrest "h`wavenum'ittrest:w`wavenum' income: interest income from financial assets (after tax)"

***Interest Income from Financial Assets Flag***
*wave 8 household interest income from financial assets flag
gen h`wavenum'ittfrest = .
combine_inc_flags2 farmi_bu_t savei_bu_t isai_bu_t tessai_bu_t ///
		nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t bondsi_bu_t othsavi_bu_t, result(h`wavenum'ittfrest)
replace h`wavenum'ittfrest = .m if h`wavenum'ittfrest==. & inw`wavenum'==1
label variable h`wavenum'ittfrest "h`wavenum'ittfrest:w`wavenum' impflag: interest income from financial assets"
label values h`wavenum'ittfrest incflag

*check

***Capital Income***
*wave 8 household capital income
gen h`wavenum'icap = .
replace h`wavenum'icap = .m if h`wavenum'isemp==.m | h`wavenum'itrent==.m | h`wavenum'ittrest==.m
replace h`wavenum'icap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'icap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'icap = h`wavenum'isemp + h`wavenum'itrent + h`wavenum'ittrest ///
		 if !mi(h`wavenum'isemp) & !mi(h`wavenum'itrent) & !mi(h`wavenum'ittrest)
label variable h`wavenum'icap "h`wavenum'icap:w`wavenum' income: couple level capital income"

*wave 8 household capital income imputation flag
gen h`wavenum'ifcap = .
combine_inc_flags2 sedraw_bu_t homei_bu_t farmi_bu_t netprof_bu_t savei_bu_t isai_bu_t ///
		tessai_bu_t nsavi_bu_t pepi_bu_t sharesi_bu_t prbondsi_bu_t trustsi_bu_t othsavi_bu_t, result(h`wavenum'ifcap)
replace h`wavenum'ifcap = .m if h`wavenum'ifcap==. & inw`wavenum'==1
label variable h`wavenum'ifcap "h`wavenum'ifcap:w`wavenum' impflag: couple level capital income"
label values h`wavenum'ifcap incflag

*wave 8 household capital income tax flag
gen h`wavenum'itfcap = .
replace h`wavenum'itfcap = .m if h`wavenum'isemp == .m
replace h`wavenum'itfcap = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itfcap = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'itfcap = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'itfcap "h`wavenum'itfcap:w`wavenum' taxflag: couple level capital income"
label values h`wavenum'itfcap taxflag

*check

***Income from Employer/Private Pension & Annuity***
*wave 8 respondent income from pension & annuity
gen r`wavenum'itpena = .
replace r`wavenum'itpena = .m if mi(ppinc_r_s) & inw`wavenum'==1 
replace r`wavenum'itpena = ppinc_r_s*52 if !mi(ppinc_r_s)
label variable r`wavenum'itpena "r`wavenum'itpena:w`wavenum' income: r pension + annuity (after tax)"

*wave 8 spouse income from pension & annuity
gen s`wavenum'itpena = .
replace s`wavenum'itpena = .m if mi(ppinc_p_s) & inw`wavenum'==1
replace s`wavenum'itpena = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'itpena = ppinc_p_s*52 if !mi(ppinc_p_s)
label variable s`wavenum'itpena "s`wavenum'itpena:w`wavenum' income: s pension + annuity (after tax)"

***Income from Employer/Private Pension & Annuity Flag***
*wave 8 respondent income from pension & annuity flag
gen r`wavenum'itifpena = .
combine_inc_flags2 ppinc_r_t, result(r`wavenum'itifpena)
replace r`wavenum'itifpena = .m if r`wavenum'itifpena==. & inw`wavenum'==1
label variable r`wavenum'itifpena "r`wavenum'itifpena:w`wavenum' impflag: r pension + annuity"
label values r`wavenum'itifpena incflag

*wave 8 spouse income from pension & annuity flag
gen s`wavenum'itifpena = .
combine_inc_flags2 ppinc_p_t, result(s`wavenum'itifpena)
replace s`wavenum'itifpena = .m if s`wavenum'itifpena==. & inw`wavenum'==1
label variable s`wavenum'itifpena "s`wavenum'itifpena:w`wavenum' impflag: s pension + annuity"
label values s`wavenum'itifpena incflag

*check 

***Individual Disability Pension***
*wave 8 respondent individual disability pension
gen r`wavenum'issdi = .
replace r`wavenum'issdi = .m if (mi(icb_r_i) | mi(sda_r_i) | mi(attall_r_i) | mi(dla_r_i) | ///
		mi(indinj_r_i) | mi(carers_r_i)) & inw`wavenum'==1 
replace r`wavenum'issdi = (icb_r_i + sda_r_i + attall_r_i + dla_r_i + indinj_r_i + carers_r_i)*52 ///
		if !mi(icb_r_i) & !mi(sda_r_i) & !mi(attall_r_i) & !mi(dla_r_i) & !mi(indinj_r_i) & !mi(carers_r_i)
replace r`wavenum'issdi = .t if (r`wavenum'issdi > 100000 & !missing(r`wavenum'issdi))
label variable r`wavenum'issdi "r`wavenum'issdi:w`wavenum' income: r public disability pension" 

*wave 8 spouse individual disability pension
gen s`wavenum'issdi = .
replace s`wavenum'issdi = .m if (mi(icb_p_i) | mi(sda_p_i) | mi(attall_p_i) | mi(dla_p_i) | ///
		mi(indinj_p_i) | mi(carers_p_i)) & inw`wavenum'==1 
replace s`wavenum'issdi = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'issdi = (icb_p_i + sda_p_i + attall_p_i + dla_p_i + indinj_p_i + carers_p_i)*52 ///
		if !mi(icb_p_i) & !mi(sda_p_i) & !mi(attall_p_i) & !mi(dla_p_i) & !mi(indinj_p_i) & !mi(carers_p_i)
replace s`wavenum'issdi = .t if (s`wavenum'issdi > 100000 & !missing(s`wavenum'issdi))
label variable s`wavenum'issdi "s`wavenum'issdi:w`wavenum' income: s public disability pension" 

***Individual Disability Pension Flag***
*wave 8 respondent individual disability pension flag
gen r`wavenum'ifssdi = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t, result(r`wavenum'ifssdi)
replace r`wavenum'ifssdi = .m if r`wavenum'ifssdi==. & inw`wavenum'==1
label variable r`wavenum'ifssdi "r`wavenum'ifssdi:w`wavenum' impflag: r public disability pension"
label values r`wavenum'ifssdi incflag

*wave 8 spouse individual disability pension flag
gen s`wavenum'ifssdi = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t, result(s`wavenum'ifssdi)
replace s`wavenum'ifssdi = .m if s`wavenum'ifssdi==. & inw`wavenum'==1
label variable s`wavenum'ifssdi "s`wavenum'ifssdi:w`wavenum' impflag: s public disability pension"
label values s`wavenum'ifssdi incflag

*check

***Individual Income from Public Pension without Disability***
*wave 8 respondent income from public pension without disability
gen r`wavenum'isret = .
replace r`wavenum'isret = .m if (mi(spinc_r_s) | mi(widpen_r_i)) & inw`wavenum'==1 
replace r`wavenum'isret = (spinc_r_s + widpen_r_i)*52 if !mi(spinc_r_s) & !mi(widpen_r_i)
replace r`wavenum'isret = .t if (r`wavenum'isret > 100000 & !missing(r`wavenum'isret))
label variable r`wavenum'isret "r`wavenum'isret:w`wavenum' income: r public old-age pension"

*wave 8 spouse income from public pension without disability
gen s`wavenum'isret = .
replace s`wavenum'isret = .m if (mi(spinc_p_s) | mi(widpen_p_i)) & inw`wavenum'==1
replace s`wavenum'isret = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'isret = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'isret = (spinc_p_s + widpen_p_i)*52 if !mi(spinc_p_s) & !mi(widpen_p_i)
replace s`wavenum'isret = .t if (s`wavenum'isret > 100000 & !missing(s`wavenum'isret))
label variable s`wavenum'isret "s`wavenum'isret:w`wavenum' income: s public old-age pension"

***Individual Income from Public Pension without Disability Flag***
*wave 8 respondent income public pension without disability flag
gen r`wavenum'ifsret = .
combine_inc_flags2 spinc_r_t widpen_r_t, result(r`wavenum'ifsret)
replace r`wavenum'ifsret = .m if r`wavenum'ifsret==. & inw`wavenum'==1
label variable r`wavenum'ifsret "r`wavenum'ifsret:w`wavenum' incflag: r public old-age pension"
label values r`wavenum'ifsret incflag

*wave 8 spouse income from public pension without disability flag
gen s`wavenum'ifsret = .
combine_inc_flags2 spinc_p_t widpen_p_t, result(s`wavenum'ifsret)
replace s`wavenum'ifsret = .m if s`wavenum'ifsret==. & inw`wavenum'==1
label variable s`wavenum'ifsret "s`wavenum'ifsret:w`wavenum' incflag: s public old-age pension"
label values s`wavenum'ifsret incflag

*check 


***Main Public Pension***
*wave 8 respondent main public pension
gen r`wavenum'ipubpen = .
replace r`wavenum'ipubpen = .m if r`wavenum'issdi==.m | r`wavenum'isret==.m 
replace r`wavenum'ipubpen = .t if r`wavenum'issdi==.t | r`wavenum'isret==.t
replace r`wavenum'ipubpen = r`wavenum'issdi + r`wavenum'isret if !mi(r`wavenum'issdi) & !mi(r`wavenum'isret)
label variable r`wavenum'ipubpen "r`wavenum'ipubpen:w`wavenum' income: r public pensions"

*wave 8 spouse main public pension
gen s`wavenum'ipubpen = .
replace s`wavenum'ipubpen = .m if s`wavenum'issdi==.m | s`wavenum'isret==.m
replace s`wavenum'ipubpen = .t if s`wavenum'issdi==.t | s`wavenum'isret==.t
replace s`wavenum'ipubpen = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ipubpen = s`wavenum'issdi + s`wavenum'isret if !mi(s`wavenum'issdi) & !mi(s`wavenum'isret)
label variable s`wavenum'ipubpen "s`wavenum'ipubpen:w`wavenum' income: s public pensions" 

***Main Public Pension Flag***
*wave 8 respondent main public pension flag
gen r`wavenum'ifpubpen = .
combine_inc_flags2 icb_r_t sda_r_t attall_r_t dla_r_t indinj_r_t carers_r_t spinc_r_t widpen_r_t, result(r`wavenum'ifpubpen)
replace r`wavenum'ifpubpen = .m if r`wavenum'ifpubpen==. & inw`wavenum'==1
label variable r`wavenum'ifpubpen "r`wavenum'ifpubpen:w`wavenum' impflag: r public pensions"
label values r`wavenum'ifpubpen incflag

*wave 8 spouse main public pension flag
gen s`wavenum'ifpubpen = .
combine_inc_flags2 icb_p_t sda_p_t attall_p_t dla_p_t indinj_p_t carers_p_t spinc_p_t widpen_p_t, result(s`wavenum'ifpubpen)
replace s`wavenum'ifpubpen = .m if s`wavenum'ifpubpen==. & inw`wavenum'==1
label variable s`wavenum'ifpubpen "s`wavenum'ifpubpen:w`wavenum' impflag: s public pensions"
label values s`wavenum'ifpubpen incflag 

***War Pension***
*wave 8 respondent war pension
gen r`wavenum'ivet = .
replace r`wavenum'ivet = .m if mi(war_r_i) & inw`wavenum'==1 
replace r`wavenum'ivet = war_r_i*52 if !mi(war_r_i)
label variable r`wavenum'ivet "r`wavenum'ivet:w`wavenum' income: r war pension"

*wave 8 spouse war pension
gen s`wavenum'ivet = .
replace s`wavenum'ivet = .m if mi(war_p_i) & inw`wavenum'==1
replace s`wavenum'ivet = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'ivet = war_p_i*52 if !mi(war_p_i)
label variable s`wavenum'ivet "s`wavenum'ivet:w`wavenum' income: s war pension"

***War Pension Flag***
*wave 8 respondent war pension flag
gen r`wavenum'ifvet = .
combine_inc_flags2 war_r_t, result(r`wavenum'ifvet)
replace r`wavenum'ifvet = .m if r`wavenum'ifvet==. & inw`wavenum'==1
label variable r`wavenum'ifvet "r`wavenum'ifvet:w`wavenum' impflag: r war pension"
label values r`wavenum'ifvet incflag

*wave 8 spouse war pension flag
gen s`wavenum'ifvet = .
combine_inc_flags2 war_p_t, result(s`wavenum'ifvet)
replace s`wavenum'ifvet = .m if s`wavenum'ifvet==. & inw`wavenum'==1
label variable s`wavenum'ifvet "s`wavenum'ifvet:w`wavenum' impflag: s war pension"
label values s`wavenum'ifvet incflag

*check

***Income Support***
*wave 8 respondent income support
gen r`wavenum'iwelf = .
replace r`wavenum'iwelf = .m if (mi(is_r_i) | mi(wtc_r_i) | mi(gall_r_i) | mi(cb_r_i) | ///
		mi(ctc_r_i) | mi(pc_r_i)) & inw`wavenum'==1 
replace r`wavenum'iwelf = (is_r_i + wtc_r_i + gall_r_i + cb_r_i + ctc_r_i + pc_r_i)*52 ///
		if !mi(is_r_i) & !mi(wtc_r_i) & !mi(gall_r_i) & !mi(cb_r_i) & !mi(ctc_r_i) & !mi(pc_r_i)
replace r`wavenum'iwelf = .t if (r`wavenum'iwelf > 100000 & !missing(r`wavenum'iwelf))
label variable r`wavenum'iwelf "r`wavenum'iwelf:w`wavenum' income: r income support"

*wave 8 spouse income support
gen s`wavenum'iwelf = .
replace s`wavenum'iwelf = .m if (mi(is_p_i) | mi(wtc_p_i) | mi(gall_p_i) | mi(cb_p_i) | ///
		mi(ctc_p_i) | mi(pc_p_i)) & inw`wavenum'==1 
replace s`wavenum'iwelf = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwelf = (is_p_i + wtc_p_i + gall_p_i + cb_p_i + ctc_p_i + pc_p_i)*52 ///
		if !mi(is_p_i) & !mi(wtc_p_i) & !mi(gall_p_i) & !mi(cb_p_i) & !mi(ctc_p_i) & !mi(pc_p_i)
replace s`wavenum'iwelf = .t if (s`wavenum'iwelf > 100000 & !missing(s`wavenum'iwelf))
label variable s`wavenum'iwelf "s`wavenum'iwelf:w`wavenum' income: s income support"

***Income Support Flag***
*wave 8 respondent income support flag
gen r`wavenum'ifwelf = .
combine_inc_flags2 is_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifwelf)
replace r`wavenum'ifwelf = .m if r`wavenum'ifwelf==. & inw`wavenum'==1
label variable r`wavenum'ifwelf "r`wavenum'ifwelf:w`wavenum' impflag: r income support"
label values r`wavenum'ifwelf incflag

*wave 8 spouse income support flag
gen s`wavenum'ifwelf = .
combine_inc_flags2 is_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifwelf)
replace s`wavenum'ifwelf = .m if s`wavenum'ifwelf==. & inw`wavenum'==1
label variable s`wavenum'ifwelf "s`wavenum'ifwelf:w`wavenum' impflag: s income support"
label values s`wavenum'ifwelf incflag

*check

***Worker's Comp/Short-Term Disability***
*wave 8 respondent worker's comp
gen r`wavenum'iwcmp = .
replace r`wavenum'iwcmp = .m if mi(ssp_r_i) & inw`wavenum'==1 
replace r`wavenum'iwcmp = ssp_r_i*52 if !mi(ssp_r_i)
label variable r`wavenum'iwcmp "r`wavenum'iwcmp:w`wavenum' income: r workers comp"

*wave 8 spouse worker's comp
gen s`wavenum'iwcmp = .
replace s`wavenum'iwcmp = .m if mi(ssp_p_i) & inw`wavenum'==1
replace s`wavenum'iwcmp = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iwcmp = ssp_p_i*52 if !mi(ssp_p_i)
label variable s`wavenum'iwcmp "s`wavenum'iwcmp:w`wavenum' income: s workers comp"

***Worker's Comp/Short-Term Disability Flag***
*wave 8 respondent worker's comp flag
gen r`wavenum'ifwcmp = .
combine_inc_flags2 ssp_r_t, result(r`wavenum'ifwcmp)
replace r`wavenum'ifwcmp = .m if r`wavenum'ifwcmp==. & inw`wavenum'==1
label variable r`wavenum'ifwcmp "r`wavenum'ifwcmp:w`wavenum' impflag: r workers comp"
label values r`wavenum'ifwcmp incflag

*wave 8 spouse worker's comp flag
gen s`wavenum'ifwcmp = .
combine_inc_flags2 ssp_p_t, result(s`wavenum'ifwcmp)
replace s`wavenum'ifwcmp = .m if s`wavenum'ifwcmp==. & inw`wavenum'==1
label variable s`wavenum'ifwcmp "s`wavenum'ifwcmp:w`wavenum' impflag: s workers comp"
label values s`wavenum'ifwcmp incflag

*check

***Unemployment Transfers***
*wave 8 respondent unemployment transfers
gen r`wavenum'iunem = .
replace r`wavenum'iunem = .m if mi(jsa_r_i) & inw`wavenum'==1
replace r`wavenum'iunem = jsa_r_i*52  if !mi(jsa_r_i)
replace r`wavenum'iunem = .t if (r`wavenum'iunem > 10000 & !missing(r`wavenum'iunem))
label variable r`wavenum'iunem "r`wavenum'iunem:w`wavenum' income: r unemployment"

*wave 8 spouse unemployment transfers
gen s`wavenum'iunem = .
replace s`wavenum'iunem = .m if mi(jsa_p_i) & inw`wavenum'==1
replace s`wavenum'iunem = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'iunem = jsa_p_i*52  if !mi(jsa_p_i)
replace s`wavenum'iunem = .t if (s`wavenum'iunem > 10000 & !missing(s`wavenum'iunem))
label variable s`wavenum'iunem "s`wavenum'iunem:w`wavenum' income: s unemployment"

***Unemployment Transfers Flag***
*wave 8 respondent unemployment transfers flag
gen r`wavenum'ifunem = .
combine_inc_flags2 jsa_r_t, result(r`wavenum'ifunem)
replace r`wavenum'ifunem = .m if r`wavenum'ifunem==. & inw`wavenum'==1
label variable r`wavenum'ifunem "r`wavenum'ifunem:w`wavenum' impflag: r unemployment"
label values r`wavenum'ifunem incflag

*wave 8 spouse unemployment transfers flag
gen s`wavenum'ifunem = .
combine_inc_flags2 jsa_p_t, result(s`wavenum'ifunem)
replace s`wavenum'ifunem = .m if s`wavenum'ifunem==. & inw`wavenum'==1
label variable s`wavenum'ifunem "s`wavenum'ifunem:w`wavenum' impflag: s unemployment"
label values s`wavenum'ifunem incflag

*check

***Other Government Transfers***
*wave 8 respondent other government transfers
gen r`wavenum'igxfr = .
replace r`wavenum'igxfr = .m if r`wavenum'ivet==.m | r`wavenum'iwelf==.m | r`wavenum'iwcmp==.m | r`wavenum'iunem==.m
replace r`wavenum'igxfr = .t if r`wavenum'ivet==.t | r`wavenum'iwelf==.t | r`wavenum'iwcmp==.t | r`wavenum'iunem==.t
replace r`wavenum'igxfr = r`wavenum'ivet + r`wavenum'iwelf + r`wavenum'iwcmp + r`wavenum'iunem ///
		if !mi(r`wavenum'ivet) & !mi(r`wavenum'iwelf) & !mi(r`wavenum'iwcmp) & !mi(r`wavenum'iunem)
label variable r`wavenum'igxfr "r`wavenum'igxfr:w`wavenum' income: r other gov transfers"

*wave 8 spouse other government transfers
gen s`wavenum'igxfr = .
replace s`wavenum'igxfr = .m if s`wavenum'ivet==.m | s`wavenum'iwelf==.m | s`wavenum'iwcmp==.m | s`wavenum'iunem==.m
replace s`wavenum'igxfr = .t if s`wavenum'ivet==.t | s`wavenum'iwelf==.t | s`wavenum'iwcmp==.t | s`wavenum'iunem==.t
replace s`wavenum'igxfr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace s`wavenum'igxfr = s`wavenum'ivet + s`wavenum'iwelf + s`wavenum'iwcmp + s`wavenum'iunem ///
		if !mi(s`wavenum'ivet) & !mi(s`wavenum'iwelf) & !mi(s`wavenum'iwcmp) & !mi(s`wavenum'iunem)
label variable s`wavenum'igxfr "s`wavenum'igxfr:w`wavenum' income: s other gov transfers"

***Other Government Transfers Flag***
*wave 8 respondent other government transfers flag
gen r`wavenum'ifgxfr = .
combine_inc_flags2 war_r_t is_r_t ssp_r_t jsa_r_t wtc_r_t gall_r_t cb_r_t ctc_r_t pc_r_t, result(r`wavenum'ifgxfr)
replace r`wavenum'ifgxfr = .m if r`wavenum'ifgxfr==. & inw`wavenum'==1
label variable r`wavenum'ifgxfr "r`wavenum'ifgxfr:w`wavenum' impflag: r other gov transfers"
label values r`wavenum'ifgxfr incflag

*wave 8 spouse other government transfers flag
gen s`wavenum'ifgxfr = .
combine_inc_flags2 war_p_t is_p_t ssp_p_t jsa_p_t wtc_p_t gall_p_t cb_p_t ctc_p_t pc_p_t, result(s`wavenum'ifgxfr)
replace s`wavenum'ifgxfr = .m if s`wavenum'ifgxfr==. & inw`wavenum'==1
label variable s`wavenum'ifgxfr "s`wavenum'ifgxfr:w`wavenum' impflag: s other gov transfers"
label values s`wavenum'ifgxfr incflag

drop r`wavenum'ivet r`wavenum'iwelf r`wavenum'iwcmp r`wavenum'iunem 
drop s`wavenum'ivet s`wavenum'iwelf s`wavenum'iwcmp s`wavenum'iunem

drop r`wavenum'ifvet r`wavenum'ifwelf r`wavenum'ifwcmp r`wavenum'ifunem 
drop s`wavenum'ifvet s`wavenum'ifwelf s`wavenum'ifwcmp s`wavenum'ifunem 

*check

***Other Household Income***
*wave 8 other household income
gen h`wavenum'iothr = .
replace h`wavenum'iothr = .m if (mi(othpay_r_i) | mi(othpay_p_i)) & inw`wavenum'==1
replace h`wavenum'iothr = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'iothr = othpay_r_i*52 if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(othpay_r_i)
replace h`wavenum'iothr = (othpay_r_i + othpay_p_i)*52 if inlist(r`wavenum'mstat,1,3) & !mi(othpay_r_i) & !mi(othpay_p_i)
replace h`wavenum'iothr = .t if (h`wavenum'iothr > 100000 & !missing(h`wavenum'iothr))
label variable h`wavenum'iothr "h`wavenum'iothr:w`wavenum' income: other income"

***Other Household Income Flag***
*wave 8 other household income flag
gen h`wavenum'ifothr = .
combine_inc_flags2 othpay_r_t othpay_p_t, result(h`wavenum'ifothr)
replace h`wavenum'ifothr = .m if h`wavenum'ifothr==. & inw`wavenum'==1
label variable h`wavenum'ifothr "h`wavenum'ifothr:w`wavenum' impflag: other income"
label values h`wavenum'ifothr incflag

*check

***Total Family Income***
*wave 8 household total family income
gen h`wavenum'itot = .
replace h`wavenum'itot = .m if r`wavenum'itearn==.m | s`wavenum'itearn==.m | h`wavenum'icap==.m | ///
		r`wavenum'itpena==.m | s`wavenum'itpena==.m | r`wavenum'ipubpen==.m | s`wavenum'ipubpen==.m | ///
		r`wavenum'igxfr==.m | s`wavenum'igxfr==.m | h`wavenum'iothr==.m
replace h`wavenum'itot = .t if r`wavenum'itearn==.t | s`wavenum'itearn==.t | h`wavenum'icap==.t | ///
		r`wavenum'itpena==.t | s`wavenum'itpena==.t | r`wavenum'ipubpen==.t | s`wavenum'ipubpen==.t | ///
		r`wavenum'igxfr==.t | s`wavenum'igxfr==.t | h`wavenum'iothr==.t
replace h`wavenum'itot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'itot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'itot = r`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena + r`wavenum'ipubpen ///
												+ r`wavenum'igxfr + h`wavenum'iothr if !inlist(r`wavenum'mstat,1,3) & inw`wavenum' == 1 & !mi(r`wavenum'itearn) ///
										& !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(r`wavenum'ipubpen) & !mi(r`wavenum'igxfr) ///
									  & !mi(h`wavenum'iothr)
replace h`wavenum'itot = r`wavenum'itearn + s`wavenum'itearn + h`wavenum'icap + r`wavenum'itpena /// 
												+ s`wavenum'itpena + r`wavenum'ipubpen + s`wavenum'ipubpen + r`wavenum'igxfr /// 
												+ s`wavenum'igxfr + h`wavenum'iothr if inlist(r`wavenum'mstat,1,3) & !mi(r`wavenum'itearn) ///
										& !mi(s`wavenum'itearn) & !mi(h`wavenum'icap) & !mi(r`wavenum'itpena) & !mi(s`wavenum'itpena) ///
										& !mi(r`wavenum'ipubpen) & !mi(s`wavenum'ipubpen) & !mi(r`wavenum'igxfr) & !mi(s`wavenum'igxfr) ///
										& !mi(h`wavenum'iothr)
replace h`wavenum'itot = .t if (h`wavenum'itot > 900000 & !missing(h`wavenum'itot))
label variable h`wavenum'itot "h`wavenum'itot:w`wavenum' income: total couple level income"

*wave 8 household total family income imputation flag
gen h`wavenum'iftot = .
combine_inc_flags9 r`wavenum'itifearn s`wavenum'itifearn h`wavenum'ifcap r`wavenum'itifpena s`wavenum'itifpena r`wavenum'ifpubpen s`wavenum'ifpubpen r`wavenum'ifgxfr s`wavenum'ifgxfr h`wavenum'ifothr, result(h`wavenum'iftot)
replace h`wavenum'iftot = .m if h`wavenum'iftot==. & inw`wavenum'==1
label variable h`wavenum'iftot "h`wavenum'iftot:w`wavenum' impflag: total couple level income"
label values h`wavenum'iftot incflag

*wave 8 household total family income tax flag
gen h`wavenum'ifttot = .
replace h`wavenum'ifttot = .m if h`wavenum'isemp==.m
replace h`wavenum'ifttot = .u if w`wavenum'spouse == 0 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = .v if w`wavenum'spouse == 1 & s`wavenum'idauniq == 0
replace h`wavenum'ifttot = 2 if h`wavenum'isemp == 0 & !missing(h`wavenum'isemp) 
replace h`wavenum'ifttot = 3 if h`wavenum'isemp ~= 0 & !missing(h`wavenum'isemp)
label variable h`wavenum'ifttot "h`wavenum'ifttot:w`wavenum' taxflag: total couple level income"
label values h`wavenum'ifttot taxflag

*check 

********Consumption*********
***monthly Food Consumption In House***
*wave 8 household monthly food consumption in house
gen hh`wavenum'cfoodi = .
replace hh`wavenum'cfoodi = .m if inlist(hofood,-1,-3)
replace hh`wavenum'cfoodi = .p if askpx == 1
replace hh`wavenum'cfoodi = .d if hofood == -8
replace hh`wavenum'cfoodi = .r if hofood == -9
replace hh`wavenum'cfoodi = hofood if inrange(hofood,0,2000)
label variable hh`wavenum'cfoodi "hh`wavenum'cfoodi:w`wavenum' hhold monthly food consumption in house" 

***monthly Food Consumption Outside House***
*wave 8 household monthly food consumption outside house
gen hh`wavenum'cfoodo1m = .
replace hh`wavenum'cfoodo1m = .m if inlist(hooutf,-1,-3)
replace hh`wavenum'cfoodo1m = .p if askpx == 1
replace hh`wavenum'cfoodo1m = .d if hooutf == -8
replace hh`wavenum'cfoodo1m = .r if hooutf == -9
replace hh`wavenum'cfoodo1m = hooutf if inrange(hooutf,0,2500)
label variable hh`wavenum'cfoodo1m "hh`wavenum'cfoodo1m:w`wavenum' hhold monthly food consumption outside house"

***monthly Total Food Consumption***
*wave 8 household total food consumption
gen hh`wavenum'cfood1m = .
replace hh`wavenum'cfood1m = .m if inlist(hofood,-1,-3) | inlist(hooutf,-1,-3)
replace hh`wavenum'cfood1m = .p if askpx == 1
replace hh`wavenum'cfood1m = .d if hofood == -8 | hooutf == -8
replace hh`wavenum'cfood1m = .r if hofood == -9 | hooutf == -9
replace hh`wavenum'cfood1m =(hh`wavenum'cfoodi * 4.34524) + hh`wavenum'cfoodo1m if inrange(hh`wavenum'cfoodi,0,2000) & inrange(hh`wavenum'cfoodo1m,0,2500)
label variable hh`wavenum'cfood1m "hh`wavenum'cfood1m:w`wavenum' hhold total monthly food consumption"

***Monthly Clothing Expenditure***
*wave 8 household monthly clothing expenditure
gen hh`wavenum'cclo1m = .
replace hh`wavenum'cclo1m = .m if inlist(hocl,-1,-3)
replace hh`wavenum'cclo1m = .p if askpx == 1
replace hh`wavenum'cclo1m = .d if hocl == -8
replace hh`wavenum'cclo1m = .r if hocl == -9
replace hh`wavenum'cclo1m = hocl if inrange(hocl,0,6000)
label variable hh`wavenum'cclo1m "hh`wavenum'cclo1m:w`wavenum' hhold monthly clothing exp"

***Monthly Leisure Activities Expenditure***
*wave 8 household monthly leisure activity expenditure
gen hh`wavenum'clei1m = .
replace hh`wavenum'clei1m = .m if inlist(holeis,-1,-3)
replace hh`wavenum'clei1m = .p if askpx == 1
replace hh`wavenum'clei1m = .d if holeis == -8
replace hh`wavenum'clei1m = .r if holeis == -9
replace hh`wavenum'clei1m = holeis if inrange(holeis,0,10000)
label variable hh`wavenum'clei1m "hh`wavenum'clei1m:w`wavenum' hhold monthly leisure exp"

***Monthly Rent Expenditure***
*wave 8 household monthly rent
gen hh`wavenum'crent = .
replace hh`wavenum'crent = .m if horent == -1 | inlist(hoperi,-1,-2,-3,95,96) | hotenu == -1
replace hh`wavenum'crent = .p if askpx == 1
replace hh`wavenum'crent = .d if horent == -8 | hoperi == -8 | hotenu == -8
replace hh`wavenum'crent = .r if horent == -9 | hoperi == -9 | hotenu == -9
replace hh`wavenum'crent = 0 if inlist(hotenu,1,2,5,6) | hoperi == 97 | horent == 99997
replace hh`wavenum'crent = horent if inlist(hoperi,4,5) & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*4.348125 if hoperi==1 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*2.1740625 if hoperi==2 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent*1.449374 if hoperi==3 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/2 if hoperi==7 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.5 if hoperi==8 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.333 if hoperi==9 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/1.2 if hoperi==10 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/3 if hoperi==13 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/6 if hoperi==26 & inrange(horent,0,100000)
replace hh`wavenum'crent = horent/12 if hoperi==52 & inrange(horent,0,100000)
label variable hh`wavenum'crent "hh`wavenum'crent:w`wavenum' hhold monthly rent"

***Monthly Utility/Fuel Expenditure***
*wave 8 household monthly gas & electricity
gen nogas = 1 if inlist(hofuelga,-1,0)
gen noelec = 1 if inlist(hofuelel,-1,0)
gen nocoal = 1 if inlist(hofuelco,-1,0)
gen nopar = 1 if inlist(hofuelpa,-1,0)
gen nooil = 1 if inlist(hofueloi,-1,0)
gen nowood = 1 if inlist(hofuelwo,-1,0)
gen nooth = 1 if inlist(hofuel95,-1,0)

*gas and electric by direct debit
gen gseld = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofdm, result(gseld)
replace gseld = 0 if (nogas == 1 | noelec == 1 ) | hofsup == 2 | hoftog == 2 | inlist(hofpay,2,3,4,5,6,7,95) | hofdm == -3 
replace gseld = hofdm if inrange(hofdm,0,1000)

*gas and electric by bill
gen gselb = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofbmw hofbms hofbqw hofbqs, result(gselb)
replace gselb = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,3,4,5,6,7,95) | hofbmw == -3 | hofbms == -3 | hofbqw == -3 | hofbqs == -3
replace gselb = (hofbmw + hofbms)/2 if inrange(hofbmw,0,1000) & inrange(hofbms,0,1000)
replace gselb = (hofbqw + hofbqs)/2/3 if inrange(hofbqw,0,1000) & inrange(hofbqs,0,1000)

*gas and electric by prepay
gen gselp = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofpw hofps, result(gselp)
replace gselp = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,4,5,6,7,95) | hofpw == -3 | hofps == -3
replace gselp = (hofpw + hofps)/2*4.348125 if inrange(hofpw,0,500) & inrange(hofps,0,500)

*gas and electric by other payment method
gen gselo = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofow hofos, result(gselo)
replace gselo = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,7) | hofow == -3 | hofos == -3
replace gselo = (hofow + hofos)/2*4.348125 if inrange(hofow,0,500) & inrange(hofos,0,500)

*gas and electric by staywarm scheme
gen gsels = .
missing_w2 hofuelga hofuelel hofsup hoftog hofpay hofd hofsw hofsm hofsq, result(gsels)
replace gsels = 0 if (nogas == 1 |  noelec == 1) | hofsup == 2 | hoftog == 2 | inlist(hofpay,1,2,3,4,5,6,95) | hofsw == -3 | hofsm == -3 | hofsq == -3
replace gsels = hofsw*4.348125 if inrange(hofsw,0,500)
replace gsels = hofsm if inrange(hofsm,0,500)
replace gsels = hofsq/3 if inrange(hofsq,0,500)

*all gas and electric
gen gsel = .
missing_H gseld gselb gselp gselo gsels, result(gsel)
replace gsel = gseld + gselb + gselp + gselo + gsels if !mi(gseld) & !mi(gselb) & !mi(gselp) & !mi(gselo) & !mi(gsels)

drop gseld gselb gselp gselo gsels

*wave 8 household monthly gas
*gas by direct debit
gen gasd = .
missing_w2 hofuelga hoftog hogpay hogd hogdm hogdq, result(gasd)
replace gasd = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,2,3,4,5,6,95) | hogdm == -3 | hogdq == -3
replace gasd = hogdm if inrange(hogdm,0,500)
replace gasd = hogdq/3 if inrange(hogdq,0,500)

*gas by bill
gen gasb = .
missing_w2 hofuelga hoftog hogpay hogbp hogbmw hogbms hogbqw hogbqs, result(gasb)
replace gasb = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,3,4,5,6,95) | hogbmw == -3 | hogbms == -3 | hogbqw == -3 | hogbqs == -3
replace gasb = (hogbmw + hogbms)/2 if inrange(hogbmw,0,500) & inrange(hogbms,0,500)
replace gasb = (hogbqw + hogbqs)/2/3 if inrange(hogbqw,0,500) & inrange(hogbqs,0,500)

*gas by prepay
gen gasp = .
missing_w2 hofuelga hoftog hogpay hogpw hogps, result(gasp)
replace gasp = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,4,5,6,95) | hogpw == -3 | hogps == -3
replace gasp = (hogpw + hogps)/2*4.348125 if inrange(hogpw,0,500) & inrange(hogps,0,500)

*gas by other paymenet method
gen gaso=.
missing_w2 hofuelga hoftog hogpay hogow hogos, result(gaso)
replace gaso = 0 if nogas == 1 | hoftog == 1 | inlist(hogpay,1,2,3) | hogow == -3 | hogos == -3
replace gaso = (hogow + hogos)/2*4.348125 if inrange(hogow,0,500) & inrange(hogos,0,500)

*all gas
gen gas = .
missing_H gasd gasb gasp gaso, result(gas)
replace gas = gasd + gasb + gasp + gaso if !mi(gasd) & !mi(gasb) & !mi(gasp) & !mi(gaso)

drop gasd gasb gasp gaso

*wave 8 household monthly electricity
*electricity by direct debig
gen elecd = .
missing_w2 hofuelel hoftog hoepay hoedm hoedq, result(elecd)
replace elecd = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,2,3,4,5,6,95) | hoedm == -3 | hoedq == -3
replace elecd = hoedm if inrange(hoedm,0,500)
replace elecd = hoedq/3 if inrange(hoedq,0,500)

*electricity by bill
gen elecb = .
missing_w2 hofuelel hoftog hoepay hoebmw hoebms hoebqw hoebqs, result(elecb)
replace elecb = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,3,4,5,6,95) | hoebmw == -3 | hoebms == -3 | hoebqw == -3 | hoebqs == -3
replace elecb = (hoebmw + hoebms)/2 if inrange(hoebmw,0,500) & inrange(hoebms,0,500)
replace elecb = (hoebqw + hoebqs)/2/3 if inrange(hoebqw,0,500) & inrange(hoebqs,0,500)

*electricity by prepay
gen elecp =.
missing_w2 hofuelel hoftog hoepay hoepw hoeps, result(elecp)
replace elecp = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,4,5,6,95) | hoepw == -3 | hoeps == -3
replace elecp = (hoepw + hoeps)/2*4.348125 if inrange(hoepw,0,500) & inrange(hoeps,0,500)

*electricity by other payment method
gen eleco = .
missing_w2 hofuelel hoftog hoepay hoeow hoeos, result(eleco)
replace eleco = 0 if noelec == 1 | hoftog == 1 | inlist(hoepay,1,2,3) | hoeow == -3 | hoeos == -3
replace eleco = (hoeow + hoeos)/2*4.348125 if inrange(hoeow,0,500) & inrange(hoeos,0,500)

*all electricity
gen elec = .
missing_H elecd elecb elecp eleco, result(elec)
replace elec = elecd + elecb + elecp + eleco if !mi(elecd) & !mi(elecb) & !mi(elecp) & !mi(eleco)

drop elecd elecb elecp eleco

*wave 8 household monthly coal
gen coal = .
missing_w2 hofuelco hofcw hofcs, result(coal)
replace coal = 0 if nocoal == 1 | hofcw == -3 | hofcs == -3
replace coal = (hofcw + hofcs)/2*4.348125 if inrange(hofcw,0,100) & inrange(hofcs,0,100)

*wave 8 household monthly paraffin
gen para = .
missing_w2 hofuelpa hofpgw hofpgs, result(para)
replace para = 0 if nopar == 1 | hofpgw == -3 | hofpgs == -3
replace para = (hofpgw + hofpgs)/2*4.348125 if inrange(hofpgw,0,100) & inrange(hofpgs,0,100)

*wave 8 household monthly oil
gen oil = .
missing_w2 hofueloi hofoiw hofois, result(oil)
replace oil = 0 if nooil == 1 | hofoiw == -3 | hofois == -3
replace oil = (hofoiw + hofois)/2*4.348125 if inrange(hofoiw,0,100) & inrange(hofois,0,100)

*wave 8 household monthly wood
gen wood = .
missing_w2 hofuelwo hofww hofws, result(wood)
replace wood = 0 if nowood == 1 | hofww == -3 | hofws == -3
replace wood = (hofww + hofws)/2*4.348125 if inrange(hofww,0,100) & inrange(hofws,0,100)

*wave 8 household monthly other
gen oth = .
missing_w2 hofuel95 hofxw hofxs, result(oth)
replace oth = 0 if nooth == 1 | hofxw == -3 | hofxs == -3
replace oth = (hofxw + hofxs)/2*4.348125 if inrange(hofxw,0,100) & inrange(hofxs,0,100)

drop nogas noelec nocoal nopar nooil nowood nooth 

*wave 8 household utility/fuel
gen hh`wavenum'cutil = .
missing_H gsel gas elec coal para oil wood oth, result(hh`wavenum'cutil)
replace hh`wavenum'cutil = .p if askpx == 1
replace hh`wavenum'cutil = gsel + gas + elec + coal + para + oil + wood + oth if !mi(gsel) & !mi(gas) & !mi(elec) & !mi(coal) & !mi(para) & !mi(oil) & !mi(wood) & !mi(oth)
label variable hh`wavenum'cutil "hh`wavenum'cutil:w`wavenum' hhold monthly utility/fuel"

drop gsel gas elec coal para oil wood oth

***Monthly Total Consumption***
*wave 8 household monthly total consumption
gen hh`wavenum'ctot1m = .
missing_H hh`wavenum'cfood1m hh`wavenum'cclo1m hh`wavenum'clei1m hh`wavenum'crent hh`wavenum'cutil, result(hh`wavenum'ctot1m)
replace hh`wavenum'ctot1m = .p if askpx == 1
replace hh`wavenum'ctot1m = hh`wavenum'cfood1m + hh`wavenum'cclo1m + hh`wavenum'clei1m + hh`wavenum'crent + hh`wavenum'cutil if ///
                    inrange(hh`wavenum'cfood1m,0,15000) & ///
                    inrange(hh`wavenum'cclo1m,0,6000) & ///
                    inrange(hh`wavenum'clei1m,0,10000) & ///
                    inrange(hh`wavenum'crent,0,990000) & ///
                    inrange(hh`wavenum'cutil,0,1000)
label variable hh`wavenum'ctot1m "hh`wavenum'ctot1m:w`wavenum' hhold total monthly consumption"


***drop ELSA wave 8 financial derived file raw variables***
drop `income_w8_fina'

***drop ELSA wave 8 core variables***
drop `income_w8_core'

******************************************************************************************

***Family Contact***
label define contact ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
   .c ".c:no self-completion interview" /// 
   .n ".n:Not Applicable" ///
   .k ".k:No Kid" ///
   .h ".h:all kids in house" ///
   .s ".s:Skipped due to no limitation" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	 .p ".p:Proxy" ///
	 .i ".i:Institutional interview" ///
	 .u ".u:Unmar"
	 
   
***parental mortality: mother/father alive***
label define liv ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK" ///
	 .n ".n:not asked" ///
	 .q ".q:ask someone"

***Children Coreside***
label define coreside ///
   0 "0.no"  ///
   1 "1.yes" ///
   .k ".k:No kid" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	 .p ".p:Proxy" ///
	 .u ".u:Unmar"
	 
	 ***Financial transfer***
label define tran ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" ///
	 .p ".p:Proxy" ///
	 .u ".u:Unmar"

	 ***Social work ***
label define social ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .c ".c:no self-completion interview" /// 
	 .s ".s:schedule conflict" ///
	 .d ".d:DK" ///
	 .p ".p:Proxy" ///
	 .u ".u:Unmar" ///
	 .i ".i:invalid answer"
	 
	 
**age mother education***   
label define mage ///
  1 "1.never went to school " ///
  2 "2.age 14 or under" ///
  3 "3.at age 15" ///
  4 "4.at age 16" ///
  5 "5.at age 17" ///
  6 "6.at age 18" ///
  7 "7.age 19 or over" ///
  .r ".r:Refuse" ///
  .m ".m:missing" ///
 	.d ".d:DK" ///
	 .a ".a:not in the survey when the questions was asked" 
 	
**relationship to the respondent/spouse***   
label define rel ///
  1 "1.both natural parents" ///
  2 "2.natural mother and step-father" ///
  3 "3.natural father and step-mother" ///
  4 "4.natural mother" ///
  5 "5.natural father" ///
  6 "6.step-parents" ///
  7 "7.foster parents" ///
  8 "8.adoptive parents " ///
  9 "9.other" ///
  .h ".n:children home " ///
  .r ".r:Refuse" ///
  .m ".m:missing" ///
 	.d ".d:DK"  	///
	 .a ".a:not in the survey when the questions was asked" 
	 

***occupation*** 
  label define occu ///
  1 "1.white collar" ///
  2 "2.blue collar" ///
  3 "3.military" ///
  4 "4.other" ///
  .h ".h:live in children home" ///
  .w ".w:retired" ///
  .n ".n:unemployed" ///
  .s ".s:sick/diabled" ///
  .r ".r:Refuse" ///
  .m ".m:missing" ///
 	.d ".d:DK" ///
  .a ".a:not in the survey when the questions was asked" 

******************************************************************************************

	

*set wave number
local wavenum = 1

***merge with index file***
local family_w1_index idahhw1 sex persno
merge 1:1 idauniq using "$index", keepusing(`family_w1_index') nogen

***merge with wave 1 core data***
local family_w1_core perid dhr dhr? dhr1? dhc dhc? dhc1? dhcr?? dhcr??? dhcs? dhcs?? ///
                     disib scchd scchdg scchdh scchdi scfam scfamg scfami ///
                     heada0? heada1? headb0? headb1? scorgn scorg9 dignmy digran ///
					 scfrd scfrdg scfrdh scfrdi hehpa askpx1 spcaa spcab? wpact? dikliv difjob 
										 
merge 1:1 idauniq using "$wave_1_core", keepusing(`family_w1_core') nogen

***merge with derived file*** 
local family_w1_derv ngrandch chsex? chsex1? nsibs malive mothage magedied falive ///
                     fathage fagedied npeople 
 
merge 1:1 idauniq using "$wave_1_derv", keepusing(`family_w1_derv') nogen


*count number of household respondents
local n = 1
foreach var of varlist dhr dhr? dhr1? {
    local maxhhn = `n'
    local ++n 
}

***Number of people living in house***
*wave 1 household number of people living in house
gen h1hhres = npeople
label variable h1hhres "h1hhres:w1 Number of people in Household"

*check

****Number of living children
gen r1child =0 if inw1 == 1
forvalues i = 1/16 {
	replace r1child = r1child + 1 if inlist(chsex`i',1,2,-8,-9)
}
label variable r1child "r1child:w1 R Number of living children"

*wave 1 spouse number of living child
gen s1child =.
spouse r1child, result(s1child) wave(1)
label variable s1child "s1child:w1 S Number of living children"

gen r1son =0 if inw1 == 1
forvalues i = 1/16 {
	replace r1son = .d if chsex`i' == -8 & mi(r1son)
    replace r1son = .r if chsex`i' == -9 & mi(r1son) 
	replace r1son = r1son + 1 if chsex`i' == 1
}

label variable r1son "r1son:w1 r Number of living son"

*wave 1 spouse number of living son
gen s1son =.
spouse r1son, result(s1son) wave(1)
label variable s1son "s1son:w1 s Number of living son"

gen r1dau =0 if inw1 == 1
forvalues i = 1/16 {
	 replace r1dau = .d if chsex`i' == -8 & mi(r1dau)
    replace r1dau = .r if chsex`i' == -9 & mi(r1dau) 
	replace r1dau = r1dau + 1 if chsex`i' == 2
}
label variable r1dau "r1dau:w1 r Number of living daughter"

*wave 1 spouse number of living daughter
gen s1dau =.
spouse r1dau, result(s1dau) wave(1)
label variable s1dau "s1dau:w1 s Number of living daughter"


*****Children Coreside******
*spouse person number
gen sperid = .
spouse perid, result(sperid) wave(1)

*spouse relationship to each person in household
gen dhr1= dhr
local sp
forvalues p =1/`maxhhn' {
	gen sdhr`p' = .
	spouse dhr`p', result(sdhr`p') wave(1)
	local sp `sp' sdhr`p'
}

gen cchild=0 if inw`wavenum' == 1
forvalues i =1/`maxhhn' {
    replace cchild = cchild + 1 if inlist(dhr`i',3,4,5,6,7) | inlist(sdhr`i',3,4,5,6,7)
}

gen h1coresd=.
replace h1coresd=1 if inrange(cchild,1,99)
replace h1coresd=0 if cchild==0
replace h1coresd= .k if r1child ==0
label variable h1coresd "h1coresd:w1 Any Child co-reside"
label value h1coresd coreside

***Number of living siblings***
*wave 1 respondent number of living siblings
gen r1livsib =.
missing_w1 nsibs, result(r1livsib)
replace r1livsib = nsibs if inrange(nsibs,0,97)
label variable r1livsib "r1livsib:w1 r Number of living siblings"

*wave 1 spouse number of living siblings
gen s1livsib =.
spouse r1livsib, result(s1livsib) wave(1)
label variable s1livsib "s1livsib:w1 s Number of living siblings"

*check

***parental mortality: mother alive***
*wave 1 respondent mother alive status
gen r1momliv =.
missing_w1 malive, result(r1momliv)
replace r1momliv = 0 if malive == 2 
replace r1momliv = 1 if malive == 1 
label variable r1momliv "r1momliv:w1 r mother alive"

*wave 1 spouse mother alive status
gen s1momliv =.
spouse r1momliv, result(s1momliv) wave(1)
label variable s1momliv "s1momliv:w1 s mother alive"


label values r1momliv liv
label values s1momliv liv

*check

***parental mortality: father alive***
*wave 1 respondent father alive status
gen r1dadliv =.
missing_w1 falive, result(r1dadliv)
replace r1dadliv = 0 if falive == 2 
replace r1dadliv = 1 if falive == 1
label variable r1dadliv "r1dadliv:w1 r father alive"

*wave 1 spouse father alive status
gen s1dadliv =.
spouse r1dadliv, result(s1dadliv) wave(1)
label variable s1dadliv "s1dadliv:w1 s father alive"

label values r1dadliv liv
label values s1dadliv liv

*check

***parental mortality: mother's current age or age at death***
*wave 1 respondent mother's age
gen r1momage =.
missing_w1 mothage magedied, result(r1momage)
replace r1momage = magedied if r1momliv == 0 & inrange(magedied,16,120)
replace r1momage = mothage if r1momliv == 1 & inrange(mothage,16,120)

label variable r1momage "r1momage:w1 r mother age current/at death"

*wave 1 spouse mother's age
gen s1momage =.
spouse r1momage, result(s1momage) wave(1)
label variable s1momage "s1momage:w1 s mother age current/at death"

*check 

***parental mortality: father's current age or age at death***
*wave 1 respondent father's age
gen r1dadage =.
missing_w1 fathage fagedied, result(r1dadage)
replace r1dadage = fagedied if r1dadliv == 0 & inrange(fagedied,16,120)
replace r1dadage = fathage if r1dadliv == 1 & inrange(fathage,16,120)

label variable r1dadage "r1dadage:w1 r father age current/at death"

*wave 1 spouse father's age
gen s1dadage =.
spouse r1dadage, result(s1dadage) wave(1)
label variable s1dadage "s1dadage:w1 s father age current/at death"

*check 


***Number of living parents***
*wave 1 respondent number of living parents
gen r1livpar=.
missing_H r1momliv r1dadliv, result(r1livpar)
replace r1livpar=0 if !missing(r1momliv) & !missing(r1dadliv)
replace r1livpar = r1livpar + 1 if r1momliv==1 & !mi(r1livpar)
replace r1livpar = r1livpar + 1 if r1dadliv==1 & !mi(r1livpar)
label variable r1livpar "r1livpar:w1 r Number of living parents"

*wave 1 spouse number of living parents
gen s1livpar =.
spouse r1livpar, result(s1livpar) wave(1)
label variable s1livpar "s1livpar:w1 s Number of living parents"

*check

*******Family Contact**************
**Child Contact in person****
gen r1kcntf=.
replace r1kcntf= .m if r1kcntf ==. & inw1sc == 1
replace r1kcntf= .m if scchdg == -1
replace r1kcntf= .c if inw1 == 1 & inw1sc == 0
replace r1kcntf= .d if scchdg == -8
replace r1kcntf= .r if scchdg == -9
replace r1kcntf= .k if scchd == 2 & scchdg == -1
replace r1kcntf= 0  if inlist(scchdg,3,4,5,6) 
replace r1kcntf= 1  if inlist(scchdg,1,2) | h1coresd == 1
label variable r1kcntf "r1kcntf:w1 r any weekly contact w/ children in person"
label value r1kcntf contact

*wave 1 spouse
gen s1kcntf =.
spouse r1kcntf, result(s1kcntf) wave(1)
label variable s1kcntf "s1kcntf:w1 s any weekly contact w/ children in person"
label value s1kcntf contact

**Child Contact in phone/email****
gen r1kcntpm=.
replace r1kcntpm= .m if r1kcntpm ==. & inw1sc==1
replace r1kcntpm= .m if scchdh == -1 | scchdi == -1
replace r1kcntpm= .h if cchild == r1child & inrange(r1child,1,99)
replace r1kcntpm= .c if inw1 == 1 & inw1sc == 0
replace r1kcntpm= .d if scchdh == -8 | scchdi == -8
replace r1kcntpm= .r if scchdh == -9 | scchdi == -9
replace r1kcntpm= .k if scchd == 2 & (scchdh == -1 | scchdi == -1)
replace r1kcntpm= 0  if inlist(scchdh,3,4,5,6) | inlist(scchdi,3,4,5,6) 
replace r1kcntpm= 1  if inlist(scchdh,1,2) | inlist(scchdi,1,2)
label variable r1kcntpm "r1kcntpm:w1 r any weekly contact w/ children-phone/email"
label value r1kcntpm contact

*wave 1 spouse
gen s1kcntpm =.
spouse r1kcntpm, result(s1kcntpm) wave(1)
label variable s1kcntpm "s1kcntpm:w1 s any weekly contact w/ children-phone/email"
label value s1kcntpm contact

**Any Child Contact in person/phone/email****
gen r1kcnt=.
replace r1kcnt= .m if r1kcntf == .m | r1kcntpm == .m
replace r1kcnt= .h if cchild == r1child & inrange(r1child,1,99)
replace r1kcnt= .c if r1kcntf == .c | r1kcntpm == .c
replace r1kcnt= .d if r1kcntf == .d | r1kcntpm == .d
replace r1kcnt= .r if r1kcntf == .r | r1kcntpm == .r
replace r1kcnt= .k if r1kcntf == .k | r1kcntpm == .k
replace r1kcnt= 0 if (r1kcntf == 0 | r1kcntpm == 0) 
replace r1kcnt= 1 if (r1kcntf == 1 | r1kcntpm == 1) 
label variable r1kcnt "r1kcnt:w1 r any weekly contact w/ children in person/phone/email"
label value r1kcnt contact

*wave 1 spouse
gen s1kcnt =.
spouse r1kcnt, result(s1kcnt) wave(1)
label variable s1kcnt "s1kcnt:w1 s any weekly contact w/ children in person/phone/email"
label value s1kcnt contact

*******Family Contact**************
**Relatives Contact in person****
gen r1rcntf=.
replace r1rcntf= .m if r1rcntf == . & inw1sc == 1 
replace r1rcntf= .m if scfamg == -1
replace r1rcntf= .c if inw1 == 1 & inw1sc == 0
replace r1rcntf= .d if scfamg == -8
replace r1rcntf= .r if scfamg == -9
replace r1rcntf= .n if scfam == 2 & scfamg == -1
replace r1rcntf= 0  if inlist(scfamg,3,4,5,6) 
replace r1rcntf= 1  if inlist(scfamg,1,2)
forvalues i = 1/`maxhhn' {
	replace r1rcntf = 1 if inlist(dhr`i',8,9,10,11,12,13,14,15,16,17,18,19,20,21)
}
label variable r1rcntf "r1rcntf:w1 r any weekly contact w/ relative in person"
label value r1rcntf contact

*wave 1 spouse
gen s1rcntf =.
spouse r1rcntf, result(s1rcntf) wave(1)
label variable s1rcntf "s1rcntf:w1 s any weekly contact w/ relative in person"
label value s1rcntf contact

**relative Contact in phone/email****
gen r1rcntm=.
replace r1rcntm= .m if r1rcntm ==. & inw1sc ==1
replace r1rcntm= .m if scfami == -1
replace r1rcntm= .c if inw1 == 1 & inw1sc == 0
replace r1rcntm= .d if scfami == -8
replace r1rcntm= .r if scfami == -9
replace r1rcntm= .n if scfam == 2 & scfami == -1
replace r1rcntm= 0  if inlist(scfami,3,4,5,6)
replace r1rcntm= 1  if inlist(scfami,1,2)
label variable r1rcntm "r1rcntm:w1 r any weekly contact w/ relative email"
label value r1rcntm contact

*wave 1 spouse
gen s1rcntm =.
spouse r1rcntm, result(s1rcntm) wave(1)
label variable s1rcntm "s1rcntm:w1 s any weekly contact w/ relative email"
label value s1rcntm contact

*******Family Contact**************
**Friend Contact in person****
gen r1fcntf=.
replace r1fcntf= .m if r1fcntf == . & inw1sc ==1
replace r1fcntf= .m if scfrdg == -1
replace r1fcntf= .c if inw1 == 1 & inw1sc == 0
replace r1fcntf= .d if scfrdg == -8
replace r1fcntf= .r if scfrdg == -9
replace r1fcntf= .n if scfrd == 2 & scfrdg == -1
replace r1fcntf= 0  if inlist(scfrdg,3,4,5,6)
replace r1fcntf= 1  if inlist(scfrdg,1,2)
label variable r1fcntf "r1fcntf:w1 r any weekly contact w/ friend in person"
label value r1fcntf contact

*wave 1 spouse
gen s1fcntf =.
spouse r1fcntf, result(s1fcntf) wave(1)
label variable s1fcntf "s1fcntf:w1 s any weekly contact w/ friend in person"
label value s1fcntf contact

**Friend Contact in phone/email****
gen r1fcntpm=.
replace r1fcntpm= .m if r1fcntpm == . & inw1sc ==1
replace r1fcntpm= .m if scfrdh == -1 | scfrdi == -1
replace r1fcntpm= .c if inw1 == 1 & inw1sc == 0
replace r1fcntpm= .d if scfrdh == -8 | scfrdi == -8
replace r1fcntpm= .r if scfrdh == -9 | scfrdi == -9
replace r1fcntpm= .n if scfrd == 2 & (scfrdh == -1 |scfrdi ==-1)
replace r1fcntpm= 0  if (inlist(scfrdh,3,4,5,6) | inlist(scfrdi,3,4,5,6) ) 
replace r1fcntpm= 1  if (inlist(scfrdh,1,2) | inlist(scfrdi,1,2)) 
label variable r1fcntpm "r1fcntpm:w1 r any weekly contact w/ friend phone/email"
label value r1fcntpm contact

*wave 1 spouse
gen s1fcntpm =.
spouse r1fcntpm, result(s1fcntpm) wave(1)
label variable s1fcntpm "s1fcntpm:w1 s any weekly contact w/ friend phone/email"
label value s1fcntpm contact

**Any Friend Contact in person/phone/email****
gen r1fcnt=.
replace r1fcnt= .m if r1fcntpm == .m | r1fcntf == .m
replace r1fcnt= .c if r1fcntpm == .c | r1fcntf == .c
replace r1fcnt= .d if r1fcntpm == .d | r1fcntf == .d
replace r1fcnt= .r if r1fcntpm == .r | r1fcntf == .r
replace r1fcnt= .n if r1fcntpm == .n | r1fcntf == .n
replace r1fcnt= 0 if (r1fcntpm == 0 | r1fcntf == 0 ) 
replace r1fcnt= 1 if (r1fcntpm == 1 | r1fcntf == 1 ) 
label variable r1fcnt "r1fcnt:w1 r any weekly contact w/ friend in person/phone/email"
label value r1fcnt contact

*wave 1 spouse
gen s1fcnt =.
spouse r1fcnt, result(s1fcnt) wave(1)
label variable s1fcnt "s1fcnt:w1 s any weekly contact w/ friend in person/phone/email"
label value s1fcnt contact

**drop intermediate variables
drop cchild
drop dhr1
drop sperid `sp'

***********Family Care/Informal Care****************
***Received care giving*****
gen r1rcaany=.
replace r1rcaany= .m if r1rcaany == . & inw1 == 1
replace r1rcaany= .m if hehpa == -1
replace r1rcaany= .s if hehpa == -1 & (heada01==96  ///
											 | heada02==96 | heada03==96  ///
											 | heada04==96 | heada05==96  ///
											 | heada06==96 | heada07==96  ///
											 | heada08==96 | heada09==96  ///
											 | heada10==96 | heada11==96  ///
											 | headb01==96 | headb02==96  ///
											 | headb03==96 | headb04==96  ///
											 | headb05==96 | headb06==96  ///
											 | headb07==96 | headb08==96  ///
											 | headb09==96 | headb10==96  ///
											 | headb11==96 | headb12==96  ///
											 | headb13==96 | headb14==96  )
replace r1rcaany= .d if hehpa == -8
replace r1rcaany= .r if hehpa == -9
replace r1rcaany= 0 if hehpa == 2
replace r1rcaany= 1 if hehpa == 1
label variable r1rcaany "r1rcaany:w1 R Received any informal care"
label value r1rcaany contact

gen s1rcaany =.
spouse r1rcaany, result(s1rcaany) wave(1)
label variable s1rcaany "s1rcaany:w1 S Received any informal care"
label value s1rcaany contact

***Gave Care****
gen r1gcaany= .
replace r1gcaany= .m if r1gcaany ==. & inw1 == 1
replace r1gcaany= .m if wpact1 == -1 | wpact2 == -1 | wpact3 == -1 | wpact4 == -1 | wpact5 == -1 | wpact6 == -1
replace r1gcaany= .d if wpact1 == -8 | wpact2 == -8 | wpact3 == -8 | wpact4 == -8 | wpact5 == -8 | wpact6 == -8
replace r1gcaany= .r if wpact1 == -9 | wpact2 == -9 | wpact3 == -9 | wpact4 == -9 | wpact5 == -9 | wpact6 == -9
replace r1gcaany= 0  if inlist(wpact1,1,2,3,6,96)| inlist(wpact2,1,2,3,6,96)|inlist(wpact3,1,2,3,6,96) | inlist(wpact4,1,2,3,6,96)| inlist(wpact5,1,2,3,6,96)|inlist(wpact6,1,2,3,6,96)
replace r1gcaany= 1  if inlist(wpact1,4,5) | inlist(wpact2,4,5) | inlist(wpact3,4,5) |inlist(wpact4,4,5) | inlist(wpact5,4,5) | inlist(wpact6,4,5)
label variable r1gcaany "r1gcaany:w1 R Gave any informal care to anyone"
label value r1gcaany contact

gen s1gcaany =.
spouse r1gcaany, result(s1gcaany) wave(1)
label variable s1gcaany "s1gcaany:w1 S Gave any informal care to anyone"
label value s1gcaany contact

***Number of grandchildren***
gen r1grchild_e =. 
replace r1grchild_e = .m if inw1 == 1
replace r1grchild_e = .d if ngrandch == -8
replace r1grchild_e = .r if ngrandch == -9
replace r1grchild_e = ngrandch if inrange(ngrandch,0,90)
label variable r1grchild_e "r1grchild_e:w1 R number of grandchildren/great-grandchildren"

gen s1grchild_e =.
spouse r1grchild_e, result(s1grchild_e) wave(1)
label variable s1grchild_e "s1grchild_e:w1 S number of grandchildren/great-grandchildren"

****Gave care to grandchildren*****
gen r1gkcare = .
replace r1gkcare= .m if r1gkcare ==. & inw1 == 1
replace r1gkcare= .m if spcab1 == -1 |spcab2 == -1 |spcab3 == -1 | spcab4 == -1
replace r1gkcare= .p if askpx1 == 1
replace r1gkcare= .d if spcab1 == -8 |spcab2 == -8 |spcab3 == -8 | spcab4 == -8 |spcaa  == -8
replace r1gkcare= .r if spcab1 == -9 |spcab2 == -9 |spcab3 == -9 | spcab4 == -9 |spcaa  == -9
replace r1gkcare= .n if r1grchild_e == 0
replace r1gkcare= 0  if spcaa  ==2 | inlist(spcab1,1,2,4,5,6,7,95) | inlist(spcab2,1,2,4,5,6,7,95) | inlist(spcab3,1,2,4,5,6,7,95) | inlist(spcab4,1,2,4,5,6,7,95)
replace r1gkcare= 1  if spcaa==1 & (spcab1 == 3 |spcab2 == 3 |spcab3 == 3 | spcab4 == 3)
label variable r1gkcare "r1gkcare:w1 R gave care to grandchildren"
label value r1gkcare contact
 
gen s1gkcare =.
spouse r1gkcare, result(s1gkcare) wave(1)
label variable s1gkcare "s1gkcare:w1 S gave care to grandchildren"
label value s1gkcare contact

**Participate in social work**
gen r1socyr = .
replace r1socyr = .m if scorgn == -1 | scorgn ==98
replace r1socyr = .c if inw1 == 1 & inw1sc == 0
replace r1socyr = .r if scorgn == -9
replace r1socyr = 0 if scorgn == 0  | scorg9 == 1
replace r1socyr = 1 if inrange(scorgn,1,96)

label variable r1socyr "r1socyr:w1 R participate in social activities"
label value r1socyr social

gen s1socyr =.
spouse r1socyr, result(s1socyr) wave(1)
label variable s1socyr "s1socyr:w1 S participate in social activities"
label value s1socyr social

****Parental SES****
***Main carer relationship to the respondent***
gen ramarela = .
replace ramarela = .m if inlist(dikliv,-1,86) & inw`wavenum' == 1
replace ramarela = .d if dikliv == -8
replace ramarela = .r if dikliv == -9
replace ramarela = .h if dikliv == 9 
replace ramarela = dikliv if inrange(dikliv,1,8) 
replace ramarela = 9  if inlist(dikliv,51,52,53,54,55,85)
label variable ramarela "ramarela:main carer relationship to the respondent"
label value ramarela rel

*wave 1 spouse  occupation 
gen s`wavenum'marela =.
spouse ramarela, result(s`wavenum'marela) wave(`wavenum')
label variable s`wavenum'marela "s`wavenum'marela:w`wavenum' main carer relationship to the spouse"
label value s`wavenum'marela rel

***main carer occupation at 14****
gen ramaoccup = .
replace ramaoccup = .m if difjob == -1 & inw`wavenum' == 1
replace ramaoccup = .h if difjob == -1 & dikliv == 9
replace ramaoccup = .d if difjob == -8 
replace ramaoccup = .r if difjob == -9
replace ramaoccup = .w if difjob == 13
replace ramaoccup = .n if difjob == 14 
replace ramaoccup = .s if difjob == 15 
replace ramaoccup = 1 if inrange(difjob,2,4)
replace ramaoccup = 2 if inrange(difjob,5,9) 
replace ramaoccup = 3 if difjob == 1
replace ramaoccup = 4 if inrange(difjob,10,12) 
label variable ramaoccup "ramaoccup:r main carer occupation at age 14"
label value ramaoccup occu

*wave 1 spouse  occupation 
gen s`wavenum'maoccup =.
spouse ramaoccup, result(s`wavenum'maoccup) wave(`wavenum')
label variable s`wavenum'maoccup "s`wavenum'maoccup:w`wavenum' s main carer occupation at age 14"
label value s`wavenum'maoccup occu


***drop ELSA index file raw variables***
drop `family_w1_index'

***drop ELSA wave 1 core file raw variables***
drop `family_w1_core'

***drop ELSA wave 1 derived  file raw variables***
drop `family_w1_derv'


	

*set wave number
local wavenum = 2

***merge with index file***
local family_w2_index idahhw2 sex persno
merge 1:1 idauniq using "$index", keepusing(`family_w2_index') nogen

***merge with wave 2 core data***
local family_w2_core PersNo DhR DhR? DhR1? /*DhC*/ DhC? DhC1? DHCR?? DHCR??? DiSib DhCS? DhCS1? ///
											scchd scchdg scchdh scchdi scfam scfamg scfamh scfami ///
											heada0? heada1? headb0? headb1? DiGnMy DiGnMyC DiGran scorgn scorg09 ///
											scfrd scfrdg scfrdh scfrdi HeHpa askpx1 ErCAA ErCAB? hotran wpact? DiKLiv DiFJob

                     
merge 1:1 idauniq using "$wave_2_core", keepusing(`family_w2_core') nogen

***merge with wave 2 derived data***
local family_w2_derv chotot chitot alltotch 

merge 1:1 idauniq using "$wave_2_derv", keepusing(`family_w2_derv') nogen


***merge with wave 2 derived data***
local family_w2_derv2 ngrandch chsex? chsex1? nsibs malive mothage magedied falive ///
                     fathage fagedied npeople

merge 1:1 idauniq using "$wave_2_derv2", keepusing(`family_w2_derv2') nogen


*count number of household respondents
local n = 1
foreach var of varlist DhR DhR? DhR1? {
    local maxhhn = `n'
    local ++n 
}

***Number of people living in house***
*wave 2 household number of people living in house
gen h2hhres = npeople
label variable h2hhres "h2hhres:w2 Number of people in Household"

*check

***Number of children***
*spouse person number
gen spersno = .
spouse PersNo, result(spersno) wave(2)

****Number of living children
gen r2child =0 if inw2 == 1
forvalues i = 1/16 {
	replace r2child = r2child + 1 if inlist(chsex`i',1,2,-8,-9)
}
label variable r2child "r2child:w2 R Number of living children "

*wave 1 spouse number of living child
gen s2child =.
spouse r2child, result(s2child) wave(2)
label variable s2child "s2child:w2 S Number of living children"


gen r2son =0 if inw2 == 1
forvalues i = 1/16 {
	replace r2son = .d if chsex`i' == -8 & mi(r2son)
  replace r2son = .r if chsex`i' == -9 & mi(r2son) 
	replace r2son = r2son + 1 if chsex`i' == 1
}

label variable r2son "r2son:w2 r Number of living son "

*wave 1 spouse number of living son
gen s2son =.
spouse r2son, result(s2son) wave(2)
label variable s2son "s2son:w2 s Number of living son"

gen r2dau =0 if inw2 == 1
forvalues i = 1/16 {
	 replace r2dau = .d if chsex`i' == -8 & mi(r2dau)
    replace r2dau = .r if chsex`i' == -9 & mi(r2dau) 
	replace r2dau = r2dau + 1 if chsex`i' == 2
}
label variable r2dau "r2dau:w2 r Number of living daughter"

*wave 1 spouse number of living daughter
gen s2dau =.
spouse r2dau, result(s2dau) wave(2)
label variable s2dau "s2dau:w2 s Number of living daughter"

*****Children Coreside******
*spouse relationship to each person in household
gen DhR1= DhR
local sp
forvalues p =1/`maxhhn' {
	gen sDhR`p' = .
	spouse DhR`p', result(sDhR`p') wave(2)
	local sp `sp' sDhR`p'
}

gen cchild=0 if inw`wavenum' == 1
forvalues i =1/`maxhhn' { 
    replace cchild = cchild + 1 if inlist(DhR`i',3,4,5,6,7) | inlist(sDhR`i',3,4,5,6,7)
}

gen h2coresd=.
replace h2coresd=1 if inrange(cchild,1,99)
replace h2coresd=0 if cchild==0
replace h2coresd= .k if r2child ==0
label variable h2coresd "h2coresd:w2 Any Child co-reside"
label value h2coresd coreside


***Number of living siblings***
*wave 2 respondent number of living siblings
gen r2livsib =.
replace r2livsib = .m if inw2 == 1
replace r2livsib = .d if nsibs == -8
replace r2livsib = .r if nsibs == -9
replace r2livsib = nsibs if inrange(nsibs,0,97)
label variable r2livsib "r2livsib:w2 r Number of living siblings"

*wave 2 spouse number of living siblings
gen s2livsib =.
spouse r2livsib, result(s2livsib) wave(2)
label variable s2livsib "s2livsib:w2 s Number of living siblings"

*check
***parental mortality: mother alive***
*wave 2 respondent mother alive status
gen r2momliv =.
missing_w2 malive, result(r2momliv)
replace r2momliv = .m if malive == -2 
replace r2momliv = 0 if malive == 2 
replace r2momliv = 1 if malive == 1 
label variable r2momliv "r2momliv:w2 r mother alive"

*wave 2 spouse mother alive status
gen s2momliv =.
spouse r2momliv, result(s2momliv) wave(2)
label variable s2momliv "s2momliv:w2 s mother alive"

label values r2momliv liv
label values s2momliv liv

*check

***parental mortality: father alive***
*wave 2 respondent father alive status
gen r2dadliv =.
missing_w2 falive, result(r2dadliv)
replace r2dadliv = .m if falive==-2
replace r2dadliv = 0 if falive == 2 
replace r2dadliv = 1 if falive == 1
label variable r2dadliv "r2dadliv:w2 r father alive"

*wave 2 spouse father alive status
gen s2dadliv =.
spouse r2dadliv, result(s2dadliv) wave(2)
label variable s2dadliv "s2dadliv:w2 s father alive"

label values r2dadliv liv
label values s2dadliv liv

*check

***parental mortality: mother's current age or age at death***
*wave 2 respondent mother's age
gen r2momage =.
missing_w2 mothage magedied, result(r2momage)
replace r2momage = magedied if r2momliv == 0 & inrange(magedied,16,120)
replace r2momage = mothage if r2momliv == 1 & inrange(mothage,16,120)

label variable r2momage "r2momage:w2 r mother age current/at death"

*wave 2 spouse mother's age
gen s2momage =.
spouse r2momage, result(s2momage) wave(2)
label variable s2momage "s2momage:w2 s mother age current/at death"

*check 

***parental mortality: father's current age or age at death***
*wave 2 respondent father's age
gen r2dadage =.
missing_w2 fathage fagedied, result(r2dadage)
replace r2dadage = fagedied if r2dadliv == 0 & inrange(fagedied,16,120)
replace r2dadage = fathage if r2dadliv == 1 & inrange(fathage,16,120)

label variable r2dadage "r2dadage:w2 r father age current/at death"

*wave 2 spouse father's age
gen s2dadage =.
spouse r2dadage, result(s2dadage) wave(2)
label variable s2dadage "s2dadage:w2 s father age current/at death"

*check 

***Number of living parents***
*wave 2 respondent number of living parents
gen r2livpar=.
missing_H r2momliv r2dadliv, result(r2livpar)
replace r2livpar=0 if !missing(r2momliv) & !missing(r2dadliv)
replace r2livpar = r2livpar +1 if r2momliv==1 & !mi(r2livpar)
replace r2livpar = r2livpar +1 if r2dadliv==1 & !mi(r2livpar)
label variable r2livpar "r2livpar:w2 r Number of living parents"

*wave 2 spouse number of living parents
gen s2livpar =.
spouse r2livpar, result(s2livpar) wave(2)
label variable s2livpar "s2livpar:w2 s Number of living parents"

*check

*******Family Contact**************
**Child Contact in person****
gen r2kcntf=.
replace r2kcntf= .m if r2kcntf ==. & inw2sc == 1
replace r2kcntf= .m if scchdg == -1
replace r2kcntf= .c if inw2 == 1 & inw2sc == 0
replace r2kcntf= .d if scchdg == -8
replace r2kcntf= .r if scchdg == -9
replace r2kcntf= .k if scchd == 2 & scchdg == -1
replace r2kcntf= 0  if inlist(scchdg,3,4,5,6)
replace r2kcntf= 1  if inlist(scchdg,1,2) | h2coresd == 1
label variable r2kcntf "r2kcntf:w2 r any weekly contact w/ children in person"
label val r2kcntf contact

*wave 2 spouse
gen s2kcntf =.
spouse r2kcntf, result(s2kcntf) wave(2)
label variable s2kcntf "s2kcntf:w2 s any weekly contact w/ children in person"
label value s2kcntf contact

**Child Contact in phone/email****
gen r2kcntpm=.
replace r2kcntpm= .m if r2kcntpm ==. & inw2sc==1
replace r2kcntpm= .m if scchdh == -1 | scchdi == -1
replace r2kcntpm= .h if cchild == r2child & inrange(r2child,1,99)
replace r2kcntpm= .c if inw2 == 1 & inw2sc == 0
replace r2kcntpm= .d if scchdh == -8 | scchdi == -8
replace r2kcntpm= .r if scchdh == -9 | scchdi == -9
replace r2kcntpm= .k if scchd == 2 & (scchdh == -1 & scchdi == -1)
replace r2kcntpm= 0  if (inlist(scchdh,3,4,5,6) | inlist(scchdi,3,4,5,6) ) 
replace r2kcntpm= 1  if inlist(scchdh,1,2) | inlist(scchdi,1,2) 
label variable r2kcntpm "r2kcntpm:w2 r any weekly contact w/ children-phone/email"
label val r2kcntpm contact

*wave 2 spouse
gen s2kcntpm =.
spouse r2kcntpm, result(s2kcntpm) wave(2)
label variable s2kcntpm "s2kcntpm:w2 s any weekly contact w/ children-phone/email"
label value s2kcntpm contact

**Any Child Contact in person/phone/email****
gen r2kcnt=.
replace r2kcnt= .m if r2kcntf == .m | r2kcntpm == .m
replace r2kcnt= .h if cchild == r2child & inrange(r2child,1,99)
replace r2kcnt= .c if r2kcntf == .c | r2kcntpm == .c
replace r2kcnt= .d if r2kcntf == .d | r2kcntpm == .d
replace r2kcnt= .r if r2kcntf == .r | r2kcntpm == .r
replace r2kcnt= .k if r2kcntf == .k | r2kcntpm == .k
replace r2kcnt= 0 if (r2kcntf == 0 | r2kcntpm == 0 ) 
replace r2kcnt= 1 if (r2kcntf == 1 | r2kcntpm == 1 ) 
label variable r2kcnt "r2kcnt:w2 r any weekly contact w/ children in person/phone/email"
label value r2kcnt contact

*wave 2 spouse
gen s2kcnt =.
spouse r2kcnt, result(s2kcnt) wave(2)
label variable s2kcnt "s2kcnt:w2 s any weekly contact w/ children in person/phone/email"
label value s2kcnt contact

*******Family Contact**************
**Relatives Contact in person****
gen r2rcntf=.
replace r2rcntf= .m if r2rcntf == . & inw2sc == 1 
replace r2rcntf= .m if scfamg == -1
replace r2rcntf= .c if inw2 == 1 & inw2sc == 0
replace r2rcntf= .d if scfamg == -8
replace r2rcntf= .r if scfamg == -9
replace r2rcntf= .n if scfam == 2 & scfamg == -1
replace r2rcntf= 0  if inlist(scfamg,3,4,5,6)
replace r2rcntf= 1  if inlist(scfamg,1,2) 
forvalues i = 1/`maxhhn' {
	replace r2rcntf = 1 if inlist(DhR`i',8,9,10,11,12,13,14,15,16,17,18,19,20,21)
}
label variable r2rcntf "r2rcntf:w2 r any weekly contact w/ relative in person"
label val r2rcntf contact

*wave 1 spouse
gen s2rcntf =.
spouse r2rcntf, result(s2rcntf) wave(2)
label variable s2rcntf "s2rcntf:w2 s any weekly contact w/ relative in person"
label value s2rcntf contact

**Relative Contact in phone/email****
gen r2rcntpm=.
replace r2rcntpm= .m if r2rcntpm ==. & inw2sc ==1
replace r2rcntpm= .m if scfami == -1 & scfamh == -1
replace r2rcntpm= .c if inw2 == 1 & inw2sc == 0
replace r2rcntpm= .d if scfami == -8 & scfamh == -8
replace r2rcntpm= .r if scfami == -9 & scfamh == -9
replace r2rcntpm= .n if scfam == 2 & (scfami == -1 | scfamh == -1)
replace r2rcntpm= 0  if inlist(scfamh,3,4,5,6) | inlist(scfami,3,4,5,6) 
replace r2rcntpm= 1  if inlist(scfamh,1,2) | inlist(scfami,1,2)
label variable r2rcntpm "r2rcntpm:w2 r any weekly contact w/ relative-phone/email"
label val r2rcntpm contact

*wave 2 spouse
gen s2rcntpm =.
spouse r2rcntpm, result(s2rcntpm) wave(2)
label variable s2rcntpm "s2rcntpm:w2 s any weekly contact w/ relative-phone/email"
label value s2rcntpm contact

**Any Relative Contact in person/phone/email****
gen r2rcnt=.
replace r2rcnt= .m if r2rcntf == .m | r2rcntpm == .m
replace r2rcnt= .c if r2rcntf == .c | r2rcntpm == .c
replace r2rcnt= .d if r2rcntf == .d | r2rcntpm == .d
replace r2rcnt= .r if r2rcntf == .r | r2rcntpm == .r
replace r2rcnt= .n if r2rcntf == .n | r2rcntpm == .n
replace r2rcnt= 0 if (r2rcntpm == 0 | r2rcntf == 0 ) 
replace r2rcnt= 1 if (r2rcntpm == 1 | r2rcntf == 1 ) 
label variable r2rcnt "r2rcnt:w2 r any weekly contact w/ relative in person/phone/email"
label val r2rcnt contact

*wave 1 spouse
gen s2rcnt =.
spouse r2rcnt, result(s2rcnt) wave(2)
label variable s2rcnt "s2rcnt:w2 s any weekly contact w/ relative in person/phone/email"
label value s2rcnt contact

*******Family Contact**************
**Friend Contact in person****
gen r2fcntf=.
replace r2fcntf= .m if r2fcntf == . & inw2sc ==1
replace r2fcntf= .m if scfrdg == -1
replace r2fcntf= .c if inw2 == 1 & inw2sc == 0
replace r2fcntf= .d if scfrdg == -8
replace r2fcntf= .r if scfrdg == -9
replace r2fcntf= .n if scfrd == 2 & scfrdg == -1
replace r2fcntf= 0  if inlist(scfrdg,3,4,5,6) 
replace r2fcntf= 1  if inlist(scfrdg,1,2) 
label variable r2fcntf "r2fcntf:w2 r any weekly contact w/ friend in person"
label val r2fcntf contact

*wave 2 spouse
gen s2fcntf =.
spouse r2fcntf, result(s2fcntf) wave(2)
label variable s2fcntf "s2fcntf:w2 s any weekly contact w/ friend in person"
label value s2fcntf contact

**Friend Contact in phone/email****
gen r2fcntpm=.
replace r2fcntpm= .m if r2fcntpm == . & inw2sc ==1
replace r2fcntpm= .m if scfrdh == -1 | scfrdi == -1
replace r2fcntpm= .c if inw2 == 1 & inw2sc == 0
replace r2fcntpm= .d if scfrdh == -8 | scfrdi == -8
replace r2fcntpm= .r if scfrdh == -9 | scfrdi == -9
replace r2fcntpm= .n if scfrd == 2 & (scfrdh == -1 |scfrdi ==-1)
replace r2fcntpm= 0  if inlist(scfrdh,3,4,5,6) | inlist(scfrdi,3,4,5,6) 
replace r2fcntpm= 1  if inlist(scfrdh,1,2) | inlist(scfrdi,1,2)
label variable r2fcntpm "r2fcntpm:w2 r any weekly contact w/ friend phone/email"
label val r2fcntpm contact

*wave 2 spouse
gen s2fcntpm =.
spouse r2fcntpm, result(s2fcntpm) wave(2)
label variable s2fcntpm "s2fcntpm:w2 s any weekly contact w/ friend phone/email"
label value s2fcntpm contact

**Any Friend Contact in person/phone/email****
gen r2fcnt=.
replace r2fcnt= .m if r2fcntpm == .m | r2fcntf == .m
replace r2fcnt= .c if r2fcntpm == .c | r2fcntf == .c
replace r2fcnt= .d if r2fcntpm == .d | r2fcntf == .d
replace r2fcnt= .r if r2fcntpm == .r | r2fcntf == .r
replace r2fcnt= .n if r2fcntpm == .n | r2fcntf == .n
replace r2fcnt= 0 if (r2fcntpm == 0 | r2fcntf == 0 ) 
replace r2fcnt= 1 if (r2fcntpm == 1 | r2fcntf == 1 ) 
label variable r2fcnt "r2fcnt:w2 r any weekly contact w/ friend in person/phone/email"
label val r2fcnt contact 

*wave 2 spouse
gen s2fcnt =.
spouse r2fcnt, result(s2fcnt) wave(2)
label variable s2fcnt "s2fcnt:w2 s any weekly contact w/ friend in person/phone/email"
label value s2fcnt contact

*drop intermediate variables
drop cchild
drop DhR1
drop spersno `sp'


***********Famliy Care/Informal Care****************
***Received care giving*****
gen r2rcaany=.
replace r2rcaany= .m if r2rcaany == . & inw2 == 1
replace r2rcaany= .m if HeHpa == -1
replace r2rcaany= .s if HeHpa == -1 & (heada01==96  ///
											 | heada02==96 | heada03==96  ///
											 | heada04==96 | heada05==96  ///
											 | heada06==96 | heada07==96  ///
											 | heada08==96 | heada09==96  ///
											 | heada10==96  ///
											 | headb01==96 | headb02==96  ///
											 | headb03==96 | headb04==96  ///
											 | headb05==96 | headb06==96  ///
											 | headb07==96 | headb08==96  ///
											 | headb09==96 | headb10==96  ///
											 | headb11==96 | headb12==96  ///
											 | headb13==96 )
replace r2rcaany= .d if HeHpa == -8
replace r2rcaany= .r if HeHpa == -9
replace r2rcaany= 0 if HeHpa == 2
replace r2rcaany= 1 if HeHpa == 1
label variable r2rcaany "r2rcaany:w2 R Received any informal care"
label value r2rcaany contact

gen s2rcaany =.
spouse r2rcaany, result(s2rcaany) wave(2)
label variable s2rcaany "s2rcaany:w2 S Received any informal care"
label value s2rcaany contact

***Gave Care****
gen r2gcaany= .
replace r2gcaany= .m if r2gcaany ==. & inw2 == 1
replace r2gcaany= .m if wpact1 == -1 | wpact2 == -1 | wpact3 == -1 | wpact4 == -1 | wpact5 == -1 | wpact6 == -1
replace r2gcaany= .d if wpact1 == -8 | wpact2 == -8 | wpact3 == -8 | wpact4 == -8 | wpact5 == -8 | wpact6 == -8
replace r2gcaany= .r if wpact1 == -9 | wpact2 == -9 | wpact3 == -9 | wpact4 == -9 | wpact5 == -9 | wpact6 == -9
replace r2gcaany= 0  if inlist(wpact1,1,2,3,6,96)| inlist(wpact2,1,2,3,6,96)|inlist(wpact3,1,2,3,6,96) | inlist(wpact4,1,2,3,6,96)| inlist(wpact5,1,2,3,6,96)|inlist(wpact6,1,2,3,6,96)
replace r2gcaany= 1  if inlist(wpact1,4,5) | inlist(wpact2,4,5) | inlist(wpact3,4,5) |inlist(wpact4,4,5) | inlist(wpact5,4,5) | inlist(wpact6,4,5)
label variable r2gcaany "r2gcaany:w2 R Gave any informal care to anyone"
label value r2gcaany contact

gen s2gcaany =.
spouse r2gcaany, result(s2gcaany) wave(2)
label variable s2gcaany "s2gcaany:w2 S Gave any informal care to anyone"
label value s2gcaany contact


***Number of grandchildren***
gen r2grchild_e =. 
replace r2grchild_e = .d if ngrandch == -8
replace r2grchild_e = .r if ngrandch == -9
replace r2grchild_e = ngrandch if inrange(ngrandch,0,90)
label variable r2grchild_e "r2grchild_e:w2 R number of grandchildren/great-grandchildren"

gen s2grchild_e =.
spouse r2grchild_e, result(s2grchild_e) wave(2)
label variable s2grchild_e "s2grchild_e:w2 S number of grandchildren/great-grandchildren"

****Gave care to grandchildren*****
gen r2gkcare = .
replace r2gkcare= .m if r2gkcare ==. & inw2 == 1
replace r2gkcare= .m if ErCAB1 == -1 |ErCAB2 == -1 |ErCAB3 == -1 | ErCAB4 == -1 | ErCAB5 == -1
replace r2gkcare= .p if askpx1 == 1
replace r2gkcare= .d if ErCAB1 == -8 |ErCAB2 == -8 |ErCAB3 == -8 | ErCAB4 == -8 | ErCAB5 == -8 |ErCAA ==-8 
replace r2gkcare= .r if ErCAB1 == -9 |ErCAB2 == -9 |ErCAB3 == -9 | ErCAB4 == -9 | ErCAB5 == -9 |ErCAA ==-9
replace r2gkcare= .n if r2grchild_e == 0
replace r2gkcare= 0  if (inlist(wpact1,1,2,3,5,6,96) & inlist(wpact2,-1,1,2,3,5,6) & inlist(wpact3,-1,1,2,3,5,6) & inlist(wpact4,-1,1,2,3,5,6) & inlist(wpact5,-1,1,2,3,5,6) & inlist(wpact6,-1,1,2,3,5,6)) | ///
                        ErCAA == 2 | ///
                        inlist(ErCAB1,1,2,4,5,6,7,95) | inlist(ErCAB2,1,2,4,5,6,7,95) | inlist(ErCAB3,1,2,4,5,6,7,95) | inlist(ErCAB4,1,2,4,5,6,7,95) | inlist(ErCAB5,1,2,4,5,6,7,95)
replace r2gkcare= 1  if (ErCAB1 == 3 |ErCAB2 == 3 |ErCAB3 == 3 | ErCAB4 == 3 | ErCAB5 == 3)
label variable r2gkcare "r2gkcare:w2 R gave care to grandchildren"
label value r2gkcare contact

gen s2gkcare =.
spouse r2gkcare, result(s2gkcare) wave(2)
label variable s2gkcare "s2gkcare:w2 S gave care to grandchildren"
label value s2gkcare contact

****Any Family Financial Transfer *****
***Give to anyone ***
gen h2gany=.
replace h2gany =.m if h2gany == . & inw2 == 1 
replace h2gany =.m if hotran == -1
replace h2gany =.d if hotran == -8
replace h2gany =.r if hotran == -9
replace h2gany = 0 if hotran == 0
replace h2gany = 1 if inrange(hotran,1,999999)
label variable h2gany "h2gany:w2 any transfers given"
label value h2gany tran


**Participate in social work**
gen r2socyr = .
replace r2socyr = .m if scorgn == -1 
replace r2socyr = .c if inw2 == 1 & inw2sc == 0
replace r2socyr = .r if scorgn == -9
replace r2socyr = 0 if scorgn == 0 | scorg09 == 1
replace r2socyr = 1 if inrange(scorgn,1,98)

label variable r2socyr "r2socyr:w2 R participate in social activities"
label value r2socyr social

gen s2socyr =.
spouse r2socyr, result(s2socyr) wave(2)
label variable s2socyr "s2socyr:w2 S participate in social activities"
label value s2socyr social

****Parental SES****
***Main carer relationship to the respondent***
replace ramarela = .m if DiKLiv == -1  & mi(ramarela)
replace ramarela = .d if DiKLiv == -8 & mi(ramarela)
replace ramarela = .r if DiKLiv == -9 & mi(ramarela)
replace ramarela = .h if DiKLiv == 9 & mi(ramarela)
replace ramarela = DiKLiv if inrange(DiKLiv,1,8)  & mi(ramarela)
replace ramarela = 9  if inlist(DiKLiv,54,55)  & mi(ramarela)

*wave 2 spouse  occupation 
gen s`wavenum'marela =.
spouse ramarela, result(s`wavenum'marela) wave(`wavenum')
label variable s`wavenum'marela "s`wavenum'marela:w`wavenum' main carer relationship to the spouse"
label value s`wavenum'marela rel

***main carer occupation at 14****
replace ramaoccup = .m if DiFJob == -1 & mi(ramaoccup)
replace ramaoccup = .d if DiFJob == -8 & mi(ramaoccup)
replace ramaoccup = .h if DiFJob == -1 & DiKLiv == 9  & mi(ramaoccup)
replace ramaoccup = .r if DiFJob == -9 & mi(ramaoccup)
replace ramaoccup = .w if DiFJob == 13 & mi(ramaoccup)
replace ramaoccup = .n if DiFJob == 14 & mi(ramaoccup)
replace ramaoccup = .s if DiFJob == 15 & mi(ramaoccup)
replace ramaoccup = 1 if inrange(DiFJob,2,4) & mi(ramaoccup)
replace ramaoccup = 2 if inrange(DiFJob,5,9)  & mi(ramaoccup)
replace ramaoccup = 3 if DiFJob == 1 & mi(ramaoccup)
replace ramaoccup = 4 if inrange(DiFJob,10,12) & mi(ramaoccup)

*wave 2 spouse mother occupation 
gen s`wavenum'maoccup =.
spouse ramaoccup, result(s`wavenum'maoccup) wave(`wavenum')
label variable s`wavenum'maoccup "s`wavenum'maoccup:w`wavenum' s main carer occupation at age 14"
label value s`wavenum'maoccup occu


***drop ELSA index file raw variables***
drop `family_w2_index'

***drop ELSA wave 2 core file raw variables***
drop `family_w2_core'

***drop ELSA wave 2 derived file raw variables***
drop `family_w2_derv'

***drop ELSA wave 2 derived file raw variables***
drop `family_w2_derv2'
	

*set wave number
*set wave number
local wavenum=3
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with index file***
local family_w3_index idahhw3 sex persno
merge 1:1 idauniq using "$index", keepusing(`family_w3_index') nogen

***merge with wave 3 core data***
local family_w3_core perid dhr dhr? dhr1? dhc dhc? dhc1? dhcr?? dhcr??? dhcs? dhcs?? scorgn scorg09 ///
                     disib scchd scchdg scchdh scchdi scfam scfamg scfamh scfami dignmy dignmyc digran ///
					 scfrd scfrdg scfrdh scfrdi askpx hehpa ercamgc ercaa wpactca wpactvw wpactlo dikliv difjob
										 										
merge 1:1 idauniq using "$wave_3_core", keepusing(`family_w3_core') nogen

***merge with wave 3 derived data***
local family_w3_derv ngrandch chsex? chsex1? nsibs malive mothage magedied falive ///
                     fathage fagedied npeople

merge 1:1 idauniq using "$wave_3_derv", keepusing(`family_w3_derv') nogen


*count number of household respondents
local n = 1
foreach var of varlist dhr dhr? dhr1? {
    local maxhhn = `n'
    local ++n 
}

***Number of people living in house***
*wave household number of people living in house
gen h`wavenum'hhres = npeople
label variable h`wavenum'hhres "h`wavenum'hhres:w`wavenum' Number of people in Household"

*check

***Number of children***
*spouse person number
gen sperid = .
spouse perid, result(sperid) wave(`wavenum')

*spouse relationship to each person in household
gen dhr1= dhr
local sp
forvalues p =1/`maxhhn' {
	gen sdhr`p' = .
	spouse dhr`p', result(sdhr`p') wave(`wavenum')
	local sp `sp' sdhr`p'
}

****Number of living children
gen r`wavenum'child =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'child = r`wavenum'child + 1 if inlist(chsex`i',1,2,-8,-9)
}
label variable r3child "r3child:w3 R Number of living children "

*wave 1 spouse number of living child
gen s3child =.
spouse r3child, result(s3child) wave(3)
label variable s3child "s3child:w3 S Number of living children"


gen r3son =0 if inw3 == 1
forvalues i = 1/16 {
	replace r3son = .d if chsex`i' == -8 & mi(r3son)
    replace r3son = .r if chsex`i' == -9 & mi(r3son) 
	replace r3son = r3son + 1 if chsex`i' == 1
}

label variable r3son "r3son:w3 r Number of living son "

*wave 3 spouse number of living son
gen s3son =.
spouse r3son, result(s3son) wave(3)
label variable s3son "s3son:w3 s Number of living son"

gen r3dau =0 if inw3 == 1
forvalues i = 1/16 {
	 replace r3dau = .d if chsex`i' == -8 & mi(r3dau)
    replace r3dau = .r if chsex`i' == -9 & mi(r3dau) 
	replace r3dau = r3dau + 1 if chsex`i' == 2
}
label variable r3dau "r3dau:w3 r Number of living daughter"

*wave 3 spouse number of living daughter
gen s3dau =.
spouse r3dau, result(s3dau) wave(3)
label variable s3dau "s3dau:w3 s Number of living daughter"


*****Children Coreside******
gen cchild=0 if inw`wavenum' == 1
forvalues i =1/`maxhhn' { 
replace cchild = cchild + 1 if inlist(dhr`i',3,4,5,6,7) | inlist(sdhr`i',3,4,5,6,7)
}

gen h`wavenum'coresd=.
replace h`wavenum'coresd=1 if inrange(cchild,1,99)
replace h`wavenum'coresd=0 if cchild==0
replace h`wavenum'coresd= .k if r`wavenum'child ==0
label variable h`wavenum'coresd "h`wavenum'coresd:w`wavenum' Any Child co-reside "
label value h`wavenum'coresd coreside

*gen s`wavenum'coresd =.
*spouse r`wavenum'coresd, result(s`wavenum'coresd) wave(`wavenum')
*label variable s`wavenum'coresd "s`wavenum'coresd:w`wavenum' s Any Child co-reside"
*label value s`wavenum'coresd coreside

***Number of living siblings***
*wave respondent number of living siblings
gen r`wavenum'livsib =.
replace r`wavenum'livsib = .m if inw`wavenum' == 1
replace r`wavenum'livsib = .d if nsibs == -8
replace r`wavenum'livsib = .r if nsibs == -9
replace r`wavenum'livsib = nsibs if inrange(nsibs,0,97)
label variable r`wavenum'livsib "r`wavenum'livsib:w`wavenum' r Number of living siblings"

*wave spouse number of living siblings
gen s`wavenum'livsib =.
spouse r`wavenum'livsib, result(s`wavenum'livsib) wave(`wavenum')
label variable s`wavenum'livsib "s`wavenum'livsib:w`wavenum' s Number of living siblings"

*check
***parental mortality: mother alive***
*wave  respondent mother alive status
gen r`wavenum'momliv =.
missing_w`wavenum' malive, result(r`wavenum'momliv)
replace r`wavenum'momliv = 0 if malive == 2 
replace r`wavenum'momliv = 1 if malive == 1 
label variable r`wavenum'momliv "r`wavenum'momliv:w`wavenum' r mother alive"
label values r`wavenum'momliv liv

*wave  spouse mother alive status
gen s`wavenum'momliv =.
spouse r`wavenum'momliv, result(s`wavenum'momliv) wave(`wavenum')
label variable s`wavenum'momliv "s`wavenum'momliv:w`wavenum' s mother alive"
label values s`wavenum'momliv liv

*check

***parental mortality: father alive***
*wave 1 respondent father alive status
gen r`wavenum'dadliv =.
missing_w`wavenum' falive, result(r`wavenum'dadliv)
replace r`wavenum'dadliv = 0 if falive == 2 
replace r`wavenum'dadliv = 1 if falive == 1
label variable r`wavenum'dadliv "r`wavenum'dadliv:w`wavenum' r father alive"
label values r`wavenum'dadliv liv

*wave  spouse father alive status
gen s`wavenum'dadliv =.
spouse r`wavenum'dadliv, result(s`wavenum'dadliv) wave(`wavenum')
label variable s`wavenum'dadliv "s`wavenum'dadliv:w`wavenum' s father alive"
label values s`wavenum'dadliv liv

*check

***parental mortality: mother's current age or age at death***
*wave  respondent mother's age
gen r`wavenum'momage =.
missing_w`wavenum' mothage magedied, result(r`wavenum'momage)
replace r`wavenum'momage = magedied if r`wavenum'momliv == 0 & inrange(magedied,16,120)
replace r`wavenum'momage = mothage if r`wavenum'momliv == 1 & inrange(mothage,0,120)

label variable r`wavenum'momage "r`wavenum'momage:w`wavenum' r mother age current/at death"

*wave spouse mother's age
gen s`wavenum'momage =.
spouse r`wavenum'momage, result(s`wavenum'momage) wave(`wavenum')
label variable s`wavenum'momage "s`wavenum'momage:w`wavenum' s mother age current/at death"

*check 

***parental mortality: father's current age or age at death***
*wave respondent father's age
gen r`wavenum'dadage =.
missing_w`wavenum' fathage fagedied, result(r`wavenum'dadage)
replace r`wavenum'dadage = fagedied if r`wavenum'dadliv == 0 & inrange(fagedied,16,120)
replace r`wavenum'dadage = fathage if r`wavenum'dadliv == 1 & inrange(fathage,0,120)

label variable r`wavenum'dadage "r`wavenum'dadage:w`wavenum' r father age current/at death"

*wave spouse father's age
gen s`wavenum'dadage =.
spouse r`wavenum'dadage, result(s`wavenum'dadage) wave(`wavenum')
label variable s`wavenum'dadage "s`wavenum'dadage:w`wavenum' s father age current/at death"

*check 

***Number of living parents***
*wave respondent number of living parents
gen r`wavenum'livpar=.
missing_H r`wavenum'momliv r`wavenum'dadliv, result(r`wavenum'livpar)
replace r`wavenum'livpar=0 if !missing(r`wavenum'momliv) & !missing(r`wavenum'dadliv)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'momliv==1 & !mi(r`wavenum'livpar)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'dadliv==1 & !mi(r`wavenum'livpar)
label variable r`wavenum'livpar "r`wavenum'livpar:w`wavenum' r Number of living parents"

*wave spouse number of living parents
gen s`wavenum'livpar =.
spouse r`wavenum'livpar, result(s`wavenum'livpar) wave(`wavenum')
label variable s`wavenum'livpar "s`wavenum'livpar:w`wavenum' s Number of living parents"

*check

*******Family Contact**************
**Child Contact in person****
gen r`wavenum'kcntf=.
replace r`wavenum'kcntf= .m if r`wavenum'kcntf ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntf= .m if scchdg == -1
replace r`wavenum'kcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntf= .d if scchdg == -8
replace r`wavenum'kcntf= .r if scchdg == -9
replace r`wavenum'kcntf= .k if scchd == 2 & scchdg == -1
replace r`wavenum'kcntf= 0  if inlist(scchdg,3,4,5,6) 
replace r`wavenum'kcntf= 1  if inlist(scchdg,1,2) | h`wavenum'coresd == 1
label variable r`wavenum'kcntf "r`wavenum'kcntf:w`wavenum' r any weekly contact w/ children in person"
label value r`wavenum'kcntf contact

*wave spouse contact in person
gen s`wavenum'kcntf  =.
spouse r`wavenum'kcntf , result(s`wavenum'kcntf ) wave(`wavenum')
label variable s`wavenum'kcntf "s`wavenum'kcntf:w`wavenum' s any weekly contact w/ children in person"
label value s`wavenum'kcntf contact

**Child Contact in phone/email****
gen r`wavenum'kcntpm=.
replace r`wavenum'kcntpm= .m if r`wavenum'kcntpm ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntpm= .m if scchdh == -1 | scchdi == -1
replace r`wavenum'kcntpm= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntpm= .d if scchdh == -8 | scchdi == -8
replace r`wavenum'kcntpm= .r if scchdh == -9 | scchdi == -9
replace r`wavenum'kcntpm= .k if scchd == 2 & (scchdh == -1 & scchdi == -1)
replace r`wavenum'kcntpm= 0  if inlist(scchdh,3,4,5,6) | inlist(scchdi,3,4,5,6) 
replace r`wavenum'kcntpm= 1  if inlist(scchdh,1,2) | inlist(scchdi,1,2) 
label variable r`wavenum'kcntpm "r`wavenum'kcntpm:w`wavenum' r any weekly contact w/ children-phone/email"
label value r`wavenum'kcntpm contact

*wave spouse contact in phone/email
gen s`wavenum'kcntpm  =.
spouse r`wavenum'kcntpm , result(s`wavenum'kcntpm ) wave(`wavenum')
label variable s`wavenum'kcntpm "s`wavenum'kcntpm:w`wavenum' s any weekly contact w/ children-phone/email"
label value s`wavenum'kcntpm contact

**Any Child Contact in person/phone/email****
gen r`wavenum'kcnt=.
replace r`wavenum'kcnt= .m if r`wavenum'kcntf == .m | r`wavenum'kcntpm == .m
replace r`wavenum'kcnt= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcnt= .c if r`wavenum'kcntf == .c | r`wavenum'kcntpm == .c
replace r`wavenum'kcnt= .d if r`wavenum'kcntf == .d | r`wavenum'kcntpm == .d
replace r`wavenum'kcnt= .r if r`wavenum'kcntf == .r | r`wavenum'kcntpm == .r
replace r`wavenum'kcnt= .k if r`wavenum'kcntf == .k | r`wavenum'kcntpm == .k
replace r`wavenum'kcnt= 0 if (r`wavenum'kcntf == 0 | r`wavenum'kcntpm == 0 ) 
replace r`wavenum'kcnt= 1 if (r`wavenum'kcntf == 1 | r`wavenum'kcntpm == 1 ) 
label variable r`wavenum'kcnt "r`wavenum'kcnt:w`wavenum' r any weekly contact w/ children in person/phone/email"
label value r`wavenum'kcnt contact

*wave spouse contact in person
gen s`wavenum'kcnt  =.
spouse r`wavenum'kcnt , result(s`wavenum'kcnt) wave(`wavenum')
label variable s`wavenum'kcnt "s`wavenum'kcnt:w`wavenum' s any weekly contact w/ children in person/phone/email"
label value s`wavenum'kcnt contact

*******Family Contact**************
**Relatives Contact in person****
gen r`wavenum'rcntf=.
replace r`wavenum'rcntf= .m if r`wavenum'rcntf == . & inw`wavenum'sc == 1 
replace r`wavenum'rcntf= .m if scfamg == -1
replace r`wavenum'rcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntf= .d if scfamg == -8
replace r`wavenum'rcntf= .r if scfamg == -9
replace r`wavenum'rcntf= .n if scfam == 2 & scfamg == -1
replace r`wavenum'rcntf= 0  if inlist(scfamg,3,4,5,6) 
replace r`wavenum'rcntf= 1  if inlist(scfamg,1,2) 
forvalues i = 1/`maxhhn' {
	replace r`wavenum'rcntf = 1 if inlist(dhr`i',8,9,10,11,12,13,14,15,16,17,18,19,20,21)
}
label variable r`wavenum'rcntf "r`wavenum'rcntf:w`wavenum' r any weekly contact w/ relative in person"
label value r`wavenum'rcntf contact

*wave spouse contact in person
gen s`wavenum'rcntf  =.
spouse r`wavenum'rcntf , result(s`wavenum'rcntf ) wave(`wavenum')
label variable s`wavenum'rcntf "s`wavenum'rcntf:w`wavenum' s any weekly contact w/ relative in person"
label value s`wavenum'rcntf contact

**relative Contact in phone/email****
gen r`wavenum'rcntpm=.
replace r`wavenum'rcntpm= .m if r`wavenum'rcntpm ==. & inw`wavenum'sc ==1
replace r`wavenum'rcntpm= .m if scfami == -1 & scfamh == -1
replace r`wavenum'rcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntpm= .d if scfami == -8 & scfamh == -8
replace r`wavenum'rcntpm= .r if scfami == -9 & scfamh == -9
replace r`wavenum'rcntpm= .n if scfam == 2 & (scfami == -1 | scfamh == -1)
replace r`wavenum'rcntpm= 0  if inlist(scfamh,3,4,5,6) | inlist(scfami,3,4,5,6) 
replace r`wavenum'rcntpm= 1  if inlist(scfamh,1,2) | inlist(scfami,1,2)
label variable r`wavenum'rcntpm "r`wavenum'rcntpm:w`wavenum' r any weekly contact w/ relative-phone/email"
label value r`wavenum'rcntpm contact

*wave spouse contact in phone/email****
gen s`wavenum'rcntpm  =.
spouse r`wavenum'rcntpm , result(s`wavenum'rcntpm ) wave(`wavenum')
label variable s`wavenum'rcntpm "s`wavenum'rcntpm:w`wavenum' s any weekly contact w/ relative-phone/email"
label value s`wavenum'rcntpm contact

**Any relative Contact in person/phone/email****
gen r`wavenum'rcnt=.
replace r`wavenum'rcnt= .m if r`wavenum'rcntf == .m | r`wavenum'rcntpm == .m
replace r`wavenum'rcnt= .c if r`wavenum'rcntf == .c | r`wavenum'rcntpm == .c
replace r`wavenum'rcnt= .d if r`wavenum'rcntf == .d | r`wavenum'rcntpm == .d
replace r`wavenum'rcnt= .r if r`wavenum'rcntf == .r | r`wavenum'rcntpm == .r
replace r`wavenum'rcnt= .n if r`wavenum'rcntf == .n | r`wavenum'rcntpm == .n
replace r`wavenum'rcnt= 0 if (r`wavenum'rcntf == 0 | r`wavenum'rcntpm == 0 ) 
replace r`wavenum'rcnt= 1 if (r`wavenum'rcntf == 1 | r`wavenum'rcntpm == 1 ) 
label variable r`wavenum'rcnt "r`wavenum'rcnt:w`wavenum' r any weekly contact w/ relative in person/phone/email"
label value r`wavenum'rcnt contact

*wave spouse contact in person/phone/email
gen s`wavenum'rcnt  =.
spouse r`wavenum'rcnt , result(s`wavenum'rcnt ) wave(`wavenum')
label variable s`wavenum'rcnt "s`wavenum'rcnt:w`wavenum' s any weekly contact w/ relative in person/phone/email"
label value s`wavenum'rcnt contact

*******Family Contact**************
**Friend Contact in person****
gen r`wavenum'fcntf=.
replace r`wavenum'fcntf= .m if r`wavenum'fcntf == . & inw`wavenum'sc ==1
replace r`wavenum'fcntf= .m if scfrdg == -1
replace r`wavenum'fcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntf= .d if scfrdg == -8
replace r`wavenum'fcntf= .r if scfrdg == -9
replace r`wavenum'fcntf= .n if scfrd == 2 & scfrdg == -1
replace r`wavenum'fcntf= 0  if inlist(scfrdg,3,4,5,6)
replace r`wavenum'fcntf= 1  if inlist(scfrdg,1,2) 
label variable r`wavenum'fcntf "r`wavenum'fcntf:w`wavenum' r any weekly contact w/ friend in person"
label value r`wavenum'fcntf contact

*wave spouse contact in person
gen s`wavenum'fcntf  =.
spouse r`wavenum'fcntf , result(s`wavenum'fcntf ) wave(`wavenum')
label variable s`wavenum'fcntf "s`wavenum'fcntf:w`wavenum' s any weekly contact w/ friend in person"
label value s`wavenum'fcntf contact

**Friend Contact in phone/email****
gen r`wavenum'fcntpm=.
replace r`wavenum'fcntpm= .m if r`wavenum'fcntpm == . & inw`wavenum'sc ==1
replace r`wavenum'fcntpm= .m if scfrdh == -1 | scfrdi == -1
replace r`wavenum'fcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntpm= .d if scfrdh == -8 | scfrdi == -8
replace r`wavenum'fcntpm= .r if scfrdh == -9 | scfrdi == -9
replace r`wavenum'fcntpm= .n if scfrd == 2 & (scfrdh == -1 |scfrdi ==-1)
replace r`wavenum'fcntpm= 0  if inlist(scfrdh,3,4,5,6) | inlist(scfrdi,3,4,5,6) 
replace r`wavenum'fcntpm= 1  if inlist(scfrdh,1,2) | inlist(scfrdi,1,2)
label variable r`wavenum'fcntpm "r`wavenum'fcntpm:w`wavenum' r any weekly contact w/ friend phone/email"
label value r`wavenum'fcntpm contact

*wave spouse contact in person
gen s`wavenum'fcntpm  =.
spouse r`wavenum'fcntpm , result(s`wavenum'fcntpm ) wave(`wavenum')
label variable s`wavenum'fcntpm "s`wavenum'fcntpm:w`wavenum' s any weekly contact w/ friend phone/email"
label value s`wavenum'fcntpm contact

**Any Friend Contact in person/phone/email****
gen r`wavenum'fcnt=.
replace r`wavenum'fcnt= .m if r`wavenum'fcntpm == .m | r`wavenum'fcntf == .m
replace r`wavenum'fcnt= .c if r`wavenum'fcntpm == .c | r`wavenum'fcntf == .c
replace r`wavenum'fcnt= .d if r`wavenum'fcntpm == .d | r`wavenum'fcntf == .d
replace r`wavenum'fcnt= .r if r`wavenum'fcntpm == .r | r`wavenum'fcntf == .r
replace r`wavenum'fcnt= .n if r`wavenum'fcntpm == .n | r`wavenum'fcntf == .n
replace r`wavenum'fcnt= 0 if (r`wavenum'fcntpm == 0 | r`wavenum'fcntf == 0 ) 
replace r`wavenum'fcnt= 1 if (r`wavenum'fcntpm == 1 | r`wavenum'fcntf == 1 ) 
label variable r`wavenum'fcnt "r`wavenum'fcnt:w`wavenum' r any weekly contact w/ friend in person/phone/email"
label value r`wavenum'fcnt contact

*wave spouse contact in person
gen s`wavenum'fcnt  =.
spouse r`wavenum'fcnt , result(s`wavenum'fcnt ) wave(`wavenum')
label variable s`wavenum'fcnt "s`wavenum'fcnt:w`wavenum' s any weekly contact w/ friend in person/phone/email"
label value s`wavenum'fcnt contact

*drop intermediate variables
drop cchild
drop dhr1
drop sperid `sp'

***********Famliy Care/Informal Care****************
***Received care giving*****
gen r`wavenum'rcaany=.
replace r`wavenum'rcaany= .m if r`wavenum'rcaany == . & inw`wavenum' == 1
replace r`wavenum'rcaany= .m if hehpa == -1
replace r`wavenum'rcaany= .s if hehpa == -1 & (r`wavenum'dressa == 0  ///
											 | r`wavenum'walkra == 0 | r`wavenum'batha == 0  ///
											 | r`wavenum'eata == 0   | r`wavenum'beda == 0  ///
											 | r`wavenum'toilta == 0 | r`wavenum'mapa == 0   ///
											 | r`wavenum'phonea == 0 | r`wavenum'moneya == 0 ///
											 | r`wavenum'medsa == 0  | r`wavenum'shopa == 0  ///
											 | r`wavenum'mealsa == 0 | r`wavenum'housewka == 0  ///
											 | r`wavenum'walk100a == 0 | r`wavenum'sita == 0 ///
											 | r`wavenum'chaira == 0 | r`wavenum'climsa == 0  ///
											 | r`wavenum'clim1a == 0 | r`wavenum'stoopa == 0 ///
											 | r`wavenum'lifta == 0  | r`wavenum'dimea == 0  ///
											 | r`wavenum'armsa == 0 | r`wavenum'pusha == 0 )
replace r`wavenum'rcaany= .d if hehpa == -8
replace r`wavenum'rcaany= .r if hehpa == -9
replace r`wavenum'rcaany= 0 if hehpa == 2
replace r`wavenum'rcaany= 1 if hehpa == 1
label variable r`wavenum'rcaany "r`wavenum'rcaany:w`wavenum' R Received any informal care"
label value r`wavenum'rcaany contact

gen s`wavenum'rcaany =.
spouse r`wavenum'rcaany, result(s`wavenum'rcaany) wave(`wavenum')
label variable s`wavenum'rcaany "s`wavenum'rcaany:w`wavenum' S Received any informal care"
label value s`wavenum'rcaany contact

***Gave Care****
gen r`wavenum'gcaany= .
replace r`wavenum'gcaany= .m if r`wavenum'gcaany ==. & inw`wavenum' == 1
replace r`wavenum'gcaany= .m if wpactca == -1 
replace r`wavenum'gcaany= .d if wpactca == -8 | wpactlo == -8 
replace r`wavenum'gcaany= .r if wpactca == -9 | wpactlo == -9 
replace r`wavenum'gcaany= 0  if wpactca == 0 | wpactlo == 0 
replace r`wavenum'gcaany= 1  if wpactca == 1 | wpactlo == 1 
label variable r`wavenum'gcaany "r`wavenum'gcaany:w`wavenum' R Gave any informal care to anyone"
label value r`wavenum'gcaany contact

gen s`wavenum'gcaany =.
spouse r`wavenum'gcaany, result(s`wavenum'gcaany) wave(`wavenum')
label variable s`wavenum'gcaany "s`wavenum'gcaany:w`wavenum' S Gave any informal care to anyone"
label value s`wavenum'gcaany contact


***Number of grandchildren***
gen r`wavenum'grchild_e =. 
replace r`wavenum'grchild_e = .m if inw`wavenum' == 1
replace r`wavenum'grchild_e = .d if ngrandch == -8
replace r`wavenum'grchild_e = .r if ngrandch == -9
replace r`wavenum'grchild_e = ngrandch if inrange(ngrandch,0,90)
label variable r`wavenum'grchild_e "r`wavenum'grchild_e:w`wavenum' R number of grandchildren/great-grandchildren"

gen s`wavenum'grchild_e =.
spouse r`wavenum'grchild_e, result(s`wavenum'grchild_e) wave(`wavenum')
label variable s`wavenum'grchild_e "s`wavenum'grchild_e:w`wavenum' S number of grandchildren/great-grandchildren"

****Gave care to grandchildren*****
gen r`wavenum'gkcare = .
replace r`wavenum'gkcare= .m if r`wavenum'gkcare ==. & inw`wavenum' == 1
replace r`wavenum'gkcare= .m if ercamgc == -1 
replace r`wavenum'gkcare= .p if askpx == 1
replace r`wavenum'gkcare= .d if ercamgc == -8 | ercaa ==-8
replace r`wavenum'gkcare= .r if ercamgc == -9 | ercaa ==-8 
replace r`wavenum'gkcare= .n if r`wavenum'grchild_e == 0
replace r`wavenum'gkcare= 0  if wpactca == 0 | ercaa == 2 | ercamgc == 0
replace r`wavenum'gkcare= 1  if ercamgc == 1
label variable r`wavenum'gkcare "r`wavenum'gkcare:w`wavenum' R gave care to grandchildren"
label value r`wavenum'gkcare contact

gen s`wavenum'gkcare =.
spouse r`wavenum'gkcare, result(s`wavenum'gkcare) wave(`wavenum')
label variable s`wavenum'gkcare "s`wavenum'gkcare:w`wavenum' S gave care to grandchildren"
label value s`wavenum'gkcare contact

**Participate in social work**
gen r`wavenum'socyr = .
replace r`wavenum'socyr = .m if scorgn == -1 
replace r`wavenum'socyr = .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'socyr = .r if scorgn == -9
replace r`wavenum'socyr = 0 if scorgn == 0 | scorg09 == 1
replace r`wavenum'socyr = 1 if inrange(scorgn,1,98)

label variable r`wavenum'socyr "r`wavenum'socyr:w`wavenum' R participate in social activities"
label value r`wavenum'socyr social

gen s`wavenum'socyr =.
spouse r`wavenum'socyr, result(s`wavenum'socyr) wave(`wavenum')
label variable s`wavenum'socyr "s`wavenum'socyr:w`wavenum' S participate in social activities"
label value s`wavenum'socyr social

****Parental SES****
***main carer relationship to the respondent***
replace ramarela = .m if inlist(dikliv,-1,86) & mi(ramarela)
replace ramarela = .d if dikliv == -8 & mi(ramarela)
replace ramarela = .r if dikliv == -9 & mi(ramarela)
replace ramarela = .h if dikliv == 9 & mi(ramarela)
replace ramarela = dikliv if inrange(dikliv,1,8)  & mi(ramarela)
replace ramarela = 9  if inlist(dikliv,51,52,53,54,55,85) & mi(ramarela)

*wave 3 spouse  occupation 
gen s`wavenum'marela =.
spouse ramarela, result(s`wavenum'marela) wave(`wavenum')
label variable s`wavenum'marela "s`wavenum'marela:w`wavenum' main carer relationship to the spouse"
label value s`wavenum'marela rel

***main carer occupation at 14****
replace ramaoccup = .m if difjob == -1 & mi(ramaoccup)
replace ramaoccup = .h if difjob == -1 & dikliv == 9  & mi(ramaoccup)
replace ramaoccup = .d if difjob == -8 & mi(ramaoccup)
replace ramaoccup = .r if difjob == -9 & mi(ramaoccup)
replace ramaoccup = .w if difjob == 13 & mi(ramaoccup)
replace ramaoccup = .n if difjob == 14 & mi(ramaoccup)
replace ramaoccup = .s if difjob == 15 & mi(ramaoccup)
replace ramaoccup = 1 if inrange(difjob,2,4) & mi(ramaoccup)
replace ramaoccup = 2 if inrange(difjob,5,9)  & mi(ramaoccup)
replace ramaoccup = 3 if difjob == 1 & mi(ramaoccup)
replace ramaoccup = 4 if inrange(difjob,10,12) & mi(ramaoccup)


*wave 3 spouse mother occupation 
gen s`wavenum'maoccup =.
spouse ramaoccup, result(s`wavenum'maoccup) wave(`wavenum')
label variable s`wavenum'maoccup "s`wavenum'maoccup:w`wavenum' s main carer occupation at age 14"
label value s`wavenum'maoccup occu



***drop ELSA index file raw variables***
drop `family_w3_index'

***drop ELSA wave 3 core file raw variables***
drop `family_w3_core'

***drop ELSA wave 3 derived  file raw variables***
drop `family_w3_derv'
	
	

*set wave number
local wavenum=4
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with index file***
local family_w4_index idahhw4 sex persno
merge 1:1 idauniq using "$index", keepusing(`family_w4_index') nogen

***merge with wave 4 core data***
local family_w4_core perid dhr dhr? dhr1? dhc dhc? dhc1? dhcr?? dhcr??? dhcs? dhcs?? ///
                     disib scchd scchdg scchdh scchdi scfam scfamg scfami scorgn scorg09 ///
					 scfrd scfrdg scfrdh scfrdi askpx hehpa ercamgc ercaa dignmy digran dignmyc ///
					 hotran headlco headlda hotrangc hotranoc hotranor hotrannr wpactca wpactlo ///
					 dikliv difjob 
										 
merge 1:1 idauniq using "$wave_4_core", keepusing(`family_w4_core') nogen

***merge with wave 4 derived data***
local family_w4_derv ngrandch chsex? chsex1? nsibs malive mothage magedied falive ///
                     fathage fagedied npeople

merge 1:1 idauniq using "$wave_4_derv", keepusing(`family_w4_derv') nogen



*count number of household respondents
local n = 1
foreach var of varlist dhr dhr? dhr1? {
    local maxhhn = `n'
    local ++n 
}

****Number of people living in house***
*wave household number of people living in house
gen h`wavenum'hhres = npeople
label variable h`wavenum'hhres "h`wavenum'hhres:w`wavenum' Number of people in Household"

**check

***Number of children***
*spouse person number
gen sperid = .
spouse perid, result(sperid) wave(`wavenum')

*spouse relationship to each person in household
gen dhr1= dhr
local sp
forvalues p =1/`maxhhn' {
	gen sdhr`p' = .
	spouse dhr`p', result(sdhr`p') wave(`wavenum')
	local sp `sp' sdhr`p'
}

****Number of living children
gen r`wavenum'child =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'child = r`wavenum'child + 1 if inlist(chsex`i',1,2,-8,-9)
}
label variable r`wavenum'child "r`wavenum'child:w`wavenum' R Number of living children "


gen s`wavenum'child =.
spouse r`wavenum'child, result(s`wavenum'child) wave(`wavenum')
label variable s`wavenum'child "s`wavenum'child:w`wavenum' S Number of living children"


gen r`wavenum'son =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'son = .d if chsex`i' == -8 & mi(r`wavenum'son)
    replace r`wavenum'son = .r if chsex`i' == -9 & mi(r`wavenum'son) 
	replace r`wavenum'son = r`wavenum'son + 1 if chsex`i' == 1
}

label variable r`wavenum'son "r`wavenum'son:w`wavenum' r Number of living son "


gen s`wavenum'son =.
spouse r`wavenum'son, result(s`wavenum'son) wave(`wavenum')
label variable s`wavenum'son "s`wavenum'son:w`wavenum' s Number of living son"

gen r`wavenum'dau =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	 replace r`wavenum'dau = .d if chsex`i' == -8 & mi(r`wavenum'dau)
    replace r`wavenum'dau = .r if chsex`i' == -9 & mi(r`wavenum'dau) 
	replace r`wavenum'dau = r`wavenum'dau + 1 if chsex`i' == 2
}
label variable r`wavenum'dau "r`wavenum'dau:w`wavenum' r Number of living daughter"

*wave 1 spouse number of living daughter
gen s`wavenum'dau =.
spouse r`wavenum'dau, result(s`wavenum'dau) wave(`wavenum')
label variable s`wavenum'dau "s`wavenum'dau:w`wavenum' s Number of living daughter"

*****Children Coreside******
gen cchild=0 if inw`wavenum' == 1
forvalues i =1/`maxhhn' { 
    replace cchild = cchild + 1 if inlist(dhr`i',3,4,5,6,7) | inlist(sdhr`i',3,4,5,6,7)
}

gen h`wavenum'coresd=.
replace h`wavenum'coresd=1 if inrange(cchild,1,99)
replace h`wavenum'coresd=0 if cchild==0
replace h`wavenum'coresd= .k if r`wavenum'child ==0
label variable h`wavenum'coresd "h`wavenum'coresd:w`wavenum' Any Child co-reside "
label value h`wavenum'coresd coreside
*
*gen s`wavenum'coresd =.
*spouse r`wavenum'coresd, result(s`wavenum'coresd) wave(`wavenum')
*label variable s`wavenum'coresd "s`wavenum'coresd:w`wavenum' s Any Child co-reside"
*label value s`wavenum'coresd coreside

***Number of living siblings***
*wave respondent number of living siblings
gen r`wavenum'livsib =.
replace r`wavenum'livsib = .m if inlist(nsibs,-1,-2) | inw`wavenum' == 1
replace r`wavenum'livsib = .d if nsibs == -8
replace r`wavenum'livsib = .r if nsibs == -9
replace r`wavenum'livsib = nsibs if inrange(nsibs,0,97)
label variable r`wavenum'livsib "r`wavenum'livsib:w`wavenum' r Number of living siblings"

*wave spouse number of living siblings
gen s`wavenum'livsib =.
spouse r`wavenum'livsib, result(s`wavenum'livsib) wave(`wavenum')
label variable s`wavenum'livsib "s`wavenum'livsib:w`wavenum' s Number of living siblings"

*check
***parental mortality: mother alive***
*wave  respondent mother alive status
gen r`wavenum'momliv =.
missing_w`wavenum' malive, result(r`wavenum'momliv)
replace r`wavenum'momliv = 0 if malive == 2 
replace r`wavenum'momliv = 1 if malive == 1 
label variable r`wavenum'momliv "r`wavenum'momliv:w`wavenum' r mother alive"
label values r`wavenum'momliv liv

*wave  spouse mother alive status
gen s`wavenum'momliv =.
spouse r`wavenum'momliv, result(s`wavenum'momliv) wave(`wavenum')
label variable s`wavenum'momliv "s`wavenum'momliv:w`wavenum' s mother alive"
label values s`wavenum'momliv liv

*check

***parental mortality: father alive***
*wave 1 respondent father alive status
gen r`wavenum'dadliv =.
missing_w`wavenum' falive, result(r`wavenum'dadliv)
replace r`wavenum'dadliv = 0 if falive == 2 
replace r`wavenum'dadliv = 1 if falive == 1
label variable r`wavenum'dadliv "r`wavenum'dadliv:w`wavenum' r father alive"
label values r`wavenum'dadliv liv

*wave  spouse father alive status
gen s`wavenum'dadliv =.
spouse r`wavenum'dadliv, result(s`wavenum'dadliv) wave(`wavenum')
label variable s`wavenum'dadliv "s`wavenum'dadliv:w`wavenum' s father alive"
label values s`wavenum'dadliv liv

*check

***parental mortality: mother's current age or age at death***
*wave  respondent mother's age
gen r`wavenum'momage =.
missing_w`wavenum' mothage magedied, result(r`wavenum'momage)
replace r`wavenum'momage = magedied if r`wavenum'momliv == 0 & inrange(magedied,16,120)
replace r`wavenum'momage = mothage if r`wavenum'momliv == 1 & inrange(mothage,0,120)

label variable r`wavenum'momage "r`wavenum'momage:w`wavenum' r mother age current/at death"

*wave spouse mother's age
gen s`wavenum'momage =.
spouse r`wavenum'momage, result(s`wavenum'momage) wave(`wavenum')
label variable s`wavenum'momage "s`wavenum'momage:w`wavenum' s mother age current/at death"

*check 

***parental mortality: father's current age or age at death***
*wave respondent father's age
gen r`wavenum'dadage =.
missing_w`wavenum' fathage fagedied, result(r`wavenum'dadage)
replace r`wavenum'dadage = fagedied if r`wavenum'dadliv == 0 & inrange(fagedied,16,120)
replace r`wavenum'dadage = fathage if r`wavenum'dadliv == 1 & inrange(fathage,0,120)

label variable r`wavenum'dadage "r`wavenum'dadage:w`wavenum' r father age current/at death"

*wave spouse father's age
gen s`wavenum'dadage =.
spouse r`wavenum'dadage, result(s`wavenum'dadage) wave(`wavenum')
label variable s`wavenum'dadage "s`wavenum'dadage:w`wavenum' s father age current/at death"

*check 

***Number of living parents***
*wave respondent number of living parents
gen r`wavenum'livpar=.
missing_H r`wavenum'momliv r`wavenum'dadliv, result(r`wavenum'livpar)
replace r`wavenum'livpar=0 if !missing(r`wavenum'momliv) & !missing(r`wavenum'dadliv)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'momliv==1 & !mi(r`wavenum'livpar)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'dadliv==1 & !mi(r`wavenum'livpar)

label variable r`wavenum'livpar "r`wavenum'livpar:w`wavenum' r Number of living parents"

*wave spouse number of living parents
gen s`wavenum'livpar =.
spouse r`wavenum'livpar, result(s`wavenum'livpar) wave(`wavenum')
label variable s`wavenum'livpar "s`wavenum'livpar:w`wavenum' s Number of living parents"

*check

*******Family Contact**************
**Child Contact in person****
gen r`wavenum'kcntf=.
replace r`wavenum'kcntf= .m if r`wavenum'kcntf ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntf= .m if scchdg == -1
replace r`wavenum'kcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntf= .d if scchdg == -8
replace r`wavenum'kcntf= .r if scchdg == -9
replace r`wavenum'kcntf= .k if scchd == 2 & scchdg == -1
replace r`wavenum'kcntf= 0  if inlist(scchdg,3,4,5,6) 
replace r`wavenum'kcntf= 1  if inlist(scchdg,1,2) | h`wavenum'coresd == 1
label variable r`wavenum'kcntf "r`wavenum'kcntf:w`wavenum' r any weekly contact w/ children in person"
label value r`wavenum'kcntf contact

*wave spouse contact in person
gen s`wavenum'kcntf  =.
spouse r`wavenum'kcntf , result(s`wavenum'kcntf ) wave(`wavenum')
label variable s`wavenum'kcntf "s`wavenum'kcntf:w`wavenum' s any weekly contact w/ children in person"
label value s`wavenum'kcntf contact

**Child Contact in phone/email****
gen r`wavenum'kcntpm=.
replace r`wavenum'kcntpm= .m if r`wavenum'kcntpm ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntpm= .m if scchdh == -1 | scchdi == -1
replace r`wavenum'kcntpm= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntpm= .d if scchdh == -8 | scchdi == -8
replace r`wavenum'kcntpm= .r if scchdh == -9 | scchdi == -9
replace r`wavenum'kcntpm= .k if scchd == 2 & (scchdh == -1 & scchdi == -1)
replace r`wavenum'kcntpm= 0  if inlist(scchdh,3,4,5,6) | inlist(scchdi,3,4,5,6) 
replace r`wavenum'kcntpm= 1  if inlist(scchdh,1,2) | inlist(scchdi,1,2) 
label variable r`wavenum'kcntpm "r`wavenum'kcntpm:w`wavenum' r any weekly contact w/ children-phone/email"
label value r`wavenum'kcntpm contact

*wave spouse contact in phone/email
gen s`wavenum'kcntpm  =.
spouse r`wavenum'kcntpm , result(s`wavenum'kcntpm ) wave(`wavenum')
label variable s`wavenum'kcntpm "s`wavenum'kcntpm:w`wavenum' s any weekly contact w/ children-phone/email"
label value s`wavenum'kcntpm contact

**Any Child Contact in person/phone/email****
gen r`wavenum'kcnt=.
replace r`wavenum'kcnt= .m if r`wavenum'kcntf == .m | r`wavenum'kcntpm == .m
replace r`wavenum'kcnt= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcnt= .c if r`wavenum'kcntf == .c | r`wavenum'kcntpm == .c
replace r`wavenum'kcnt= .d if r`wavenum'kcntf == .d | r`wavenum'kcntpm == .d
replace r`wavenum'kcnt= .r if r`wavenum'kcntf == .r | r`wavenum'kcntpm == .r
replace r`wavenum'kcnt= .k if r`wavenum'kcntf == .k | r`wavenum'kcntpm == .k
replace r`wavenum'kcnt= 0 if (r`wavenum'kcntf == 0 | r`wavenum'kcntpm == 0 ) 
replace r`wavenum'kcnt= 1 if (r`wavenum'kcntf == 1 | r`wavenum'kcntpm == 1 ) 
label variable r`wavenum'kcnt "r`wavenum'kcnt:w`wavenum' r any weekly contact w/ children in person/phone/email"
label value r`wavenum'kcnt contact

*wave spouse contact in person
gen s`wavenum'kcnt  =.
spouse r`wavenum'kcnt , result(s`wavenum'kcnt) wave(`wavenum')
label variable s`wavenum'kcnt "s`wavenum'kcnt:w`wavenum' s any weekly contact w/ children in person/phone/email"
label value s`wavenum'kcnt contact

*******Family Contact**************
**Relatives Contact in person****
gen r`wavenum'rcntf=.
replace r`wavenum'rcntf= .m if r`wavenum'rcntf == . & inw`wavenum'sc == 1 
replace r`wavenum'rcntf= .m if scfamg == -1
replace r`wavenum'rcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntf= .d if scfamg == -8
replace r`wavenum'rcntf= .r if scfamg == -9
replace r`wavenum'rcntf= .n if scfam == 2 & scfamg == -1
replace r`wavenum'rcntf= 0  if inlist(scfamg,3,4,5,6) 
replace r`wavenum'rcntf= 1  if inlist(scfamg,1,2) 
forvalues i = 1/`maxhhn' {
	replace r`wavenum'rcntf = 1 if inlist(dhr`i',8,9,10,11,12,13,14,15,16,17,18,19,20,21)
}
label variable r`wavenum'rcntf "r`wavenum'rcntf:w`wavenum' r any weekly contact w/ relative in person"
label value r`wavenum'rcntf contact

*wave spouse contact in person
gen s`wavenum'rcntf  =.
spouse r`wavenum'rcntf , result(s`wavenum'rcntf ) wave(`wavenum')
label variable s`wavenum'rcntf "s`wavenum'rcntf:w`wavenum' s any weekly contact w/ relative in person"
label value s`wavenum'rcntf contact

**relative Contact in phone/email****
gen r`wavenum'rcntm=.
replace r`wavenum'rcntm= .m if r`wavenum'rcntm ==. & inw`wavenum'sc ==1
replace r`wavenum'rcntm= .m if scfami == -1 
replace r`wavenum'rcntm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntm= .d if scfami == -8 
replace r`wavenum'rcntm= .r if scfami == -9
replace r`wavenum'rcntm= .n if scfam == 2 & scfami == -1 
replace r`wavenum'rcntm= 0  if inlist(scfami,3,4,5,6)
replace r`wavenum'rcntm= 1  if inlist(scfami,1,2)
label variable r`wavenum'rcntm "r`wavenum'rcntm:w`wavenum' r any weekly contact w/ relative email"
label value r`wavenum'rcntm contact

*wave spouse contact in email****
gen s`wavenum'rcntm  =.
spouse r`wavenum'rcntm , result(s`wavenum'rcntm ) wave(`wavenum')
label variable s`wavenum'rcntm "s`wavenum'rcntm:w`wavenum' s any weekly contact w/ relative email"
label value s`wavenum'rcntm contact

***Any relative Contact in person/phone/email****
*gen r`wavenum'rcnt=.
*replace r`wavenum'rcnt= .c if r`wavenum'rcntf == .c | r`wavenum'rcntpm == .c
*replace r`wavenum'rcnt= .m if r`wavenum'rcntf == .m | r`wavenum'rcntpm == .m
*replace r`wavenum'rcnt= .d if r`wavenum'rcntf == .d | r`wavenum'rcntpm == .d
*replace r`wavenum'rcnt= .r if r`wavenum'rcntf == .r | r`wavenum'rcntpm == .r
*replace r`wavenum'rcnt= .n if r`wavenum'rcntf == .n | r`wavenum'rcntpm == .n
*replace r`wavenum'rcnt= 0 if (r`wavenum'rcntpm == 0 | r`wavenum'rcntf == 0 ) 
*replace r`wavenum'rcnt= 1 if (r`wavenum'rcntpm == 1 | r`wavenum'rcntf == 1 )
*label variable r`wavenum'rcnt "r`wavenum'rcnt:w`wavenum' any weekly contact w/ relative in person/phone/email"
*label value r`wavenum'rcnt contact

*******Family Contact**************
**Friend Contact in person****
gen r`wavenum'fcntf=.
replace r`wavenum'fcntf= .m if r`wavenum'fcntf == . & inw`wavenum'sc ==1
replace r`wavenum'fcntf= .m if scfrdg == -1
replace r`wavenum'fcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntf= .d if scfrdg == -8
replace r`wavenum'fcntf= .r if scfrdg == -9
replace r`wavenum'fcntf= .n if scfrd == 2 & scfrdg == -1
replace r`wavenum'fcntf= 0  if inlist(scfrdg,3,4,5,6) 
replace r`wavenum'fcntf= 1  if inlist(scfrdg,1,2) 
label variable r`wavenum'fcntf "r`wavenum'fcntf:w`wavenum' r any weekly contact w/ friend in person"
label value r`wavenum'fcntf contact

*wave spouse contact in person
gen s`wavenum'fcntf  =.
spouse r`wavenum'fcntf , result(s`wavenum'fcntf ) wave(`wavenum')
label variable s`wavenum'fcntf "s`wavenum'fcntf:w`wavenum' s any weekly contact w/ friend in person"
label value s`wavenum'fcntf contact

**Friend Contact in phone/email****
gen r`wavenum'fcntpm=.
replace r`wavenum'fcntpm= .m if r`wavenum'fcntpm == . & inw`wavenum'sc ==1
replace r`wavenum'fcntpm= .m if scfrdh == -1 | scfrdi == -1
replace r`wavenum'fcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntpm= .d if scfrdh == -8 | scfrdi == -8
replace r`wavenum'fcntpm= .r if scfrdh == -9 | scfrdi == -9
replace r`wavenum'fcntpm= .n if scfrd == 2 & (scfrdh == -1 |scfrdi ==-1)
replace r`wavenum'fcntpm= 0  if inlist(scfrdh,3,4,5,6) | inlist(scfrdi,3,4,5,6)
replace r`wavenum'fcntpm= 1  if inlist(scfrdh,1,2) | inlist(scfrdi,1,2)
label variable r`wavenum'fcntpm "r`wavenum'fcntpm:w`wavenum' r any weekly contact w/ friend phone/email"
label value r`wavenum'fcntpm contact

*wave spouse contact in person
gen s`wavenum'fcntpm  =.
spouse r`wavenum'fcntpm , result(s`wavenum'fcntpm ) wave(`wavenum')
label variable s`wavenum'fcntpm "s`wavenum'fcntpm:w`wavenum' s any weekly contact w/ friend phone/email"
label value s`wavenum'fcntpm contact

**Any Friend Contact in person/phone/email****
gen r`wavenum'fcnt=.
replace r`wavenum'fcnt= .m if r`wavenum'fcntpm == .m | r`wavenum'fcntf == .m
replace r`wavenum'fcnt= .c if r`wavenum'fcntpm == .c | r`wavenum'fcntf == .c
replace r`wavenum'fcnt= .d if r`wavenum'fcntpm == .d | r`wavenum'fcntf == .d
replace r`wavenum'fcnt= .r if r`wavenum'fcntpm == .r | r`wavenum'fcntf == .r
replace r`wavenum'fcnt= .n if r`wavenum'fcntpm == .n | r`wavenum'fcntf == .n
replace r`wavenum'fcnt= 0 if (r`wavenum'fcntpm == 0 | r`wavenum'fcntf == 0 ) 
replace r`wavenum'fcnt= 1 if (r`wavenum'fcntpm == 1 | r`wavenum'fcntf == 1 ) 
label variable r`wavenum'fcnt "r`wavenum'fcnt:w`wavenum' r any weekly contact w/ friend in person/phone/email"
label value r`wavenum'fcnt contact

*wave spouse contact in person
gen s`wavenum'fcnt  =.
spouse r`wavenum'fcnt , result(s`wavenum'fcnt ) wave(`wavenum')
label variable s`wavenum'fcnt "s`wavenum'fcnt:w`wavenum' s any weekly contact w/ friend in person/phone/email"
label value s`wavenum'fcnt contact

*drop intermediate variables
drop cchild
drop dhr1
drop sperid `sp'

***********Famliy Care/Informal Care****************
***Received care giving*****
gen r`wavenum'rcaany=.
replace r`wavenum'rcaany= .m if r`wavenum'rcaany == . & inw`wavenum' == 1
replace r`wavenum'rcaany= .m if hehpa == -1
replace r`wavenum'rcaany= .s if hehpa == -1 & (r`wavenum'dressa == 0  ///
											 | r`wavenum'walkra == 0 | r`wavenum'batha == 0  ///
											 | r`wavenum'eata == 0   | r`wavenum'beda == 0  ///
											 | r`wavenum'toilta == 0 | r`wavenum'mapa == 0   ///
											 | r`wavenum'phonea == 0 | r`wavenum'moneya == 0 ///
											 | r`wavenum'medsa == 0  | r`wavenum'shopa == 0  ///
											 | r`wavenum'mealsa == 0 | r`wavenum'housewka == 0  ///
											 | r`wavenum'walk100a == 0 | r`wavenum'sita == 0 ///
											 | r`wavenum'chaira == 0 | r`wavenum'climsa == 0  ///
											 | r`wavenum'clim1a == 0 | r`wavenum'stoopa == 0 ///
											 | r`wavenum'lifta == 0  | r`wavenum'dimea == 0  ///
											 | r`wavenum'armsa == 0 | r`wavenum'pusha == 0 |headlco ==0 | headlda == 0)
replace r`wavenum'rcaany= .d if hehpa == -8
replace r`wavenum'rcaany= .r if hehpa == -9
replace r`wavenum'rcaany= 0 if hehpa == 2
replace r`wavenum'rcaany= 1 if hehpa == 1
label variable r`wavenum'rcaany "r`wavenum'rcaany:w`wavenum' R Received any informal care"
label value r`wavenum'rcaany contact

gen s`wavenum'rcaany =.
spouse r`wavenum'rcaany, result(s`wavenum'rcaany) wave(`wavenum')
label variable s`wavenum'rcaany "s`wavenum'rcaany:w`wavenum' S Received any informal care"
label value s`wavenum'rcaany contact

***Gave Care****
gen r`wavenum'gcaany= .
replace r`wavenum'gcaany= .m if r`wavenum'gcaany ==. & inw`wavenum' == 1
replace r`wavenum'gcaany= .m if wpactca == -1 | wpactlo == -1 
replace r`wavenum'gcaany= .d if wpactca == -8 | wpactlo == -8 
replace r`wavenum'gcaany= .r if wpactca == -9 | wpactlo == -9 
replace r`wavenum'gcaany= 0  if wpactca == 0 | wpactlo == 0
replace r`wavenum'gcaany= 1  if wpactca == 1 | wpactlo == 1
label variable r`wavenum'gcaany "r`wavenum'gcaany:w`wavenum' R Gave any informal care to anyone"
label value r`wavenum'gcaany contact

gen s`wavenum'gcaany =.
spouse r`wavenum'gcaany, result(s`wavenum'gcaany) wave(`wavenum')
label variable s`wavenum'gcaany "s`wavenum'gcaany:w`wavenum' S Gave any informal care to anyone"
label value s`wavenum'gcaany contact

***Number of grandchildren***
gen r`wavenum'grchild_e =. 
replace r`wavenum'grchild_e = .m if ngrandch == -2
replace r`wavenum'grchild_e = .d if ngrandch == -8
replace r`wavenum'grchild_e = .r if ngrandch == -9
replace r`wavenum'grchild_e = ngrandch if inrange(ngrandch,0,97)
label variable r`wavenum'grchild_e "r`wavenum'grchild_e:w`wavenum' R number of grandchildren/great-grandchildren"

gen s`wavenum'grchild_e =.
spouse r`wavenum'grchild_e, result(s`wavenum'grchild_e) wave(`wavenum')
label variable s`wavenum'grchild_e "s`wavenum'grchild_e:w`wavenum' S number of grandchildren/great-grandchildren"

****Gave care to grandchildren*****
gen r`wavenum'gkcare = .
replace r`wavenum'gkcare= .m if r`wavenum'gkcare ==. & inw`wavenum' == 1
replace r`wavenum'gkcare= .m if ercamgc == -1 
replace r`wavenum'gkcare= .p if askpx == 1
replace r`wavenum'gkcare= .d if ercamgc == -8 | ercaa ==-8
replace r`wavenum'gkcare= .r if ercamgc == -9 | ercaa ==-8 
replace r`wavenum'gkcare= .n if r`wavenum'grchild_e == 0
replace r`wavenum'gkcare= 0  if wpactca == 0 | ercaa == 2 | ercamgc == 0 
replace r`wavenum'gkcare= 1  if ercamgc == 1
label variable r`wavenum'gkcare "r`wavenum'gkcare:w`wavenum' R gave care to grandchildren"
label value r`wavenum'gkcare contact

gen s`wavenum'gkcare =.
spouse r`wavenum'gkcare, result(s`wavenum'gkcare) wave(`wavenum')
label variable s`wavenum'gkcare "s`wavenum'gkcare:w`wavenum' S gave care to grandchildren"
label value s`wavenum'gkcare contact


****Any Family Financial Transfer *****
***Give to anyone ***
gen h`wavenum'gany=.
replace h`wavenum'gany =.m if h`wavenum'gany == . & inw`wavenum'== 1 
replace h`wavenum'gany =.m if hotran == -1
replace h`wavenum'gany =.d if hotran == -8
replace h`wavenum'gany =.r if hotran == -9
replace h`wavenum'gany = 0 if hotran == 0
replace h`wavenum'gany = 1 if inrange(hotran,1,999999)
label variable h`wavenum'gany "h`wavenum'gany:w`wavenum' Any transfers given"
label value h`wavenum'gany tran

***To children & Grand children***
gen h`wavenum'tcany=.  
replace h`wavenum'tcany =.m if h`wavenum'tcany == . & inw`wavenum' == 1 
replace h`wavenum'tcany =.m if hotrangc == -1 | hotranoc ==-1
replace h`wavenum'tcany =.d if hotrangc == -8 | hotranoc ==-8 | hotran == -8
replace h`wavenum'tcany =.r if hotrangc == -9 | hotranoc ==-9 | hotran == -9
replace h`wavenum'tcany = 0 if hotrangc == 0 | hotranoc == 0 | hotran == 0
replace h`wavenum'tcany = 1 if hotrangc == 1 | hotranoc == 1
label variable h`wavenum'tcany "h`wavenum'tcany:w`wavenum' Any transfers given to children/ grandchildren"
label value h`wavenum'tcany tran

***To relative****
gen h`wavenum'toany=.
replace h`wavenum'toany =.m if h`wavenum'toany == . & inw`wavenum'== 1 
replace h`wavenum'toany =.m if hotran == -1
replace h`wavenum'toany =.d if hotranor == -8 | hotran == -8
replace h`wavenum'toany =.r if hotranor == -9 | hotran == -9
replace h`wavenum'toany = 0 if hotranor == 0 | hotran == 0
replace h`wavenum'toany = 1 if hotranor == 1
label variable h`wavenum'toany "h`wavenum'toany:w`wavenum' Any transfers given to other relatives"
label value h`wavenum'toany tran

***To friend***
gen h`wavenum'tfany=.
replace h`wavenum'tfany =.m if h`wavenum'tfany == . & inw`wavenum'== 1 
replace h`wavenum'tfany =.m if hotran == -1
replace h`wavenum'tfany =.d if hotrannr == -8 | hotran == -8
replace h`wavenum'tfany =.r if hotrannr == -9 | hotran == -9
replace h`wavenum'tfany = 0 if hotrannr == 0 | hotran == 0
replace h`wavenum'tfany = 1 if hotrannr == 1
label variable h`wavenum'tfany "h`wavenum'tfany:w`wavenum' Any transfers given to other non-relatives"
label value h`wavenum'tfany tran

**Participate in social work**
gen r`wavenum'socyr = .
replace r`wavenum'socyr = .m if scorgn == -1 
replace r`wavenum'socyr = .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'socyr = .r if scorgn == -9
replace r`wavenum'socyr = 0 if scorgn == 0 |  scorg09 == 1
replace r`wavenum'socyr = 1 if inrange(scorgn,1,98)

label variable r`wavenum'socyr "r`wavenum'socyr:w`wavenum' R participate in social activities"
label value r`wavenum'socyr social

gen s`wavenum'socyr =.
spouse r`wavenum'socyr, result(s`wavenum'socyr) wave(`wavenum')
label variable s`wavenum'socyr "s`wavenum'socyr:w`wavenum' S participate in social activities"
label value s`wavenum'socyr social

****Parental SES****
***main carer relationship to the respondent***
replace ramarela = .m if inlist(dikliv,-1,-2,86) & mi(ramarela)
replace ramarela = .d if dikliv == -8 & mi(ramarela)
replace ramarela = .r if dikliv == -9 & mi(ramarela)
replace ramarela = .h if dikliv == 9 & mi(ramarela)
replace ramarela = dikliv if inrange(dikliv,1,8)  & mi(ramarela)
replace ramarela = 9  if inlist(dikliv,51,52,53,54,55,85) & mi(ramarela)

*wave 4 spouse  occupation 
gen s`wavenum'marela =.
spouse ramarela, result(s`wavenum'marela) wave(`wavenum')
label variable s`wavenum'marela "s`wavenum'marela:w`wavenum' main carer relationship to the spouse"
label value s`wavenum'marela rel


***main carer occupation at 14****
replace ramaoccup = .m if difjob == -1 & mi(ramaoccup)
replace ramaoccup = .h if difjob == -1 & dikliv == 9  & mi(ramaoccup)
replace ramaoccup = .d if difjob == -8 & mi(ramaoccup)
replace ramaoccup = .r if difjob == -9 & mi(ramaoccup)
replace ramaoccup = .w if difjob == 13 & mi(ramaoccup)
replace ramaoccup = .n if difjob == 14 & mi(ramaoccup)
replace ramaoccup = .s if difjob == 15 & mi(ramaoccup)
replace ramaoccup = 1 if inrange(difjob,2,4) & mi(ramaoccup)
replace ramaoccup = 2 if inrange(difjob,5,9)  & mi(ramaoccup)
replace ramaoccup = 3 if difjob == 1 & mi(ramaoccup)
replace ramaoccup = 4 if inrange(difjob,10,12) & mi(ramaoccup)


*wave 4 spouse mother occupation 
gen s`wavenum'maoccup =.
spouse ramaoccup, result(s`wavenum'maoccup) wave(`wavenum')
label variable s`wavenum'maoccup "s`wavenum'maoccup:w`wavenum' s main carer occupation at age 14"
label value s`wavenum'maoccup occu


****drop ELSA index file raw variables***
drop `family_w4_index'

***drop ELSA wave 4 core file raw variables***
drop `family_w4_core'

***drop ELSA wave 4 derived  file raw variables***
drop `family_w4_derv'

	

*set wave number
local wavenum = 5

***merge with index file***
local family_w5_index idahhw5 sex persno
merge 1:1 idauniq using "$index", keepusing(`family_w5_index') nogen

***merge with wave 5 core data***
local family_w5_core perid dhr dhr? dhr1? DhC DhC? DhC1? DHCR?? DHCR??? scorgn scorg09 DhCS? DhCS?? ///
                     disib scchd scchdg scchdh scchdi scfam scfamg scfamh scfami dignmy digran ///
										 scfrd scfrdg scfrdh scfrdi hehpa ercamgc ercaa askpx headlco headlda ///
										 hotran hotrangc hotranoc hotranor hotrannr wpactca wpactlo dikliv difjob
										 
merge 1:1 idauniq using "$wave_5_core", keepusing(`family_w5_core') nogen

***merge with wave 5 derived data***
local family_w5_derv ngrandch chsex? chsex1? nsibs malive mothage magedied falive ///
                     fathage fagedied npeople

merge 1:1 idauniq using "$wave_5_derv", keepusing(`family_w5_derv') nogen



*count number of household respondents
local n = 1
foreach var of varlist dhr dhr? dhr1? {
    local maxhhn = `n'
    local ++n 
}

****Number of people living in house***
*wave household number of people living in house
gen h`wavenum'hhres = npeople
label variable h`wavenum'hhres "h`wavenum'hhres:w`wavenum' Number of people in Household"

**check

***Number of children***
*spouse person number
gen sperid = .
spouse perid, result(sperid) wave(`wavenum')

*spouse relationship to each person in household
gen dhr1= dhr
local sp
forvalues p =1/`maxhhn' {
	gen sdhr`p' = .
	spouse dhr`p', result(sdhr`p') wave(`wavenum')
	local sp `sp' sdhr`p'
}

****Number of living children
gen r`wavenum'child =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'child = r`wavenum'child + 1 if inlist(chsex`i',1,2,-8,-9)
}
label variable r`wavenum'child "r`wavenum'child:w`wavenum' R Number of living children "


gen s`wavenum'child =.
spouse r`wavenum'child, result(s`wavenum'child) wave(`wavenum')
label variable s`wavenum'child "s`wavenum'child:w`wavenum' S Number of living children"


gen r`wavenum'son =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'son = .d if chsex`i' == -8 & mi(r`wavenum'son)
    replace r`wavenum'son = .r if chsex`i' == -9 & mi(r`wavenum'son) 
	replace r`wavenum'son = r`wavenum'son + 1 if chsex`i' == 1
}

label variable r`wavenum'son "r`wavenum'son:w`wavenum' r Number of living son "


gen s`wavenum'son =.
spouse r`wavenum'son, result(s`wavenum'son) wave(`wavenum')
label variable s`wavenum'son "s`wavenum'son:w`wavenum' s Number of living son"

gen r`wavenum'dau =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	 replace r`wavenum'dau = .d if chsex`i' == -8 & mi(r`wavenum'dau)
    replace r`wavenum'dau = .r if chsex`i' == -9 & mi(r`wavenum'dau) 
	replace r`wavenum'dau = r`wavenum'dau + 1 if chsex`i' == 2
}
label variable r`wavenum'dau "r`wavenum'dau:w`wavenum' r Number of living daughter"

*wave 1 spouse number of living daughter
gen s`wavenum'dau =.
spouse r`wavenum'dau, result(s`wavenum'dau) wave(`wavenum')
label variable s`wavenum'dau "s`wavenum'dau:w`wavenum' s Number of living daughter"

*****Children Coreside******
gen cchild=0 if inw`wavenum' == 1
forvalues i =1/`maxhhn' { 
    replace cchild = cchild + 1 if inlist(dhr`i',3,4,5,6,7) | inlist(sdhr`i',3,4,5,6,7)
}

gen h`wavenum'coresd=.
replace h`wavenum'coresd=1 if inrange(cchild,1,99)
replace h`wavenum'coresd=0 if cchild==0
replace h`wavenum'coresd= .k if r`wavenum'child ==0
label variable h`wavenum'coresd "h`wavenum'coresd:w`wavenum' Any Child co-reside "
label value h`wavenum'coresd coreside

*gen s`wavenum'coresd =.
*spouse r`wavenum'coresd, result(s`wavenum'coresd) wave(`wavenum')
*label variable s`wavenum'coresd "s`wavenum'coresd:w`wavenum' s Any Child co-reside"
*label value s`wavenum'coresd coreside

***Number of living siblings***
*wave respondent number of living siblings
gen r`wavenum'livsib =.
replace r`wavenum'livsib = .m if inw`wavenum' == 1
replace r`wavenum'livsib = .d if nsibs == -8
replace r`wavenum'livsib = .r if nsibs == -9
replace r`wavenum'livsib = nsibs if inrange(nsibs,0,18)
label variable r`wavenum'livsib "r`wavenum'livsib:w`wavenum' r Number of living siblings"

*wave spouse number of living siblings
gen s`wavenum'livsib =.
spouse r`wavenum'livsib, result(s`wavenum'livsib) wave(`wavenum')
label variable s`wavenum'livsib "s`wavenum'livsib:w`wavenum' s Number of living siblings"

*check
***parental mortality: mother alive***


***parental mortality: mother alive***
*wave  respondent mother alive status
gen r`wavenum'momliv =.
missing_w`wavenum' malive, result(r`wavenum'momliv)
replace r`wavenum'momliv = 0 if malive == 2 
replace r`wavenum'momliv = 1 if malive == 1 
label variable r`wavenum'momliv "r`wavenum'momliv:w`wavenum' r mother alive"
label values r`wavenum'momliv liv

*wave  spouse mother alive status
gen s`wavenum'momliv =.
spouse r`wavenum'momliv, result(s`wavenum'momliv) wave(`wavenum')
label variable s`wavenum'momliv "s`wavenum'momliv:w`wavenum' s mother alive"
label values s`wavenum'momliv liv

*check

***parental mortality: father alive***
*wave 1 respondent father alive status
gen r`wavenum'dadliv =.
missing_w`wavenum' falive, result(r`wavenum'dadliv)
replace r`wavenum'dadliv = 0 if falive == 2 
replace r`wavenum'dadliv = 1 if falive == 1
label variable r`wavenum'dadliv "r`wavenum'dadliv:w`wavenum' r father alive"
label values r`wavenum'dadliv liv

*wave  spouse father alive status
gen s`wavenum'dadliv =.
spouse r`wavenum'dadliv, result(s`wavenum'dadliv) wave(`wavenum')
label variable s`wavenum'dadliv "s`wavenum'dadliv:w`wavenum' s father alive"
label values s`wavenum'dadliv liv

*check

***parental mortality: mother's current age or age at death***
*wave  respondent mother's age
gen r`wavenum'momage =.
missing_w`wavenum' mothage magedied, result(r`wavenum'momage)
replace r`wavenum'momage = magedied if r`wavenum'momliv == 0 & inrange(magedied,16,120)
replace r`wavenum'momage = mothage if r`wavenum'momliv == 1 & inrange(mothage,0,120)
label variable r`wavenum'momage "r`wavenum'momage:w`wavenum' r mother age current/at death"

*wave spouse mother's age
gen s`wavenum'momage =.
spouse r`wavenum'momage, result(s`wavenum'momage) wave(`wavenum')
label variable s`wavenum'momage "s`wavenum'momage:w`wavenum' s mother age current/at death"

*check 

***parental mortality: father's current age or age at death***
*wave respondent father's age
gen r`wavenum'dadage =.
missing_w`wavenum' fathage fagedied, result(r`wavenum'dadage)
replace r`wavenum'dadage = fagedied if r`wavenum'dadliv == 0 & inrange(fagedied,16,120)
replace r`wavenum'dadage = fathage if r`wavenum'dadliv == 1 & inrange(fathage,0,120)

label variable r`wavenum'dadage "r`wavenum'dadage:w`wavenum' r father age current/at death"

*wave spouse father's age
gen s`wavenum'dadage =.
spouse r`wavenum'dadage, result(s`wavenum'dadage) wave(`wavenum')
label variable s`wavenum'dadage "s`wavenum'dadage:w`wavenum' s father age current/at death"

*check 

***Number of living parents***
*wave respondent number of living parents
gen r`wavenum'livpar=.
missing_H r`wavenum'momliv r`wavenum'dadliv, result(r`wavenum'livpar)
replace r`wavenum'livpar=0 if !missing(r`wavenum'momliv) & !missing(r`wavenum'dadliv)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'momliv==1 & !mi(r`wavenum'livpar)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'dadliv==1 & !mi(r`wavenum'livpar)
label variable r`wavenum'livpar "r`wavenum'livpar:w`wavenum' r Number of living parents"

*wave spouse number of living parents
gen s`wavenum'livpar =.
spouse r`wavenum'livpar, result(s`wavenum'livpar) wave(`wavenum')
label variable s`wavenum'livpar "s`wavenum'livpar:w`wavenum' s Number of living parents"

*check

*******Family Contact**************
**Child Contact in person****
gen r`wavenum'kcntf=.
replace r`wavenum'kcntf= .m if r`wavenum'kcntf ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntf= .m if scchdg == -1
replace r`wavenum'kcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntf= .d if scchdg == -8
replace r`wavenum'kcntf= .r if scchdg == -9
replace r`wavenum'kcntf= .k if scchd == 2 & scchdg == -1
replace r`wavenum'kcntf= 0  if inlist(scchdg,3,4,5,6) 
replace r`wavenum'kcntf= 1  if inlist(scchdg,1,2) | h`wavenum'coresd == 1
label variable r`wavenum'kcntf "r`wavenum'kcntf:w`wavenum' r any weekly contact w/ children in person"
label value r`wavenum'kcntf contact

*wave spouse contact in person
gen s`wavenum'kcntf  =.
spouse r`wavenum'kcntf , result(s`wavenum'kcntf ) wave(`wavenum')
label variable s`wavenum'kcntf "s`wavenum'kcntf:w`wavenum' s any weekly contact w/ children in person"
label value s`wavenum'kcntf contact

**Child Contact in phone/email****
gen r`wavenum'kcntpm=.
replace r`wavenum'kcntpm= .m if r`wavenum'kcntpm ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntpm= .m if scchdh == -1 | scchdi == -1
replace r`wavenum'kcntpm= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntpm= .d if scchdh == -8 | scchdi == -8
replace r`wavenum'kcntpm= .r if scchdh == -9 | scchdi == -9
replace r`wavenum'kcntpm= .k if scchd == 2 & (scchdh == -1 & scchdi == -1)
replace r`wavenum'kcntpm= 0  if inlist(scchdh,3,4,5,6) | inlist(scchdi,3,4,5,6) 
replace r`wavenum'kcntpm= 1  if inlist(scchdh,1,2) | inlist(scchdi,1,2) 
label variable r`wavenum'kcntpm "r`wavenum'kcntpm:w`wavenum' r any weekly contact w/ children-phone/email"
label value r`wavenum'kcntpm contact

*wave spouse contact in phone/email
gen s`wavenum'kcntpm  =.
spouse r`wavenum'kcntpm , result(s`wavenum'kcntpm ) wave(`wavenum')
label variable s`wavenum'kcntpm "s`wavenum'kcntpm:w`wavenum' s any weekly contact w/ children-phone/email"
label value s`wavenum'kcntpm contact

**Any Child Contact in person/phone/email****
gen r`wavenum'kcnt=.
replace r`wavenum'kcnt= .m if r`wavenum'kcntf == .m | r`wavenum'kcntpm == .m
replace r`wavenum'kcnt= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcnt= .c if r`wavenum'kcntf == .c | r`wavenum'kcntpm == .c
replace r`wavenum'kcnt= .d if r`wavenum'kcntf == .d | r`wavenum'kcntpm == .d
replace r`wavenum'kcnt= .r if r`wavenum'kcntf == .r | r`wavenum'kcntpm == .r
replace r`wavenum'kcnt= .k if r`wavenum'kcntf == .k | r`wavenum'kcntpm == .k
replace r`wavenum'kcnt= 0 if (r`wavenum'kcntf == 0 | r`wavenum'kcntpm == 0 ) 
replace r`wavenum'kcnt= 1 if (r`wavenum'kcntf == 1 | r`wavenum'kcntpm == 1 ) 
label variable r`wavenum'kcnt "r`wavenum'kcnt:w`wavenum' r any weekly contact w/ children in person/phone/email"
label value r`wavenum'kcnt contact

*wave spouse contact in person
gen s`wavenum'kcnt  =.
spouse r`wavenum'kcnt , result(s`wavenum'kcnt) wave(`wavenum')
label variable s`wavenum'kcnt "s`wavenum'kcnt:w`wavenum' s any weekly contact w/ children in person/phone/email"
label value s`wavenum'kcnt contact

*******Family Contact**************
**Relatives Contact in person****
gen r`wavenum'rcntf=.
replace r`wavenum'rcntf= .m if r`wavenum'rcntf == . & inw`wavenum'sc == 1 
replace r`wavenum'rcntf= .m if scfamg == -1
replace r`wavenum'rcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntf= .d if scfamg == -8
replace r`wavenum'rcntf= .r if scfamg == -9
replace r`wavenum'rcntf= .n if scfam == 2 & scfamg == -1
replace r`wavenum'rcntf= 0  if inlist(scfamg,3,4,5,6) 
replace r`wavenum'rcntf= 1  if inlist(scfamg,1,2) 
forvalues i = 1/`maxhhn' {
	replace r`wavenum'rcntf = 1 if inlist(dhr`i',8,9,10,11,12,13,14,15,16,17,18,19,20,21)
}
label variable r`wavenum'rcntf "r`wavenum'rcntf:w`wavenum' r any weekly contact w/ relative in person"
label value r`wavenum'rcntf contact

*wave spouse contact in person
gen s`wavenum'rcntf  =.
spouse r`wavenum'rcntf , result(s`wavenum'rcntf ) wave(`wavenum')
label variable s`wavenum'rcntf "s`wavenum'rcntf:w`wavenum' s any weekly contact w/ relative in person"
label value s`wavenum'rcntf contact

**relative Contact in phone/email****
gen r`wavenum'rcntpm=.
replace r`wavenum'rcntpm= .m if r`wavenum'rcntpm ==. & inw`wavenum'sc ==1
replace r`wavenum'rcntpm= .m if scfami == -1 & scfamh == -1
replace r`wavenum'rcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntpm= .d if scfami == -8 & scfamh == -8
replace r`wavenum'rcntpm= .r if scfami == -9 & scfamh == -9
replace r`wavenum'rcntpm= .n if scfam == 2 & (scfami == -1 | scfamh == -1)
replace r`wavenum'rcntpm= 0  if inlist(scfamh,3,4,5,6) | inlist(scfami,3,4,5,6) 
replace r`wavenum'rcntpm= 1  if inlist(scfamh,1,2) | inlist(scfami,1,2)
label variable r`wavenum'rcntpm "r`wavenum'rcntpm:w`wavenum' r any weekly contact w/ relative-phone/email"
label value r`wavenum'rcntpm contact

*wave spouse contact in phone/email****
gen s`wavenum'rcntpm  =.
spouse r`wavenum'rcntpm , result(s`wavenum'rcntpm ) wave(`wavenum')
label variable s`wavenum'rcntpm "s`wavenum'rcntpm:w`wavenum' s any weekly contact w/ relative-phone/email"
label value s`wavenum'rcntpm contact

**Any relative Contact in person/phone/email****
gen r`wavenum'rcnt=.
replace r`wavenum'rcnt= .m if r`wavenum'rcntf == .m | r`wavenum'rcntpm == .m
replace r`wavenum'rcnt= .c if r`wavenum'rcntf == .c | r`wavenum'rcntpm == .c
replace r`wavenum'rcnt= .d if r`wavenum'rcntf == .d | r`wavenum'rcntpm == .d
replace r`wavenum'rcnt= .r if r`wavenum'rcntf == .r | r`wavenum'rcntpm == .r
replace r`wavenum'rcnt= .n if r`wavenum'rcntf == .n | r`wavenum'rcntpm == .n
replace r`wavenum'rcnt= 0 if (r`wavenum'rcntf == 0 | r`wavenum'rcntpm == 0 ) 
replace r`wavenum'rcnt= 1 if (r`wavenum'rcntf == 1 | r`wavenum'rcntpm == 1 ) 
label variable r`wavenum'rcnt "r`wavenum'rcnt:w`wavenum' r any weekly contact w/ relative in person/phone/email"
label value r`wavenum'rcnt contact

*wave spouse contact in person/phone/email
gen s`wavenum'rcnt  =.
spouse r`wavenum'rcnt , result(s`wavenum'rcnt ) wave(`wavenum')
label variable s`wavenum'rcnt "s`wavenum'rcnt:w`wavenum' s any weekly contact w/ relative in person/phone/email"
label value s`wavenum'rcnt contact

*******Family Contact**************
**Friend Contact in person****
gen r`wavenum'fcntf=.
replace r`wavenum'fcntf= .m if r`wavenum'fcntf == . & inw`wavenum'sc ==1
replace r`wavenum'fcntf= .m if scfrdg == -1
replace r`wavenum'fcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntf= .d if scfrdg == -8
replace r`wavenum'fcntf= .r if scfrdg == -9
replace r`wavenum'fcntf= .n if scfrd == 2 & scfrdg == -1
replace r`wavenum'fcntf= 0  if inlist(scfrdg,3,4,5,6)
replace r`wavenum'fcntf= 1  if inlist(scfrdg,1,2) 
label variable r`wavenum'fcntf "r`wavenum'fcntf:w`wavenum' r any weekly contact w/ friend in person"
label value r`wavenum'fcntf contact

*wave spouse contact in person
gen s`wavenum'fcntf  =.
spouse r`wavenum'fcntf , result(s`wavenum'fcntf ) wave(`wavenum')
label variable s`wavenum'fcntf "s`wavenum'fcntf:w`wavenum' s any weekly contact w/ friend in person"
label value s`wavenum'fcntf contact

**Friend Contact in phone/email****
gen r`wavenum'fcntpm=.
replace r`wavenum'fcntpm= .m if r`wavenum'fcntpm == . & inw`wavenum'sc ==1
replace r`wavenum'fcntpm= .m if scfrdh == -1 | scfrdi == -1
replace r`wavenum'fcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntpm= .d if scfrdh == -8 | scfrdi == -8
replace r`wavenum'fcntpm= .r if scfrdh == -9 | scfrdi == -9
replace r`wavenum'fcntpm= .n if scfrd == 2 & (scfrdh == -1 |scfrdi ==-1)
replace r`wavenum'fcntpm= 0  if inlist(scfrdh,3,4,5,6) | inlist(scfrdi,3,4,5,6) 
replace r`wavenum'fcntpm= 1  if inlist(scfrdh,1,2) | inlist(scfrdi,1,2)
label variable r`wavenum'fcntpm "r`wavenum'fcntpm:w`wavenum' r any weekly contact w/ friend phone/email"
label value r`wavenum'fcntpm contact

*wave spouse contact in person
gen s`wavenum'fcntpm  =.
spouse r`wavenum'fcntpm , result(s`wavenum'fcntpm ) wave(`wavenum')
label variable s`wavenum'fcntpm "s`wavenum'fcntpm:w`wavenum' s any weekly contact w/ friend phone/email"
label value s`wavenum'fcntpm contact

**Any Friend Contact in person/phone/email****
gen r`wavenum'fcnt=.
replace r`wavenum'fcnt= .m if r`wavenum'fcntpm == .m | r`wavenum'fcntf == .m
replace r`wavenum'fcnt= .c if r`wavenum'fcntpm == .c | r`wavenum'fcntf == .c
replace r`wavenum'fcnt= .d if r`wavenum'fcntpm == .d | r`wavenum'fcntf == .d
replace r`wavenum'fcnt= .r if r`wavenum'fcntpm == .r | r`wavenum'fcntf == .r
replace r`wavenum'fcnt= .n if r`wavenum'fcntpm == .n | r`wavenum'fcntf == .n
replace r`wavenum'fcnt= 0 if (r`wavenum'fcntpm == 0 | r`wavenum'fcntf == 0 ) 
replace r`wavenum'fcnt= 1 if (r`wavenum'fcntpm == 1 | r`wavenum'fcntf == 1 ) 
label variable r`wavenum'fcnt "r`wavenum'fcnt:w`wavenum' r any weekly contact w/ friend in person/phone/email"
label value r`wavenum'fcnt contact

*wave spouse contact in person
gen s`wavenum'fcnt  =.
spouse r`wavenum'fcnt , result(s`wavenum'fcnt ) wave(`wavenum')
label variable s`wavenum'fcnt "s`wavenum'fcnt:w`wavenum' s any weekly contact w/ friend in person/phone/email"
label value s`wavenum'fcnt contact

*drop intermediate variables
drop cchild
drop dhr1
drop sperid `sp'  

***********Famliy Care/Informal Care****************
***Received care giving*****
gen r`wavenum'rcaany=.
replace r`wavenum'rcaany= .m if r`wavenum'rcaany == . & inw`wavenum' == 1
replace r`wavenum'rcaany= .m if hehpa == -1
replace r`wavenum'rcaany= .s if hehpa == -1 & (r`wavenum'dressa == 0  ///
											 | r`wavenum'walkra == 0 | r`wavenum'batha == 0  ///
											 | r`wavenum'eata == 0   | r`wavenum'beda == 0  ///
											 | r`wavenum'toilta == 0 | r`wavenum'mapa == 0   ///
											 | r`wavenum'phonea == 0 | r`wavenum'moneya == 0 ///
											 | r`wavenum'medsa == 0  | r`wavenum'shopa == 0  ///
											 | r`wavenum'mealsa == 0 | r`wavenum'housewka == 0  ///
											 | r`wavenum'walk100a == 0 | r`wavenum'sita == 0 ///
											 | r`wavenum'chaira == 0 | r`wavenum'climsa == 0  ///
											 | r`wavenum'clim1a == 0 | r`wavenum'stoopa == 0 ///
											 | r`wavenum'lifta == 0  | r`wavenum'dimea == 0  ///
											 | r`wavenum'armsa == 0 | r`wavenum'pusha == 0 |headlco ==0 | headlda == 0 )
replace r`wavenum'rcaany= .d if hehpa == -8
replace r`wavenum'rcaany= .r if hehpa == -9
replace r`wavenum'rcaany= 0 if hehpa == 2
replace r`wavenum'rcaany= 1 if hehpa == 1
label variable r`wavenum'rcaany "r`wavenum'rcaany:w`wavenum' R Received any informal care"
label value r`wavenum'rcaany contact

gen s`wavenum'rcaany =.
spouse r`wavenum'rcaany, result(s`wavenum'rcaany) wave(5)
label variable s`wavenum'rcaany "s`wavenum'rcaany:w`wavenum' S Received any informal care"
label value s`wavenum'rcaany contact


***Gave Care****
gen r`wavenum'gcaany= .
replace r`wavenum'gcaany= .m if r`wavenum'gcaany ==. & inw`wavenum' == 1
replace r`wavenum'gcaany= .m if wpactca == -1 | wpactlo == -1 
replace r`wavenum'gcaany= .d if wpactca == -8 | wpactlo == -8 
replace r`wavenum'gcaany= .r if wpactca == -9 | wpactlo == -9 
replace r`wavenum'gcaany= 0  if wpactca == 0 | wpactlo == 0
replace r`wavenum'gcaany= 1  if wpactca == 1 | wpactlo == 1
label variable r`wavenum'gcaany "r`wavenum'gcaany:w`wavenum' R Gave any informal care to anyone"
label value r`wavenum'gcaany contact

gen s`wavenum'gcaany =.
spouse r`wavenum'gcaany, result(s`wavenum'gcaany) wave(`wavenum')
label variable s`wavenum'gcaany "s`wavenum'gcaany:w`wavenum' S Gave any informal care to anyone"
label value s`wavenum'gcaany contact

***Number of grandchildren***
gen r`wavenum'grchild_e =. 
replace r`wavenum'grchild_e = .d if ngrandch == -8
replace r`wavenum'grchild_e = .r if ngrandch == -9
replace r`wavenum'grchild_e = ngrandch if inrange(ngrandch,0,90)
label variable r`wavenum'grchild_e "r`wavenum'grchild_e:w`wavenum' R number of grandchildren/great-grandchildren"

gen s`wavenum'grchild_e =.
spouse r`wavenum'grchild_e, result(s`wavenum'grchild_e) wave(`wavenum')
label variable s`wavenum'grchild_e "s`wavenum'grchild_e:w`wavenum' S number of grandchildren/great-grandchildren"

****Gave care to grandchildren*****
gen r`wavenum'gkcare = .
replace r`wavenum'gkcare= .m if r`wavenum'gkcare ==. & inw`wavenum' == 1
replace r`wavenum'gkcare= .m if ercamgc == -1 
replace r`wavenum'gkcare= .d if ercamgc == -8 | ercaa ==-8
replace r`wavenum'gkcare= .r if ercamgc == -9 | ercaa ==-8 
replace r`wavenum'gkcare= .n if r`wavenum'grchild_e == 0
replace r`wavenum'gkcare= 0  if wpactca == 0 | ercaa ==2 | ercamgc == 0
replace r`wavenum'gkcare= 1  if ercamgc == 1
label variable r`wavenum'gkcare "r`wavenum'gkcare:w`wavenum' R gave care to grandchildren"
label value r`wavenum'gkcare contact

gen s`wavenum'gkcare =.
spouse r`wavenum'gkcare, result(s`wavenum'gkcare) wave(`wavenum')
label variable s`wavenum'gkcare "s`wavenum'gkcare:w`wavenum' S gave care to grandchildren"
label value s`wavenum'gkcare contact

****Any Family Financial Transfer *****
***Give to anyone ***
gen h`wavenum'gany=.
replace h`wavenum'gany =.m if h`wavenum'gany == . & inw`wavenum'== 1 
replace h`wavenum'gany =.m if hotran == -1
replace h`wavenum'gany =.d if hotran == -8
replace h`wavenum'gany =.r if hotran == -9
replace h`wavenum'gany = 0 if hotran == 0
replace h`wavenum'gany = 1 if inrange(hotran,1,999999)
label variable h`wavenum'gany "h`wavenum'gany:w`wavenum' Any transfers given"
label value h`wavenum'gany tran

***To children & Grand children***
gen h`wavenum'tcany=.  
replace h`wavenum'tcany =.m if h`wavenum'tcany == . & inw`wavenum' == 1 
replace h`wavenum'tcany =.m if hotrangc == -1 | hotranoc ==-1 
replace h`wavenum'tcany =.d if hotrangc == -8 | hotranoc ==-8 | hotran == -8
replace h`wavenum'tcany =.r if hotrangc == -9 | hotranoc ==-9 | hotran == -9
replace h`wavenum'tcany = 0 if hotrangc == 0 | hotranoc == 0 |  hotran == 0
replace h`wavenum'tcany = 1 if hotrangc == 1 | hotranoc == 1
label variable h`wavenum'tcany "h`wavenum'tcany:w`wavenum' Any transfers given to children/ grandchildren"
label value h`wavenum'tcany tran

***To relative****
gen h`wavenum'toany=.
replace h`wavenum'toany =.m if h`wavenum'toany == . & inw`wavenum'== 1 
replace h`wavenum'toany =.m if hotran == -1
replace h`wavenum'toany =.d if hotranor == -8 | hotran == -8
replace h`wavenum'toany =.r if hotranor == -9 | hotran == -9
replace h`wavenum'toany = 0 if hotranor == 0  | hotran == 0
replace h`wavenum'toany = 1 if hotranor == 1
label variable h`wavenum'toany "h`wavenum'toany:w`wavenum' Any transfers given to other relatives"
label value h`wavenum'toany tran

***To friend***
gen h`wavenum'tfany=.
replace h`wavenum'tfany =.m if h`wavenum'tfany == . & inw`wavenum'== 1 
replace h`wavenum'tfany =.m if hotran == -1
replace h`wavenum'tfany =.d if hotrannr == -8 | hotran == -8
replace h`wavenum'tfany =.r if hotrannr == -9 | hotran == -9
replace h`wavenum'tfany = 0 if hotrannr == 0 | hotran == 0
replace h`wavenum'tfany = 1 if hotrannr == 1
label variable h`wavenum'tfany "h`wavenum'tfany:w`wavenum' Any transfers given to other non-relatives"
label value h`wavenum'tfany tran

**Participate in social work**
gen r`wavenum'socyr = .
replace r`wavenum'socyr = .m if scorgn == -1 
replace r`wavenum'socyr = .r if scorgn == -9
replace r`wavenum'socyr = .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'socyr = 0 if scorgn == 0 | scorg09 == 1
replace r`wavenum'socyr = 1 if inrange(scorgn,1,98)

label variable r`wavenum'socyr "r`wavenum'socyr:w`wavenum' R participate in social activities"
label value r`wavenum'socyr social

gen s`wavenum'socyr =.
spouse r`wavenum'socyr, result(s`wavenum'socyr) wave(`wavenum')
label variable s`wavenum'socyr "s`wavenum'socyr:w`wavenum' S participate in social activities"
label value s`wavenum'socyr social

****Parental SES****
***main carer relationship to the respondent***
replace ramarela = .m if inlist(dikliv,-1,86) & mi(ramarela)
replace ramarela = .d if dikliv == -8 & mi(ramarela)
replace ramarela = .r if dikliv == -9 & mi(ramarela)
replace ramarela = .h if dikliv == 9 & mi(ramarela)
replace ramarela = dikliv if inrange(dikliv,1,8)  & mi(ramarela)
replace ramarela = 9  if inlist(dikliv,51,52,53,54,55,85) & mi(ramarela)

*wave 5 spouse  occupation 
gen s`wavenum'marela =.
spouse ramarela, result(s`wavenum'marela) wave(`wavenum')
label variable s`wavenum'marela "s`wavenum'marela:w`wavenum' main carer relationship to the spouse"
label value s`wavenum'marela rel

replace ramaoccup = .m if difjob == -1 & mi(ramaoccup)
replace ramaoccup = .h if difjob == -1 & dikliv == 9  & mi(ramaoccup)
replace ramaoccup = .d if difjob == -8 & mi(ramaoccup)
replace ramaoccup = .r if difjob == -9 & mi(ramaoccup)
replace ramaoccup = .w if difjob == 13 & mi(ramaoccup)
replace ramaoccup = .n if difjob == 14 & mi(ramaoccup)
replace ramaoccup = .s if difjob == 15 & mi(ramaoccup)
replace ramaoccup = 1 if inrange(difjob,2,4) & mi(ramaoccup)
replace ramaoccup = 2 if inrange(difjob,5,9)  & mi(ramaoccup)
replace ramaoccup = 3 if difjob == 1 & mi(ramaoccup)
replace ramaoccup = 4 if inrange(difjob,10,12) & mi(ramaoccup)

*wave 5 spouse mother occupation 
gen s`wavenum'maoccup =.
spouse ramaoccup, result(s`wavenum'maoccup) wave(`wavenum')
label variable s`wavenum'maoccup "s`wavenum'maoccup:w`wavenum' s main carer occupation at age 14"
label value s`wavenum'maoccup occu



****drop ELSA index file raw variables***
drop `family_w5_index'

***drop ELSA wave 5 core file raw variables***
drop `family_w5_core'

***drop ELSA wave 5 derived  file raw variables***
drop `family_w5_derv'

*set wave number
local wavenum = 6

****merge with index file***
*local family_w6_index idahhw6
*merge 1:1 idauniq using "`index'", keepusing(`family_w6_index') nogen

***merge with wave 6 core data***
local family_w6_core perid DhR DhR? DhR1? DhC DhC? DhC1? DHCR?? DHCR??? scorgn scorg09 ///
                     DiSib idahhw6 scchd scchdg scchdh scchdi scchdt scfam scfamg scfamh scfami scfamt ///
										 scfrd scfrdg scfrdh scfrdi scfrdt ErCAA ErCAMgc askpx DiGnMy DiGran ///
										 HoTran hotrangc hotranoc hotranor hotrannr wpactca wpactlo askinst HHTot ///
										 DiKLiv DiPaEdu DiMaedu DiFJob CaTkA CaTkB CaTkC CaTkD CaTkE CaTkF CaTkG ///
										 CaTkH CaTkI CaTkJ CaTkK CaTkL CaTkM headlco HeADLda 
merge 1:1 idauniq using "$wave_6_core", keepusing(`family_w6_core') nogen

***merge with wave 6 derived data***
local family_w6_derv ngrandch chsex? chsex1? nsibs malive mothage magedied falive ///
                     fathage fagedied npeople

merge 1:1 idauniq using "$wave_6_derv", keepusing(`family_w6_derv') nogen



*count number of household respondents
local n = 1
foreach var of varlist DhR DhR? DhR1? {
    local maxhhn = `n'
    local ++n 
}

****Number of people living in house***
*wave household number of people living in house
gen h`wavenum'hhres = npeople

label variable h`wavenum'hhres "h`wavenum'hhres:w`wavenum' Number of people in Household"

***check

***Number of children***
*spouse person number
gen sperid = .
spouse perid, result(sperid) wave(`wavenum')

*spouse relationship to each person in household
gen DhR1= DhR
local sp
forvalues p =1/`maxhhn' {
	gen sDhR`p' = .
	spouse DhR`p', result(sDhR`p') wave(`wavenum')
	local sp `sp' sDhR`p'
}

****Number of living children
gen r`wavenum'child =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'child = r`wavenum'child + 1 if inlist(chsex`i',1,2,-8,-9)
}
label variable r`wavenum'child "r`wavenum'child:w`wavenum' R Number of living children "


gen s`wavenum'child =.
spouse r`wavenum'child, result(s`wavenum'child) wave(`wavenum')
label variable s`wavenum'child "s`wavenum'child:w`wavenum' S Number of living children"


gen r`wavenum'son =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'son = .d if chsex`i' == -8 & mi(r`wavenum'son)
    replace r`wavenum'son = .r if chsex`i' == -9 & mi(r`wavenum'son) 
	replace r`wavenum'son = r`wavenum'son + 1 if chsex`i' == 1
}

label variable r`wavenum'son "r`wavenum'son:w`wavenum' r Number of living son "


gen s`wavenum'son =.
spouse r`wavenum'son, result(s`wavenum'son) wave(`wavenum')
label variable s`wavenum'son "s`wavenum'son:w`wavenum' s Number of living son"

gen r`wavenum'dau =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	 replace r`wavenum'dau = .d if chsex`i' == -8 & mi(r`wavenum'dau)
    replace r`wavenum'dau = .r if chsex`i' == -9 & mi(r`wavenum'dau) 
	replace r`wavenum'dau = r`wavenum'dau + 1 if chsex`i' == 2
}
label variable r`wavenum'dau "r`wavenum'dau:w`wavenum' r Number of living daughter"

*wave 1 spouse number of living daughter
gen s`wavenum'dau =.
spouse r`wavenum'dau, result(s`wavenum'dau) wave(`wavenum')
label variable s`wavenum'dau "s`wavenum'dau:w`wavenum' s Number of living daughter"


*****Children Coreside******
gen cchild=0 if inw`wavenum' == 1
forvalues i =1/`maxhhn' { 
    replace cchild = cchild + 1 if inlist(DhR`i',3,4,5,6,7) | inlist(sDhR`i',3,4,5,6,7)
}

gen h`wavenum'coresd=.
replace h`wavenum'coresd=1 if inrange(cchild,1,99)
replace h`wavenum'coresd=0 if cchild==0
replace h`wavenum'coresd= .k if r`wavenum'child ==0
label variable h`wavenum'coresd "h`wavenum'coresd:w`wavenum' Any Child co-reside "
label value h`wavenum'coresd coreside

*gen s`wavenum'coresd =.
*spouse r`wavenum'coresd, result(s`wavenum'coresd) wave(`wavenum')
*label variable s`wavenum'coresd "s`wavenum'coresd:w`wavenum' s Any Child co-reside"
*label value s`wavenum'coresd coreside

***Number of living siblings***
*wave respondent number of living siblings
gen r`wavenum'livsib =.
replace r`wavenum'livsib = .m if inw`wavenum' == 1
replace r`wavenum'livsib = .d if nsibs == -8
replace r`wavenum'livsib = .r if nsibs == -9
replace r`wavenum'livsib = nsibs if inrange(nsibs,0,97)
label variable r`wavenum'livsib "r`wavenum'livsib:w`wavenum' r Number of living siblings"

*wave spouse number of living siblings
gen s`wavenum'livsib =.
spouse r`wavenum'livsib, result(s`wavenum'livsib) wave(`wavenum')
label variable s`wavenum'livsib "s`wavenum'livsib:w`wavenum' s Number of living siblings"

*check
***parental mortality: mother alive***
*wave  respondent mother alive status
gen r`wavenum'momliv =.
missing_w`wavenum' malive, result(r`wavenum'momliv)
replace r`wavenum'momliv = 0 if malive == 2 
replace r`wavenum'momliv = 1 if malive == 1 
label variable r`wavenum'momliv "r`wavenum'momliv:w`wavenum' r mother alive"
label values r`wavenum'momliv liv

*wave  spouse mother alive status
gen s`wavenum'momliv =.
spouse r`wavenum'momliv, result(s`wavenum'momliv) wave(`wavenum')
label variable s`wavenum'momliv "s`wavenum'momliv:w`wavenum' s mother alive"
label values s`wavenum'momliv liv

*check

***parental mortality: father alive***
*wave 1 respondent father alive status
gen r`wavenum'dadliv =.
missing_w`wavenum' falive, result(r`wavenum'dadliv)
replace r`wavenum'dadliv = 0 if falive == 2 
replace r`wavenum'dadliv = 1 if falive == 1
label variable r`wavenum'dadliv "r`wavenum'dadliv:w`wavenum' r father alive"
label values r`wavenum'dadliv liv

*wave  spouse father alive status
gen s`wavenum'dadliv =.
spouse r`wavenum'dadliv, result(s`wavenum'dadliv) wave(`wavenum')
label variable s`wavenum'dadliv "s`wavenum'dadliv:w`wavenum' s father alive"
label values s`wavenum'dadliv liv

*check

***parental mortality: mother's current age or age at death***
*wave  respondent mother's age
gen r`wavenum'momage =.
missing_w`wavenum' mothage magedied, result(r`wavenum'momage)
replace r`wavenum'momage = magedied if r`wavenum'momliv == 0 & inrange(magedied,16,120)
replace r`wavenum'momage = mothage if r`wavenum'momliv == 1 & inrange(mothage,0,120)
label variable r`wavenum'momage "r`wavenum'momage:w`wavenum' r mother age current/at death"

*wave spouse mother's age
gen s`wavenum'momage =.
spouse r`wavenum'momage, result(s`wavenum'momage) wave(`wavenum')
label variable s`wavenum'momage "s`wavenum'momage:w`wavenum' s mother age current/at death"

*check 

***parental mortality: father's current age or age at death***
*wave respondent father's age
gen r`wavenum'dadage =.
missing_w`wavenum' fathage fagedied, result(r`wavenum'dadage)
replace r`wavenum'dadage = fagedied if r`wavenum'dadliv == 0 & inrange(fagedied,16,120)
replace r`wavenum'dadage = fathage if r`wavenum'dadliv == 1 & inrange(fathage,0,120)
label variable r`wavenum'dadage "r`wavenum'dadage:w`wavenum' r father age current/at death"

*wave spouse father's age
gen s`wavenum'dadage =.
spouse r`wavenum'dadage, result(s`wavenum'dadage) wave(`wavenum')
label variable s`wavenum'dadage "s`wavenum'dadage:w`wavenum' s father age current/at death"

*check 

***Number of living parents***
*wave respondent number of living parents
gen r`wavenum'livpar=.
missing_H r`wavenum'momliv r`wavenum'dadliv, result(r`wavenum'livpar)
replace r`wavenum'livpar=0 if !missing(r`wavenum'momliv) & !missing(r`wavenum'dadliv)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'momliv==1 & !mi(r`wavenum'livpar)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'dadliv==1 & !mi(r`wavenum'livpar)
label variable r`wavenum'livpar "r`wavenum'livpar:w`wavenum' r Number of living parents"

*wave spouse number of living parents
gen s`wavenum'livpar =.
spouse r`wavenum'livpar, result(s`wavenum'livpar) wave(`wavenum')
label variable s`wavenum'livpar "s`wavenum'livpar:w`wavenum' s Number of living parents"

*check


*******Family Contact**************
**Child Contact in person****
gen r`wavenum'kcntf=.
replace r`wavenum'kcntf= .m if r`wavenum'kcntf ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntf= .m if scchdg == -1
replace r`wavenum'kcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntf= .d if scchdg == -8
replace r`wavenum'kcntf= .r if scchdg == -9
replace r`wavenum'kcntf= .k if scchd == 2 & scchdg == -1
replace r`wavenum'kcntf= 0  if inlist(scchdg,3,4,5,6) 
replace r`wavenum'kcntf= 1  if inlist(scchdg,1,2) | h`wavenum'coresd == 1
label variable r`wavenum'kcntf "r`wavenum'kcntf:w`wavenum' r any weekly contact w/ children in person"
label value r`wavenum'kcntf contact

*wave spouse contact in person
gen s`wavenum'kcntf  =.
spouse r`wavenum'kcntf , result(s`wavenum'kcntf ) wave(`wavenum')
label variable s`wavenum'kcntf "s`wavenum'kcntf:w`wavenum' s any weekly contact w/ children in person"
label value s`wavenum'kcntf contact

**Child Contact in phone/email****
gen r`wavenum'kcntpm=.
replace r`wavenum'kcntpm= .m if r`wavenum'kcntpm ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntpm= .m if scchdh == -1 | scchdi == -1 | scchdt == -1
replace r`wavenum'kcntpm= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntpm= .d if scchdh == -8 | scchdi == -8 | scchdt == -8
replace r`wavenum'kcntpm= .r if scchdh == -9 | scchdi == -9 | scchdt == -9
replace r`wavenum'kcntpm= .k if scchd == 2 & (scchdh == -1 & scchdi == -1 & scchdt == -1)
replace r`wavenum'kcntpm= 0  if inlist(scchdh,3,4,5,6) | inlist(scchdi,3,4,5,6) | inlist(scchdt,3,4,5,6)
replace r`wavenum'kcntpm= 1  if inlist(scchdh,1,2) | inlist(scchdi,1,2) | inlist(scchdi,1,2)
label variable r`wavenum'kcntpm "r`wavenum'kcntpm:w`wavenum' r any weekly contact w/ children-phone/email"
label value r`wavenum'kcntpm contact

*wave spouse contact in phone/email
gen s`wavenum'kcntpm  =.
spouse r`wavenum'kcntpm , result(s`wavenum'kcntpm ) wave(`wavenum')
label variable s`wavenum'kcntpm "s`wavenum'kcntpm:w`wavenum' s any weekly contact w/ children-phone/email"
label value s`wavenum'kcntpm contact

**Any Child Contact in person/phone/email****
gen r`wavenum'kcnt=.
replace r`wavenum'kcnt= .m if r`wavenum'kcntf == .m | r`wavenum'kcntpm == .m
replace r`wavenum'kcnt= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcnt= .c if r`wavenum'kcntf == .c | r`wavenum'kcntpm == .c
replace r`wavenum'kcnt= .d if r`wavenum'kcntf == .d | r`wavenum'kcntpm == .d
replace r`wavenum'kcnt= .r if r`wavenum'kcntf == .r | r`wavenum'kcntpm == .r
replace r`wavenum'kcnt= .k if r`wavenum'kcntf == .k | r`wavenum'kcntpm == .k
replace r`wavenum'kcnt= 0 if (r`wavenum'kcntf == 0 | r`wavenum'kcntpm == 0 ) 
replace r`wavenum'kcnt= 1 if (r`wavenum'kcntf == 1 | r`wavenum'kcntpm == 1 ) 
label variable r`wavenum'kcnt "r`wavenum'kcnt:w`wavenum' r any weekly contact w/ children in person/phone/email"
label value r`wavenum'kcnt contact

*wave spouse contact in person
gen s`wavenum'kcnt  =.
spouse r`wavenum'kcnt , result(s`wavenum'kcnt) wave(`wavenum')
label variable s`wavenum'kcnt "s`wavenum'kcnt:w`wavenum' s any weekly contact w/ children in person/phone/email"
label value s`wavenum'kcnt contact

*******Family Contact**************
**Relatives Contact in person****
gen r`wavenum'rcntf=.
replace r`wavenum'rcntf= .m if r`wavenum'rcntf == . & inw`wavenum'sc == 1 
replace r`wavenum'rcntf= .m if scfamg == -1
replace r`wavenum'rcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntf= .d if scfamg == -8
replace r`wavenum'rcntf= .r if scfamg == -9
replace r`wavenum'rcntf= .n if scfam == 2 & scfamg == -1
replace r`wavenum'rcntf= 0  if inlist(scfamg,3,4,5,6) 
replace r`wavenum'rcntf= 1  if inlist(scfamg,1,2) 
forvalues i = 1/`maxhhn' {
	replace r`wavenum'rcntf = 1 if inlist(DhR`i',8,9,10,11,12,13,14,15,16,17,18,19,20,21)
}
label variable r`wavenum'rcntf "r`wavenum'rcntf:w`wavenum' r any weekly contact w/ relative in person"
label value r`wavenum'rcntf contact

*wave spouse contact in person
gen s`wavenum'rcntf  =.
spouse r`wavenum'rcntf , result(s`wavenum'rcntf ) wave(`wavenum')
label variable s`wavenum'rcntf "s`wavenum'rcntf:w`wavenum' s any weekly contact w/ relative in person"
label value s`wavenum'rcntf contact

**relative Contact in phone/email****
gen r`wavenum'rcntpm=.
replace r`wavenum'rcntpm= .m if r`wavenum'rcntpm ==. & inw`wavenum'sc ==1
replace r`wavenum'rcntpm= .m if scfami == -1 & scfamh == -1 & scfamt == -1
replace r`wavenum'rcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntpm= .d if scfami == -8 & scfamh == -8 & scfamt == -8
replace r`wavenum'rcntpm= .r if scfami == -9 & scfamh == -9 & scfamt == -9
replace r`wavenum'rcntpm= .n if scfam == 2 & (scfami == -1 | scfamh == -1 | scfamt == -1)
replace r`wavenum'rcntpm= 0  if inlist(scfamh,3,4,5,6) | inlist(scfami,3,4,5,6) | inlist(scfamt,3,4,5,6)
replace r`wavenum'rcntpm= 1  if inlist(scfamh,1,2) | inlist(scfami,1,2) | inlist(scfamt,1,2)
label variable r`wavenum'rcntpm "r`wavenum'rcntpm:w`wavenum' r any weekly contact w/ relative-phone/email"
label value r`wavenum'rcntpm contact

*wave spouse contact in phone/email****
gen s`wavenum'rcntpm  =.
spouse r`wavenum'rcntpm , result(s`wavenum'rcntpm ) wave(`wavenum')
label variable s`wavenum'rcntpm "s`wavenum'rcntpm:w`wavenum' s any weekly contact w/ relative-phone/email"
label value s`wavenum'rcntpm contact

**Any relative Contact in person/phone/email****
gen r`wavenum'rcnt=.
replace r`wavenum'rcnt= .m if r`wavenum'rcntf == .m | r`wavenum'rcntpm == .m
replace r`wavenum'rcnt= .c if r`wavenum'rcntf == .c | r`wavenum'rcntpm == .c
replace r`wavenum'rcnt= .d if r`wavenum'rcntf == .d | r`wavenum'rcntpm == .d
replace r`wavenum'rcnt= .r if r`wavenum'rcntf == .r | r`wavenum'rcntpm == .r
replace r`wavenum'rcnt= .n if r`wavenum'rcntf == .n | r`wavenum'rcntpm == .n
replace r`wavenum'rcnt= 0 if (r`wavenum'rcntf == 0 | r`wavenum'rcntpm == 0 ) 
replace r`wavenum'rcnt= 1 if (r`wavenum'rcntf == 1 | r`wavenum'rcntpm == 1 ) 
label variable r`wavenum'rcnt "r`wavenum'rcnt:w`wavenum' r any weekly contact w/ relative in person/phone/email"
label value r`wavenum'rcnt contact

*wave spouse contact in person/phone/email
gen s`wavenum'rcnt  =.
spouse r`wavenum'rcnt , result(s`wavenum'rcnt ) wave(`wavenum')
label variable s`wavenum'rcnt "s`wavenum'rcnt:w`wavenum' s any weekly contact w/ relative in person/phone/email"
label value s`wavenum'rcnt contact

*******Family Contact**************
**Friend Contact in person****
gen r`wavenum'fcntf=.
replace r`wavenum'fcntf= .m if r`wavenum'fcntf == . & inw`wavenum'sc ==1
replace r`wavenum'fcntf= .m if scfrdg == -1
replace r`wavenum'fcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntf= .d if scfrdg == -8
replace r`wavenum'fcntf= .r if scfrdg == -9
replace r`wavenum'fcntf= .n if scfrd == 2 & scfrdg == -1
replace r`wavenum'fcntf= 0  if inlist(scfrdg,3,4,5,6)
replace r`wavenum'fcntf= 1  if inlist(scfrdg,1,2) 
label variable r`wavenum'fcntf "r`wavenum'fcntf:w`wavenum' r any weekly contact w/ friend in person"
label value r`wavenum'fcntf contact

*wave spouse contact in person
gen s`wavenum'fcntf  =.
spouse r`wavenum'fcntf , result(s`wavenum'fcntf ) wave(`wavenum')
label variable s`wavenum'fcntf "s`wavenum'fcntf:w`wavenum' s any weekly contact w/ friend in person"
label value s`wavenum'fcntf contact

**Friend Contact in phone/email****
gen r`wavenum'fcntpm=.
replace r`wavenum'fcntpm= .m if r`wavenum'fcntpm == . & inw`wavenum'sc ==1
replace r`wavenum'fcntpm= .m if scfrdh == -1 | scfrdi == -1 | scfrdt == -1
replace r`wavenum'fcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntpm= .d if scfrdh == -8 | scfrdi == -8 | scfrdt == -8
replace r`wavenum'fcntpm= .r if scfrdh == -9 | scfrdi == -9 | scfrdt == -9
replace r`wavenum'fcntpm= .n if scfrd == 2 & (scfrdh == -1 |scfrdi ==-1 | scfrdt == -1)
replace r`wavenum'fcntpm= 0  if inlist(scfrdh,3,4,5,6) | inlist(scfrdi,3,4,5,6) | inlist(scfrdt,3,4,5,6)
replace r`wavenum'fcntpm= 1  if inlist(scfrdh,1,2) | inlist(scfrdi,1,2) | inlist(scfrdt,1,2)
label variable r`wavenum'fcntpm "r`wavenum'fcntpm:w`wavenum' r any weekly contact w/ friend phone/email"
label value r`wavenum'fcntpm contact

*wave spouse contact in person
gen s`wavenum'fcntpm  =.
spouse r`wavenum'fcntpm , result(s`wavenum'fcntpm ) wave(`wavenum')
label variable s`wavenum'fcntpm "s`wavenum'fcntpm:w`wavenum' s any weekly contact w/ friend phone/email"
label value s`wavenum'fcntpm contact

**Any Friend Contact in person/phone/email****
gen r`wavenum'fcnt=.
replace r`wavenum'fcnt= .m if r`wavenum'fcntpm == .m | r`wavenum'fcntf == .m
replace r`wavenum'fcnt= .c if r`wavenum'fcntpm == .c | r`wavenum'fcntf == .c
replace r`wavenum'fcnt= .d if r`wavenum'fcntpm == .d | r`wavenum'fcntf == .d
replace r`wavenum'fcnt= .r if r`wavenum'fcntpm == .r | r`wavenum'fcntf == .r
replace r`wavenum'fcnt= .n if r`wavenum'fcntpm == .n | r`wavenum'fcntf == .n
replace r`wavenum'fcnt= 0 if (r`wavenum'fcntpm == 0 | r`wavenum'fcntf == 0 ) 
replace r`wavenum'fcnt= 1 if (r`wavenum'fcntpm == 1 | r`wavenum'fcntf == 1 ) 
label variable r`wavenum'fcnt "r`wavenum'fcnt:w`wavenum' r any weekly contact w/ friend in person/phone/email"
label value r`wavenum'fcnt contact

*wave spouse contact in person
gen s`wavenum'fcnt  =.
spouse r`wavenum'fcnt , result(s`wavenum'fcnt ) wave(`wavenum')
label variable s`wavenum'fcnt "s`wavenum'fcnt:w`wavenum' s any weekly contact w/ friend in person/phone/email"
label value s`wavenum'fcnt contact

*drop intermediate variables
drop cchild
drop DhR1
drop sperid `sp'  

***********Famliy Care/Informal Care****************
***Received care giving*****
gen r`wavenum'rcaany=.
missing_w`wavenum' CaTkA CaTkB CaTkC CaTkD CaTkE CaTkF CaTkG CaTkH CaTkI CaTkJ CaTkK CaTkL CaTkM, result(r`wavenum'rcaany)
replace r`wavenum'rcaany= .s if r`wavenum'dressa == 0  ///
											 | r`wavenum'walkra == 0 | r`wavenum'batha == 0  ///
											 | r`wavenum'eata == 0   | r`wavenum'beda == 0  ///
											 | r`wavenum'toilta == 0 | r`wavenum'mapa == 0   ///
											 | r`wavenum'phonea == 0 | r`wavenum'moneya == 0 ///
											 | r`wavenum'medsa == 0  | r`wavenum'shopa == 0  ///
											 | r`wavenum'mealsa == 0 | r`wavenum'housewka == 0  ///
											 | r`wavenum'walk100a == 0 | r`wavenum'sita == 0 ///
											 | r`wavenum'chaira == 0 | r`wavenum'climsa == 0  ///
											 | r`wavenum'clim1a == 0 | r`wavenum'stoopa == 0 ///
											 | r`wavenum'lifta == 0  | r`wavenum'dimea == 0  ///
											 | r`wavenum'armsa == 0 | r`wavenum'pusha == 0 | headlco ==0 | HeADLda == 0
replace r`wavenum'rcaany= 0 if CaTkA==2 | CaTkB==2 | CaTkC==2 | CaTkD==2 | CaTkE==2 | CaTkF==2 | CaTkG==2 | ///
															 CaTkH==2 | CaTkI==2 | CaTkJ==2 | CaTkK==2 | CaTkL==2 | CaTkM==2
replace r`wavenum'rcaany= 1 if CaTkA==1 | CaTkB==1 | CaTkC==1 | CaTkD==1 | CaTkE==1 | CaTkF==1 | CaTkG==1 | ///
															 CaTkH==1 | CaTkI==1 | CaTkJ==1 | CaTkK==1 | CaTkL==1 | CaTkM==1
label variable r`wavenum'rcaany "r`wavenum'rcaany:w`wavenum' R Received any informal care"
label value r`wavenum'rcaany contact

gen s`wavenum'rcaany =.
spouse r`wavenum'rcaany, result(s`wavenum'rcaany) wave(5)
label variable s`wavenum'rcaany "s`wavenum'rcaany:w`wavenum' S Received any informal care"
label value s`wavenum'rcaany contact


***Gave Care****
gen r`wavenum'gcaany= .
replace r`wavenum'gcaany= .m if r`wavenum'gcaany ==. & inw`wavenum' == 1
replace r`wavenum'gcaany= .m if wpactca == -1 | wpactlo == -1 
replace r`wavenum'gcaany= .d if wpactca == -8 | wpactlo == -8 
replace r`wavenum'gcaany= .r if wpactca == -9 | wpactlo == -9 
replace r`wavenum'gcaany= 0  if wpactca == 0 | wpactlo == 0
replace r`wavenum'gcaany= 1  if wpactca == 1 | wpactlo == 1
label variable r`wavenum'gcaany "r`wavenum'gcaany:w`wavenum' R Gave any informal care to anyone"
label value r`wavenum'gcaany contact

gen s`wavenum'gcaany =.
spouse r`wavenum'gcaany, result(s`wavenum'gcaany) wave(`wavenum')
label variable s`wavenum'gcaany "s`wavenum'gcaany:w`wavenum' S Gave any informal care to anyone"
label value s`wavenum'gcaany contact

***Number of grandchildren***
gen r`wavenum'grchild_e =. 
replace r`wavenum'grchild_e = .d if ngrandch == -8
replace r`wavenum'grchild_e = .r if ngrandch == -9
replace r`wavenum'grchild_e = ngrandch if inrange(ngrandch,0,90)
label variable r`wavenum'grchild_e "r`wavenum'grchild_e:w`wavenum' R number of grandchildren/great-grandchildren"

gen s`wavenum'grchild_e =.
spouse r`wavenum'grchild_e, result(s`wavenum'grchild_e) wave(`wavenum')
label variable s`wavenum'grchild_e "s`wavenum'grchild_e:w`wavenum' S number of grandchildren/great-grandchildren"


****Gave care to grandchildren*****
gen r`wavenum'gkcare = .
replace r`wavenum'gkcare= .m if r`wavenum'gkcare ==. & inw`wavenum' == 1
replace r`wavenum'gkcare= .m if ErCAMgc == -1 
replace r`wavenum'gkcare= .i if askinst == 1
replace r`wavenum'gkcare= .p if askpx == 1
replace r`wavenum'gkcare= .d if ErCAMgc == -8 | ErCAA ==-8
replace r`wavenum'gkcare= .r if ErCAMgc == -9 | ErCAA ==-8 
replace r`wavenum'gkcare= .n if r`wavenum'grchild_e == 0
replace r`wavenum'gkcare= 0  if ErCAA ==2 | ErCAMgc == 0
replace r`wavenum'gkcare= 1  if ErCAMgc == 1
label variable r`wavenum'gkcare "r`wavenum'gkcare:w`wavenum' R gave care to grandchildren"
label value r`wavenum'gkcare contact

gen s`wavenum'gkcare =.
spouse r`wavenum'gkcare, result(s`wavenum'gkcare) wave(`wavenum')
label variable s`wavenum'gkcare "s`wavenum'gkcare:w`wavenum' S gave care to grandchildren"
label value s`wavenum'gkcare contact


****Any Family Financial Transfer *****
***Give to anyone ***
gen h`wavenum'gany=.
replace h`wavenum'gany =.m if h`wavenum'gany == . & inw`wavenum'== 1 
replace h`wavenum'gany =.m if HoTran == -1
replace h`wavenum'gany =.d if HoTran == -8
replace h`wavenum'gany =.r if HoTran == -9
replace h`wavenum'gany = 0 if HoTran == 0
replace h`wavenum'gany = 1 if inrange(HoTran,1,999999)
label variable h`wavenum'gany "h`wavenum'gany:w`wavenum' Any transfers given"
label value h`wavenum'gany tran

***To children & Grand children***
gen h`wavenum'tcany=.  
replace h`wavenum'tcany =.m if h`wavenum'tcany == . & inw`wavenum' == 1 
replace h`wavenum'tcany =.m if hotrangc == -1 | hotranoc ==-1
replace h`wavenum'tcany =.d if hotrangc == -8 | hotranoc ==-8 | HoTran == -8
replace h`wavenum'tcany =.r if hotrangc == -9 | hotranoc ==-9 | HoTran == -9
replace h`wavenum'tcany = 0 if hotrangc == 0 | hotranoc == 0 | HoTran == 0
replace h`wavenum'tcany = 1 if hotrangc == 1 | hotranoc == 1
label variable h`wavenum'tcany "h`wavenum'tcany:w`wavenum' Any transfers given to children/ grandchildren"
label value h`wavenum'tcany tran

***To relative****
gen h`wavenum'toany=.
replace h`wavenum'toany =.m if h`wavenum'toany == . & inw`wavenum'== 1 
replace h`wavenum'toany =.m if HoTran == -1
replace h`wavenum'toany =.d if hotranor == -8 | HoTran == -8
replace h`wavenum'toany =.r if hotranor == -9 | HoTran == -9
replace h`wavenum'toany = 0 if hotranor == 0 | HoTran == 0
replace h`wavenum'toany = 1 if hotranor == 1
label variable h`wavenum'toany "h`wavenum'toany:w`wavenum' Any transfers given to other relatives"
label value h`wavenum'toany tran

***To friend***
gen h`wavenum'tfany=.
replace h`wavenum'tfany =.m if h`wavenum'tfany == . & inw`wavenum'== 1 
replace h`wavenum'tfany =.m if HoTran == -1
replace h`wavenum'tfany =.d if hotrannr == -8 | HoTran == -8
replace h`wavenum'tfany =.r if hotrannr == -9 | HoTran == -9
replace h`wavenum'tfany = 0 if hotrannr == 0 | HoTran == 0
replace h`wavenum'tfany = 1 if hotrannr == 1
label variable h`wavenum'tfany "h`wavenum'tfany:w`wavenum' Any transfers given to other non-relatives"
label value h`wavenum'tfany tran

**Participate in social work**
gen r`wavenum'socyr = .
replace r`wavenum'socyr = .m if inlist(scorgn,-1,-2) 
replace r`wavenum'socyr = .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'socyr = .r if scorgn == -9
replace r`wavenum'socyr = 0 if scorgn == 0 | scorg09 == 1
replace r`wavenum'socyr = 1 if inrange(scorgn,1,300)

label variable r`wavenum'socyr "r`wavenum'socyr:w`wavenum' R participate in social activities"
label value r`wavenum'socyr social

gen s`wavenum'socyr =.
spouse r`wavenum'socyr, result(s`wavenum'socyr) wave(`wavenum')
label variable s`wavenum'socyr "s`wavenum'socyr:w`wavenum' S participate in social activities"
label value s`wavenum'socyr social

****Parental SES****
***Main carer relationship to the respondent***
replace ramarela = .m if DiKLiv == -1  & mi(ramarela)
replace ramarela = .d if DiKLiv == -8 & mi(ramarela)
replace ramarela = .r if DiKLiv == -9 & mi(ramarela)
replace ramarela = .h if DiKLiv == 9 & mi(ramarela)
replace ramarela = DiKLiv if inrange(DiKLiv,1,8)  & mi(ramarela)
replace ramarela = 9  if inlist(DiKLiv,51,52,54,55)  & mi(ramarela)

*wave 6 spouse  occupation 
gen s`wavenum'marela =.
spouse ramarela, result(s`wavenum'marela) wave(`wavenum')
label variable s`wavenum'marela "s`wavenum'marela:w`wavenum' main carer relationship to the spouse"
label value s`wavenum'marela rel


***main carer occupation at 14****
replace ramaoccup = .m if DiFJob == -1 & mi(ramaoccup)
replace ramaoccup = .h if DiFJob == -1 & DiKLiv == 9  & mi(ramaoccup)
replace ramaoccup = .d if DiFJob == -8 & mi(ramaoccup)
replace ramaoccup = .r if DiFJob == -9 & mi(ramaoccup)
replace ramaoccup = .w if DiFJob == 13 & mi(ramaoccup)
replace ramaoccup = .n if DiFJob == 14 & mi(ramaoccup)
replace ramaoccup = .s if DiFJob == 15 & mi(ramaoccup)
replace ramaoccup = 1 if inrange(DiFJob,2,4) & mi(ramaoccup)
replace ramaoccup = 2 if inrange(DiFJob,5,9)  & mi(ramaoccup)
replace ramaoccup = 3 if DiFJob == 1 & mi(ramaoccup)
replace ramaoccup = 4 if inrange(DiFJob,10,12) & mi(ramaoccup)


*wave 6 spouse mother occupation 
gen s`wavenum'maoccup =.
spouse ramaoccup, result(s`wavenum'maoccup) wave(`wavenum')
label variable s`wavenum'maoccup "s`wavenum'maoccup:w`wavenum' s main carer occupation at age 14"
label value s`wavenum'maoccup occu

****parental education***
**age mother finished education
gen ramomeduage = .
replace ramomeduage = .a if (inw6 == 0 | inw7 == 0 )& (inw1 ==1 | inw2 == 1 | inw3 == 1 |inw4 == 1 | inw5 == 1) 
replace ramomeduage = .d if DiMaedu == -8
replace ramomeduage = .r if DiMaedu == -9
replace ramomeduage = DiMaedu if inrange(DiMaedu,1,7) 

label variable ramomeduage "ramomeduage:r age mother finished education"
label value ramomeduage mage

**age father finished education
gen radadeduage = . 
replace radadeduage = .a if (inw6 == 0 | inw7 == 0 )& (inw1 ==1 | inw2 == 1 | inw3 == 1 |inw4 == 1 | inw5 == 1) 
replace radadeduage = .m if DiPaEdu == -1 
replace radadeduage = .d if DiPaEdu == -8 
replace radadeduage = .r if DiPaEdu == -9 
replace radadeduage = DiPaEdu if inrange(DiPaEdu,1,7)

label variable radadeduage "radadeduage:r age father finished education"
label value radadeduage mage




***drop ELSA index file raw variables***
*drop `family_w6_index'

***drop ELSA wave 6 core file raw variables***
drop `family_w6_core'

***drop ELSA wave 6 derived  file raw variables***
drop `family_w6_derv'


*set wave number
local wavenum = 7

****merge with index file***
*local family_w7_index idahhw7
*merge 1:1 idauniq using "`index'", keepusing(`family_w7_index') nogen

***merge with wave 7 core data***
local family_w7_core perid DhR DhR? DhR1? DhC DhC? DhC1? DHCR?? DHCR??? scorgn scorg09 ///
                     DiSib idahhw7 scchd scchdh scchdi scchdj scchdk scfam scfamh scfami scfamj scfamk ///
										 scfrd scfrdh scfrdi scfrdj scfrdk ErCAA ErCAMgc askpx DiGnMy DiGran ///
										 HoTran hotrangc hotranoc hotranor hotrannr wpactca wpactlo askinst HHTot ///
										 DiKLiv DiFJob DiMaedu DiPaEdu  CaTkA CaTkB CaTkC CaTkD CaTkE CaTkF CaTkG ///
										 CaTkH CaTkI CaTkJ CaTkK CaTkL CaTkM HeADLda 
										
merge 1:1 idauniq using "$wave_7_core", keepusing(`family_w7_core') nogen

***merge with wave 7 derived data***
local family_w7_derv ngrandch chsex? chsex1? nsibs malive mothage magedied falive ///
                     fathage fagedied npeople

merge 1:1 idauniq using "$wave_7_derv", keepusing(`family_w7_derv') nogen



*count number of household respondents
local n = 1
foreach var of varlist DhR DhR? DhR1? {
    local maxhhn = `n'
    local ++n 
}

****Number of people living in house***
*wave household number of people living in house
gen h`wavenum'hhres = npeople

label variable h`wavenum'hhres "h`wavenum'hhres:w`wavenum' Number of people in Household"

***check

***Number of children***
*spouse person number
gen sperid = .
spouse perid, result(sperid) wave(`wavenum')

*spouse relationship to each person in household
gen DhR1= DhR
local sp
forvalues p =1/`maxhhn' {
	gen sDhR`p' = .
	spouse DhR`p', result(sDhR`p') wave(`wavenum')
	local sp `sp' sDhR`p'
}

*wave household number of living children
gen r`wavenum'child =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'child = r`wavenum'child + 1 if inlist(chsex`i',1,2,-8,-9)
}
label variable r`wavenum'child "r`wavenum'child:w`wavenum' R Number of living children "


gen s`wavenum'child =.
spouse r`wavenum'child, result(s`wavenum'child) wave(`wavenum')
label variable s`wavenum'child "s`wavenum'child:w`wavenum' S Number of living children"


gen r`wavenum'son =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'son = .d if chsex`i' == -8 & mi(r`wavenum'son)
    replace r`wavenum'son = .r if chsex`i' == -9 & mi(r`wavenum'son) 
	replace r`wavenum'son = r`wavenum'son + 1 if chsex`i' == 1
}

label variable r`wavenum'son "r`wavenum'son:w`wavenum' r Number of living son "


gen s`wavenum'son =.
spouse r`wavenum'son, result(s`wavenum'son) wave(`wavenum')
label variable s`wavenum'son "s`wavenum'son:w`wavenum' s Number of living son"

gen r`wavenum'dau =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	 replace r`wavenum'dau = .d if chsex`i' == -8 & mi(r`wavenum'dau)
    replace r`wavenum'dau = .r if chsex`i' == -9 & mi(r`wavenum'dau) 
	replace r`wavenum'dau = r`wavenum'dau + 1 if chsex`i' == 2
}
label variable r`wavenum'dau "r`wavenum'dau:w`wavenum' r Number of living daughter"

*wave spouse number of living daughter
gen s`wavenum'dau =.
spouse r`wavenum'dau, result(s`wavenum'dau) wave(`wavenum')
label variable s`wavenum'dau "s`wavenum'dau:w`wavenum' s Number of living daughter"



*****Children Coreside******
gen cchild=0 if inw`wavenum' == 1
forvalues i =1/`maxhhn' { 
    replace cchild = cchild + 1 if inlist(DhR`i',3,4,5,6,7) | inlist(sDhR`i',3,4,5,6,7)
}

gen h`wavenum'coresd=.
replace h`wavenum'coresd=1 if inrange(cchild,1,99)
replace h`wavenum'coresd=0 if cchild==0
replace h`wavenum'coresd= .k if r`wavenum'child ==0
label variable h`wavenum'coresd "h`wavenum'coresd:w`wavenum' Any Child co-reside "
label value h`wavenum'coresd coreside
*
*gen s`wavenum'coresd =.
*spouse r`wavenum'coresd, result(s`wavenum'coresd) wave(`wavenum')
*label variable s`wavenum'coresd "s`wavenum'coresd:w`wavenum' s Any Child co-reside"
*label value s`wavenum'coresd coreside

***Number of living siblings***
*wave respondent number of living siblings
gen r`wavenum'livsib =.
replace r`wavenum'livsib = .m if inw`wavenum' == 1 
replace r`wavenum'livsib = .d if nsibs == -8
replace r`wavenum'livsib = .r if nsibs == -9
replace r`wavenum'livsib = nsibs if inrange(nsibs,0,97)
label variable r`wavenum'livsib "r`wavenum'livsib:w`wavenum' r Number of living siblings"

*wave spouse number of living siblings
gen s`wavenum'livsib =.
spouse r`wavenum'livsib, result(s`wavenum'livsib) wave(`wavenum')
label variable s`wavenum'livsib "s`wavenum'livsib:w`wavenum' s Number of living siblings"

*check


***parental mortality: mother alive***
*wave  respondent mother alive status
gen r`wavenum'momliv =.
missing_w`wavenum' malive, result(r`wavenum'momliv)
replace r`wavenum'momliv = 0 if malive == 2 
replace r`wavenum'momliv = 1 if malive == 1 
label variable r`wavenum'momliv "r`wavenum'momliv:w`wavenum' r mother alive"
label values r`wavenum'momliv liv

*wave  spouse mother alive status
gen s`wavenum'momliv =.
spouse r`wavenum'momliv, result(s`wavenum'momliv) wave(`wavenum')
label variable s`wavenum'momliv "s`wavenum'momliv:w`wavenum' s mother alive"
label values s`wavenum'momliv liv

*check

***parental mortality: father alive***
*wave 1 respondent father alive status
gen r`wavenum'dadliv =.
missing_w`wavenum' falive, result(r`wavenum'dadliv)
replace r`wavenum'dadliv = 0 if falive == 2 
replace r`wavenum'dadliv = 1 if falive == 1
label variable r`wavenum'dadliv "r`wavenum'dadliv:w`wavenum' r father alive"
label values r`wavenum'dadliv liv

*wave  spouse father alive status
gen s`wavenum'dadliv =.
spouse r`wavenum'dadliv, result(s`wavenum'dadliv) wave(`wavenum')
label variable s`wavenum'dadliv "s`wavenum'dadliv:w`wavenum' s father alive"
label values s`wavenum'dadliv liv

*check

***parental mortality: mother's current age or age at death***
*wave  respondent mother's age
gen r`wavenum'momage =.
missing_w`wavenum' mothage magedied, result(r`wavenum'momage)
replace r`wavenum'momage = magedied if r`wavenum'momliv == 0 & inrange(magedied,16,120)
replace r`wavenum'momage = mothage if r`wavenum'momliv == 1 & inrange(mothage,0,120)
label variable r`wavenum'momage "r`wavenum'momage:w`wavenum' r mother age current/at death"

*wave spouse mother's age
gen s`wavenum'momage =.
spouse r`wavenum'momage, result(s`wavenum'momage) wave(`wavenum')
label variable s`wavenum'momage "s`wavenum'momage:w`wavenum' s mother age current/at death"

*check 

***parental mortality: father's current age or age at death***
*wave respondent father's age
gen r`wavenum'dadage =.
missing_w`wavenum' fathage fagedied, result(r`wavenum'dadage)
replace r`wavenum'dadage = fagedied if r`wavenum'dadliv == 0 & inrange(fagedied,16,120)
replace r`wavenum'dadage = fathage if r`wavenum'dadliv == 1 & inrange(fathage,0,120)
label variable r`wavenum'dadage "r`wavenum'dadage:w`wavenum' r father age current/at death"

*wave spouse father's age
gen s`wavenum'dadage =.
spouse r`wavenum'dadage, result(s`wavenum'dadage) wave(`wavenum')
label variable s`wavenum'dadage "s`wavenum'dadage:w`wavenum' s father age current/at death"

*check 

***Number of living parents***
*wave respondent number of living parents
gen r`wavenum'livpar=.
missing_H r`wavenum'momliv r`wavenum'dadliv, result(r`wavenum'livpar)
replace r`wavenum'livpar=0 if !missing(r`wavenum'momliv) & !missing(r`wavenum'dadliv)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'momliv==1 & !mi(r`wavenum'livpar)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'dadliv==1 & !mi(r`wavenum'livpar)
label variable r`wavenum'livpar "r`wavenum'livpar:w`wavenum' r Number of living parents"

*wave spouse number of living parents
gen s`wavenum'livpar =.
spouse r`wavenum'livpar, result(s`wavenum'livpar) wave(`wavenum')
label variable s`wavenum'livpar "s`wavenum'livpar:w`wavenum' s Number of living parents"

*check


*******Family Contact**************
**Child Contact in person****
gen r`wavenum'kcntf=.
replace r`wavenum'kcntf= .m if r`wavenum'kcntf ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntf= .m if scchdh == -1
replace r`wavenum'kcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntf= .d if scchdh == -8
replace r`wavenum'kcntf= .r if scchdh == -9
replace r`wavenum'kcntf= .k if scchd == 2 & scchdh == -1
replace r`wavenum'kcntf= 0  if inlist(scchdh,3,4,5,6) 
replace r`wavenum'kcntf= 1  if inlist(scchdh,1,2) | h`wavenum'coresd == 1
label variable r`wavenum'kcntf "r`wavenum'kcntf:w`wavenum' r any weekly contact w/ children in person"
label value r`wavenum'kcntf contact

*wave spouse contact in person
gen s`wavenum'kcntf  =.
spouse r`wavenum'kcntf , result(s`wavenum'kcntf ) wave(`wavenum')
label variable s`wavenum'kcntf "s`wavenum'kcntf:w`wavenum' s any weekly contact w/ children in person"
label value s`wavenum'kcntf contact

**Child Contact in phone/email****
gen r`wavenum'kcntpm=.
replace r`wavenum'kcntpm= .m if r`wavenum'kcntpm ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntpm= .m if scchdi == -1 | scchdj == -1 | scchdk == -1
replace r`wavenum'kcntpm= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntpm= .d if scchdi == -8 | scchdj == -8 | scchdk == -8
replace r`wavenum'kcntpm= .r if scchdi == -9 | scchdj == -9 | scchdk == -9
replace r`wavenum'kcntpm= .k if scchd == 2 & (scchdi == -1 & scchdj == -1 & scchdk == -1)
replace r`wavenum'kcntpm= 0  if inlist(scchdi,3,4,5,6) | inlist(scchdj,3,4,5,6) | inlist(scchdk,3,4,5,6)
replace r`wavenum'kcntpm= 1  if inlist(scchdi,1,2) | inlist(scchdj,1,2) | inlist(scchdk,1,2)
label variable r`wavenum'kcntpm "r`wavenum'kcntpm:w`wavenum' r any weekly contact w/ children-phone/email"
label value r`wavenum'kcntpm contact

*wave spouse contact in phone/email
gen s`wavenum'kcntpm  =.
spouse r`wavenum'kcntpm , result(s`wavenum'kcntpm ) wave(`wavenum')
label variable s`wavenum'kcntpm "s`wavenum'kcntpm:w`wavenum' s any weekly contact w/ children-phone/email"
label value s`wavenum'kcntpm contact

**Any Child Contact in person/phone/email****
gen r`wavenum'kcnt=.
replace r`wavenum'kcnt= .m if r`wavenum'kcntf == .m | r`wavenum'kcntpm == .m
replace r`wavenum'kcnt= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcnt= .c if r`wavenum'kcntf == .c | r`wavenum'kcntpm == .c
replace r`wavenum'kcnt= .d if r`wavenum'kcntf == .d | r`wavenum'kcntpm == .d
replace r`wavenum'kcnt= .r if r`wavenum'kcntf == .r | r`wavenum'kcntpm == .r
replace r`wavenum'kcnt= .k if r`wavenum'kcntf == .k | r`wavenum'kcntpm == .k
replace r`wavenum'kcnt= 0 if (r`wavenum'kcntf == 0 | r`wavenum'kcntpm == 0 ) 
replace r`wavenum'kcnt= 1 if (r`wavenum'kcntf == 1 | r`wavenum'kcntpm == 1 ) 
label variable r`wavenum'kcnt "r`wavenum'kcnt:w`wavenum' r any weekly contact w/ children in person/phone/email"
label value r`wavenum'kcnt contact

*wave spouse contact in person
gen s`wavenum'kcnt  =.
spouse r`wavenum'kcnt , result(s`wavenum'kcnt) wave(`wavenum')
label variable s`wavenum'kcnt "s`wavenum'kcnt:w`wavenum' s any weekly contact w/ children in person/phone/email"
label value s`wavenum'kcnt contact

*******Family Contact**************
**Relatives Contact in person****
gen r`wavenum'rcntf=.
replace r`wavenum'rcntf= .m if r`wavenum'rcntf == . & inw`wavenum'sc == 1 
replace r`wavenum'rcntf= .m if scfamh == -1
replace r`wavenum'rcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntf= .d if scfamh == -8
replace r`wavenum'rcntf= .r if scfamh == -9
replace r`wavenum'rcntf= .n if scfam == 2 & scfamh == -1
replace r`wavenum'rcntf= 0  if inlist(scfamh,3,4,5,6) 
replace r`wavenum'rcntf= 1  if inlist(scfamh,1,2) 
forvalues i = 1/`maxhhn' {
	replace r`wavenum'rcntf = 1 if inlist(DhR`i',8,9,10,11,12,13,14,15,16,17,18,19,20,21)
}
label variable r`wavenum'rcntf "r`wavenum'rcntf:w`wavenum' r any weekly contact w/ relative in person"
label value r`wavenum'rcntf contact

*wave spouse contact in person
gen s`wavenum'rcntf  =.
spouse r`wavenum'rcntf , result(s`wavenum'rcntf ) wave(`wavenum')
label variable s`wavenum'rcntf "s`wavenum'rcntf:w`wavenum' s any weekly contact w/ relative in person"
label value s`wavenum'rcntf contact

**relative Contact in phone/email****
gen r`wavenum'rcntpm=.
replace r`wavenum'rcntpm= .m if r`wavenum'rcntpm ==. & inw`wavenum'sc ==1
replace r`wavenum'rcntpm= .m if scfami == -1 & scfamj == -1 & scfamk == -1
replace r`wavenum'rcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntpm= .d if scfami == -8 & scfamj == -8 & scfamk == -8
replace r`wavenum'rcntpm= .r if scfami == -9 & scfamj == -9 & scfamk == -9
replace r`wavenum'rcntpm= .n if scfam == 2 & (scfami == -1 | scfamj == -1 | scfamk == -1)
replace r`wavenum'rcntpm= 0  if inlist(scfami,3,4,5,6) | inlist(scfamj,3,4,5,6) | inlist(scfamk,3,4,5,6)
replace r`wavenum'rcntpm= 1  if inlist(scfami,1,2) | inlist(scfamj,1,2) | inlist(scfamk,1,2)
label variable r`wavenum'rcntpm "r`wavenum'rcntpm:w`wavenum' r any weekly contact w/ relative-phone/email"
label value r`wavenum'rcntpm contact

*wave spouse contact in phone/email****
gen s`wavenum'rcntpm  =.
spouse r`wavenum'rcntpm , result(s`wavenum'rcntpm ) wave(`wavenum')
label variable s`wavenum'rcntpm "s`wavenum'rcntpm:w`wavenum' s any weekly contact w/ relative-phone/email"
label value s`wavenum'rcntpm contact

**Any relative Contact in person/phone/email****
gen r`wavenum'rcnt=.
replace r`wavenum'rcnt= .m if r`wavenum'rcntf == .m | r`wavenum'rcntpm == .m
replace r`wavenum'rcnt= .c if r`wavenum'rcntf == .c | r`wavenum'rcntpm == .c
replace r`wavenum'rcnt= .d if r`wavenum'rcntf == .d | r`wavenum'rcntpm == .d
replace r`wavenum'rcnt= .r if r`wavenum'rcntf == .r | r`wavenum'rcntpm == .r
replace r`wavenum'rcnt= .n if r`wavenum'rcntf == .n | r`wavenum'rcntpm == .n
replace r`wavenum'rcnt= 0 if (r`wavenum'rcntf == 0 | r`wavenum'rcntpm == 0 ) 
replace r`wavenum'rcnt= 1 if (r`wavenum'rcntf == 1 | r`wavenum'rcntpm == 1 ) 
label variable r`wavenum'rcnt "r`wavenum'rcnt:w`wavenum' r any weekly contact w/ relative in person/phone/email"
label value r`wavenum'rcnt contact

*wave spouse contact in person/phone/email
gen s`wavenum'rcnt  =.
spouse r`wavenum'rcnt , result(s`wavenum'rcnt ) wave(`wavenum')
label variable s`wavenum'rcnt "s`wavenum'rcnt:w`wavenum' s any weekly contact w/ relative in person/phone/email"
label value s`wavenum'rcnt contact

*******Family Contact**************
**Friend Contact in person****
gen r`wavenum'fcntf=.
replace r`wavenum'fcntf= .m if r`wavenum'fcntf == . & inw`wavenum'sc ==1
replace r`wavenum'fcntf= .m if scfrdh == -1
replace r`wavenum'fcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntf= .d if scfrdh == -8
replace r`wavenum'fcntf= .r if scfrdh == -9
replace r`wavenum'fcntf= .n if scfrd == 2 & scfrdh == -1
replace r`wavenum'fcntf= 0  if inlist(scfrdh,3,4,5,6)
replace r`wavenum'fcntf= 1  if inlist(scfrdh,1,2) 
label variable r`wavenum'fcntf "r`wavenum'fcntf:w`wavenum' r any weekly contact w/ friend in person"
label value r`wavenum'fcntf contact

*wave spouse contact in person
gen s`wavenum'fcntf  =.
spouse r`wavenum'fcntf , result(s`wavenum'fcntf ) wave(`wavenum')
label variable s`wavenum'fcntf "s`wavenum'fcntf:w`wavenum' s any weekly contact w/ friend in person"
label value s`wavenum'fcntf contact

**Friend Contact in phone/email****
gen r`wavenum'fcntpm=.
replace r`wavenum'fcntpm= .m if r`wavenum'fcntpm == . & inw`wavenum'sc ==1
replace r`wavenum'fcntpm= .m if scfrdi == -1 | scfrdj == -1 | scfrdk == -1
replace r`wavenum'fcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntpm= .d if scfrdi == -8 | scfrdj == -8 | scfrdk == -8
replace r`wavenum'fcntpm= .r if scfrdi == -9 | scfrdj == -9 | scfrdk == -9
replace r`wavenum'fcntpm= .n if scfrd == 2 & (scfrdi == -1 |scfrdj ==-1 | scfrdk == -1)
replace r`wavenum'fcntpm= 0  if inlist(scfrdi,3,4,5,6) | inlist(scfrdj,3,4,5,6) | inlist(scfrdk,3,4,5,6)
replace r`wavenum'fcntpm= 1  if inlist(scfrdi,1,2) | inlist(scfrdj,1,2) | inlist(scfrdk,1,2)
label variable r`wavenum'fcntpm "r`wavenum'fcntpm:w`wavenum' r any weekly contact w/ friend phone/email"
label value r`wavenum'fcntpm contact

*wave spouse contact in person
gen s`wavenum'fcntpm  =.
spouse r`wavenum'fcntpm , result(s`wavenum'fcntpm ) wave(`wavenum')
label variable s`wavenum'fcntpm "s`wavenum'fcntpm:w`wavenum' s any weekly contact w/ friend phone/email"
label value s`wavenum'fcntpm contact

**Any Friend Contact in person/phone/email****
gen r`wavenum'fcnt=.
replace r`wavenum'fcnt= .m if r`wavenum'fcntpm == .m | r`wavenum'fcntf == .m
replace r`wavenum'fcnt= .c if r`wavenum'fcntpm == .c | r`wavenum'fcntf == .c
replace r`wavenum'fcnt= .d if r`wavenum'fcntpm == .d | r`wavenum'fcntf == .d
replace r`wavenum'fcnt= .r if r`wavenum'fcntpm == .r | r`wavenum'fcntf == .r
replace r`wavenum'fcnt= .n if r`wavenum'fcntpm == .n | r`wavenum'fcntf == .n
replace r`wavenum'fcnt= 0 if (r`wavenum'fcntpm == 0 | r`wavenum'fcntf == 0 ) 
replace r`wavenum'fcnt= 1 if (r`wavenum'fcntpm == 1 | r`wavenum'fcntf == 1 ) 
label variable r`wavenum'fcnt "r`wavenum'fcnt:w`wavenum' r any weekly contact w/ friend in person/phone/email"
label value r`wavenum'fcnt contact

*wave spouse contact in person
gen s`wavenum'fcnt  =.
spouse r`wavenum'fcnt , result(s`wavenum'fcnt ) wave(`wavenum')
label variable s`wavenum'fcnt "s`wavenum'fcnt:w`wavenum' s any weekly contact w/ friend in person/phone/email"
label value s`wavenum'fcnt contact

*drop intermediate variables
drop cchild
drop DhR1
drop sperid `sp'  

***********Famliy Care/Informal Care****************
***Received care giving*****
gen r`wavenum'rcaany=.
missing_w`wavenum' CaTkA CaTkB CaTkC CaTkD CaTkE CaTkF CaTkG CaTkH CaTkI CaTkJ CaTkK CaTkL CaTkM, result(r`wavenum'rcaany)
replace r`wavenum'rcaany= .s if r`wavenum'dressa == 0  ///
											 | r`wavenum'walkra == 0 | r`wavenum'batha == 0  ///
											 | r`wavenum'eata == 0   | r`wavenum'beda == 0  ///
											 | r`wavenum'toilta == 0 | r`wavenum'mapa == 0   ///
											 | r`wavenum'phonea == 0 | r`wavenum'moneya == 0 ///
											 | r`wavenum'medsa == 0  | r`wavenum'shopa == 0  ///
											 | r`wavenum'mealsa == 0 | r`wavenum'housewka == 0  ///
											 | r`wavenum'walk100a == 0 | r`wavenum'sita == 0 ///
											 | r`wavenum'chaira == 0 | r`wavenum'climsa == 0  ///
											 | r`wavenum'clim1a == 0 | r`wavenum'stoopa == 0 ///
											 | r`wavenum'lifta == 0  | r`wavenum'dimea == 0  ///
											 | r`wavenum'armsa == 0 | r`wavenum'pusha == 0 | HeADLda == 0
replace r`wavenum'rcaany= 0 if CaTkA==2 | CaTkB==2 | CaTkC==2 | CaTkD==2 | CaTkE==2 | CaTkF==2 | CaTkG==2 | ///
															 CaTkH==2 | CaTkI==2 | CaTkJ==2 | CaTkK==2 | CaTkL==2 | CaTkM==2
replace r`wavenum'rcaany= 1 if CaTkA==1 | CaTkB==1 | CaTkC==1 | CaTkD==1 | CaTkE==1 | CaTkF==1 | CaTkG==1 | ///
															 CaTkH==1 | CaTkI==1 | CaTkJ==1 | CaTkK==1 | CaTkL==1 | CaTkM==1
label variable r`wavenum'rcaany "r`wavenum'rcaany:w`wavenum' R Received any informal care"
label value r`wavenum'rcaany contact

gen s`wavenum'rcaany =.
spouse r`wavenum'rcaany, result(s`wavenum'rcaany) wave(5)
label variable s`wavenum'rcaany "s`wavenum'rcaany:w`wavenum' S Received any informal care"
label value s`wavenum'rcaany contact

***Number of grandchildren***
gen r`wavenum'grchild_e =. 
replace r`wavenum'grchild_e = .m if ngrandch == -2
replace r`wavenum'grchild_e = .d if ngrandch == -8
replace r`wavenum'grchild_e = .r if ngrandch == -9
replace r`wavenum'grchild_e = ngrandch if inrange(ngrandch,0,97)
label variable r`wavenum'grchild_e "r`wavenum'grchild_e:w`wavenum' R number of grandchildren/great-grandchildren"

gen s`wavenum'grchild_e =.
spouse r`wavenum'grchild_e, result(s`wavenum'grchild_e) wave(`wavenum')
label variable s`wavenum'grchild_e "s`wavenum'grchild_e:w`wavenum' S number of grandchildren/great-grandchildren"

****Gave care to grandchildren*****
gen r`wavenum'gkcare = .
replace r`wavenum'gkcare= .m if r`wavenum'gkcare ==. & inw`wavenum' == 1
replace r`wavenum'gkcare= .m if ErCAMgc == -1 
replace r`wavenum'gkcare= .i if askinst == 1
replace r`wavenum'gkcare= .p if askpx == 1
replace r`wavenum'gkcare= .d if ErCAMgc == -8 | ErCAA ==-8
replace r`wavenum'gkcare= .r if ErCAMgc == -9 | ErCAA ==-8 
replace r`wavenum'gkcare= .n if r`wavenum'grchild_e == 0
replace r`wavenum'gkcare= 0  if ErCAA ==2 | ErCAMgc == 0
replace r`wavenum'gkcare= 1  if ErCAMgc == 1
label variable r`wavenum'gkcare "r`wavenum'gkcare:w`wavenum' R gave care to grandchildren"
label value r`wavenum'gkcare contact

gen s`wavenum'gkcare =.
spouse r`wavenum'gkcare, result(s`wavenum'gkcare) wave(`wavenum')
label variable s`wavenum'gkcare "s`wavenum'gkcare:w`wavenum' S gave care to grandchildren"
label value s`wavenum'gkcare contact


****Any Family Financial Transfer *****
***Give to anyone ***
gen h`wavenum'gany=.
replace h`wavenum'gany =.m if h`wavenum'gany == . & inw`wavenum'== 1 
replace h`wavenum'gany =.m if HoTran == -1
replace h`wavenum'gany =.d if HoTran == -8
replace h`wavenum'gany =.r if HoTran == -9
replace h`wavenum'gany = 0 if HoTran == 0
replace h`wavenum'gany = 1 if inrange(HoTran,1,999999)
label variable h`wavenum'gany "h`wavenum'gany:w`wavenum' Any transfers given"
label value h`wavenum'gany tran

***To children & Grand children***
gen h`wavenum'tcany=.  
replace h`wavenum'tcany =.m if h`wavenum'tcany == . & inw`wavenum' == 1 
replace h`wavenum'tcany =.m if hotrangc == -1 | hotranoc ==-1
replace h`wavenum'tcany =.d if hotrangc == -8 | hotranoc ==-8 | HoTran == -8
replace h`wavenum'tcany =.r if hotrangc == -9 | hotranoc ==-9 | HoTran == -9
replace h`wavenum'tcany = 0 if hotrangc == 0 | hotranoc == 0 | HoTran == 0
replace h`wavenum'tcany = 1 if hotrangc == 1 | hotranoc == 1
label variable h`wavenum'tcany "h`wavenum'tcany:w`wavenum' Any transfers given to children/ grandchildren"
label value h`wavenum'tcany tran

***To relative****
gen h`wavenum'toany=.
replace h`wavenum'toany =.m if h`wavenum'toany == . & inw`wavenum'== 1 
replace h`wavenum'toany =.m if HoTran == -1
replace h`wavenum'toany =.d if hotranor == -8 | HoTran == -8
replace h`wavenum'toany =.r if hotranor == -9 | HoTran == -9
replace h`wavenum'toany = 0 if hotranor == 0 | HoTran == 0
replace h`wavenum'toany = 1 if hotranor == 1
label variable h`wavenum'toany "h`wavenum'toany:w`wavenum' Any transfers given to other relatives"
label value h`wavenum'toany tran

***To friend***
gen h`wavenum'tfany=.
replace h`wavenum'tfany =.m if h`wavenum'tfany == . & inw`wavenum'== 1 
replace h`wavenum'tfany =.m if HoTran == -1
replace h`wavenum'tfany =.d if hotrannr == -8 | HoTran == -8
replace h`wavenum'tfany =.r if hotrannr == -9 | HoTran == -9
replace h`wavenum'tfany = 0 if hotrannr == 0 | HoTran == 0
replace h`wavenum'tfany = 1 if hotrannr == 1
label variable h`wavenum'tfany "h`wavenum'tfany:w`wavenum' Any transfers given to other non-relatives"
label value h`wavenum'tfany tran

**Participate in social work**
gen r`wavenum'socyr = .
replace r`wavenum'socyr = .m if inlist(scorgn,-1,-2) 
replace r`wavenum'socyr = .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'socyr = .r if scorgn == -9
replace r`wavenum'socyr = 0 if scorgn == 0 | scorg09 == 1
replace r`wavenum'socyr = 1 if inrange(scorgn,1,300)

label variable r`wavenum'socyr "r`wavenum'socyr:w`wavenum' R participate in social activities"
label value r`wavenum'socyr social

gen s`wavenum'socyr =.
spouse r`wavenum'socyr, result(s`wavenum'socyr) wave(`wavenum')
label variable s`wavenum'socyr "s`wavenum'socyr:w`wavenum' S participate in social activities"
label value s`wavenum'socyr social

****Parental SES****
***Main carer relationship to the respondent***
replace ramarela = .m if DiKLiv == -1  & mi(ramarela)
replace ramarela = .d if DiKLiv == -8 & mi(ramarela)
replace ramarela = .r if DiKLiv == -9 & mi(ramarela)
replace ramarela = .h if DiKLiv == 9 & mi(ramarela)
replace ramarela = DiKLiv if inrange(DiKLiv,1,8)  & mi(ramarela)
replace ramarela = 9 if inlist(DiKLiv,51,52,54,55,85)  & mi(ramarela)

*wave 7 spouse  occupation 
gen s`wavenum'marela =.
spouse ramarela, result(s`wavenum'marela) wave(`wavenum')
label variable s`wavenum'marela "s`wavenum'marela:w`wavenum' main carer relationship to the spouse"
label value s`wavenum'marela rel

***main carer occupation at 14****
replace ramaoccup = .m if DiFJob == -1 & mi(ramaoccup)
replace ramaoccup = .h if DiFJob == -1 & DiKLiv == 9  & mi(ramaoccup)
replace ramaoccup = .d if DiFJob == -8 & mi(ramaoccup)
replace ramaoccup = .r if DiFJob == -9 & mi(ramaoccup)
replace ramaoccup = .w if DiFJob == 13 & mi(ramaoccup)
replace ramaoccup = .n if DiFJob == 14 & mi(ramaoccup)
replace ramaoccup = .s if DiFJob == 15 & mi(ramaoccup)
replace ramaoccup = 1 if inrange(DiFJob,2,4) & mi(ramaoccup)
replace ramaoccup = 2 if inrange(DiFJob,5,9)  & mi(ramaoccup)
replace ramaoccup = 3 if DiFJob == 1 & mi(ramaoccup)
replace ramaoccup = 4 if inrange(DiFJob,10,12) & mi(ramaoccup)

*wave 7 spouse mother occupation 
gen s`wavenum'maoccup =.
spouse ramaoccup, result(s`wavenum'maoccup) wave(`wavenum')
label variable s`wavenum'maoccup "s`wavenum'maoccup:w`wavenum' s main carer occupation at age 14"
label value s`wavenum'maoccup occu

****parental education***
**age mother finished education
replace ramomeduage = .m if DiMaedu == -1 & mi(ramomeduage)
replace ramomeduage = .d if DiMaedu == -8 & mi(ramomeduage)
replace ramomeduage = .r if DiMaedu == -9 & mi(ramomeduage)
replace ramomeduage = DiMaedu if inrange(DiMaedu,1,7)  & mi(ramomeduage)

**age father finished education
replace radadeduage = .m if DiPaEdu == -1 & mi(radadeduage)
replace radadeduage = .d if DiPaEdu == -8 & mi(radadeduage)
replace radadeduage = .r if DiPaEdu == -9 & mi(radadeduage)
replace radadeduage = DiPaEdu if inrange(DiPaEdu,1,7)  & mi(radadeduage)



***drop ELSA index file raw variables***
*drop `family_w7_index'

***drop ELSA wave 7 core file raw variables***
drop `family_w7_core'

***drop ELSA wave 7 derived  file raw variables***
drop `family_w7_derv'



*set wave number
local wavenum = 8

****merge with index file***
*local family_w8_index idahhw8
*merge 1:1 idauniq using "`index'", keepusing(`family_w8_index') nogen

***merge with wave 8 core data***
local family_w8_core perid dhr dhr? dhr1? dhc dhc? dhc1? dhcr?? dhcr??? scorgn scorg96 ///
                     disib idahhw8 scchd scchdh scchdi scchdj scchdk scfam scfamh scfami scfamj scfamk ///
										 scfrd scfrdh scfrdi scfrdj scfrdk ercaa ercamgc askpx dignmy digran ///
										 hotran hotrangc hotranoc hotranor hotrannr wpactca wpactlo askinst hhtot ///
										 dikliv difjob dimaedu dipaedu digprxa chouthh catka catkb catkc catkd catke catkf catkg ///
										 catkh catki catkj catkk catkl catkm headlda 
										
merge 1:1 idauniq using "$wave_8_core", keepusing(`family_w8_core') nogen

***merge with wave 8 derived data***
local family_w8_derv ngrandch chsex? chsex1? nsibs malive mothage magedied falive ///
                     fathage fagedied npeople

merge 1:1 idauniq using "$wave_8_derv", keepusing(`family_w8_derv') nogen



*count number of household respondents
local n = 1
foreach var of varlist dhr dhr? dhr1? {
    local maxhhn = `n'
    local ++n 
}

****Number of people living in house***
*wave household number of people living in house
gen h`wavenum'hhres = npeople

label variable h`wavenum'hhres "h`wavenum'hhres:w`wavenum' Number of people in Household"

***check

***Number of children***
*spouse person number
gen sperid = .
spouse perid, result(sperid) wave(`wavenum')

*spouse relationship to each person in household
gen dhr1= dhr
local sp
forvalues p =1/`maxhhn' {
	gen sdhr`p' = .
	spouse dhr`p', result(sdhr`p') wave(`wavenum')
	local sp `sp' sdhr`p'
}

*wave household number of living children 
gen r`wavenum'child =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'child = r`wavenum'child + 1 if inlist(chsex`i',1,2,-8,-9)
}
label variable r`wavenum'child "r`wavenum'child:w`wavenum' R Number of living children "


gen s`wavenum'child =.
spouse r`wavenum'child, result(s`wavenum'child) wave(`wavenum')
label variable s`wavenum'child "s`wavenum'child:w`wavenum' S Number of living children"


gen r`wavenum'son =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	replace r`wavenum'son = .d if chsex`i' == -8 & mi(r`wavenum'son)
    replace r`wavenum'son = .r if chsex`i' == -9 & mi(r`wavenum'son) 
	replace r`wavenum'son = r`wavenum'son + 1 if chsex`i' == 1
}

label variable r`wavenum'son "r`wavenum'son:w`wavenum' r Number of living son "


gen s`wavenum'son =.
spouse r`wavenum'son, result(s`wavenum'son) wave(`wavenum')
label variable s`wavenum'son "s`wavenum'son:w`wavenum' s Number of living son"

gen r`wavenum'dau =0 if inw`wavenum' == 1
forvalues i = 1/16 {
	 replace r`wavenum'dau = .d if chsex`i' == -8 & mi(r`wavenum'dau)
    replace r`wavenum'dau = .r if chsex`i' == -9 & mi(r`wavenum'dau) 
	replace r`wavenum'dau = r`wavenum'dau + 1 if chsex`i' == 2
}
label variable r`wavenum'dau "r`wavenum'dau:w`wavenum' r Number of living daughter"

*wave spouse number of living daughter
gen s`wavenum'dau =.
spouse r`wavenum'dau, result(s`wavenum'dau) wave(`wavenum')
label variable s`wavenum'dau "s`wavenum'dau:w`wavenum' s Number of living daughter"



*****Children Coreside******
gen cchild=0 if inw`wavenum' == 1
forvalues i =1/`maxhhn' { 
    replace cchild = cchild + 1 if inlist(dhr`i',3,4,5,6,7) | inlist(sdhr`i',3,4,5,6,7)
}

gen h`wavenum'coresd=.
replace h`wavenum'coresd=1 if inrange(cchild,1,99)
replace h`wavenum'coresd=0 if cchild==0
replace h`wavenum'coresd= .k if r`wavenum'child ==0
label variable h`wavenum'coresd "h`wavenum'coresd:w`wavenum' Any Child co-reside "
label value h`wavenum'coresd coreside
*
*gen s`wavenum'coresd =.
*spouse r`wavenum'coresd, result(s`wavenum'coresd) wave(`wavenum')
*label variable s`wavenum'coresd "s`wavenum'coresd:w`wavenum' s Any Child co-reside"
*label value s`wavenum'coresd coreside

***Whether Child Lives Nearby***
*wave 8 whether child lives nearby
gen h`wavenum'lvnear = .
missing_w`wavenum' digprxa, result(h`wavenum'lvnear)
replace h`wavenum'lvnear = 0 if inrange(digprxa,3,6)
replace h`wavenum'lvnear = 1 if inlist(digprxa,1,2,7) | (inrange(r8child,1,13) & (chouthh==2 | h8coresd==1))
replace h`wavenum'lvnear = .k if r`wavenum'child==0 
label variable h`wavenum'lvnear "h`wavenum'lvnear:w`wavenum' any child lives w/in 30 min"
label values h`wavenum'lvnear coreside

***Number of living siblings***
*wave respondent number of living siblings
gen r`wavenum'livsib =.
replace r`wavenum'livsib = .m if inw`wavenum' == 1 
replace r`wavenum'livsib = .d if nsibs == -8
replace r`wavenum'livsib = .r if nsibs == -9
replace r`wavenum'livsib = nsibs if inrange(nsibs,0,97)
label variable r`wavenum'livsib "r`wavenum'livsib:w`wavenum' r Number of living siblings"

*wave spouse number of living siblings
gen s`wavenum'livsib =.
spouse r`wavenum'livsib, result(s`wavenum'livsib) wave(`wavenum')
label variable s`wavenum'livsib "s`wavenum'livsib:w`wavenum' s Number of living siblings"

*check


***parental mortality: mother alive***
*wave  respondent mother alive status
gen r`wavenum'momliv =.
missing_w`wavenum' malive, result(r`wavenum'momliv)
replace r`wavenum'momliv = 0 if malive == 2 
replace r`wavenum'momliv = 1 if malive == 1 
label variable r`wavenum'momliv "r`wavenum'momliv:w`wavenum' r mother alive"
label values r`wavenum'momliv liv

*wave  spouse mother alive status
gen s`wavenum'momliv =.
spouse r`wavenum'momliv, result(s`wavenum'momliv) wave(`wavenum')
label variable s`wavenum'momliv "s`wavenum'momliv:w`wavenum' s mother alive"
label values s`wavenum'momliv liv

*check

***parental mortality: father alive***
*wave 1 respondent father alive status
gen r`wavenum'dadliv =.
missing_w`wavenum' falive, result(r`wavenum'dadliv)
replace r`wavenum'dadliv = 0 if falive == 2 
replace r`wavenum'dadliv = 1 if falive == 1
label variable r`wavenum'dadliv "r`wavenum'dadliv:w`wavenum' r father alive"
label values r`wavenum'dadliv liv

*wave  spouse father alive status
gen s`wavenum'dadliv =.
spouse r`wavenum'dadliv, result(s`wavenum'dadliv) wave(`wavenum')
label variable s`wavenum'dadliv "s`wavenum'dadliv:w`wavenum' s father alive"
label values s`wavenum'dadliv liv

*check

***parental mortality: mother's current age or age at death***
*wave  respondent mother's age
gen r`wavenum'momage =.
missing_w`wavenum' mothage magedied, result(r`wavenum'momage)
replace r`wavenum'momage = magedied if r`wavenum'momliv == 0 & inrange(magedied,16,120)
replace r`wavenum'momage = mothage if r`wavenum'momliv == 1 & inrange(mothage,0,120)
label variable r`wavenum'momage "r`wavenum'momage:w`wavenum' r mother age current/at death"

*wave spouse mother's age
gen s`wavenum'momage =.
spouse r`wavenum'momage, result(s`wavenum'momage) wave(`wavenum')
label variable s`wavenum'momage "s`wavenum'momage:w`wavenum' s mother age current/at death"

*check 

***parental mortality: father's current age or age at death***
*wave respondent father's age
gen r`wavenum'dadage =.
missing_w`wavenum' fathage fagedied, result(r`wavenum'dadage)
replace r`wavenum'dadage = fagedied if r`wavenum'dadliv == 0 & inrange(fagedied,16,120)
replace r`wavenum'dadage = fathage if r`wavenum'dadliv == 1 & inrange(fathage,0,120)
label variable r`wavenum'dadage "r`wavenum'dadage:w`wavenum' r father age current/at death"

*wave spouse father's age
gen s`wavenum'dadage =.
spouse r`wavenum'dadage, result(s`wavenum'dadage) wave(`wavenum')
label variable s`wavenum'dadage "s`wavenum'dadage:w`wavenum' s father age current/at death"

*check 

***Number of living parents***
*wave respondent number of living parents
gen r`wavenum'livpar=.
missing_H r`wavenum'momliv r`wavenum'dadliv, result(r`wavenum'livpar)
replace r`wavenum'livpar=0 if !missing(r`wavenum'momliv) & !missing(r`wavenum'dadliv)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'momliv==1 & !mi(r`wavenum'livpar)
replace r`wavenum'livpar = r`wavenum'livpar +1 if r`wavenum'dadliv==1 & !mi(r`wavenum'livpar)
label variable r`wavenum'livpar "r`wavenum'livpar:w`wavenum' r Number of living parents"

*wave spouse number of living parents
gen s`wavenum'livpar =.
spouse r`wavenum'livpar, result(s`wavenum'livpar) wave(`wavenum')
label variable s`wavenum'livpar "s`wavenum'livpar:w`wavenum' s Number of living parents"

*check


*******Family Contact**************
**Child Contact in person****
gen r`wavenum'kcntf=.
replace r`wavenum'kcntf= .m if r`wavenum'kcntf ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntf= .m if scchdh == -1
replace r`wavenum'kcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntf= .d if scchdh == -8
replace r`wavenum'kcntf= .r if scchdh == -9
replace r`wavenum'kcntf= .k if scchd == 2 & scchdh == -1
replace r`wavenum'kcntf= 0  if inlist(scchdh,3,4,5,6) 
replace r`wavenum'kcntf= 1  if inlist(scchdh,1,2) | h`wavenum'coresd == 1
label variable r`wavenum'kcntf "r`wavenum'kcntf:w`wavenum' r any weekly contact w/ children in person"
label value r`wavenum'kcntf contact

*wave spouse contact in person
gen s`wavenum'kcntf  =.
spouse r`wavenum'kcntf , result(s`wavenum'kcntf ) wave(`wavenum')
label variable s`wavenum'kcntf "s`wavenum'kcntf:w`wavenum' s any weekly contact w/ children in person"
label value s`wavenum'kcntf contact

**Child Contact in phone/email****
gen r`wavenum'kcntpm=.
replace r`wavenum'kcntpm= .m if r`wavenum'kcntpm ==. & inw`wavenum'sc == 1
replace r`wavenum'kcntpm= .m if scchdi == -1 | scchdj == -1 | scchdk == -1
replace r`wavenum'kcntpm= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'kcntpm= .d if scchdi == -8 | scchdj == -8 | scchdk == -8
replace r`wavenum'kcntpm= .r if scchdi == -9 | scchdj == -9 | scchdk == -9
replace r`wavenum'kcntpm= .k if scchd == 2 & (scchdi == -1 & scchdj == -1 & scchdk == -1)
replace r`wavenum'kcntpm= 0  if inlist(scchdi,3,4,5,6) | inlist(scchdj,3,4,5,6) | inlist(scchdk,3,4,5,6)
replace r`wavenum'kcntpm= 1  if inlist(scchdi,1,2) | inlist(scchdj,1,2) | inlist(scchdk,1,2)
label variable r`wavenum'kcntpm "r`wavenum'kcntpm:w`wavenum' r any weekly contact w/ children-phone/email"
label value r`wavenum'kcntpm contact

*wave spouse contact in phone/email
gen s`wavenum'kcntpm  =.
spouse r`wavenum'kcntpm , result(s`wavenum'kcntpm ) wave(`wavenum')
label variable s`wavenum'kcntpm "s`wavenum'kcntpm:w`wavenum' s any weekly contact w/ children-phone/email"
label value s`wavenum'kcntpm contact

**Any Child Contact in person/phone/email****
gen r`wavenum'kcnt=.
replace r`wavenum'kcnt= .m if r`wavenum'kcntf == .m | r`wavenum'kcntpm == .m
replace r`wavenum'kcnt= .h if cchild == r`wavenum'child & inrange(r`wavenum'child,1,99)
replace r`wavenum'kcnt= .c if r`wavenum'kcntf == .c | r`wavenum'kcntpm == .c
replace r`wavenum'kcnt= .d if r`wavenum'kcntf == .d | r`wavenum'kcntpm == .d
replace r`wavenum'kcnt= .r if r`wavenum'kcntf == .r | r`wavenum'kcntpm == .r
replace r`wavenum'kcnt= .k if r`wavenum'kcntf == .k | r`wavenum'kcntpm == .k
replace r`wavenum'kcnt= 0 if (r`wavenum'kcntf == 0 | r`wavenum'kcntpm == 0 ) 
replace r`wavenum'kcnt= 1 if (r`wavenum'kcntf == 1 | r`wavenum'kcntpm == 1 ) 
label variable r`wavenum'kcnt "r`wavenum'kcnt:w`wavenum' r any weekly contact w/ children in person/phone/email"
label value r`wavenum'kcnt contact

*wave spouse contact in person
gen s`wavenum'kcnt  =.
spouse r`wavenum'kcnt , result(s`wavenum'kcnt) wave(`wavenum')
label variable s`wavenum'kcnt "s`wavenum'kcnt:w`wavenum' s any weekly contact w/ children in person/phone/email"
label value s`wavenum'kcnt contact

*******Family Contact**************
**Relatives Contact in person****
gen r`wavenum'rcntf=.
replace r`wavenum'rcntf= .m if r`wavenum'rcntf == . & inw`wavenum'sc == 1 
replace r`wavenum'rcntf= .m if scfamh == -1
replace r`wavenum'rcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntf= .d if scfamh == -8
replace r`wavenum'rcntf= .r if scfamh == -9
replace r`wavenum'rcntf= .n if scfam == 2 & scfamh == -1
replace r`wavenum'rcntf= 0  if inlist(scfamh,3,4,5,6) 
replace r`wavenum'rcntf= 1  if inlist(scfamh,1,2) 
forvalues i = 1/`maxhhn' {
	replace r`wavenum'rcntf = 1 if inlist(dhr`i',8,9,10,11,12,13,14,15,16,17,18,19,20,21)
}
label variable r`wavenum'rcntf "r`wavenum'rcntf:w`wavenum' r any weekly contact w/ relative in person"
label value r`wavenum'rcntf contact

*wave spouse contact in person
gen s`wavenum'rcntf  =.
spouse r`wavenum'rcntf , result(s`wavenum'rcntf ) wave(`wavenum')
label variable s`wavenum'rcntf "s`wavenum'rcntf:w`wavenum' s any weekly contact w/ relative in person"
label value s`wavenum'rcntf contact

**relative Contact in phone/email****
gen r`wavenum'rcntpm=.
replace r`wavenum'rcntpm= .m if r`wavenum'rcntpm ==. & inw`wavenum'sc ==1
replace r`wavenum'rcntpm= .m if scfami == -1 & scfamj == -1 & scfamk == -1
replace r`wavenum'rcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'rcntpm= .d if scfami == -8 & scfamj == -8 & scfamk == -8
replace r`wavenum'rcntpm= .r if scfami == -9 & scfamj == -9 & scfamk == -9
replace r`wavenum'rcntpm= .n if scfam == 2 & (scfami == -1 | scfamj == -1 | scfamk == -1)
replace r`wavenum'rcntpm= 0  if inlist(scfami,3,4,5,6) | inlist(scfamj,3,4,5,6) | inlist(scfamk,3,4,5,6)
replace r`wavenum'rcntpm= 1  if inlist(scfami,1,2) | inlist(scfamj,1,2) | inlist(scfamk,1,2)
label variable r`wavenum'rcntpm "r`wavenum'rcntpm:w`wavenum' r any weekly contact w/ relative-phone/email"
label value r`wavenum'rcntpm contact

*wave spouse contact in phone/email****
gen s`wavenum'rcntpm  =.
spouse r`wavenum'rcntpm , result(s`wavenum'rcntpm ) wave(`wavenum')
label variable s`wavenum'rcntpm "s`wavenum'rcntpm:w`wavenum' s any weekly contact w/ relative-phone/email"
label value s`wavenum'rcntpm contact

**Any relative Contact in person/phone/email****
gen r`wavenum'rcnt=.
replace r`wavenum'rcnt= .m if r`wavenum'rcntf == .m | r`wavenum'rcntpm == .m
replace r`wavenum'rcnt= .c if r`wavenum'rcntf == .c | r`wavenum'rcntpm == .c
replace r`wavenum'rcnt= .d if r`wavenum'rcntf == .d | r`wavenum'rcntpm == .d
replace r`wavenum'rcnt= .r if r`wavenum'rcntf == .r | r`wavenum'rcntpm == .r
replace r`wavenum'rcnt= .n if r`wavenum'rcntf == .n | r`wavenum'rcntpm == .n
replace r`wavenum'rcnt= 0 if (r`wavenum'rcntf == 0 | r`wavenum'rcntpm == 0 ) 
replace r`wavenum'rcnt= 1 if (r`wavenum'rcntf == 1 | r`wavenum'rcntpm == 1 ) 
label variable r`wavenum'rcnt "r`wavenum'rcnt:w`wavenum' r any weekly contact w/ relative in person/phone/email"
label value r`wavenum'rcnt contact

*wave spouse contact in person/phone/email
gen s`wavenum'rcnt  =.
spouse r`wavenum'rcnt , result(s`wavenum'rcnt ) wave(`wavenum')
label variable s`wavenum'rcnt "s`wavenum'rcnt:w`wavenum' s any weekly contact w/ relative in person/phone/email"
label value s`wavenum'rcnt contact

*******Family Contact**************
**Friend Contact in person****
gen r`wavenum'fcntf=.
replace r`wavenum'fcntf= .m if r`wavenum'fcntf == . & inw`wavenum'sc ==1
replace r`wavenum'fcntf= .m if scfrdh == -1
replace r`wavenum'fcntf= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntf= .d if scfrdh == -8
replace r`wavenum'fcntf= .r if scfrdh == -9
replace r`wavenum'fcntf= .n if scfrd == 2 & scfrdh == -1
replace r`wavenum'fcntf= 0  if inlist(scfrdh,3,4,5,6)
replace r`wavenum'fcntf= 1  if inlist(scfrdh,1,2) 
label variable r`wavenum'fcntf "r`wavenum'fcntf:w`wavenum' r any weekly contact w/ friend in person"
label value r`wavenum'fcntf contact

*wave spouse contact in person
gen s`wavenum'fcntf  =.
spouse r`wavenum'fcntf , result(s`wavenum'fcntf ) wave(`wavenum')
label variable s`wavenum'fcntf "s`wavenum'fcntf:w`wavenum' s any weekly contact w/ friend in person"
label value s`wavenum'fcntf contact

**Friend Contact in phone/email****
gen r`wavenum'fcntpm=.
replace r`wavenum'fcntpm= .m if r`wavenum'fcntpm == . & inw`wavenum'sc ==1
replace r`wavenum'fcntpm= .m if scfrdi == -1 | scfrdj == -1 | scfrdk == -1
replace r`wavenum'fcntpm= .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'fcntpm= .d if scfrdi == -8 | scfrdj == -8 | scfrdk == -8
replace r`wavenum'fcntpm= .r if scfrdi == -9 | scfrdj == -9 | scfrdk == -9
replace r`wavenum'fcntpm= .n if scfrd == 2 & (scfrdi == -1 |scfrdj ==-1 | scfrdk == -1)
replace r`wavenum'fcntpm= 0  if inlist(scfrdi,3,4,5,6) | inlist(scfrdj,3,4,5,6) | inlist(scfrdk,3,4,5,6)
replace r`wavenum'fcntpm= 1  if inlist(scfrdi,1,2) | inlist(scfrdj,1,2) | inlist(scfrdk,1,2)
label variable r`wavenum'fcntpm "r`wavenum'fcntpm:w`wavenum' r any weekly contact w/ friend phone/email"
label value r`wavenum'fcntpm contact

*wave spouse contact in person
gen s`wavenum'fcntpm  =.
spouse r`wavenum'fcntpm , result(s`wavenum'fcntpm ) wave(`wavenum')
label variable s`wavenum'fcntpm "s`wavenum'fcntpm:w`wavenum' s any weekly contact w/ friend phone/email"
label value s`wavenum'fcntpm contact

**Any Friend Contact in person/phone/email****
gen r`wavenum'fcnt=.
replace r`wavenum'fcnt= .m if r`wavenum'fcntpm == .m | r`wavenum'fcntf == .m
replace r`wavenum'fcnt= .c if r`wavenum'fcntpm == .c | r`wavenum'fcntf == .c
replace r`wavenum'fcnt= .d if r`wavenum'fcntpm == .d | r`wavenum'fcntf == .d
replace r`wavenum'fcnt= .r if r`wavenum'fcntpm == .r | r`wavenum'fcntf == .r
replace r`wavenum'fcnt= .n if r`wavenum'fcntpm == .n | r`wavenum'fcntf == .n
replace r`wavenum'fcnt= 0 if (r`wavenum'fcntpm == 0 | r`wavenum'fcntf == 0 ) 
replace r`wavenum'fcnt= 1 if (r`wavenum'fcntpm == 1 | r`wavenum'fcntf == 1 ) 
label variable r`wavenum'fcnt "r`wavenum'fcnt:w`wavenum' r any weekly contact w/ friend in person/phone/email"
label value r`wavenum'fcnt contact

*wave spouse contact in person
gen s`wavenum'fcnt  =.
spouse r`wavenum'fcnt , result(s`wavenum'fcnt ) wave(`wavenum')
label variable s`wavenum'fcnt "s`wavenum'fcnt:w`wavenum' s any weekly contact w/ friend in person/phone/email"
label value s`wavenum'fcnt contact

*drop intermediate variables
drop cchild
drop dhr1
drop sperid `sp'  

***********Famliy Care/Informal Care****************
***Received care giving*****
gen r`wavenum'rcaany=.
missing_w`wavenum' catka catkb catkc catkd catke catkf catkg catkh catki catkj catkk catkl catkm, result(r`wavenum'rcaany)
replace r`wavenum'rcaany= .s if r`wavenum'dressa == 0  ///
											 | r`wavenum'walkra == 0 | r`wavenum'batha == 0  ///
											 | r`wavenum'eata == 0   | r`wavenum'beda == 0  ///
											 | r`wavenum'toilta == 0 | r`wavenum'mapa == 0   ///
											 | r`wavenum'phonea == 0 | r`wavenum'moneya == 0 ///
											 | r`wavenum'medsa == 0  | r`wavenum'shopa == 0  ///
											 | r`wavenum'mealsa == 0 | r`wavenum'housewka == 0  ///
											 | r`wavenum'walk100a == 0 | r`wavenum'sita == 0 ///
											 | r`wavenum'chaira == 0 | r`wavenum'climsa == 0  ///
											 | r`wavenum'clim1a == 0 | r`wavenum'stoopa == 0 ///
											 | r`wavenum'lifta == 0  | r`wavenum'dimea == 0  ///
											 | r`wavenum'armsa == 0 | r`wavenum'pusha == 0 | headlda == 0
replace r`wavenum'rcaany= 0 if catka==2 | catkb==2 | catkc==2 | catkd==2 | catke==2 | catkf==2 | catkg==2 | ///
															 catkh==2 | catki==2 | catkj==2 | catkk==2 | catkl==2 | catkm==2
replace r`wavenum'rcaany= 1 if catka==1 | catkb==1 | catkc==1 | catkd==1 | catke==1 | catkf==1 | catkg==1 | ///
															 catkh==1 | catki==1 | catkj==1 | catkk==1 | catkl==1 | catkm==1
label variable r`wavenum'rcaany "r`wavenum'rcaany:w`wavenum' R Received any informal care"
label value r`wavenum'rcaany contact

gen s`wavenum'rcaany =.
spouse r`wavenum'rcaany, result(s`wavenum'rcaany) wave(5)
label variable s`wavenum'rcaany "s`wavenum'rcaany:w`wavenum' S Received any informal care"
label value s`wavenum'rcaany contact

***Gave Care****
gen r`wavenum'gcaany= .
replace r`wavenum'gcaany= .m if r`wavenum'gcaany ==. & inw`wavenum' == 1
replace r`wavenum'gcaany= .m if wpactca == -1 | wpactlo == -1 
replace r`wavenum'gcaany= .d if wpactca == -8 | wpactlo == -8 
replace r`wavenum'gcaany= .r if wpactca == -9 | wpactlo == -9 
replace r`wavenum'gcaany= 0  if wpactca == 0 | wpactlo == 0
replace r`wavenum'gcaany= 1  if wpactca == 1 | wpactlo == 1
label variable r`wavenum'gcaany "r`wavenum'gcaany:w`wavenum' R Gave any informal care to anyone"
label value r`wavenum'gcaany contact

gen s`wavenum'gcaany =.
spouse r`wavenum'gcaany, result(s`wavenum'gcaany) wave(`wavenum')
label variable s`wavenum'gcaany "s`wavenum'gcaany:w`wavenum' S Gave any informal care to anyone"
label value s`wavenum'gcaany contact

***Number of grandchildren***
gen r`wavenum'grchild_e =. 
replace r`wavenum'grchild_e = .m if ngrandch == -2
replace r`wavenum'grchild_e = .d if ngrandch == -8
replace r`wavenum'grchild_e = .r if ngrandch == -9
replace r`wavenum'grchild_e = ngrandch if inrange(ngrandch,0,97)
label variable r`wavenum'grchild_e "r`wavenum'grchild_e:w`wavenum' R number of grandchildren/great-grandchildren"

gen s`wavenum'grchild_e =.
spouse r`wavenum'grchild_e, result(s`wavenum'grchild_e) wave(`wavenum')
label variable s`wavenum'grchild_e "s`wavenum'grchild_e:w`wavenum' S number of grandchildren/great-grandchildren"

****Gave care to grandchildren*****
gen r`wavenum'gkcare = .
replace r`wavenum'gkcare= .m if r`wavenum'gkcare ==. & inw`wavenum' == 1
replace r`wavenum'gkcare= .m if ercamgc == -1 
replace r`wavenum'gkcare= .i if askinst == 1
replace r`wavenum'gkcare= .p if askpx == 1
replace r`wavenum'gkcare= .d if ercamgc == -8 | ercaa ==-8
replace r`wavenum'gkcare= .r if ercamgc == -9 | ercaa ==-8 
replace r`wavenum'gkcare= .n if r`wavenum'grchild_e == 0
replace r`wavenum'gkcare= 0  if ercaa ==2 | ercamgc == 0
replace r`wavenum'gkcare= 1  if ercamgc == 1
label variable r`wavenum'gkcare "r`wavenum'gkcare:w`wavenum' R gave care to grandchildren"
label value r`wavenum'gkcare contact

gen s`wavenum'gkcare =.
spouse r`wavenum'gkcare, result(s`wavenum'gkcare) wave(`wavenum')
label variable s`wavenum'gkcare "s`wavenum'gkcare:w`wavenum' S gave care to grandchildren"
label value s`wavenum'gkcare contact


****Any Family Financial Transfer *****
***Give to anyone ***
gen h`wavenum'gany=.
replace h`wavenum'gany =.m if h`wavenum'gany == . & inw`wavenum'== 1 
replace h`wavenum'gany =.m if hotran == -1
replace h`wavenum'gany =.d if hotran == -8
replace h`wavenum'gany =.r if hotran == -9
replace h`wavenum'gany = 0 if hotran == 0
replace h`wavenum'gany = 1 if inrange(hotran,1,999999)
label variable h`wavenum'gany "h`wavenum'gany:w`wavenum' Any transfers given"
label value h`wavenum'gany tran

***To children & Grand children***
gen h`wavenum'tcany=.  
replace h`wavenum'tcany =.m if h`wavenum'tcany == . & inw`wavenum' == 1 
replace h`wavenum'tcany =.m if hotrangc == -1 | hotranoc ==-1
replace h`wavenum'tcany =.d if hotrangc == -8 | hotranoc ==-8 | hotran == -8
replace h`wavenum'tcany =.r if hotrangc == -9 | hotranoc ==-9 | hotran == -9
replace h`wavenum'tcany = 0 if hotrangc == 0 | hotranoc == 0 | hotran == 0
replace h`wavenum'tcany = 1 if hotrangc == 1 | hotranoc == 1
label variable h`wavenum'tcany "h`wavenum'tcany:w`wavenum' Any transfers given to children/ grandchildren"
label value h`wavenum'tcany tran

***To relative****
gen h`wavenum'toany=.
replace h`wavenum'toany =.m if h`wavenum'toany == . & inw`wavenum'== 1 
replace h`wavenum'toany =.m if hotran == -1
replace h`wavenum'toany =.d if hotranor == -8 | hotran == -8
replace h`wavenum'toany =.r if hotranor == -9 | hotran == -9
replace h`wavenum'toany = 0 if hotranor == 0 | hotran == 0
replace h`wavenum'toany = 1 if hotranor == 1
label variable h`wavenum'toany "h`wavenum'toany:w`wavenum' Any transfers given to other relatives"
label value h`wavenum'toany tran

***To friend***
gen h`wavenum'tfany=.
replace h`wavenum'tfany =.m if h`wavenum'tfany == . & inw`wavenum'== 1 
replace h`wavenum'tfany =.m if hotran == -1
replace h`wavenum'tfany =.d if hotrannr == -8 | hotran == -8
replace h`wavenum'tfany =.r if hotrannr == -9 | hotran == -9
replace h`wavenum'tfany = 0 if hotrannr == 0 | hotran == 0
replace h`wavenum'tfany = 1 if hotrannr == 1
label variable h`wavenum'tfany "h`wavenum'tfany:w`wavenum' Any transfers given to other non-relatives"
label value h`wavenum'tfany tran

**Participate in social work**
gen r`wavenum'socyr = .
replace r`wavenum'socyr = .m if inlist(scorgn,-1,-2) 
replace r`wavenum'socyr = .c if inw`wavenum' == 1 & inw`wavenum'sc == 0
replace r`wavenum'socyr = .r if scorgn == -9
replace r`wavenum'socyr = .i if scorgn == -3
replace r`wavenum'socyr = 0 if scorgn == 0 | scorg96 == 1
replace r`wavenum'socyr = 1 if inrange(scorgn,1,300)

label variable r`wavenum'socyr "r`wavenum'socyr:w`wavenum' R participate in social activities"
label value r`wavenum'socyr social

gen s`wavenum'socyr =.
spouse r`wavenum'socyr, result(s`wavenum'socyr) wave(`wavenum')
label variable s`wavenum'socyr "s`wavenum'socyr:w`wavenum' S participate in social activities"
label value s`wavenum'socyr social

****Parental SES****
***Main carer relationship to the respondent***
replace ramarela = .m if dikliv == -1  & mi(ramarela)
replace ramarela = .d if dikliv == -8 & mi(ramarela)
replace ramarela = .r if dikliv == -9 & mi(ramarela)
replace ramarela = .h if dikliv == 9 & mi(ramarela)
replace ramarela = dikliv if inrange(dikliv,1,8)  & mi(ramarela)
replace ramarela = 9 if inlist(dikliv,51,52,54,55,85)  & mi(ramarela)

*wave 8 spouse  occupation 
gen s`wavenum'marela =.
spouse ramarela, result(s`wavenum'marela) wave(`wavenum')
label variable s`wavenum'marela "s`wavenum'marela:w`wavenum' main carer relationship to the spouse"
label value s`wavenum'marela rel

***main carer occupation at 14****
replace ramaoccup = .m if difjob == -1 & mi(ramaoccup)
replace ramaoccup = .h if difjob == -1 & dikliv == 9  & mi(ramaoccup)
replace ramaoccup = .d if difjob == -8 & mi(ramaoccup)
replace ramaoccup = .r if difjob == -9 & mi(ramaoccup)
replace ramaoccup = .w if difjob == 13 & mi(ramaoccup)
replace ramaoccup = .n if difjob == 14 & mi(ramaoccup)
replace ramaoccup = .s if difjob == 15 & mi(ramaoccup)
replace ramaoccup = 1 if inrange(difjob,2,4) & mi(ramaoccup)
replace ramaoccup = 2 if inrange(difjob,5,9)  & mi(ramaoccup)
replace ramaoccup = 3 if difjob == 1 & mi(ramaoccup)
replace ramaoccup = 4 if inrange(difjob,10,12) & mi(ramaoccup)

*wave 8 spouse mother occupation 
gen s`wavenum'maoccup =.
spouse ramaoccup, result(s`wavenum'maoccup) wave(`wavenum')
label variable s`wavenum'maoccup "s`wavenum'maoccup:w`wavenum' s main carer occupation at age 14"
label value s`wavenum'maoccup occu

****parental education***
**age mother finished education
replace ramomeduage = .m if dimaedu == -1 & mi(ramomeduage)
replace ramomeduage = .d if dimaedu == -8 & mi(ramomeduage)
replace ramomeduage = .r if dimaedu == -9 & mi(ramomeduage)
replace ramomeduage = dimaedu if inrange(dimaedu,1,7)  & mi(ramomeduage)

**age father finished education
replace radadeduage = .m if dipaedu == -1 & mi(radadeduage)
replace radadeduage = .d if dipaedu == -8 & mi(radadeduage)
replace radadeduage = .r if dipaedu == -9 & mi(radadeduage)
replace radadeduage = dipaedu if inrange(dipaedu,1,7)  & mi(radadeduage)


***drop ELSA index file raw variables***
*drop `family_w8_index'

***drop ELSA wave 8 core file raw variables***
drop `family_w8_core'

***drop ELSA wave 8 derived  file raw variables***
drop `family_w8_derv'



*set wave number
local wvs 1 2 3 4 5 6 7 8
local prv_wvs 1 2 3 4 5 6 7
local wv 1 2 3 4 5 6 7  8




*mother's education level
foreach wv in `wvs' {
    gen s`wv'momeduage =.
    spouse ramomeduage, result(s`wv'momeduage) wave(`wv')
    label variable s`wv'momeduage "s`wv'momeduage:w`wv' s age mother finished education"
    label value s`wv'momeduage mage
}


*father's education level
foreach wv in `wvs' {
    gen s`wv'dadeduage =.
    spouse radadeduage, result(s`wv'dadeduage) wave(`wv')
    label variable s`wv'dadeduage "s`wv'dadeduage:w`wv' s age father finished education"
    label value s`wv'dadeduage mage
}



***Currently working for pay***
label define rwork ///
   0 "0.Not working for pay"  ///
   1 "1.Working for pay" ///
   .p ".p:proxy interview, not asked" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK" ///
	 .n ".n:not applicable"
   
***Whether self-employed***
label define slfemp ///
   0 "0.Not self-employed"  ///
   1 "1.Self-employed" ///
   .w ".w:not working" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
   
***labor force status***
label define lbrf_e ///
	.o ".o:Other" ///
   1 "1.employed" ///
   2 "2.self-employed" ///
   3 "3.unemployed" ///
   4 "4.partly ret" ///
   5 "5.retired" ///
   6 "6.disabled" ///
   7 "7.looking after home or family" ///
   .x ".x:Not in the labor force" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
  
***labor force**
label define force ///
   0 "0.no"  ///
   1 "1.yes" ///
  	.o ".o:Other" ///
   .x ".x:Not in the labor force" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .d ".d:DK" 
	 
***Wage imputation flag rate***
label define wgf_e ///
   1 "1.continuous value" ///
   2 "2.closed range bracket"       ///
   3 "3.open range bracket"     ///
   5 "5.no value/bracket"        ///
   6 "6.no income"           ///
   7 "7.dk"     ///
   9 "9.no fin resp" ///
  10 "10.institutional interview" ///
  11 "11.missing hours worked" ///
  .i ".i:institutional interview" ///
  .n ".n:not applicable"
  
***Current job requires lots of physical effort***
label define jphys_e ///
   1 "1.Sedentary occupation" ///
   2 "2.Standing occupation" ///
   3 "3.Physical work" ///
   4 "4.Heavy manual work" ///
   .w ".w:not working" ///
   .p ".p:proxy interview, not asked" ///
   .r ".r:Refuse" ///
	 .m ".m:Oth missing" ///
	 .d ".d:DK"
   
***Agree***
label define agree ///
	1 "1.strongly agree" ///
	2 "2.agree" ///
	3 "3.disagree" ///
	4 "4.strongly disagree" ///
	.w ".w:not working" ///
	.p ".p:proxy interview, not asked" ///
	.c ".c:no self-completion questionnaire" ///
	.i ".i:invalid answer"
   
**Occupation code for current job***
label define nssec13 ///
           1 "1.employers in large organisations" ///
           2 "2.higher managerial occupations" ///
           3 "3.higher professional occupations" ///
           4 "4.lower professional & higher technical" ///
           5 "5.lower managerial occupations" ///
           6 "6.higher supervisory occupations" ///
           7 "7.intermediate" ///
           8 "8.employers in small organisations" ///
           9 "9.own account workers" ///
          10 "10.lower supervisory occupations" ///
          11 "11.lower technical" ///
          12 "12.semi-routine" ///
          13 "13.routine" ///
          14 "14.never worked" ///
          15 "15.full-time students" ///
          16 "16.occupations not stated or inadequately described" ///
          17 "17.not classifiable for other reasons" ///
          .n ".n:never worked" ///
		 		  .w ".w:not working" ///
          .p ".p:proxy interview, not asked" ///
          .s ".s:self-employed, not asked" ///
          .e ".e:full-time student" ///
			    .r ".r:Refuse" ///
				  .m ".m:Oth missing" ///
				  .d ".d:DK" ///
				  .c ".c:job not classifiable"
				  
***Occupation code for current job in 8 categories***
label define nssec8 ///
           1 "1.higher managerial and professional occupations" ///
           2 "2.lower managerial and professional occupations" ///
           3 "3.intermediate occupations" ///
           4 "4.small employers and own account workers" ///
           5 "5.lower supervisory and technical occupations" ///
           6 "6.semi-routine occupations" ///
           7 "7.routine occupations" ///       
          .n ".n:never worked and long-term unemployed" ///
		 		  .w ".w:not working" ///
          .p ".p:proxy interview, not asked" ///
          .s ".s:self-employed, not asked" ///
          .e ".e:full-time student" ///
			    .r ".r:Refuse" ///
				  .m ".m:Oth missing" ///
				  .d ".d:DK" ///
				  .c ".c:job not classifiable" ///
				  .o ".o:other", replace

***Flag Years of tenure on current job***
label define fjcten ///
	0 "0.used year and month" ///
	1 "1.used year only, job began winter (start of year)" ///
	2 "2.used year only, job began spring" ///
	3 "3.used year only, job began summer" ///
	4 "4.used year only, job began autumn" ///
	5 "5.used year only, job began winter (end of year)" ///
    .m ".m:missing value for years of tenure" 

***Month job ended***
label define xmonth ///
      1 "1.January" ///
      2 "2.February" ///
      3 "3.March" ///
      4 "4.April" ///
      5 "5.May" ///
      6 "6.June" ///
      7 "7.July" ///
      8 "8.August" ///
      9 "9.September" ///
      10 "10.October" ///
      11 "11.November" ///
      12 "12.December" ///
      13 "13.Winter (start of year)" ///
      14 "14.Spring" ///
      15 "15.Summer" ///
      16 "16.Autumn" ///
      17 "17.Winter (end of year)" ///
      .j ".j:entering/training for job market" ///
      .f ".f:doing unpaid work for family business" ///
      .t ".t:temporarily out of work" ///
      .y ".y:ended on or before 1990, month not asked" ///
      .h ".h:missing hse value" ///
      .w ".w:currently working" ///
      .n ".n:never worked" ///
      .p ".p:proxy interview, not asked" ///
      .r ".r:Refuse" ///
	  .m ".m:Oth missing" ///
	  .d ".d:DK"
	  
label define soc ///
	1 "1.managers/senior officials" ///
	2 "2.managers/proprietors in ag/services" ///
	3 "3.science/tech pro" ///
	4 "4.health pro" ///
	5 "5.teaching/research pro" ///
	6 "6.business/public service pro" ///
	7 "7.science/tech assoc pro" ///
	8 "8.health/social welfare assoc pro" ///
	9 "9.protective service occ" ///
	10 "10.culture/media/sports occ" ///
	11 "11.business/public service assoc pro" ///
	12 "12.administrative occ" ///
	13 "13.secretarial & related occ" ///
	14 "14.skilled ag trades" ///
	15 "15.skilled metal/electrical trades" ///
	16 "16.skilled construction/building trades" ///
	17 "17.textiles/printing/other skilled trades" ///
	18 "18.caring personal service occ" ///
	19 "19.leisure/other personal service occ" ///
	20 "20.sales occ" ///
	21 "21.customer service occ" ///
	22 "22.process/plant/machine operatives" ///
	23 "23.transport/mobile machine drivers/operatives" ///
	24 "24.elementary trades/plant/storage related occ" ///
	25 "25.elementary administrative/service occ" ///
	.w ".w:not working" ///
	.n ".n:new to sample w7", replace
 
 
******************************************************************************************

	

***merge with wave 0 common data***
local employ_w0_comn activb stwork everjob employe
merge 1:1 idauniq using "$wave_0_comn", keepusing(`employ_w0_comn') nogen

***merge with wave 1 core data***
local employ_w1_core askpx1 aeverjob anactiv ///
                     wpact1 wpact2 wpact3 wpact4 wpact5 wpact6 wpaway wpactw wpmoj ///
                     wpesp wpes wpdes ///
                     wphjob wphwrk wphmsj ///
                     wpwlym ///
                     wpjact ///
                     iintdty iintdtm wpsjoby wpsjobm ///
                     wpever wplljm wplljy ///
                     wpstj axsc2000 exs2000
merge 1:1 idauniq using "$wave_1_core", keepusing(`employ_w1_core') nogen

***merge with wave 1 financial derived variables data***
local employ_w1_fina thp_r_i thp_r_t
merge 1:1 idauniq using "$wave_1_fina", keepusing(`employ_w1_fina') nogen


***Currently working for pay***
*wave 1 respondent working for pay
gen r1work=.
missing_w1 wpact1,result(r1work)
replace r1work = 0 if inrange(wpact1,1,6) | wpact1 == 96
replace r1work = 1 if inlist(wpact1,1,2) | ///
										  inlist(wpact2,1,2) | ///
										  inlist(wpact3,1,2) | ///
										  inlist(wpact4,1,2) | ///
										  inlist(wpact5,1,2) | ///
										  inlist(wpact6,1,2)						
label variable r1work "r1work:w1 R working for pay"
label values r1work rwork

*wave 1 spouse working for pay
gen s1work=.
spouse r1work, result(s1work) wave(1)
label variable s1work "s1work:w1 S working for pay"
label values s1work rwork

*wave 1 respondent works at second job
gen r1work2=.
missing_w1 wpact1 wpmoj, result(r1work2)
replace r1work2 = .p if askpx1 == 1
replace r1work2 = 0 if wpmoj == 2 | (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & askpx1 != 1)
replace r1work2 = 1 if wpmoj == 1 & (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2)) 
label variable r1work2 "r1work2:w1 R Works at 2nd job"
label values r1work2 rwork

*wave 1 spouse works at second job
gen s1work2=.
spouse r1work2, result(s1work2) wave(1)
label variable s1work2 "s1work2:w1 S Works at 2nd job"
label values s1work2 rwork

*check

***Whether self-employed***
*wave 0 respondent whether self-employed
gen r0slfemp = .
missing_w0 activb employe, result(r0slfemp)
replace r0slfemp = 0 if (employe == 1 & activb == 2) | inlist(activb,1,3,4,5,6,7,8,9,10,11)
replace r0slfemp = 1 if employe == 2 & activb == 2
label variable r0slfemp "r0slfemp:w0 r Whether Self-Employed"

*wave 1 respondent whether self-employed
gen r1slfemp = .
missing_w1 wpact1 wpstj wpes, result(r1slfemp)
replace r1slfemp = r0slfemp if r0slfemp !=. & wpstj == 1
replace r1slfemp = 0 if wpes == 1 | (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r1slfemp = 1 if wpes == 2
label variable r1slfemp "r1slfemp:w1 r Whether Self-Employed"

*wave 1 spouse whether self-employed
gen s1slfemp=.
spouse r1slfemp, result(s1slfemp) wave(1)
label variable s1slfemp "s1slfemp:w1 s Whether Self-Employed"

*value labels 
label values r0slfemp slfemp
label values r1slfemp slfemp
label values s1slfemp slfemp

*check

***labor force status***
*wave 1 respondent labor force status
gen r1lbrf_e=.
missing_w1 wpdes, result(r1lbrf_e)
replace r1lbrf_e = .o if inlist(wpdes, 85,86,95)
replace r1lbrf_e = 1 if wpdes == 2
replace r1lbrf_e = 2 if wpdes == 3
replace r1lbrf_e = 3 if wpdes == 4
replace r1lbrf_e = 4 if wpdes == 96
replace r1lbrf_e = 5 if wpdes == 1
replace r1lbrf_e = 6 if wpdes == 5
replace r1lbrf_e = 7 if wpdes == 6
label variable r1lbrf_e "r1lbrf_e:w1 R labor force status"
label values r1lbrf_e lbrf_e

*wave 1 spouse labor force status
gen s1lbrf_e=.
spouse r1lbrf_e, result(s1lbrf_e) wave(1)
label variable s1lbrf_e "s1lbrf_e:w1 S labor force status"
label values s1lbrf_e lbrf_e

*check

***labor force status***
*wave 1 respondent labor force status in the labor force
gen r1inlbrf=.
missing_w1 wpdes, result(r1inlbrf)
replace r1inlbrf = .o if inlist(wpdes, 85,86,95)
replace r1inlbrf = 0 if inrange(r1lbrf_e,5,7)
replace r1inlbrf = 1 if inrange(r1lbrf_e,1,4)

label variable r1inlbrf "r1inlbrf:W1 =1 if r is in the labor force"

*wave 1 spouse labor force status
gen s1inlbrf=.
spouse r1inlbrf, result(s1inlbrf) wave(1)
label variable s1inlbrf "s1inlbrf:W1 =1 if s is in the labor force"

*value labels
label values r1inlbrf force
label values s1inlbrf force


*check

**labor force status***
*wave 1 respondent labor force status unemployed
gen r1unemp=.
missing_w1 wpdes, result(r1unemp)
replace r1unemp = .o if inlist(wpdes, 85,86,95)
replace r1unemp = .x if inlist(r1lbrf_e,5,6,7)
replace r1unemp = 0 if inlist(r1lbrf_e,1,2,4)
replace r1unemp = 1 if r1lbrf_e == 3

label variable r1unemp "r1unemp:w1 =1 if r is unemployed"

*wave 1 spouse labor force status
gen s1unemp=.
spouse r1unemp, result(s1unemp) wave(1)
label variable s1unemp "s1unemp:w1 =1 if s is unemployed"

*value labels
label values r1unemp force
label values s1unemp force


*check

***Hours of work per week at current job***
*wave 1 respondent Hours of work per week at main job
gen r1jhours=.
missing_w1 wpact1 wpes wphjob wphwrk, result(r1jhours)
replace r1jhours = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r1jhours = .p if askpx1 == 1
replace r1jhours = wphjob if inrange(wphjob,1,168) & wpes == 1
replace r1jhours = wphwrk if inrange(wphwrk,1,168) & wpes == 2
label variable r1jhours "r1jhours:w1 r Hours worked/week main job"

*wave 1 spouse Hours of work per week at main job
gen s1jhours=.
spouse r1jhours, result(s1jhours) wave(1)
label variable s1jhours "s1jhours:w1 s Hours worked/week main job"

*wave 1 respondent hours worked per week at 2nd job
gen r1jhour2_e=.
missing_w1 wpact1 wpmoj wphmsj, result(r1jhour2_e)
replace r1jhour2_e = .w if wpmoj == 2 | (wpmoj==1 & (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)))
replace r1jhour2_e = .p if askpx1 == 1
replace r1jhour2_e = wphmsj/4.333 if inrange(wphmsj,1,700) & wpmoj == 1 & (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2))
replace r1jhour2_e = .i if wphmsj>700 & wpmoj == 1 & (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2))
label variable r1jhour2_e "r1jhour2_e:w1 r Hours worked/week 2nd job"

*wave 1 spouse hours worked per week at 2nd job
gen s1jhour2_e=.
spouse r1jhour2_e, result(s1jhour2_e) wave(1)
label variable s1jhour2_e "s1jhour2_e:w1 s Hours worked/week 2nd job"

*check

***Weeks worked per year***
*wave 1 respondent weeks worked per year
gen r1jweeks_e=.
missing_w1 wpact1 wpwlym, result(r1jweeks_e)
replace r1jweeks_e = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r1jweeks_e = .p if askpx1 == 1
replace r1jweeks_e = wpwlym if inrange(wpwlym,1,52)
label variable r1jweeks_e "r1jweeks_e:w1 r Weeks worked/year"

*wave 1 spouse weeks worked per year
gen s1jweeks_e=.
spouse r1jweeks_e, result(s1jweeks_e) wave(1)
label variable s1jweeks_e "s1jweeks_e:w1 s Weeks worked/year"

*check

***Wage rate***
*wave 1 respondent Imputed Wage Rate-Hrly
gen r1wgihr_e =.
missing_w1 wpact1 wpes wphjob wphwrk, result(r1wgihr_e)
replace r1wgihr_e = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r1wgihr_e = .p if askpx1 == 1
replace r1wgihr_e = 0 if thp_r_i == 0
replace r1wgihr_e = thp_r_i/wphjob if thp_r_i>0 & inrange(wphjob,1,168) & wpes == 1
replace r1wgihr_e = thp_r_i/wphwrk if thp_r_i>0 & inrange(wphwrk,1,168) & wpes == 2
label variable r1wgihr_e "r1wgihr_e:w1 r Imputed Wage Rate-Hrly"

*wave 1 spouse Iputed Wage Rate-Hrly
gen s1wgihr_e =.
spouse r1wgihr_e, result(s1wgihr_e) wave(1)
label variable s1wgihr_e "s1wgihr_e:w1 s Imputed Wage Rate-Hrly"

*wave 1 respondent Imputed Wage Rate-Wkly
gen r1wgiwk_e =.
replace r1wgiwk_e = thp_r_i
label variable r1wgiwk_e "r1wgiwk_e:w1 r Imputed Wage Rate-Wkly"

*wave 1 spouse Imputed Wage Rate-Wkly
gen s1wgiwk_e =.
spouse r1wgiwk_e, result(s1wgiwk_e) wave(1)
label variable s1wgiwk_e "s1wgiwk_e:w1 s Imputed Wage Rate-Wkly"

*wave 1 respondent Impute Flag Wage Rate-Hrly
gen r1wgfhr_e=.
combine_inc_flags1 thp_r_t, result(r1wgfhr_e)
replace r1wgfhr_e = 11 if mi(r1jhours) & mi(r1wgihr_e) & inw1 == 1
label variable r1wgfhr_e "r1wgfhr_e:w1 r Impute Flag Wage Rate-Hrly"

*wave 1 spouse Impute Flag Wage Rate-Hrly
gen s1wgfhr_e=.
spouse r1wgfhr_e, result(s1wgfhr_e) wave(1)
label variable s1wgfhr_e "s1wgfhr_e:w1 s Impute Flag Wage Rate-Hrly"

*wave 1 respondent Impute Flag Wage Rate-Wkly
gen r1wgfwk_e=.
combine_inc_flags1 thp_r_t, result(r1wgfwk_e)
label variable r1wgfwk_e "r1wgfwk_e:w1 r Impute Flag Wage Rate-Wkly"

*wave 1 spouse Impute Flag Wage Rate-Wkly
gen s1wgfwk_e=.
spouse r1wgfwk_e, result(s1wgfwk_e) wave(1)
label variable s1wgfwk_e "s1wgfwk_e:w1 s Impute Flag Wage Rate-Wkly"

*value labels
label values r1wgfhr_e wgf_e
label values s1wgfhr_e wgf_e
label values r1wgfwk_e wgf_e
label values s1wgfwk_e wgf_e 

*check


***Current job requires lots of physical effort***
*wave 1 respondent whether job requires physical effort
gen r1jphysa=.
missing_w1 wpact1 wpjact, result(r1jphysa)
replace r1jphysa = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r1jphysa = .p if askpx1 == 1
replace r1jphysa =1 if wpjact == 1
replace r1jphysa =2 if wpjact == 2
replace r1jphysa =3 if wpjact == 3
replace r1jphysa =4 if wpjact == 4
label variable r1jphysa "r1jphysa:w1 r Cur job req lots phys effort"

*wave 1 spouse whether job requires physical effort
gen s1jphysa=.
spouse r1jphysa, result(s1jphysa) wave(1)
label variable s1jphysa "s1jphysa:w1 s Cur job req lots phys effort"

*value labels
label values r1jphysa jphys_e
label values s1jphysa jphys_e

*check

***Years of tenure on current job***
*wave 1 respondent years of tenure on current job
gen r1jcten=.
missing_w1 wpact1 wpsjoby wpsjobm, result(r1jcten)
replace r1jcten = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96))
replace r1jcten = .p if askpx1 == 1
replace r1jcten = iintdty - wpsjoby ///
	if inrange(iintdty,2000,2010) & ///
	   inrange(wpsjoby,1900,2010) & inrange(wpsjobm,13,17)
replace r1jcten = round((ym(iintdty,iintdtm)-ym(wpsjoby,wpsjobm))/12,.1) ///
	if inrange(iintdty,2000,2010) & inrange(iintdtm,1,12) & ///
	   inrange(wpsjoby,1900,2010) & inrange(wpsjobm,1,12)
label variable r1jcten "r1jcten:w1 r Current Job Tenure"

*wave 1 spouse years of tenure on current job
gen s1jcten=.
spouse r1jcten, result(s1jcten) wave(1)
label variable s1jcten "s1jcten:w1 s Current Job Tenure"

*wave 1 flag respondent years of tenure on current job
gen r1fjcten = .
replace r1fjcten = .m if mi(r1jcten) & inw1==1
replace r1fjcten = 0 if !mi(r1jcten) & inrange(wpsjobm,1,12)
replace r1fjcten = 1 if !mi(r1jcten) & wpsjobm == 13
replace r1fjcten = 2 if !mi(r1jcten) & wpsjobm == 14
replace r1fjcten = 3 if !mi(r1jcten) & wpsjobm == 15
replace r1fjcten = 4 if !mi(r1jcten) & wpsjobm == 16
replace r1fjcten = 5 if !mi(r1jcten) & wpsjobm == 17
label variable r1fjcten "r1fjcten:w1 r Flag Current Job Tenure"
label values r1fjcten fjcten

*wave 1 flag spouse years of tenure on current job
gen s1fjcten=.
spouse r1fjcten, result(s1fjcten) wave(1)
label variable s1fjcten "s1fjcten:w1 s Flag Current Job Tenure"
label values s1fjcten fjcten

*check

***Month and year last job ended***
*wave 1 respondent month last job ended
gen r1jlastm=.
missing_w1 wpact1 wpever anactiv aeverjob wplljy wplljm, result(r1jlastm)
replace r1jlastm = .j if inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & inlist(anactiv,1,3,5) & !inlist(r1jlastm,.r,.d)
replace r1jlastm = .f if inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & anactiv==4 & !inlist(r1jlastm,.r,.d)
replace r1jlastm = .t if inlist(wpaway,1,3)
replace r1jlastm = .w if (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2)) 
replace r1jlastm = .n if inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & (wpever == 2 | aeverjob == 2)
replace r1jlastm = .p if askpx1 == 1
replace r1jlastm = .y if inrange(wplljy,1900,1990)
replace r1jlastm = wplljm if inrange(wplljm,1,17)
label variable r1jlastm "r1jlastm:w1 r Month Last Worked/not working"
label values r1jlastm xmonth

*wave 1 spouse month last job ended
gen s1jlastm=.
spouse r1jlastm, result(s1jlastm) wave(1)
label variable s1jlastm "s1jlastm:w1 s Month Last Worked/not working"
label values s1jlastm xmonth

*wave 1 respondent year last job ended
gen r1jlasty=.
missing_w1 wpact1 wpever anactiv aeverjob wplljy, result(r1jlasty)
replace r1jlasty = .j if inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & inlist(anactiv,1,3,5) & !inlist(r1jlasty,.r,.d)
replace r1jlasty = .f if inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & anactiv==4 & !inlist(r1jlasty,.r,.d)
replace r1jlasty = .t if inlist(wpaway,1,3)
replace r1jlasty = .w if (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2))
replace r1jlasty = .n if inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & (wpever == 2 | aeverjob == 2)
replace r1jlasty = .p if askpx1 == 1
replace r1jlasty = wplljy if inrange(wplljy,1900,2050)
label variable r1jlasty "r1jlasty:w1 r Year Last Worked/not working"

*wave 1 spouse year last job ended
gen s1jlasty=.
spouse r1jlasty, result(s1jlasty) wave(1)
label variable s1jlasty "s1jlasty:w1 s Year Last Worked/not working"

*check

*wave 1 respondent job category soc2000
gen r1soc2000 = .
missing_w1 axsc2000 exs2000 r1work, result(r1soc2000)
replace r1soc2000 = 1 if inrange(axsc2000,1111,1185)
replace r1soc2000 = 2 if inrange(axsc2000,1211,1239)
replace r1soc2000 = 3 if inrange(axsc2000,2111,2132)
replace r1soc2000 = 4 if inrange(axsc2000,2211,2216)
replace r1soc2000 = 5 if inrange(axsc2000,2311,2329)
replace r1soc2000 = 6 if inrange(axsc2000,2411,2452)
replace r1soc2000 = 7 if inrange(axsc2000,3111,3132)
replace r1soc2000 = 8 if inrange(axsc2000,3211,3232)
replace r1soc2000 = 9 if inrange(axsc2000,3311,3319)
replace r1soc2000 = 10 if inrange(axsc2000,3411,3449)
replace r1soc2000 = 11 if inrange(axsc2000,3511,3568)
replace r1soc2000 = 12 if inrange(axsc2000,4111,4150)
replace r1soc2000 = 13 if inrange(axsc2000,4211,4217)
replace r1soc2000 = 14 if inrange(axsc2000,5111,5119)
replace r1soc2000 = 15 if inrange(axsc2000,5211,5249)
replace r1soc2000 = 16 if inrange(axsc2000,5311,5323)
replace r1soc2000 = 17 if inrange(axsc2000,5411,5499)
replace r1soc2000 = 18 if inrange(axsc2000,6111,6139)
replace r1soc2000 = 19 if inrange(axsc2000,6211,6292)
replace r1soc2000 = 20 if inrange(axsc2000,7111,7129)
replace r1soc2000 = 21 if inrange(axsc2000,7211,7212)
replace r1soc2000 = 22 if inrange(axsc2000,8111,8149)
replace r1soc2000 = 23 if inrange(axsc2000,8211,8229)
replace r1soc2000 = 24 if inrange(axsc2000,9111,9149)
replace r1soc2000 = 25 if inrange(axsc2000,9211,9259)
replace r1soc2000 = 1 if inrange(exs2000,1111,1185)
replace r1soc2000 = 2 if inrange(exs2000,1211,1239)
replace r1soc2000 = 3 if inrange(exs2000,2111,2132)
replace r1soc2000 = 4 if inrange(exs2000,2211,2216)
replace r1soc2000 = 5 if inrange(exs2000,2311,2329)
replace r1soc2000 = 6 if inrange(exs2000,2411,2452)
replace r1soc2000 = 7 if inrange(exs2000,3111,3132)
replace r1soc2000 = 8 if inrange(exs2000,3211,3232)
replace r1soc2000 = 9 if inrange(exs2000,3311,3319)
replace r1soc2000 = 10 if inrange(exs2000,3411,3449)
replace r1soc2000 = 11 if inrange(exs2000,3511,3568)
replace r1soc2000 = 12 if inrange(exs2000,4111,4150)
replace r1soc2000 = 13 if inrange(exs2000,4211,4217)
replace r1soc2000 = 14 if inrange(exs2000,5111,5119)
replace r1soc2000 = 15 if inrange(exs2000,5211,5249)
replace r1soc2000 = 16 if inrange(exs2000,5311,5323)
replace r1soc2000 = 17 if inrange(exs2000,5411,5499)
replace r1soc2000 = 18 if inrange(exs2000,6111,6139)
replace r1soc2000 = 19 if inrange(exs2000,6211,6292)
replace r1soc2000 = 20 if inrange(exs2000,7111,7129)
replace r1soc2000 = 21 if inrange(exs2000,7211,7212)
replace r1soc2000 = 22 if inrange(exs2000,8111,8149)
replace r1soc2000 = 23 if inrange(exs2000,8211,8229)
replace r1soc2000 = 24 if inrange(exs2000,9111,9149)
replace r1soc2000 = 25 if inrange(exs2000,9211,9259)
replace r1soc2000 = .w if r1work==0
label variable r1soc2000 "r1soc2000:w1 r cur job occup/2000 soc coding"
label values r1soc2000 soc

*wave 1 spouse job category soc2000
gen s1soc2000 = .
spouse r1soc2000, result(s1soc2000) wave(1)
label variable s1soc2000 "s1soc2000:w1 s cur job occup/2000 soc coding"
label values s1soc2000 soc



***drop ELSA wave 0 common file raw variables***
drop `employ_w0_comn'

***drop ELSA wave 1 core file raw variables***
drop `employ_w1_core'

***drop ELSA wave 1 financial derived file raw variables***
drop `employ_w1_fina'

******************************************************************************************


***merge with wave 2 core data***
local employ_w2_core askpx1 indager ///
                     wpact1 wpact2 wpact3 wpact4 wpact5 wpact6 wpaway wpactw wpmoj ///
                     wpes wpdes ///
                     wphjob wphwrk wphmsj ///
                     wpwlym ///
                     wpjact ///
                     iintdty iintdtm wpsjoby wpsjobm ///
                     wpjob wpjobl wpever wplljm wplljy ///
                     wpemp wpstj scworkg outscw2 w2nssec8 w2soc2000 
merge 1:1 idauniq using "$wave_2_core", keepusing(`employ_w2_core') nogen

***merge with wave 2 derived variables data***
local employ_w2_derv w2nssec w2nssecmis
merge 1:1 idauniq using "$wave_2_derv", keepusing(`employ_w2_derv') nogen

***merge with wave 2 financial derived variables data***
local employ_w2_fina thp_r_i thp_r_t
merge 1:1 idauniq using "$wave_2_fina", keepusing(`employ_w2_fina') nogen


***Currently working for pay***
*wave 2 respondent working for pay
gen r2work=.
missing_w2 wpact1,result(r2work)
replace r2work = 0 if inrange(wpact1,1,6) | wpact1 == 96
replace r2work = 1 if inlist(wpact1,1,2) | ///
										  inlist(wpact2,1,2) | ///
										  inlist(wpact3,1,2) | ///
										  inlist(wpact4,1,2) | ///
										  inlist(wpact5,1,2) | ///
										  inlist(wpact6,1,2)
label variable r2work "r2work:w2 R working for pay"

*wave 2 spouse working for pay
gen s2work=.
spouse r2work, result(s2work) wave(2)
label variable s2work "s2work:w2 S working for pay"

*wave 2 respondent works at second job
gen r2work2=.
missing_w2 wpact1 wpmoj, result(r2work2)
replace r2work2 = .p if askpx1 == 1
replace r2work2 = 0 if wpmoj == 2 | (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & askpx1 != 1)
replace r2work2 = 1 if wpmoj == 1 & (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2)) 
label variable r2work2 "r2work2:w2 R Works at 2nd job"

*wave 2 spouse works at second job
gen s2work2=.
spouse r2work2, result(s2work2) wave(2)
label variable s2work2 "s2work2:w2 S Works at 2nd job"

*value labels
label values r2work rwork
label values s2work rwork
label values r2work2 rwork
label values s2work2 rwork

*check

***Whether self-employed***
*wave 2 respondent whether self-employed
gen r2slfemp=.
missing_w2 wpact1 wpstj wpes, result(r2slfemp)
replace r2slfemp = r0slfemp if r0slfemp !=. & wpstj == 1
replace r2slfemp = r1slfemp if r1slfemp !=. & wpstj == 1
replace r2slfemp = 0 if wpes == 1 | (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r2slfemp = 1 if wpes == 2
label variable r2slfemp "r2slfemp:w2 r Whether Self-Employed"

*wave 2 spouse whether self-employed
gen s2slfemp=.
spouse r2slfemp, result(s2slfemp) wave(2)
label variable s2slfemp "s2slfemp:w2 s Whether Self-Employed"

*value labels
label values r2slfemp slfemp
label values s2slfemp slfemp

*check

***labor force status***
*wave 2 respondent labor force status
gen r2lbrf_e=.
missing_w2 wpdes, result(r2lbrf_e)
replace r2lbrf_e = .o if inlist(wpdes,85,86,95)
replace r2lbrf_e = 1 if wpdes == 2
replace r2lbrf_e = 2 if wpdes == 3
replace r2lbrf_e = 3 if wpdes == 4
replace r2lbrf_e = 4 if wpdes == 96
replace r2lbrf_e = 5 if wpdes == 1
replace r2lbrf_e = 6 if wpdes == 5
replace r2lbrf_e = 7 if wpdes == 6
label variable r2lbrf_e "r2lbrf_e:w2 R labor force status"

*wave 2 spouse labor force status
gen s2lbrf_e=.
spouse r2lbrf_e, result(s2lbrf_e) wave(2)
label variable s2lbrf_e "s2lbrf_e:w2 S labor force status"

*value labels 
label values r2lbrf_e lbrf_e
label values s2lbrf_e lbrf_e

*check

***labor force status***
*wave 2 respondent labor force status in the labor force
gen r2inlbrf=.
missing_w2 wpdes, result(r2inlbrf)
replace r2inlbrf = .o if inlist(wpdes,85,86,95)
replace r2inlbrf = 0 if inrange(r2lbrf_e,5,7)
replace r2inlbrf = 1 if inrange(r2lbrf_e,1,4)

label variable r2inlbrf "r2inlbrf:W2 =1 if r is in the labor force"

*wave 2 spouse labor force status
gen s2inlbrf=.
spouse r2inlbrf, result(s2inlbrf) wave(2)
label variable s2inlbrf "s2inlbrf:W2 =1 if s is in the labor force"

*value labels
label values r2inlbrf force
label values s2inlbrf force


*check

**labor force status***
*wave 2 respondent labor force status unemployed
gen r2unemp=.
missing_w2 wpdes, result(r2unemp)
replace r2unemp = .o if inlist(wpdes,85,86,95)
replace r2unemp = .x if inlist(r2lbrf_e,5,6,7)
replace r2unemp = 0  if inlist(r2lbrf_e,1,2,4)
replace r2unemp = 1  if r2lbrf_e == 3

label variable r2unemp "r2unemp:w2 =1 if r is unemployed"

*wave 2 spouse labor force status
gen s2unemp=.
spouse r2unemp, result(s2unemp) wave(2)
label variable s2unemp "s2unemp:w2 =1 if s is unemployed"

*value labels
label values r2unemp force
label values s2unemp force


*check

***Hours of work per week at current job***
*wave 2 respondent hours of work per week at main job
gen r2jhours=.
missing_w2 wpact1 wpes wphjob wphwrk, result(r2jhours)
replace r2jhours = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r2jhours = .p if askpx1 == 1
replace r2jhours = wphjob if inrange(wphjob,1,168) & wpes == 1
replace r2jhours = wphwrk if inrange(wphwrk,1,168) & wpes == 2
label variable r2jhours "r2jhours:w2 r Hours worked/week main job"

*wave 2 spouse Hours of work per week at main job
gen s2jhours=.
spouse r2jhours, result(s2jhours) wave(2)
label variable s2jhours "s2jhours:w2 s Hours worked/week main job"

*wave 2 respondent hours worked per week at 2nd job
gen r2jhour2_e=.
missing_w2 wpact1 wpmoj wphmsj, result(r2jhour2_e)
replace r2jhour2_e = .w if wpmoj == 2 | (wpmoj == 1 & inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96))
replace r2jhour2_e = .p if askpx1 == 1
replace r2jhour2_e = wphmsj/4.333 if inrange(wphmsj,1,700) & wpmoj == 1 & (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2))
replace r2jhour2_e = .i if wphmsj>700 & wpmoj == 1 & (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2))
label variable r2jhour2_e "r2jhour2_e:w2 r Hours worked/week 2nd job"

*wave 2 spouse hours worked per week at 2nd job
gen s2jhour2_e=.
spouse r2jhour2_e, result(s2jhour2_e) wave(2)
label variable s2jhour2_e "s2jhour2_e:w2 s Hours worked/week 2nd job"

*check

***Weeks worked per year***
*wave 2 respondent weeks worked per year
gen r2jweeks_e=.
missing_w2 wpact1 wpwlym, result(r2jweeks_e)
replace r2jweeks_e = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r2jweeks_e = .p if askpx1 == 1
replace r2jweeks_e = wpwlym if inrange(wpwlym,1,52)
label variable r2jweeks_e "r2jweeks_e:w2 r Weeks worked/year"

*wave 2 spouse weeks worked per year
gen s2jweeks_e=.
spouse r2jweeks_e, result(s2jweeks_e) wave(2)
label variable s2jweeks_e "s2jweeks_e:w2 s Weeks worked/year"

*check

***Wage rate***
*wave 2 respondent Imputed Wage Rate-Hrly
gen r2wgihr_e =.
missing_w2 wpact1 wpes wphjob wphwrk, result(r2wgihr_e)
replace r2wgihr_e = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r2wgihr_e = .p if askpx1 == 1
replace r2wgihr_e = 0 if thp_r_i==0
replace r2wgihr_e = thp_r_i/wphjob if thp_r_i>0 & inrange(wphjob,1,168) & wpes == 1
replace r2wgihr_e = thp_r_i/wphwrk if thp_r_i>0 & inrange(wphwrk,1,168) & wpes == 2
label variable r2wgihr_e "r2wgihr_e:w2 r Imputed Wage Rate-Hrly"

*wave 2 spouse Iputed Wage Rate-Hrly
gen s2wgihr_e =.
spouse r2wgihr_e, result(s2wgihr_e) wave(2)
label variable s2wgihr_e "s2wgihr_e:w2 s Imputed Wage Rate-Hrly"

*wave 2 respondent Imputed Wage Rate-Wkly
gen r2wgiwk_e =.
replace r2wgiwk_e = thp_r_i
label variable r2wgiwk_e "r2wgiwk_e:w2 r Imputed Wage Rate-Wkly"

*wave 2 spouse Imputed Wage Rate-Wkly
gen s2wgiwk_e =.
spouse r2wgiwk_e, result(s2wgiwk_e) wave(2)
label variable s2wgiwk_e "s2wgiwk_e:w2 s Imputed Wage Rate-Wkly"

*wave 2 respondent Impute Flag Wage Rate-Hrly
gen r2wgfhr_e=.
combine_inc_flags1 thp_r_t, result(r2wgfhr_e)
replace r2wgfhr_e = 11 if mi(r2jhours) & mi(r2wgihr_e) & inw2 == 1
label variable r2wgfhr_e "r2wgfhr_e:w2 r Impute Flag Wage Rate-Hrly"

*wave 2 spouse Impute Flag Wage Rate-Hrly
gen s2wgfhr_e=.
spouse r2wgfhr_e, result(s2wgfhr_e) wave(2)
label variable s2wgfhr_e "s2wgfhr_e:w2 s Impute Flag Wage Rate-Hrly"

*wave 2 respondent Impute Flag Wage Rate-Wkly
gen r2wgfwk_e=.
combine_inc_flags1 thp_r_t, result(r2wgfwk_e)
label variable r2wgfwk_e "r2wgfwk_e:w2 r Impute Flag Wage Rate-Wkly"

*wave 2 spouse Impute Flag Wage Rate-Wkly
gen s2wgfwk_e=.
spouse r2wgfwk_e, result(s2wgfwk_e) wave(2)
label variable s2wgfwk_e "s2wgfwk_e:w2 s Impute Flag Wage Rate-Wkly"

*value labels
label values r2wgfhr_e wgf_e
label values s2wgfhr_e wgf_e
label values r2wgfwk_e wgf_e
label values s2wgfwk_e wgf_e

*check


***Current job requires lots of physical effort***
*wave 2 respondent whether job requires physical effort
gen r2jphysa=.
missing_w2 wpact1 wpjact, result(r2jphysa)
replace r2jphysa = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r2jphysa = .p if askpx1 == 1
replace r2jphysa =1 if wpjact == 1
replace r2jphysa =2 if wpjact == 2
replace r2jphysa =3 if wpjact == 3
replace r2jphysa =4 if wpjact == 4
label variable r2jphysa "r2jphysa:w2 r Cur job req lots phys effort"

*wave 2 spouse whether job requires physical effort
gen s2jphysa=.
spouse r2jphysa, result(s2jphysa) wave(2)
label variable s2jphysa "s2jphysa:w2 s Cur job req lots phys effort"

*value labels
label values r2jphysa jphys_e
label values s2jphysa jphys_e

*check

***Current job - under pressure due to heavy workload***
*wave 2 respondent under pressure due to heavy workload
gen r2jpress=.
missing_w2 wpact1 scworkg, result(r2jpress)
replace r2jpress = .c if inrange(outscw2,2,3)
replace r2jpress = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96)) 
replace r2jpress = .p if askpx1 == 1
replace r2jpress =1 if scworkg == 1
replace r2jpress =2 if scworkg == 2
replace r2jpress =3 if scworkg == 3
replace r2jpress =4 if scworkg == 4
label variable r2jpress "r2jpress:w2 r under pressure due to workload"

*wave 2 spouse under pressure due to heavy workload
gen s2jpress=.
spouse r2jpress, result(s2jpress) wave(2)
label variable s2jpress "s2jpress:w2 s under pressure due to workload"

*value labels
label values r2jpress agree
label values s2jpress agree

***Years of tenure on current job***
*wave 2 respondent years of tenure on current job
gen r2jcten=.
missing_w2 wpact1 wpsjoby wpsjobm, result(r2jcten)
replace r2jcten = r1jcten if mi(r1jcten) & r1jcten != . & ((r1slfemp == 1 & inw2 == 1) | wpemp == 1)
replace r2jcten = .w if (inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96))
replace r2jcten = .p if askpx1 == 1 
replace r2jcten = round((ym(iintdty,iintdtm)-ym(r1iwindy,r1iwindm))/12,.1) + r1jcten ///
	if inrange(iintdty,2000,2010) & inrange(iintdtm,1,12) & ///
	   inrange(r1iwindy,2000,2010) & inrange(r1iwindm,1,12) & ///
	   (r1slfemp == 1 | wpemp == 1) & !mi(r1jcten)
replace r2jcten = iintdty - wpsjoby ///
	if inrange(iintdty,2000,2010) & ///
	   inrange(wpsjoby,1900,2010) & inrange(wpsjobm,13,17)
replace r2jcten = round((ym(iintdty,iintdtm)-ym(wpsjoby,wpsjobm))/12,.1) ///
	if inrange(iintdty,2000,2010) & inrange(iintdtm,1,12) & ///
	   inrange(wpsjoby,1900,2010) & inrange(wpsjobm,1,12)
label variable r2jcten "r2jcten:w2 r Current Job Tenure"

*wave 2 spouse years of tenure on current job
gen s2jcten=.
spouse r2jcten, result(s2jcten) wave(2)
label variable s2jcten "s2jcten:w2 s Current Job Tenure"

*wave 2 flag respondent years of tenure on current job
gen r2fjcten = . 
replace r2fjcten = .m if mi(r2jcten) & inw2==1
replace r2fjcten = r1fjcten if ((r1slfemp == 1 & inw2 == 1) | wpemp == 1)
replace r2fjcten = 0 if !mi(r2jcten) & inrange(wpsjobm,1,12)
replace r2fjcten = 1 if !mi(r2jcten) & wpsjobm == 13
replace r2fjcten = 2 if !mi(r2jcten) & wpsjobm == 14
replace r2fjcten = 3 if !mi(r2jcten) & wpsjobm == 15
replace r2fjcten = 4 if !mi(r2jcten) & wpsjobm == 16
replace r2fjcten = 5 if !mi(r2jcten) & wpsjobm == 17
label variable r2fjcten "r2fjcten:w2 r Flag Current Job Tenure"
label values r2fjcten fjcten

*wave 2 flag spouse years of tenure on current job
gen s2fjcten=.
spouse r2fjcten, result(s2fjcten) wave(2)
label variable s2fjcten "s2fjcten:w2 s Flag Current Job Tenure"
label values s2fjcten fjcten

*check

***Occupation code for current job***
*wave 2 respondent occupation code
gen r2nssec13=.
missing_w2 w2nssec, result(r2nssec13)
replace r2nssec13 = .m if inlist(w2nssecmis,1,4,5)
replace r2nssec13 = .w if r2work == 0 | w2nssec == 14
replace r2nssec13 = .p if inlist(w2nssecmis,2,3,6)
replace r2nssec13 = .e if w2nssec == 15
replace r2nssec13 = .c if inlist(w2nssec,16,17)
replace r2nssec13 = int(w2nssec) if inrange(w2nssec,1,13.999) & r2work == 1
label variable r2nssec13 "r2nssec13:w2 r current job classification, 13 cat"

*wave 2 spouse occupation code
gen s2nssec13=.
spouse r2nssec13, result(s2nssec13) wave(2)
label variable s2nssec13 "s2nssec13:w2 s current job classification, 13 cat"

*value labels
label values r2nssec13 nssec13
label values s2nssec13 nssec13

*check

***Occupation code for current job with 8 categories***
*wave 2 respondent occupation code with 8 cats
gen r2nssec8=.
missing_w2 w2nssec r2work, result(r2nssec8)
replace r2nssec8 = .m if inlist(w2nssecmis,1,4,5)
replace r2nssec8 = .w if r2work == 0 | w2nssec8 == 8
replace r2nssec8 = .p if inlist(w2nssecmis,2,3,6)
replace r2nssec8 = .o if w2nssec8 == 99
replace r2nssec8 = w2nssec8 if inrange(w2nssec8,1,7) & r2work == 1
label variable r2nssec8 "r2nssec8:w2 r current job classification, 8 cat"

*wave 2 spouse occupation code
gen s2nssec8=.
spouse r2nssec8, result(s2nssec8) wave(2)
label variable s2nssec8 "s2nssec8:w2 s current job classification, 8 cat"

*value labels
label values r2nssec8 nssec8
label values s2nssec8 nssec8

*check

***Month and year last job ended***
*wave 2 respondent month last job ended
gen r2jlastm=.
missing_w2 wpact1 wpever wpjob wpjobl wplljy wplljm, result(r2jlastm)
replace r2jlastm = .t if inlist(wpaway,1,3)
replace r2jlastm = .w if (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2))
replace r2jlastm = .n if inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & wpever == 2
replace r2jlastm = r1jlastm if ((inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & indager >= 70) | ///
                                wpjob == 2) /// 
                               & r1jlastm != .
replace r2jlastm = .p if askpx1 == 1
replace r2jlastm = .y if inrange(wplljy,1900,1990)
replace r2jlastm = wplljm if inrange(wplljm,1,17)
label variable r2jlastm "r2jlastm:w2 r Month Last Worked/not working"
label values r2jlastm xmonth

*wave 2 spouse month last job ended
gen s2jlastm=.
spouse r2jlastm, result(s2jlastm) wave(2)
label variable s2jlastm "s2jlastm:w2 s Month Last Worked/not working"
label values s2jlastm xmonth

*wave 2 respondent year last job ended
gen r2jlasty=.
missing_w2 wpact1 wpever wpjob wpjobl wplljy, result(r2jlasty)
replace r2jlasty = .t if inlist(wpaway,1,3)
replace r2jlasty = .w if (inlist(wpact1,1,2) | inlist(wpact2,1,2) | inlist(wpact3,1,2) | inlist(wpact4,1,2) | inlist(wpact5,1,2) | inlist(wpact6,1,2))
replace r2jlasty = .n if inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & wpever == 2
replace r2jlasty = r1jlasty if ((inlist(wpact1,3,4,5,6,96) & inlist(wpact2,-1,3,4,5,6,96) & inlist(wpact3,-1,3,4,5,6,96) & inlist(wpact4,-1,3,4,5,6,96) & inlist(wpact5,-1,3,4,5,6,96) & inlist(wpact6,-1,3,4,5,6,96) & indager >= 70) | ///
                                wpjob == 2) ///
                               & r1jlasty != .
replace r2jlasty = .p if askpx1 == 1
replace r2jlasty = wplljy if inrange(wplljy,1900,2050)
label variable r2jlasty "r2jlasty:w2 r Year Last Worked/not working"

*wave 2 spouse year last job ended
gen s2jlasty=.
spouse r2jlasty, result(s2jlasty) wave(2)
label variable s2jlasty "s2jlasty:w2 s Year Last Worked/not working"

*check

*wave 2 respondent job category soc2000
gen r2soc2000 = .
missing_w2 w2soc2000 r2work, result(r2soc2000)
replace r2soc2000 = 1 if w2soc2000==11
replace r2soc2000 = 2 if w2soc2000==12
replace r2soc2000 = 3 if w2soc2000==21
replace r2soc2000 = 4 if w2soc2000==22
replace r2soc2000 = 5 if w2soc2000==23
replace r2soc2000 = 6 if w2soc2000==24
replace r2soc2000 = 7 if w2soc2000==31
replace r2soc2000 = 8 if w2soc2000==32
replace r2soc2000 = 9 if w2soc2000==33
replace r2soc2000 = 10 if w2soc2000==34
replace r2soc2000 = 11 if w2soc2000==35
replace r2soc2000 = 12 if w2soc2000==41
replace r2soc2000 = 13 if w2soc2000==42
replace r2soc2000 = 14 if w2soc2000==51
replace r2soc2000 = 15 if w2soc2000==52
replace r2soc2000 = 16 if w2soc2000==53
replace r2soc2000 = 17 if w2soc2000==54
replace r2soc2000 = 18 if w2soc2000==61
replace r2soc2000 = 19 if w2soc2000==62
replace r2soc2000 = 20 if w2soc2000==71
replace r2soc2000 = 21 if w2soc2000==72
replace r2soc2000 = 22 if w2soc2000==81
replace r2soc2000 = 23 if w2soc2000==82
replace r2soc2000 = 24 if w2soc2000==91
replace r2soc2000 = 25 if w2soc2000==92
replace r2soc2000 = .w if r2work==0
label variable r2soc2000 "r2soc2000:w2 r cur job occup/2000 soc coding"
label values r2soc2000 soc

*wave 2 spouse job category soc2000
gen s2soc2000 = .
spouse r2soc2000, result(s2soc2000) wave(2)
label variable s2soc2000 "s2soc2000:w2 s cur job occup/2000 soc coding"
label values s2soc2000 soc


***drop ELSA wave 2 core file raw variables***
drop `employ_w2_core'

***drop ELSA wave 2 derived file raw variables***
drop `employ_w2_derv'

***drop ELSA wave 2 financial derived file raw variables***
drop `employ_w2_fina'

******************************************************************************************

*set wave number
local wavenum = 3
local pre_wavenum = `wavenum' - 1

***merge with wave 3 core data***
local employ_w3_core askpx indager ///
                     wpactvw wpactca wpactlo wpacted wpact96 wpactw wpactpw wpaway wpactse wpmoj ///
                     wpes wpdes ///
                     wphjob wphwrk wphmsj ///
                     wpwlym ///
                     wpjact ///
                     iintdaty iintdatm wpsjoby wpsjobm ///
                     wpjob wpjobl wpever wplljm wplljy ///
                     wpemp wpstj ///
                     w3nssec w3nssecmis askinst scworkg outscw3 w3nssec8 w3soc2000 
merge 1:1 idauniq using "$wave_3_core", keepusing(`employ_w3_core') nogen

***merge with wave 3 financial derived variables data***
local employ_w3_fina thp_r_i thp_r_t
merge 1:1 idauniq using "$wave_3_fina", keepusing(`employ_w3_fina') nogen


***Currently working for pay***
*wave 3 respondent working for pay
gen r`wavenum'work=.
missing_w`wavenum' wpactpw,result(r`wavenum'work)
replace r`wavenum'work = 0 if inlist(wpactvw,0,1) | ///
                      inlist(wpactca,0,1) | ///
                      inlist(wpactlo,0,1) | ///
                      inlist(wpacted,0,1) | ///
                      inlist(wpact96,0,1) 
replace r`wavenum'work = 1 if wpactpw == 1 | wpactse == 1
label variable r`wavenum'work "r`wavenum'work:w`wavenum' R working for pay"

*wave 3 spouse working for pay
gen s`wavenum'work=.
spouse r`wavenum'work, result(s`wavenum'work) wave(`wavenum')
label variable s`wavenum'work "s`wavenum'work:w`wavenum' S working for pay"

*wave 3 respondent works at second job
gen r`wavenum'work2=.
missing_w`wavenum' wpactpw wpmoj, result(r`wavenum'work2)
replace r`wavenum'work2 = .p if askpx == 1
replace r`wavenum'work2=0 if wpmoj == 2 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'work2=1 if wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
label variable r`wavenum'work2 "r`wavenum'work2:w`wavenum' R Works at 2nd job"

*wave 3 spouse works at second job
gen s`wavenum'work2=.
spouse r`wavenum'work2, result(s`wavenum'work2) wave(`wavenum')
label variable s`wavenum'work2 "s`wavenum'work2:w`wavenum' S Works at 2nd job"

*value labels
label values r`wavenum'work rwork
label values s`wavenum'work rwork
label values r`wavenum'work2 rwork
label values s`wavenum'work2 rwork

*check

***Whether self-employed***
*generate preload
gen preload = .
forvalues w = `pre_wavenum' (-1) 0 {
	replace preload = r`w'slfemp if preload == . & inw`wavenum' == 1
}

*wave 3 respondent whether self-employed
gen r`wavenum'slfemp=.
missing_w`wavenum' wpstj wpactpw wpes, result(r`wavenum'slfemp)
replace r`wavenum'slfemp = preload if preload !=. & wpstj == 1
replace r`wavenum'slfemp = 0 if wpes == 1 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'slfemp = 1 if wpes == 2
label variable r`wavenum'slfemp "r`wavenum'slfemp:w`wavenum' r Whether Self-Employed"

*wave 3 spouse whether self-employed
gen s`wavenum'slfemp=.
spouse r`wavenum'slfemp, result(s`wavenum'slfemp) wave(`wavenum')
label variable s`wavenum'slfemp "s`wavenum'slfemp:w`wavenum' s Whether Self-Employed"

*value labels
label values r`wavenum'slfemp slfemp
label values s`wavenum'slfemp slfemp

*check

*drop preload variables
drop preload

***labor force status***
*wave 3 respondent labor force status
gen r`wavenum'lbrf_e=.
missing_w`wavenum' wpdes, result(r`wavenum'lbrf_e)
replace r`wavenum'lbrf_e = .o if wpdes == 95
replace r`wavenum'lbrf_e = 1 if wpdes == 2
replace r`wavenum'lbrf_e = 2 if wpdes == 3
replace r`wavenum'lbrf_e = 3 if wpdes == 4
replace r`wavenum'lbrf_e = 4 if wpdes == 96
replace r`wavenum'lbrf_e = 5 if wpdes == 1
replace r`wavenum'lbrf_e = 6 if wpdes == 5
replace r`wavenum'lbrf_e = 7 if wpdes == 6
label variable r`wavenum'lbrf_e "r`wavenum'lbrf_e:w`wavenum' R labor force status"

*wave 3 spouse labor force status
gen s`wavenum'lbrf_e=.
spouse r`wavenum'lbrf_e, result(s`wavenum'lbrf_e) wave(`wavenum')
label variable s`wavenum'lbrf_e "s`wavenum'lbrf_e:w`wavenum' S labor force status"

*value labels 
label values r`wavenum'lbrf_e lbrf_e
label values s`wavenum'lbrf_e lbrf_e

*check

***labor force status***
*wave 3 respondent labor force status in the labor force
gen r`wavenum'inlbrf=.
missing_w`wavenum' wpdes, result(r`wavenum'inlbrf)
replace r`wavenum'inlbrf = .o if inlist(wpdes,85,86,95)
replace r`wavenum'inlbrf = 0 if inrange(r`wavenum'lbrf_e,5,7)
replace r`wavenum'inlbrf = 1 if inrange(r`wavenum'lbrf_e,1,4)

label variable r`wavenum'inlbrf "r`wavenum'inlbrf:W`wavenum' =1 if r is in the labor force"

*wave 3 spouse labor force status
gen s`wavenum'inlbrf=.
spouse r`wavenum'inlbrf, result(s`wavenum'inlbrf) wave(`wavenum')
label variable s`wavenum'inlbrf "s`wavenum'inlbrf:W`wavenum' =1 if s is in the labor force"

*value labels
label values r`wavenum'inlbrf force
label values s`wavenum'inlbrf force

*check

**labor force status***
*wave 3 respondent labor force status unemployed
gen r`wavenum'unemp=.
missing_w`wavenum' wpdes, result(r`wavenum'unemp)
replace r`wavenum'unemp = .o if inlist(wpdes,85,86,95)
replace r`wavenum'unemp = .x if inlist(r`wavenum'lbrf_e,5,6,7)
replace r`wavenum'unemp = 0 if inlist(r`wavenum'lbrf_e,1,2,4)
replace r`wavenum'unemp = 1 if r`wavenum'lbrf_e == 3

label variable r`wavenum'unemp "r`wavenum'unemp:w`wavenum' =1 if r is unemployed"

*wave 3 spouse labor force status
gen s`wavenum'unemp=.
spouse r`wavenum'unemp, result(s`wavenum'unemp) wave(`wavenum')
label variable s`wavenum'unemp "s`wavenum'unemp:w`wavenum' =1 if s is unemployed"

*value labels
label values r`wavenum'unemp force
label values s`wavenum'unemp force

*check

***Hours of work per week at current job***
*wave 3 respondent hours of work per week at main job
gen r`wavenum'jhours=.
missing_w`wavenum' wpactpw wpes wphjob wphwrk, result(r`wavenum'jhours)
replace r`wavenum'jhours = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhours = .p if askpx == 1
replace r`wavenum'jhours = wphjob if inrange(wphjob,1,168) & wpes == 1
replace r`wavenum'jhours = wphwrk if inrange(wphwrk,1,168) & wpes == 2
label variable r`wavenum'jhours "r`wavenum'jhours:w`wavenum' r Hours worked/week main job"

*wave 3 spouse Hours of work per week at main job
gen s`wavenum'jhours=.
spouse r`wavenum'jhours, result(s`wavenum'jhours) wave(`wavenum')
label variable s`wavenum'jhours "s`wavenum'jhours:w`wavenum' s Hours worked/week main job"

*wave 3 respondent hours worked per week at 2nd job
gen r`wavenum'jhour2_e=.
missing_w`wavenum' wpactpw wpmoj wphmsj, result(r`wavenum'jhour2_e)
replace r`wavenum'jhour2_e = .w if wpmoj == 2 | (wpmoj == 1 & wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhour2_e = .p if askpx == 1
replace r`wavenum'jhour2_e = wphmsj/4.333 if inrange(wphmsj,1,700) & wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
replace r`wavenum'jhour2_e = .i if wphmsj>700 & wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
label variable r`wavenum'jhour2_e "r`wavenum'jhour2_e:w`wavenum' r Hours worked/week 2nd job"

*wave 3 spouse hours worked per week at 2nd job
gen s`wavenum'jhour2_e=.
spouse r`wavenum'jhour2_e, result(s`wavenum'jhour2_e) wave(`wavenum')
label variable s`wavenum'jhour2_e "s`wavenum'jhour2_e:w`wavenum' s Hours worked/week 2nd job"

*check

***Weeks worked per year***
*wave 3 respondent weeks worked per year
gen r`wavenum'jweeks_e=.
missing_w`wavenum' wpwlym, result(r`wavenum'jweeks_e)
replace r`wavenum'jweeks_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jweeks_e = .p if askpx == 1
replace r`wavenum'jweeks_e = wpwlym if inrange(wpwlym,1,52)
label variable r`wavenum'jweeks_e "r`wavenum'jweeks_e:w`wavenum' r Weeks worked/year"

*wave 3 spouse weeks worked per year
gen s`wavenum'jweeks_e=.
spouse r`wavenum'jweeks_e, result(s`wavenum'jweeks_e) wave(`wavenum')
label variable s`wavenum'jweeks_e "s`wavenum'jweeks_e:w`wavenum' s Weeks worked/year"

*check

***Wage rate***
*wave 3 respondent Imputed Wage Rate-Hrly
gen r`wavenum'wgihr_e =.
missing_w`wavenum' wpactpw wpes wphjob wphwrk, result(r`wavenum'wgihr_e)
replace r`wavenum'wgihr_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'wgihr_e = .p if askpx == 1
replace r`wavenum'wgihr_e = 0 if thp_r_i == 0
replace r`wavenum'wgihr_e = thp_r_i/wphjob if thp_r_i > 0 & inrange(wphjob,1,168) & wpes == 1
replace r`wavenum'wgihr_e = thp_r_i/wphwrk if thp_r_i > 0 & inrange(wphwrk,1,168) & wpes == 2
label variable r`wavenum'wgihr_e "r`wavenum'wgihr_e:w`wavenum' r Imputed Wage Rate-Hrly"

*wave 3 spouse Iputed Wage Rate-Hrly
gen s`wavenum'wgihr_e =.
spouse r`wavenum'wgihr_e, result(s`wavenum'wgihr_e) wave(`wavenum')
label variable s`wavenum'wgihr_e "s`wavenum'wgihr_e:w`wavenum' s Imputed Wage Rate-Hrly"

*wave 3 respondent Imputed Wage Rate-Wkly
gen r`wavenum'wgiwk_e =.
replace r`wavenum'wgiwk_e = thp_r_i
label variable r`wavenum'wgiwk_e "r`wavenum'wgiwk_e:w`wavenum' r Imputed Wage Rate-Wkly"

*wave 3 spouse Iputed Wage Rate-Wkly
gen s`wavenum'wgiwk_e =.
spouse r`wavenum'wgiwk_e, result(s`wavenum'wgiwk_e) wave(`wavenum')
replace r`wavenum'wgiwk_e = .i if r`wavenum'wgiwk_e==. & inlist(askinst,1,2)
label variable s`wavenum'wgiwk_e "s`wavenum'wgiwk_e:w`wavenum' s Imputed Wage Rate-Wkly"

*wave 3 respondent Impute Flag Wage Rate-Hrly
gen r`wavenum'wgfhr_e=.
combine_inc_flags1 thp_r_t, result(r`wavenum'wgfhr_e)
replace r`wavenum'wgfhr_e = 11 if mi(r`wavenum'jhours) & mi(r`wavenum'wgihr_e) & inw`wavenum' == 1
label variable r`wavenum'wgfhr_e "r`wavenum'wgfhr_e:w`wavenum' r Impute Flag Wage Rate-Hrly"

*wave 3 spouse Impute Flag Wage Rate-Hrly
gen s`wavenum'wgfhr_e=.
spouse r`wavenum'wgfhr_e, result(s`wavenum'wgfhr_e) wave(`wavenum')
label variable s`wavenum'wgfhr_e "s`wavenum'wgfhr_e:w`wavenum' s Impute Flag Wage Rate-Hrly"

*wave 3 respondent Impute Flag Wage Rate-Wkly
gen r`wavenum'wgfwk_e=.
combine_inc_flags1 thp_r_t, result(r`wavenum'wgfwk_e)
replace r`wavenum'wgfwk_e = 10 if r`wavenum'wgfwk_e==. & inlist(askinst,1,2)
label variable r`wavenum'wgfwk_e "r`wavenum'wgfwk_e:w`wavenum' r Impute Flag Wage Rate-Wkly"

*wave 3 spouse Impute Flag Wage Rate-Wkly
gen s`wavenum'wgfwk_e=.
spouse r`wavenum'wgfwk_e, result(s`wavenum'wgfwk_e) wave(`wavenum')
label variable s`wavenum'wgfwk_e "s`wavenum'wgfwk_e:w`wavenum' s Impute Flag Wage Rate-Wkly"

*value labels
*label values r`wavenum'wgiwk_e wgf_e
*label values s`wavenum'wgiwk_e wgf_e
label values r`wavenum'wgfhr_e wgf_e
label values s`wavenum'wgfhr_e wgf_e
label values r`wavenum'wgfwk_e wgf_e
label values s`wavenum'wgfwk_e wgf_e

*check


***Current job requires lots of physical effort***
*wave 3 respondent whether job requires physical effort
gen r`wavenum'jphysa=.
missing_w`wavenum' wpactpw wpjact, result(r`wavenum'jphysa)
replace r`wavenum'jphysa = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jphysa = .p if askpx == 1
replace r`wavenum'jphysa =1 if wpjact == 1
replace r`wavenum'jphysa =2 if wpjact == 2
replace r`wavenum'jphysa =3 if wpjact == 3
replace r`wavenum'jphysa =4 if wpjact == 4
label variable r`wavenum'jphysa "r`wavenum'jphysa:w`wavenum' r Cur job req lots phys effort"

*wave 3 spouse whether job requires physical effort
gen s`wavenum'jphysa=.
spouse r`wavenum'jphysa, result(s`wavenum'jphysa) wave(`wavenum')
label variable s`wavenum'jphysa "s`wavenum'jphysa:w`wavenum' s Cur job req lots phys effort"

*value labels
label values r`wavenum'jphysa jphys_e
label values s`wavenum'jphysa jphys_e

*check

***Current job - under pressure due to heavy workload***
*wave 3 respondent under pressure due to heavy workload
gen r`wavenum'jpress=.
missing_w`wavenum' wpactpw wpactse scworkg, result(r`wavenum'jpress)
replace r`wavenum'jpress = .c if inrange(outscw3,2,3)
replace r`wavenum'jpress = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jpress = .p if askpx == 1
replace r`wavenum'jpress =1 if scworkg == 1
replace r`wavenum'jpress =2 if scworkg == 2
replace r`wavenum'jpress =3 if scworkg == 3
replace r`wavenum'jpress =4 if scworkg == 4
label variable r`wavenum'jpress "r`wavenum'jpress:w`wavenum' r under pressure due to workload"

*wave 3 spouse under pressure due to heavy workload
gen s`wavenum'jpress=.
spouse r`wavenum'jpress, result(s`wavenum'jpress) wave(`wavenum')
label variable s`wavenum'jpress "s`wavenum'jpress:w`wavenum' s under pressure due to workload"

*value labels
label values r`wavenum'jpress agree
label values s`wavenum'jpress agree

***Years of tenure on current job***
*generate preloads
gen preload = .
gen preload_f = .
gen preload_y = .
gen preload_m = .
gen preload_s = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'jcten if preload == . & inw`wavenum' == 1
	replace preload_f = r`w'fjcten if preload != . & preload == r`w'jcten & preload_f == . & inw`wavenum' == 1
	replace preload_y = r`w'iwindy if preload != . & preload == r`w'jcten & preload_y == . & inw`wavenum' == 1
	replace preload_m = r`w'iwindm if preload != . & preload == r`w'jcten & preload_m == . & inw`wavenum' == 1
	replace preload_s = r`w'slfemp if preload != . & preload == r`w'jcten & preload_s == . & inw`wavenum' == 1
}

*wave 3 respondent years of tenure on current job
gen r`wavenum'jcten=.
missing_w`wavenum' wpactpw wpsjoby wpsjobm, result(r`wavenum'jcten)
replace r`wavenum'jcten = .h if inlist(r`wavenum'cohort_e,4,5,6,7) & inw`wavenum'==1 & !inlist(r`wavenum'jcten,.r,.d)
replace r`wavenum'jcten = r1jcten if mi(r1jcten) & r1jcten != . & ((r1slfemp == 1 & inw2 == 1) | wpemp == 1)
replace r`wavenum'jcten = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jcten = .p if askpx == 1 
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(preload_y,preload_m))/12,.1) + preload ///
	if inrange(iintdaty,2000,2010) & inrange(iintdatm,1,12) & ///
	   inrange(preload_y,2000,2010) & inrange(preload_m,1,12) & ///
	   (preload_s == 1 | wpemp == 1) & !mi(preload)
replace r`wavenum'jcten = iintdaty - wpsjoby ///
	if inrange(iintdaty,2000,2010) & ///
	   inrange(wpsjoby,1900,2010) & inrange(wpsjobm,13,17)
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(wpsjoby,wpsjobm))/12,.1) ///
	if inrange(iintdaty,2000,2010) & inrange(iintdatm,1,12) & ///
	   inrange(wpsjoby,1900,2010) & inrange(wpsjobm,1,12)
label variable r`wavenum'jcten "r`wavenum'jcten:w`wavenum' r Current Job Tenure"

*wave 3 spouse years of tenure on current job
gen s`wavenum'jcten=.
spouse r`wavenum'jcten, result(s`wavenum'jcten) wave(`wavenum')
label variable s`wavenum'jcten "s`wavenum'jcten:w`wavenum' s Current Job Tenure"

*wave 3 flag respondent years of tenure on current job
gen r`wavenum'fjcten = . 
replace r`wavenum'fjcten = .m if mi(r`wavenum'jcten) & inw`wavenum'==1
replace r`wavenum'fjcten = preload_f if (preload_s == 1 | wpemp == 1) & !mi(preload_f)
replace r`wavenum'fjcten = 0 if !mi(r`wavenum'jcten) & inrange(wpsjobm,1,13)
replace r`wavenum'fjcten = 1 if !mi(r`wavenum'jcten) & wpsjobm == 13
replace r`wavenum'fjcten = 2 if !mi(r`wavenum'jcten) & wpsjobm == 14
replace r`wavenum'fjcten = 3 if !mi(r`wavenum'jcten) & wpsjobm == 15
replace r`wavenum'fjcten = 4 if !mi(r`wavenum'jcten) & wpsjobm == 16
replace r`wavenum'fjcten = 5 if !mi(r`wavenum'jcten) & wpsjobm == 17
label variable r`wavenum'fjcten "r`wavenum'fjcten:w`wavenum' r Flag Current Job Tenure"
label values r`wavenum'fjcten fjcten

*wave 3 flag spouse years of tenure on current job
gen s`wavenum'fjcten=.
spouse r`wavenum'fjcten, result(s`wavenum'fjcten) wave(`wavenum')
label variable s`wavenum'fjcten "s`wavenum'fjcten:w`wavenum' s Flag Current Job Tenure"
label values s`wavenum'fjcten fjcten

*check

*drop preload variables
drop preload preload_f preload_y preload_m preload_s

***Occupation code for current job***
*wave 3 respondent occupation code
gen r`wavenum'nssec13=.
missing_w`wavenum' w3nssec r`wavenum'work, result(r`wavenum'nssec13)
replace r`wavenum'nssec13 = .m if inlist(w3nssecmis,1,4) 
replace r`wavenum'nssec13 = .w if r`wavenum'work == 0 | w3nssec == 14
replace r`wavenum'nssec13 = .p if inlist(w3nssecmis,2,3)
replace r`wavenum'nssec13 = .e if w3nssec == 15
replace r`wavenum'nssec13 = .c if inlist(w3nssec,16,17)
replace r`wavenum'nssec13 = int(w3nssec) if inrange(w3nssec,1,13.999) & r`wavenum'work == 1
label variable r`wavenum'nssec13 "r`wavenum'nssec13:w`wavenum' r current job classification, 13 cat"

*wave 3 spouse occupation code
gen s`wavenum'nssec13=.
spouse r`wavenum'nssec13, result(s`wavenum'nssec13) wave(`wavenum')
label variable s`wavenum'nssec13 "s`wavenum'nssec13:w`wavenum' s current job classification, 13 cat"

*value labels
label values r`wavenum'nssec13 nssec13
label values s`wavenum'nssec13 nssec13

*check

***Occupation code for current job with 8 categories***
*wave 3 respondent occupation code with 8 cats
gen r`wavenum'nssec8=.
missing_w`wavenum' w3nssec r`wavenum'work, result(r`wavenum'nssec8)
replace r`wavenum'nssec8 = .m if inlist(w3nssecmis,1,4)
replace r`wavenum'nssec8 = .w if r`wavenum'work == 0 | w3nssec8 == 8
replace r`wavenum'nssec8 = .p if inlist(w3nssecmis,2,3)
replace r`wavenum'nssec8 = .o if w3nssec8 == 99
replace r`wavenum'nssec8 = w3nssec8 if inrange(w3nssec8,1,7) & r`wavenum'work == 1
label variable r`wavenum'nssec8 "r`wavenum'nssec8:w`wavenum' r current job classification, 8 cat"

*wave 3 spouse occupation code
gen s`wavenum'nssec8=.
spouse r`wavenum'nssec8, result(s`wavenum'nssec8) wave(`wavenum') 
label variable s`wavenum'nssec8 "s`wavenum'nssec8:w`wavenum' s current job classification, 8 cat"

*value labels
label values r`wavenum'nssec8 nssec8
label values s`wavenum'nssec8 nssec8

***month and year last job ended***
*generate preload
gen preload_m = .
gen preload_y = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload_m = r`w'jlastm if preload_m == . & inw`wavenum' == 1
	replace preload_y = r`w'jlasty if preload_y == . & inw`wavenum' == 1
}

*wave 3 respondent month last job ended
gen r`wavenum'jlastm=.
missing_w`wavenum' wpactpw wpever wpjob wpjobl wplljy wplljm, result(r`wavenum'jlastm)
replace r`wavenum'jlastm = .h if inlist(r`wavenum'cohort_e,4,5,6,7) & inw`wavenum'==1 & !inlist(r`wavenum'jlastm,.r,.d)
replace r`wavenum'jlastm = .t if inlist(wpaway,1,3)
replace r`wavenum'jlastm = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlastm = .n if wpactpw == 0 & wpactse == 0 & wpever == 2
replace r`wavenum'jlastm = preload_m if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | wpjob == 2) /// 
                                & preload_m != .
replace r`wavenum'jlastm = .p if askpx == 1
replace r`wavenum'jlastm = .y if inrange(wplljy,1900,1990)
replace r`wavenum'jlastm = wplljm if inrange(wplljm,1,17)
label variable r`wavenum'jlastm "r`wavenum'jlastm:w`wavenum' r Month Last Worked/not working"
label values r`wavenum'jlastm xmonth

*wave 3 spouse month last job ended
gen s`wavenum'jlastm=.
spouse r`wavenum'jlastm, result(s`wavenum'jlastm) wave(`wavenum')
label variable s`wavenum'jlastm "s`wavenum'jlastm:w`wavenum' s Month Last Worked/not working"
label values s`wavenum'jlastm xmonth

*wave 3 respondent year last job ended
gen r`wavenum'jlasty=.
missing_w`wavenum' wpactpw wpever wpjob wpjobl wplljy, result(r`wavenum'jlasty)
replace r`wavenum'jlasty = .h if inlist(r`wavenum'cohort_e,4,5,6,7) & inw`wavenum'==1 & !inlist(r`wavenum'jlasty,.r,.d)
replace r`wavenum'jlasty = .t if inlist(wpaway,1,3)
replace r`wavenum'jlasty = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlasty = .n if wpactpw == 0 & wpactse == 0 & wpever == 2
replace r`wavenum'jlasty = preload_y if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | wpjob == 2) /// 
                                & preload_y != .
replace r`wavenum'jlasty = .p if askpx == 1
replace r`wavenum'jlasty = wplljy if inrange(wplljy,1900,2050)
label variable r`wavenum'jlasty "r`wavenum'jlasty:w`wavenum' r Year Last Worked/not working"

*wave 3 spouse year last job ended
gen s`wavenum'jlasty=.
spouse r`wavenum'jlasty, result(s`wavenum'jlasty) wave(`wavenum')
label variable s`wavenum'jlasty "s`wavenum'jlasty:w`wavenum' s Year Last Worked/not working"

*check

*drop preload variables
drop preload_m preload_y

*wave 3 respondent job category soc2000
gen r`wavenum'soc2000 = .
missing_w3 w3soc2000 r`wavenum'work, result(r`wavenum'soc2000)
replace r`wavenum'soc2000 = 1 if w3soc2000==11
replace r`wavenum'soc2000 = 2 if w3soc2000==12
replace r`wavenum'soc2000 = 3 if w3soc2000==21
replace r`wavenum'soc2000 = 4 if w3soc2000==22
replace r`wavenum'soc2000 = 5 if w3soc2000==23
replace r`wavenum'soc2000 = 6 if w3soc2000==24
replace r`wavenum'soc2000 = 7 if w3soc2000==31
replace r`wavenum'soc2000 = 8 if w3soc2000==32
replace r`wavenum'soc2000 = 9 if w3soc2000==33
replace r`wavenum'soc2000 = 10 if w3soc2000==34
replace r`wavenum'soc2000 = 11 if w3soc2000==35
replace r`wavenum'soc2000 = 12 if w3soc2000==41
replace r`wavenum'soc2000 = 13 if w3soc2000==42
replace r`wavenum'soc2000 = 14 if w3soc2000==51
replace r`wavenum'soc2000 = 15 if w3soc2000==52
replace r`wavenum'soc2000 = 16 if w3soc2000==53
replace r`wavenum'soc2000 = 17 if w3soc2000==54
replace r`wavenum'soc2000 = 18 if w3soc2000==61
replace r`wavenum'soc2000 = 19 if w3soc2000==62
replace r`wavenum'soc2000 = 20 if w3soc2000==71
replace r`wavenum'soc2000 = 21 if w3soc2000==72
replace r`wavenum'soc2000 = 22 if w3soc2000==81
replace r`wavenum'soc2000 = 23 if w3soc2000==82
replace r`wavenum'soc2000 = 24 if w3soc2000==91
replace r`wavenum'soc2000 = 25 if w3soc2000==92
replace r`wavenum'soc2000 = .w if r`wavenum'work==0
label variable r`wavenum'soc2000 "r`wavenum'soc2000:w`wavenum' r cur job occup/2000 soc coding"
label values r`wavenum'soc2000 soc

*wave 3 spouse job category soc2000
gen s`wavenum'soc2000 = .
spouse r`wavenum'soc2000, result(s`wavenum'soc2000) wave(`wavenum')
label variable s`wavenum'soc2000 "s`wavenum'soc2000:w`wavenum' s cur job occup/2000 soc coding"
label values s`wavenum'soc2000 soc




***drop ELSA wave 3 core file raw variables***
drop `employ_w3_core'

***drop ELSA wave 3 financial derived file raw variables***
drop `employ_w3_fina'

******************************************************************************************


*set wave number
local wavenum = 4
local pre_wavenum = `wavenum' - 1

***merge with wave 4 core data***
local employ_w4_core askpx indager ///
                     wpactvw wpactca wpactlo wpacted wpact96 wpactw wpactpw wpaway wpactse wpmoj ///
                     wpes wpdes ///
                     wphjob wphwrk wphmsj ///
                     wpwlym ///
                     wpjact ///
                     iintdaty iintdatm wpsjoby wpsjobm ///
                     wpjob wpjobl wpever wplljm wplljy ///
                     wpemp wpstj ///
                     w4nssec askinst scworkg outscw4 w4nssec8 w4soc2000 
merge 1:1 idauniq using "$wave_4_core", keepusing(`employ_w4_core') nogen

***merge with wave 4 financial derived variables data***
local employ_w4_fina thp_r_i thp_r_t
merge 1:1 idauniq using "$wave_4_fina", keepusing(`employ_w4_fina') nogen


***Currently working for pay***
*wave 4 respondent working for pay
gen r`wavenum'work=.
missing_w`wavenum' wpactpw,result(r`wavenum'work)
replace r`wavenum'work = 0 if inlist(wpactvw,0,1) | ///
                      inlist(wpactca,0,1) | ///
                      inlist(wpactlo,0,1) | ///
                      inlist(wpacted,0,1) | ///
                      inlist(wpact96,0,1) 
replace r`wavenum'work = 1 if wpactpw == 1 | wpactse == 1
label variable r`wavenum'work "r`wavenum'work:w`wavenum' R working for pay"

*wave 4 spouse working for pay
gen s`wavenum'work=.
spouse r`wavenum'work, result(s`wavenum'work) wave(`wavenum')
label variable s`wavenum'work "s`wavenum'work:w`wavenum' S working for pay"

*wave 4 respondent works at second job
gen r`wavenum'work2=.
missing_w`wavenum' wpactpw wpmoj, result(r`wavenum'work2)
replace r`wavenum'work2 = .p if askpx == 1
replace r`wavenum'work2=0 if wpmoj == 2 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'work2=1 if wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
label variable r`wavenum'work2 "r`wavenum'work2:w`wavenum' R Works at 2nd job"

*wave 4 spouse works at second job
gen s`wavenum'work2=.
spouse r`wavenum'work2, result(s`wavenum'work2) wave(`wavenum')
label variable s`wavenum'work2 "s`wavenum'work2:w`wavenum' S Works at 2nd job"

*value labels
label values r`wavenum'work rwork
label values s`wavenum'work rwork
label values r`wavenum'work2 rwork
label values s`wavenum'work2 rwork

*check

***Whether self-employed***
*generate preload
gen preload = .
forvalues w = `pre_wavenum' (-1) 0 {
	replace preload = r`w'slfemp if preload == . & inw`wavenum' == 1
}

*wave 4 respondent whether self-employed
gen r`wavenum'slfemp=.
missing_w`wavenum' wpstj wpactpw wpes, result(r`wavenum'slfemp)
replace r`wavenum'slfemp = preload if preload !=. & wpstj == 1
replace r`wavenum'slfemp = 0 if wpes == 1 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'slfemp = 1 if wpes == 2
label variable r`wavenum'slfemp "r`wavenum'slfemp:w`wavenum' r Whether Self-Employed"

*wave 4 spouse whether self-employed
gen s`wavenum'slfemp=.
spouse r`wavenum'slfemp, result(s`wavenum'slfemp) wave(`wavenum')
label variable s`wavenum'slfemp "s`wavenum'slfemp:w`wavenum' s Whether Self-Employed"

*value labels
label values r`wavenum'slfemp slfemp
label values s`wavenum'slfemp slfemp

*check

*drop preload variables
drop preload

***labor force status***
*wave 4 respondent labor force status
gen r`wavenum'lbrf_e=.
missing_w`wavenum' wpdes, result(r`wavenum'lbrf_e)
replace r`wavenum'lbrf_e = .o if wpdes == 95 | wpdes == 85
replace r`wavenum'lbrf_e = 1 if wpdes == 2
replace r`wavenum'lbrf_e = 2 if wpdes == 3
replace r`wavenum'lbrf_e = 3 if wpdes == 4
replace r`wavenum'lbrf_e = 4 if wpdes == 96
replace r`wavenum'lbrf_e = 5 if wpdes == 1
replace r`wavenum'lbrf_e = 6 if wpdes == 5
replace r`wavenum'lbrf_e = 7 if wpdes == 6
label variable r`wavenum'lbrf_e "r`wavenum'lbrf_e:w`wavenum' R labor force status"

*wave 4 spouse labor force status
gen s`wavenum'lbrf_e=.
spouse r`wavenum'lbrf_e, result(s`wavenum'lbrf_e) wave(`wavenum')
label variable s`wavenum'lbrf_e "s`wavenum'lbrf_e:w`wavenum' S labor force status"

*value labels 
label values r`wavenum'lbrf_e lbrf_e
label values s`wavenum'lbrf_e lbrf_e

*check

***labor force status***
*wave 4 respondent labor force status in the labor force
gen r`wavenum'inlbrf=.
missing_w`wavenum' wpdes, result(r`wavenum'inlbrf)
replace r`wavenum'inlbrf = .o if inlist(wpdes,85,86,95)
replace r`wavenum'inlbrf = 0 if inrange(r`wavenum'lbrf_e,5,7)
replace r`wavenum'inlbrf = 1 if inrange(r`wavenum'lbrf_e,1,4)

label variable r`wavenum'inlbrf "r`wavenum'inlbrf:W`wavenum' =1 if r is in the labor force"

*wave 4 spouse labor force status
gen s`wavenum'inlbrf=.
spouse r`wavenum'inlbrf, result(s`wavenum'inlbrf) wave(`wavenum')
label variable s`wavenum'inlbrf "s`wavenum'inlbrf:W`wavenum' =1 if s is in the labor force"

*value labels
label values r`wavenum'inlbrf force
label values s`wavenum'inlbrf force

*check

**labor force status***
*wave 4 respondent labor force status unemployed
gen r`wavenum'unemp=.
missing_w`wavenum' wpdes, result(r`wavenum'unemp)
replace r`wavenum'unemp = .o if inlist(wpdes,85,86,95)
replace r`wavenum'unemp = .x if inlist(r`wavenum'lbrf_e,5,6,7)
replace r`wavenum'unemp = 0 if inlist(r`wavenum'lbrf_e,1,2,4)
replace r`wavenum'unemp = 1 if r`wavenum'lbrf_e == 3

label variable r`wavenum'unemp "r`wavenum'unemp:w`wavenum' =1 if r is unemployed"

*wave 4 spouse labor force status
gen s`wavenum'unemp=.
spouse r`wavenum'unemp, result(s`wavenum'unemp) wave(`wavenum')
label variable s`wavenum'unemp "s`wavenum'unemp:w`wavenum' =1 if s is unemployed"

*value labels
label values r`wavenum'unemp force
label values s`wavenum'unemp force

*check


***Hours of work per week at current job***
*wave 4 respondent hours of work per week at main job
gen r`wavenum'jhours=.
missing_w`wavenum' wpactpw wpes wphjob wphwrk, result(r`wavenum'jhours)
replace r`wavenum'jhours = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhours = .p if askpx == 1
replace r`wavenum'jhours = wphjob if inrange(wphjob,1,168) & wpes == 1
replace r`wavenum'jhours = wphwrk if inrange(wphwrk,1,168) & wpes == 2
label variable r`wavenum'jhours "r`wavenum'jhours:w`wavenum' r Hours worked/week main job"

*wave 4 spouse Hours of work per week at main job
gen s`wavenum'jhours=.
spouse r`wavenum'jhours, result(s`wavenum'jhours) wave(`wavenum')
label variable s`wavenum'jhours "s`wavenum'jhours:w`wavenum' s Hours worked/week main job"

*wave 4 respondent hours worked per week at 2nd job
gen r`wavenum'jhour2_e=.
missing_w`wavenum' wpactpw wpmoj wphmsj, result(r`wavenum'jhour2_e)
replace r`wavenum'jhour2_e = .w if wpmoj == 2 | (wpmoj == 1 & wpactpw == 0 & wpactse == 0) | r`wavenum'work2==0
replace r`wavenum'jhour2_e = .p if askpx == 1
replace r`wavenum'jhour2_e = .n if r`wavenum'work2==.n
replace r`wavenum'jhour2_e = wphmsj/4.333 if inrange(wphmsj,1,700) & wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
replace r`wavenum'jhour2_e = .i if wphmsj>700 & wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
label variable r`wavenum'jhour2_e "r`wavenum'jhour2_e:w`wavenum' r Hours worked/week 2nd job"

*wave 4 spouse hours worked per week at 2nd job
gen s`wavenum'jhour2_e=.
spouse r`wavenum'jhour2_e, result(s`wavenum'jhour2_e) wave(`wavenum')
label variable s`wavenum'jhour2_e "s`wavenum'jhour2_e:w`wavenum' s Hours worked/week 2nd job"

*check

***Weeks worked per year***
*wave 4 respondent weeks worked per year
gen r`wavenum'jweeks_e=.
missing_w`wavenum' wpwlym, result(r`wavenum'jweeks_e)
replace r`wavenum'jweeks_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jweeks_e = .p if askpx == 1
replace r`wavenum'jweeks_e = .n if r`wavenum'work2==.n
replace r`wavenum'jweeks_e = wpwlym if inrange(wpwlym,1,52)
label variable r`wavenum'jweeks_e "r`wavenum'jweeks_e:w`wavenum' r Weeks worked/year"

*wave 4 spouse weeks worked per year
gen s`wavenum'jweeks_e=.
spouse r`wavenum'jweeks_e, result(s`wavenum'jweeks_e) wave(`wavenum')
label variable s`wavenum'jweeks_e "s`wavenum'jweeks_e:w`wavenum' s Weeks worked/year"

*check

***Wage rate***
*wave 4 respondent Imputed Wage Rate-Hrly
gen r`wavenum'wgihr_e =.
missing_w`wavenum' wpactpw wpes wphjob wphwrk, result(r`wavenum'wgihr_e)
replace r`wavenum'wgihr_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'wgihr_e = .p if askpx == 1
replace r`wavenum'wgihr_e = .n if r`wavenum'work2==.n
replace r`wavenum'wgihr_e = 0 if thp_r_i == 0
replace r`wavenum'wgihr_e = thp_r_i/wphjob if thp_r_i > 0 & inrange(wphjob,1,168) & wpes == 1
replace r`wavenum'wgihr_e = thp_r_i/wphwrk if thp_r_i > 0 & inrange(wphwrk,1,168) & wpes == 2
label variable r`wavenum'wgihr_e "r`wavenum'wgihr_e:w`wavenum' r Imputed Wage Rate-Hrly"

*wave 4 spouse Iputed Wage Rate-Hrly
gen s`wavenum'wgihr_e =.
spouse r`wavenum'wgihr_e, result(s`wavenum'wgihr_e) wave(`wavenum')
label variable s`wavenum'wgihr_e "s`wavenum'wgihr_e:w`wavenum' s Imputed Wage Rate-Hrly"

*wave 4 respondent Imputed Wage Rate-Wkly
gen r`wavenum'wgiwk_e =.
replace r`wavenum'wgiwk_e = thp_r_i
replace r`wavenum'wgiwk_e = .i if r`wavenum'wgiwk_e==. & inlist(askinst,1,2)
label variable r`wavenum'wgiwk_e "r`wavenum'wgiwk_e:w`wavenum' r Imputed Wage Rate-Wkly"

*wave 4 spouse Iputed Wage Rate-Wkly
gen s`wavenum'wgiwk_e =.
spouse r`wavenum'wgiwk_e, result(s`wavenum'wgiwk_e) wave(`wavenum')
label variable s`wavenum'wgiwk_e "s`wavenum'wgiwk_e:w`wavenum' s Imputed Wage Rate-Wkly"

*wave 4 respondent Impute Flag Wage Rate-Hrly
gen r`wavenum'wgfhr_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfhr_e)
replace r`wavenum'wgfhr_e = 11 if mi(r`wavenum'jhours) & mi(r`wavenum'wgihr_e) & inw`wavenum' == 1
label variable r`wavenum'wgfhr_e "r`wavenum'wgfhr_e:w`wavenum' r Impute Flag Wage Rate-Hrly"

*wave 4 spouse Impute Flag Wage Rate-Hrly
gen s`wavenum'wgfhr_e=.
spouse r`wavenum'wgfhr_e, result(s`wavenum'wgfhr_e) wave(`wavenum')
label variable s`wavenum'wgfhr_e "s`wavenum'wgfhr_e:w`wavenum' s Impute Flag Wage Rate-Hrly"

*wave 4 respondent Impute Flag Wage Rate-Wkly
gen r`wavenum'wgfwk_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfwk_e)
label variable r`wavenum'wgfwk_e "r`wavenum'wgfwk_e:w`wavenum' r Impute Flag Wage Rate-Wkly"

*wave 4 spouse Impute Flag Wage Rate-Wkly
gen s`wavenum'wgfwk_e=.
spouse r`wavenum'wgfwk_e, result(s`wavenum'wgfwk_e) wave(`wavenum')
label variable s`wavenum'wgfwk_e "s`wavenum'wgfwk_e:w`wavenum' s Impute Flag Wage Rate-Wkly"

*value labels
*label values r`wavenum'wgiwk_e wgf_e
*label values s`wavenum'wgiwk_e wgf_e
label values r`wavenum'wgfhr_e wgf_e
label values s`wavenum'wgfhr_e wgf_e
label values r`wavenum'wgfwk_e wgf_e
label values s`wavenum'wgfwk_e wgf_e

*check


***Current job requires lots of physical effort***
*wave 4 respondent whether job requires physical effort
gen r`wavenum'jphysa=.
missing_w`wavenum' wpactpw wpjact, result(r`wavenum'jphysa)
replace r`wavenum'jphysa = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jphysa = .p if askpx == 1
replace r`wavenum'jphysa =1 if wpjact == 1
replace r`wavenum'jphysa =2 if wpjact == 2
replace r`wavenum'jphysa =3 if wpjact == 3
replace r`wavenum'jphysa =4 if wpjact == 4
label variable r`wavenum'jphysa "r`wavenum'jphysa:w`wavenum' r Cur job req lots phys effort"

*wave 4 spouse whether job requires physical effort
gen s`wavenum'jphysa=.
spouse r`wavenum'jphysa, result(s`wavenum'jphysa) wave(`wavenum')
label variable s`wavenum'jphysa "s`wavenum'jphysa:w`wavenum' s Cur job req lots phys effort"

*value labels
label values r`wavenum'jphysa jphys_e
label values s`wavenum'jphysa jphys_e

*check

***Current job - under pressure due to heavy workload***
*wave 4 respondent under pressure due to heavy workload
gen r`wavenum'jpress=.
missing_w`wavenum' wpactpw wpactse scworkg, result(r`wavenum'jpress)
replace r`wavenum'jpress = .c if inrange(outscw4,2,3)
replace r`wavenum'jpress = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jpress = .p if askpx == 1
replace r`wavenum'jpress =1 if scworkg == 1
replace r`wavenum'jpress =2 if scworkg == 2
replace r`wavenum'jpress =3 if scworkg == 3
replace r`wavenum'jpress =4 if scworkg == 4
label variable r`wavenum'jpress "r`wavenum'jpress:w`wavenum' r under pressure due to workload"

*wave 4 spouse under pressure due to heavy workload
gen s`wavenum'jpress=.
spouse r`wavenum'jpress, result(s`wavenum'jpress) wave(`wavenum')
label variable s`wavenum'jpress "s`wavenum'jpress:w`wavenum' s under pressure due to workload"

*value labels
label values r`wavenum'jpress agree
label values s`wavenum'jpress agree

***Years of tenure on current job***
*generate preloads
gen preload = .
gen preload_f = .
gen preload_y = .
gen preload_m = .
gen preload_s = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'jcten if preload == . & inw`wavenum' == 1
	replace preload_f = r`w'fjcten if preload != . & preload == r`w'jcten & preload_f == . & inw`wavenum' == 1
	replace preload_y = r`w'iwindy if preload != . & preload == r`w'jcten & preload_y == . & inw`wavenum' == 1
	replace preload_m = r`w'iwindm if preload != . & preload == r`w'jcten & preload_m == . & inw`wavenum' == 1
	replace preload_s = r`w'slfemp if preload != . & preload == r`w'jcten & preload_s == . & inw`wavenum' == 1
}

*wave 4 respondent years of tenure on current job
gen r`wavenum'jcten=.
missing_w`wavenum' wpactpw wpsjoby wpsjobm, result(r`wavenum'jcten)
replace r`wavenum'jcten = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw4==1 & !inlist(r`wavenum'jcten,.r,.d)
replace r`wavenum'jcten = r1jcten if mi(r1jcten) & r1jcten != . & ((r1slfemp == 1 & inw2 == 1) | wpemp == 1)
replace r`wavenum'jcten = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jcten = .p if askpx == 1 
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(preload_y,preload_m))/12,.1) + preload ///
	if inrange(iintdaty,2000,2010) & inrange(iintdatm,1,12) & ///
	   inrange(preload_y,2000,2010) & inrange(preload_m,1,12) & ///
	   (preload_s == 1 | wpemp == 1) & !mi(preload)
replace r`wavenum'jcten = iintdaty - wpsjoby ///
	if inrange(iintdaty,2000,2010) & ///
	   inrange(wpsjoby,1900,2010) & inrange(wpsjobm,13,17)
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(wpsjoby,wpsjobm))/12,.1) ///
	if inrange(iintdaty,2000,2010) & inrange(iintdatm,1,12) & ///
	   inrange(wpsjoby,1900,2010) & inrange(wpsjobm,1,12)
label variable r`wavenum'jcten "r`wavenum'jcten:w`wavenum' r Current Job Tenure"

*wave 4 spouse years of tenure on current job
gen s`wavenum'jcten=.
spouse r`wavenum'jcten, result(s`wavenum'jcten) wave(`wavenum')
label variable s`wavenum'jcten "s`wavenum'jcten:w`wavenum' s Current Job Tenure"

*wave 4 flag respondent years of tenure on current job
gen r`wavenum'fjcten = . 
replace r`wavenum'fjcten = .m if mi(r`wavenum'jcten) & inw`wavenum'==1
replace r`wavenum'fjcten = preload_f if (preload_s == 1 | wpemp == 1) & !mi(preload_f)
replace r`wavenum'fjcten = 0 if !mi(r`wavenum'jcten) & inrange(wpsjobm,1,12)
replace r`wavenum'fjcten = 1 if !mi(r`wavenum'jcten) & wpsjobm == 13
replace r`wavenum'fjcten = 2 if !mi(r`wavenum'jcten) & wpsjobm == 14
replace r`wavenum'fjcten = 3 if !mi(r`wavenum'jcten) & wpsjobm == 15
replace r`wavenum'fjcten = 4 if !mi(r`wavenum'jcten) & wpsjobm == 16
replace r`wavenum'fjcten = 5 if !mi(r`wavenum'jcten) & wpsjobm == 17
label variable r`wavenum'fjcten "r`wavenum'fjcten:w`wavenum' r Flag Current Job Tenure"
label values r`wavenum'fjcten fjcten

*wave 4 flag spouse years of tenure on current job
gen s`wavenum'fjcten=.
spouse r`wavenum'fjcten, result(s`wavenum'fjcten) wave(`wavenum')
label variable s`wavenum'fjcten "s`wavenum'fjcten:w`wavenum' s Flag Current Job Tenure"
label values s`wavenum'fjcten fjcten

*check

*drop preload variables
drop preload preload_f preload_y preload_m preload_s

***Occupation code for current job***
*wave 4 respondent occupation code
gen r`wavenum'nssec13=.
missing_w`wavenum' w4nssec r`wavenum'work, result(r`wavenum'nssec13)
replace r`wavenum'nssec13 = .m if w4nssec == -3 
replace r`wavenum'nssec13 = .w if r`wavenum'work == 0 | w4nssec == 14
replace r`wavenum'nssec13 = .p if askpx == 1
replace r`wavenum'nssec13 = .e if w4nssec == 15
replace r`wavenum'nssec13 = .c if inlist(w4nssec,16,17)
replace r`wavenum'nssec13 = int(w4nssec) if inrange(w4nssec,1,13.999) & r`wavenum'work == 1
label variable r`wavenum'nssec13 "r`wavenum'nssec13:w`wavenum' r current job classification, 13 cat"

*wave 4 spouse occupation code
gen s`wavenum'nssec13=.
spouse r`wavenum'nssec13, result(s`wavenum'nssec13) wave(`wavenum')
label variable s`wavenum'nssec13 "s`wavenum'nssec13:w`wavenum' s current job classification, 13 cat"

*value labels
label values r`wavenum'nssec13 nssec13
label values s`wavenum'nssec13 nssec13

*check

***Occupation code for current job with 8 categories***
*wave 4 respondent occupation code with 8 cats
gen r`wavenum'nssec8=.
missing_w`wavenum' w4nssec r`wavenum'work, result(r`wavenum'nssec8)
replace r`wavenum'nssec8 = .m if w4nssec8 == -3 
replace r`wavenum'nssec8 = .w if r`wavenum'work == 0 | w4nssec8 == 8
replace r`wavenum'nssec8 = .p if askpx == 1
replace r`wavenum'nssec8 = .o if w4nssec8 == 99
replace r`wavenum'nssec8 = w4nssec8 if inrange(w4nssec8,1,7) & r`wavenum'work == 1
label variable r`wavenum'nssec8 "r`wavenum'nssec8:w`wavenum' r current job classification, 8 cat"

*wave 4 spouse occupation code
gen s`wavenum'nssec8=.
spouse r`wavenum'nssec8, result(s`wavenum'nssec8) wave(`wavenum')
label variable s`wavenum'nssec8 "s`wavenum'nssec8:w`wavenum' s current job classification, 8 cat"

*value labels
label values r`wavenum'nssec8 nssec8
label values s`wavenum'nssec8 nssec8


***month and year last job ended***
*generate preload
gen preload_m = .
gen preload_y = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload_m = r`w'jlastm if preload_m == . & inw`wavenum' == 1
	replace preload_y = r`w'jlasty if preload_y == . & inw`wavenum' == 1
}

*wave 4 respondent month last job ended
gen r`wavenum'jlastm=.
missing_w`wavenum' wpactpw wpever wpjob wpjobl wplljy wplljm, result(r`wavenum'jlastm)
replace r`wavenum'jlastm = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw4==1 & !inlist(r`wavenum'jlastm,.r,.d)
replace r`wavenum'jlastm = .t if inlist(wpaway,1,3)
replace r`wavenum'jlastm = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlastm = .n if wpactpw == 0 & wpactse == 0 & wpever == 2
replace r`wavenum'jlastm = preload_m if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | wpjob == 2) /// 
                                & preload_m != .
replace r`wavenum'jlastm = .p if askpx == 1
replace r`wavenum'jlastm = .y if inrange(wplljy,1900,1990)
replace r`wavenum'jlastm = wplljm if inrange(wplljm,1,17)
label variable r`wavenum'jlastm "r`wavenum'jlastm:w`wavenum' r Month Last Worked/not working"
label values r`wavenum'jlastm xmonth

*wave 4 spouse month last job ended
gen s`wavenum'jlastm=.
spouse r`wavenum'jlastm, result(s`wavenum'jlastm) wave(`wavenum')
label variable s`wavenum'jlastm "s`wavenum'jlastm:w`wavenum' s Month Last Worked/not working"
label values s`wavenum'jlastm xmonth

*wave 4 respondent year last job ended
gen r`wavenum'jlasty=.
missing_w`wavenum' wpactpw wpever wpjob wpjobl wplljy, result(r`wavenum'jlasty)
replace r`wavenum'jlasty = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw4==1 & !inlist(r`wavenum'jlasty,.r,.d)
replace r`wavenum'jlasty = .t if inlist(wpaway,1,3)
replace r`wavenum'jlasty = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlasty = .n if wpactpw == 0 & wpactse == 0 & wpever == 2
replace r`wavenum'jlasty = preload_y if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | wpjob == 2) /// 
                                & preload_y != .
replace r`wavenum'jlasty = .p if askpx == 1
replace r`wavenum'jlasty = wplljy if inrange(wplljy,1900,2050)
label variable r`wavenum'jlasty "r`wavenum'jlasty:w`wavenum' r Year Last Worked/not working"

*wave 4 spouse year last job ended
gen s`wavenum'jlasty=.
spouse r`wavenum'jlasty, result(s`wavenum'jlasty) wave(`wavenum')
label variable s`wavenum'jlasty "s`wavenum'jlasty:w`wavenum' s Year Last Worked/not working"

*check

*drop preload variables
drop preload_m preload_y

*wave 4 respondent job category soc2000
gen r`wavenum'soc2000 = .
missing_w4 w4soc2000 r`wavenum'work, result(r`wavenum'soc2000)
replace r`wavenum'soc2000 = .m if w4soc2000==-3
replace r`wavenum'soc2000 = 1 if w4soc2000==11
replace r`wavenum'soc2000 = 2 if w4soc2000==12
replace r`wavenum'soc2000 = 3 if w4soc2000==21
replace r`wavenum'soc2000 = 4 if w4soc2000==22
replace r`wavenum'soc2000 = 5 if w4soc2000==23
replace r`wavenum'soc2000 = 6 if w4soc2000==24
replace r`wavenum'soc2000 = 7 if w4soc2000==31
replace r`wavenum'soc2000 = 8 if w4soc2000==32
replace r`wavenum'soc2000 = 9 if w4soc2000==33
replace r`wavenum'soc2000 = 10 if w4soc2000==34
replace r`wavenum'soc2000 = 11 if w4soc2000==35
replace r`wavenum'soc2000 = 12 if w4soc2000==41
replace r`wavenum'soc2000 = 13 if w4soc2000==42
replace r`wavenum'soc2000 = 14 if w4soc2000==51
replace r`wavenum'soc2000 = 15 if w4soc2000==52
replace r`wavenum'soc2000 = 16 if w4soc2000==53
replace r`wavenum'soc2000 = 17 if w4soc2000==54
replace r`wavenum'soc2000 = 18 if w4soc2000==61
replace r`wavenum'soc2000 = 19 if w4soc2000==62
replace r`wavenum'soc2000 = 20 if w4soc2000==71
replace r`wavenum'soc2000 = 21 if w4soc2000==72
replace r`wavenum'soc2000 = 22 if w4soc2000==81
replace r`wavenum'soc2000 = 23 if w4soc2000==82
replace r`wavenum'soc2000 = 24 if w4soc2000==91
replace r`wavenum'soc2000 = 25 if w4soc2000==92
replace r`wavenum'soc2000 = .w if r`wavenum'work==0
label variable r`wavenum'soc2000 "r`wavenum'soc2000:w`wavenum' r cur job occup/2000 soc coding"
label values r`wavenum'soc2000 soc

*wave 4 spouse job category soc2000
gen s`wavenum'soc2000 = .
spouse r`wavenum'soc2000, result(s`wavenum'soc2000) wave(`wavenum')
label variable s`wavenum'soc2000 "s`wavenum'soc2000:w`wavenum' s cur job occup/2000 soc coding"
label values s`wavenum'soc2000 soc


***drop ELSA wave 4 core file raw variables***
drop `employ_w4_core'

***drop ELSA wave 4 financial derived file raw variables***
drop `employ_w4_fina'

******************************************************************************************

*set wave number
local wavenum = 5
local pre_wavenum = `wavenum' - 1

***merge with wave 5 core data***
local employ_w5_core askpx indager ///
                     wpactvw wpactca wpactlo wpacted wpact96 wpactw wpactpw wpaway wpactse wpmoj ///
                     wpes wpdes ///
                     wphjob wphwrk wphmsj ///
                     wpwlym ///
                     wpjact ///
                     iintdaty iintdatm wpsjoby wpsjobm ///
                     wpjob wpjobl wpever wplljm wplljy ///
                     wpemp wpstj ///
                     w5nssec askinst scworkg w5scwt w5nssec8 w5soc2000 
merge 1:1 idauniq using "$wave_5_core", keepusing(`employ_w5_core') nogen

***merge with wave 5 financial derived variables data***
local employ_w5_fina thp_r_i thp_r_t
merge 1:1 idauniq using "$wave_5_fina", keepusing(`employ_w5_fina') nogen


***Currently working for pay***
*wave 5 respondent working for pay
gen r`wavenum'work=.
missing_w`wavenum' wpactpw,result(r`wavenum'work)
replace r`wavenum'work = 0 if inlist(wpactvw,0,1) | ///
                      inlist(wpactca,0,1) | ///
                      inlist(wpactlo,0,1) | ///
                      inlist(wpacted,0,1) | ///
                      inlist(wpact96,0,1) 
replace r`wavenum'work = 1 if wpactpw == 1 | wpactse == 1
label variable r`wavenum'work "r`wavenum'work:w`wavenum' R working for pay"

*wave 5 spouse working for pay
gen s`wavenum'work=.
spouse r`wavenum'work, result(s`wavenum'work) wave(`wavenum')
label variable s`wavenum'work "s`wavenum'work:w`wavenum' S working for pay"

*wave 5 respondent works at second job
gen r`wavenum'work2=.
missing_w`wavenum' wpactpw wpmoj, result(r`wavenum'work2)
replace r`wavenum'work2 = .p if askpx == 1
replace r`wavenum'work2=0 if wpmoj == 2 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'work2=1 if wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
label variable r`wavenum'work2 "r`wavenum'work2:w`wavenum' R Works at 2nd job"

*wave 5 spouse works at second job
gen s`wavenum'work2=.
spouse r`wavenum'work2, result(s`wavenum'work2) wave(`wavenum')
label variable s`wavenum'work2 "s`wavenum'work2:w`wavenum' S Works at 2nd job"

*value labels
label values r`wavenum'work rwork
label values s`wavenum'work rwork
label values r`wavenum'work2 rwork
label values s`wavenum'work2 rwork

*check

***Whether self-employed***
*generate preload
gen preload = .
forvalues w = `pre_wavenum' (-1) 0 {
	replace preload = r`w'slfemp if preload == . & inw`wavenum' == 1
}

*wave 5 respondent whether self-employed
gen r`wavenum'slfemp=.
missing_w`wavenum' wpstj wpactpw wpes, result(r`wavenum'slfemp)
replace r`wavenum'slfemp = preload if preload !=. & wpstj == 1
replace r`wavenum'slfemp = 0 if wpes == 1 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'slfemp = 1 if wpes == 2
label variable r`wavenum'slfemp "r`wavenum'slfemp:w`wavenum' r Whether Self-Employed"

*wave 5 spouse whether self-employed
gen s`wavenum'slfemp=.
spouse r`wavenum'slfemp, result(s`wavenum'slfemp) wave(`wavenum')
label variable s`wavenum'slfemp "s`wavenum'slfemp:w`wavenum' s Whether Self-Employed"

*value labels
label values r`wavenum'slfemp slfemp
label values s`wavenum'slfemp slfemp

*check

*drop preload variables
drop preload

***labor force status***
*wave 5 respondent labor force status
gen r`wavenum'lbrf_e=.
missing_w`wavenum' wpdes, result(r`wavenum'lbrf_e)
replace r`wavenum'lbrf_e = .o if wpdes == 95 | wpdes == 85 | wpdes == 86
replace r`wavenum'lbrf_e = 1 if wpdes == 2
replace r`wavenum'lbrf_e = 2 if wpdes == 3
replace r`wavenum'lbrf_e = 3 if wpdes == 4
replace r`wavenum'lbrf_e = 4 if wpdes == 96
replace r`wavenum'lbrf_e = 5 if wpdes == 1
replace r`wavenum'lbrf_e = 6 if wpdes == 5
replace r`wavenum'lbrf_e = 7 if wpdes == 6
label variable r`wavenum'lbrf_e "r`wavenum'lbrf_e:w`wavenum' R labor force status"

*wave 5 spouse labor force status
gen s`wavenum'lbrf_e=.
spouse r`wavenum'lbrf_e, result(s`wavenum'lbrf_e) wave(`wavenum')
label variable s`wavenum'lbrf_e "s`wavenum'lbrf_e:w`wavenum' S labor force status"

*value labels 
label values r`wavenum'lbrf_e lbrf_e
label values s`wavenum'lbrf_e lbrf_e

*check


***labor force status***
*wave 5 respondent labor force status in the labor force
gen r`wavenum'inlbrf=.
missing_w`wavenum' wpdes, result(r`wavenum'inlbrf)
replace r`wavenum'inlbrf = .o if inlist(wpdes,85,86,95)
replace r`wavenum'inlbrf = 0 if inrange(r`wavenum'lbrf_e,5,7)
replace r`wavenum'inlbrf = 1 if inrange(r`wavenum'lbrf_e,1,4)

label variable r`wavenum'inlbrf "r`wavenum'inlbrf:W`wavenum' =1 if r is in the labor force"

*wave 5 spouse labor force status
gen s`wavenum'inlbrf=.
spouse r`wavenum'inlbrf, result(s`wavenum'inlbrf) wave(`wavenum')
label variable s`wavenum'inlbrf "s`wavenum'inlbrf:W`wavenum' =1 if s is in the labor force"

*value labels
label values r`wavenum'inlbrf force
label values s`wavenum'inlbrf force

*check

**labor force status***
*wave 5 respondent labor force status unemployed
gen r`wavenum'unemp=.
missing_w`wavenum' wpdes, result(r`wavenum'unemp)
replace r`wavenum'unemp = .o if inlist(wpdes,85,86,95)
replace r`wavenum'unemp = .x if inlist(r`wavenum'lbrf_e,5,6,7)
replace r`wavenum'unemp = 0 if inlist(r`wavenum'lbrf_e,1,2,4)
replace r`wavenum'unemp = 1 if r`wavenum'lbrf_e == 3

label variable r`wavenum'unemp "r`wavenum'unemp:w`wavenum' =1 if r is unemployed"

*wave 5 spouse labor force status
gen s`wavenum'unemp=.
spouse r`wavenum'unemp, result(s`wavenum'unemp) wave(`wavenum')
label variable s`wavenum'unemp "s`wavenum'unemp:w`wavenum' =1 if s is unemployed"

*value labels
label values r`wavenum'unemp force
label values s`wavenum'unemp force

*check


***Hours of work per week at current job***
*wave 5 respondent hours of work per week at main job
gen r`wavenum'jhours=.
missing_w`wavenum' wpactpw wpes wphjob wphwrk, result(r`wavenum'jhours)
replace r`wavenum'jhours = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhours = .p if askpx == 1
replace r`wavenum'jhours = wphjob if inrange(wphjob,1,168) & wpes == 1
replace r`wavenum'jhours = wphwrk if inrange(wphwrk,1,168) & wpes == 2
label variable r`wavenum'jhours "r`wavenum'jhours:w`wavenum' r Hours worked/week main job"

*wave 5 spouse Hours of work per week at main job
gen s`wavenum'jhours=.
spouse r`wavenum'jhours, result(s`wavenum'jhours) wave(`wavenum')
label variable s`wavenum'jhours "s`wavenum'jhours:w`wavenum' s Hours worked/week main job"

*wave 5 respondent hours worked per week at 2nd job
gen r`wavenum'jhour2_e=.
missing_w`wavenum' wpactpw wpmoj wphmsj, result(r`wavenum'jhour2_e)
replace r`wavenum'jhour2_e = .w if wpmoj == 2 | (wpmoj == 1 & wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhour2_e = .p if askpx == 1
replace r`wavenum'jhour2_e = wphmsj/4.333 if inrange(wphmsj,1,700) & wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
replace r`wavenum'jhour2_e = .i if wphmsj>700 & wpmoj == 1 & (wpactpw == 1 | wpactse == 1) /* MV ADDED */
label variable r`wavenum'jhour2_e "r`wavenum'jhour2_e:w`wavenum' r Hours worked/week 2nd job"

*wave 5 spouse hours worked per week at 2nd job
gen s`wavenum'jhour2_e=.
spouse r`wavenum'jhour2_e, result(s`wavenum'jhour2_e) wave(`wavenum')
label variable s`wavenum'jhour2_e "s`wavenum'jhour2_e:w`wavenum' s Hours worked/week 2nd job"

*check

***Weeks worked per year***
*wave 5 respondent weeks worked per year
gen r`wavenum'jweeks_e=.
missing_w`wavenum' wpwlym, result(r`wavenum'jweeks_e)
replace r`wavenum'jweeks_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jweeks_e = .p if askpx == 1
replace r`wavenum'jweeks_e = wpwlym if inrange(wpwlym,1,52)
label variable r`wavenum'jweeks_e "r`wavenum'jweeks_e:w`wavenum' r Weeks worked/year"

*wave 5 spouse weeks worked per year
gen s`wavenum'jweeks_e=.
spouse r`wavenum'jweeks_e, result(s`wavenum'jweeks_e) wave(`wavenum')
label variable s`wavenum'jweeks_e "s`wavenum'jweeks_e:w`wavenum' s Weeks worked/year"

*check

***Wage rate***
*wave 5 respondent Imputed Wage Rate-Hrly
gen r`wavenum'wgihr_e =.
missing_w`wavenum' wpactpw wpes wphjob wphwrk, result(r`wavenum'wgihr_e)
replace r`wavenum'wgihr_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'wgihr_e = .p if askpx == 1
replace r`wavenum'wgihr_e = 0 if thp_r_i == 0
replace r`wavenum'wgihr_e = thp_r_i/wphjob if thp_r_i > 0 & inrange(wphjob,1,168) & wpes == 1
replace r`wavenum'wgihr_e = thp_r_i/wphwrk if thp_r_i > 0 & inrange(wphwrk,1,168) & wpes == 2
label variable r`wavenum'wgihr_e "r`wavenum'wgihr_e:w`wavenum' r Imputed Wage Rate-Hrly"

*wave 5 spouse Iputed Wage Rate-Hrly
gen s`wavenum'wgihr_e =.
spouse r`wavenum'wgihr_e, result(s`wavenum'wgihr_e) wave(`wavenum')
label variable s`wavenum'wgihr_e "s`wavenum'wgihr_e:w`wavenum' s Imputed Wage Rate-Hrly"

*wave 5 respondent Imputed Wage Rate-Wkly
gen r`wavenum'wgiwk_e =.
replace r`wavenum'wgiwk_e = thp_r_i
replace r`wavenum'wgiwk_e = .i if r`wavenum'wgiwk_e==. & inlist(askinst,1,2)
label variable r`wavenum'wgiwk_e "r`wavenum'wgiwk_e:w`wavenum' r Imputed Wage Rate-Wkly"

*wave 5 spouse Iputed Wage Rate-Wkly
gen s`wavenum'wgiwk_e =.
spouse r`wavenum'wgiwk_e, result(s`wavenum'wgiwk_e) wave(`wavenum')
label variable s`wavenum'wgiwk_e "s`wavenum'wgiwk_e:w`wavenum' s Imputed Wage Rate-Wkly"

*wave 5 respondent Impute Flag Wage Rate-Hrly
gen r`wavenum'wgfhr_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfhr_e)
replace r`wavenum'wgfhr_e = 11 if mi(r`wavenum'jhours) & mi(r`wavenum'wgihr_e) & inw`wavenum' == 1
label variable r`wavenum'wgfhr_e "r`wavenum'wgfhr_e:w`wavenum' r Impute Flag Wage Rate-Hrly"

*wave 5 spouse Impute Flag Wage Rate-Hrly
gen s`wavenum'wgfhr_e=.
spouse r`wavenum'wgfhr_e, result(s`wavenum'wgfhr_e) wave(`wavenum')
label variable s`wavenum'wgfhr_e "s`wavenum'wgfhr_e:w`wavenum' s Impute Flag Wage Rate-Hrly"

*wave 5 respondent Impute Flag Wage Rate-Wkly
gen r`wavenum'wgfwk_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfwk_e)
label variable r`wavenum'wgfwk_e "r`wavenum'wgfwk_e:w`wavenum' r Impute Flag Wage Rate-Wkly"

*wave 5 spouse Impute Flag Wage Rate-Wkly
gen s`wavenum'wgfwk_e=.
spouse r`wavenum'wgfwk_e, result(s`wavenum'wgfwk_e) wave(`wavenum')
label variable s`wavenum'wgfwk_e "s`wavenum'wgfwk_e:w`wavenum' s Impute Flag Wage Rate-Wkly"

*value labels
*label values r`wavenum'wgiwk_e wgf_e
*label values s`wavenum'wgiwk_e wgf_e
label values r`wavenum'wgfhr_e wgf_e
label values s`wavenum'wgfhr_e wgf_e
label values r`wavenum'wgfwk_e wgf_e
label values s`wavenum'wgfwk_e wgf_e

*check


***Current job requires lots of physical effort***
*wave 5 respondent whether job requires physical effort
gen r`wavenum'jphysa=.
missing_w`wavenum' wpactpw wpjact, result(r`wavenum'jphysa)
replace r`wavenum'jphysa = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jphysa = .p if askpx == 1
replace r`wavenum'jphysa =1 if wpjact == 1
replace r`wavenum'jphysa =2 if wpjact == 2
replace r`wavenum'jphysa =3 if wpjact == 3
replace r`wavenum'jphysa =4 if wpjact == 4
label variable r`wavenum'jphysa "r`wavenum'jphysa:w`wavenum' r Cur job req lots phys effort"

*wave 5 spouse whether job requires physical effort
gen s`wavenum'jphysa=.
spouse r`wavenum'jphysa, result(s`wavenum'jphysa) wave(`wavenum')
label variable s`wavenum'jphysa "s`wavenum'jphysa:w`wavenum' s Cur job req lots phys effort"

*value labels
label values r`wavenum'jphysa jphys_e
label values s`wavenum'jphysa jphys_e

*check

***Current job - under pressure due to heavy workload***
*wave 5 respondent under pressure due to heavy workload
gen r`wavenum'jpress=.
missing_w`wavenum' wpactpw wpactse scworkg, result(r`wavenum'jpress)
replace r`wavenum'jpress = .c if inrange(w5scwt,0,10)
replace r`wavenum'jpress = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jpress = .p if askpx == 1
replace r`wavenum'jpress =1 if scworkg == 1
replace r`wavenum'jpress =2 if scworkg == 2
replace r`wavenum'jpress =3 if scworkg == 3
replace r`wavenum'jpress =4 if scworkg == 4
label variable r`wavenum'jpress "r`wavenum'jpress:w`wavenum' r under pressure due to workload"

*wave 5 spouse under pressure due to heavy workload
gen s`wavenum'jpress=.
spouse r`wavenum'jpress, result(s`wavenum'jpress) wave(`wavenum')
label variable s`wavenum'jpress "s`wavenum'jpress:w`wavenum' s under pressure due to workload"

*value labels
label values r`wavenum'jpress agree
label values s`wavenum'jpress agree

***Years of tenure on current job***
*generate preloads
gen preload = .
gen preload_f = .
gen preload_y = .
gen preload_m = .
gen preload_s = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'jcten if preload == . & inw`wavenum' == 1
	replace preload_f = r`w'fjcten if preload != . & preload == r`w'jcten & preload_f == . & inw`wavenum' == 1
	replace preload_y = r`w'iwindy if preload != . & preload == r`w'jcten & preload_y == . & inw`wavenum' == 1
	replace preload_m = r`w'iwindm if preload != . & preload == r`w'jcten & preload_m == . & inw`wavenum' == 1
	replace preload_s = r`w'slfemp if preload != . & preload == r`w'jcten & preload_s == . & inw`wavenum' == 1
}

*wave 5 respondent years of tenure on current job
gen r`wavenum'jcten=.
missing_w`wavenum' wpactpw wpsjoby wpsjobm, result(r`wavenum'jcten)
replace r`wavenum'jcten = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & !inlist(r`wavenum'jcten,.r,.d)
replace r`wavenum'jcten = r1jcten if mi(r1jcten) & r1jcten != . & ((r1slfemp == 1 & inw2 == 1) | wpemp == 1)
replace r`wavenum'jcten = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jcten = .p if askpx == 1 
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(preload_y,preload_m))/12,.1) + preload ///
	if inrange(iintdaty,2000,2020) & inrange(iintdatm,1,12) & ///
	   inrange(preload_y,2000,2020) & inrange(preload_m,1,12) & ///
	   (preload_s == 1 | wpemp == 1) & !mi(preload)
replace r`wavenum'jcten = iintdaty - wpsjoby ///
	if inrange(iintdaty,2000,2020) & ///
	   inrange(wpsjoby,1900,2020) & inrange(wpsjobm,13,17)
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(wpsjoby,wpsjobm))/12,.1) ///
	if inrange(iintdaty,2000,2020) & inrange(iintdatm,1,12) & ///
	   inrange(wpsjoby,1900,2020) & inrange(wpsjobm,1,12)
label variable r`wavenum'jcten "r`wavenum'jcten:w`wavenum' r Current Job Tenure"

*wave 5 spouse years of tenure on current job
gen s`wavenum'jcten=.
spouse r`wavenum'jcten, result(s`wavenum'jcten) wave(`wavenum')
label variable s`wavenum'jcten "s`wavenum'jcten:w`wavenum' s Current Job Tenure"

*wave 5 flag respondent years of tenure on current job
gen r`wavenum'fjcten = . 
replace r`wavenum'fjcten = .m if mi(r`wavenum'jcten) & inw`wavenum'==1
replace r`wavenum'fjcten = preload_f if (preload_s == 1 | wpemp == 1) & !mi(preload_f)
replace r`wavenum'fjcten = 0 if !mi(r`wavenum'jcten) & inrange(wpsjobm,1,12)
replace r`wavenum'fjcten = 1 if !mi(r`wavenum'jcten) & wpsjobm == 13
replace r`wavenum'fjcten = 2 if !mi(r`wavenum'jcten) & wpsjobm == 14
replace r`wavenum'fjcten = 3 if !mi(r`wavenum'jcten) & wpsjobm == 15
replace r`wavenum'fjcten = 4 if !mi(r`wavenum'jcten) & wpsjobm == 16
replace r`wavenum'fjcten = 5 if !mi(r`wavenum'jcten) & wpsjobm == 17
label variable r`wavenum'fjcten "r`wavenum'fjcten:w`wavenum' r Flag Current Job Tenure"
label values r`wavenum'fjcten fjcten

*wave 5 flag spouse years of tenure on current job
gen s`wavenum'fjcten=.
spouse r`wavenum'fjcten, result(s`wavenum'fjcten) wave(`wavenum')
label variable s`wavenum'fjcten "s`wavenum'fjcten:w`wavenum' s Flag Current Job Tenure"
label values s`wavenum'fjcten fjcten

*check

*drop preload variables
drop preload preload_f preload_y preload_m preload_s

***Occupation code for current job***
*wave 5 respondent occupation code
gen r`wavenum'nssec13=.
missing_w`wavenum' w5nssec r`wavenum'work, result(r`wavenum'nssec13)
replace r`wavenum'nssec13 = .m if w5nssec == -3 
replace r`wavenum'nssec13 = .w if r`wavenum'work == 0 | w5nssec == 14  
replace r`wavenum'nssec13 = .p if askpx == 1
replace r`wavenum'nssec13 = .e if w5nssec == 15
replace r`wavenum'nssec13 = .c if inlist(w5nssec,16,17)
replace r`wavenum'nssec13 = int(w5nssec) if inrange(w5nssec,1,13.999) & r`wavenum'work == 1
label variable r`wavenum'nssec13 "r`wavenum'nssec13:w`wavenum' r current job classification, 13 cat"

*wave 5 spouse occupation code
gen s`wavenum'nssec13=.
spouse r`wavenum'nssec13, result(s`wavenum'nssec13) wave(`wavenum')
label variable s`wavenum'nssec13 "s`wavenum'nssec13:w`wavenum' s current job classification, 13 cat"

*value labels
label values r`wavenum'nssec13 nssec13
label values s`wavenum'nssec13 nssec13

*check

***Occupation code for current job with 8 categories***
*wave 5 respondent occupation code with 8 cats
gen r`wavenum'nssec8=.
missing_w`wavenum' w5nssec r`wavenum'work, result(r`wavenum'nssec8)
replace r`wavenum'nssec8 = .m if w5nssec8 == -3
replace r`wavenum'nssec8 = .w if r`wavenum'work == 0 | w5nssec8 == 8
replace r`wavenum'nssec8 = .p if askpx == 1
replace r`wavenum'nssec8 = .o if w5nssec8 == 99
replace r`wavenum'nssec8 = w5nssec8 if inrange(w5nssec8,1,7) & r`wavenum'work == 1
label variable r`wavenum'nssec8 "r`wavenum'nssec8:w`wavenum' r current job classification, 8 cat"

*wave 5 spouse occupation code
gen s`wavenum'nssec8=.
spouse r`wavenum'nssec8, result(s`wavenum'nssec8) wave(`wavenum')
label variable s`wavenum'nssec8 "s`wavenum'nssec8:w`wavenum' s current job classification, 8 cat"

*value labels
label values r`wavenum'nssec8 nssec8
label values s`wavenum'nssec8 nssec8

***month and year last job ended***
*generate preload
gen preload_m = .
gen preload_y = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload_m = r`w'jlastm if preload_m == . & inw`wavenum' == 1
	replace preload_y = r`w'jlasty if preload_y == . & inw`wavenum' == 1
}

*wave 5 respondent month last job ended
gen r`wavenum'jlastm=.
missing_w`wavenum' wpactpw wpever wpjob wpjobl wplljy wplljm, result(r`wavenum'jlastm)
replace r`wavenum'jlastm = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & !inlist(r`wavenum'jlastm,.r,.d)
replace r`wavenum'jlastm = .t if inlist(wpaway,1,3)
replace r`wavenum'jlastm = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlastm = .n if wpactpw == 0 & wpactse == 0 & wpever == 2
replace r`wavenum'jlastm = preload_m if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | wpjob == 2) /// 
                                & preload_m != .
replace r`wavenum'jlastm = .p if askpx == 1
replace r`wavenum'jlastm = .y if inrange(wplljy,1900,1990)
replace r`wavenum'jlastm = wplljm if inrange(wplljm,1,17)
label variable r`wavenum'jlastm "r`wavenum'jlastm:w`wavenum' r Month Last Worked/not working"
label values r`wavenum'jlastm xmonth

*wave 5 spouse month last job ended
gen s`wavenum'jlastm=.
spouse r`wavenum'jlastm, result(s`wavenum'jlastm) wave(`wavenum')
label variable s`wavenum'jlastm "s`wavenum'jlastm:w`wavenum' s Month Last Worked/not working"
label values s`wavenum'jlastm xmonth

*wave 5 respondent year last job ended
gen r`wavenum'jlasty=.
missing_w`wavenum' wpactpw wpever wpjob wpjobl wplljy, result(r`wavenum'jlasty)
replace r`wavenum'jlasty = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11) & inw`wavenum'==1 & !inlist(r`wavenum'jlasty,.r,.d)
replace r`wavenum'jlasty = .t if inlist(wpaway,1,3)
replace r`wavenum'jlasty = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlasty = .n if wpactpw == 0 & wpactse == 0 & wpever == 2
replace r`wavenum'jlasty = preload_y if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | wpjob == 2) /// 
                                & preload_y != .
replace r`wavenum'jlasty = .p if askpx == 1
replace r`wavenum'jlasty = wplljy if inrange(wplljy,1900,2050)
label variable r`wavenum'jlasty "r`wavenum'jlasty:w`wavenum' r Year Last Worked/not working"

*wave 5 spouse year last job ended
gen s`wavenum'jlasty=.
spouse r`wavenum'jlasty, result(s`wavenum'jlasty) wave(`wavenum')
label variable s`wavenum'jlasty "s`wavenum'jlasty:w`wavenum' s Year Last Worked/not working"

*check

*drop preload variables
drop preload_m preload_y

*wave 5 respondent job category soc2000
gen r`wavenum'soc2000 = .
missing_w5 w5soc2000 r`wavenum'work, result(r`wavenum'soc2000)
replace r`wavenum'soc2000 = .m if w5soc2000==-3
replace r`wavenum'soc2000 = 1 if w5soc2000==11
replace r`wavenum'soc2000 = 2 if w5soc2000==12
replace r`wavenum'soc2000 = 3 if w5soc2000==21
replace r`wavenum'soc2000 = 4 if w5soc2000==22
replace r`wavenum'soc2000 = 5 if w5soc2000==23
replace r`wavenum'soc2000 = 6 if w5soc2000==24
replace r`wavenum'soc2000 = 7 if w5soc2000==31
replace r`wavenum'soc2000 = 8 if w5soc2000==32
replace r`wavenum'soc2000 = 9 if w5soc2000==33
replace r`wavenum'soc2000 = 10 if w5soc2000==34
replace r`wavenum'soc2000 = 11 if w5soc2000==35
replace r`wavenum'soc2000 = 12 if w5soc2000==41
replace r`wavenum'soc2000 = 13 if w5soc2000==42
replace r`wavenum'soc2000 = 14 if w5soc2000==51
replace r`wavenum'soc2000 = 15 if w5soc2000==52
replace r`wavenum'soc2000 = 16 if w5soc2000==53
replace r`wavenum'soc2000 = 17 if w5soc2000==54
replace r`wavenum'soc2000 = 18 if w5soc2000==61
replace r`wavenum'soc2000 = 19 if w5soc2000==62
replace r`wavenum'soc2000 = 20 if w5soc2000==71
replace r`wavenum'soc2000 = 21 if w5soc2000==72
replace r`wavenum'soc2000 = 22 if w5soc2000==81
replace r`wavenum'soc2000 = 23 if w5soc2000==82
replace r`wavenum'soc2000 = 24 if w5soc2000==91
replace r`wavenum'soc2000 = 25 if w5soc2000==92
replace r`wavenum'soc2000 = .w if r`wavenum'work==0
label variable r`wavenum'soc2000 "r`wavenum'soc2000:w`wavenum' r cur job occup/2000 soc coding"
label values r`wavenum'soc2000 soc

*wave 5 spouse job category soc2000
gen s`wavenum'soc2000 = .
spouse r`wavenum'soc2000, result(s`wavenum'soc2000) wave(`wavenum')
label variable s`wavenum'soc2000 "s`wavenum'soc2000:w`wavenum' s cur job occup/2000 soc coding"
label values s`wavenum'soc2000 soc


***drop ELSA wave 5 core file raw variables***
drop `employ_w5_core'

***drop ELSA wave 5 financial derived file raw variables***
drop `employ_w5_fina'

******************************************************************************************

*set wave number
local wavenum = 6
local pre_wavenum = `wavenum' - 1

***merge with wave 6 core data***
local employ_w6_core askpx indager ///
                     wpactvw wpactca wpactlo wpacted wpact96 WPActW wpactpw WpAway wpactse WpMoJ ///
                     WpEs WpDes ///
                     WpHjob WpHwrk WpHmsj ///
                     WpWlym ///
                     WpJAct ///
                     iintdaty iintdatm WpsjobY  WpsjobM ///
                     Wpjob Wpjobl Wpever WplljM WplljY ///
                     WpEmp Wpstj ///
                     w6nssec8 w6nssec13 askinst scworkg w6scwt w6soc2000 
merge 1:1 idauniq using "$wave_6_core", keepusing(`employ_w6_core') nogen

***merge with wave 6 financial derived variables data***
local employ_w6_fina thp_r_i thp_r_t
merge 1:1 idauniq using "$wave_6_fina", keepusing(`employ_w6_fina') nogen


***Currently working for pay***
*wave 6 respondent working for pay
gen r`wavenum'work=.
missing_w`wavenum' wpactpw,result(r`wavenum'work)
replace r`wavenum'work = 0 if inlist(wpactvw,0,1) | ///
                      inlist(wpactca,0,1) | ///
                      inlist(wpactlo,0,1) | ///
                      inlist(wpacted,0,1) | ///
                      inlist(wpact96,0,1) 
replace r`wavenum'work = 1 if wpactpw == 1 | wpactse == 1
label variable r`wavenum'work "r`wavenum'work:w`wavenum' R working for pay"

*wave 6 spouse working for pay
gen s`wavenum'work=.
spouse r`wavenum'work, result(s`wavenum'work) wave(`wavenum')
label variable s`wavenum'work "s`wavenum'work:w`wavenum' S working for pay"

*wave 6 respondent works at second job
gen r`wavenum'work2=.
missing_w`wavenum' wpactpw WpMoJ, result(r`wavenum'work2)
replace r`wavenum'work2 = .p if askpx == 1
replace r`wavenum'work2=0 if WpMoJ == 2 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'work2=1 if WpMoJ == 1 & (wpactpw == 1 | wpactse == 1)
label variable r`wavenum'work2 "r`wavenum'work2:w`wavenum' R Works at 2nd job"

*wave 6 spouse works at second job
gen s`wavenum'work2=.
spouse r`wavenum'work2, result(s`wavenum'work2) wave(`wavenum')
label variable s`wavenum'work2 "s`wavenum'work2:w`wavenum' S Works at 2nd job"

*value labels
label values r`wavenum'work rwork
label values s`wavenum'work rwork
label values r`wavenum'work2 rwork
label values s`wavenum'work2 rwork

*check

***Whether self-employed***
*generate preload
gen preload = .
forvalues w = `pre_wavenum' (-1) 0 {
	replace preload = r`w'slfemp if preload == . & inw`wavenum' == 1
}

*wave 6 respondent whether self-employed
gen r`wavenum'slfemp=.
missing_w`wavenum' Wpstj wpactpw WpEs, result(r`wavenum'slfemp)
replace r`wavenum'slfemp = preload if preload !=. & Wpstj== 1
replace r`wavenum'slfemp = 0 if WpEs == 1 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'slfemp = 1 if WpEs == 2
label variable r`wavenum'slfemp "r`wavenum'slfemp:w`wavenum' r Whether Self-Employed"

*wave 6 spouse whether self-employed
gen s`wavenum'slfemp=.
spouse r`wavenum'slfemp, result(s`wavenum'slfemp) wave(`wavenum')
label variable s`wavenum'slfemp "s`wavenum'slfemp:w`wavenum' s Whether Self-Employed"

*value labels
label values r`wavenum'slfemp slfemp
label values s`wavenum'slfemp slfemp

*check

*drop preload variables
drop preload

***labor force status***
*wave 6 respondent labor force status
gen r`wavenum'lbrf_e=.
missing_w`wavenum' WpDes, result(r`wavenum'lbrf_e)
replace r`wavenum'lbrf_e = .o if WpDes == 95 | WpDes == 85
replace r`wavenum'lbrf_e = 1 if WpDes == 2
replace r`wavenum'lbrf_e = 2 if WpDes == 3
replace r`wavenum'lbrf_e = 3 if WpDes == 4
replace r`wavenum'lbrf_e = 4 if WpDes == 96
replace r`wavenum'lbrf_e = 5 if WpDes == 1
replace r`wavenum'lbrf_e = 6 if WpDes == 5
replace r`wavenum'lbrf_e = 7 if WpDes == 6
label variable r`wavenum'lbrf_e "r`wavenum'lbrf_e:w`wavenum' R labor force status"

*wave 6 spouse labor force status
gen s`wavenum'lbrf_e=.
spouse r`wavenum'lbrf_e, result(s`wavenum'lbrf_e) wave(`wavenum')
label variable s`wavenum'lbrf_e "s`wavenum'lbrf_e:w`wavenum' S labor force status"

*value labels 
label values r`wavenum'lbrf_e lbrf_e
label values s`wavenum'lbrf_e lbrf_e

*check


***labor force status***
*wave 6 respondent labor force status in the labor force
gen r`wavenum'inlbrf=.
missing_w`wavenum' WpDes, result(r`wavenum'inlbrf)
replace r`wavenum'inlbrf = .o if inlist(WpDes,85,86,95)
replace r`wavenum'inlbrf = 0 if inrange(r`wavenum'lbrf_e,5,7)
replace r`wavenum'inlbrf = 1 if inrange(r`wavenum'lbrf_e,1,4)

label variable r`wavenum'inlbrf "r`wavenum'inlbrf:W`wavenum' =1 if r is in the labor force"

*wave 6 spouse labor force status
gen s`wavenum'inlbrf=.
spouse r`wavenum'inlbrf, result(s`wavenum'inlbrf) wave(`wavenum')
label variable s`wavenum'inlbrf "s`wavenum'inlbrf:W`wavenum' =1 if s is in the labor force"

*value labels
label values r`wavenum'inlbrf force
label values s`wavenum'inlbrf force

*check

**labor force status***
*wave 6 respondent labor force status unemployed
gen r`wavenum'unemp=.
missing_w`wavenum' WpDes, result(r`wavenum'unemp)
replace r`wavenum'unemp = .o if inlist(WpDes,85,86,95)
replace r`wavenum'unemp = .x if inlist(r`wavenum'lbrf_e,5,6,7)
replace r`wavenum'unemp = 0 if inlist(r`wavenum'lbrf_e,1,2,4)
replace r`wavenum'unemp = 1 if r`wavenum'lbrf_e == 3

label variable r`wavenum'unemp "r`wavenum'unemp:w`wavenum' =1 if r is unemployed"

*wave 6 spouse labor force status
gen s`wavenum'unemp=.
spouse r`wavenum'unemp, result(s`wavenum'unemp) wave(`wavenum')
label variable s`wavenum'unemp "s`wavenum'unemp:w`wavenum' =1 if s is unemployed"

*value labels
label values r`wavenum'unemp force
label values s`wavenum'unemp force

*check

***Hours of work per week at current job***
*wave 6 respondent hours of work per week at main job
gen r`wavenum'jhours=.
missing_w`wavenum' wpactpw WpEs WpHjob WpHwrk, result(r`wavenum'jhours)
replace r`wavenum'jhours = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhours = .p if askpx == 1
replace r`wavenum'jhours = WpHjob if inrange(WpHjob,1,168) & WpEs == 1
replace r`wavenum'jhours = WpHwrk if inrange(WpHwrk,1,168) & WpEs == 2
label variable r`wavenum'jhours "r`wavenum'jhours:w`wavenum' r Hours worked/week main job"

*wave 6 spouse Hours of work per week at main job
gen s`wavenum'jhours=.
spouse r`wavenum'jhours, result(s`wavenum'jhours) wave(`wavenum')
label variable s`wavenum'jhours "s`wavenum'jhours:w`wavenum' s Hours worked/week main job"

*wave 6 respondent hours worked per week at 2nd job
gen r`wavenum'jhour2_e=.
missing_w`wavenum' wpactpw WpMoJ WpHmsj, result(r`wavenum'jhour2_e)
replace r`wavenum'jhour2_e = .w if WpMoJ == 2 | (WpMoJ == 1 & wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhour2_e = .p if askpx == 1
replace r`wavenum'jhour2_e = WpHmsj/4.333 if inrange(WpHmsj,1,700) & WpMoJ == 1 & (wpactpw == 1 | wpactse == 1)
replace r`wavenum'jhour2_e = .i if WpHmsj>700 & WpMoJ == 1 & (wpactpw == 1 | wpactse == 1) /* MV ADDED */
label variable r`wavenum'jhour2_e "r`wavenum'jhour2_e:w`wavenum' r Hours worked/week 2nd job"

*wave 6 spouse hours worked per week at 2nd job
gen s`wavenum'jhour2_e=.
spouse r`wavenum'jhour2_e, result(s`wavenum'jhour2_e) wave(`wavenum')
label variable s`wavenum'jhour2_e "s`wavenum'jhour2_e:w`wavenum' s Hours worked/week 2nd job"

*check

***Weeks worked per year***
*wave 6 respondent weeks worked per year
gen r`wavenum'jweeks_e=.
missing_w`wavenum' WpWlym, result(r`wavenum'jweeks_e)
replace r`wavenum'jweeks_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jweeks_e = .p if askpx == 1
replace r`wavenum'jweeks_e = WpWlym if inrange(WpWlym,1,52)
label variable r`wavenum'jweeks_e "r`wavenum'jweeks_e:w`wavenum' r Weeks worked/year"

*wave 6 spouse weeks worked per year
gen s`wavenum'jweeks_e=.
spouse r`wavenum'jweeks_e, result(s`wavenum'jweeks_e) wave(`wavenum')
label variable s`wavenum'jweeks_e "s`wavenum'jweeks_e:w`wavenum' s Weeks worked/year"

*check

***Wage rate***
*wave 6 respondent Imputed Wage Rate-Hrly
gen r`wavenum'wgihr_e =.
missing_w`wavenum' wpactpw WpEs WpHjob WpHwrk, result(r`wavenum'wgihr_e)
replace r`wavenum'wgihr_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'wgihr_e = .p if askpx == 1
replace r`wavenum'wgihr_e = 0 if thp_r_i == 0
replace r`wavenum'wgihr_e = thp_r_i/WpHjob if thp_r_i > 0 & inrange(WpHjob,1,168) & WpEs == 1
replace r`wavenum'wgihr_e = thp_r_i/WpHwrk if thp_r_i > 0 & inrange(WpHwrk,1,168) & WpEs == 2
label variable r`wavenum'wgihr_e "r`wavenum'wgihr_e:w`wavenum' r Imputed Wage Rate-Hrly"

*wave 6 spouse Iputed Wage Rate-Hrly
gen s`wavenum'wgihr_e =.
spouse r`wavenum'wgihr_e, result(s`wavenum'wgihr_e) wave(`wavenum')
label variable s`wavenum'wgihr_e "s`wavenum'wgihr_e:w`wavenum' s Imputed Wage Rate-Hrly"

*wave 6 respondent Imputed Wage Rate-Wkly
gen r`wavenum'wgiwk_e =.
replace r`wavenum'wgiwk_e = thp_r_i
replace r`wavenum'wgiwk_e = .i if r`wavenum'wgiwk_e==. & inlist(askinst,1,2)
label variable r`wavenum'wgiwk_e "r`wavenum'wgiwk_e:w`wavenum' r Imputed Wage Rate-Wkly"

*wave 6 spouse Imputed Wage Rate-Wkly
gen s`wavenum'wgiwk_e =.
spouse r`wavenum'wgiwk_e, result(s`wavenum'wgiwk_e) wave(`wavenum')
label variable s`wavenum'wgiwk_e "s`wavenum'wgiwk_e:w`wavenum' s Imputed Wage Rate-Wkly"

*wave 6 respondent Impute Flag Wage Rate-Hrly
gen r`wavenum'wgfhr_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfhr_e)
replace r`wavenum'wgfhr_e = 11 if mi(r`wavenum'jhours) & mi(r`wavenum'wgihr_e) & inw`wavenum' == 1
label variable r`wavenum'wgfhr_e "r`wavenum'wgfhr_e:w`wavenum' r Impute Flag Wage Rate-Hrly"

*wave 6 spouse Impute Flag Wage Rate-Hrly
gen s`wavenum'wgfhr_e=.
spouse r`wavenum'wgfhr_e, result(s`wavenum'wgfhr_e) wave(`wavenum')
label variable s`wavenum'wgfhr_e "s`wavenum'wgfhr_e:w`wavenum' s Impute Flag Wage Rate-Hrly"

*wave 6 respondent Impute Flag Wage Rate-Wkly
gen r`wavenum'wgfwk_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfwk_e)
label variable r`wavenum'wgfwk_e "r`wavenum'wgfwk_e:w`wavenum' r Impute Flag Wage Rate-Wkly"

*wave 6 spouse Impute Flag Wage Rate-Wkly
gen s`wavenum'wgfwk_e=.
spouse r`wavenum'wgfwk_e, result(s`wavenum'wgfwk_e) wave(`wavenum')
label variable s`wavenum'wgfwk_e "s`wavenum'wgfwk_e:w`wavenum' s Impute Flag Wage Rate-Wkly"

*value labels
*label values r`wavenum'wgiwk_e wgf_e
*label values s`wavenum'wgiwk_e wgf_e
label values r`wavenum'wgfhr_e wgf_e
label values s`wavenum'wgfhr_e wgf_e
label values r`wavenum'wgfwk_e wgf_e
label values s`wavenum'wgfwk_e wgf_e

**check


***Current job requires lots of physical effort***
*wave 6 respondent whether job requires physical effort
gen r`wavenum'jphysa=.
missing_w`wavenum' wpactpw WpJAct, result(r`wavenum'jphysa)
replace r`wavenum'jphysa = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jphysa = .p if askpx == 1
replace r`wavenum'jphysa =1 if WpJAct == 1
replace r`wavenum'jphysa =2 if WpJAct == 2
replace r`wavenum'jphysa =3 if WpJAct == 3
replace r`wavenum'jphysa =4 if WpJAct == 4
label variable r`wavenum'jphysa "r`wavenum'jphysa:w`wavenum' r Cur job req lots phys effort"

*wave 6 spouse whether job requires physical effort
gen s`wavenum'jphysa=.
spouse r`wavenum'jphysa, result(s`wavenum'jphysa) wave(`wavenum')
label variable s`wavenum'jphysa "s`wavenum'jphysa:w`wavenum' s Cur job req lots phys effort"

*value labels
label values r`wavenum'jphysa jphys_e
label values s`wavenum'jphysa jphys_e

*check

***Current job - under pressure due to heavy workload***
*wave 6 respondent under pressure due to heavy workload
gen r`wavenum'jpress=.
missing_w`wavenum' wpactpw wpactse scworkg, result(r`wavenum'jpress)
replace r`wavenum'jpress = .c if inrange(w6scwt,0,10)
replace r`wavenum'jpress = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jpress = .p if askpx == 1
replace r`wavenum'jpress =1 if scworkg == 1
replace r`wavenum'jpress =2 if scworkg == 2
replace r`wavenum'jpress =3 if scworkg == 3
replace r`wavenum'jpress =4 if scworkg == 4
label variable r`wavenum'jpress "r`wavenum'jpress:w`wavenum' r under pressure due to workload"

*wave 6 spouse under pressure due to heavy workload
gen s`wavenum'jpress=.
spouse r`wavenum'jpress, result(s`wavenum'jpress) wave(`wavenum')
label variable s`wavenum'jpress "s`wavenum'jpress:w`wavenum' s under pressure due to workload"

*value labels
label values r`wavenum'jpress agree
label values s`wavenum'jpress agree

***Years of tenure on current job***
*generate preloads
gen preload = .
gen preload_f = .
gen preload_y = .
gen preload_m = .
gen preload_s = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'jcten if preload == . & inw`wavenum' == 1
	replace preload_f = r`w'fjcten if preload != . & preload == r`w'jcten & preload_f == . & inw`wavenum' == 1
	replace preload_y = r`w'iwindy if preload != . & preload == r`w'jcten & preload_y == . & inw`wavenum' == 1
	replace preload_m = r`w'iwindm if preload != . & preload == r`w'jcten & preload_m == . & inw`wavenum' == 1
	replace preload_s = r`w'slfemp if preload != . & preload == r`w'jcten & preload_s == . & inw`wavenum' == 1
}

*wave 6 respondent years of tenure on current job
gen r`wavenum'jcten=.
missing_w`wavenum' wpactpw WpsjobY WpsjobM, result(r`wavenum'jcten)
replace r`wavenum'jcten = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11,12,13,14,15) & inw`wavenum'==1 & !inlist(r`wavenum'jcten,.r,.d)
replace r`wavenum'jcten = r1jcten if mi(r1jcten) & r1jcten != . & ((r1slfemp == 1 & inw2 == 1) | WpEmp == 1)
replace r`wavenum'jcten = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jcten = .p if askpx == 1 
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(preload_y,preload_m))/12,.1) + preload ///
	if inrange(iintdaty,2000,2020) & inrange(iintdatm,1,12) & ///
	   inrange(preload_y,2000,2020) & inrange(preload_m,1,12) & ///
	   (preload_s == 1 | WpEmp == 1) & !mi(preload)
replace r`wavenum'jcten = iintdaty - WpsjobY ///
	if inrange(iintdaty,2000,2020) & ///
	   inrange(WpsjobY,1900,2020) & inrange(WpsjobM,13,17)
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(WpsjobY,WpsjobM))/12,.1) ///
	if inrange(iintdaty,2000,2020) & inrange(iintdatm,1,12) & ///
	   inrange(WpsjobY,1900,2020) & inrange(WpsjobM,1,12)
label variable r`wavenum'jcten "r`wavenum'jcten:w`wavenum' r Current Job Tenure"

*wave 6 spouse years of tenure on current job
gen s`wavenum'jcten=.
spouse r`wavenum'jcten, result(s`wavenum'jcten) wave(`wavenum')
label variable s`wavenum'jcten "s`wavenum'jcten:w`wavenum' s Current Job Tenure"

*wave 6 flag respondent years of tenure on current job
gen r`wavenum'fjcten = . 
replace r`wavenum'fjcten = .m if mi(r`wavenum'jcten) & inw`wavenum'==1
replace r`wavenum'fjcten = preload_f if (preload_s == 1 | WpEmp == 1) & !mi(preload_f)
replace r`wavenum'fjcten = 0 if !mi(r`wavenum'jcten) & inrange(WpsjobM,1,12)
replace r`wavenum'fjcten = 1 if !mi(r`wavenum'jcten) & WpsjobM == 13
replace r`wavenum'fjcten = 2 if !mi(r`wavenum'jcten) & WpsjobM == 14
replace r`wavenum'fjcten = 3 if !mi(r`wavenum'jcten) & WpsjobM == 15
replace r`wavenum'fjcten = 4 if !mi(r`wavenum'jcten) & WpsjobM == 16
replace r`wavenum'fjcten = 5 if !mi(r`wavenum'jcten) & WpsjobM == 17
label variable r`wavenum'fjcten "r`wavenum'fjcten:w`wavenum' r Flag Current Job Tenure"
label values r`wavenum'fjcten fjcten

*wave 6 flag spouse years of tenure on current job
gen s`wavenum'fjcten=.
spouse r`wavenum'fjcten, result(s`wavenum'fjcten) wave(`wavenum')
label variable s`wavenum'fjcten "s`wavenum'fjcten:w`wavenum' s Flag Current Job Tenure"
label values s`wavenum'fjcten fjcten

**check

*drop preload variables
drop preload preload_f preload_y preload_m preload_s

***Occupation code for current job***
*wave 6 respondent occupation code
gen r`wavenum'nssec13=.
missing_w`wavenum' w6nssec8 w6nssec13 r`wavenum'work, result(r`wavenum'nssec13)
replace r`wavenum'nssec13 = .m if w6nssec8 == -3 
replace r`wavenum'nssec13 = .w if r`wavenum'work == 0 | w6nssec8 == 8
replace r`wavenum'nssec13 = .p if askpx == 1
replace r`wavenum'nssec13 = int(w6nssec13) if inrange(w6nssec13,1,13.999) & r`wavenum'work == 1
label variable r`wavenum'nssec13 "r`wavenum'nssec13:w`wavenum' r current job classification, 13 cat"

*wave 6 spouse occupation code
gen s`wavenum'nssec13=.
spouse r`wavenum'nssec13, result(s`wavenum'nssec13) wave(`wavenum')
label variable s`wavenum'nssec13 "s`wavenum'nssec13:w`wavenum' s current job classification, 13 cat"

*value labels
label values r`wavenum'nssec13 nssec13
label values s`wavenum'nssec13 nssec13

*check

***Occupation code for current job with 8 categories***
*wave 6 respondent occupation code with 8 cats
gen r`wavenum'nssec8=.
missing_w`wavenum' w6nssec8 r`wavenum'work, result(r`wavenum'nssec8)
replace r`wavenum'nssec8 = .m if w6nssec8 == -3 
replace r`wavenum'nssec8 = .w if r`wavenum'work == 0 | w6nssec8 == 8
replace r`wavenum'nssec8 = .p if askpx == 1
replace r`wavenum'nssec8 = .o if w6nssec8 == 99
replace r`wavenum'nssec8 = w6nssec8 if inrange(w6nssec8,1,7) & r`wavenum'work == 1
label variable r`wavenum'nssec8 "r`wavenum'nssec8:w`wavenum' r current job classification, 8 cat"

*wave 6 spouse occupation code
gen s`wavenum'nssec8=.
spouse r`wavenum'nssec8, result(s`wavenum'nssec8) wave(`wavenum')
label variable s`wavenum'nssec8 "s`wavenum'nssec8:w`wavenum' s current job classification, 8 cat"

*value labels
label values r`wavenum'nssec8 nssec8
label values s`wavenum'nssec8 nssec8

***month and year last job ended***
*generate preload
gen preload_m = .
gen preload_y = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload_m = r`w'jlastm if preload_m == . & inw`wavenum' == 1
	replace preload_y = r`w'jlasty if preload_y == . & inw`wavenum' == 1
}

*wave 6 respondent month last job ended
gen r`wavenum'jlastm=.
missing_w`wavenum' wpactpw Wpever Wpjob Wpjobl WplljY WplljM, result(r`wavenum'jlastm)
replace r`wavenum'jlastm = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11,12,13,14,15) & inw`wavenum'==1 & !inlist(r`wavenum'jlastm,.r,.d)
replace r`wavenum'jlastm = .t if inlist(WpAway,1,3)
replace r`wavenum'jlastm = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlastm = .n if wpactpw == 0 & wpactse == 0 & Wpever == 2
replace r`wavenum'jlastm = preload_m if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | Wpjob == 2) /// 
                                & preload_m != .
replace r`wavenum'jlastm = .p if askpx == 1
replace r`wavenum'jlastm = .y if inrange(WplljY,1900,1990)
replace r`wavenum'jlastm = WplljM if inrange(WplljM,1,17)
label variable r`wavenum'jlastm "r`wavenum'jlastm:w`wavenum' r Month Last Worked/not working"
label values r`wavenum'jlastm xmonth

*wave 6 spouse month last job ended
gen s`wavenum'jlastm=.
spouse r`wavenum'jlastm, result(s`wavenum'jlastm) wave(`wavenum')
label variable s`wavenum'jlastm "s`wavenum'jlastm:w`wavenum' s Month Last Worked/not working"
label values s`wavenum'jlastm xmonth

*wave 6 respondent year last job ended
gen r`wavenum'jlasty=.
missing_w`wavenum' wpactpw Wpever Wpjob Wpjobl WplljY, result(r`wavenum'jlasty)
replace r`wavenum'jlasty = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11,12,13,14,15) & inw`wavenum'==1 & !inlist(r`wavenum'jlasty,.r,.d)
replace r`wavenum'jlasty = .t if inlist(WpAway,1,3)
replace r`wavenum'jlasty = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlasty = .n if wpactpw == 0 & wpactse == 0 & Wpever == 2
replace r`wavenum'jlasty = preload_y if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | Wpjob == 2) /// 
                                & preload_y != .
replace r`wavenum'jlasty = .p if askpx == 1
replace r`wavenum'jlasty = WplljY if inrange(WplljY,1900,2013)
label variable r`wavenum'jlasty "r`wavenum'jlasty:w`wavenum' r Year Last Worked/not working"

*wave 6 spouse year last job ended
gen s`wavenum'jlasty=.
spouse r`wavenum'jlasty, result(s`wavenum'jlasty) wave(`wavenum')
label variable s`wavenum'jlasty "s`wavenum'jlasty:w`wavenum' s Year Last Worked/not working"

*check

*drop preload variables
drop preload_m preload_y

*wave 6 respondent job category soc2000
gen r`wavenum'soc2000 = .
missing_w6 w6soc2000 r`wavenum'work, result(r`wavenum'soc2000)
replace r`wavenum'soc2000 = .m if w6soc2000==-3
replace r`wavenum'soc2000 = 1 if w6soc2000==11
replace r`wavenum'soc2000 = 2 if w6soc2000==12
replace r`wavenum'soc2000 = 3 if w6soc2000==21
replace r`wavenum'soc2000 = 4 if w6soc2000==22
replace r`wavenum'soc2000 = 5 if w6soc2000==23
replace r`wavenum'soc2000 = 6 if w6soc2000==24
replace r`wavenum'soc2000 = 7 if w6soc2000==31
replace r`wavenum'soc2000 = 8 if w6soc2000==32
replace r`wavenum'soc2000 = 9 if w6soc2000==33
replace r`wavenum'soc2000 = 10 if w6soc2000==34
replace r`wavenum'soc2000 = 11 if w6soc2000==35
replace r`wavenum'soc2000 = 12 if w6soc2000==41
replace r`wavenum'soc2000 = 13 if w6soc2000==42
replace r`wavenum'soc2000 = 14 if w6soc2000==51
replace r`wavenum'soc2000 = 15 if w6soc2000==52
replace r`wavenum'soc2000 = 16 if w6soc2000==53
replace r`wavenum'soc2000 = 17 if w6soc2000==54
replace r`wavenum'soc2000 = 18 if w6soc2000==61
replace r`wavenum'soc2000 = 19 if w6soc2000==62
replace r`wavenum'soc2000 = 20 if w6soc2000==71
replace r`wavenum'soc2000 = 21 if w6soc2000==72
replace r`wavenum'soc2000 = 22 if w6soc2000==81
replace r`wavenum'soc2000 = 23 if w6soc2000==82
replace r`wavenum'soc2000 = 24 if w6soc2000==91
replace r`wavenum'soc2000 = 25 if w6soc2000==92
replace r`wavenum'soc2000 = .w if r`wavenum'work==0
label variable r`wavenum'soc2000 "r`wavenum'soc2000:w`wavenum' r cur job occup/2000 soc coding"
label values r`wavenum'soc2000 soc

*wave 6 spouse job category soc2000
gen s`wavenum'soc2000 = .
spouse r`wavenum'soc2000, result(s`wavenum'soc2000) wave(`wavenum')
label variable s`wavenum'soc2000 "s`wavenum'soc2000:w`wavenum' s cur job occup/2000 soc coding"
label values s`wavenum'soc2000 soc


***drop ELSA wave 6 core file raw variables***
drop `employ_w6_core'

***drop ELSA wave 6 financial derived file raw variables***
drop `employ_w6_fina'

******************************************************************************************


*set wave number
local wavenum = 7
local pre_wavenum = `wavenum' - 1

***merge with wave 7 core data***
local employ_w7_core askpx indager ///
                     wpactvw wpactca wpactlo wpacted wpact96 WPActW wpactpw WpAway wpactse WpMoJ ///
                     WpEs WpDes ///
                     WpHjob WpHwrk WpHmsj ///
                     WpWlym ///
                     WpJAct ///
                     iintdaty iintdatm WpsjobY  WpsjobM ///
                     Wpjob Wpjobl Wpever WplljM WplljY ///
                     WpEmp Wpstj ///
                     NSSEC askinst WPAskD scworkg w7scwt 
merge 1:1 idauniq using "$wave_7_core", keepusing(`employ_w7_core') nogen

***merge with wave 7 financial derived variables data***
local employ_w7_fina thp_r_i thp_r_t
merge 1:1 idauniq using "$wave_7_fina", keepusing(`employ_w7_fina') nogen


***Currently working for pay***
*wave 7 respondent working for pay
gen r`wavenum'work=.
missing_w`wavenum' wpactpw,result(r`wavenum'work)
replace r`wavenum'work = 0 if inlist(wpactvw,0,1) | ///
                      inlist(wpactca,0,1) | ///
                      inlist(wpactlo,0,1) | ///
                      inlist(wpacted,0,1) | ///
                      inlist(wpact96,0,1) 
replace r`wavenum'work = 1 if wpactpw == 1 | wpactse == 1
label variable r`wavenum'work "r`wavenum'work:w`wavenum' R working for pay"

*wave 7 spouse working for pay
gen s`wavenum'work=.
spouse r`wavenum'work, result(s`wavenum'work) wave(`wavenum')
label variable s`wavenum'work "s`wavenum'work:w`wavenum' S working for pay"

*wave 7 respondent works at second job
gen r`wavenum'work2=.
missing_w`wavenum' wpactpw WpMoJ, result(r`wavenum'work2)
replace r`wavenum'work2 = .p if askpx == 1
replace r`wavenum'work2=0 if WpMoJ == 2 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'work2=1 if WpMoJ == 1 & (wpactpw == 1 | wpactse == 1)
label variable r`wavenum'work2 "r`wavenum'work2:w`wavenum' R Works at 2nd job"

*wave 7 spouse works at second job
gen s`wavenum'work2=.
spouse r`wavenum'work2, result(s`wavenum'work2) wave(`wavenum')
label variable s`wavenum'work2 "s`wavenum'work2:w`wavenum' S Works at 2nd job"

*value labels
label values r`wavenum'work rwork
label values s`wavenum'work rwork
label values r`wavenum'work2 rwork
label values s`wavenum'work2 rwork

*check

***Whether self-employed***
*generate preload
gen preload = .
forvalues w = `pre_wavenum' (-1) 0 {
	replace preload = r`w'slfemp if preload == . & inw`wavenum' == 1
}

*wave 7 respondent whether self-employed
gen r`wavenum'slfemp=.
missing_w`wavenum' Wpstj wpactpw WpEs, result(r`wavenum'slfemp)
replace r`wavenum'slfemp = preload if preload !=. & Wpstj== 1
replace r`wavenum'slfemp = 0 if WpEs == 1 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'slfemp = 1 if WpEs == 2
label variable r`wavenum'slfemp "r`wavenum'slfemp:w`wavenum' r Whether Self-Employed"

*wave 7 spouse whether self-employed
gen s`wavenum'slfemp=.
spouse r`wavenum'slfemp, result(s`wavenum'slfemp) wave(`wavenum')
label variable s`wavenum'slfemp "s`wavenum'slfemp:w`wavenum' s Whether Self-Employed"

*value labels
label values r`wavenum'slfemp slfemp
label values s`wavenum'slfemp slfemp

*check

*drop preload variables
drop preload

***labor force status***
*wave 7 respondent labor force status
gen r`wavenum'lbrf_e=.
missing_w`wavenum' WpDes, result(r`wavenum'lbrf_e)
replace r`wavenum'lbrf_e = .m if WpDes == 86
replace r`wavenum'lbrf_e = .o if inlist(WpDes,95,85)
replace r`wavenum'lbrf_e = 1 if WpDes == 2
replace r`wavenum'lbrf_e = 2 if WpDes == 3
replace r`wavenum'lbrf_e = 3 if WpDes == 4
replace r`wavenum'lbrf_e = 4 if WpDes == 96
replace r`wavenum'lbrf_e = 5 if WpDes == 1
replace r`wavenum'lbrf_e = 6 if WpDes == 5
replace r`wavenum'lbrf_e = 7 if WpDes == 6
label variable r`wavenum'lbrf_e "r`wavenum'lbrf_e:w`wavenum' R labor force status"

*wave 7 spouse labor force status
gen s`wavenum'lbrf_e=.
spouse r`wavenum'lbrf_e, result(s`wavenum'lbrf_e) wave(`wavenum')
label variable s`wavenum'lbrf_e "s`wavenum'lbrf_e:w`wavenum' S labor force status"

*value labels 
label values r`wavenum'lbrf_e lbrf_e
label values s`wavenum'lbrf_e lbrf_e

*check


***labor force status***
*wave 7 respondent labor force status in the labor force
gen r`wavenum'inlbrf=.
missing_w`wavenum' WpDes, result(r`wavenum'inlbrf)
replace r`wavenum'inlbrf = .m if WpDes == 86
replace r`wavenum'inlbrf = .o if inlist(WpDes,85,95)
replace r`wavenum'inlbrf = 0 if inrange(r`wavenum'lbrf_e,5,7)
replace r`wavenum'inlbrf = 1 if inrange(r`wavenum'lbrf_e,1,4)

label variable r`wavenum'inlbrf "r`wavenum'inlbrf:W`wavenum' =1 if r is in the labor force"

*wave 7 spouse labor force status
gen s`wavenum'inlbrf=.
spouse r`wavenum'inlbrf, result(s`wavenum'inlbrf) wave(`wavenum')
label variable s`wavenum'inlbrf "s`wavenum'inlbrf:W`wavenum' =1 if s is in the labor force"

*value labels
label values r`wavenum'inlbrf force
label values s`wavenum'inlbrf force

*check

**labor force status***
*wave 7 respondent labor force status unemployed
gen r`wavenum'unemp=.
missing_w`wavenum' WpDes, result(r`wavenum'unemp)
replace r`wavenum'unemp = .m if WpDes == 86
replace r`wavenum'unemp = .o if inlist(WpDes,85,95)
replace r`wavenum'unemp = .x if inlist(r`wavenum'lbrf_e,5,6,7)
replace r`wavenum'unemp = 0 if inlist(r`wavenum'lbrf_e,1,2,4)
replace r`wavenum'unemp = 1 if r`wavenum'lbrf_e == 3

label variable r`wavenum'unemp "r`wavenum'unemp:w`wavenum' =1 if r is unemployed"

*wave 7 spouse labor force status
gen s`wavenum'unemp=.
spouse r`wavenum'unemp, result(s`wavenum'unemp) wave(`wavenum')
label variable s`wavenum'unemp "s`wavenum'unemp:w`wavenum' =1 if s is unemployed"

*value labels
label values r`wavenum'unemp force
label values s`wavenum'unemp force

*check

***Hours of work per week at current job***
*wave 7 respondent hours of work per week at main job
gen r`wavenum'jhours=.
missing_w`wavenum' wpactpw WpEs WpHjob WpHwrk, result(r`wavenum'jhours)
replace r`wavenum'jhours = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhours = .p if askpx == 1
replace r`wavenum'jhours = WpHjob if inrange(WpHjob,1,168) & WpEs == 1
replace r`wavenum'jhours = WpHwrk if inrange(WpHwrk,1,168) & WpEs == 2
label variable r`wavenum'jhours "r`wavenum'jhours:w`wavenum' r Hours worked/week main job"

*wave 7 spouse Hours of work per week at main job
gen s`wavenum'jhours=.
spouse r`wavenum'jhours, result(s`wavenum'jhours) wave(`wavenum')
label variable s`wavenum'jhours "s`wavenum'jhours:w`wavenum' s Hours worked/week main job"

*wave 7 respondent hours worked per week at 2nd job
gen r`wavenum'jhour2_e=.
missing_w`wavenum' wpactpw WpMoJ WpHmsj, result(r`wavenum'jhour2_e)
replace r`wavenum'jhour2_e = .w if WpMoJ == 2 | (WpMoJ == 1 & wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhour2_e = .p if askpx == 1
replace r`wavenum'jhour2_e = WpHmsj/4.333 if inrange(WpHmsj,1,700) & WpMoJ == 1 & (wpactpw == 1 | wpactse == 1)
replace r`wavenum'jhour2_e = .i if WpHmsj>700 & WpMoJ == 1 & (wpactpw == 1 | wpactse == 1) /* MV ADDED */
label variable r`wavenum'jhour2_e "r`wavenum'jhour2_e:w`wavenum' r Hours worked/week 2nd job"

*wave 7 spouse hours worked per week at 2nd job
gen s`wavenum'jhour2_e=.
spouse r`wavenum'jhour2_e, result(s`wavenum'jhour2_e) wave(`wavenum')
label variable s`wavenum'jhour2_e "s`wavenum'jhour2_e:w`wavenum' s Hours worked/week 2nd job"

*check

***Weeks worked per year***
*wave 7 respondent weeks worked per year
gen r`wavenum'jweeks_e=.
missing_w`wavenum' WpWlym, result(r`wavenum'jweeks_e)
replace r`wavenum'jweeks_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jweeks_e = .p if askpx == 1
replace r`wavenum'jweeks_e = WpWlym if inrange(WpWlym,1,52)
label variable r`wavenum'jweeks_e "r`wavenum'jweeks_e:w`wavenum' r Weeks worked/year"

*wave 7 spouse weeks worked per year
gen s`wavenum'jweeks_e=.
spouse r`wavenum'jweeks_e, result(s`wavenum'jweeks_e) wave(`wavenum')
label variable s`wavenum'jweeks_e "s`wavenum'jweeks_e:w`wavenum' s Weeks worked/year"

*check

***Wage rate***
*wave 7 respondent Imputed Wage Rate-Hrly
gen r`wavenum'wgihr_e =.
missing_w`wavenum' wpactpw WpEs WpHjob WpHwrk, result(r`wavenum'wgihr_e)
replace r`wavenum'wgihr_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'wgihr_e = .p if askpx == 1
replace r`wavenum'wgihr_e = 0 if thp_r_i == 0
replace r`wavenum'wgihr_e = thp_r_i/WpHjob if thp_r_i > 0 & inrange(WpHjob,1,168) & WpEs == 1
replace r`wavenum'wgihr_e = thp_r_i/WpHwrk if thp_r_i > 0 & inrange(WpHwrk,1,168) & WpEs == 2
label variable r`wavenum'wgihr_e "r`wavenum'wgihr_e:w`wavenum' r Imputed Wage Rate-Hrly"

*wave 7 spouse Iputed Wage Rate-Hrly
gen s`wavenum'wgihr_e =.
spouse r`wavenum'wgihr_e, result(s`wavenum'wgihr_e) wave(`wavenum')
label variable s`wavenum'wgihr_e "s`wavenum'wgihr_e:w`wavenum' s Imputed Wage Rate-Hrly"

*wave 7 respondent Imputed Wage Rate-Wkly
gen r`wavenum'wgiwk_e =.
replace r`wavenum'wgiwk_e = thp_r_i
replace r`wavenum'wgiwk_e = .i if r`wavenum'wgiwk_e==. & inlist(askinst,1,2)
label variable r`wavenum'wgiwk_e "r`wavenum'wgiwk_e:w`wavenum' r Imputed Wage Rate-Wkly"

*wave 7 spouse Imputed Wage Rate-Wkly
gen s`wavenum'wgiwk_e =.
spouse r`wavenum'wgiwk_e, result(s`wavenum'wgiwk_e) wave(`wavenum')
label variable s`wavenum'wgiwk_e "s`wavenum'wgiwk_e:w`wavenum' s Imputed Wage Rate-Wkly"

*wave 7 respondent Impute Flag Wage Rate-Hrly
gen r`wavenum'wgfhr_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfhr_e)
replace r`wavenum'wgfhr_e = 11 if mi(r`wavenum'jhours) & mi(r`wavenum'wgihr_e) & inw`wavenum' == 1
label variable r`wavenum'wgfhr_e "r`wavenum'wgfhr_e:w`wavenum' r Impute Flag Wage Rate-Hrly"

*wave 7 spouse Impute Flag Wage Rate-Hrly
gen s`wavenum'wgfhr_e=.
spouse r`wavenum'wgfhr_e, result(s`wavenum'wgfhr_e) wave(`wavenum')
label variable s`wavenum'wgfhr_e "s`wavenum'wgfhr_e:w`wavenum' s Impute Flag Wage Rate-Hrly"

*wave 7 respondent Impute Flag Wage Rate-Wkly
gen r`wavenum'wgfwk_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfwk_e)
label variable r`wavenum'wgfwk_e "r`wavenum'wgfwk_e:w`wavenum' r Impute Flag Wage Rate-Wkly"

*wave 7 spouse Impute Flag Wage Rate-Wkly
gen s`wavenum'wgfwk_e=.
spouse r`wavenum'wgfwk_e, result(s`wavenum'wgfwk_e) wave(`wavenum')
label variable s`wavenum'wgfwk_e "s`wavenum'wgfwk_e:w`wavenum' s Impute Flag Wage Rate-Wkly"

*value labels
*label values r`wavenum'wgiwk_e wgf_e
*label values s`wavenum'wgiwk_e wgf_e
label values r`wavenum'wgfhr_e wgf_e
label values s`wavenum'wgfhr_e wgf_e
label values r`wavenum'wgfwk_e wgf_e
label values s`wavenum'wgfwk_e wgf_e

**check


***Current job requires lots of physical effort***
*wave 7 respondent whether job requires physical effort
gen r`wavenum'jphysa=.
missing_w`wavenum' wpactpw WpJAct, result(r`wavenum'jphysa)
replace r`wavenum'jphysa = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jphysa = .p if askpx == 1
replace r`wavenum'jphysa =1 if WpJAct == 1
replace r`wavenum'jphysa =2 if WpJAct == 2
replace r`wavenum'jphysa =3 if WpJAct == 3
replace r`wavenum'jphysa =4 if WpJAct == 4
label variable r`wavenum'jphysa "r`wavenum'jphysa:w`wavenum' r Cur job req lots phys effort"

*wave 7 spouse whether job requires physical effort
gen s`wavenum'jphysa=.
spouse r`wavenum'jphysa, result(s`wavenum'jphysa) wave(`wavenum')
label variable s`wavenum'jphysa "s`wavenum'jphysa:w`wavenum' s Cur job req lots phys effort"

*value labels
label values r`wavenum'jphysa jphys_e
label values s`wavenum'jphysa jphys_e

*check

***Current job - under pressure due to heavy workload***
*wave 7 respondent under pressure due to heavy workload
gen r`wavenum'jpress=.
missing_w`wavenum' wpactpw wpactse scworkg, result(r`wavenum'jpress)
replace r`wavenum'jpress = .c if inrange(w7scwt,0,10)
replace r`wavenum'jpress = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jpress = .p if askpx == 1
replace r`wavenum'jpress =1 if scworkg == 1
replace r`wavenum'jpress =2 if scworkg == 2
replace r`wavenum'jpress =3 if scworkg == 3
replace r`wavenum'jpress =4 if scworkg == 4
label variable r`wavenum'jpress "r`wavenum'jpress:w`wavenum' r under pressure due to workload"

*wave 7 spouse under pressure due to heavy workload
gen s`wavenum'jpress=.
spouse r`wavenum'jpress, result(s`wavenum'jpress) wave(`wavenum')
label variable s`wavenum'jpress "s`wavenum'jpress:w`wavenum' s under pressure due to workload"

*value labels
label values r`wavenum'jpress agree
label values s`wavenum'jpress agree

***Years of tenure on current job***
*generate preloads
gen preload = .
gen preload_f = .
gen preload_y = .
gen preload_m = .
gen preload_s = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'jcten if preload == . & inw`wavenum' == 1
	replace preload_f = r`w'fjcten if preload != . & preload == r`w'jcten & preload_f == . & inw`wavenum' == 1
	replace preload_y = r`w'iwindy if preload != . & preload == r`w'jcten & preload_y == . & inw`wavenum' == 1
	replace preload_m = r`w'iwindm if preload != . & preload == r`w'jcten & preload_m == . & inw`wavenum' == 1
	replace preload_s = r`w'slfemp if preload != . & preload == r`w'jcten & preload_s == . & inw`wavenum' == 1
}

*wave 7 respondent years of tenure on current job
gen r`wavenum'jcten=.
missing_w`wavenum' wpactpw WpsjobY WpsjobM, result(r`wavenum'jcten)
replace r`wavenum'jcten = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19) & inw`wavenum'==1 & !inlist(r`wavenum'jcten,.r,.d)
replace r`wavenum'jcten = r1jcten if mi(r1jcten) & r1jcten != . & ((r1slfemp == 1 & inw2 == 1) | WpEmp == 1)
replace r`wavenum'jcten = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jcten = .p if askpx == 1 
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(preload_y,preload_m))/12,.1) + preload ///
	if inrange(iintdaty,2000,2020) & inrange(iintdatm,1,12) & ///
	   inrange(preload_y,2000,2020) & inrange(preload_m,1,12) & ///
	   (preload_s == 1 | WpEmp == 1) & !mi(preload)
replace r`wavenum'jcten = iintdaty - WpsjobY ///
	if inrange(iintdaty,2000,2020) & ///
	   inrange(WpsjobY,1900,2020) & inrange(WpsjobM,13,17)
replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(WpsjobY,WpsjobM))/12,.1) ///
	if inrange(iintdaty,2000,2020) & inrange(iintdatm,1,12) & ///
	   inrange(WpsjobY,1900,2020) & inrange(WpsjobM,1,12)
label variable r`wavenum'jcten "r`wavenum'jcten:w`wavenum' r Current Job Tenure"

*wave 7 spouse years of tenure on current job
gen s`wavenum'jcten=.
spouse r`wavenum'jcten, result(s`wavenum'jcten) wave(`wavenum')
label variable s`wavenum'jcten "s`wavenum'jcten:w`wavenum' s Current Job Tenure"

*wave 7 flag respondent years of tenure on current job
gen r`wavenum'fjcten = . 
replace r`wavenum'fjcten = .m if mi(r`wavenum'jcten) & inw`wavenum'==1
replace r`wavenum'fjcten = preload_f if (preload_s == 1 | WpEmp == 1) & !mi(preload_f)
replace r`wavenum'fjcten = 0 if !mi(r`wavenum'jcten) & inrange(WpsjobM,1,12)
replace r`wavenum'fjcten = 1 if !mi(r`wavenum'jcten) & WpsjobM == 13
replace r`wavenum'fjcten = 2 if !mi(r`wavenum'jcten) & WpsjobM == 14
replace r`wavenum'fjcten = 3 if !mi(r`wavenum'jcten) & WpsjobM == 15
replace r`wavenum'fjcten = 4 if !mi(r`wavenum'jcten) & WpsjobM == 16
replace r`wavenum'fjcten = 5 if !mi(r`wavenum'jcten) & WpsjobM == 17
label variable r`wavenum'fjcten "r`wavenum'fjcten:w`wavenum' r Flag Current Job Tenure"
label values r`wavenum'fjcten fjcten

*wave 7 flag spouse years of tenure on current job
gen s`wavenum'fjcten=.
spouse r`wavenum'fjcten, result(s`wavenum'fjcten) wave(`wavenum')
label variable s`wavenum'fjcten "s`wavenum'fjcten:w`wavenum' s Flag Current Job Tenure"
label values s`wavenum'fjcten fjcten

**check

*drop preload variables
drop preload preload_f preload_y preload_m preload_s

***Occupation code for current job***
*wave 7 respondent occupation code
gen r`wavenum'nssec13=.
missing_w`wavenum' NSSEC r`wavenum'work, result(r`wavenum'nssec13)
replace r`wavenum'nssec13 = .w if r`wavenum'work == 0 | (wpactpw == 0 & wpactse == 0 & Wpever == 2)
replace r`wavenum'nssec13 = .p if askpx == 1
replace r`wavenum'nssec13 = r`pre_wavenum'nssec13 if inrange(r`pre_wavenum'nssec13,1,13) & Wpstj==1 & r`wavenum'work==1 
replace r`wavenum'nssec13 = int(NSSEC) if inrange(NSSEC,1,13.999) & r`wavenum'work == 1
label variable r`wavenum'nssec13 "r`wavenum'nssec13:w`wavenum' r current job classification, 13 cat"


*wave 7 spouse occupation code
gen s`wavenum'nssec13=.
spouse r`wavenum'nssec13, result(s`wavenum'nssec13) wave(`wavenum')
label variable s`wavenum'nssec13 "s`wavenum'nssec13:w`wavenum' s current job classification, 13 cat"

*value labels
label values r`wavenum'nssec13 nssec13
label values s`wavenum'nssec13 nssec13

*check

***Occupation code for current job with 8 categories***
*wave 7 respondent occupation code with 8 cats
*wave 7 does not have a variable that has 8 categories so we will construct it using the 13 variable option
gen r`wavenum'nssec8=.
missing_w`wavenum' NSSEC r`wavenum'work, result(r`wavenum'nssec8)
replace r`wavenum'nssec8 = .w if r`wavenum'work == 0 | (wpactpw == 0 & wpactse == 0 & Wpever == 2)
replace r`wavenum'nssec8 = .p if askpx == 1
replace r`wavenum'nssec8 = 1 if inrange(r`pre_wavenum'nssec13,1,3.999) & Wpstj==1 & r`wavenum'work == 1
replace r`wavenum'nssec8 = 2 if inrange(r`pre_wavenum'nssec13,4,6.999) & Wpstj==1 & r`wavenum'work == 1
replace r`wavenum'nssec8 = 3 if inrange(r`pre_wavenum'nssec13,7,7.999) & Wpstj==1 & r`wavenum'work == 1
replace r`wavenum'nssec8 = 4 if inrange(r`pre_wavenum'nssec13,8,9.999) & Wpstj==1 & r`wavenum'work == 1
replace r`wavenum'nssec8 = 5 if inrange(r`pre_wavenum'nssec13,10,11.999) & Wpstj==1 & r`wavenum'work == 1
replace r`wavenum'nssec8 = 6 if inrange(r`pre_wavenum'nssec13,12,12.999) & Wpstj==1 & r`wavenum'work == 1
replace r`wavenum'nssec8 = 7 if inrange(r`pre_wavenum'nssec13,13,13.999) & Wpstj==1 & r`wavenum'work == 1
replace r`wavenum'nssec8 = 1 if inrange(NSSEC,1,3.999) & r`wavenum'work == 1
replace r`wavenum'nssec8 = 2 if inrange(NSSEC,4,6.999) & r`wavenum'work == 1
replace r`wavenum'nssec8 = 3 if inrange(NSSEC,7,7.999) & r`wavenum'work == 1
replace r`wavenum'nssec8 = 4 if inrange(NSSEC,8,9.999) & r`wavenum'work == 1
replace r`wavenum'nssec8 = 5 if inrange(NSSEC,10,11.999) & r`wavenum'work == 1
replace r`wavenum'nssec8 = 6 if inrange(NSSEC,12,12.999) & r`wavenum'work == 1
replace r`wavenum'nssec8 = 7 if inrange(NSSEC,13,13.999) & r`wavenum'work == 1
label variable r`wavenum'nssec8 "r`wavenum'nssec8:w`wavenum' r current job classification, 8 cat"

*wave 7 spouse occupation code
gen s`wavenum'nssec8=.
spouse r`wavenum'nssec8, result(s`wavenum'nssec8) wave(`wavenum')
label variable s`wavenum'nssec8 "s`wavenum'nssec8:w`wavenum' s current job classification, 8 cat"

*value labels
label values r`wavenum'nssec8 nssec8
label values s`wavenum'nssec8 nssec8

***month and year last job ended***
*generate preload
gen preload_m = .
gen preload_y = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload_m = r`w'jlastm if preload_m == . & inw`wavenum' == 1
	replace preload_y = r`w'jlasty if preload_y == . & inw`wavenum' == 1
}

*wave 7 respondent month last job ended
gen r`wavenum'jlastm=.
missing_w`wavenum' wpactpw Wpever Wpjob Wpjobl WplljY WplljM, result(r`wavenum'jlastm)
replace r`wavenum'jlastm = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19) & inw`wavenum'==1 & !inlist(r`wavenum'jlastm,.r,.d)
replace r`wavenum'jlastm = .t if inlist(WpAway,1,3)
replace r`wavenum'jlastm = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlastm = .n if wpactpw == 0 & wpactse == 0 & Wpever == 2
replace r`wavenum'jlastm = preload_m if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | Wpjob == 2) /// 
                                & preload_m != .
replace r`wavenum'jlastm = .p if askpx == 1
replace r`wavenum'jlastm = .y if inrange(WplljY,1900,1990)
replace r`wavenum'jlastm = WplljM if inrange(WplljM,1,17)
label variable r`wavenum'jlastm "r`wavenum'jlastm:w`wavenum' r Month Last Worked/not working"
label values r`wavenum'jlastm xmonth

*wave 7 spouse month last job ended
gen s`wavenum'jlastm=.
spouse r`wavenum'jlastm, result(s`wavenum'jlastm) wave(`wavenum')
label variable s`wavenum'jlastm "s`wavenum'jlastm:w`wavenum' s Month Last Worked/not working"
label values s`wavenum'jlastm xmonth

*wave 7 respondent year last job ended
gen r`wavenum'jlasty=.
missing_w`wavenum' wpactpw Wpever Wpjob Wpjobl WplljY, result(r`wavenum'jlasty)
replace r`wavenum'jlasty = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19) & inw`wavenum'==1 & !inlist(r`wavenum'jlasty,.r,.d)
replace r`wavenum'jlasty = .t if inlist(WpAway,1,3)
replace r`wavenum'jlasty = .w if wpactpw == 1 | wpactse == 1
replace r`wavenum'jlasty = .n if wpactpw == 0 & wpactse == 0 & Wpever == 2
replace r`wavenum'jlasty = preload_y if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | Wpjob == 2) /// 
                                & preload_y != .
replace r`wavenum'jlasty = .p if askpx == 1
replace r`wavenum'jlasty = .i if inrange(WplljY,2016,2100)
replace r`wavenum'jlasty = WplljY if inrange(WplljY,1900,2015)
label variable r`wavenum'jlasty "r`wavenum'jlasty:w`wavenum' r Year Last Worked/not working"

*wave 7 spouse year last job ended
gen s`wavenum'jlasty=.
spouse r`wavenum'jlasty, result(s`wavenum'jlasty) wave(`wavenum')
label variable s`wavenum'jlasty "s`wavenum'jlasty:w`wavenum' s Year Last Worked/not working"

*check

*drop preload variables
drop preload_m preload_y

*wave 7 respondent job category soc2000
gen r`wavenum'soc2000 = .
missing_w7 r`wavenum'work, result(r`wavenum'soc2000)
replace r`wavenum'soc2000 = r6soc2000 if inrange(r6soc2000,1,25) & ///
															inw6==1 & r`wavenum'work==1 & Wpstj==1
replace r`wavenum'soc2000 = r5soc2000 if inrange(r5soc2000,1,25) & inw6==0 & ///
															inw5==1 & r`wavenum'work==1 & Wpstj==1
replace r`wavenum'soc2000 = r4soc2000 if inrange(r4soc2000,1,25) & inw6==0 & inw5==0 & ///
															inw4==1 & r`wavenum'work==1 & Wpstj==1
replace r`wavenum'soc2000 = r3soc2000 if inrange(r3soc2000,1,25) & inw6==0 & inw5==0 & inw4==0 & ///
															inw3==1 & r`wavenum'work==1 & Wpstj==1
replace r`wavenum'soc2000 = r2soc2000 if inrange(r2soc2000,1,25) & inw6==0 & inw5==0 & inw4==0 & inw3==0 & ///
															inw2==1 & r`wavenum'work==1 & Wpstj==1
replace r`wavenum'soc2000 = r1soc2000 if inrange(r1soc2000,1,25) & inw6==0 & inw5==0 & inw4==0 & inw3==0 & inw2==0 & ///
															inw1==1 & r`wavenum'work==1 & Wpstj==1
replace r`wavenum'soc2000 = .n if inw7==1 & inw6==0 & inw5==0 & inw4==0 & inw3==0 & inw2==0 & inw1==0
replace r`wavenum'soc2000 = .w if r`wavenum'work==0
replace r`wavenum'soc2000 = .m if r`wavenum'soc2000==. & inw`wavenum'==1
label variable r`wavenum'soc2000 "r`wavenum'soc2000:w`wavenum' r cur job occup/2000 soc coding"
label values r`wavenum'soc2000 soc

*wave 7 spouse job category soc2000
gen s`wavenum'soc2000 = .
spouse r`wavenum'soc2000, result(s`wavenum'soc2000) wave(`wavenum')
label variable s`wavenum'soc2000 "s`wavenum'soc2000:w`wavenum' s cur job occup/2000 soc coding"
label values s`wavenum'soc2000 soc


***drop ELSA wave 7 core file raw variables***
drop `employ_w7_core'

***drop ELSA wave 7 financial derived file raw variables***
drop `employ_w7_fina'

******************************************************************************************


*set wave number
local wavenum = 8
local pre_wavenum = `wavenum' - 1

***merge with wave 8 core data***
local employ_w8_core askpx indager ///
                     wpactvw wpactca wpactlo wpacted wpact96 wpactw wpactpw wpaway wpactse wpmoj ///
                     wpes wpdes ///
                     wphjob wphwrk wphmsj ///
                     wpwlym ///
                     wpjact ///
                     iintdaty iintdatm /*wpsjoby wpsjobm*/ ///
                     wpjob wpjobl wpever /*wplljm wplljy*/ ///
                     wpemp wpstj w8nssec8 /// 
                      askinst scworkg w8scwt w8soc2000r
merge 1:1 idauniq using "$wave_8_core", keepusing(`employ_w8_core') nogen

***merge with wave 8 financial derived variables data***
local employ_w8_fina thp_r_i thp_r_t
merge 1:1 idauniq using "$wave_8_fina", keepusing(`employ_w8_fina') nogen


***Currently working for pay***
*wave 8 respondent working for pay
gen r`wavenum'work=.
missing_w`wavenum' wpactpw,result(r`wavenum'work)
replace r`wavenum'work = 0 if inlist(wpactvw,0,1) | ///
                      inlist(wpactca,0,1) | ///
                      inlist(wpactlo,0,1) | ///
                      inlist(wpacted,0,1) | ///
                      inlist(wpact96,0,1) 
replace r`wavenum'work = 1 if wpactpw == 1 | wpactse == 1 
label variable r`wavenum'work "r`wavenum'work:w`wavenum' R working for pay"

*wave 8 spouse working for pay
gen s`wavenum'work=.
spouse r`wavenum'work, result(s`wavenum'work) wave(`wavenum')
label variable s`wavenum'work "s`wavenum'work:w`wavenum' S working for pay"

*wave 8 respondent works at second job
gen r`wavenum'work2=.
missing_w`wavenum' wpactpw wpmoj, result(r`wavenum'work2)
replace r`wavenum'work2 = .p if askpx == 1
replace r`wavenum'work2=0 if wpmoj == 2 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'work2=1 if wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
label variable r`wavenum'work2 "r`wavenum'work2:w`wavenum' R Works at 2nd job"

*wave 8 spouse works at second job
gen s`wavenum'work2=.
spouse r`wavenum'work2, result(s`wavenum'work2) wave(`wavenum')
label variable s`wavenum'work2 "s`wavenum'work2:w`wavenum' S Works at 2nd job"

*value labels
label values r`wavenum'work rwork
label values s`wavenum'work rwork
label values r`wavenum'work2 rwork
label values s`wavenum'work2 rwork

*check

***Whether self-employed***
*generate preload
gen preload = .
forvalues w = `pre_wavenum' (-1) 0 {
	replace preload = r`w'slfemp if preload == . & inw`wavenum' == 1
}

*wave 8 respondent whether self-employed
gen r`wavenum'slfemp=.
missing_w`wavenum' wpstj wpactpw wpes, result(r`wavenum'slfemp)
replace r`wavenum'slfemp = preload if preload !=. & wpstj== 1
replace r`wavenum'slfemp = 0 if wpes == 1 | (wpactpw == 0 & wpactse == 0)
replace r`wavenum'slfemp = 1 if wpes == 2
label variable r`wavenum'slfemp "r`wavenum'slfemp:w`wavenum' r Whether Self-Employed"

*wave 8 spouse whether self-employed
gen s`wavenum'slfemp=.
spouse r`wavenum'slfemp, result(s`wavenum'slfemp) wave(`wavenum')
label variable s`wavenum'slfemp "s`wavenum'slfemp:w`wavenum' s Whether Self-Employed"

*value labels
label values r`wavenum'slfemp slfemp
label values s`wavenum'slfemp slfemp

*check

*drop preload variables
drop preload

***labor force status***
*wave 8 respondent labor force status
gen r`wavenum'lbrf_e=.
missing_w`wavenum' wpdes, result(r`wavenum'lbrf_e)
replace r`wavenum'lbrf_e = .m if wpdes == 86
replace r`wavenum'lbrf_e = .o if inlist(wpdes,95,85)
replace r`wavenum'lbrf_e = 1 if wpdes == 2
replace r`wavenum'lbrf_e = 2 if wpdes == 3
replace r`wavenum'lbrf_e = 3 if wpdes == 4
replace r`wavenum'lbrf_e = 4 if wpdes == 96
replace r`wavenum'lbrf_e = 5 if wpdes == 1
replace r`wavenum'lbrf_e = 6 if wpdes == 5
replace r`wavenum'lbrf_e = 7 if wpdes == 6
label variable r`wavenum'lbrf_e "r`wavenum'lbrf_e:w`wavenum' R labor force status"

*wave 8 spouse labor force status
gen s`wavenum'lbrf_e=.
spouse r`wavenum'lbrf_e, result(s`wavenum'lbrf_e) wave(`wavenum')
label variable s`wavenum'lbrf_e "s`wavenum'lbrf_e:w`wavenum' S labor force status"

*value labels 
label values r`wavenum'lbrf_e lbrf_e
label values s`wavenum'lbrf_e lbrf_e

*check


***labor force status***
*wave 8 respondent labor force status in the labor force
gen r`wavenum'inlbrf=.
missing_w`wavenum' wpdes, result(r`wavenum'inlbrf)
replace r`wavenum'inlbrf = .m if wpdes == 86
replace r`wavenum'inlbrf = .o if inlist(wpdes,85,95)
replace r`wavenum'inlbrf = 0 if inrange(r`wavenum'lbrf_e,5,7)
replace r`wavenum'inlbrf = 1 if inrange(r`wavenum'lbrf_e,1,4)

label variable r`wavenum'inlbrf "r`wavenum'inlbrf:W`wavenum' =1 if r is in the labor force"

*wave 8 spouse labor force status
gen s`wavenum'inlbrf=.
spouse r`wavenum'inlbrf, result(s`wavenum'inlbrf) wave(`wavenum')
label variable s`wavenum'inlbrf "s`wavenum'inlbrf:W`wavenum' =1 if s is in the labor force"

*value labels
label values r`wavenum'inlbrf force
label values s`wavenum'inlbrf force

*check

**labor force status***
*wave 8 respondent labor force status unemployed
gen r`wavenum'unemp=.
missing_w`wavenum' wpdes, result(r`wavenum'unemp)
replace r`wavenum'unemp = .m if wpdes == 86
replace r`wavenum'unemp = .o if inlist(wpdes,85,95)
replace r`wavenum'unemp = .x if inlist(r`wavenum'lbrf_e,5,6,7)
replace r`wavenum'unemp = 0 if inlist(r`wavenum'lbrf_e,1,2,4)
replace r`wavenum'unemp = 1 if r`wavenum'lbrf_e == 3

label variable r`wavenum'unemp "r`wavenum'unemp:w`wavenum' =1 if r is unemployed"

*wave 8 spouse labor force status
gen s`wavenum'unemp=.
spouse r`wavenum'unemp, result(s`wavenum'unemp) wave(`wavenum')
label variable s`wavenum'unemp "s`wavenum'unemp:w`wavenum' =1 if s is unemployed"

*value labels
label values r`wavenum'unemp force
label values s`wavenum'unemp force

*check

***Hours of work per week at current job***
*wave 8 respondent hours of work per week at main job
gen r`wavenum'jhours=.
missing_w`wavenum' wpactpw wpes wphjob wphwrk, result(r`wavenum'jhours)
replace r`wavenum'jhours = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhours = .p if askpx == 1
replace r`wavenum'jhours = wphjob if inrange(wphjob,1,168) & wpes == 1
replace r`wavenum'jhours = wphwrk if inrange(wphwrk,1,168) & wpes == 2
label variable r`wavenum'jhours "r`wavenum'jhours:w`wavenum' r Hours worked/week main job"

*wave 8 spouse Hours of work per week at main job
gen s`wavenum'jhours=.
spouse r`wavenum'jhours, result(s`wavenum'jhours) wave(`wavenum')
label variable s`wavenum'jhours "s`wavenum'jhours:w`wavenum' s Hours worked/week main job"

*wave 8 respondent hours worked per week at 2nd job
gen r`wavenum'jhour2_e=.
missing_w`wavenum' wpactpw wpmoj wphmsj, result(r`wavenum'jhour2_e)
replace r`wavenum'jhour2_e = .w if wpmoj == 2 | (wpmoj == 1 & wpactpw == 0 & wpactse == 0)
replace r`wavenum'jhour2_e = .p if askpx == 1
replace r`wavenum'jhour2_e = wphmsj/4.333 if inrange(wphmsj,1,700) & wpmoj == 1 & (wpactpw == 1 | wpactse == 1)
replace r`wavenum'jhour2_e = .i if wphmsj>700 & wpmoj == 1 & (wpactpw == 1 | wpactse == 1) /* MV ADDED */
label variable r`wavenum'jhour2_e "r`wavenum'jhour2_e:w`wavenum' r Hours worked/week 2nd job"

*wave 8 spouse hours worked per week at 2nd job
gen s`wavenum'jhour2_e=.
spouse r`wavenum'jhour2_e, result(s`wavenum'jhour2_e) wave(`wavenum')
label variable s`wavenum'jhour2_e "s`wavenum'jhour2_e:w`wavenum' s Hours worked/week 2nd job"
*check

***Weeks worked per year***
*wave 8 respondent weeks worked per year
gen r`wavenum'jweeks_e=.
missing_w`wavenum' wpwlym, result(r`wavenum'jweeks_e)
replace r`wavenum'jweeks_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jweeks_e = .p if askpx == 1
replace r`wavenum'jweeks_e = wpwlym if inrange(wpwlym,1,52)
label variable r`wavenum'jweeks_e "r`wavenum'jweeks_e:w`wavenum' r Weeks worked/year"

*wave 8 spouse weeks worked per year
gen s`wavenum'jweeks_e=.
spouse r`wavenum'jweeks_e, result(s`wavenum'jweeks_e) wave(`wavenum')
label variable s`wavenum'jweeks_e "s`wavenum'jweeks_e:w`wavenum' s Weeks worked/year"

*check

***Wage rate***
*wave 8 respondent Imputed Wage Rate-Hrly
gen r`wavenum'wgihr_e =.
missing_w`wavenum' wpactpw wpes wphjob wphwrk, result(r`wavenum'wgihr_e)
replace r`wavenum'wgihr_e = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'wgihr_e = .p if askpx == 1
replace r`wavenum'wgihr_e = 0 if thp_r_i == 0
replace r`wavenum'wgihr_e = thp_r_i/wphjob if thp_r_i > 0 & inrange(wphjob,1,168) & wpes == 1
replace r`wavenum'wgihr_e = thp_r_i/wphwrk if thp_r_i > 0 & inrange(wphwrk,1,168) & wpes == 2
label variable r`wavenum'wgihr_e "r`wavenum'wgihr_e:w`wavenum' r Imputed Wage Rate-Hrly"

*wave 8 spouse Iputed Wage Rate-Hrly
gen s`wavenum'wgihr_e =.
spouse r`wavenum'wgihr_e, result(s`wavenum'wgihr_e) wave(`wavenum')
label variable s`wavenum'wgihr_e "s`wavenum'wgihr_e:w`wavenum' s Imputed Wage Rate-Hrly"

*wave 8 respondent Imputed Wage Rate-Wkly
gen r`wavenum'wgiwk_e =.
replace r`wavenum'wgiwk_e = thp_r_i
replace r`wavenum'wgiwk_e = .i if r`wavenum'wgiwk_e==. & inlist(askinst,1,2)
label variable r`wavenum'wgiwk_e "r`wavenum'wgiwk_e:w`wavenum' r Imputed Wage Rate-Wkly"

*wave 8 spouse Imputed Wage Rate-Wkly
gen s`wavenum'wgiwk_e =.
spouse r`wavenum'wgiwk_e, result(s`wavenum'wgiwk_e) wave(`wavenum')
label variable s`wavenum'wgiwk_e "s`wavenum'wgiwk_e:w`wavenum' s Imputed Wage Rate-Wkly"

*wave 8 respondent Impute Flag Wage Rate-Hrly
gen r`wavenum'wgfhr_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfhr_e)
replace r`wavenum'wgfhr_e = 11 if mi(r`wavenum'jhours) & mi(r`wavenum'wgihr_e) & inw`wavenum' == 1
label variable r`wavenum'wgfhr_e "r`wavenum'wgfhr_e:w`wavenum' r Impute Flag Wage Rate-Hrly"

*wave 8 spouse Impute Flag Wage Rate-Hrly
gen s`wavenum'wgfhr_e=.
spouse r`wavenum'wgfhr_e, result(s`wavenum'wgfhr_e) wave(`wavenum')
label variable s`wavenum'wgfhr_e "s`wavenum'wgfhr_e:w`wavenum' s Impute Flag Wage Rate-Hrly"

*wave 8 respondent Impute Flag Wage Rate-Wkly
gen r`wavenum'wgfwk_e=.
combine_inc_flags2 thp_r_t, result(r`wavenum'wgfwk_e)
label variable r`wavenum'wgfwk_e "r`wavenum'wgfwk_e:w`wavenum' r Impute Flag Wage Rate-Wkly"

*wave 8 spouse Impute Flag Wage Rate-Wkly
gen s`wavenum'wgfwk_e=.
spouse r`wavenum'wgfwk_e, result(s`wavenum'wgfwk_e) wave(`wavenum')
label variable s`wavenum'wgfwk_e "s`wavenum'wgfwk_e:w`wavenum' s Impute Flag Wage Rate-Wkly"

*value labels
*label values r`wavenum'wgiwk_e wgf_e
*label values s`wavenum'wgiwk_e wgf_e
label values r`wavenum'wgfhr_e wgf_e
label values s`wavenum'wgfhr_e wgf_e
label values r`wavenum'wgfwk_e wgf_e
label values s`wavenum'wgfwk_e wgf_e

**check


***Current job requires lots of physical effort***
*wave 8 respondent whether job requires physical effort
gen r`wavenum'jphysa=.
missing_w`wavenum' wpactpw wpjact, result(r`wavenum'jphysa)
replace r`wavenum'jphysa = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jphysa = .p if askpx == 1
replace r`wavenum'jphysa =1 if wpjact == 1
replace r`wavenum'jphysa =2 if wpjact == 2
replace r`wavenum'jphysa =3 if wpjact == 3
replace r`wavenum'jphysa =4 if wpjact == 4
label variable r`wavenum'jphysa "r`wavenum'jphysa:w`wavenum' r Cur job req lots phys effort"

*wave 8 spouse whether job requires physical effort
gen s`wavenum'jphysa=.
spouse r`wavenum'jphysa, result(s`wavenum'jphysa) wave(`wavenum')
label variable s`wavenum'jphysa "s`wavenum'jphysa:w`wavenum' s Cur job req lots phys effort"

*value labels
label values r`wavenum'jphysa jphys_e
label values s`wavenum'jphysa jphys_e

*check

***Current job - under pressure due to heavy workload***
*wave 8 respondent under pressure due to heavy workload
gen r`wavenum'jpress=.
replace r`wavenum'jpress = .i if scworkg == -3 & (!inrange(w8scwt,0,10) | !(wpactpw == 0 & wpactse == 0) | askpx != 1) // MV ADDED
missing_w`wavenum' wpactpw wpactse scworkg, result(r`wavenum'jpress)
replace r`wavenum'jpress = .c if inrange(w8scwt,0,10)
replace r`wavenum'jpress = .w if (wpactpw == 0 & wpactse == 0)
replace r`wavenum'jpress = .p if askpx == 1
replace r`wavenum'jpress =1 if scworkg == 1
replace r`wavenum'jpress =2 if scworkg == 2
replace r`wavenum'jpress =3 if scworkg == 3
replace r`wavenum'jpress =4 if scworkg == 4
label variable r`wavenum'jpress "r`wavenum'jpress:w`wavenum' r under pressure due to workload"

*wave 8 spouse under pressure due to heavy workload
gen s`wavenum'jpress=.
spouse r`wavenum'jpress, result(s`wavenum'jpress) wave(`wavenum')
label variable s`wavenum'jpress "s`wavenum'jpress:w`wavenum' s under pressure due to workload"

*value labels
label values r`wavenum'jpress agree
label values s`wavenum'jpress agree

***Years of tenure on current job***
*generate preloads
gen preload = .
gen preload_f = .
gen preload_y = .
gen preload_m = .
gen preload_s = .
forvalues w = `pre_wavenum' (-1) 1 {
	replace preload = r`w'jcten if preload == . & inw`wavenum' == 1
	replace preload_f = r`w'fjcten if preload != . & preload == r`w'jcten & preload_f == . & inw`wavenum' == 1
	replace preload_y = r`w'iwindy if preload != . & preload == r`w'jcten & preload_y == . & inw`wavenum' == 1
	replace preload_m = r`w'iwindm if preload != . & preload == r`w'jcten & preload_m == . & inw`wavenum' == 1
	replace preload_s = r`w'slfemp if preload != . & preload == r`w'jcten & preload_s == . & inw`wavenum' == 1
}

**wave 8 respondent years of tenure on current job
*gen r`wavenum'jcten=.
*missing_w`wavenum' wpactpw wpsjoby wpsjobm, result(r`wavenum'jcten)
*replace r`wavenum'jcten = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19) & inw`wavenum'==1 & !inlist(r`wavenum'jcten,.r,.d)
*replace r`wavenum'jcten = r1jcten if mi(r1jcten) & r1jcten != . & ((r1slfemp == 1 & inw2 == 1) | wpemp == 1)
*replace r`wavenum'jcten = .w if (wpactpw == 0 & wpactse == 0)
*replace r`wavenum'jcten = .p if askpx == 1 
*replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(preload_y,preload_m))/12,.1) + preload ///
*	if inrange(iintdaty,2000,2020) & inrange(iintdatm,1,12) & ///
*	   inrange(preload_y,2000,2020) & inrange(preload_m,1,12) & ///
*	   (preload_s == 1 | wpemp == 1) & !mi(preload)
*replace r`wavenum'jcten = iintdaty - wpsjoby ///
*	if inrange(iintdaty,2000,2020) & ///
*	   inrange(wpsjoby,1900,2020) & inrange(wpsjobm,13,17)
*replace r`wavenum'jcten = round((ym(iintdaty,iintdatm)-ym(wpsjoby,wpsjobm))/12,.1) ///
*	if inrange(iintdaty,2000,2020) & inrange(iintdatm,1,12) & ///
*	   inrange(wpsjoby,1900,2020) & inrange(wpsjobm,1,12)
*label variable r`wavenum'jcten "r`wavenum'jcten:w`wavenum' r Current Job Tenure"
*
**wave 8 spouse years of tenure on current job
*gen s`wavenum'jcten=.
*spouse r`wavenum'jcten, result(s`wavenum'jcten) wave(`wavenum')
*label variable s`wavenum'jcten "s`wavenum'jcten:w`wavenum' s Current Job Tenure"
*
**wave 8 flag respondent years of tenure on current job
*gen r`wavenum'fjcten = . 
*replace r`wavenum'fjcten = .m if mi(r`wavenum'jcten) & inw`wavenum'==1
*replace r`wavenum'fjcten = preload_f if (preload_s == 1 | wpemp == 1) & !mi(preload_f)
*replace r`wavenum'fjcten = 0 if !mi(r`wavenum'jcten) & inrange(wpsjobm,1,12)
*replace r`wavenum'fjcten = 1 if !mi(r`wavenum'jcten) & wpsjobm == 13
*replace r`wavenum'fjcten = 2 if !mi(r`wavenum'jcten) & wpsjobm == 14
*replace r`wavenum'fjcten = 3 if !mi(r`wavenum'jcten) & wpsjobm == 15
*replace r`wavenum'fjcten = 4 if !mi(r`wavenum'jcten) & wpsjobm == 16
*replace r`wavenum'fjcten = 5 if !mi(r`wavenum'jcten) & wpsjobm == 17
*label variable r`wavenum'fjcten "r`wavenum'fjcten:w`wavenum' r Flag Current Job Tenure"
*label values r`wavenum'fjcten fjcten
*
**wave 8 flag spouse years of tenure on current job
*gen s`wavenum'fjcten=.
*spouse r`wavenum'fjcten, result(s`wavenum'fjcten) wave(`wavenum')
*label variable s`wavenum'fjcten "s`wavenum'fjcten:w`wavenum' s Flag Current Job Tenure"
*label values s`wavenum'fjcten fjcten

**check

*drop preload variables
drop preload preload_f preload_y preload_m preload_s

***Occupation code for current job***
*wave 8 respondent occupation code
/*gen r`wavenum'jcocc_e=.
missing_w`wavenum' nssec, result(r`wavenum'jcocc_e)
replace r`wavenum'jcocc_e = .i if nssec == -3 // MV ADDED
replace r`wavenum'jcocc_e = .n if (wpactpw == 0 & wpactse == 0 & wpever) == 2 | (r`pre_wavenum'jcocc_e==.n & inw`wavenum' == 1)
replace r`wavenum'jcocc_e = .p if askpx == 1
*replace r`wavenum'jcocc_e = .e if nssec == 15
replace r`wavenum'jcocc_e = r`pre_wavenum'jcocc_e if inrange(r`pre_wavenum'jcocc_e,1,13) & wpstj==1 
replace r`wavenum'jcocc_e = int(nssec) if inrange(nssec,1,13.999)
label variable r`wavenum'jcocc_e "r`wavenum'jcocc_e:w`wavenum' r Current Job Occupation"


*wave 8 spouse occupation code
gen s`wavenum'jcocc_e=.
spouse r`wavenum'jcocc_e, result(s`wavenum'jcocc_e) wave(`wavenum')
label variable s`wavenum'jcocc_e "s`wavenum'jcocc_e:w`wavenum' s Current Job Occupation" 

*value labels
label values r`wavenum'jcocc_e jcocc_e
label values s`wavenum'jcocc_e jcocc_e */
 
*check

***Occupation code for current job with 8 categories***
*wave 8 respondent occupation code with 8 cats
gen r`wavenum'nssec8=.
missing_w`wavenum' w`wavenum'nssec r`wavenum'work, result(r`wavenum'nssec8)
replace r`wavenum'nssec8 = .m if w8nssec8 == -3 
replace r`wavenum'nssec8 = .w if r`wavenum'work == 0 | w8nssec8 == 8 
replace r`wavenum'nssec8 = .p if askpx == 1
replace r`wavenum'nssec8 = .o if w8nssec8 == 99
replace r`wavenum'nssec8 = w8nssec8 if inrange(w8nssec8,1,7) & r`wavenum'work == 1
replace r`wavenum'nssec8 = r`pre_wavenum'nssec8 if r`wavenum'nssec8==.m & r`wavenum'work==1 & wpstj==1 & inrange(r`pre_wavenum'nssec8,1,7)
label variable r`wavenum'nssec8 "r`wavenum'nssec8:w`wavenum' r current job classification, 8 cat"

*wave 8 spouse occupation code
gen s`wavenum'nssec8=.
spouse r`wavenum'nssec8, result(s`wavenum'nssec8) wave(`wavenum')
label variable s`wavenum'nssec8 "s`wavenum'nssec8:w`wavenum' s current job classification, 8 cat"

*value labels
label values r`wavenum'nssec8 nssec8
label values s`wavenum'nssec8 nssec8

****month and year last job ended***
**generate preload
*gen preload_m = .
*gen preload_y = .
*forvalues w = `pre_wavenum' (-1) 1 {
*	replace preload_m = r`w'jlastm if preload_m == . & inw`wavenum' == 1
*	replace preload_y = r`w'jlasty if preload_y == . & inw`wavenum' == 1
*}
*
**wave 8 respondent month last job ended
*gen r`wavenum'jlastm=.
*missing_w`wavenum' wpactpw wpever wpjob wpjobl wplljy wplljm, result(r`wavenum'jlastm)
*replace r`wavenum'jlastm = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19) & inw`wavenum'==1 & !inlist(r`wavenum'jlastm,.r,.d)
*replace r`wavenum'jlastm = .t if inlist(wpaway,1,3)
*replace r`wavenum'jlastm = .w if wpactpw == 1 | wpactse == 1
*replace r`wavenum'jlastm = .n if wpactpw == 0 & wpactse == 0 & wpever == 2
*replace r`wavenum'jlastm = preload_m if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | wpjob == 2) /// 
*                                & preload_m != .
*replace r`wavenum'jlastm = .p if askpx == 1
*replace r`wavenum'jlastm = .y if inrange(wplljy,1900,1990)
*replace r`wavenum'jlastm = wplljm if inrange(wplljm,1,17)
*label variable r`wavenum'jlastm "r`wavenum'jlastm:w`wavenum' r Month Last Worked/not working"
*label values r`wavenum'jlastm xmonth
*
**wave 8 spouse month last job ended
*gen s`wavenum'jlastm=.
*spouse r`wavenum'jlastm, result(s`wavenum'jlastm) wave(`wavenum')
*label variable s`wavenum'jlastm "s`wavenum'jlastm:w`wavenum' s Month Last Worked/not working"
*label values s`wavenum'jlastm xmonth
*
**wave 8 respondent year last job ended
*gen r`wavenum'jlasty=.
*missing_w`wavenum' wpactpw wpever wpjob wpjobl wplljy, result(r`wavenum'jlasty)
*replace r`wavenum'jlasty = .h if inlist(r`wavenum'cohort_e,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19) & inw`wavenum'==1 & !inlist(r`wavenum'jlasty,.r,.d)
*replace r`wavenum'jlasty = .t if inlist(wpaway,1,3)
*replace r`wavenum'jlasty = .w if wpactpw == 1 | wpactse == 1
*replace r`wavenum'jlasty = .n if wpactpw == 0 & wpactse == 0 & wpever == 2
*replace r`wavenum'jlasty = preload_y if ((wpactpw == 0 & wpactse == 0 & indager >= 70) | wpjob == 2) /// 
*                                & preload_y != .
*replace r`wavenum'jlasty = .p if askpx == 1
*replace r`wavenum'jlasty = .i if inrange(wplljy,2018,2100)
*replace r`wavenum'jlasty = wplljy if inrange(wplljy,1900,2017)
*label variable r`wavenum'jlasty "r`wavenum'jlasty:w`wavenum' r Year Last Worked/not working"
*
**wave 8 spouse year last job ended
*gen s`wavenum'jlasty=.
*spouse r`wavenum'jlasty, result(s`wavenum'jlasty) wave(`wavenum')
*label variable s`wavenum'jlasty "s`wavenum'jlasty:w`wavenum' s Year Last Worked/not working"
*
**check
*
**drop preload variables
*drop preload_m preload_y

*wave 8 respondent job category soc2000
gen r`wavenum'soc2000 = .
missing_w8 w8soc2000r r`wavenum'work, result(r`wavenum'soc2000)
replace r`wavenum'soc2000 = .m if w8soc2000r==-3
replace r`wavenum'soc2000 = 1 if w8soc2000r==11
replace r`wavenum'soc2000 = 2 if w8soc2000r==12
replace r`wavenum'soc2000 = 3 if w8soc2000r==21
replace r`wavenum'soc2000 = 4 if w8soc2000r==22
replace r`wavenum'soc2000 = 5 if w8soc2000r==23
replace r`wavenum'soc2000 = 6 if w8soc2000r==24
replace r`wavenum'soc2000 = 7 if w8soc2000r==31
replace r`wavenum'soc2000 = 8 if w8soc2000r==32
replace r`wavenum'soc2000 = 9 if w8soc2000r==33
replace r`wavenum'soc2000 = 10 if w8soc2000r==34
replace r`wavenum'soc2000 = 11 if w8soc2000r==35
replace r`wavenum'soc2000 = 12 if w8soc2000r==41
replace r`wavenum'soc2000 = 13 if w8soc2000r==42
replace r`wavenum'soc2000 = 14 if w8soc2000r==51
replace r`wavenum'soc2000 = 15 if w8soc2000r==52
replace r`wavenum'soc2000 = 16 if w8soc2000r==53
replace r`wavenum'soc2000 = 17 if w8soc2000r==54
replace r`wavenum'soc2000 = 18 if w8soc2000r==61
replace r`wavenum'soc2000 = 19 if w8soc2000r==62
replace r`wavenum'soc2000 = 20 if w8soc2000r==71
replace r`wavenum'soc2000 = 21 if w8soc2000r==72
replace r`wavenum'soc2000 = 22 if w8soc2000r==81
replace r`wavenum'soc2000 = 23 if w8soc2000r==82
replace r`wavenum'soc2000 = 24 if w8soc2000r==91
replace r`wavenum'soc2000 = 25 if w8soc2000r==92
replace r`wavenum'soc2000 = .w if r`wavenum'work==0
label variable r`wavenum'soc2000 "r`wavenum'soc2000:w`wavenum' r cur job occup/2000 soc coding"
label values r`wavenum'soc2000 soc

*wave 8 spouse job category soc2000
gen s`wavenum'soc2000 = .
spouse r`wavenum'soc2000, result(s`wavenum'soc2000) wave(`wavenum')
label variable s`wavenum'soc2000 "s`wavenum'soc2000:w`wavenum' s cur job occup/2000 soc coding"
label values s`wavenum'soc2000 soc


***drop ELSA wave 8 core file raw variables***
drop `employ_w8_core'

***drop ELSA wave 8 financial derived file raw variables***
drop `employ_w8_fina'

******************************************************************************************

***Whether Retired***
label define retire ///
   0 "0.no"  ///
   1 "1.yes" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .p ".p:Interviewd by proxy" ///
	 .d ".d:DK" 
	 
***Plan to Continue Paid Work in Retirement***
label define pworkret ///
	0 "0.no" ///
	1 "1.yes" ///
	.e".e:Not an employee" ///
	.a ".a:No mandatory retirement age" ///
	.s ".s:Self-employed" ///
	.m ".m:Missing" ///
	.p ".p:Interviewd by proxy" ///
	.r ".r:Refuse" ///
	.d ".d:DK"
	

 
 
******************************************************************************************


*set wave number
local wavenum=1
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 1 core data***
local retire_w1_core wpdes wprage exlo80 exainh excpin excain expw exhlim excin indager askpx1 indsex wpact1 wpaway
merge 1:1 idauniq using "$wave_1_core", keepusing(`retire_w1_core') nogen


***Whether retired***
*wave 1 respondent whether retired
gen r`wavenum'retemp = .
replace r`wavenum'retemp = .m if wpdes == -1
replace r`wavenum'retemp = .d if wpdes == -8
replace r`wavenum'retemp = .r if wpdes == -9
replace r`wavenum'retemp = 1 if inlist(wpdes,1,96)
replace r`wavenum'retemp = 0 if inlist(wpdes,2,3,4,5,6,85,86,95)
label variable r`wavenum'retemp "r`wavenum'retemp:w1 whether R retired"
label values r`wavenum'retemp retire

*wave 1 spouse whether retired
gen s`wavenum'retemp =.
spouse r`wavenum'retemp, result(s`wavenum'retemp) wave(`wavenum')
label variable s`wavenum'retemp "s`wavenum'retemp:w1 whether S retired"
label values s`wavenum'retemp retire

*check 

***Retirement Age***
*wave 1 respondent retirement age
gen r`wavenum'retage = .
replace r`wavenum'retage = .m if wprage == -1
replace r`wavenum'retage = .d if wprage == -8 
replace r`wavenum'retage = .r if wprage == -9
replace r`wavenum'retage = .z if wprage == -1 & !inlist(wpdes,1,96)
replace r`wavenum'retage = .n if wprage == 0
replace r`wavenum'retage = wprage if inrange(wprage,1,120)
label variable r`wavenum'retage "r`wavenum'retage:w1 R retirement age"

*wave 1 spouse retirement age
gen s`wavenum'retage =.
spouse r`wavenum'retage, result(s`wavenum'retage) wave(`wavenum')
label variable s`wavenum'retage "s`wavenum'retage:w1 S retirement age"

*check 

***Probability of living to age 85***
**wave 1 respondent probability of living to age 85
*Add-in in Wave3

***Probability of living to 75-120***
*wave 1 respondent probability of living to 75-120 
gen r`wavenum'liv10 = .
replace r`wavenum'liv10 = .m if exlo80 == -1
replace r`wavenum'liv10 = .d if exlo80 == -8
replace r`wavenum'liv10 = .r if exlo80 == -9
replace r`wavenum'liv10 = .p if exlo80 == -1 & askpx1 == 1
replace r`wavenum'liv10 = exlo80 if inrange(exlo80,0,100)
label variable r`wavenum'liv10 "r`wavenum'liv10:w1 R probability of living to 75-120"

*wave 1 spouse probability of living to 75-120 
gen s`wavenum'liv10 = .
spouse r`wavenum'liv10, result(s`wavenum'liv10) wave(`wavenum')
label variable s`wavenum'liv10 "s`wavenum'liv10:w1 S probability of living to 75-120"

***Age used in probability of living to 75-120***
*wave 1 respondent age used in live 75-120
gen r`wavenum'liv10a = .
replace r`wavenum'liv10a = 75 if indager <= 65
replace r`wavenum'liv10a = 80 if indager > 65 & indager <= 69
replace r`wavenum'liv10a = 85 if indager > 69 & indager <= 74
replace r`wavenum'liv10a = 90 if indager > 74 & indager <= 79
replace r`wavenum'liv10a = 95 if indager > 79 & indager <= 84
replace r`wavenum'liv10a = 100 if indager > 84 & indager <= 90
replace r`wavenum'liv10a = .t if indager == 99
label variable r`wavenum'liv10a "r`wavenum'liv10a:w1 R age used in live 75-120"

*wave 1 spouse age used in live 75-120
gen s`wavenum'liv10a =.
spouse r`wavenum'liv10a, result(s`wavenum'liv10a) wave(`wavenum')
label variable s`wavenum'liv10a "s`wavenum'liv10a:w1 S age used in live 75-120"

*check 

***Probability of respondent receiving an inheritance***
*wave 1 respondent probability of receiving an inheritance
gen r`wavenum'inher = .
replace r`wavenum'inher = .m if exainh == -1
replace r`wavenum'inher = .d if exainh == -8
replace r`wavenum'inher = .r if exainh == -9
replace r`wavenum'inher = .p if exainh == -1 & askpx1 == 1
replace r`wavenum'inher = exainh if inrange(exainh,0,100)
label variable r`wavenum'inher "r`wavenum'inher:w1 R probability of receiving an inheritance"

*wave 1 spouse probability of receiving an inheritance
gen s`wavenum'inher = .
spouse r`wavenum'inher, result(s`wavenum'inher) wave(`wavenum')
label variable s`wavenum'inher "s`wavenum'inher:w1 S probability of receiving an inheritance"
*check 

***Probability of leaving a bequest 50K+***
*wave 1 respondent probability of leaving bequest 50K+
gen r`wavenum'beq50p = .
replace r`wavenum'beq50p = .m if excin == -1
replace r`wavenum'beq50p = .d if excin == -8
replace r`wavenum'beq50p = .r if excin == -9
replace r`wavenum'beq50p = .p if excin == -1 & askpx1 == 1
replace r`wavenum'beq50p = 0 if excin == 0
replace r`wavenum'beq50p = excin if inrange(excin,0,100)
label variable r`wavenum'beq50p "r`wavenum'beq50p:w1 R probability of leaving bequest 50K+"

*wave 1 spouse probability of leaving bequest 50K+
gen s`wavenum'beq50p =.
spouse r`wavenum'beq50p, result(s`wavenum'beq50p) wave(`wavenum')
label variable s`wavenum'beq50p "s`wavenum'beq50p:w1 S probability of leaving bequest 50K+"

***Probability of leaving a bequest 150K+***
*wave 1 respondent probability of leaving bequest 150K+
gen r`wavenum'beq150p = .
replace r`wavenum'beq150p = .m if excpin == -1 | excin == -1
replace r`wavenum'beq150p = .d if excpin == -8 | excin == -8
replace r`wavenum'beq150p = .r if excpin == -9 | excin == -9
replace r`wavenum'beq150p = .p if excpin == -1 & askpx1 == 1
replace r`wavenum'beq150p = 0 if excin == 0
replace r`wavenum'beq150p = excpin if inrange(excpin,0,100)
label variable r`wavenum'beq150p "r`wavenum'beq150p:w1 R probability of leaving bequest 150K+"

*wave 1 spouse probability of leaving bequest 150K+
gen s`wavenum'beq150p = .
spouse r`wavenum'beq150p, result(s`wavenum'beq150p) wave(`wavenum')
label variable s`wavenum'beq150p "s`wavenum'beq150p:w1 S probability of leaving bequest 150K+"

*check 

***Probability of respondent working full time after age***
*wave 1 respondent probability of working full time after age 
gen r`wavenum'workat = .
replace r`wavenum'workat = .m if expw == -1
replace r`wavenum'workat = .d if expw == -8
replace r`wavenum'workat = .r if expw == -9
replace r`wavenum'workat = .p if expw == -1 & askpx1 == 1
replace r`wavenum'workat = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workat = expw if inrange(expw,0,100)
label variable r`wavenum'workat "r`wavenum'workat:w1 R probability of working full time after age"

*wave 1 spouse probability of working full time after age
gen s`wavenum'workat = .
spouse r`wavenum'workat, result(s`wavenum'workat) wave(`wavenum')
label variable s`wavenum'workat "s`wavenum'workat:w1 S probability of working full time after age"

***Age used in Probability of Working Full Time***
*wave 1 respondent age used in probability of working full time 
gen r`wavenum'workata = .
replace r`wavenum'workata = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workata = 55 if indsex == 2 & indager <= 54
replace r`wavenum'workata = 60 if indsex == 2 & indager <= 59
replace r`wavenum'workata = 60 if indsex == 1 & indager <= 59
replace r`wavenum'workata = 65 if indsex == 1 & indager <= 64
label variable r`wavenum'workata "r`wavenum'workata:w1 R age used in probability of working full time"

*wave 1 spouse age used in probability of working full time 
gen s`wavenum'workata = .
spouse r`wavenum'workata, result(s`wavenum'workata) wave(`wavenum')
label variable s`wavenum'workata "s`wavenum'workata:w1 S age used in probability of working full time"

*check 

***Whether respondent having a work limiting health problem before reach age 65***
*wave 1 respondent work limiting health problem after age 65
gen r`wavenum'workl65 = .
replace r`wavenum'workl65 = .m if exhlim == -1 
replace r`wavenum'workl65 = .d if exhlim == -8
replace r`wavenum'workl65 = .r if exhlim == -9
replace r`wavenum'workl65 = .p if exhlim == -1 & askpx1 == 1
replace r`wavenum'workl65 = .w if exhlim == -1 & (!inlist(wpact1,1,2) | wpaway == 1) 
replace r`wavenum'workl65 = .i if exhlim == -1 & indager >65
replace r`wavenum'workl65 = exhlim if inrange(exhlim,0,100) 
label variable r`wavenum'workl65 "r`wavenum'workl65:w1 R work limit health problem before age 65"

*wave 1 spouse work limit health problem before age 65 
gen s`wavenum'workl65 = .
spouse r`wavenum'workl65, result(s`wavenum'workl65) wave(`wavenum')
label variable s`wavenum'workl65 "s`wavenum'workl65:w1 S work limit health problem before age 65"
 
*check 

***drop ELSA wave 1 core file raw variables***
drop `retire_w1_core'

******************************************************************************************


	 	

*set wave number
local wavenum=2
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 2 core data***
local retire_w2_core wpdes wprage ExLo80 ExAInh ExCpin ExCain ExPW ExHLim ExCin ///
                     indager ExMovNb indsex askpx1 wpact1 wpaway ExMovHa wpcret wpcretl wpactw wpes
merge 1:1 idauniq using "$wave_2_core", keepusing(`retire_w2_core') nogen


***Whether retired***
*wave 2 respondent whether retired
gen r`wavenum'retemp = .
replace r`wavenum'retemp = .m if wpdes == -1
replace r`wavenum'retemp = .d if wpdes == -8
replace r`wavenum'retemp = .r if wpdes == -9
replace r`wavenum'retemp = 1 if inlist(wpdes,1,96) 
replace r`wavenum'retemp = 0 if inlist(wpdes,2,3,4,5,6,85,86,95)
label variable r`wavenum'retemp "r`wavenum'retemp:w2 whether R retired"
label values r`wavenum'retemp retire

*wave 2 spouse whether retired
gen s`wavenum'retemp = .
spouse r`wavenum'retemp, result(s`wavenum'retemp) wave(`wavenum')
label variable s`wavenum'retemp "s`wavenum'retemp:w2 whether S retired"
label values s`wavenum'retemp retire

*check 

***Retirement Age***
*wave 2 respondent retirement age
gen r`wavenum'retage = .
replace r`wavenum'retage = .m if wprage == -1
replace r`wavenum'retage = .d if wprage == -8
replace r`wavenum'retage = .r if wprage == -9
replace r`wavenum'retage = .z if wprage == -1 & !inlist(wpdes,1,96)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'retage = r`w'retage if !mi(r`w'retage) & inw`wavenum' == 1
}
replace r`wavenum'retage = .n if wprage == 0
replace r`wavenum'retage = wprage if inrange(wprage,1,120)
label variable r`wavenum'retage "r`wavenum'retage:w2 R retirement age"

*wave 2 spouse retirement age
gen s`wavenum'retage = .
spouse r`wavenum'retage, result(s`wavenum'retage) wave(`wavenum')
label variable s`wavenum'retage "s`wavenum'retage:w2 S retirement age"

*check 

****Plan to Continue Paid Work in Retirement***
**wave 2 respondent plan to continue paid work in retirement
*gen r`wavenum'retwrk_e = .
*replace r`wavenum'retwrk_e = .m if wpcretl == -1
*replace r`wavenum'retwrk_e = .p if wpcretl == -1 & askpx1 == 1 
*replace r`wavenum'retwrk_e = .e if wpcretl == -1 & inlist(wpact1,3,4,5,6,96)
*replace r`wavenum'retwrk_e = .s if wpcretl == -1 & wpes == 2
*replace r`wavenum'retwrk_e = .a if wpcretl == -1 & wpcret == 2
*replace r`wavenum'retwrk_e = .r if wpcretl == -9 | wpes == -9 | wpcret == -9
*replace r`wavenum'retwrk_e = .d if wpcretl == -8 | wpes == -8 | wpcret == -8
*replace r`wavenum'retwrk_e = 0 if wpcretl == 2
*replace r`wavenum'retwrk_e = 1 if wpcretl == 1
*label variable r`wavenum'retwrk_e "r`wavenum'retwkr_e:w`wavenum' R Prefer to work after compulsory retirement"
*label values r`wavenum'retwrk_e pworkret
*
**wave 2 spouse plan to continue paid work in retirement
*gen s`wavenum'retwrk_e = .
*spouse r`wavenum'retwrk_e, result(s`wavenum'retwrk_e) wave(`wavenum')
*label variable s`wavenum'retwrk_e "s`wavenum'retwrk_e:w`wavenum' S Prefer to work after compulsory retirement"
*label values s`wavenum'retwrk_e pworkret

***Probability of Living to 75-120***
*wave 2 respondent probability of living to 75-120 
gen r`wavenum'liv10 = .
replace r`wavenum'liv10 = .m if ExLo80 == -1
replace r`wavenum'liv10 = .d if ExLo80 == -8
replace r`wavenum'liv10 = .r if ExLo80 == -9
replace r`wavenum'liv10 = .p if ExLo80 == -1 & askpx1 == 1
replace r`wavenum'liv10 = ExLo80 if inrange(ExLo80,0,100)
label variable r`wavenum'liv10 "r`wavenum'liv10:w2 R probability of living to 75-120"

*wave 2 spouse probability of living to 75-120 
gen s`wavenum'liv10 =.
spouse r`wavenum'liv10, result(s`wavenum'liv10) wave(`wavenum')
label variable s`wavenum'liv10 "s`wavenum'liv10:w2 S probability of living to 75-120"

***Age used in Probability of Living to 75-120***
**wave 2 respondent age used in live 75-120
gen r`wavenum'liv10a = .
replace r`wavenum'liv10a = 75 if indager <= 65
replace r`wavenum'liv10a = 80 if indager > 65 & indager <= 69
replace r`wavenum'liv10a = 85 if indager > 69 & indager <= 74
replace r`wavenum'liv10a = 90 if indager > 74 & indager <= 79
replace r`wavenum'liv10a = 95 if indager > 79 & indager <= 84
replace r`wavenum'liv10a = 100 if indager > 84 & indager <= 99
replace r`wavenum'liv10a = 105 if indager > 99 & indager <= 104
replace r`wavenum'liv10a = 110 if indager > 104 & indager <= 109
replace r`wavenum'liv10a = 120 if indager > 109 & indager <= 119
label variable r`wavenum'liv10a "r`wavenum'liv10a:w2 R age used in live 75-120"

*wave 2 spouse age used in live 75-120
gen s`wavenum'liv10a = .
spouse r`wavenum'liv10a, result(s`wavenum'liv10a) wave(`wavenum')
label variable s`wavenum'liv10a "s`wavenum'liv10a:w2 S age used in live 75-120"

*check 

***Probability of respondent receiving an inheritance***
*wave 2 respondent probability of receiving an inheritance
gen r`wavenum'inher = .
replace r`wavenum'inher = .m if ExAInh == -1
replace r`wavenum'inher = .d if ExAInh == -8
replace r`wavenum'inher = .r if ExAInh == -9
replace r`wavenum'inher = .p if ExAInh == -1 & askpx1 == 1
replace r`wavenum'inher = ExAInh if inrange(ExAInh,0,100)
label variable r`wavenum'inher "r`wavenum'inher:w2 R probability of receiving an inheritance"

*wave 2 spouse probability of receiving an inheritance
gen s`wavenum'inher = .
spouse r`wavenum'inher, result(s`wavenum'inher) wave(`wavenum')
label variable s`wavenum'inher "s`wavenum'inher:w2 S probability of receiving an inheritance"

*check 

***Probability of leaving a bequest 50K+***
*wave 2 respondent probability of leaving bequest 50K+
gen r`wavenum'beq50p = .
replace r`wavenum'beq50p = .m if ExCin == -1
replace r`wavenum'beq50p = .d if ExCin == -8
replace r`wavenum'beq50p = .r if ExCin == -9
replace r`wavenum'beq50p = .p if ExCin == -1 & askpx1 == 1
replace r`wavenum'beq50p = 0 if ExCin == 0
replace r`wavenum'beq50p = ExCin if inrange(ExCin,0,100)
label variable r`wavenum'beq50p "r`wavenum'beq50p:w2 R probability of leaving bequest 50K+"

*wave 2 spouse probability of leaving bequest 50K+
gen s`wavenum'beq50p = .
spouse r`wavenum'beq50p, result(s`wavenum'beq50p) wave(`wavenum')
label variable s`wavenum'beq50p "s`wavenum'beq50p:w2 S probability of leaving bequest 50K+"

***Probability of Leaving a Bequest 150K+***
*wave 2 respondent probability of leaving bequest 150K+
gen r`wavenum'beq150p = .
replace r`wavenum'beq150p = .m if ExCpin == -1 | ExCin == -1
replace r`wavenum'beq150p = .d if ExCpin == -8 | ExCin == -8
replace r`wavenum'beq150p = .r if ExCpin == -9 | ExCin == -9
replace r`wavenum'beq150p = .p if ExCpin == -1 & askpx1 == 1
replace r`wavenum'beq150p = 0 if ExCin == 0
replace r`wavenum'beq150p = ExCpin if inrange(ExCpin,0,100)
label variable r`wavenum'beq150p "r`wavenum'beq150p:w2 R probability of leaving bequest 150K+"

*wave 2 spouse probability of leaving bequest 150K+
gen s`wavenum'beq150p =.
spouse r`wavenum'beq150p, result(s`wavenum'beq150p) wave(`wavenum')
label variable s`wavenum'beq150p "s`wavenum'beq150p:w2 S probability of leaving bequest 150K+"

*check 

***Probability of respondent working full time after age***
*wave 2 respondent probability of working full time after age
gen r`wavenum'workat = .
replace r`wavenum'workat = .m if ExPW == -1
replace r`wavenum'workat = .d if ExPW == -8
replace r`wavenum'workat = .r if ExPW == -9
replace r`wavenum'workat = .p if ExPW == -1 & askpx1 == 1
replace r`wavenum'workat = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workat = ExPW if inrange(ExPW,0,100)
label variable r`wavenum'workat "r`wavenum'workat:w2 R probability of working full time after age"

*wave 2 spouse probability of working full time after age
gen s`wavenum'workat = .
spouse r`wavenum'workat, result(s`wavenum'workat) wave(`wavenum')
label variable s`wavenum'workat "s`wavenum'workat:w2 S probability of working full time after age"

***Age used in probability of working full time after age***
*wave 2 respondent age used in probability of working full time 
gen r`wavenum'workata = .
replace r`wavenum'workata = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workata = 55 if indsex == 2 & indager <= 54
replace r`wavenum'workata = 60 if indsex == 2 & indager <= 59
replace r`wavenum'workata = 60 if indsex == 1 & indager <= 59
replace r`wavenum'workata = 65 if indsex == 1 & indager <= 64
label variable r`wavenum'workata "r`wavenum'workata:w2 R age used in probability of working full time"

*wave 2 spouse age used in probability of working full time 
gen s`wavenum'workata = .
spouse r`wavenum'workata, result(s`wavenum'workata) wave(`wavenum')
label variable s`wavenum'workata "s`wavenum'workata:w2 S age used in probability of working full time"

*check 

***Whether respondent having a work limit health problem before reach age 65***
*wave 2 respondent work limit health problem before age 65
gen r`wavenum'workl65 = .
replace r`wavenum'workl65 = .m if ExHLim == -1 
replace r`wavenum'workl65 = .d if ExHLim == -8
replace r`wavenum'workl65 = .r if ExHLim == -9
replace r`wavenum'workl65 = .p if ExHLim == -1 & askpx1 == 1
replace r`wavenum'workl65 = .w if ExHLim == -1 & (!inlist(wpact1,1,2) | wpaway == 1) 
replace r`wavenum'workl65 = .i if ExHLim == -1 & indager >65
replace r`wavenum'workl65 = ExHLim if inrange(ExHLim,0,100)  
label variable r`wavenum'workl65 "r`wavenum'workl65:w2 R work limit health problem before age 65"

*wave 2 spouse work limit health problem before age 65 
gen s`wavenum'workl65 = .
spouse r`wavenum'workl65, result(s`wavenum'workl65) wave(`wavenum')
label variable s`wavenum'workl65 "s`wavenum'workl65:w2 S work limit health problem before age 65"
 
*check 

***Probability respondent move to nursing home in next 5 years*** - added in wave 2
*wave 2 respondent probability move to nursing home in next 5 years
gen r`wavenum'pnhm5y = .
replace r`wavenum'pnhm5y = .m if ExMovNb == -1
replace r`wavenum'pnhm5y = .d if ExMovNb == -8
replace r`wavenum'pnhm5y = .r if ExMovNb == -9
replace r`wavenum'pnhm5y = .p if ExMovNb == -1 & askpx1 == 1
replace r`wavenum'pnhm5y = .i if ExMovNb == -1 & indager <60 
replace r`wavenum'pnhm5y = ExMovNb if inrange(ExMovNb,0,100) 
label variable r`wavenum'pnhm5y "r`wavenum'pnhm5y:w2 R probability move to nursing home in next 5 years"

*wave 2 spouse probability move to nursing home in next 5 years
gen s`wavenum'pnhm5y = .
spouse r`wavenum'pnhm5y, result(s`wavenum'pnhm5y) wave(`wavenum')
label variable s`wavenum'pnhm5y "s`wavenum'pnhm5y:w2 S probability move to nursing home in next 5 years"

*check 

***drop ELSA wave 2 core file raw variables***
drop `retire_w2_core'

******************************************************************************************

	 	

*set wave number
local wavenum=3
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 3 core data***
local retire_w3_core wpdes wprage exlo80 exainh excpin excain expw exhlim excin ///
                     indager exlo90 indsex askpx wpactpw wpactse wpaway wpcret wpcretl ///
                     wpactvw wpactca wpactlo wpacted wpact96 wpes

merge 1:1 idauniq using "$wave_3_core", keepusing(`retire_w3_core') nogen


***Whether retired***
*wave 3 respondent whether retired
gen r`wavenum'retemp = .
replace r`wavenum'retemp = .m if wpdes == -1
replace r`wavenum'retemp = .d if wpdes == -8
replace r`wavenum'retemp = .r if wpdes == -9
replace r`wavenum'retemp = 1 if inlist(wpdes,1,96) 
replace r`wavenum'retemp = 0 if inlist(wpdes,2,3,4,5,6,85,86,95)
label variable r`wavenum'retemp "r`wavenum'retemp:w`wavenum' whether R retired"
label values r`wavenum'retemp retire

*wave 3 spouse whether retired
gen s`wavenum'retemp = .
spouse r`wavenum'retemp, result(s`wavenum'retemp) wave(`wavenum')
label variable s`wavenum'retemp "s`wavenum'retemp:w`wavenum' whether S retired"
label values s`wavenum'retemp retire

*check 

***Retirement Age***
*wave 3 respondent retirement age
gen r`wavenum'retage = .
replace r`wavenum'retage = .m if wprage == -1
replace r`wavenum'retage = .d if wprage == -8
replace r`wavenum'retage = .r if wprage == -9
replace r`wavenum'retage = .z if wprage == -1 & !inlist(wpdes,1,96)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'retage = r`w'retage if !mi(r`w'retage) & inw`wavenum' == 1
}
replace r`wavenum'retage = .n if wprage == 0
replace r`wavenum'retage = wprage if inrange(wprage,1,120)
label variable r`wavenum'retage "r`wavenum'retage:w`wavenum' R retirement age"

*wave 3 spouse retirement age
gen s`wavenum'retage = .
spouse r`wavenum'retage, result(s`wavenum'retage) wave(`wavenum')
label variable s`wavenum'retage "s`wavenum'retage:w`wavenum' S retirement age"

*check 

****Plan to Continue Paid Work in Retirement***
**wave 3 respondent plan to continue paid work in retirement
*gen r`wavenum'retwrk_e = .
*replace r`wavenum'retwrk_e = .m if wpcretl == -1
*replace r`wavenum'retwrk_e = .p if wpcretl == -1 & askpx == 1 
*replace r`wavenum'retwrk_e = .e if wpcretl == -1 & (wpactvw == 1 | wpactca == 1 | wpactlo == 1 | wpacted == 1 | wpact96 == 1)
*replace r`wavenum'retwrk_e = .s if wpcretl == -1 & wpes == 2
*replace r`wavenum'retwrk_e = .a if wpcretl == -1 & wpcret == 2
*replace r`wavenum'retwrk_e = .r if wpcretl == -9 | wpes == -9 | wpcret == -9
*replace r`wavenum'retwrk_e = .d if wpcretl == -8 | wpes == -8 | wpcret == -8
*replace r`wavenum'retwrk_e = 0 if wpcretl == 2
*replace r`wavenum'retwrk_e = 1 if wpcretl == 1
*label variable r`wavenum'retwrk_e "r`wavenum'retwkr_e:w`wavenum' R Prefer to work after compulsory retirement"
*label values r`wavenum'retwrk_e pworkret
*
**wave 3 spouse plan to continue paid work in retirement
*gen s`wavenum'retwrk_e = .
*spouse r`wavenum'retwrk_e, result(s`wavenum'retwrk_e) wave(`wavenum')
*label variable s`wavenum'retwrk_e "s`wavenum'retwrk_e:w`wavenum' S Prefer to work after compulsory retirement"
*label values s`wavenum'retwrk_e pworkret

***Probability of living to age 85*** - added in wave 3
*wave 3 respondent probability of living to age 85
gen r`wavenum'liv85 = .
replace r`wavenum'liv85 = .m if exlo90 == -1
replace r`wavenum'liv85 = .d if exlo90 == -8 
replace r`wavenum'liv85 = .r if exlo90 == -9
replace r`wavenum'liv85 = .p if exlo90 == -1 & askpx == 1
replace r`wavenum'liv85 = .i if indager >= 70 & !mi(indager)
replace r`wavenum'liv85 = 0 if indager < 70 & exlo80 == 0
replace r`wavenum'liv85 = exlo90 if inrange(exlo90,0,100)
label variable r`wavenum'liv85 "r`wavenum'liv85:w`wavenum' R probability of living to age 85"

*wave 3 spouse probability of living to age 85
gen s`wavenum'liv85 = .
spouse r`wavenum'liv85, result(s`wavenum'liv85) wave(`wavenum')
label variable s`wavenum'liv85 "s`wavenum'liv85:w`wavenum' S probability of living to age 85"

***Probability of Living to 75-120***
*wave 3 respondent probability of living to 75-120 
gen r`wavenum'liv10 = .
replace r`wavenum'liv10 = .m if exlo80 == -1
replace r`wavenum'liv10 = .p if exlo80 == -1 & askpx == 1
replace r`wavenum'liv10 = .d if exlo80 == -8
replace r`wavenum'liv10 = .r if exlo80 == -9
replace r`wavenum'liv10 = exlo80 if inrange(exlo80,0,100)
label variable r`wavenum'liv10 "r`wavenum'liv10:w`wavenum' R probability of living to 75-120"

*wave 3 spouse probability of living to 75-120 
gen s`wavenum'liv10 = .
spouse r`wavenum'liv10, result(s`wavenum'liv10) wave(`wavenum')
label variable s`wavenum'liv10 "s`wavenum'liv10:w`wavenum' S probability of living to 75-120"

***Age Used in Probability of Living to 75-120***
*wave 3 respondent age used in live 75-120
gen r`wavenum'liv10a = .
replace r`wavenum'liv10a = 75 if indager <= 65
replace r`wavenum'liv10a = 80 if indager > 65 & indager <= 69
replace r`wavenum'liv10a = 85 if indager > 69 & indager <= 74
replace r`wavenum'liv10a = 90 if indager > 74 & indager <= 79
replace r`wavenum'liv10a = 95 if indager > 79 & indager <= 84
replace r`wavenum'liv10a = 100 if indager > 84 & indager <= 99
replace r`wavenum'liv10a = 105 if indager > 99 & indager <= 104
replace r`wavenum'liv10a = 110 if indager > 104 & indager <= 109
replace r`wavenum'liv10a = 120 if indager > 109 & indager <= 119
label variable r`wavenum'liv10a "r`wavenum'liv10a:w`wavenum' R age used in live 75-120"

*wave 3 spouse age used in live 75-120
gen s`wavenum'liv10a = .
spouse r`wavenum'liv10a, result(s`wavenum'liv10a) wave(`wavenum')
label variable s`wavenum'liv10a "s`wavenum'liv10a:w`wavenum' S age used in live 75-120"

*check 

***Probability of respondent receiving an inheritance***
*wave 3 respondent probability of receiving an inheritance
gen r`wavenum'inher = .
replace r`wavenum'inher = .m if exainh == -1
replace r`wavenum'inher = .d if exainh == -8
replace r`wavenum'inher = .r if exainh == -9
replace r`wavenum'inher = .p if exainh == -1 & askpx == 1
replace r`wavenum'inher = .i if indager > 75 & !mi(indager)
replace r`wavenum'inher = exainh if inrange(exainh,0,100)
label variable r`wavenum'inher "r`wavenum'inher:w`wavenum' R probability of receiving an inheritance"

*wave 3 spouse probability of receiving an inheritance
gen s`wavenum'inher = .
spouse r`wavenum'inher, result(s`wavenum'inher) wave(`wavenum')
label variable s`wavenum'inher "s`wavenum'inher:w`wavenum' S probability of receiving an inheritance"

*check 

***Probability of leaving a bequest of 50K+***
*wave 3 respondent probability of leaving bequest 50K+
gen r`wavenum'beq50p = .
replace r`wavenum'beq50p = .m if excin == -1
replace r`wavenum'beq50p = .d if excin == -8
replace r`wavenum'beq50p = .r if excin == -9
replace r`wavenum'beq50p = .p if excin == -1 & askpx == 1
replace r`wavenum'beq50p = 0 if excin == 0
replace r`wavenum'beq50p = excin if inrange(excin,0,100)
label variable r`wavenum'beq50p "r`wavenum'beq50p:w`wavenum' R probability of leaving bequest 50K+"

*wave 3 spouse probability of leaving bequest 50K+
gen s`wavenum'beq50p = .
spouse r`wavenum'beq50p, result(s`wavenum'beq50p) wave(`wavenum')
label variable s`wavenum'beq50p "s`wavenum'beq50p:w`wavenum' S probability of leaving bequest 50K+"

***Probability of leaving a bequest of 150K+
*wave 3 respondent probability of leaving bequest 150K+
gen r`wavenum'beq150p = .
replace r`wavenum'beq150p = .m if excpin == -1 | excin == -1
replace r`wavenum'beq150p = .d if excpin == -8 | excin == -8
replace r`wavenum'beq150p = .r if excpin == -9 | excin == -9
replace r`wavenum'beq150p = .p if excpin == -1 & askpx == 1
replace r`wavenum'beq150p = 0 if excin == 0
replace r`wavenum'beq150p = excpin if inrange(excpin,0,100)
label variable r`wavenum'beq150p "r`wavenum'beq150p:w`wavenum' R probability of leaving bequest 150K+"

*wave 3 spouse probability of leaving bequest 150K+
gen s`wavenum'beq150p = .
spouse r`wavenum'beq150p, result(s`wavenum'beq150p) wave(`wavenum')
label variable s`wavenum'beq150p "s`wavenum'beq150p:w`wavenum' S probability of leaving bequest 150K+"

*check 

***Probability of respondent working full time after age***
*wave 3 respondent probability of working full time after age
gen r`wavenum'workat = .
replace r`wavenum'workat = .m if expw == -1
replace r`wavenum'workat = .d if expw == -8
replace r`wavenum'workat = .r if expw == -9
replace r`wavenum'workat = .p if expw == -1 & askpx == 1
replace r`wavenum'workat = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workat = expw if inrange(expw,0,100)
label variable r`wavenum'workat "r`wavenum'workat:w`wavenum' R probability of working full time after age"

*wave 3 spouse probability of working full time after age
gen s`wavenum'workat = .
spouse r`wavenum'workat, result(s`wavenum'workat) wave(`wavenum')
label variable s`wavenum'workat "s`wavenum'workat:w`wavenum' S probability of working full time after age"

***Age used in probability of working full time***
*wave 3 respondent age used in probability of working full time 
gen r`wavenum'workata = .
replace r`wavenum'workata = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workata = 55 if indsex == 2 & indager <= 54
replace r`wavenum'workata = 60 if indsex == 2 & indager <= 59
replace r`wavenum'workata = 60 if indsex == 1 & indager <= 59
replace r`wavenum'workata = 65 if indsex == 1 & indager <= 64
label variable r`wavenum'workata "r`wavenum'workata:w`wavenum' R age used in probability of working full time"

**wave 3 spouse age used in probability of working full time 
gen s`wavenum'workata = .
spouse r`wavenum'workata, result(s`wavenum'workata) wave(`wavenum')
label variable s`wavenum'workata "s`wavenum'workata:w`wavenum' S age used in probability of working full time"

*check 

***Whether respondent having a work limit health problem before reach age 65***
*wave 3 respondent work limit health problem before age 65
gen r`wavenum'workl65 = .
replace r`wavenum'workl65 = .m if exhlim == -1 
replace r`wavenum'workl65 = .d if exhlim == -8
replace r`wavenum'workl65 = .r if exhlim == -9
replace r`wavenum'workl65 = .p if exhlim == -1 & askpx == 1
replace r`wavenum'workl65 = .w if exhlim == -1 & (wpactpw ~= 1 | wpactse ~= 1 | wpaway == 1) 
replace r`wavenum'workl65 = .i if exhlim == -1 & indager > 65
replace r`wavenum'workl65 = exhlim if inrange(exhlim,0,100) 
label variable r`wavenum'workl65 "r`wavenum'workl65:w`wavenum' R work limit health problem before age 65"

*wave 3 spouse work limit health problem before age 65 
gen s`wavenum'workl65 = .
spouse r`wavenum'workl65, result(s`wavenum'workl65) wave(`wavenum')
label variable s`wavenum'workl65 "s`wavenum'workl65:w`wavenum' S work limit health problem before age 65"
 
*check 



***drop ELSA wave 3 core file raw variables***
drop `retire_w3_core'

******************************************************************************************

	 	

*set wave number
local wavenum=4
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 4 core data***
local retire_w4_core wpdes wprage exlo80 exainh excpin excain expw exhlim excin ///
                     indager exlo90 indsex askpx wpactpw wpactse wpaway wpcret wpcretl ///
                     wpactvw wpactca wpactlo wpacted wpact96 wpes

merge 1:1 idauniq using "$wave_4_core", keepusing(`retire_w4_core') nogen


***Whether retired***
*wave 4 respondent whether retired
gen r`wavenum'retemp = .
replace r`wavenum'retemp = .m if wpdes == -1
replace r`wavenum'retemp = .d if wpdes == -8
replace r`wavenum'retemp = .r if wpdes == -9
replace r`wavenum'retemp = 1 if inlist(wpdes,1,96) 
replace r`wavenum'retemp = 0 if inlist(wpdes,2,3,4,5,6,85,86,95)
label variable r`wavenum'retemp "r`wavenum'retemp:w`wavenum' whether R retired"
label values r`wavenum'retemp retire    

*wave 4 spouse whether retired
gen s`wavenum'retemp = .
spouse r`wavenum'retemp, result(s`wavenum'retemp) wave(`wavenum')
label variable s`wavenum'retemp "s`wavenum'retemp:w`wavenum' whether S retired"
label values s`wavenum'retemp retire

*check 

***Retirement Age***
*wave 4 respondent retirement age
gen r`wavenum'retage = .
replace r`wavenum'retage = .m if wprage == -1 | wprage == -2
replace r`wavenum'retage = .d if wprage == -8
replace r`wavenum'retage = .r if wprage == -9
replace r`wavenum'retage = .z if wprage == -1 & !inlist(wpdes,1,96)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'retage = r`w'retage if !mi(r`w'retage) & inw`wavenum' == 1
}
replace r`wavenum'retage = .n if wprage == 0
replace r`wavenum'retage = wprage if inrange(wprage,1,120)
label variable r`wavenum'retage "r`wavenum'retage:w`wavenum' R retirement age"

*wave 4 spouse retirement age
gen s`wavenum'retage = .
spouse r`wavenum'retage, result(s`wavenum'retage) wave(`wavenum')
label variable s`wavenum'retage "s`wavenum'retage:w`wavenum' S retirement age"

*check 

****Plan to Continue Paid Work in Retirement***
**wave 4 respondent plan to continue paid work in retirement
*gen r`wavenum'retwrk_e = .
*replace r`wavenum'retwrk_e = .m if wpcretl == -1
*replace r`wavenum'retwrk_e = .p if wpcretl == -1 & askpx == 1 
*replace r`wavenum'retwrk_e = .e if wpcretl == -1 & (wpactvw == 1 | wpactca == 1 | wpactlo == 1 | wpacted == 1 | wpact96 == 1)
*replace r`wavenum'retwrk_e = .s if wpcretl == -1 & wpes == 2
*replace r`wavenum'retwrk_e = .a if wpcretl == -1 & wpcret == 2
*replace r`wavenum'retwrk_e = .r if wpcretl == -9 | wpes == -9 | wpcret == -9
*replace r`wavenum'retwrk_e = .d if wpcretl == -8 | wpes == -8 | wpcret == -8
*replace r`wavenum'retwrk_e = 0 if wpcretl == 2
*replace r`wavenum'retwrk_e = 1 if wpcretl == 1
*label variable r`wavenum'retwrk_e "r`wavenum'retwkr_e:w`wavenum' R Prefer to work after compulsory retirement"
*label values r`wavenum'retwrk_e pworkret
*
**wave 4 spouse plan to continue paid work in retirement
*gen s`wavenum'retwrk_e = .
*spouse r`wavenum'retwrk_e, result(s`wavenum'retwrk_e) wave(`wavenum')
*label variable s`wavenum'retwrk_e "s`wavenum'retwrk_e:w`wavenum' S Prefer to work after compulsory retirement"
*label values s`wavenum'retwrk_e pworkret

***Probability of living to age 85***
*wave 4 respondent probability of living to age 85
gen r`wavenum'liv85 = .
replace r`wavenum'liv85 = .m if exlo90 == -1
replace r`wavenum'liv85 = .d if exlo90 == -8 
replace r`wavenum'liv85 = .r if exlo90 == -9
replace r`wavenum'liv85 = .p if exlo90 == -1 & askpx == 1
replace r`wavenum'liv85 = .i if indager >= 70 & !mi(indager)
replace r`wavenum'liv85 = 0 if indager < 70 & exlo80 == 0
replace r`wavenum'liv85 = exlo90 if inrange(exlo90,0,100)
label variable r`wavenum'liv85 "r`wavenum'liv85:w`wavenum' R probability of living to age 85"

*wave 4 spouse probability of living to age 85
gen s`wavenum'liv85 = .
spouse r`wavenum'liv85, result(s`wavenum'liv85) wave(`wavenum')
label variable s`wavenum'liv85 "s`wavenum'liv85:w`wavenum' S probability of living to age 85"

***Probability of Living to 75-120***
*wave 4 respondent probability of living to 75-120 
gen r`wavenum'liv10 = .
replace r`wavenum'liv10 = .m if exlo80 == -1
replace r`wavenum'liv10 = .d if exlo80 == -8
replace r`wavenum'liv10 = .r if exlo80 == -9
replace r`wavenum'liv10 = .p if exlo80 == -1 & askpx == 1
replace r`wavenum'liv10 = exlo80 if inrange(exlo80,0,100)
label variable r`wavenum'liv10 "r`wavenum'liv10:w`wavenum' R probability of living to 75-120"

*wave 4 spouse probability of living to 75-120 
gen s`wavenum'liv10 = .
spouse r`wavenum'liv10, result(s`wavenum'liv10) wave(`wavenum')
label variable s`wavenum'liv10 "s`wavenum'liv10:w`wavenum' S probability of living to 75-120"

***Age Used in Probability of Living to 75-120***
*wave 4 respondent age used in live 75-120
gen r`wavenum'liv10a = .
replace r`wavenum'liv10a = 75 if indager <= 65
replace r`wavenum'liv10a = 80 if indager > 65 & indager <= 69
replace r`wavenum'liv10a = 85 if indager > 69 & indager <= 74
replace r`wavenum'liv10a = 90 if indager > 74 & indager <= 79
replace r`wavenum'liv10a = 95 if indager > 79 & indager <= 84
replace r`wavenum'liv10a = 100 if indager > 84 & indager <= 99
replace r`wavenum'liv10a = 105 if indager > 99 & indager <= 104
replace r`wavenum'liv10a = 110 if indager > 104 & indager <= 109
replace r`wavenum'liv10a = 120 if indager > 109 & indager <= 119
label variable r`wavenum'liv10a "r`wavenum'liv10a:w`wavenum' R age used in live 75-120"

*wave 4 spouse age used in live 75-120
gen s`wavenum'liv10a = .
spouse r`wavenum'liv10a, result(s`wavenum'liv10a) wave(`wavenum')
label variable s`wavenum'liv10a "s`wavenum'liv10a:w`wavenum' S age used in live 75-120"

*check 

***Probability of respondent receiving an inheritance***
*wave 4 respondent probability of receiving an inheritance
gen r`wavenum'inher = .
replace r`wavenum'inher = .m if exainh == -1
replace r`wavenum'inher = .d if exainh == -8
replace r`wavenum'inher = .r if exainh == -9
replace r`wavenum'inher = .p if exainh == -1 & askpx == 1
replace r`wavenum'inher = .i if indager > 75 & !mi(indager)
replace r`wavenum'inher = exainh if inrange(exainh,0,100)
label variable r`wavenum'inher "r`wavenum'inher:w`wavenum' R probability of receiving an inheritance"

*wave 4 spouse probability of receiving an inheritance
gen s`wavenum'inher = .
spouse r`wavenum'inher, result(s`wavenum'inher) wave(`wavenum')
label variable s`wavenum'inher "s`wavenum'inher:w`wavenum' S probability of receiving an inheritance"

*check 

***Probability of leaving a bequest 50K+***
*wave 4 respondent probability of leaving bequest 50K+
gen r`wavenum'beq50p = .
replace r`wavenum'beq50p = .m if excin == -1
replace r`wavenum'beq50p = .d if excin == -8
replace r`wavenum'beq50p = .r if excin == -9
replace r`wavenum'beq50p = .p if excin == -1 & askpx == 1
replace r`wavenum'beq50p = 0 if excin == 0
replace r`wavenum'beq50p = excin if inrange(excin,0,100)
label variable r`wavenum'beq50p "r`wavenum'beq50p:w`wavenum' R probability of leaving bequest 50K+"

*wave 4 spouse probability of leaving bequest 50K+
gen s`wavenum'beq50p = .
spouse r`wavenum'beq50p, result(s`wavenum'beq50p) wave(`wavenum')
label variable s`wavenum'beq50p "s`wavenum'beq50p:w`wavenum' S probability of leaving bequest 50K+"

***Probability of leaving a bequest 150K+***
*wave 4 respondent probability of leaving bequest 150K+
gen r`wavenum'beq150p = .
replace r`wavenum'beq150p = .m if excpin == -1 | excin == -1
replace r`wavenum'beq150p = .d if excpin == -8 | excin == -8
replace r`wavenum'beq150p = .r if excpin == -9 | excin == -9
replace r`wavenum'beq150p = .p if excpin == -1 & askpx == 1
replace r`wavenum'beq150p = 0 if excin == 0
replace r`wavenum'beq150p = excpin if inrange(excpin,0,100)
label variable r`wavenum'beq150p "r`wavenum'beq150p:w`wavenum' R probability of leaving bequest 150K+"

*wave 4 spouse probability of leaving bequest 150K+
gen s`wavenum'beq150p = .
spouse r`wavenum'beq150p, result(s`wavenum'beq150p) wave(`wavenum')
label variable s`wavenum'beq150p "s`wavenum'beq150p:w`wavenum' S probability of leaving bequest 150K+"

*check 

***Probability of respondent working full time after age***
*wave 4 respondent probability of working full time after age
gen r`wavenum'workat = .
replace r`wavenum'workat = .m if expw == -1
replace r`wavenum'workat = .d if expw == -8
replace r`wavenum'workat = .r if expw == -9
replace r`wavenum'workat = .p if expw == -1 & askpx == 1
replace r`wavenum'workat = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workat = expw if inrange(expw,0,100)
label variable r`wavenum'workat "r`wavenum'workat:w`wavenum' R probability of working full time after age"

*wave 4 spouse probability of working full time after age
gen s`wavenum'workat = .
spouse r`wavenum'workat, result(s`wavenum'workat) wave(`wavenum')
label variable s`wavenum'workat "s`wavenum'workat:w`wavenum' S probability of working full time after age"

***Age used in probability of working full time***
*wave 4 respondent age used in probability of working full time 
gen r`wavenum'workata = .
replace r`wavenum'workata = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workata = 55 if indsex == 2 & indager <= 54
replace r`wavenum'workata = 60 if indsex == 2 & indager <= 59
replace r`wavenum'workata = 60 if indsex == 1 & indager <= 59
replace r`wavenum'workata = 65 if indsex == 1 & indager <= 64
label variable r`wavenum'workata "r`wavenum'workata:w`wavenum' R age used in probability of working full time"

**wave 4 spouse age used in probability of working full time 
gen s`wavenum'workata = .
spouse r`wavenum'workata, result(s`wavenum'workata) wave(`wavenum')
label variable s`wavenum'workata "s`wavenum'workata:w`wavenum' S age used in probability of working full time"

*check 

***Whether respondent having a work limit health problem before reach age 65***
*wave 4 respondent work limit health problem before age 65
gen r`wavenum'workl65 = .
replace r`wavenum'workl65 = .m if exhlim == -1 
replace r`wavenum'workl65 = .d if exhlim == -8
replace r`wavenum'workl65 = .r if exhlim == -9
replace r`wavenum'workl65 = .p if exhlim == -1 & askpx == 1
replace r`wavenum'workl65 = .w if exhlim == -1 & (wpactpw ~= 1 | wpactse ~= 1 | wpaway == 1) 
replace r`wavenum'workl65 = .i if exhlim == -1 & indager >65
replace r`wavenum'workl65 = exhlim if inrange(exhlim,0,100) 
label variable r`wavenum'workl65 "r`wavenum'workl65:w`wavenum' R work limit health problem before age 65"

*wave 4 spouse work limit health problem before age 65 
gen s`wavenum'workl65 = .
spouse r`wavenum'workl65, result(s`wavenum'workl65) wave(`wavenum')
label variable s`wavenum'workl65 "s`wavenum'workl65:w`wavenum' S work limit health problem before age 65"

*check 



***drop ELSA wave 4 core file raw variables***
drop `retire_w4_core'

******************************************************************************************


	 	
	 	

	 	

*set wave number
local wavenum=5
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 5 core data***
local retire_w5_core wpdes wprage exlo80 exainh excpin excain expw exhlim excin ///
                     indager exlo90 indsex askpx wpactpw wpactse wpaway wpcret wpcretl ///
                     wpactvw wpactca wpactlo wpacted wpact96 wpes

merge 1:1 idauniq using "$wave_5_core", keepusing(`retire_w5_core') nogen


***Whether retired***
*wave 5 respondent whether retired
gen r`wavenum'retemp = .
replace r`wavenum'retemp = .m if wpdes == -1
replace r`wavenum'retemp = .d if wpdes == -8
replace r`wavenum'retemp = .r if wpdes == -9
replace r`wavenum'retemp = 1 if inlist(wpdes,1,96) 
replace r`wavenum'retemp = 0 if inlist(wpdes,2,3,4,5,6,85,86,95)
label variable r`wavenum'retemp "r`wavenum'retemp:w`wavenum' whether R retired"
label values r`wavenum'retemp retire

*wave 5 spouse whether retired
gen s`wavenum'retemp = .
spouse r`wavenum'retemp, result(s`wavenum'retemp) wave(`wavenum')
label variable s`wavenum'retemp "s`wavenum'retemp:w`wavenum' whether S retired"
label values s`wavenum'retemp retire

*check 

***Retirement Age***
*wave 5 respondent retirement age
gen r`wavenum'retage = .
replace r`wavenum'retage = .m if wprage == -1
replace r`wavenum'retage = .d if wprage == -8
replace r`wavenum'retage = .r if wprage == -9
replace r`wavenum'retage = .z if wprage == -1 & !inlist(wpdes,1,96)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'retage = r`w'retage if !mi(r`w'retage) & inw`wavenum' == 1
}
replace r`wavenum'retage = .n if wprage == 0
replace r`wavenum'retage = wprage if inrange(wprage,1,120)
label variable r`wavenum'retage "r`wavenum'retage:w`wavenum' R retirement age"

*wave 5 spouse retirement age
gen s`wavenum'retage = .
spouse r`wavenum'retage, result(s`wavenum'retage) wave(`wavenum')
label variable s`wavenum'retage "s`wavenum'retage:w`wavenum' S retirement age"

*check 

****Plan to Continue Paid Work in Retirement***
**wave 5 respondent plan to continue paid work in retirement
*gen r`wavenum'retwrk_e = .
*replace r`wavenum'retwrk_e = .m if wpcretl == -1
*replace r`wavenum'retwrk_e = .p if wpcretl == -1 & askpx == 1 
*replace r`wavenum'retwrk_e = .e if wpcretl == -1 & (wpactvw == 1 | wpactca == 1 | wpactlo == 1 | wpacted == 1 | wpact96 == 1)
*replace r`wavenum'retwrk_e = .s if wpcretl == -1 & wpes == 2
*replace r`wavenum'retwrk_e = .a if wpcretl == -1 & wpcret == 2
*replace r`wavenum'retwrk_e = .r if wpcretl == -9 | wpes == -9 | wpcret == -9
*replace r`wavenum'retwrk_e = .d if wpcretl == -8 | wpes == -8 | wpcret == -8
*replace r`wavenum'retwrk_e = 0 if wpcretl == 2
*replace r`wavenum'retwrk_e = 1 if wpcretl == 1
*label variable r`wavenum'retwrk_e "r`wavenum'retwkr_e:w`wavenum' R Prefer to work after compulsory retirement"
*label values r`wavenum'retwrk_e pworkret
*
**wave 5 spouse plan to continue paid work in retirement
*gen s`wavenum'retwrk_e = .
*spouse r`wavenum'retwrk_e, result(s`wavenum'retwrk_e) wave(`wavenum')
*label variable s`wavenum'retwrk_e "s`wavenum'retwrk_e:w`wavenum' S Prefer to work after compulsory retirement"
*label values s`wavenum'retwrk_e pworkret

***Probability of living to age 85***
*wave 5 respondent probability of living to age 85
gen r`wavenum'liv85 = .
replace r`wavenum'liv85 = .m if exlo90 == -1
replace r`wavenum'liv85 = .d if exlo90 == -8 
replace r`wavenum'liv85 = .r if exlo90 == -9
replace r`wavenum'liv85 = .p if exlo90 == -1 & askpx == 1
replace r`wavenum'liv85 = .i if indager >= 70 & !mi(indager)
replace r`wavenum'liv85 = 0 if indager < 70 & exlo80 == 0
replace r`wavenum'liv85 = exlo90 if inrange(exlo90,0,100)
label variable r`wavenum'liv85 "r`wavenum'liv85:w`wavenum' R probability of living to age 85"

*wave 5 spouse probability of living to age 85
gen s`wavenum'liv85 = .
spouse r`wavenum'liv85, result(s`wavenum'liv85) wave(`wavenum')
label variable s`wavenum'liv85 "s`wavenum'liv85:w`wavenum' S probability of living to age 85"

***Probability of living to 75-120***
*wave 5 respondent probability of living to 75-120 
gen r`wavenum'liv10 = .
replace r`wavenum'liv10 = exlo80 if inrange(exlo80,0,100)
replace r`wavenum'liv10 = .m if exlo80 == -1
replace r`wavenum'liv10 = .d if exlo80 == -8
replace r`wavenum'liv10 = .r if exlo80 == -9
replace r`wavenum'liv10 = .p if exlo80 == -1 & askpx == 1
label variable r`wavenum'liv10 "r`wavenum'liv10:w`wavenum' R probability of living to 75-120"

*wave 5 spouse probability of living to 75-120 
gen s`wavenum'liv10 = .
spouse r`wavenum'liv10, result(s`wavenum'liv10) wave(`wavenum')
label variable s`wavenum'liv10 "s`wavenum'liv10:w`wavenum' S probability of living to 75-120"

***Age used in probability of living to 75-120***
*wave 5 respondent age used in live 75-120
gen r`wavenum'liv10a = .
replace r`wavenum'liv10a = 75 if indager <= 65
replace r`wavenum'liv10a = 80 if indager > 65 & indager <= 69
replace r`wavenum'liv10a = 85 if indager > 69 & indager <= 74
replace r`wavenum'liv10a = 90 if indager > 74 & indager <= 79
replace r`wavenum'liv10a = 95 if indager > 79 & indager <= 84
replace r`wavenum'liv10a = 100 if indager > 84 & indager <= 99
replace r`wavenum'liv10a = 105 if indager > 99 & indager <= 104
replace r`wavenum'liv10a = 110 if indager > 104 & indager <= 109
replace r`wavenum'liv10a = 120 if indager > 109 & indager <= 119
label variable r`wavenum'liv10a "r`wavenum'liv10a:w`wavenum' R age used in live 75-120"

*wave 5 spouse age used in live 75-120
gen s`wavenum'liv10a = .
spouse r`wavenum'liv10a, result(s`wavenum'liv10a) wave(`wavenum')
label variable s`wavenum'liv10a "s`wavenum'liv10a:w`wavenum' S age used in live 75-120"

*check 

***Probability of respondent receiving an inheritance***
*wave 5 respondent probability of receiving an inheritance
gen r`wavenum'inher = .
replace r`wavenum'inher = .m if exainh == -1
replace r`wavenum'inher = .p if exainh == -1 & askpx == 1
replace r`wavenum'inher = .d if exainh == -8
replace r`wavenum'inher = .r if exainh == -9
replace r`wavenum'inher = .i if indager > 75 & !mi(indager)

replace r`wavenum'inher = exainh if inrange(exainh,0,100)
label variable r`wavenum'inher "r`wavenum'inher:w`wavenum' R probability of receiving an inheritance"

*wave 5 spouse probability of receiving an inheritance
gen s`wavenum'inher = .
spouse r`wavenum'inher, result(s`wavenum'inher) wave(`wavenum')
label variable s`wavenum'inher "s`wavenum'inher:w`wavenum' S probability of receiving an inheritance"

*check 

***Probability of leaving a bequest 50K+***
*wave 5 respondent probability of leaving bequest 50K+
gen r`wavenum'beq50p = .
replace r`wavenum'beq50p = .m if excin == -1
replace r`wavenum'beq50p = .d if excin == -8
replace r`wavenum'beq50p = .r if excin == -9
replace r`wavenum'beq50p = .p if excin == -1 & askpx == 1
replace r`wavenum'beq50p = 0 if excin == 0
replace r`wavenum'beq50p = excin if inrange(excin,0,100)
label variable r`wavenum'beq50p "r`wavenum'beq50p:w`wavenum' R probability of leaving bequest 50K+"

*wave 5 spouse probability of leaving bequest 50K+
gen s`wavenum'beq50p =.
spouse r`wavenum'beq50p, result(s`wavenum'beq50p) wave(`wavenum')
label variable s`wavenum'beq50p "s`wavenum'beq50p:w`wavenum' S probability of leaving bequest 50K+"

***Probability of leaving a bequest 150K+***
*wave 5 respondent probability of leaving bequest 150K+
gen r`wavenum'beq150p = .
replace r`wavenum'beq150p = .m if excpin == -1 | excin == -1
replace r`wavenum'beq150p = .d if excpin == -8 | excin == -8
replace r`wavenum'beq150p = .r if excpin == -9 | excin == -9
replace r`wavenum'beq150p = .p if excpin == -1 & askpx == 1
replace r`wavenum'beq150p = 0 if excin == 0
replace r`wavenum'beq150p = excpin if inrange(excpin,0,100)
label variable r`wavenum'beq150p "r`wavenum'beq150p:w`wavenum' R probability of leaving bequest 150K+"

*wave 5 spouse probability of leaving bequest 150K+
gen s`wavenum'beq150p = .
spouse r`wavenum'beq150p, result(s`wavenum'beq150p) wave(`wavenum')
label variable s`wavenum'beq150p "s`wavenum'beq150p:w`wavenum' S probability of leaving bequest 150K+"

*check 

***Probability of respondent working full time after age***
*wave 5 respondent probability of working full time after age
gen r`wavenum'workat = .
replace r`wavenum'workat = .m if expw == -1
replace r`wavenum'workat = .d if expw == -8
replace r`wavenum'workat = .r if expw == -9
replace r`wavenum'workat = .p if expw == -1 & askpx == 1
replace r`wavenum'workat = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workat = expw if inrange(expw,0,100)
label variable r`wavenum'workat "r`wavenum'workat:w`wavenum' R probability of working full time after age"

*wave 5 spouse probability of working full time after age
gen s`wavenum'workat = .
spouse r`wavenum'workat, result(s`wavenum'workat) wave(`wavenum')
label variable s`wavenum'workat "s`wavenum'workat:w`wavenum' S probability of working full time after age"

***Age used in probability of working full time***
*wave 5 respondent age used in probability of working full time 
gen r`wavenum'workata = .
replace r`wavenum'workata = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workata = 55 if indsex == 2 & indager <= 54
replace r`wavenum'workata = 60 if indsex == 2 & indager <= 59
replace r`wavenum'workata = 60 if indsex == 1 & indager <= 59
replace r`wavenum'workata = 65 if indsex == 1 & indager <= 64
label variable r`wavenum'workata "r`wavenum'workata:w`wavenum' R age used in probability of working full time"

**wave 5 spouse age used in probability of working full time 
gen s`wavenum'workata = .
spouse r`wavenum'workata, result(s`wavenum'workata) wave(`wavenum')
label variable s`wavenum'workata "s`wavenum'workata:w`wavenum' S age used in probability of working full time"

*check 

***Whether respondent having a work limit health problem before reach age 65***
*wave 5 respondent work limit health problem before age 65
gen r`wavenum'workl65 = .
replace r`wavenum'workl65 = .m if exhlim == -1 
replace r`wavenum'workl65 = .d if exhlim == -8
replace r`wavenum'workl65 = .r if exhlim == -9
replace r`wavenum'workl65 = .p if exhlim == -1 & askpx == 1
replace r`wavenum'workl65 = .w if exhlim == -1 & (wpactpw ~= 1 | wpactse ~= 1 | wpaway == 1) 
replace r`wavenum'workl65 = .i if exhlim == -1 & indager > 65
replace r`wavenum'workl65 = exhlim if inrange(exhlim,0,100) 
label variable r`wavenum'workl65 "r`wavenum'workl65:w`wavenum' R work limit health problem before age 65"

*wave 5 spouse work limit health problem before age 65 
gen s`wavenum'workl65 = .
spouse r`wavenum'workl65, result(s`wavenum'workl65) wave(`wavenum')
label variable s`wavenum'workl65 "s`wavenum'workl65:w`wavenum' S work limit health problem before age 65"

*check 



***drop ELSA wave 5 core file raw variables***
drop `retire_w5_core'

******************************************************************************************

	 	
	 	

	 	

	 	

*set wave number
local wavenum=6
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 6 core data***
local retire_w6_core WpDes WpRAge ExLo80 ExAInh ExCpin ExCain ExPW ExHLim ExCin ///
                     indager ExLo90 indsex ExMovNb askpx wpactpw wpactse WpAway askinst ///
                     ExNHEv WPCRet WPCRetL WpEs wpactvw wpactca wpactlo wpacted wpact96

merge 1:1 idauniq using "$wave_6_core", keepusing(`retire_w6_core') nogen


***Whether retired***
*wave 6 respondent whether retired
gen r`wavenum'retemp = .
replace r`wavenum'retemp = .m if WpDes == -1
replace r`wavenum'retemp = .d if WpDes == -8
replace r`wavenum'retemp = .r if WpDes == -9
replace r`wavenum'retemp = 1 if inlist(WpDes,1,96) 
replace r`wavenum'retemp = 0 if inlist(WpDes,2,3,4,5,6,85,86,95)
label variable r`wavenum'retemp "r`wavenum'retemp:w`wavenum' whether R retired"
label values r`wavenum'retemp retire

*wave 6 spouse whether retired
gen s`wavenum'retemp = .
spouse r`wavenum'retemp, result(s`wavenum'retemp) wave(`wavenum')
label variable s`wavenum'retemp "s`wavenum'retemp:w`wavenum' whether S retired"
label values s`wavenum'retemp retire

*check 

***Retirement Age***
*wave 6 respondent retirement age
gen r`wavenum'retage = .
replace r`wavenum'retage = .m if WpRAge == -1
replace r`wavenum'retage = .d if WpRAge == -8
replace r`wavenum'retage = .r if WpRAge == -9
replace r`wavenum'retage = .z if WpRAge == -1 & !inlist(WpDes,1,96)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'retage = r`w'retage if !mi(r`w'retage) & inw`wavenum' == 1
}
replace r`wavenum'retage = .n if WpRAge==0
replace r`wavenum'retage = WpRAge if inrange(WpRAge,1,150)
label variable r`wavenum'retage "r`wavenum'retage:w`wavenum' R retirement age"

*wave 6 spouse retirement age
gen s`wavenum'retage = .
spouse r`wavenum'retage, result(s`wavenum'retage) wave(`wavenum')
label variable s`wavenum'retage "s`wavenum'retage:w`wavenum' S retirement age"

*check 

****Plan to Continue Paid Work in Retirement***
**wave 6 respondent plan to continue paid work in retirement
*gen r`wavenum'retwrk_e = .
*replace r`wavenum'retwrk_e = .m if WPCRetL == -1
*replace r`wavenum'retwrk_e = .p if WPCRetL == -1 & askpx == 1 
*replace r`wavenum'retwrk_e = .e if WPCRetL == -1 & (wpactvw == 1 | wpactca == 1 | wpactlo == 1 | wpacted == 1 | wpact96 == 1)
*replace r`wavenum'retwrk_e = .s if WPCRetL == -1 & WpEs == 2
*replace r`wavenum'retwrk_e = .a if WPCRetL == -1 & WPCRet == 2
*replace r`wavenum'retwrk_e = .r if WPCRetL == -9 | WpEs == -9 | WPCRet == -9
*replace r`wavenum'retwrk_e = .d if WPCRetL == -8 | WpEs == -8 | WPCRet == -8
*replace r`wavenum'retwrk_e = 0 if WPCRetL == 2
*replace r`wavenum'retwrk_e = 1 if WPCRetL == 1
*label variable r`wavenum'retwrk_e "r`wavenum'retwkr_e:w`wavenum' R Prefer to work after compulsory retirement"
*label values r`wavenum'retwrk_e pworkret
*
**wave 6 spouse plan to continue paid work in retirement
*gen s`wavenum'retwrk_e = .
*spouse r`wavenum'retwrk_e, result(s`wavenum'retwrk_e) wave(`wavenum')
*label variable s`wavenum'retwrk_e "s`wavenum'retwrk_e:w`wavenum' S Prefer to work after compulsory retirement"
*label values s`wavenum'retwrk_e pworkret

***Probability of living to age 85***
*wave 6 respondent probability of living to age 85
gen r`wavenum'liv85 = .
replace r`wavenum'liv85 = .m if ExLo90 == -1
replace r`wavenum'liv85 = .d if ExLo90 == -8 
replace r`wavenum'liv85 = .r if ExLo90 == -9
replace r`wavenum'liv85 = .p if ExLo90 == -1 & askpx == 1
replace r`wavenum'liv85 = .i if indager >= 70 & !mi(indager)
replace r`wavenum'liv85 = 0 if indager < 70 & ExLo80 == 0
replace r`wavenum'liv85 = ExLo90 if inrange(ExLo90,0,100)
label variable r`wavenum'liv85 "r`wavenum'liv85:w`wavenum' R probability of living to age 85"

*wave 6 spouse probability of living to age 85
gen s`wavenum'liv85 = .
spouse r`wavenum'liv85, result(s`wavenum'liv85) wave(`wavenum')
label variable s`wavenum'liv85 "s`wavenum'liv85:w`wavenum' S probability of living to age 85"

***Probability of Living to 75-120***
*wave 6 respondent probability of living to 75-120 
gen r`wavenum'liv10 = .
replace r`wavenum'liv10 = .m if ExLo80 == -1
replace r`wavenum'liv10 = .d if ExLo80 == -8
replace r`wavenum'liv10 = .r if ExLo80 == -9
replace r`wavenum'liv10 = .p if ExLo80 == -1 & askpx == 1
replace r`wavenum'liv10 = ExLo80 if inrange(ExLo80,0,100)
label variable r`wavenum'liv10 "r`wavenum'liv10:w`wavenum' R probability of living to 75-120"

*wave 6 spouse probability of living to 75-120 
gen s`wavenum'liv10 = .
spouse r`wavenum'liv10, result(s`wavenum'liv10) wave(`wavenum')
label variable s`wavenum'liv10 "s`wavenum'liv10:w`wavenum' S probability of living to 75-120"

***Age used in probability of living to 75-120***
*wave 6 respondent age used in live 75-120
gen r`wavenum'liv10a = .
replace r`wavenum'liv10a = 75 if indager <= 65
replace r`wavenum'liv10a = 80 if indager > 65 & indager <= 69
replace r`wavenum'liv10a = 85 if indager > 69 & indager <= 74
replace r`wavenum'liv10a = 90 if indager > 74 & indager <= 79
replace r`wavenum'liv10a = 95 if indager > 79 & indager <= 84
replace r`wavenum'liv10a = 100 if indager > 84 & indager <= 99
replace r`wavenum'liv10a = 105 if indager > 99 & indager <= 104
replace r`wavenum'liv10a = 110 if indager > 104 & indager <= 109
replace r`wavenum'liv10a = 120 if indager > 109 & indager <= 119
label variable r`wavenum'liv10a "r`wavenum'liv10a:w`wavenum' R age used in live 75-120"

*wave 6 spouse age used in live 75-120
gen s`wavenum'liv10a =.
spouse r`wavenum'liv10a, result(s`wavenum'liv10a) wave(`wavenum')
label variable s`wavenum'liv10a "s`wavenum'liv10a:w`wavenum' S age used in live 75-120"

*check 

***Probability of respondent receiving an inheritance***
*wave 6 respondent probability of receiving an inheritance
gen r`wavenum'inher = .
replace r`wavenum'inher = .m if ExAInh == -1
replace r`wavenum'inher = .p if ExAInh == -1 & askpx == 1
replace r`wavenum'inher = .d if ExAInh == -8
replace r`wavenum'inher = .r if ExAInh == -9
replace r`wavenum'inher = .i if indager > 75 & !mi(indager)

replace r`wavenum'inher = ExAInh if inrange(ExAInh,0,100)
label variable r`wavenum'inher "r`wavenum'inher:w`wavenum' R probability of receiving an inheritance"

*wave 6 spouse probability of receiving an inheritance
gen s`wavenum'inher = .
spouse r`wavenum'inher, result(s`wavenum'inher) wave(`wavenum')
label variable s`wavenum'inher "s`wavenum'inher:w`wavenum' S probability of receiving an inheritance"

*check 

***Probability of leaving a bequest 50K+***
*wave 6 respondent probability of leaving bequest 50K+
gen r`wavenum'beq50p = .
replace r`wavenum'beq50p = .m if ExCin == -1
replace r`wavenum'beq50p = .d if ExCin == -8
replace r`wavenum'beq50p = .r if ExCin == -9
replace r`wavenum'beq50p = .p if ExCin == -1 & askpx == 1
replace r`wavenum'beq50p = 0 if ExCin == 0
replace r`wavenum'beq50p = ExCin if inrange(ExCin,0,100)
label variable r`wavenum'beq50p "r`wavenum'beq50p:w`wavenum' R probability of leaving bequest 50K+"

*wave 6 spouse probability of leaving bequest 50K+
gen s`wavenum'beq50p = .
spouse r`wavenum'beq50p, result(s`wavenum'beq50p) wave(`wavenum')
label variable s`wavenum'beq50p "s`wavenum'beq50p:w`wavenum' S probability of leaving bequest 50K+"

***Probability of leaving a bequest 150K+***
*wave 6 respondent probability of leaving bequest 150K+
gen r`wavenum'beq150p = .
replace r`wavenum'beq150p = .m if ExCpin == -1 | ExCin == -1
replace r`wavenum'beq150p = .d if ExCpin == -8 | ExCin == -8
replace r`wavenum'beq150p = .r if ExCpin == -9 | ExCin == -9
replace r`wavenum'beq150p = .p if ExCpin == -1 & askpx == 1
replace r`wavenum'beq150p = 0 if ExCin == 0
replace r`wavenum'beq150p = ExCpin if inrange(ExCpin,0,100)
label variable r`wavenum'beq150p "r`wavenum'beq150p:w`wavenum' R probability of leaving bequest 150K+"

*wave 6 spouse probability of leaving bequest 150K+
gen s`wavenum'beq150p = .
spouse r`wavenum'beq150p, result(s`wavenum'beq150p) wave(`wavenum')
label variable s`wavenum'beq150p "s`wavenum'beq150p:w`wavenum' S probability of leaving bequest 150K+"

*check 

***Probability of respondent working full time after age***
*wave 6 respondent probability of working full time after age
gen r`wavenum'workat = .
replace r`wavenum'workat = .m if ExPW == -1
replace r`wavenum'workat = .d if ExPW == -8
replace r`wavenum'workat = .r if ExPW == -9
replace r`wavenum'workat = .p if ExPW == -1 & askpx == 1
replace r`wavenum'workat = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workat = ExPW if inrange(ExPW,0,100)
label variable r`wavenum'workat "r`wavenum'workat:w`wavenum' R probability of working full time after age"

*wave 6 spouse probability of working full time after age
gen s`wavenum'workat = .
spouse r`wavenum'workat, result(s`wavenum'workat) wave(`wavenum')
label variable s`wavenum'workat "s`wavenum'workat:w`wavenum' S probability of working full time after age"

***Age used in probability of working full time***
*wave 6 respondent age used in probability of working full time 
gen r`wavenum'workata = .
replace r`wavenum'workata = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workata = 55 if indsex == 2 & indager <= 54
replace r`wavenum'workata = 60 if indsex == 2 & indager <= 59
replace r`wavenum'workata = 60 if indsex == 1 & indager <= 59
replace r`wavenum'workata = 65 if indsex == 1 & indager <= 64
label variable r`wavenum'workata "r`wavenum'workata:w`wavenum' R age used in probability of working full time"

*wave 6 spouse age used in probability of working full time 
gen s`wavenum'workata =.
spouse r`wavenum'workata, result(s`wavenum'workata) wave(`wavenum')
label variable s`wavenum'workata "s`wavenum'workata:w`wavenum' S age used in probability of working full time"

*check 

***Whether respondent having a work limit health problem before reach age 65***
*wave 6 respondent work limit health problem before age 65
gen r`wavenum'workl65 = .
replace r`wavenum'workl65 = .m if ExHLim == -1 
replace r`wavenum'workl65 = .d if ExHLim == -8
replace r`wavenum'workl65 = .r if ExHLim == -9
replace r`wavenum'workl65 = .p if ExHLim == -1 & askpx == 1
replace r`wavenum'workl65 = .w if ExHLim == -1 & (wpactpw ~= 1 | wpactse ~= 1 | WpAway == 1) 
replace r`wavenum'workl65 = .i if ExHLim == -1 & indager > 65
replace r`wavenum'workl65 = ExHLim if inrange(ExHLim,0,100) 
label variable r`wavenum'workl65 "r`wavenum'workl65:w`wavenum' R work limit health problem before age 65"

*wave 6 spouse work limit health problem before age 65 
gen s`wavenum'workl65 = .
spouse r`wavenum'workl65, result(s`wavenum'workl65) wave(`wavenum')
label variable s`wavenum'workl65 "s`wavenum'workl65:w`wavenum' S work limit health problem before age 65"
 
*check 

***Probability respondent move to nursing home in next 5 years***
*wave 6 respondent probability move to nursing home in next 5 years
gen r`wavenum'pnhm5y = .
replace r`wavenum'pnhm5y = .m if ExMovNb == -1
replace r`wavenum'pnhm5y = .d if ExMovNb == -8
replace r`wavenum'pnhm5y = .r if ExMovNb == -9
replace r`wavenum'pnhm5y = .p if ExMovNb == -1 & askpx == 1 
replace r`wavenum'pnhm5y = .i if ExMovNb == -1 & indager < 60 
replace r`wavenum'pnhm5y = .g if ExMovNb == -1 & ExNHEv == 0
replace r`wavenum'pnhm5y = ExMovNb if inrange(ExMovNb,0,100) 
label variable r`wavenum'pnhm5y "r`wavenum'pnhm5y:w`wavenum' R probability move to nursing home in next 5 years"

*wave 6 spouse probability move to nursing home in next 5 years
gen s`wavenum'pnhm5y = .
spouse r`wavenum'pnhm5y, result(s`wavenum'pnhm5y) wave(`wavenum')
label variable s`wavenum'pnhm5y "s`wavenum'pnhm5y:w`wavenum' S probability move to nursing home in next 5 years"

*check 

***drop ELSA wave 6 core file raw variables***
drop `retire_w6_core'

******************************************************************************************


	 	
	 	

	 	

	 	



	 	

*set wave number
local wavenum=7
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 7 core data***
local retire_w7_core WpDes WpRAge ExLo80 ExAInh ExCpin ExCain ExPW ExHLim ExCin ///
                     indager ExLo90 indsex ExMovNb askpx wpactpw wpactse WpAway askinst ///
                     ExNHEv WPCRet WPCRetL WpEs wpactvw wpactca wpactlo wpacted wpact96

merge 1:1 idauniq using "$wave_7_core", keepusing(`retire_w7_core') nogen


***Whether retired***
*wave 7 respondent whether retired
gen r`wavenum'retemp = .
replace r`wavenum'retemp = .m if WpDes == -1
replace r`wavenum'retemp = .d if WpDes == -8
replace r`wavenum'retemp = .r if WpDes == -9
replace r`wavenum'retemp = 1 if inlist(WpDes,1,96) 
replace r`wavenum'retemp = 0 if inlist(WpDes,2,3,4,5,6,85,86,95)
label variable r`wavenum'retemp "r`wavenum'retemp:w`wavenum' whether R retired"
label values r`wavenum'retemp retire

*wave 7 spouse whether retired
gen s`wavenum'retemp = .
spouse r`wavenum'retemp, result(s`wavenum'retemp) wave(`wavenum')
label variable s`wavenum'retemp "s`wavenum'retemp:w`wavenum' whether S retired"
label values s`wavenum'retemp retire

*check 

***Retirement Age***
*wave 7 respondent retirement age
gen r`wavenum'retage = .
replace r`wavenum'retage = .m if WpRAge == -1
replace r`wavenum'retage = .d if WpRAge == -8
replace r`wavenum'retage = .r if WpRAge == -9
replace r`wavenum'retage = .z if WpRAge == -1 & !inlist(WpDes,1,96)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'retage = r`w'retage if !mi(r`w'retage) & inw`wavenum' == 1
}
replace r`wavenum'retage = .n if WpRAge==0
replace r`wavenum'retage = WpRAge if inrange(WpRAge,1,150)
label variable r`wavenum'retage "r`wavenum'retage:w`wavenum' R retirement age"

*wave 7 spouse retirement age
gen s`wavenum'retage = .
spouse r`wavenum'retage, result(s`wavenum'retage) wave(`wavenum')
label variable s`wavenum'retage "s`wavenum'retage:w`wavenum' S retirement age"

*check 

****Plan to Continue Paid Work in Retirement***
**wave 7 respondent plan to continue paid work in retirement
*gen r`wavenum'retwrk_e = .
*replace r`wavenum'retwrk_e = .m if WPCRetL == -1
*replace r`wavenum'retwrk_e = .p if WPCRetL == -1 & askpx == 1 
*replace r`wavenum'retwrk_e = .e if WPCRetL == -1 & (wpactvw == 1 | wpactca == 1 | wpactlo == 1 | wpacted == 1 | wpact96 == 1)
*replace r`wavenum'retwrk_e = .s if WPCRetL == -1 & WpEs == 2
*replace r`wavenum'retwrk_e = .a if WPCRetL == -1 & WPCRet == 2
*replace r`wavenum'retwrk_e = .r if WPCRetL == -9 | WpEs == -9 | WPCRet == -9
*replace r`wavenum'retwrk_e = .d if WPCRetL == -8 | WpEs == -8 | WPCRet == -8
*replace r`wavenum'retwrk_e = 0 if WPCRetL == 2
*replace r`wavenum'retwrk_e = 1 if WPCRetL == 1
*label variable r`wavenum'retwrk_e "r`wavenum'retwkr_e:w`wavenum' R Prefer to work after compulsory retirement"
*label values r`wavenum'retwrk_e pworkret
*
**wave 7 spouse plan to continue paid work in retirement
*gen s`wavenum'retwrk_e = .
*spouse r`wavenum'retwrk_e, result(s`wavenum'retwrk_e) wave(`wavenum')
*label variable s`wavenum'retwrk_e "s`wavenum'retwrk_e:w`wavenum' S Prefer to work after compulsory retirement"
*label values s`wavenum'retwrk_e pworkret

***Probability of living to age 85***
*wave 7 respondent probability of living to age 85
gen r`wavenum'liv85 = .
replace r`wavenum'liv85 = .m if ExLo90 == -1
replace r`wavenum'liv85 = .d if ExLo90 == -8 
replace r`wavenum'liv85 = .r if ExLo90 == -9
replace r`wavenum'liv85 = .p if ExLo90 == -1 & askpx == 1
replace r`wavenum'liv85 = .i if indager >= 70 & !mi(indager)
replace r`wavenum'liv85 = 0 if indager < 70 & ExLo80 == 0
replace r`wavenum'liv85 = ExLo90 if inrange(ExLo90,0,100)
label variable r`wavenum'liv85 "r`wavenum'liv85:w`wavenum' R probability of living to age 85"

*wave 7 spouse probability of living to age 85
gen s`wavenum'liv85 = .
spouse r`wavenum'liv85, result(s`wavenum'liv85) wave(`wavenum')
label variable s`wavenum'liv85 "s`wavenum'liv85:w`wavenum' S probability of living to age 85"

***Probability of Living to 75-120***
*wave 7 respondent probability of living to 75-120 
gen r`wavenum'liv10 = .
replace r`wavenum'liv10 = .m if ExLo80 == -1
replace r`wavenum'liv10 = .d if ExLo80 == -8
replace r`wavenum'liv10 = .r if ExLo80 == -9
replace r`wavenum'liv10 = .p if ExLo80 == -1 & askpx == 1
replace r`wavenum'liv10 = ExLo80 if inrange(ExLo80,0,100)
label variable r`wavenum'liv10 "r`wavenum'liv10:w`wavenum' R probability of living to 75-120"

*wave 7 spouse probability of living to 75-120 
gen s`wavenum'liv10 = .
spouse r`wavenum'liv10, result(s`wavenum'liv10) wave(`wavenum')
label variable s`wavenum'liv10 "s`wavenum'liv10:w`wavenum' S probability of living to 75-120"

***Age used in probability of living to 75-120***
*wave 7 respondent age used in live 75-120
gen r`wavenum'liv10a = .
replace r`wavenum'liv10a = 75 if indager <= 65
replace r`wavenum'liv10a = 80 if indager > 65 & indager <= 69
replace r`wavenum'liv10a = 85 if indager > 69 & indager <= 74
replace r`wavenum'liv10a = 90 if indager > 74 & indager <= 79
replace r`wavenum'liv10a = 95 if indager > 79 & indager <= 84
replace r`wavenum'liv10a = 100 if indager > 84 & indager <= 99
replace r`wavenum'liv10a = 105 if indager > 99 & indager <= 104
replace r`wavenum'liv10a = 110 if indager > 104 & indager <= 109
replace r`wavenum'liv10a = 120 if indager > 109 & indager <= 119
label variable r`wavenum'liv10a "r`wavenum'liv10a:w`wavenum' R age used in live 75-120"

*wave 7 spouse age used in live 75-120
gen s`wavenum'liv10a =.
spouse r`wavenum'liv10a, result(s`wavenum'liv10a) wave(`wavenum')
label variable s`wavenum'liv10a "s`wavenum'liv10a:w`wavenum' S age used in live 75-120"

*check 

***Probability of respondent receiving an inheritance***
*wave 7 respondent probability of receiving an inheritance
gen r`wavenum'inher = .
replace r`wavenum'inher = .m if ExAInh == -1
replace r`wavenum'inher = .p if ExAInh == -1 & askpx == 1
replace r`wavenum'inher = .d if ExAInh == -8
replace r`wavenum'inher = .r if ExAInh == -9
replace r`wavenum'inher = .i if indager > 75 & !mi(indager)

replace r`wavenum'inher = ExAInh if inrange(ExAInh,0,100)
label variable r`wavenum'inher "r`wavenum'inher:w`wavenum' R probability of receiving an inheritance"

*wave 7 spouse probability of receiving an inheritance
gen s`wavenum'inher = .
spouse r`wavenum'inher, result(s`wavenum'inher) wave(`wavenum')
label variable s`wavenum'inher "s`wavenum'inher:w`wavenum' S probability of receiving an inheritance"

*check 

***Probability of leaving a bequest 50K+***
*wave 7 respondent probability of leaving bequest 50K+
gen r`wavenum'beq50p = .
replace r`wavenum'beq50p = .m if ExCin == -1
replace r`wavenum'beq50p = .d if ExCin == -8
replace r`wavenum'beq50p = .r if ExCin == -9
replace r`wavenum'beq50p = .p if ExCin == -1 & askpx == 1
replace r`wavenum'beq50p = 0 if ExCin == 0
replace r`wavenum'beq50p = ExCin if inrange(ExCin,0,100)
label variable r`wavenum'beq50p "r`wavenum'beq50p:w`wavenum' R probability of leaving bequest 50K+"

*wave 7 spouse probability of leaving bequest 50K+
gen s`wavenum'beq50p = .
spouse r`wavenum'beq50p, result(s`wavenum'beq50p) wave(`wavenum')
label variable s`wavenum'beq50p "s`wavenum'beq50p:w`wavenum' S probability of leaving bequest 50K+"

***Probability of leaving a bequest 150K+***
*wave 7 respondent probability of leaving bequest 150K+
gen r`wavenum'beq150p = .
replace r`wavenum'beq150p = .m if ExCpin == -1 | ExCin == -1
replace r`wavenum'beq150p = .d if ExCpin == -8 | ExCin == -8
replace r`wavenum'beq150p = .r if ExCpin == -9 | ExCin == -9
replace r`wavenum'beq150p = .p if ExCpin == -1 & askpx == 1
replace r`wavenum'beq150p = 0 if ExCin == 0
replace r`wavenum'beq150p = ExCpin if inrange(ExCpin,0,100)
label variable r`wavenum'beq150p "r`wavenum'beq150p:w`wavenum' R probability of leaving bequest 150K+"

*wave 7 spouse probability of leaving bequest 150K+
gen s`wavenum'beq150p = .
spouse r`wavenum'beq150p, result(s`wavenum'beq150p) wave(`wavenum')
label variable s`wavenum'beq150p "s`wavenum'beq150p:w`wavenum' S probability of leaving bequest 150K+"

*check 

***Probability of respondent working full time after age***
*wave 7 respondent probability of working full time after age
gen r`wavenum'workat = .
replace r`wavenum'workat = .m if ExPW == -1
replace r`wavenum'workat = .d if ExPW == -8
replace r`wavenum'workat = .r if ExPW == -9
replace r`wavenum'workat = .p if ExPW == -1 & askpx == 1
replace r`wavenum'workat = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workat = ExPW if inrange(ExPW,0,100)
label variable r`wavenum'workat "r`wavenum'workat:w`wavenum' R probability of working full time after age"

*wave 7 spouse probability of working full time after age
gen s`wavenum'workat = .
spouse r`wavenum'workat, result(s`wavenum'workat) wave(`wavenum')
label variable s`wavenum'workat "s`wavenum'workat:w`wavenum' S probability of working full time after age"

***Age used in probability of working full time***
*wave 7 respondent age used in probability of working full time 
gen r`wavenum'workata = .
replace r`wavenum'workata = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workata = 55 if indsex == 2 & indager <= 54
replace r`wavenum'workata = 60 if indsex == 2 & indager <= 59
replace r`wavenum'workata = 60 if indsex == 1 & indager <= 59
replace r`wavenum'workata = 65 if indsex == 1 & indager <= 64
label variable r`wavenum'workata "r`wavenum'workata:w`wavenum' R age used in probability of working full time"

*wave 7 spouse age used in probability of working full time 
gen s`wavenum'workata =.
spouse r`wavenum'workata, result(s`wavenum'workata) wave(`wavenum')
label variable s`wavenum'workata "s`wavenum'workata:w`wavenum' S age used in probability of working full time"

*check 

***Whether respondent having a work limit health problem before reach age 65***
*wave 7 respondent work limit health problem before age 65
gen r`wavenum'workl65 = .
replace r`wavenum'workl65 = .m if ExHLim == -1 
replace r`wavenum'workl65 = .d if ExHLim == -8
replace r`wavenum'workl65 = .r if ExHLim == -9
replace r`wavenum'workl65 = .p if ExHLim == -1 & askpx == 1
replace r`wavenum'workl65 = .w if ExHLim == -1 & (wpactpw ~= 1 | wpactse ~= 1 | WpAway == 1) 
replace r`wavenum'workl65 = .i if ExHLim == -1 & indager > 65
replace r`wavenum'workl65 = ExHLim if inrange(ExHLim,0,100) 
label variable r`wavenum'workl65 "r`wavenum'workl65:w`wavenum' R work limit health problem before age 65"

*wave 7 spouse work limit health problem before age 65 
gen s`wavenum'workl65 = .
spouse r`wavenum'workl65, result(s`wavenum'workl65) wave(`wavenum')
label variable s`wavenum'workl65 "s`wavenum'workl65:w`wavenum' S work limit health problem before age 65"
 
*check 

***Probability respondent move to nursing home in next 5 years***
*wave 7 respondent probability move to nursing home in next 5 years
gen r`wavenum'pnhm5y = .
replace r`wavenum'pnhm5y = .m if ExMovNb == -1
replace r`wavenum'pnhm5y = .d if ExMovNb == -8
replace r`wavenum'pnhm5y = .r if ExMovNb == -9
replace r`wavenum'pnhm5y = .p if ExMovNb == -1 & askpx == 1 
replace r`wavenum'pnhm5y = .i if ExMovNb == -1 & indager < 60 
replace r`wavenum'pnhm5y = .g if ExMovNb == -1 & ExNHEv == 0
replace r`wavenum'pnhm5y = ExMovNb if inrange(ExMovNb,0,100) 
label variable r`wavenum'pnhm5y "r`wavenum'pnhm5y:w`wavenum' R probability move to nursing home in next 5 years"

*wave 7 spouse probability move to nursing home in next 5 years
gen s`wavenum'pnhm5y = .
spouse r`wavenum'pnhm5y, result(s`wavenum'pnhm5y) wave(`wavenum')
label variable s`wavenum'pnhm5y "s`wavenum'pnhm5y:w`wavenum' S probability move to nursing home in next 5 years"

*check 

***drop ELSA wave 7 core file raw variables***
drop `retire_w7_core'


	 	
	 	

	 	

	 	



	 	

*set wave number
local wavenum=8
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2

***merge with wave 8 core data***
local retire_w8_core wpdes wprage exlo80 exainh excpin excain expw exhlim excin ///
                     indager exlo90 indsex exmovnb askpx wpactpw wpactse wpaway askinst ///
                     exnhev wpes wpactvw wpactca wpactlo wpacted wpact96

merge 1:1 idauniq using "$wave_8_core", keepusing(`retire_w8_core') nogen


***Whether retired***
*wave 8 respondent whether retired
gen r`wavenum'retemp = .
replace r`wavenum'retemp = .m if wpdes == -1
replace r`wavenum'retemp = .d if wpdes == -8
replace r`wavenum'retemp = .r if wpdes == -9
replace r`wavenum'retemp = 1 if inlist(wpdes,1,96) 
replace r`wavenum'retemp = 0 if inlist(wpdes,2,3,4,5,6,85,86,95)
label variable r`wavenum'retemp "r`wavenum'retemp:w`wavenum' whether R retired"
label values r`wavenum'retemp retire

*wave 8 spouse whether retired
gen s`wavenum'retemp = .
spouse r`wavenum'retemp, result(s`wavenum'retemp) wave(`wavenum')
label variable s`wavenum'retemp "s`wavenum'retemp:w`wavenum' whether S retired"
label values s`wavenum'retemp retire

*check 

***Retirement Age***
*wave 8 respondent retirement age
gen r`wavenum'retage = .
replace r`wavenum'retage = .m if wprage == -1
replace r`wavenum'retage = .d if wprage == -8
replace r`wavenum'retage = .r if wprage == -9
replace r`wavenum'retage = .z if wprage == -1 & !inlist(wpdes,1,96)
forvalues w = 1/`pre_wavenum' {
	replace r`wavenum'retage = r`w'retage if !mi(r`w'retage) & inw`wavenum' == 1
}
replace r`wavenum'retage = .n if wprage==0
replace r`wavenum'retage = wprage if inrange(wprage,1,150)
replace r`wavenum'retage = r`pre_wavenum'retage if r`wavenum'retage==1
label variable r`wavenum'retage "r`wavenum'retage:w`wavenum' R retirement age"

*wave 8 spouse retirement age
gen s`wavenum'retage = .
spouse r`wavenum'retage, result(s`wavenum'retage) wave(`wavenum')
label variable s`wavenum'retage "s`wavenum'retage:w`wavenum' S retirement age"

*check 

****Plan to Continue Paid Work in Retirement***
**No longer asked in Wave 8**
**wave 8 respondent plan to continue paid work in retirement
*gen r`wavenum'retwrk_e = .
*replace r`wavenum'retwrk_e = .m if wpcretl == -1
*replace r`wavenum'retwrk_e = .p if wpcretl == -1 & askpx == 1 
*replace r`wavenum'retwrk_e = .e if wpcretl == -1 & (wpactvw == 1 | wpactca == 1 | wpactlo == 1 | wpacted == 1 | wpact96 == 1)
*replace r`wavenum'retwrk_e = .s if wpcretl == -1 & wpes == 2
*replace r`wavenum'retwrk_e = .a if wpcretl == -1 & wpcret == 2
*replace r`wavenum'retwrk_e = .r if wpcretl == -9 | wpes == -9 | wpcret == -9
*replace r`wavenum'retwrk_e = .d if wpcretl == -8 | wpes == -8 | wpcret == -8
*replace r`wavenum'retwrk_e = 0 if wpcretl == 2
*replace r`wavenum'retwrk_e = 1 if wpcretl == 1
*label variable r`wavenum'retwrk_e "r`wavenum'retwkr_e:w`wavenum' R Prefer to work after compulsory retirement"
*label values r`wavenum'retwrk_e pworkret
*
**wave 8 spouse plan to continue paid work in retirement
*gen s`wavenum'retwrk_e = .
*spouse r`wavenum'retwrk_e, result(s`wavenum'retwrk_e) wave(`wavenum')
*label variable s`wavenum'retwrk_e "s`wavenum'retwrk_e:w`wavenum' S Prefer to work after compulsory retirement"
*label values s`wavenum'retwrk_e pworkret

***Probability of living to age 85***
*wave 8 respondent probability of living to age 85
gen r`wavenum'liv85 = .
replace r`wavenum'liv85 = .m if exlo90 == -1
replace r`wavenum'liv85 = .d if exlo90 == -8 
replace r`wavenum'liv85 = .r if exlo90 == -9
replace r`wavenum'liv85 = .p if exlo90 == -1 & askpx == 1
replace r`wavenum'liv85 = .i if indager >= 70 & !mi(indager)
replace r`wavenum'liv85 = 0 if indager < 70 & exlo80 == 0
replace r`wavenum'liv85 = exlo90 if inrange(exlo90,0,100)
label variable r`wavenum'liv85 "r`wavenum'liv85:w`wavenum' R probability of living to age 85"

*wave 8 spouse probability of living to age 85
gen s`wavenum'liv85 = .
spouse r`wavenum'liv85, result(s`wavenum'liv85) wave(`wavenum')
label variable s`wavenum'liv85 "s`wavenum'liv85:w`wavenum' S probability of living to age 85"

***Probability of Living to 75-120***
*wave 8 respondent probability of living to 75-120 
gen r`wavenum'liv10 = .
replace r`wavenum'liv10 = .m if exlo80 == -1
replace r`wavenum'liv10 = .d if exlo80 == -8
replace r`wavenum'liv10 = .r if exlo80 == -9
replace r`wavenum'liv10 = .p if exlo80 == -1 & askpx == 1
replace r`wavenum'liv10 = exlo80 if inrange(exlo80,0,100)
label variable r`wavenum'liv10 "r`wavenum'liv10:w`wavenum' R probability of living to 75-120"

*wave 8 spouse probability of living to 75-120 
gen s`wavenum'liv10 = .
spouse r`wavenum'liv10, result(s`wavenum'liv10) wave(`wavenum')
label variable s`wavenum'liv10 "s`wavenum'liv10:w`wavenum' S probability of living to 75-120"

***Age used in probability of living to 75-120***
*wave 8 respondent age used in live 75-120
gen r`wavenum'liv10a = .
replace r`wavenum'liv10a = 75 if indager <= 65
replace r`wavenum'liv10a = 80 if indager > 65 & indager <= 69
replace r`wavenum'liv10a = 85 if indager > 69 & indager <= 74
replace r`wavenum'liv10a = 90 if indager > 74 & indager <= 79
replace r`wavenum'liv10a = 95 if indager > 79 & indager <= 84
replace r`wavenum'liv10a = 100 if indager > 84 & indager <= 99
replace r`wavenum'liv10a = 105 if indager > 99 & indager <= 104
replace r`wavenum'liv10a = 110 if indager > 104 & indager <= 109
replace r`wavenum'liv10a = 120 if indager > 109 & indager <= 119
label variable r`wavenum'liv10a "r`wavenum'liv10a:w`wavenum' R age used in live 75-120"

*wave 8 spouse age used in live 75-120
gen s`wavenum'liv10a =.
spouse r`wavenum'liv10a, result(s`wavenum'liv10a) wave(`wavenum')
label variable s`wavenum'liv10a "s`wavenum'liv10a:w`wavenum' S age used in live 75-120"

*check 

***Probability of respondent receiving an inheritance***
*wave 8 respondent probability of receiving an inheritance
gen r`wavenum'inher = .
replace r`wavenum'inher = .m if exainh == -1
replace r`wavenum'inher = .p if exainh == -1 & askpx == 1
replace r`wavenum'inher = .d if exainh == -8
replace r`wavenum'inher = .r if exainh == -9
replace r`wavenum'inher = .i if indager > 75 & !mi(indager)

replace r`wavenum'inher = exainh if inrange(exainh,0,100)
label variable r`wavenum'inher "r`wavenum'inher:w`wavenum' R probability of receiving an inheritance"

*wave 8 spouse probability of receiving an inheritance
gen s`wavenum'inher = .
spouse r`wavenum'inher, result(s`wavenum'inher) wave(`wavenum')
label variable s`wavenum'inher "s`wavenum'inher:w`wavenum' S probability of receiving an inheritance"

*check 

***Probability of leaving a bequest 50K+***
*wave 8 respondent probability of leaving bequest 50K+
gen r`wavenum'beq50p = .
replace r`wavenum'beq50p = .m if excin == -1
replace r`wavenum'beq50p = .d if excin == -8
replace r`wavenum'beq50p = .r if excin == -9
replace r`wavenum'beq50p = .p if excin == -1 & askpx == 1
replace r`wavenum'beq50p = 0 if excin == 0
replace r`wavenum'beq50p = excin if inrange(excin,0,100)
label variable r`wavenum'beq50p "r`wavenum'beq50p:w`wavenum' R probability of leaving bequest 50K+"

*wave 8 spouse probability of leaving bequest 50K+
gen s`wavenum'beq50p = .
spouse r`wavenum'beq50p, result(s`wavenum'beq50p) wave(`wavenum')
label variable s`wavenum'beq50p "s`wavenum'beq50p:w`wavenum' S probability of leaving bequest 50K+"

***Probability of leaving a bequest 150K+***
*wave 8 respondent probability of leaving bequest 150K+
gen r`wavenum'beq150p = .
replace r`wavenum'beq150p = .m if excpin == -1 | excin == -1
replace r`wavenum'beq150p = .d if excpin == -8 | excin == -8
replace r`wavenum'beq150p = .r if excpin == -9 | excin == -9
replace r`wavenum'beq150p = .p if excpin == -1 & askpx == 1
replace r`wavenum'beq150p = 0 if excin == 0
replace r`wavenum'beq150p = excpin if inrange(excpin,0,100)
label variable r`wavenum'beq150p "r`wavenum'beq150p:w`wavenum' R probability of leaving bequest 150K+"

*wave 8 spouse probability of leaving bequest 150K+
gen s`wavenum'beq150p = .
spouse r`wavenum'beq150p, result(s`wavenum'beq150p) wave(`wavenum')
label variable s`wavenum'beq150p "s`wavenum'beq150p:w`wavenum' S probability of leaving bequest 150K+"

*check 

***Probability of respondent working full time after age***
*wave 8 respondent probability of working full time after age
gen r`wavenum'workat = .
replace r`wavenum'workat = .m if expw == -1
replace r`wavenum'workat = .d if expw == -8
replace r`wavenum'workat = .r if expw == -9
replace r`wavenum'workat = .p if expw == -1 & askpx == 1
replace r`wavenum'workat = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workat = expw if inrange(expw,0,100)
label variable r`wavenum'workat "r`wavenum'workat:w`wavenum' R probability of working full time after age"

*wave 8 spouse probability of working full time after age
gen s`wavenum'workat = .
spouse r`wavenum'workat, result(s`wavenum'workat) wave(`wavenum')
label variable s`wavenum'workat "s`wavenum'workat:w`wavenum' S probability of working full time after age"

***Age used in probability of working full time***
*wave 8 respondent age used in probability of working full time 
gen r`wavenum'workata = .
replace r`wavenum'workata = .i if ((indsex == 2 & indager >= 60) |(indsex == 1 & indager >= 65))
replace r`wavenum'workata = 55 if indsex == 2 & indager <= 54
replace r`wavenum'workata = 60 if indsex == 2 & indager <= 59
replace r`wavenum'workata = 60 if indsex == 1 & indager <= 59
replace r`wavenum'workata = 65 if indsex == 1 & indager <= 64
label variable r`wavenum'workata "r`wavenum'workata:w`wavenum' R age used in probability of working full time"

*wave 8 spouse age used in probability of working full time 
gen s`wavenum'workata =.
spouse r`wavenum'workata, result(s`wavenum'workata) wave(`wavenum')
label variable s`wavenum'workata "s`wavenum'workata:w`wavenum' S age used in probability of working full time"

*check 

***Whether respondent having a work limit health problem before reach age 65***
*wave 8 respondent work limit health problem before age 65
gen r`wavenum'workl65 = .
replace r`wavenum'workl65 = .m if exhlim == -1 
replace r`wavenum'workl65 = .d if exhlim == -8
replace r`wavenum'workl65 = .r if exhlim == -9
replace r`wavenum'workl65 = .p if exhlim == -1 & askpx == 1
replace r`wavenum'workl65 = .w if exhlim == -1 & (wpactpw ~= 1 | wpactse ~= 1 | wpaway == 1) 
replace r`wavenum'workl65 = .i if exhlim == -1 & indager > 65
replace r`wavenum'workl65 = exhlim if inrange(exhlim,0,100) 
label variable r`wavenum'workl65 "r`wavenum'workl65:w`wavenum' R work limit health problem before age 65"

*wave 8 spouse work limit health problem before age 65 
gen s`wavenum'workl65 = .
spouse r`wavenum'workl65, result(s`wavenum'workl65) wave(`wavenum')
label variable s`wavenum'workl65 "s`wavenum'workl65:w`wavenum' S work limit health problem before age 65"
 
*check 

***Probability respondent move to nursing home in next 5 years***
*wave 8 respondent probability move to nursing home in next 5 years
gen r`wavenum'pnhm5y = .
replace r`wavenum'pnhm5y = .m if exmovnb == -1
replace r`wavenum'pnhm5y = .d if exmovnb == -8
replace r`wavenum'pnhm5y = .r if exmovnb == -9
replace r`wavenum'pnhm5y = .p if exmovnb == -1 & askpx == 1 
replace r`wavenum'pnhm5y = .i if exmovnb == -1 & indager < 60 
replace r`wavenum'pnhm5y = .g if exmovnb == -1 & exnhev == 0
replace r`wavenum'pnhm5y = exmovnb if inrange(exmovnb,0,100) 
label variable r`wavenum'pnhm5y "r`wavenum'pnhm5y:w`wavenum' R probability move to nursing home in next 5 years"

*wave 8 spouse probability move to nursing home in next 5 years
gen s`wavenum'pnhm5y = .
spouse r`wavenum'pnhm5y, result(s`wavenum'pnhm5y) wave(`wavenum')
label variable s`wavenum'pnhm5y "s`wavenum'pnhm5y:w`wavenum' S probability move to nursing home in next 5 years"

*check 

***drop ELSA wave 8 core file raw variables***
drop `retire_w8_core'


	 	
	 	

	 	

	 	



	 	

***yes no***
label define yesnopen ///
	0 "0.no" ///
	1 "1.yes" ///
	.p ".p:proxy" ///
	.w ".w:currently not working"

***type of pension from current job***
label define pentype ///
	1 "1.DC" ///
	2 "2.DB" ///
	3 "3.DC or DB" ///
 .r ".r:Refuse" ///
 .m ".m:Missing" ///
  .p ".p:Interviewd by proxy" ///
 .d ".d:DK"  ///
	.s ".s:No pen info" ///
	.x ".x:no pension through job" ///
	.w ".w:currently not working"
 
******************************************************************************************


*set wave number
local wavenum=1
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2
local np=8
  
***merge with wave 1 core data***
local pen_w1_core  iapid ///
									 iaspen iaspw iabeb iaber1 iaber2 iaber3 iaber4 ///
									 iappen perid wpdes					
merge 1:1 idauniq using "$wave_1_core", keepusing(`pen_w1_core') nogen

***merge with wave 1 ifs derived variables data***
local pen_w1_derv pp_nrec pp_rec pp_nocc pp_occ pp_occdb pp_occdc pp_occnk pp_noccdb pp_noccdc pp_noccnk

merge 1:1 idauniq using "$wave_1_derv", keepusing(`pen_w1_derv') nogen



***Receives Public Pension***
*wave 1 financial respondent receives public pension
gen r`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabeb iaber1 iaber2 iaber3 iaber4, result(r`wavenum'pubpen)
replace r`wavenum'pubpen = 0 if perid == iapid & ///
                               ((iaspen == 2 | (iaspen == 1 & iaspw == 2)) | ///
                               (iabeb == 2 | (iabeb == 1 & iaber1 != 5 & iaber2 != 5 & iaber3 != 5 & iaber4 != 5)))                  
replace r`wavenum'pubpen = 1 if perid == iapid & ///
                               ((iaspen == 1 & inlist(iaspw,1,3)) | ///
                               (iabeb == 1 & (iaber1 == 5 | iaber2 == 5 | iaber3 == 5 | iaber4 == 5)))
label variable r`wavenum'pubpen "r`wavenum'pubpen:w`wavenum' r receives public pension"
label values   r`wavenum'pubpen yesnopen


*wave 1 financial respondent's spouse receives public pension
gen s`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabeb iaber1 iaber2 iaber3 iaber4, result(s`wavenum'pubpen)
replace s`wavenum'pubpen = 0 if perid == iapid & ///
                                ((iaspen == 2 | (iaspen == 1 & iaspw == 1)) | ///
                                (iabeb == 2 | (iabeb == 1 & iaber1 != 5 & iaber2 != 5 & iaber3 != 5 & iaber4 != 5)))
replace s`wavenum'pubpen = 1 if perid == iapid & ///
                                ((iaspen == 1 & inlist(iaspw,2,3)) | ///
                                (iabeb == 1 & (iaber1 == 5 | iaber2 == 5 | iaber3 == 5 | iaber4 == 5)))
label variable s`wavenum'pubpen "s`wavenum'pubpen:w`wavenum' s receives public pension"  
label values   s`wavenum'pubpen yesnopen

*wave 1 non-financial respondent receives public pension   
bysort h1coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n-1] if perid[_n-1] == iapid & mi(r`wavenum'pubpen)
bysort h1coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n+1] if perid[_n+1] == iapid & mi(r`wavenum'pubpen)

*wave 1 non-financial respondent's spouse receives public pension   
spouse r`wavenum'pubpen, result(s`wavenum'pubpen) wave(`wavenum')


***Number of private pension currently receiving***
**wave 1 respondent
gen r`wavenum'peninm = .
replace r`wavenum'peninm = pp_nrec if inrange(pp_nrec,0,6)
label variable r`wavenum'peninm "r`wavenum'peninm:w`wavenum' # private pensions r currently receives income"

*wave 1 spouse 
gen s`wavenum'peninm = .
spouse r`wavenum'peninm, result(s`wavenum'peninm) wave(`wavenum')
label variable s`wavenum'peninm "s`wavenum'peninm:w`wavenum' # private pensions s currently receives income"


***Currently Receiving Any Private Pension***
*wave 1 respondent 
gen r`wavenum'peninc = .
replace r`wavenum'peninc = pp_rec if inrange(pp_rec,0,1)
label variable r`wavenum'peninc "r`wavenum'peninc:w`wavenum' r current receiving private pension income"
label values r`wavenum'peninc yesnopen

*wave 1 spouse
gen s`wavenum'peninc = .
spouse r`wavenum'peninc, result(s`wavenum'peninc) wave(`wavenum')
label variable s`wavenum'peninc "s`wavenum'peninc:w`wavenum' s current receiving private pension income"
label values s`wavenum'peninc yesnopen


***Number of Pension from Current Job *Occupational pensions
*wave 1 respondent
gen r`wavenum'penct = .
replace r`wavenum'penct = pp_nocc if inrange(pp_nocc,0,2)
replace r`wavenum'penct = .w if r`wavenum'penct==0 & inlist(wpdes,1,4,5,6)
label variable r`wavenum'penct "r`wavenum'penct:w`wavenum' r # pensions from current job"

*wave 1 spouse
gen s`wavenum'penct = .
spouse r`wavenum'penct, result(s`wavenum'penct) wave(`wavenum')
label variable s`wavenum'penct "s`wavenum'penct:w`wavenum' s # pensions from current job"


***Any Pension from Current Job*** occupational pension
*wave 1 respondent join a pension scheme from current job
gen r`wavenum'jcpen = .
replace r`wavenum'jcpen = pp_occ if inrange(pp_occ,0,1)
replace r`wavenum'jcpen = .w if r`wavenum'penct==.w
label variable r`wavenum'jcpen "r`wavenum'jcpen:w`wavenum' r any pension from current job"
label values r`wavenum'jcpen yesnopen


*wave 1 financial respondent's spouse any pension from current job
gen s`wavenum'jcpen = .
spouse r`wavenum'jcpen, result(s`wavenum'jcpen) wave(`wavenum')
label variable s`wavenum'jcpen "s`wavenum'jcpen:w`wavenum' s any pension from current job"
label values s`wavenum'jcpen yesnopen


***Type of Pension from Current Job***
*wave 1 respondent pension type 1 
gen r`wavenum'ptyp1_e = .
replace r`wavenum'ptyp1_e = .x if pp_nocc==0
replace r`wavenum'ptyp1_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
label variable r`wavenum'ptyp1_e "r`wavenum'ptyp1_e:w`wavenum' r current pension type #1"
label values r`wavenum'ptyp1_e pentype

*wave 1 spouse pension type 1
gen s`wavenum'ptyp1_e = .
spouse r`wavenum'ptyp1_e, result(s`wavenum'ptyp1_e) wave(`wavenum')
label variable s`wavenum'ptyp1_e "s`wavenum'ptyp1_e:w`wavenum' s current pension type #1"
label values s`wavenum'ptyp1_e pentype

*wave 1 respondent pension type 2
gen r`wavenum'ptyp2_e = .
replace r`wavenum'ptyp2_e = .x if inlist(pp_nocc,0,1)
replace r`wavenum'ptyp2_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2 
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==1 & pp_nocc==2
label variable r`wavenum'ptyp2_e "r`wavenum'ptyp2_e:w`wavenum' r current pension type #2"
label values r`wavenum'ptyp2_e pentype

*wave 1 spouse pension type 2
gen s`wavenum'ptyp2_e = .
spouse r`wavenum'ptyp2_e, result(s`wavenum'ptyp2_e) wave(`wavenum')
label variable s`wavenum'ptyp2_e "s`wavenum'ptyp2_e:w`wavenum' s current pension type #2"
label values s`wavenum'ptyp2_e pentype


***drop ELSA wave 1 core raw variables***
drop `pen_w1_core'

***drop ELSA wave 1 ifs derived variables***
drop `pen_w1_derv'


******************************************************************************************


*set wave number
local wavenum=2
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2
local np=8
  
***merge with wave 2 core data***
local pen_w2_core  iapid ///
										 iaspen iaspw iabeb iaber1 iaber2 iaber3 iaber4 ///
										 iappen PersNo wpnosc wpprpe wppepr iaask wpdes				
merge 1:1 idauniq using "$wave_2_core", keepusing(`pen_w2_core') nogen

***merge with wave 2 ifs derived variables data***
local pen_w2_derv2 pp_nrec pp_rec pp_nocc pp_occ pp_occdb pp_occdc pp_occnk pp_noccdb pp_noccdc pp_noccnk

merge 1:1 idauniq using "$wave_2_derv2", keepusing(`pen_w2_derv2') nogen



***Receives Public Pension***
*wave 2 financial respondent receives public pension
gen r`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabeb iaber1 iaber2 iaber3 iaber4 iaask, result(r`wavenum'pubpen)
replace r`wavenum'pubpen = 0 if PersNo == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 2) | iaask == 2) | ///
                        (iabeb == 2 | (iabeb == 1 & iaber1 != 5 & iaber2 != 5 & iaber3 != 5 & iaber4 != 5)))                  
replace r`wavenum'pubpen = 1 if PersNo == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,1,3) & iaask == 1) | ///
                         (iabeb == 1 & (iaber1 == 5 | iaber2 == 5 | iaber3 == 5 | iaber4 == 5)))
label variable r`wavenum'pubpen "r`wavenum'pubpen:w`wavenum' r receives public pension"
label values r`wavenum'pubpen yesnopen

*wave 2 financial respondent's spouse receives public pension
gen s`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabeb iaber1 iaber2 iaber3 iaber4 iaask, result(s`wavenum'pubpen)
replace s`wavenum'pubpen = 0 if PersNo == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 1) | iaask == 2) | ///
                        (iabeb == 2 | (iabeb == 1 & iaber1 != 5 & iaber2 != 5 & iaber3 != 5 & iaber4 != 5)))
replace s`wavenum'pubpen = 1 if PersNo == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,2,3) & iaask == 1) | ///
                         (iabeb == 1 & (iaber1 == 5 | iaber2 == 5 | iaber3 == 5 | iaber4 == 5)))
label variable s`wavenum'pubpen "s`wavenum'pubpen:w`wavenum' s receives public pension"  
label values s`wavenum'pubpen yesnopen

*wave 2 non-financial respondent receives public pension   
bysort h2coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n-1] if PersNo[_n-1] == iapid & mi(r`wavenum'pubpen)
bysort h2coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n+1] if PersNo[_n+1] == iapid & mi(r`wavenum'pubpen)

*wave 2 non-financial respondent's spouse receives public pension   
spouse r`wavenum'pubpen, result(s`wavenum'pubpen) wave(`wavenum')


***Number of private pension currently receiving***
**wave 2 respondent
gen r`wavenum'peninm = .
replace r`wavenum'peninm = pp_nrec if inrange(pp_nrec,0,6)
label variable r`wavenum'peninm "r`wavenum'peninm:w`wavenum' # private pensions r currently receives income"

*wave 2 spouse 
gen s`wavenum'peninm = .
spouse r`wavenum'peninm, result(s`wavenum'peninm) wave(`wavenum')
label variable s`wavenum'peninm "s`wavenum'peninm:w`wavenum' # private pensions s currently receives income"


***Currently Receiving Any Private Pension***
*wave 2 respondent 
gen r`wavenum'peninc = .
replace r`wavenum'peninc = pp_rec if inrange(pp_rec,0,1)
label variable r`wavenum'peninc "r`wavenum'peninc:w`wavenum' r current receiving private pension income"
label values r`wavenum'peninc yesnopen

*wave 2 spouse
gen s`wavenum'peninc = .
spouse r`wavenum'peninc, result(s`wavenum'peninc) wave(`wavenum')
label variable s`wavenum'peninc "s`wavenum'peninc:w`wavenum' s current receiving private pension income"
label values s`wavenum'peninc yesnopen


***Number of Pension from Current Job *Occupational pensions
*wave 2 respondent
gen r`wavenum'penct = .
replace r`wavenum'penct = pp_nocc if inrange(pp_nocc,0,3)
replace r`wavenum'penct = .w if r`wavenum'penct==0 & inlist(wpdes,1,4,5,6)
label variable r`wavenum'penct "r`wavenum'penct:w`wavenum' r # pensions from current job"

*wave 2 spouse
gen s`wavenum'penct = .
spouse r`wavenum'penct, result(s`wavenum'penct) wave(`wavenum')
label variable s`wavenum'penct "s`wavenum'penct:w`wavenum' s # pensions from current job"


***Any Pension from Current Job*** occupational pension
*wave 2 respondent join a pension scheme from current job
gen r`wavenum'jcpen = .
replace r`wavenum'jcpen = pp_occ if inrange(pp_occ,0,1)
replace r`wavenum'jcpen = .w if r`wavenum'penct==.w
label variable r`wavenum'jcpen "r`wavenum'jcpen:w`wavenum' r any pension from current job"
label values r`wavenum'jcpen yesnopen


*wave 2 financial respondent's spouse any pension from current job
gen s`wavenum'jcpen = .
spouse r`wavenum'jcpen, result(s`wavenum'jcpen) wave(`wavenum')
label variable s`wavenum'jcpen "s`wavenum'jcpen:w`wavenum' s any pension from current job"
label values s`wavenum'jcpen yesnopen


***Type of Pension from Current Job***
*wave 2 respondent pension type 1 
gen r`wavenum'ptyp1_e = .
replace r`wavenum'ptyp1_e = .x if pp_nocc==0
replace r`wavenum'ptyp1_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==3
label variable r`wavenum'ptyp1_e "r`wavenum'ptyp1_e:w`wavenum' r current pension type #1"
label values r`wavenum'ptyp1_e pentype

*wave 2 spouse pension type 1
gen s`wavenum'ptyp1_e = .
spouse r`wavenum'ptyp1_e, result(s`wavenum'ptyp1_e) wave(`wavenum')
label variable s`wavenum'ptyp1_e "s`wavenum'ptyp1_e:w`wavenum' s current pension type #1"
label values s`wavenum'ptyp1_e pentype

*wave 2 respondent pension type 2
gen r`wavenum'ptyp2_e = .
replace r`wavenum'ptyp2_e = .x if inlist(pp_nocc,0,1)
replace r`wavenum'ptyp2_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2 
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 1 if pp_noccdc==2 & pp_occdb==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 1 if pp_noccdc==2 & pp_occdb==0 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_noccdb==2 & pp_occdc==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_noccdb==2 & pp_occdc==0 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==1 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 3 if pp_noccnk==2 & pp_occdc==1 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 3 if pp_noccnk==2 & pp_occdc==0 & pp_occdb==1 & pp_nocc==3
label variable r`wavenum'ptyp2_e "r`wavenum'ptyp2_e:w`wavenum' r current pension type #2"
label values r`wavenum'ptyp2_e pentype

*wave 2 spouse pension type 2
gen s`wavenum'ptyp2_e = .
spouse r`wavenum'ptyp2_e, result(s`wavenum'ptyp2_e) wave(`wavenum')
label variable s`wavenum'ptyp2_e "s`wavenum'ptyp2_e:w`wavenum' s current pension type #2"
label values s`wavenum'ptyp2_e pentype

*wave 2 respondent pension type 3
gen r`wavenum'ptyp3_e = .
replace r`wavenum'ptyp3_e = .x if inrange(pp_nocc,0,2)
replace r`wavenum'ptyp3_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp3_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 2 if pp_noccdb==2 & pp_occdc==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==2 & pp_occdc==1 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==2 & pp_occdc==0 & pp_occdb==1 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==1 & pp_nocc==3
label variable r`wavenum'ptyp3_e "r`wavenum'ptyp3_e:w`wavenum' r current pension type #3"
label values r`wavenum'ptyp3_e pentype

*wave 2 spouse pension type 3
gen s`wavenum'ptyp3_e = .
spouse r`wavenum'ptyp3_e, result(s`wavenum'ptyp3_e) wave(`wavenum')
label variable s`wavenum'ptyp3_e "s`wavenum'ptyp3_e:w`wavenum' s current pension type #3"
label values s`wavenum'ptyp3_e pentype


***drop ELSA wave 2 core raw variables***
drop `pen_w2_core'

***drop ELSA wave 2 ifs derived variables***
drop `pen_w2_derv2'


******************************************************************************************


*set wave number
local wavenum=3
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2
local np=8
  
***merge with wave 3 core data***
local pen_w3_core  iapid ///
										  iaspen iaspw iabeb iabermwp perid wpdes					
merge 1:1 idauniq using "$wave_3_core", keepusing(`pen_w3_core') nogen

***merge with wave 3 ifs derived variables data***
local pen_w3_derv pp_nrec pp_rec pp_nocc pp_occ pp_occdb pp_occdc pp_occnk pp_noccdb pp_noccdc pp_noccnk

merge 1:1 idauniq using "$wave_3_derv", keepusing(`pen_w3_derv') nogen



***Receives Public Pension***
*wave 3 financial respondent receives public pension
gen r`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabeb iabermwp, result(r`wavenum'pubpen)
replace r`wavenum'pubpen = 0 if perid == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 2)) | ///
                        (iabeb == 2 | (iabeb == 1 & iabermwp == 0)) )       
replace r`wavenum'pubpen = 1 if perid == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,1,3)) | ///
                         (iabeb == 1 & (iaber == 5 | iabermwp == 1)))
label variable r`wavenum'pubpen "r`wavenum'pubpen:w`wavenum' r receives public pension"
label values r`wavenum'pubpen yesnopen

*wave 3 financial respondent's spouse receives public pension
gen s`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabeb iabermwp, result(s`wavenum'pubpen)
replace s`wavenum'pubpen = 0 if perid == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 1)) | ///
                        (iabeb == 2 | (iabeb == 1 & iabermwp == 0)))
replace s`wavenum'pubpen = 1 if perid == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,2,3)) | ///
                         (iabeb == 1 & iabermwp == 1))
label variable s`wavenum'pubpen "s`wavenum'pubpen:w`wavenum' s receives public pension"  
label values s`wavenum'pubpen yesnopen

*wave 3 non-financial respondent receives public pension   
bysort h3coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n-1] if perid[_n-1] == iapid & mi(r`wavenum'pubpen)
bysort h3coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n+1] if perid[_n+1] == iapid & mi(r`wavenum'pubpen)

*wave 3 non-financial respondent's spouse receives public pension   
spouse r`wavenum'pubpen, result(s`wavenum'pubpen) wave(`wavenum')

replace r`wavenum'pubpen = .p if r`wavenum'pubpen==. & r`wavenum'proxy==1


***Number of private pension currently receiving***
**wave 3 respondent
gen r`wavenum'peninm = .
replace r`wavenum'peninm = pp_nrec if inrange(pp_nrec,0,6)
label variable r`wavenum'peninm "r`wavenum'peninm:w`wavenum' # private pensions r currently receives income"

*wave 3 spouse 
gen s`wavenum'peninm = .
spouse r`wavenum'peninm, result(s`wavenum'peninm) wave(`wavenum')
label variable s`wavenum'peninm "s`wavenum'peninm:w`wavenum' # private pensions s currently receives income"


***Currently Receiving Any Private Pension***
*wave 3 respondent 
gen r`wavenum'peninc = .
replace r`wavenum'peninc = pp_rec if inrange(pp_rec,0,1)
label variable r`wavenum'peninc "r`wavenum'peninc:w`wavenum' r current receiving private pension income"
label values r`wavenum'peninc yesnopen

*wave 3 spouse
gen s`wavenum'peninc = .
spouse r`wavenum'peninc, result(s`wavenum'peninc) wave(`wavenum')
label variable s`wavenum'peninc "s`wavenum'peninc:w`wavenum' s current receiving private pension income"
label values s`wavenum'peninc yesnopen


***Number of Pension from Current Job *Occupational pensions
*wave 3 respondent
gen r`wavenum'penct = .
replace r`wavenum'penct = pp_nocc if inrange(pp_nocc,0,2)
replace r`wavenum'penct = .w if r`wavenum'penct==0 & inlist(wpdes,1,4,5,6)
label variable r`wavenum'penct "r`wavenum'penct:w`wavenum' r # pensions from current job"

*wave 3 spouse
gen s`wavenum'penct = .
spouse r`wavenum'penct, result(s`wavenum'penct) wave(`wavenum')
label variable s`wavenum'penct "s`wavenum'penct:w`wavenum' s # pensions from current job"


***Any Pension from Current Job*** occupational pension
*wave 3 respondent join a pension scheme from current job
gen r`wavenum'jcpen = .
replace r`wavenum'jcpen = pp_occ if inrange(pp_occ,0,1)
replace r`wavenum'jcpen = .w if r`wavenum'penct==.w
label variable r`wavenum'jcpen "r`wavenum'jcpen:w`wavenum' r any pension from current job"
label values r`wavenum'jcpen yesnopen


*wave 3 financial respondent's spouse any pension from current job
gen s`wavenum'jcpen = .
spouse r`wavenum'jcpen, result(s`wavenum'jcpen) wave(`wavenum')
label variable s`wavenum'jcpen "s`wavenum'jcpen:w`wavenum' s any pension from current job"
label values s`wavenum'jcpen yesnopen


***Type of Pension from Current Job***
*wave 3 respondent pension type 1 
gen r`wavenum'ptyp1_e = .
replace r`wavenum'ptyp1_e = .x if pp_nocc==0
replace r`wavenum'ptyp1_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
label variable r`wavenum'ptyp1_e "r`wavenum'ptyp1_e:w`wavenum' r current pension type #1"
label values r`wavenum'ptyp1_e pentype

*wave 3 spouse pension type 1
gen s`wavenum'ptyp1_e = .
spouse r`wavenum'ptyp1_e, result(s`wavenum'ptyp1_e) wave(`wavenum')
label variable s`wavenum'ptyp1_e "s`wavenum'ptyp1_e:w`wavenum' s current pension type #1"
label values s`wavenum'ptyp1_e pentype

*wave 3 respondent pension type 2
gen r`wavenum'ptyp2_e = .
replace r`wavenum'ptyp2_e = .x if inlist(pp_nocc,0,1)
replace r`wavenum'ptyp2_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2 
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==1 & pp_nocc==2
label variable r`wavenum'ptyp2_e "r`wavenum'ptyp2_e:w`wavenum' r current pension type #2"
label values r`wavenum'ptyp2_e pentype

*wave 3 spouse pension type 2
gen s`wavenum'ptyp2_e = .
spouse r`wavenum'ptyp2_e, result(s`wavenum'ptyp2_e) wave(`wavenum')
label variable s`wavenum'ptyp2_e "s`wavenum'ptyp2_e:w`wavenum' s current pension type #2"
label values s`wavenum'ptyp2_e pentype


***drop ELSA wave 3 core raw variables***
drop `pen_w3_core'

***drop ELSA wave 3 ifs derived variables***
drop `pen_w3_derv'


******************************************************************************************


*set wave number
local wavenum=4
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2
local np=8
  
***merge with wave 4 core data***
local pen_w4_core  iapid ///
										 iaspen iaspw iabeb iabermwp ///
										 iappen perid wpdes				
merge 1:1 idauniq using "$wave_4_core", keepusing(`pen_w4_core') nogen

***merge with wave 4 ifs derived variables data***
local pen_w4_derv pp_nrec pp_rec pp_nocc pp_occ pp_occdb pp_occdc pp_occnk  pp_noccdb pp_noccdc pp_noccnk

merge 1:1 idauniq using "$wave_4_derv", keepusing(`pen_w4_derv') nogen



***Receives Public Pension***
*wave 4 financial respondent receives public pension
gen r`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabeb iabermwp, result(r`wavenum'pubpen)
replace r`wavenum'pubpen = 0 if perid == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 2)) | ///
                        (iabeb == 2 | (iabeb == 1 & iabermwp == 0)))                  
replace r`wavenum'pubpen = 1 if perid == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,1,3)) | ///
                         (iabeb == 1 & iabermwp == 1))
label variable r`wavenum'pubpen "r`wavenum'pubpen:w`wavenum' r receives public pension"
label values r`wavenum'pubpen yesnopen

*wave 4 financial respondent's spouse receives public pension
gen s`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabeb iabermwp, result(s`wavenum'pubpen)
replace s`wavenum'pubpen = 0 if perid == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 1)) | ///
                        (iabeb == 2 | (iabeb == 1 & iabermwp == 0)))
replace s`wavenum'pubpen = 1 if perid == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,2,3)) | ///
                         (iabeb == 1 & iabermwp == 1))
label variable s`wavenum'pubpen "s`wavenum'pubpen:w`wavenum' s receives public pension"  
label values s`wavenum'pubpen yesnopen

*wave 4 non-financial respondent receives public pension   
bysort h4coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n-1] if perid[_n-1] == iapid & mi(r`wavenum'pubpen)
bysort h4coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n+1] if perid[_n+1] == iapid & mi(r`wavenum'pubpen)

*wave 4 non-financial respondent's spouse receives public pension   
spouse r`wavenum'pubpen, result(s`wavenum'pubpen) wave(`wavenum')

replace r`wavenum'pubpen = .p if r`wavenum'pubpen==. & r`wavenum'proxy==1


***Number of private pension currently receiving***
**wave 4 respondent
gen r`wavenum'peninm = .
replace r`wavenum'peninm = pp_nrec if inrange(pp_nrec,0,6)
label variable r`wavenum'peninm "r`wavenum'peninm:w`wavenum' # private pensions r currently receives income"

*wave 4 spouse 
gen s`wavenum'peninm = .
spouse r`wavenum'peninm, result(s`wavenum'peninm) wave(`wavenum')
label variable s`wavenum'peninm "s`wavenum'peninm:w`wavenum' # private pensions s currently receives income"


***Currently Receiving Any Private Pension***
*wave 4 respondent 
gen r`wavenum'peninc = .
replace r`wavenum'peninc = pp_rec if inrange(pp_rec,0,1)
label variable r`wavenum'peninc "r`wavenum'peninc:w`wavenum' r current receiving private pension income"
label values r`wavenum'peninc yesnopen

*wave 4 spouse
gen s`wavenum'peninc = .
spouse r`wavenum'peninc, result(s`wavenum'peninc) wave(`wavenum')
label variable s`wavenum'peninc "s`wavenum'peninc:w`wavenum' s current receiving private pension income"
label values s`wavenum'peninc yesnopen


***Number of Pension from Current Job *Occupational pensions
*wave 4 respondent
gen r`wavenum'penct = .
replace r`wavenum'penct = pp_nocc if inrange(pp_nocc,0,2)
replace r`wavenum'penct = .w if r`wavenum'penct==0 & inlist(wpdes,1,4,5,6)
label variable r`wavenum'penct "r`wavenum'penct:w`wavenum' r # pensions from current job"

*wave 4 spouse
gen s`wavenum'penct = .
spouse r`wavenum'penct, result(s`wavenum'penct) wave(`wavenum')
label variable s`wavenum'penct "s`wavenum'penct:w`wavenum' s # pensions from current job"


***Any Pension from Current Job*** occupational pension
*wave 4 respondent join a pension scheme from current job
gen r`wavenum'jcpen = .
replace r`wavenum'jcpen = pp_occ if inrange(pp_occ,0,1)
replace r`wavenum'jcpen = .w if r`wavenum'penct==.w
label variable r`wavenum'jcpen "r`wavenum'jcpen:w`wavenum' r any pension from current job"
label values r`wavenum'jcpen yesnopen


*wave 4 financial respondent's spouse any pension from current job
gen s`wavenum'jcpen = .
spouse r`wavenum'jcpen, result(s`wavenum'jcpen) wave(`wavenum')
label variable s`wavenum'jcpen "s`wavenum'jcpen:w`wavenum' s any pension from current job"
label values s`wavenum'jcpen yesnopen


***Type of Pension from Current Job***
*wave 4 respondent pension type 1 
gen r`wavenum'ptyp1_e = .
replace r`wavenum'ptyp1_e = .x if pp_nocc==0
replace r`wavenum'ptyp1_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
label variable r`wavenum'ptyp1_e "r`wavenum'ptyp1_e:w`wavenum' r current pension type #1"
label values r`wavenum'ptyp1_e pentype

*wave 4 spouse pension type 1
gen s`wavenum'ptyp1_e = .
spouse r`wavenum'ptyp1_e, result(s`wavenum'ptyp1_e) wave(`wavenum')
label variable s`wavenum'ptyp1_e "s`wavenum'ptyp1_e:w`wavenum' s current pension type #1"
label values s`wavenum'ptyp1_e pentype

*wave 4 respondent pension type 2
gen r`wavenum'ptyp2_e = .
replace r`wavenum'ptyp2_e = .x if inlist(pp_nocc,0,1)
replace r`wavenum'ptyp2_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2 
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==1 & pp_nocc==2
label variable r`wavenum'ptyp2_e "r`wavenum'ptyp2_e:w`wavenum' r current pension type #2"
label values r`wavenum'ptyp2_e pentype

*wave 4 spouse pension type 2
gen s`wavenum'ptyp2_e = .
spouse r`wavenum'ptyp2_e, result(s`wavenum'ptyp2_e) wave(`wavenum')
label variable s`wavenum'ptyp2_e "s`wavenum'ptyp2_e:w`wavenum' s current pension type #2"
label values s`wavenum'ptyp2_e pentype


***drop ELSA wave 4 core raw variables***
drop `pen_w4_core'

***drop ELSA wave 4 ifs derived variables***
drop `pen_w4_derv'


******************************************************************************************


*set wave number
local wavenum=5
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2
local np=8
  
***merge with wave 5 core data***
local pen_w5_core  iapid ///
										 iaspen iaspw iabenmwp iaask ///
										 perid wpdes					
merge 1:1 idauniq using "$wave_5_core", keepusing(`pen_w5_core') nogen

***merge with wave 5 ifs derived variables data***
local pen_w5_derv pp_nrec pp_rec pp_nocc pp_occ pp_occdb pp_occdc pp_occnk  pp_noccdb pp_noccdc pp_noccnk

merge 1:1 idauniq using "$wave_5_derv", keepusing(`pen_w5_derv') nogen




***Receives Public Pension***
*wave 5 financial respondent receives public pension
gen r`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabenmwp iaask, result(r`wavenum'pubpen)
replace r`wavenum'pubpen = 0 if perid == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 2) | iaask == 2) | ///
                        iabenmwp == 0)                  
replace r`wavenum'pubpen = 1 if perid == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,1,3) & iaask == 1) | ///
                         iabenmwp == 1)
label variable r`wavenum'pubpen "r`wavenum'pubpen:w`wavenum' r receives public pension"
label values r`wavenum'pubpen yesnopen

*wave 5 financial respondent's spouse receives public pension
gen s`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabenmwp, result(s`wavenum'pubpen)
replace s`wavenum'pubpen = 0 if perid == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 1)) | ///
                        iabenmwp == 0)
replace s`wavenum'pubpen = 1 if perid == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,2,3)) | ///
                         iabenmwp == 1)
label variable s`wavenum'pubpen "s`wavenum'pubpen:w`wavenum' s receives public pension"  
label values s`wavenum'pubpen yesnopen

*wave 5 non-financial respondent receives public pension   
bysort h5coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n-1] if perid[_n-1] == iapid & mi(r`wavenum'pubpen)
bysort h5coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n+1] if perid[_n+1] == iapid & mi(r`wavenum'pubpen)

*wave 5 non-financial respondent's spouse receives public pension   
spouse r`wavenum'pubpen, result(s`wavenum'pubpen) wave(`wavenum')

replace r`wavenum'pubpen = .p if r`wavenum'pubpen==. & r`wavenum'proxy==1


***Number of private pension currently receiving***
**wave 5 respondent
gen r`wavenum'peninm = .
replace r`wavenum'peninm = pp_nrec if inrange(pp_nrec,0,6)
label variable r`wavenum'peninm "r`wavenum'peninm:w`wavenum' # private pensions r currently receives income"

*wave 5 spouse 
gen s`wavenum'peninm = .
spouse r`wavenum'peninm, result(s`wavenum'peninm) wave(`wavenum')
label variable s`wavenum'peninm "s`wavenum'peninm:w`wavenum' # private pensions s currently receives income"


***Currently Receiving Any Private Pension***
*wave 5 respondent 
gen r`wavenum'peninc = .
replace r`wavenum'peninc = pp_rec if inrange(pp_rec,0,1)
label variable r`wavenum'peninc "r`wavenum'peninc:w`wavenum' r current receiving private pension income"
label values r`wavenum'peninc yesnopen

*wave 5 spouse
gen s`wavenum'peninc = .
spouse r`wavenum'peninc, result(s`wavenum'peninc) wave(`wavenum')
label variable s`wavenum'peninc "s`wavenum'peninc:w`wavenum' s current receiving private pension income"
label values s`wavenum'peninc yesnopen


***Number of Pension from Current Job *Occupational pensions
*wave 5 respondent
gen r`wavenum'penct = .
replace r`wavenum'penct = pp_nocc if inrange(pp_nocc,0,2)
replace r`wavenum'penct = .w if r`wavenum'penct==0 & inlist(wpdes,1,4,5,6)
label variable r`wavenum'penct "r`wavenum'penct:w`wavenum' r # pensions from current job"

*wave 5 spouse
gen s`wavenum'penct = .
spouse r`wavenum'penct, result(s`wavenum'penct) wave(`wavenum')
label variable s`wavenum'penct "s`wavenum'penct:w`wavenum' s # pensions from current job"


***Any Pension from Current Job*** occupational pension
*wave 5 respondent join a pension scheme from current job
gen r`wavenum'jcpen = .
replace r`wavenum'jcpen = pp_occ if inrange(pp_occ,0,1)
replace r`wavenum'jcpen = .w if r`wavenum'penct==.w
label variable r`wavenum'jcpen "r`wavenum'jcpen:w`wavenum' r any pension from current job"
label values r`wavenum'jcpen yesnopen


*wave 5 financial respondent's spouse any pension from current job
gen s`wavenum'jcpen = .
spouse r`wavenum'jcpen, result(s`wavenum'jcpen) wave(`wavenum')
label variable s`wavenum'jcpen "s`wavenum'jcpen:w`wavenum' s any pension from current job"
label values s`wavenum'jcpen yesnopen


***Type of Pension from Current Job***
*wave 5 respondent pension type 1 
gen r`wavenum'ptyp1_e = .
replace r`wavenum'ptyp1_e = .x if pp_nocc==0
replace r`wavenum'ptyp1_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
label variable r`wavenum'ptyp1_e "r`wavenum'ptyp1_e:w`wavenum' r current pension type #1"
label values r`wavenum'ptyp1_e pentype

*wave 5 spouse pension type 1
gen s`wavenum'ptyp1_e = .
spouse r`wavenum'ptyp1_e, result(s`wavenum'ptyp1_e) wave(`wavenum')
label variable s`wavenum'ptyp1_e "s`wavenum'ptyp1_e:w`wavenum' s current pension type #1"
label values s`wavenum'ptyp1_e pentype

*wave 5 respondent pension type 2
gen r`wavenum'ptyp2_e = .
replace r`wavenum'ptyp2_e = .x if inlist(pp_nocc,0,1)
replace r`wavenum'ptyp2_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2 
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==1 & pp_nocc==2
label variable r`wavenum'ptyp2_e "r`wavenum'ptyp2_e:w`wavenum' r current pension type #2"
label values r`wavenum'ptyp2_e pentype

*wave 5 spouse pension type 2
gen s`wavenum'ptyp2_e = .
spouse r`wavenum'ptyp2_e, result(s`wavenum'ptyp2_e) wave(`wavenum')
label variable s`wavenum'ptyp2_e "s`wavenum'ptyp2_e:w`wavenum' s current pension type #2"
label values s`wavenum'ptyp2_e pentype


***drop ELSA wave 5 core raw variables***
drop `pen_w5_core'

***drop ELSA wave 5 ifs derived variables***
drop `pen_w5_derv'


******************************************************************************************


*set wave number
local wavenum=6
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2
local np=8
  
***merge with wave 6 core data***
local pen_w6_core  IaPId ///
										 IaSPen IaSPW iabenmwp IAask ///
										 perid WpDes					
merge 1:1 idauniq using "$wave_6_core", keepusing(`pen_w6_core') nogen

***merge with wave 6 ifs derived variables data***
local pen_w6_derv pp_nrec pp_rec pp_nocc pp_occ pp_occdb pp_occdc pp_occnk  pp_noccdb pp_noccdc pp_noccnk

merge 1:1 idauniq using "$wave_6_derv", keepusing(`pen_w6_derv') nogen



***Receives Public Pension***
*wave 6 financial respondent receives public pension
gen r`wavenum'pubpen = .
missing_w`wavenum' IaSPen IaSPW iabenmwp IAask, result(r`wavenum'pubpen)
replace r`wavenum'pubpen = 0 if perid == IaPId & ///
                        ((IaSPen == 2 | (IaSPen == 1 & IaSPW == 2) | IAask == 2) | ///
                        iabenmwp == 0)                  
replace r`wavenum'pubpen = 1 if perid == IaPId & ///
                        ((IaSPen == 1 & inlist(IaSPW,1,3) & IAask == 1) | ///
                         iabenmwp == 1)
label variable r`wavenum'pubpen "r`wavenum'pubpen:w`wavenum' r receives public pension"
label values r`wavenum'pubpen yesnopen

*wave 6 financial respondent's spouse receives public pension
gen s`wavenum'pubpen = .
missing_w`wavenum' IaSPen IaSPW  iabenmwp, result(s`wavenum'pubpen)
replace s`wavenum'pubpen = 0 if perid == IaPId & ///
                        ((IaSPen == 2 | (IaSPen == 1 & IaSPW == 1)) | ///
                        iabenmwp == 0)
replace s`wavenum'pubpen = 1 if perid == IaPId & ///
                        ((IaSPen == 1 & inlist(IaSPW,2,3)) | ///
                         iabenmwp == 1)
label variable s`wavenum'pubpen "s`wavenum'pubpen:w`wavenum' s receives public pension"  
label values s`wavenum'pubpen yesnopen

*wave 6 non-financial respondent receives public pension   
bysort h6coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n-1] if perid[_n-1] == IaPId & mi(r`wavenum'pubpen)
bysort h6coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n+1] if perid[_n+1] == IaPId & mi(r`wavenum'pubpen)

*wave 6 non-financial respondent's spouse receives public pension   
spouse r`wavenum'pubpen, result(s`wavenum'pubpen) wave(`wavenum')


***Number of private pension currently receiving***
**wave 6 respondent
gen r`wavenum'peninm = .
replace r`wavenum'peninm = pp_nrec if inrange(pp_nrec,0,8)
label variable r`wavenum'peninm "r`wavenum'peninm:w`wavenum' # private pensions r currently receives income"

*wave 6 spouse 
gen s`wavenum'peninm = .
spouse r`wavenum'peninm, result(s`wavenum'peninm) wave(`wavenum')
label variable s`wavenum'peninm "s`wavenum'peninm:w`wavenum' # private pensions s currently receives income"


***Currently Receiving Any Private Pension***
*wave 6 respondent 
gen r`wavenum'peninc = .
replace r`wavenum'peninc = pp_rec if inrange(pp_rec,0,1)
label variable r`wavenum'peninc "r`wavenum'peninc:w`wavenum' r current receiving private pension income"
label values r`wavenum'peninc yesnopen

*wave 6 spouse
gen s`wavenum'peninc = .
spouse r`wavenum'peninc, result(s`wavenum'peninc) wave(`wavenum')
label variable s`wavenum'peninc "s`wavenum'peninc:w`wavenum' s current receiving private pension income"
label values s`wavenum'peninc yesnopen


***Number of Pension from Current Job *Occupational pensions
*wave 6 respondent
gen r`wavenum'penct = .
replace r`wavenum'penct = pp_nocc if inrange(pp_nocc,0,3)
replace r`wavenum'penct = .w if r`wavenum'penct==0 & inlist(WpDes,1,4,5,6)
label variable r`wavenum'penct "r`wavenum'penct:w`wavenum' r # pensions from current job"

*wave 6 spouse
gen s`wavenum'penct = .
spouse r`wavenum'penct, result(s`wavenum'penct) wave(`wavenum')
label variable s`wavenum'penct "s`wavenum'penct:w`wavenum' s # pensions from current job"


***Any Pension from Current Job*** occupational pension
*wave 6 respondent join a pension scheme from current job
gen r`wavenum'jcpen = .
replace r`wavenum'jcpen = pp_occ if inrange(pp_occ,0,1)
replace r`wavenum'jcpen = .w if r`wavenum'penct==.w
label variable r`wavenum'jcpen "r`wavenum'jcpen:w`wavenum' r any pension from current job"
label values r`wavenum'jcpen yesnopen


*wave 6 financial respondent's spouse any pension from current job
gen s`wavenum'jcpen = .
spouse r`wavenum'jcpen, result(s`wavenum'jcpen) wave(`wavenum')
label variable s`wavenum'jcpen "s`wavenum'jcpen:w`wavenum' s any pension from current job"
label values s`wavenum'jcpen yesnopen


***Type of Pension from Current Job***
*wave 6 respondent pension type 1 
gen r`wavenum'ptyp1_e = .
replace r`wavenum'ptyp1_e = .x if pp_nocc==0
replace r`wavenum'ptyp1_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==3
label variable r`wavenum'ptyp1_e "r`wavenum'ptyp1_e:w`wavenum' r current pension type #1"
label values r`wavenum'ptyp1_e pentype

*wave 6 spouse pension type 1
gen s`wavenum'ptyp1_e = .
spouse r`wavenum'ptyp1_e, result(s`wavenum'ptyp1_e) wave(`wavenum')
label variable s`wavenum'ptyp1_e "s`wavenum'ptyp1_e:w`wavenum' s current pension type #1"
label values s`wavenum'ptyp1_e pentype

*wave 6 respondent pension type 2
gen r`wavenum'ptyp2_e = .
replace r`wavenum'ptyp2_e = .x if inlist(pp_nocc,0,1)
replace r`wavenum'ptyp2_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2 
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 1 if pp_noccdc==2 & pp_occdb==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 1 if pp_noccdc==2 & pp_occdb==0 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_noccdb==2 & pp_occdc==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_noccdb==2 & pp_occdc==0 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==1 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 3 if pp_noccnk==2 & pp_occdc==1 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 3 if pp_noccnk==2 & pp_occdc==0 & pp_occdb==1 & pp_nocc==3
label variable r`wavenum'ptyp2_e "r`wavenum'ptyp2_e:w`wavenum' r current pension type #2"
label values r`wavenum'ptyp2_e pentype

*wave 6 spouse pension type 2
gen s`wavenum'ptyp2_e = .
spouse r`wavenum'ptyp2_e, result(s`wavenum'ptyp2_e) wave(`wavenum')
label variable s`wavenum'ptyp2_e "s`wavenum'ptyp2_e:w`wavenum' s current pension type #2"
label values s`wavenum'ptyp2_e pentype

*wave 6 respondent pension type 3
gen r`wavenum'ptyp3_e = .
replace r`wavenum'ptyp3_e = .x if inrange(pp_nocc,0,2)
replace r`wavenum'ptyp3_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp3_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 2 if pp_noccdb==2 & pp_occdc==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==2 & pp_occdc==1 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==2 & pp_occdc==0 & pp_occdb==1 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==1 & pp_nocc==3
label variable r`wavenum'ptyp3_e "r`wavenum'ptyp3_e:w`wavenum' r current pension type #3"
label values r`wavenum'ptyp3_e pentype

*wave 6 spouse pension type 3
gen s`wavenum'ptyp3_e = .
spouse r`wavenum'ptyp3_e, result(s`wavenum'ptyp3_e) wave(`wavenum')
label variable s`wavenum'ptyp3_e "s`wavenum'ptyp3_e:w`wavenum' s current pension type #3"
label values s`wavenum'ptyp3_e pentype


***drop ELSA wave 6 core raw variables***
drop `pen_w6_core'

***drop ELSA wave 6 ifs derived variables***
drop `pen_w6_derv'


******************************************************************************************


*set wave number
local wavenum=7
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2
local np=8
  
***merge with wave 7 core data***
local pen_w7_core  IaPId ///
										 IaSPen IaSPW iabenmwp IAask ///
										 perid WpDes					
merge 1:1 idauniq using "$wave_7_core", keepusing(`pen_w7_core') nogen

***merge with wave 7 ifs derived variables data***
local pen_w7_derv pp_nrec pp_rec pp_nocc pp_occ pp_occdb pp_occdc pp_occnk  pp_noccdb pp_noccdc pp_noccnk

merge 1:1 idauniq using "$wave_7_derv", keepusing(`pen_w7_derv') nogen




***Receives Public Pension***
*wave 7 financial respondent receives public pension
gen r`wavenum'pubpen = .
missing_w`wavenum' IaSPen IaSPW iabenmwp IAask, result(r`wavenum'pubpen)
replace r`wavenum'pubpen = 0 if perid == IaPId & ///
                        ((IaSPen == 2 | (IaSPen == 1 & IaSPW == 2) | IAask == 2) | ///
                        iabenmwp == 0)                  
replace r`wavenum'pubpen = 1 if perid == IaPId & ///
                        ((IaSPen == 1 & inlist(IaSPW,1,3) & IAask == 1) | ///
                         iabenmwp == 1)
label variable r`wavenum'pubpen "r`wavenum'pubpen:w`wavenum' r receives public pension"
label values r`wavenum'pubpen yesnopen

*wave 7 financial respondent's spouse receives public pension
gen s`wavenum'pubpen = .
missing_w`wavenum' IaSPen IaSPW  iabenmwp, result(s`wavenum'pubpen)
replace s`wavenum'pubpen = 0 if perid == IaPId & ///
                        ((IaSPen == 2 | (IaSPen == 1 & IaSPW == 1)) | ///
                        iabenmwp == 0)
replace s`wavenum'pubpen = 1 if perid == IaPId & ///
                        ((IaSPen == 1 & inlist(IaSPW,2,3)) | ///
                         iabenmwp == 1)
label variable s`wavenum'pubpen "s`wavenum'pubpen:w`wavenum' s receives public pension"  
label values s`wavenum'pubpen yesnopen

*wave 7 non-financial respondent receives public pension   
bysort h7coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n-1] if perid[_n-1] == IaPId & mi(r`wavenum'pubpen)
bysort h7coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n+1] if perid[_n+1] == IaPId & mi(r`wavenum'pubpen)

*wave 7 non-financial respondent's spouse receives public pension   
spouse r`wavenum'pubpen, result(s`wavenum'pubpen) wave(`wavenum')


***Number of private pension currently receiving***
**wave 7 respondent
gen r`wavenum'peninm = .
replace r`wavenum'peninm = pp_nrec if inrange(pp_nrec,0,6)
label variable r`wavenum'peninm "r`wavenum'peninm:w`wavenum' # private pensions r currently receives income"

*wave 7 spouse 
gen s`wavenum'peninm = .
spouse r`wavenum'peninm, result(s`wavenum'peninm) wave(`wavenum')
label variable s`wavenum'peninm "s`wavenum'peninm:w`wavenum' # private pensions s currently receives income"


***Currently Receiving Any Private Pension***
*wave 7 respondent 
gen r`wavenum'peninc = .
replace r`wavenum'peninc = pp_rec if inrange(pp_rec,0,1)
label variable r`wavenum'peninc "r`wavenum'peninc:w`wavenum' r current receiving private pension income"
label values r`wavenum'peninc yesnopen

*wave 7 spouse
gen s`wavenum'peninc = .
spouse r`wavenum'peninc, result(s`wavenum'peninc) wave(`wavenum')
label variable s`wavenum'peninc "s`wavenum'peninc:w`wavenum' s current receiving private pension income"
label values s`wavenum'peninc yesnopen


***Number of Pension from Current Job *Occupational pensions
*wave 7 respondent
gen r`wavenum'penct = .
replace r`wavenum'penct = pp_nocc if inrange(pp_nocc,0,2)
replace r`wavenum'penct = .w if r`wavenum'penct==0 & inlist(WpDes,1,4,5,6)
label variable r`wavenum'penct "r`wavenum'penct:w`wavenum' r # pensions from current job"

*wave 7 spouse
gen s`wavenum'penct = .
spouse r`wavenum'penct, result(s`wavenum'penct) wave(`wavenum')
label variable s`wavenum'penct "s`wavenum'penct:w`wavenum' s # pensions from current job"


***Any Pension from Current Job*** occupational pension
*wave 7 respondent join a pension scheme from current job
gen r`wavenum'jcpen = .
replace r`wavenum'jcpen = pp_occ if inrange(pp_occ,0,1)
replace r`wavenum'jcpen = .w if r`wavenum'penct==.w
label variable r`wavenum'jcpen "r`wavenum'jcpen:w`wavenum' r any pension from current job"
label values r`wavenum'jcpen yesnopen


*wave 7 financial respondent's spouse any pension from current job
gen s`wavenum'jcpen = .
spouse r`wavenum'jcpen, result(s`wavenum'jcpen) wave(`wavenum')
label variable s`wavenum'jcpen "s`wavenum'jcpen:w`wavenum' s any pension from current job"
label values s`wavenum'jcpen yesnopen


***Type of Pension from Current Job***
*wave 7 respondent pension type 1 
gen r`wavenum'ptyp1_e = .
replace r`wavenum'ptyp1_e = .x if pp_nocc==0
replace r`wavenum'ptyp1_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occnk==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
label variable r`wavenum'ptyp1_e "r`wavenum'ptyp1_e:w`wavenum' r current pension type #1"
label values r`wavenum'ptyp1_e pentype

*wave 7 spouse pension type 1
gen s`wavenum'ptyp1_e = .
spouse r`wavenum'ptyp1_e, result(s`wavenum'ptyp1_e) wave(`wavenum')
label variable s`wavenum'ptyp1_e "s`wavenum'ptyp1_e:w`wavenum' s current pension type #1"
label values s`wavenum'ptyp1_e pentype

*wave 7 respondent pension type 2
gen r`wavenum'ptyp2_e = .
replace r`wavenum'ptyp2_e = .x if inlist(pp_nocc,0,1)
replace r`wavenum'ptyp2_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2 
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==1 & pp_nocc==2
label variable r`wavenum'ptyp2_e "r`wavenum'ptyp2_e:w`wavenum' r current pension type #2"
label values r`wavenum'ptyp2_e pentype

*wave 7 spouse pension type 2
gen s`wavenum'ptyp2_e = .
spouse r`wavenum'ptyp2_e, result(s`wavenum'ptyp2_e) wave(`wavenum')
label variable s`wavenum'ptyp2_e "s`wavenum'ptyp2_e:w`wavenum' s current pension type #2"
label values s`wavenum'ptyp2_e pentype


***drop ELSA wave 7 core raw variables***
drop `pen_w7_core'

***drop ELSA wave 7 ifs derived variables***
drop `pen_w7_derv'


******************************************************************************************


*set wave number
local wavenum=8
local pre_wavenum=`wavenum'-1
local pre_pre_wavenum=`wavenum'-2
local np=8
  
***merge with wave 8 core data***
local pen_w8_core  iapid ///
										 iaspen iaspw iabenmwp iaask ///
										 perid wpdes					
merge 1:1 idauniq using "$wave_8_core", keepusing(`pen_w8_core') nogen

***merge with wave 8 ifs derived variables data***
local pen_w8_derv pp_nrec pp_rec pp_nocc pp_occ pp_occdb pp_occdc pp_occnk  pp_noccdb pp_noccdc pp_noccnk

merge 1:1 idauniq using "$wave_8_derv", keepusing(`pen_w8_derv') nogen




***Receives Public Pension***
*wave 8 financial respondent receives public pension
gen r`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw iabenmwp iaask, result(r`wavenum'pubpen)
replace r`wavenum'pubpen = 0 if perid == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 2) | iaask == 2) | ///
                        iabenmwp == 0)                  
replace r`wavenum'pubpen = 1 if perid == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,1,3) & iaask == 1) | ///
                         iabenmwp == 1)
replace r`wavenum'pubpen = 1 if perid != iapid & r8proxy==1 & ///
												(iaspen == 1 & inlist(iaspw,1,3) & iaask == 1) 
label variable r`wavenum'pubpen "r`wavenum'pubpen:w`wavenum' r receives public pension"
label values r`wavenum'pubpen yesnopen

*wave 8 financial respondent's spouse receives public pension
gen s`wavenum'pubpen = .
missing_w`wavenum' iaspen iaspw  iabenmwp, result(s`wavenum'pubpen)
replace s`wavenum'pubpen = 0 if perid == iapid & ///
                        ((iaspen == 2 | (iaspen == 1 & iaspw == 1)) | ///
                        iabenmwp == 0)
replace s`wavenum'pubpen = 1 if perid == iapid & ///
                        ((iaspen == 1 & inlist(iaspw,2,3)) | ///
                         iabenmwp == 1)
label variable s`wavenum'pubpen "s`wavenum'pubpen:w`wavenum' s receives public pension"  
label values s`wavenum'pubpen yesnopen

*wave 8 non-financial respondent receives public pension   
bysort h8coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n-1] if perid[_n-1] == iapid & mi(r`wavenum'pubpen)
bysort h8coupid: replace r`wavenum'pubpen = s`wavenum'pubpen[_n+1] if perid[_n+1] == iapid & mi(r`wavenum'pubpen)

*wave 8 non-financial respondent's spouse receives public pension   
spouse r`wavenum'pubpen, result(s`wavenum'pubpen) wave(`wavenum')


***Number of private pension currently receiving***
**wave 8 respondent
gen r`wavenum'peninm = .
replace r`wavenum'peninm = pp_nrec if inrange(pp_nrec,0,8)
tab pp_nrec if r8peninm==.
label variable r`wavenum'peninm "r`wavenum'peninm:w`wavenum' # private pensions r currently receives income"

*wave 8 spouse 
gen s`wavenum'peninm = .
spouse r`wavenum'peninm, result(s`wavenum'peninm) wave(`wavenum')
label variable s`wavenum'peninm "s`wavenum'peninm:w`wavenum' # private pensions s currently receives income"


***Currently Receiving Any Private Pension***
*wave 8 respondent 
gen r`wavenum'peninc = .
replace r`wavenum'peninc = pp_rec if inrange(pp_rec,0,1)
label variable r`wavenum'peninc "r`wavenum'peninc:w`wavenum' r current receiving private pension income"
label values r`wavenum'peninc yesnopen

*wave 8 spouse
gen s`wavenum'peninc = .
spouse r`wavenum'peninc, result(s`wavenum'peninc) wave(`wavenum')
label variable s`wavenum'peninc "s`wavenum'peninc:w`wavenum' s current receiving private pension income"
label values s`wavenum'peninc yesnopen


***Number of Pension from Current Job *Occupational pensions
*wave 8 respondent
gen r`wavenum'penct = .
replace r`wavenum'penct = pp_nocc if inrange(pp_nocc,0,3)
replace r`wavenum'penct = .w if r`wavenum'penct==0 & inlist(wpdes,1,4,5,6)
label variable r`wavenum'penct "r`wavenum'penct:w`wavenum' r # pensions from current job"

*wave 8 spouse
gen s`wavenum'penct = .
spouse r`wavenum'penct, result(s`wavenum'penct) wave(`wavenum')
label variable s`wavenum'penct "s`wavenum'penct:w`wavenum' s # pensions from current job"


***Any Pension from Current Job*** occupational pension
*wave 8 respondent join a pension scheme from current job
gen r`wavenum'jcpen = .
replace r`wavenum'jcpen = pp_occ if inrange(pp_occ,0,1)
replace r`wavenum'jcpen = .w if r`wavenum'penct==.w
label variable r`wavenum'jcpen "r`wavenum'jcpen:w`wavenum' r any pension from current job"
label values r`wavenum'jcpen yesnopen


*wave 8 financial respondent's spouse any pension from current job
gen s`wavenum'jcpen = .
spouse r`wavenum'jcpen, result(s`wavenum'jcpen) wave(`wavenum')
label variable s`wavenum'jcpen "s`wavenum'jcpen:w`wavenum' s any pension from current job"
label values s`wavenum'jcpen yesnopen


***Type of Pension from Current Job***
*wave 8 respondent pension type 1 
gen r`wavenum'ptyp1_e = .
replace r`wavenum'ptyp1_e = .x if pp_nocc==0
replace r`wavenum'ptyp1_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp1_e = 1 if pp_occdc==1 & pp_occdb==1 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==1 & pp_nocc==2
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp1_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_nocc==1
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp1_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==3
label variable r`wavenum'ptyp1_e "r`wavenum'ptyp1_e:w`wavenum' r current pension type #1"
label values r`wavenum'ptyp1_e pentype

*wave 8 spouse pension type 1
gen s`wavenum'ptyp1_e = .
spouse r`wavenum'ptyp1_e, result(s`wavenum'ptyp1_e) wave(`wavenum')
label variable s`wavenum'ptyp1_e "s`wavenum'ptyp1_e:w`wavenum' s current pension type #1"
label values s`wavenum'ptyp1_e pentype

*wave 8 respondent pension type 2
gen r`wavenum'ptyp2_e = .
replace r`wavenum'ptyp2_e = .x if inlist(pp_nocc,0,1)
replace r`wavenum'ptyp2_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==2 
replace r`wavenum'ptyp2_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 1 if pp_noccdc==2 & pp_occdb==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 1 if pp_noccdc==2 & pp_occdb==0 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_noccdb==2 & pp_occdc==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_noccdb==2 & pp_occdc==0 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp2_e = 2 if pp_occdb==1 & pp_occdc==1 & pp_occnk==1 & pp_nocc==3
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==0 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==1 & pp_nocc==2
replace r`wavenum'ptyp2_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 3 if pp_noccnk==2 & pp_occdc==1 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp2_e = 3 if pp_noccnk==2 & pp_occdc==0 & pp_occdb==1 & pp_nocc==3
label variable r`wavenum'ptyp2_e "r`wavenum'ptyp2_e:w`wavenum' r current pension type #2"
label values r`wavenum'ptyp2_e pentype

*wave 8 spouse pension type 2
gen s`wavenum'ptyp2_e = .
spouse r`wavenum'ptyp2_e, result(s`wavenum'ptyp2_e) wave(`wavenum')
label variable s`wavenum'ptyp2_e "s`wavenum'ptyp2_e:w`wavenum' s current pension type #2"
label values s`wavenum'ptyp2_e pentype

*wave 8 respondent pension type 3
gen r`wavenum'ptyp3_e = .
replace r`wavenum'ptyp3_e = .x if inrange(pp_nocc,0,2)
replace r`wavenum'ptyp3_e = .w if r`wavenum'penct==.w
replace r`wavenum'ptyp3_e = 1 if pp_occdc==1 & pp_occdb==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 2 if pp_occdb==1 & pp_occdc==0 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 2 if pp_noccdb==2 & pp_occdc==1 & pp_occnk==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==1 & pp_occdc==0 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==2 & pp_occdc==1 & pp_occdb==0 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==2 & pp_occdc==0 & pp_occdb==1 & pp_nocc==3
replace r`wavenum'ptyp3_e = 3 if pp_occnk==1 & pp_occdc==1 & pp_occdb==1 & pp_nocc==3
label variable r`wavenum'ptyp3_e "r`wavenum'ptyp3_e:w`wavenum' r current pension type #3"
label values r`wavenum'ptyp3_e pentype

*wave 8 spouse pension type 3
gen s`wavenum'ptyp3_e = .
spouse r`wavenum'ptyp3_e, result(s`wavenum'ptyp3_e) wave(`wavenum')
label variable s`wavenum'ptyp3_e "s`wavenum'ptyp3_e:w`wavenum' s current pension type #3"
label values s`wavenum'ptyp3_e pentype


***drop ELSA wave 8 core raw variables***
drop `pen_w8_core'

***drop ELSA wave 8 ifs derived variables***
drop `pen_w8_derv'


******************************************************************************************


   
***yes no question**   
label define yesnod ///
   0 "0.no" ///
   1 "1.yes" ///
	 .m ".m:Missing" ///
	  .r ".r:Refuse" ///
	 .d ".d:DK" ///
	 .s ".s:skipped" ///
	 .p ".p:Proxy" ///
	 	.o ".o:other situation" ///
	 .c ".c:not in the questionnaire"  ///
	 .a ".a:not in the survey when the questions was asked" 

***job stress****
label define job ///
  1 "1.strongly disagree" ///
  2 "2.disagree" ///
  3 "3.agree" ///
  4 "4.strongly agree" ///
   .r ".r:Refuse" ///
   .n ".n:not answer the question" ///
   .p ".p:proxy" ///
   .w ".w:not working" ///
	 .m ".m:missing" ///
	 .s ".s:skipped" ///
	 .c ".c:no self-completion"  ///
	 .d ".d:DK" ///
	 .o ".o:other situation" ///
	 .a ".a:not in the survey when the questions was asked" /// 
	 .i ".i:invalid answer"


 	
*****health condition **
 label define rate ///
   1 "1.excellent" ///
   2 "2.very good" ///
   3 "3.above average" ///
   4 "4.fair" ///
   5 "5.poor" ///
	 .m ".m:Missing" ///
	 .c ".c:not in the questionnaire"  ///
	 .n ".n:health varied a great deal"  ///
	 .r ".r:Refuse" ///
	 .d ".d:DK" ///
	 .s ".s:skipped" ///
	 .p ".p:Proxy"	///
	 .a ".a:not in the survey when the questions was asked" 
	 
	 
*****how much **
 label define tim ///
   1 "1.hardly ever or never" ///
   2 "2.some of the time" ///
   3 "3.often" ///
	 .m ".m:Missing" ///
	 .r ".r:Refuse" ///
	 .c ".c:not in self-completion module"  ///
	 .d ".d:DK" ///
	 .s ".s:skipped" ///
	 .p ".p:Proxy"	 ///
	 .a ".a:not in the survey when the questions was asked" ///
	 .i ".i:invalid answer"
	
	
*****attention**
/* label define attn ///
   1 "1.a lot" ///
   2 "2.some" ///
   3 "3.a little" ///
   4 "4.not at all" ///
   .r ".r:Refuse" ///
   .w ".w:Not working" ///
	 .m ".m:Missing" ///
	 .p ".p:Proxy" ///
	 .s ".s:skipped" ///
	 .c ".c:not in self-completion module"  ///
	 .d ".d:DK" ///
   .a ".a:not in the wave when the question asked" ///
	 .n ".n:does not apply" ///
	 .e ".e:Skip pattern error" ///
	 .i ".i:invalid answer"	 */

*****attention spouse**
 label define attns ///
   1 "1.a lot" ///
   2 "2.some" ///
   3 "3.a little" ///
   4 "4.not at all" ///
   .r ".r:Refuse" ///
   .w ".w:Not working" ///
	 .m ".m:Missing" ///
	 .p ".p:Proxy" ///
	 .s ".s:skipped" ///
	 .c ".c:not in self-completion module"  ///
	 .d ".d:DK" ///
   .a ".a:not in the wave when the question asked" ///
	 .n ".n:no spouse" ///
	 .e ".e:Skip pattern error" ///
	 .i ".i:invalid answer"	
	 
*****attention child/children**
 label define attnk ///
   1 "1.a lot" ///
   2 "2.some" ///
   3 "3.a little" ///
   4 "4.not at all" ///
   .r ".r:Refuse" ///
   .w ".w:Not working" ///
	 .m ".m:Missing" ///
	 .p ".p:Proxy" ///
	 .s ".s:skipped" ///
	 .c ".c:not in self-completion module"  ///
	 .d ".d:DK" ///
   .a ".a:not in the wave when the question asked" ///
	 .n ".n:no children" ///
	 .e ".e:Skip pattern error" ///
	 .i ".i:invalid answer"	
	 
*****attention other family members**
 label define attnof ///
   1 "1.a lot" ///
   2 "2.some" ///
   3 "3.a little" ///
   4 "4.not at all" ///
   .r ".r:Refuse" ///
   .w ".w:Not working" ///
	 .m ".m:Missing" ///
	 .p ".p:Proxy" ///
	 .s ".s:skipped" ///
	 .c ".c:not in self-completion module"  ///
	 .d ".d:DK" ///
   .a ".a:not in the wave when the question asked" ///
	 .n ".n:no other family members" ///
	 .e ".e:Skip pattern error" ///
	 .i ".i:invalid answer"	
	 
****attention other family members**
 label define attnf ///
   1 "1.a lot" ///
   2 "2.some" ///
   3 "3.a little" ///
   4 "4.not at all" ///
   .r ".r:Refuse" ///
   .w ".w:Not working" ///
	 .m ".m:Missing" ///
	 .p ".p:Proxy" ///
	 .s ".s:skipped" ///
	 .c ".c:not in self-completion module"  ///
	 .d ".d:DK" ///
   .a ".a:not in the wave when the question asked" ///
	 .n ".n:no friends" ///
	 .e ".e:Skip pattern error" ///
	 .i ".i:invalid answer"	
	 
*****discrimination**
 label define resp ///
   1 "1.almost everyday" ///
   2 "2.at least once a week" ///
   3 "3.a few times a month" ///
   4 "4.a few times a year" ///
   5 "5.less than once a year" ///
   6 "6.never" ///
   .r ".r:Refuse" ///
	 .m ".m:Missing" ///
	 .p ".p:Proxy" ///
	 .s ".s:skipped" ///
	 .c ".c:not in self-completion module"  ///
	 .d ".d:DK" ///
   .a ".a:not in the wave when the question asked" ///
	 .n ".n:no discrimination" ///
	 .e ".e:Skip pattern error" 
	 

label define yesnost ///
   0 "0.no" ///
   1 "1.yes" ///
	 .m ".m:Missing" ///
	 .p ".p:Proxy" ///
	 .n ".n:no discrimination"  ///
	 .r ".r:Refuse" ///
	 .d ".d:DK" ///
   .a ".a:not in the wave when the question asked" ///
	 .s ".s:skipped" ///
	 .p ".p:Proxy" ///
	 .c ".c:not in self-completion module"  
	 	 
	 
pause on
*set wave number
local wavenum =1
local pre_wavenum = `wavenum' -1

*file core**
local stre_w1_core scsca scscb scscc scscd scsce scscf scscg scsch scsci scptra scptrb scptrc scptrd scptre scptrf ///
                   scptr scchd scchda scchdb scchdc scchdd scchde scchdf scfam scfama scfamb scfamc scfamd scfame scfamf ///
                   scfrd scfrda scfrdb scfrdc scfrdd scfrde scfrdf
                    
merge 1:1 idauniq using "$wave_1_core", keepusing(`stre_w1_core') nogen

*file index
local stre_w`wavenum'_index outscw1

merge 1:1 idauniq using "$index", keepusing(`stre_w1_index') nogen


***Dont belong in this area***
gen r`wavenum'belong = . 
missing_w`wavenum' outscw1 scsca, result(r`wavenum'belong)
replace r`wavenum'belong = .m if outscw1 == 2 & inw`wavenum' == 1 
replace r`wavenum'belong = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'belong = scsca if inrange(scsca,1,7)

label variable r`wavenum'belong "r`wavenum'belong:w`wavenum' whether r feels part of/doesn't belong in this area"

*wave 1 spouse dont belong this area
gen s`wavenum'belong =.
spouse r`wavenum'belong, result(s`wavenum'belong) wave(`wavenum')
label variable s`wavenum'belong "s`wavenum'belong:w`wavenum' whether s feels part of/doesn't belong in this area"

***Vandalism and Graffitti*
gen r`wavenum'vandal =. 
missing_w`wavenum' outscw1 scscb, result(r`wavenum'vandal)
replace r`wavenum'vandal = .m if outscw1 == 2  & inw`wavenum' == 1
replace r`wavenum'vandal = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'vandal = 7 if scscb == 1
replace r`wavenum'vandal = 6 if scscb == 2 
replace r`wavenum'vandal = 5 if scscb == 3 
replace r`wavenum'vandal = 4 if scscb == 4 
replace r`wavenum'vandal = 3 if scscb == 5 
replace r`wavenum'vandal = 2 if scscb == 6 
replace r`wavenum'vandal = 1 if scscb == 7 

label variable r`wavenum'vandal "r`wavenum'vandal:w`wavenum' whether r vandalism is no problem/big problem in this area"

*wave 1 spouse vandalism and graffiti
gen s`wavenum'vandal =.
spouse r`wavenum'vandal, result(s`wavenum'vandal) wave(`wavenum')
label variable s`wavenum'vandal "s`wavenum'vandal:w`wavenum' whether s vandalism is no problem/big problem in this area"

****Feel alone in this area***
gen r`wavenum'alone=. 
missing_w`wavenum' outscw1 scscc, result(r`wavenum'alone)
replace r`wavenum'alone = .m if outscw1 == 2  & inw`wavenum' == 1
replace r`wavenum'alone = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'alone = 7 if scscc == 1
replace r`wavenum'alone = 6 if scscc == 2 
replace r`wavenum'alone = 5 if scscc == 3 
replace r`wavenum'alone = 4 if scscc == 4 
replace r`wavenum'alone = 3 if scscc == 5 
replace r`wavenum'alone = 2 if scscc == 6 
replace r`wavenum'alone = 1 if scscc == 7 

label variable r`wavenum'alone "r`wavenum'vandal:w`wavenum' whether r never felt lonely/feel lonely in this area"

*wave 1 spouse feel alone in this area
gen s`wavenum'alone =.
spouse r`wavenum'alone, result(s`wavenum'alone) wave(`wavenum')
label variable s`wavenum'alone "s`wavenum'alone:w`wavenum' whether s never felt lonely/feel lonely in this area"

***Dont trust in this area***
gen r`wavenum'trust = . 
missing_w`wavenum' outscw1 scscd, result(r`wavenum'trust)
replace r`wavenum'trust = .m if outscw1 == 2 & inw`wavenum' == 1
replace r`wavenum'trust = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'trust = scscd if inrange(scscd,1,7)

label variable r`wavenum'trust "r`wavenum'trust:w`wavenum' whether r feels people can be/can't be trusted in this area"

*wave 1 spouse dont trust people
gen s`wavenum'trust =.
spouse r`wavenum'trust, result(s`wavenum'trust) wave(`wavenum')
label variable s`wavenum'trust "s`wavenum'trust:w`wavenum' whether s feels people can be/can't be trusted in this area"

**Afraid to walk around alone***
gen r`wavenum'afwalk = . 
missing_w`wavenum' outscw1 scsce, result(r`wavenum'afwalk)
replace r`wavenum'afwalk = .m if outscw1 == 2 & inw`wavenum' == 1
replace r`wavenum'afwalk = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'afwalk = 7 if scsce == 1
replace r`wavenum'afwalk = 6 if scsce == 2 
replace r`wavenum'afwalk = 5 if scsce == 3 
replace r`wavenum'afwalk = 4 if scsce == 4 
replace r`wavenum'afwalk = 3 if scsce == 5 
replace r`wavenum'afwalk = 2 if scsce == 6 
replace r`wavenum'afwalk = 1 if scsce == 7 
label variable r`wavenum'afwalk "r`wavenum'afwalk:w`wavenum' whether r feels safe/afraid walking alone in this area"

*wave 1 spouse afraid walk
gen s`wavenum'afwalk =.
spouse r`wavenum'afwalk, result(s`wavenum'afwalk) wave(`wavenum')
label variable s`wavenum'afwalk "s`wavenum'afwalk:w`wavenum' whether s feels safe/afraid walking alone in this area"

***Unfriendly people ***
gen r`wavenum'unfriend = . 
missing_w`wavenum' outscw1 scscf, result(r`wavenum'unfriend)
replace r`wavenum'unfriend = .m if outscw1 == 2 & inw`wavenum' == 1
replace r`wavenum'unfriend = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'unfriend = scscf if inrange(scscf,1,7)

label variable r`wavenum'unfriend "r`wavenum'unfriend:w`wavenum' whether r feels people are friendly/unfriendly in this area"

*wave 1 spouse unfriendly people
gen s`wavenum'unfriend =.
spouse r`wavenum'unfriend, result(s`wavenum'unfriend) wave(`wavenum')
label variable s`wavenum'unfriend "s`wavenum'unfriend:w`wavenum' whether s feels people are friendly/unfriendly in this area"


***Take advantage of respondent
gen r`wavenum'tadvan=. 
missing_w`wavenum' outscw1 scscg, result(r`wavenum'tadvan)
replace r`wavenum'tadvan = .m if outscw1 == 2 & inw`wavenum' == 1
replace r`wavenum'tadvan = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'tadvan = 7 if scscg == 1
replace r`wavenum'tadvan = 6 if scscg == 2 
replace r`wavenum'tadvan = 5 if scscg == 3 
replace r`wavenum'tadvan = 4 if scscg == 4 
replace r`wavenum'tadvan = 3 if scscg == 5 
replace r`wavenum'tadvan = 2 if scscg == 6 
replace r`wavenum'tadvan = 1 if scscg == 7 

label variable r`wavenum'tadvan "r`wavenum'tadvan:w`wavenum' r feels people take advantage of/treat r fairly in this area"

*wave 1 spouse take advantage of
gen s`wavenum'tadvan =.
spouse r`wavenum'tadvan, result(s`wavenum'tadvan) wave(`wavenum')
label variable s`wavenum'tadvan "s`wavenum'tadvan:w`wavenum' s feels people take advantage of/treat s fairly in this area"

***Full of rubbish and litter***
gen r`wavenum'rubbish = . 
missing_w`wavenum' outscw1 scsch, result(r`wavenum'rubbish)
replace r`wavenum'rubbish = .m if outscw1 == 2 & inw`wavenum' == 1
replace r`wavenum'rubbish = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'rubbish = scsch if inrange(scsch,1,7)

label variable r`wavenum'rubbish "r`wavenum'rubbish:w`wavenum' whether r feels area is clean/full of rubbish and litter"

*wave 1 spouse full of rubbish and litter
gen s`wavenum'rubbish =.
spouse r`wavenum'rubbish, result(s`wavenum'rubbish) wave(`wavenum')
label variable s`wavenum'rubbish "s`wavenum'rubbish:w`wavenum' whether s feels area is clean/full of rubbish and litter"

***Don't get help from other***
gen r`wavenum'hlpntr = . 
missing_w`wavenum' outscw1 scsci, result(r`wavenum'hlpntr)
replace r`wavenum'hlpntr = .m if outscw1 == 2 & inw`wavenum' == 1
replace r`wavenum'hlpntr = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'hlpntr = scsci if inrange(scsci,1,7)

label variable r`wavenum'hlpntr "r`wavenum'hlpntr:w`wavenum' whether r feels people will help/won't help in this area"

*wave 1 spouse don't get help from other
gen s`wavenum'hlpntr =.
spouse r`wavenum'hlpntr, result(s`wavenum'hlpntr) wave(`wavenum')
label variable s`wavenum'hlpntr "s`wavenum'hlpntr:w`wavenum' whether s feels people will help/won't help in this area"


****Neighborhood phsyical disorder summary****
egen r`wavenum'npdisumm_e =rowmiss(r`wavenum'vandal r`wavenum'afwalk r`wavenum'rubbish)  if inw`wavenum' == 1
label variable r`wavenum'npdisumm_e "r`wavenum'npdisumm_e:w`wavenum' missings in r's neighborhood physical disorder summary mean score"

gen s`wavenum'npdisumm_e =.
spouse r`wavenum'npdisumm_e, result(s`wavenum'npdisumm_e) wave(`wavenum')  
label variable s`wavenum'npdisumm_e "s`wavenum'npdisumm_e:w`wavenum' missings in s's neighborhood physical disorder summary mean score"

egen r`wavenum'npdisum_e =rowmean(r`wavenum'vandal r`wavenum'afwalk r`wavenum'rubbish) if inw`wavenum' == 1
replace r`wavenum'npdisum_e  = .m if r`wavenum'npdisumm_e ==3 & inw`wavenum' == 1
replace r`wavenum'npdisum_e  = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
label variable r`wavenum'npdisum_e "r`wavenum'npdisum_e:w`wavenum' r's neighborhood physical disorder summary mean score"

gen s`wavenum'npdisum_e =.
spouse r`wavenum'npdisum_e, result(s`wavenum'npdisum_e) wave(`wavenum')
label variable s`wavenum'npdisum_e "s`wavenum'npdisum_e:w`wavenum' s's neighborhood physical disorder summary mean score"

****Neighborhood social cohesion***
egen r`wavenum'nsocosumm =rowmiss(r`wavenum'belong r`wavenum'trust r`wavenum'unfrien r`wavenum'hlpntr) if inw`wavenum' == 1
label variable r`wavenum'nsocosumm "r`wavenum'nsocoumm:w`wavenum' missings in r's neighborhood social cohesion summary mean score"

gen s`wavenum'nsocosumm =.
spouse r`wavenum'nsocosumm, result(s`wavenum'nsocosumm) wave(`wavenum')
label variable s`wavenum'nsocosumm "s`wavenum'nsocosumm:w`wavenum' missings in s's neighborhood social cohesion summary mean score"

egen r`wavenum'nsocosum =rowmean(r`wavenum'belong r`wavenum'trust r`wavenum'unfrien r`wavenum'hlpntr) if inw`wavenum' == 1
replace r`wavenum'nsocosum  = .m if r`wavenum'nsocosumm ==4 & inw`wavenum' == 1
replace r`wavenum'nsocosum  = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
label variable r`wavenum'nsocosum "r`wavenum'nsocosum:w`wavenum' r's neighborhood social cohesion summary mean score"

gen s`wavenum'nsocosum =.
spouse r`wavenum'nsocosum, result(s`wavenum'nsocosum) wave(`wavenum')
label variable s`wavenum'nsocosum "s`wavenum'nsocosum:w`wavenum' s's neighborhood social cohesion summary mean score"

*************************
******Spouse support***
***understand the way you feel
gen r`wavenum'sustdfe = . 
replace r`wavenum'sustdfe = .m if (outscw1 == 2 | inlist(scptra,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .n if  scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sustdfe = scptra if inrange(scptra,1,4)

label variable r`wavenum'sustdfe "r`wavenum'sustdfe:w`wavenum' r thinks spouse understands the way he/she feels" 
label value r`wavenum'sustdfe attns

*wave 1 understand the way you feel
gen s`wavenum'sustdfe =.
spouse r`wavenum'sustdfe, result(s`wavenum'sustdfe) wave(`wavenum')
label variable s`wavenum'sustdfe "s`wavenum'sustdfe:w`wavenum' s thinks spouse understands the way he/she feels"
label value s`wavenum'sustdfe attns

***rely on serious problem
gen r`wavenum'srely = . 
replace r`wavenum'srely = .m if (outscw1 == 2 | inlist(scptrb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'srely = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'srely = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'srely = scptrb if inrange(scptrb,1,4)

label variable r`wavenum'srely "r`wavenum'srely:w`wavenum' r can rely on spouse for a serious problem" 
label value r`wavenum'srely attns

*wave 1 rely on serious problem
gen s`wavenum'srely =.
spouse r`wavenum'srely, result(s`wavenum'srely) wave(`wavenum')
label variable s`wavenum'srely "s`wavenum'srely:w`wavenum' s can rely on spouse for a serious problem"
label value s`wavenum'srely attns

***open up when need to talk about worries
gen r`wavenum'sopenup = . 
replace r`wavenum'sopenup = .m if (outscw1 == 2 | inlist(scptrc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sopenup = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sopenup = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sopenup = scptrc if inrange(scptrc,1,4)

label variable r`wavenum'sopenup "r`wavenum'sopenup:w`wavenum' r can open up their worries to spouse" 
label value r`wavenum'sopenup attns

*wave 1 open up when need tp talk about worries
gen s`wavenum'sopenup =.
spouse r`wavenum'sopenup, result(s`wavenum'sopenup) wave(`wavenum')
label variable s`wavenum'sopenup "s`wavenum'sopenup:w`wavenum' s can open up their worries to spouse"
label value s`wavenum'sopenup attns

****Criticize  by spouse
gen r`wavenum'scritze = . 
replace r`wavenum'scritze = .m if (outscw1 == 2 | inlist(scptrd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'scritze = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'scritze = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'scritze = scptrd if inrange(scptrd,1,4)

label variable r`wavenum'scritze "r`wavenum'scritze:w`wavenum' how much spouse criticizes r" 
label value r`wavenum'scritze attns

*wave 1 Criticize  by spouse
gen s`wavenum'scritze =.
spouse r`wavenum'scritze, result(s`wavenum'scritze) wave(`wavenum')
label variable s`wavenum'scritze "s`wavenum'scritze:w`wavenum' how much spouse criticizes s"
label value s`wavenum'scritze attns

*****let down when counting on them
gen r`wavenum'sletdow = . 
replace r`wavenum'sletdow = .m if (outscw1 == 2 | inlist(scptre,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sletdow = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sletdow = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sletdow = scptre if inrange(scptre,1,4)

label variable r`wavenum'sletdow "r`wavenum'sletdow:w`wavenum' spouse let r down when counting on him/her" 
label value r`wavenum'sletdow attns

*wave 1 let down when counting on them
gen s`wavenum'sletdow =.
spouse r`wavenum'sletdow, result(s`wavenum'sletdow) wave(`wavenum')
label variable s`wavenum'sletdow "s`wavenum'sletdow:w`wavenum' spouse let s down when counting on him/her"
label value s`wavenum'sletdow attns

*****Get on nerves
gen r`wavenum'sgetnev = . 
replace r`wavenum'sgetnev = .m if (outscw1 == 2 | inlist(scptrf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sgetnev = scptrf if inrange(scptrf,1,4)

label variable r`wavenum'sgetnev "r`wavenum'sgetnev:w`wavenum' spouse gets on r's nerve" 
label value r`wavenum'sgetnev attns

*wave 1 get on nerves
gen s`wavenum'sgetnev =.
spouse r`wavenum'sgetnev, result(s`wavenum'sgetnev) wave(`wavenum')
label variable s`wavenum'sgetnev "s`wavenum'sgetnev:w`wavenum' spouse gets on s's nerve"
label value s`wavenum'sgetnev attns


****spouse support summary****
recode r`wavenum'scritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'scritze)	
recode r`wavenum'sletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sletdow)	
recode r`wavenum'sgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sgetnev)	

egen r`wavenum'ssupport6m =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                           if inw`wavenum' == 1
label variable  r`wavenum'ssupport6m "r`wavenum'ssupport6m:w`wavenum' missings in r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6m=.
spouse r`wavenum'ssupport6m, result(s`wavenum'ssupport6m) wave(`wavenum')  
label variable s`wavenum'ssupport6m "s`wavenum'ssupport6m:w`wavenum' missings in s's lack of spouse support 6-item score"

egen r`wavenum'ssupport6 =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'ssupport6  = .m if r`wavenum'ssupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .n if scptr == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport6)

label variable r`wavenum'ssupport6 "r`wavenum'ssupport6:w`wavenum' r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6 =.
spouse r`wavenum'ssupport6, result(s`wavenum'ssupport6) wave(`wavenum')
label variable s`wavenum'ssupport6 "s`wavenum'ssupport6:w`wavenum' s's lack of spouse support 6-item score"

drop xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev

******Child support***
***understand the way you feel
gen r`wavenum'kustdfe = . 
replace r`wavenum'kustdfe = .m if (outscw1 == 2 | inlist(scchda,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kustdfe = scchda if inrange(scchda,1,4)

label variable r`wavenum'kustdfe "r`wavenum'kustdfe:w`wavenum' r thinks children understand the way he/she feels" 
label value r`wavenum'kustdfe attnk

*wave 1 understand the way you feel
gen s`wavenum'kustdfe =.
spouse r`wavenum'kustdfe, result(s`wavenum'kustdfe) wave(`wavenum')
label variable s`wavenum'kustdfe "s`wavenum'kustdfe:w`wavenum' s thinks children understand the way he/she feels"
label value s`wavenum'kustdfe attnk

***rely on serious problem
gen r`wavenum'krely = . 
replace r`wavenum'krely = .m if (outscw1 == 2 | inlist(scchdb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'krely = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'krely = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'krely = scchdb if inrange(scchdb,1,4)

label variable r`wavenum'krely "r`wavenum'krely:w`wavenum' r can rely on children for a serious problem" 
label value r`wavenum'krely attnk

*wave 1 rely on serious problem
gen s`wavenum'krely =.
spouse r`wavenum'krely, result(s`wavenum'krely) wave(`wavenum')
label variable s`wavenum'krely "s`wavenum'krely:w`wavenum' s can rely on children for a serious problem"
label value s`wavenum'krely attnk

***open up when need tp talk about worries
gen r`wavenum'kopenup = . 
replace r`wavenum'kopenup = .m if (outscw1 == 2 | inlist(scchdc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kopenup = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kopenup = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kopenup = scchdc if inrange(scchdc,1,4)

label variable r`wavenum'kopenup "r`wavenum'kopenup:w`wavenum' r can open up their worries to children" 
label value r`wavenum'kopenup attnk

*wave 1 open up when need tp talk about worries
gen s`wavenum'kopenup =.
spouse r`wavenum'kopenup, result(s`wavenum'kopenup) wave(`wavenum')
label variable s`wavenum'kopenup "s`wavenum'kopenup:w`wavenum' s can open up their worries to children"
label value s`wavenum'kopenup attnk

****Criticize by children
gen r`wavenum'kcritze = . 
replace r`wavenum'kcritze = .m if (outscw1 == 2 | inlist(scchdd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kcritze = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kcritze = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kcritze = scchdd if inrange(scchdd,1,4)

label variable r`wavenum'kcritze "r`wavenum'kcritze:w`wavenum' how much children criticize r" 
label value r`wavenum'kcritze attnk

*wave 1 Criticize by children
gen s`wavenum'kcritze =.
spouse r`wavenum'kcritze, result(s`wavenum'kcritze) wave(`wavenum')
label variable s`wavenum'kcritze "s`wavenum'kcritze:w`wavenum' how much children criticize s"
label value s`wavenum'kcritze attnk

*****let down when counting on them
gen r`wavenum'kletdow = . 
replace r`wavenum'kletdow = .m if (outscw1 == 2 | inlist(scchde,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kletdow = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kletdow = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kletdow = scchde if inrange(scchde,1,4)

label variable r`wavenum'kletdow "r`wavenum'kletdow:w`wavenum' children let r down when counting on them" 
label value r`wavenum'kletdow attnk

*wave 1 let down when counting on them
gen s`wavenum'kletdow =.
spouse r`wavenum'kletdow, result(s`wavenum'kletdow) wave(`wavenum')
label variable s`wavenum'kletdow "s`wavenum'kletdow:w`wavenum' children let s down when counting on them"
label value s`wavenum'kletdow attnk

*****Get on nerves
gen r`wavenum'kgetnev = . 
replace r`wavenum'kgetnev = .m if (outscw1 == 2 | inlist(scchdf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kgetnev = scchdf if inrange(scchdf,1,4)

label variable r`wavenum'kgetnev "r`wavenum'kgetnev:w`wavenum' children get on r's nerve" 
label value r`wavenum'kgetnev attnk

*wave 1 get on nerves
gen s`wavenum'kgetnev =.
spouse r`wavenum'kgetnev, result(s`wavenum'kgetnev) wave(`wavenum')
label variable s`wavenum'kgetnev "s`wavenum'kgetnev:w`wavenum' children get on s's nerve"
label value s`wavenum'kgetnev attnk

****Children support summary****
recode r`wavenum'kcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kcritze)	
recode r`wavenum'kletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kletdow)	
recode r`wavenum'kgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kgetnev)	

egen r`wavenum'ksupport6m =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev)  ///
                           if inw`wavenum' == 1
label variable r`wavenum'ksupport6m "r`wavenum'ksupport6m:w`wavenum' missings in r's lack of children support 6-item score"

gen s`wavenum'ksupport6m=.
spouse r`wavenum'ksupport6m, result(s`wavenum'ksupport6m) wave(`wavenum')  
label variable s`wavenum'ksupport6m "s`wavenum'ksupport6m:w`wavenum' missings in s's lack of children support 6-item score"

egen r`wavenum'ksupport6 =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev) ///
                           if inw`wavenum' == 1
replace r`wavenum'ksupport6  = .m if r`wavenum'ksupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport6)

label variable r`wavenum'ksupport6 "r`wavenum'ksupport6:w`wavenum' r's lack of children support 6-item score"

gen s`wavenum'ksupport6 =.
spouse r`wavenum'ksupport6, result(s`wavenum'ksupport6) wave(`wavenum')
label variable s`wavenum'ksupport6 "s`wavenum'ksupport6:w`wavenum' s's lack of children support 6-item score"

drop xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev

******other family members support***
***understand the way you feel
gen r`wavenum'oustdfe = . 
replace r`wavenum'oustdfe = .m if (outscw1 == 2 | inlist(scfama,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oustdfe = scfama if inrange(scfama,1,4)

label variable r`wavenum'oustdfe "r`wavenum'oustdfe:w`wavenum' r thinks other family members understand the way he/she feels" 
label value r`wavenum'oustdfe attnof

*wave 1 understand the way you feel
gen s`wavenum'oustdfe =.
spouse r`wavenum'oustdfe, result(s`wavenum'oustdfe) wave(`wavenum')
label variable s`wavenum'oustdfe "s`wavenum'oustdfe:w`wavenum' s thinks other family members understand the way he/she feels"
label value s`wavenum'oustdfe attnof

***rely on serious problem
gen r`wavenum'orely = . 
replace r`wavenum'orely = .m if (outscw1 == 2 | inlist(scfamb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'orely = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'orely = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'orely = scfamb if inrange(scfamb,1,4)

label variable r`wavenum'orely "r`wavenum'orely:w`wavenum' r can rely on other family members for a serious problem" 

label value r`wavenum'orely attnof

*wave 1 rely on serious problem
gen s`wavenum'orely =.
spouse r`wavenum'orely, result(s`wavenum'orely) wave(`wavenum')
label variable s`wavenum'orely "s`wavenum'orely:w`wavenum' s can rely on other family members for a serious problem"
label value s`wavenum'orely attnof

***open up when need tp talk about worries
gen r`wavenum'oopenup = . 
replace r`wavenum'oopenup = .m if (outscw1 == 2 | inlist(scfamc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oopenup = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'oopenup = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oopenup = scfamc if inrange(scfamc,1,4)

label variable r`wavenum'oopenup "r`wavenum'oopenup:w`wavenum' r can open up their worries to other family members" 
label value r`wavenum'oopenup attnof

*wave 1 open up when need tp talk about worries
gen s`wavenum'oopenup =.
spouse r`wavenum'oopenup, result(s`wavenum'oopenup) wave(`wavenum')
label variable s`wavenum'oopenup "s`wavenum'oopenup:w`wavenum' s can open up their worries to other family members"
label value s`wavenum'oopenup attnof

****Criticize by other family members
gen r`wavenum'ocritze = . 
replace r`wavenum'ocritze = .m if (outscw1 == 2 | inlist(scfamd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'ocritze = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ocritze = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ocritze = scfamd if inrange(scfamd,1,4)

label variable r`wavenum'ocritze "r`wavenum'ocritze:w`wavenum' how much other family members criticize r" 
label value r`wavenum'ocritze attnof

*wave 1 Criticize by other family members
gen s`wavenum'ocritze =.
spouse r`wavenum'ocritze, result(s`wavenum'ocritze) wave(`wavenum')
label variable s`wavenum'ocritze "s`wavenum'ocritze:w`wavenum' how much other family members criticize s"
label value s`wavenum'ocritze attnof

*****let down when counting on them
gen r`wavenum'oletdow = . 
replace r`wavenum'oletdow = .m if (outscw1 == 2 | inlist(scfame,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oletdow = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'oletdow = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oletdow = scfame if inrange(scfame,1,4)

label variable r`wavenum'oletdow "r`wavenum'oletdow:w`wavenum' other family members let r down when counting on them" 
label value r`wavenum'oletdow attnof

*wave 1 let down when counting on them
gen s`wavenum'oletdow =.
spouse r`wavenum'oletdow, result(s`wavenum'oletdow) wave(`wavenum')
label variable s`wavenum'oletdow "s`wavenum'oletdow:w`wavenum' other family members let s down when counting on them"
label value s`wavenum'oletdow attnof

*****Get on nerves
gen r`wavenum'ogetnev = . 
replace r`wavenum'ogetnev = .m if (outscw1 == 2 | inlist(scfamf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ogetnev = scfamf if inrange(scfamf,1,4)

label variable r`wavenum'ogetnev "r`wavenum'ogetnev:w`wavenum' other family members get on r's nerve" 
label value r`wavenum'ogetnev attnof

*wave 1 get on nerves
gen s`wavenum'ogetnev =.
spouse r`wavenum'ogetnev, result(s`wavenum'ogetnev) wave(`wavenum')
label variable s`wavenum'ogetnev "s`wavenum'ogetnev:w`wavenum' other family members get on s's nerve"
label value s`wavenum'ogetnev attnof

****Other family members support summary****
****Other family members support summary****
recode r`wavenum'ocritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ocritze)	
recode r`wavenum'oletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'oletdow)	
recode r`wavenum'ogetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ogetnev)	

egen r`wavenum'osupport6m =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'osupport6m "r`wavenum'osupport6m:w`wavenum' missings in r's lack of other family members support 6-item score"

gen s`wavenum'osupport6m=.
spouse r`wavenum'osupport6m, result(s`wavenum'osupport6m) wave(`wavenum')  
label variable s`wavenum'osupport6m "s`wavenum'osupport6m:w`wavenum' missings in s's lack of other family members support 6-item score"

egen r`wavenum'osupport6 =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) if inw`wavenum' == 1

replace r`wavenum'osupport6  = .m if r`wavenum'osupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'osupport6  = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'osupport6  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport6)

label variable r`wavenum'osupport6 "r`wavenum'osupport6:w`wavenum' r's lack of other family members support 6-item score"

gen s`wavenum'osupport6 =.
spouse r`wavenum'osupport6, result(s`wavenum'osupport6) wave(`wavenum')
label variable s`wavenum'osupport6 "s`wavenum'osupport6:w`wavenum' s's lack of other family members support 6-item score"

drop xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev

******Friend support***
***understand the way you feel
gen r`wavenum'fustdfe = . 
replace r`wavenum'fustdfe = .m if (outscw1 == 2 | inlist(scfrda,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fustdfe = scfrda if inrange(scfrda,1,4)

label variable r`wavenum'fustdfe "r`wavenum'fustdfe:w`wavenum' r thinks friends understand the way he/she feels" 
label value r`wavenum'fustdfe attnf

*wave 1 understand the way you feel
gen s`wavenum'fustdfe =.
spouse r`wavenum'fustdfe, result(s`wavenum'fustdfe) wave(`wavenum')
label variable s`wavenum'fustdfe "s`wavenum'fustdfe:w`wavenum' s thinks friends understand the way he/she feels"
label value s`wavenum'fustdfe attnf

***rely on serious problem
gen r`wavenum'frely = . 
replace r`wavenum'frely = .m if (outscw1 == 2 | inlist(scfrdb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'frely = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'frely = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'frely = scfrdb if inrange(scfrdb,1,4)

label variable r`wavenum'frely "r`wavenum'frely:w`wavenum' r can rely on friends for a serious problem" 
label value r`wavenum'frely attnf

*wave 1 rely on serious problem
gen s`wavenum'frely =.
spouse r`wavenum'frely, result(s`wavenum'frely) wave(`wavenum')
label variable s`wavenum'frely "s`wavenum'frely:w`wavenum' s can rely on friends for a serious problem"
label value s`wavenum'frely attnf

***open up when need tp talk about worries
gen r`wavenum'fopenup = . 
replace r`wavenum'fopenup = .m if (outscw1 == 2 | inlist(scfrdc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fopenup = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fopenup = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fopenup = scfrdc if inrange(scfrdc,1,4)

label variable r`wavenum'fopenup "r`wavenum'fopenup:w`wavenum' r can open up their worries to friends" 
label value r`wavenum'fopenup attnf

*wave 1 open up when need tp talk about worries
gen s`wavenum'fopenup =.
spouse r`wavenum'fopenup, result(s`wavenum'fopenup) wave(`wavenum')
label variable s`wavenum'fopenup "s`wavenum'fopenup:w`wavenum' s can open up their worries to friends"
label value s`wavenum'fopenup attnf

****Criticize by friend
gen r`wavenum'fcritze = . 
replace r`wavenum'fcritze = .m if (outscw1 == 2 | inlist(scfrdd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fcritze = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fcritze = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fcritze = scfrdd if inrange(scfrdd,1,4)

label variable r`wavenum'fcritze "r`wavenum'fcritze:w`wavenum' how much friends criticize r" 
label value r`wavenum'fcritze attnf

*wave 1 Criticize by friend
gen s`wavenum'fcritze =.
spouse r`wavenum'fcritze, result(s`wavenum'fcritze) wave(`wavenum')
label variable s`wavenum'fcritze "s`wavenum'fcritze:w`wavenum' how much friends criticize s"
label value s`wavenum'fcritze attnf

*****let down when counting on them
gen r`wavenum'fletdow = . 
replace r`wavenum'fletdow = .m if (outscw1 == 2 | inlist(scfrde,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fletdow = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fletdow = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fletdow = scfrde if inrange(scfrde,1,4)

label variable r`wavenum'fletdow "r`wavenum'fletdow:w`wavenum' friends let r down when counting on them" 
label value r`wavenum'fletdow attnf

*wave 1 let down when counting on them
gen s`wavenum'fletdow =.
spouse r`wavenum'fletdow, result(s`wavenum'fletdow) wave(`wavenum')
label variable s`wavenum'fletdow "s`wavenum'fletdow:w`wavenum' friends let s down when counting on them"
label value s`wavenum'fletdow attnf

*****Get on nerves
gen r`wavenum'fgetnev = . 
replace r`wavenum'fgetnev = .m if (outscw1 == 2 | inlist(scfrdf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fgetnev = scfrdf if inrange(scfrdf,1,4)

label variable r`wavenum'fgetnev "r`wavenum'fgetnev:w`wavenum' friends gets on r's nerve" 
label value r`wavenum'fgetnev attnf

*wave 1 get on nerves
gen s`wavenum'fgetnev =.
spouse r`wavenum'fgetnev, result(s`wavenum'fgetnev) wave(`wavenum')
label variable s`wavenum'fgetnev "s`wavenum'fgetnev:w`wavenum' friends gets on s's nerve"
label value s`wavenum'fgetnev attnf

****Friends support summary****
recode r`wavenum'fcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fcritze)	
recode r`wavenum'fletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fletdow)	
recode r`wavenum'fgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fgetnev)	

egen r`wavenum'fsupport6m =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'fsupport6m "r`wavenum'fsupport6m:w`wavenum' missings in r's lack of friends support 6-item score"

gen s`wavenum'fsupport6m=.
spouse r`wavenum'fsupport6m, result(s`wavenum'fsupport6m) wave(`wavenum')  
label variable s`wavenum'fsupport6m "s`wavenum'fsupport6m:w`wavenum' missings in s's lack of friends support 6-item score"

egen r`wavenum'fsupport6 =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'fsupport6  = .m if r`wavenum'fsupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .c if inlist(outscw1,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport6)

label variable r`wavenum'fsupport6 "r`wavenum'fsupport6:w`wavenum' r's lack of friends support 6-item score"

gen s`wavenum'fsupport6 =.
spouse r`wavenum'fsupport6, result(s`wavenum'fsupport6) wave(`wavenum')
label variable s`wavenum'fsupport6 "s`wavenum'fsupport6:w`wavenum' s's lack of friends support 6-item score"

drop xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev


**drop ELSA wave core file raw variables***
drop `stre_w1_core'
*
***drop rand ELSA variables***
drop `stre_w1_index'


*****************************************************************************************

pause on
*set wave number
local wavenum =2
local pre_wavenum = `wavenum' -1

*file core**
local stre_w2_core scempl scworka scworkb scworkc scworkd scworke scworkf scworkg scworkh scworki /// 
                   scworkj scworkk scworkl scfeela scfeelb scfeelc scfeeld scptra scptrb scptrc scptrd scptre scptrf ///
                   scptr scchd scchda scchdb scchdc scchdd scchde scchdf scfam scfama scfamb scfamc scfamd scfame scfamf ///
                   scfrd scfrda scfrdb scfrdc scfrdd scfrde scfrdf
                    
merge 1:1 idauniq using "$wave_2_core", keepusing(`stre_w2_core') nogen

*file index
local stre_w`wavenum'_index outscw2

merge 1:1 idauniq using "$index", keepusing(`stre_w2_index') nogen


***Satisfied with the job***
gen r`wavenum'satjob = . 
replace r`wavenum'satjob = .m if (outscw2 == 2 | inlist(scworka,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'satjob = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'satjob = .w if scempl == 2
replace r`wavenum'satjob = 1 if scworka == 4 
replace r`wavenum'satjob = 2 if scworka == 3
replace r`wavenum'satjob = 3 if scworka == 2
replace r`wavenum'satjob = 4 if scworka == 1

label variable r`wavenum'satjob "r`wavenum'satjob:w`wavenum' whether r is satisfied with job"
label values r`wavenum'satjob job

*wave 2 spouse satisfied with the job
gen s`wavenum'satjob =.
spouse r`wavenum'satjob, result(s`wavenum'satjob) wave(`wavenum')
label variable s`wavenum'satjob "s`wavenum'satjob:w`wavenum' whether s is satisfied with job"
label value s`wavenum'satjob job

***physically demanding***
gen r`wavenum'demand = . 
replace r`wavenum'demand = .m if (outscw2 == 2 | inlist(scworkb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'demand = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'demand = .w if scempl == 2
replace r`wavenum'demand = 1 if scworkb == 4 
replace r`wavenum'demand = 2 if scworkb == 3
replace r`wavenum'demand = 3 if scworkb == 2
replace r`wavenum'demand = 4 if scworkb == 1

label variable r`wavenum'demand "r`wavenum'demand:w`wavenum' whether r's job is physically demanding"
label values r`wavenum'demand job

*wave 2 spouse job demanding
gen s`wavenum'demand =.
spouse r`wavenum'demand, result(s`wavenum'demand) wave(`wavenum')
label variable s`wavenum'demand "s`wavenum'demand:w`wavenum' whether s's job is physically demanding"
label value s`wavenum'demand job

***Deserve recognition***
gen r`wavenum'deserve = . 
replace r`wavenum'deserve = .m if  (outscw2 == 2 | inlist(scworkc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'deserve = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'deserve = .w if scempl == 2
replace r`wavenum'deserve = 1 if scworkc == 4 
replace r`wavenum'deserve = 2 if scworkc == 3
replace r`wavenum'deserve = 3 if scworkc == 2
replace r`wavenum'deserve = 4 if scworkc == 1

label variable r`wavenum'deserve "r`wavenum'deserve:w`wavenum' whether r received deserved recognition from work"
label values r`wavenum'deserve job

*wave 2 spouse deserve recognition
gen s`wavenum'deserve =.
spouse r`wavenum'deserve, result(s`wavenum'deserve) wave(`wavenum')
label variable s`wavenum'deserve "s`wavenum'deserve:w`wavenum' whether s received deserved recognition from work"
label value s`wavenum'deserve job

***Salary is adequate***
gen r`wavenum'salary = . 
replace r`wavenum'salary = .m if  (outscw2 == 2 | inlist(scworkd,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'salary = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'salary = .w if scempl == 2
replace r`wavenum'salary = 1 if scworkd == 4 
replace r`wavenum'salary = 2 if scworkd == 3
replace r`wavenum'salary = 3 if scworkd == 2
replace r`wavenum'salary = 4 if scworkd == 1

label variable r`wavenum'salary "r`wavenum'salary:w`wavenum' whether r's salary is adequate"
label values r`wavenum'salary job

*wave 2 spouse salary is adequate
gen s`wavenum'salary =.
spouse r`wavenum'salary, result(s`wavenum'salary) wave(`wavenum')
label variable s`wavenum'salary "s`wavenum'salary:w`wavenum' whether s's salary is adequate"
label value s`wavenum'salary job

***Job promotion is poor***
gen r`wavenum'promot = . 
replace r`wavenum'promot = .m if  (outscw2 == 2 | inlist(scworke,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'promot = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'promot = .w if scempl == 2
replace r`wavenum'promot = 1 if scworke == 4 
replace r`wavenum'promot = 2 if scworke == 3
replace r`wavenum'promot = 3 if scworke == 2
replace r`wavenum'promot = 4 if scworke == 1

label variable r`wavenum'promot "r`wavenum'promot:w`wavenum' whether r job promotion prospects are poor"
label values r`wavenum'promot job

*wave 2 spouse job promotion is poor
gen s`wavenum'promot =.
spouse r`wavenum'promot, result(s`wavenum'promot) wave(`wavenum')
label variable s`wavenum'promot "s`wavenum'promot:w`wavenum' whether s job promotion prospects are poor"
label value s`wavenum'promot job

***Job security***
gen r`wavenum'secure = . 
replace r`wavenum'secure = .m if  (outscw2 == 2 | inlist(scworkf,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'secure = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'secure = .w if scempl == 2
replace r`wavenum'secure = 1 if scworkf == 4 
replace r`wavenum'secure = 2 if scworkf == 3
replace r`wavenum'secure = 3 if scworkf == 2
replace r`wavenum'secure = 4 if scworkf == 1

label variable r`wavenum'secure "r`wavenum'secure:w`wavenum' whether r job security is poor"
label values r`wavenum'secure job

*wave 2 spouse job security
gen s`wavenum'secure =.
spouse r`wavenum'secure, result(s`wavenum'secure) wave(`wavenum')
label variable s`wavenum'secure "s`wavenum'secure:w`wavenum' whether s job security is poor"
label value s`wavenum'secure job

***Constant time pressure due to a heavy workload***
gen r`wavenum'timepre = . 
replace r`wavenum'timepre = .m if (outscw2 == 2 | inlist(scworkg,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'timepre = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'timepre = .w if scempl == 2
replace r`wavenum'timepre = 1 if scworkg == 4 
replace r`wavenum'timepre = 2 if scworkg == 3
replace r`wavenum'timepre = 3 if scworkg == 2
replace r`wavenum'timepre = 4 if scworkg == 1

label variable r`wavenum'timepre "r`wavenum'timepre:w`wavenum' whether r is under constant time pressure due to a heavy workload"
label values r`wavenum'timepre job

*wave 2 spouse constant time pressure due to heavy workload
gen s`wavenum'timepre =.
spouse r`wavenum'timepre, result(s`wavenum'timepre) wave(`wavenum')
label variable s`wavenum'timepre "s`wavenum'timepre:w`wavenum' whether s is under constant time pressure due to a heavy workload"
label value s`wavenum'timepre job

***has the opportunity to develop new skills*
gen r`wavenum'ltlfree = . 
replace r`wavenum'ltlfree = .m if (outscw2 == 2 | inlist(scworkh,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .w if scempl == 2
replace r`wavenum'ltlfree = 1 if scworkh == 4 
replace r`wavenum'ltlfree = 2 if scworkh == 3
replace r`wavenum'ltlfree = 3 if scworkh == 2
replace r`wavenum'ltlfree = 4 if scworkh == 1

label variable r`wavenum'ltlfree "r`wavenum'ltlfree:w`wavenum' whether r has very little freedom to do work"
label values r`wavenum'ltlfree job

*wave 2 spouse has the opportunity to develop new skills
gen s`wavenum'ltlfree =.
spouse r`wavenum'ltlfree, result(s`wavenum'ltlfree) wave(`wavenum')
label variable s`wavenum'ltlfree "s`wavenum'ltlfree:w`wavenum' whether s has very little freedom to do work"
label value s`wavenum'ltlfree job

***develop new skills***
gen r`wavenum'nskills = . 
replace r`wavenum'nskills = .m if (outscw2 == 2 | inlist(scworki,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'nskills = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'nskills = .w if scempl == 2
replace r`wavenum'nskills = 1 if scworki == 4 
replace r`wavenum'nskills = 2 if scworki == 3
replace r`wavenum'nskills = 3 if scworki == 2
replace r`wavenum'nskills = 4 if scworki == 1

label variable r`wavenum'nskills "r`wavenum'nskills:w`wavenum' whether r has the opportunity to develop new skills"
label values r`wavenum'nskills job

*wave 2 spouse develop new skills
gen s`wavenum'nskills =.
spouse r`wavenum'nskills, result(s`wavenum'nskills) wave(`wavenum')
label variable s`wavenum'nskills "s`wavenum'nskills:w`wavenum' whether s has the opportunity to develop new skills"
label value s`wavenum'nskills job

***support in difficult situation***
gen r`wavenum'support = . 
replace r`wavenum'support = .m if (outscw2 == 2 | inlist(scworkj,-1,-2,-9) ) & inw`wavenum' == 1
replace r`wavenum'support = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'support = .w if scempl == 2
replace r`wavenum'support = 1 if scworkj == 4 
replace r`wavenum'support = 2 if scworkj == 3
replace r`wavenum'support = 3 if scworkj == 2
replace r`wavenum'support = 4 if scworkj == 1

label variable r`wavenum'support "r`wavenum'support:w`wavenum' whether r received adequate support in difficult situations"
label values r`wavenum'support job

*wave 2 spouse support in difficult situation
gen s`wavenum'support =.
spouse r`wavenum'support, result(s`wavenum'support) wave(`wavenum')
label variable s`wavenum'support "s`wavenum'support:w`wavenum' whether s received adequate support in difficult situations"
label value s`wavenum'support job

***Feel control over what happens in most situations***
gen r`wavenum'control = . 
replace r`wavenum'control = .m if (outscw2 == 2 | inlist(scworkk,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'control = .c if inlist(outscw2,-1,3)
replace r`wavenum'control = .w if scempl == 2
replace r`wavenum'control = 1 if scworkk == 4 
replace r`wavenum'control = 2 if scworkk == 3
replace r`wavenum'control = 3 if scworkk == 2
replace r`wavenum'control = 4 if scworkk == 1

label variable r`wavenum'control "r`wavenum'control:w`wavenum' whether r feels control over what happens in most situations"
label values r`wavenum'control job

*wave 2 spouse feel control over what happens in most situations
gen s`wavenum'control =.
spouse r`wavenum'control, result(s`wavenum'control) wave(`wavenum')
label variable s`wavenum'control "s`wavenum'control:w`wavenum' whether s feels control over what happens in most situations"
label value s`wavenum'control job

***Have to work very fast***
gen r`wavenum'workfast = . 
replace r`wavenum'workfast = .m if (outscw2 == 2 | inlist(scworkl,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'workfast = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'workfast = .w if scempl == 2
replace r`wavenum'workfast = 1 if scworkl == 4 
replace r`wavenum'workfast = 2 if scworkl == 3
replace r`wavenum'workfast = 3 if scworkl == 2
replace r`wavenum'workfast = 4 if scworkl == 1

label variable r`wavenum'workfast "r`wavenum'workfast:w`wavenum' whether r has to work very fast"
label values r`wavenum'workfast job

*wave 2 spouse has to work very fast
gen s`wavenum'workfast =.
spouse r`wavenum'workfast, result(s`wavenum'workfast) wave(`wavenum')
label variable s`wavenum'workfast "s`wavenum'workfast:w`wavenum' whether s has to work very fast"
label value s`wavenum'workfast job


***Job stress summary***
recode r`wavenum'satjob (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'satjob)
recode r`wavenum'deserve  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'deserve)	
recode r`wavenum'salary (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'salary)	
recode r`wavenum'nskills  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'nskills)	
recode r`wavenum'support  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'support)	
recode r`wavenum'control (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'control)	


egen r`wavenum'jobsumm =rowmiss(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) if inw`wavenum' == 1
label variable r`wavenum'jobsumm "r`wavenum'jobsumm:w`wavenum' missings in r's job stress summary mean score"

gen s`wavenum'jobsumm =.
spouse r`wavenum'jobsumm, result(s`wavenum'jobsumm) wave(`wavenum')
label variable s`wavenum'jobsumm "s`wavenum'jobsumm:w`wavenum' missings in s's job stress summary mean score"

egen r`wavenum'jobsum =rowmean(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) 
replace r`wavenum'jobsum  = .m if r`wavenum'jobsumm ==6 & inw`wavenum' == 1
replace r`wavenum'jobsum  = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1 
replace r`wavenum'jobsum  = .w if scempl == 2
label variable r`wavenum'jobsum "r`wavenum'jobsum:w`wavenum' r's job stress summary mean score"

*wave `wavenum' spouse job stress summary
gen s`wavenum'jobsum =.
spouse r`wavenum'jobsum, result(s`wavenum'jobsum) wave(`wavenum')
label variable s`wavenum'jobsum "s`wavenum'jobsum:w`wavenum' s's job stress summary mean score"

drop xr`wavenum'satjob xr`wavenum'deserve xr`wavenum'salary xr`wavenum'nskills xr`wavenum'support xr`wavenum'control

***feel lack of companionship***
gen r`wavenum'complac = . 
replace r`wavenum'complac = .m if (outscw2 == 2 | inlist(scfeela,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'complac = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'complac = scfeela if inrange(scfeela,1,3)

label variable r`wavenum'complac "r`wavenum'complac:w`wavenum' whether r often feels lack of companionship"
label value r`wavenum'complac tim

*wave 2 feel lack of companionship
gen s`wavenum'complac =.
spouse r`wavenum'complac, result(s`wavenum'complac) wave(`wavenum')
label variable s`wavenum'complac "s`wavenum'complac:w`wavenum' whether s often feels lack of companionship"
label value s`wavenum'complac tim

***feel left out***
gen r`wavenum'leftout = . 
replace r`wavenum'leftout = .m if (outscw2 == 2 | inlist(scfeelb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'leftout = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'leftout = scfeelb if inrange(scfeelb,1,3)

label variable r`wavenum'leftout "r`wavenum'leftout:w`wavenum' whether r often feels left out"
label value r`wavenum'leftout tim

*wave 2 feel left out
gen s`wavenum'leftout =.
spouse r`wavenum'leftout, result(s`wavenum'leftout) wave(`wavenum')
label variable s`wavenum'leftout "s`wavenum'leftout:w`wavenum' whether s often feels left out"
label value s`wavenum'leftout tim


***feel isolated from others***
gen r`wavenum'isolate = . 
replace r`wavenum'isolate = .m if (outscw2 == 2 | inlist(scfeelc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'isolate = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'isolate = scfeelc if inrange(scfeelc,1,3)

label variable r`wavenum'isolate "r`wavenum'isolate:w`wavenum' whether r often feels isolated from others" 
label value r`wavenum'isolate tim

*wave 2 feel isolated from others
gen s`wavenum'isolate =.
spouse r`wavenum'isolate, result(s`wavenum'isolate) wave(`wavenum')
label variable s`wavenum'isolate "s`wavenum'isolate:w`wavenum' whether s often feels isolated from others"
label value s`wavenum'isolate tim


***feel in tune with the people around***
gen r`wavenum'intune = . 
replace r`wavenum'intune = .m if (outscw2 == 2 | inlist(scfeeld,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'intune = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'intune = scfeeld if inrange(scfeeld,1,3)

label variable r`wavenum'intune "r`wavenum'intune:w`wavenum' whether r often feels not in tune with the people around" 
label value r`wavenum'intune tim

*wave 2 feel in tune with the people around
gen s`wavenum'intune =.
spouse r`wavenum'intune, result(s`wavenum'intune) wave(`wavenum')
label variable s`wavenum'intune "s`wavenum'intune:w`wavenum' whether s often feels not in tune with the people around"
label value s`wavenum'intune tim

****summary score 4 components
recode r`wavenum'intune (1=3) (2=2) (3=1), gen(xr`wavenum'intune) 
egen r`wavenum'lnlysm =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate r`wavenum'intune) if inw`wavenum' == 1
label variable r`wavenum'lnlysm "r`wavenum'lnlysm:w`wavenum' missings in r's 4-item loneliness summary mean score"

gen s`wavenum'lnlysm =.
spouse r`wavenum'lnlysm, result(s`wavenum'lnlysm) wave(`wavenum')
label variable s`wavenum'lnlysm "s`wavenum'lnlysm:w`wavenum' missings in s's 4-item loneliness summary mean score"

egen r`wavenum'lnlys =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate xr`wavenum'intune) if inw`wavenum' == 1
replace r`wavenum'lnlys  = .m if r`wavenum'lnlysm == 4 & inw`wavenum' == 1
replace r`wavenum'lnlys  = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1

label variable r`wavenum'lnlys "r`wavenum'lnlys:w`wavenum' r's 4-item loneliness summary mean score"

gen s`wavenum'lnlys =.
spouse r`wavenum'lnlys, result(s`wavenum'lnlys) wave(`wavenum')
label variable s`wavenum'lnlys "s`wavenum'lnlys:w`wavenum' s's 4-item loneliness summary mean score"

****summary score 3 components
egen r`wavenum'lnlys3m =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
label variable r`wavenum'lnlys3m "r`wavenum'lnlys3m:w`wavenum' missings in r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3m =.
spouse r`wavenum'lnlys3m, result(s`wavenum'lnlys3m) wave(`wavenum')
label variable s`wavenum'lnlys3m "s`wavenum'lnlys3m:w`wavenum' missings in s's 3-item loneliness summary mean score"

egen r`wavenum'lnlys3 =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
replace r`wavenum'lnlys3  = .m if r`wavenum'complac == .m & r`wavenum'leftout == .m & r`wavenum'isolate == .m
replace r`wavenum'lnlys3  = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'lnlys3  = .r if r`wavenum'complac == .r & r`wavenum'leftout == .r & r`wavenum'isolate == .r  

label variable r`wavenum'lnlys3 "r`wavenum'lnlys3:w`wavenum' r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3 =.
spouse r`wavenum'lnlys3, result(s`wavenum'lnlys3) wave(`wavenum')
label variable s`wavenum'lnlys3 "s`wavenum'lnlys3:w`wavenum' s's 3-item loneliness summary mean score"

drop xr`wavenum'intune

*************************
******Spouse support***
***understand the way you feel
gen r`wavenum'sustdfe = . 
replace r`wavenum'sustdfe = .m if (outscw2 == 2 | inlist(scptra,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .n if  scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sustdfe = scptra if inrange(scptra,1,4)

label variable r`wavenum'sustdfe "r`wavenum'sustdfe:w`wavenum' r thinks spouse understands the way he/she feels" 
label value r`wavenum'sustdfe attns

*wave 2 understand the way you feel
gen s`wavenum'sustdfe =.
spouse r`wavenum'sustdfe, result(s`wavenum'sustdfe) wave(`wavenum')
label variable s`wavenum'sustdfe "s`wavenum'sustdfe:w`wavenum' s thinks spouse understands the way he/she feels"
label value s`wavenum'sustdfe attns

***rely on serious problem
gen r`wavenum'srely = . 
replace r`wavenum'srely = .m if (outscw2 == 2 | inlist(scptrb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'srely = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'srely = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'srely = scptrb if inrange(scptrb,1,4)

label variable r`wavenum'srely "r`wavenum'srely:w`wavenum' r can rely on spouse for a serious problem" 
label value r`wavenum'srely attns

*wave 2 rely on serious problem
gen s`wavenum'srely =.
spouse r`wavenum'srely, result(s`wavenum'srely) wave(`wavenum')
label variable s`wavenum'srely "s`wavenum'srely:w`wavenum' s can rely on spouse for a serious problem"
label value s`wavenum'srely attns

***open up when need to talk about worries
gen r`wavenum'sopenup = . 
replace r`wavenum'sopenup = .m if (outscw2 == 2 | inlist(scptrc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sopenup = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sopenup = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sopenup = scptrc if inrange(scptrc,1,4)

label variable r`wavenum'sopenup "r`wavenum'sopenup:w`wavenum' r can open up their worries to spouse" 
label value r`wavenum'sopenup attns

*wave 2 open up when need tp talk about worries
gen s`wavenum'sopenup =.
spouse r`wavenum'sopenup, result(s`wavenum'sopenup) wave(`wavenum')
label variable s`wavenum'sopenup "s`wavenum'sopenup:w`wavenum' s can open up their worries to spouse"
label value s`wavenum'sopenup attns

****Criticize  by spouse
gen r`wavenum'scritze = . 
replace r`wavenum'scritze = .m if (outscw2 == 2 | inlist(scptrd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'scritze = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'scritze = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'scritze = scptrd if inrange(scptrd,1,4)

label variable r`wavenum'scritze "r`wavenum'scritze:w`wavenum' how much spouse criticizes r" 
label value r`wavenum'scritze attns

*wave 2 Criticize  by spouse
gen s`wavenum'scritze =.
spouse r`wavenum'scritze, result(s`wavenum'scritze) wave(`wavenum')
label variable s`wavenum'scritze "s`wavenum'scritze:w`wavenum' how much spouse criticizes r"
label value s`wavenum'scritze attns

*****let down when counting on them
gen r`wavenum'sletdow = . 
replace r`wavenum'sletdow = .m if (outscw2 == 2 | inlist(scptre,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sletdow = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sletdow = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sletdow = scptre if inrange(scptre,1,4)

label variable r`wavenum'sletdow "r`wavenum'sletdow:w`wavenum' spouse let r down when counting on him/her" 
label value r`wavenum'sletdow attns

*wave 2 let down when counting on them
gen s`wavenum'sletdow =.
spouse r`wavenum'sletdow, result(s`wavenum'sletdow) wave(`wavenum')
label variable s`wavenum'sletdow "s`wavenum'sletdow:w`wavenum' spouse let s down when counting on him/her"
label value s`wavenum'sletdow attns

*****Get on nerves
gen r`wavenum'sgetnev = . 
replace r`wavenum'sgetnev = .m if (outscw2 == 2 | inlist(scptrf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sgetnev = scptrf if inrange(scptrf,1,4)

label variable r`wavenum'sgetnev "r`wavenum'sgetnev:w`wavenum' spouse gets on r's nerve" 
label value r`wavenum'sgetnev attns

*wave 2 get on nerves
gen s`wavenum'sgetnev =.
spouse r`wavenum'sgetnev, result(s`wavenum'sgetnev) wave(`wavenum')
label variable s`wavenum'sgetnev "s`wavenum'sgetnev:w`wavenum' spouse gets on s's nerve"
label value s`wavenum'sgetnev attns


****spouse support summary****
recode r`wavenum'scritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'scritze)	
recode r`wavenum'sletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sletdow)	
recode r`wavenum'sgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sgetnev)	

egen r`wavenum'ssupport6m =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                           if inw`wavenum' == 1
label variable  r`wavenum'ssupport6m "r`wavenum'ssupport6m:w`wavenum' missings in r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6m=.
spouse r`wavenum'ssupport6m, result(s`wavenum'ssupport6m) wave(`wavenum')  
label variable s`wavenum'ssupport6m "s`wavenum'ssupport6m:w`wavenum' missings in s's lack of spouse support 6-item score"

egen r`wavenum'ssupport6 =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'ssupport6  = .m if r`wavenum'ssupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1 
replace r`wavenum'ssupport6  = .n if scptr == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport6)

label variable r`wavenum'ssupport6 "r`wavenum'ssupport6:w`wavenum' r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6 =.
spouse r`wavenum'ssupport6, result(s`wavenum'ssupport6) wave(`wavenum')
label variable s`wavenum'ssupport6 "s`wavenum'ssupport6:w`wavenum' s's lack of spouse support 6-item score"

drop xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev

******Child support***
***understand the way you feel
gen r`wavenum'kustdfe = . 
replace r`wavenum'kustdfe = .m if (outscw2 == 2 | inlist(scchda,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kustdfe = scchda if inrange(scchda,1,4)

label variable r`wavenum'kustdfe "r`wavenum'kustdfe:w`wavenum' r thinks children understand the way he/she feels" 
label value r`wavenum'kustdfe attnk

*wave 2 understand the way you feel
gen s`wavenum'kustdfe =.
spouse r`wavenum'kustdfe, result(s`wavenum'kustdfe) wave(`wavenum')
label variable s`wavenum'kustdfe "s`wavenum'kustdfe:w`wavenum' s thinks children understand the way he/she feels"
label value s`wavenum'kustdfe attnk

***rely on serious problem
gen r`wavenum'krely = . 
replace r`wavenum'krely = .m if (outscw2 == 2 | inlist(scchdb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'krely = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'krely = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'krely = scchdb if inrange(scchdb,1,4)

label variable r`wavenum'krely "r`wavenum'krely:w`wavenum' r can rely on children for a serious problem" 
label value r`wavenum'krely attnk

*wave 2 rely on serious problem
gen s`wavenum'krely =.
spouse r`wavenum'krely, result(s`wavenum'krely) wave(`wavenum')
label variable s`wavenum'krely "s`wavenum'krely:w`wavenum' s can rely on children for a serious problem"
label value s`wavenum'krely attnk

***open up when need tp talk about worries
gen r`wavenum'kopenup = . 
replace r`wavenum'kopenup = .m if (outscw2 == 2 | inlist(scchdc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kopenup = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kopenup = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kopenup = scchdc if inrange(scchdc,1,4)

label variable r`wavenum'kopenup "r`wavenum'kopenup:w`wavenum' r can open up their worries to children" 
label value r`wavenum'kopenup attnk

*wave 2 open up when need tp talk about worries
gen s`wavenum'kopenup =.
spouse r`wavenum'kopenup, result(s`wavenum'kopenup) wave(`wavenum')
label variable s`wavenum'kopenup "s`wavenum'kopenup:w`wavenum' s can open up their worries to children"
label value s`wavenum'kopenup attnk

****Criticize by children
gen r`wavenum'kcritze = . 
replace r`wavenum'kcritze = .m if (outscw2 == 2 | inlist(scchdd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kcritze = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kcritze = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kcritze = scchdd if inrange(scchdd,1,4)

label variable r`wavenum'kcritze "r`wavenum'kcritze:w`wavenum' how much children criticize r" 
label value r`wavenum'kcritze attnk

*wave 2 Criticize by children
gen s`wavenum'kcritze =.
spouse r`wavenum'kcritze, result(s`wavenum'kcritze) wave(`wavenum')
label variable s`wavenum'kcritze "s`wavenum'kcritze:w`wavenum' how much children criticize s"
label value s`wavenum'kcritze attnk

*****let down when counting on them
gen r`wavenum'kletdow = . 
replace r`wavenum'kletdow = .m if (outscw2 == 2 | inlist(scchde,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kletdow = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kletdow = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kletdow = scchde if inrange(scchde,1,4)

label variable r`wavenum'kletdow "r`wavenum'kletdow:w`wavenum' children let r down when counting on them" 
label value r`wavenum'kletdow attnk

*wave 2 let down when counting on them
gen s`wavenum'kletdow =.
spouse r`wavenum'kletdow, result(s`wavenum'kletdow) wave(`wavenum')
label variable s`wavenum'kletdow "s`wavenum'kletdow:w`wavenum' children let s down when counting on them"
label value s`wavenum'kletdow attnk

*****Get on nerves
gen r`wavenum'kgetnev = . 
replace r`wavenum'kgetnev = .m if (outscw2 == 2 | inlist(scchdf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kgetnev = scchdf if inrange(scchdf,1,4)

label variable r`wavenum'kgetnev "r`wavenum'kgetnev:w`wavenum' children get on r's nerve" 
label value r`wavenum'kgetnev attnk

*wave 2 get on nerves
gen s`wavenum'kgetnev =.
spouse r`wavenum'kgetnev, result(s`wavenum'kgetnev) wave(`wavenum')
label variable s`wavenum'kgetnev "s`wavenum'kgetnev:w`wavenum' children get on s's nerve"
label value s`wavenum'kgetnev attnk

****Children support summary****
recode r`wavenum'kcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kcritze)	
recode r`wavenum'kletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kletdow)	
recode r`wavenum'kgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kgetnev)	

egen r`wavenum'ksupport6m =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev)  ///
                           if inw`wavenum' == 1
label variable r`wavenum'ksupport6m "r`wavenum'ksupport6m:w`wavenum' missings in r's lack of children support 6-item score"

gen s`wavenum'ksupport6m=.
spouse r`wavenum'ksupport6m, result(s`wavenum'ksupport6m) wave(`wavenum')  
label variable s`wavenum'ksupport6m "s`wavenum'ksupport6m:w`wavenum' missings in s's lack of children support 6-item score"

egen r`wavenum'ksupport6 =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev) ///
                           if inw`wavenum' == 1
replace r`wavenum'ksupport6  = .m if r`wavenum'ksupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport6)

label variable r`wavenum'ksupport6 "r`wavenum'ksupport6:w`wavenum' r's lack of children support 6-item score"

gen s`wavenum'ksupport6 =.
spouse r`wavenum'ksupport6, result(s`wavenum'ksupport6) wave(`wavenum')
label variable s`wavenum'ksupport6 "s`wavenum'ksupport6:w`wavenum' s's lack of children support 6-item score"

drop xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev

******other family members support***
***understand the way you feel
gen r`wavenum'oustdfe = . 
replace r`wavenum'oustdfe = .m if (outscw2 == 2 | inlist(scfama,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oustdfe = scfama if inrange(scfama,1,4)

label variable r`wavenum'oustdfe "r`wavenum'oustdfe:w`wavenum' r thinks other family members understand the way he/she feels" 
label value r`wavenum'oustdfe attnof

*wave 2 understand the way you feel
gen s`wavenum'oustdfe =.
spouse r`wavenum'oustdfe, result(s`wavenum'oustdfe) wave(`wavenum')
label variable s`wavenum'oustdfe "s`wavenum'oustdfe:w`wavenum' s thinks other family members understand the way he/she feels"
label value s`wavenum'oustdfe attnof

***rely on serious problem
gen r`wavenum'orely = . 
replace r`wavenum'orely = .m if (outscw2 == 2 | inlist(scfamb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'orely = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1 
replace r`wavenum'orely = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'orely = scfamb if inrange(scfamb,1,4)

label variable r`wavenum'orely "r`wavenum'orely:w`wavenum' r can rely on other family members for a serious problem" 

label value r`wavenum'orely attnof

*wave 2 rely on serious problem
gen s`wavenum'orely =.
spouse r`wavenum'orely, result(s`wavenum'orely) wave(`wavenum')
label variable s`wavenum'orely "s`wavenum'orely:w`wavenum' s can rely on other family members for a serious problem"
label value s`wavenum'orely attnof

***open up when need tp talk about worries
gen r`wavenum'oopenup = . 
replace r`wavenum'oopenup = .m if (outscw2 == 2 | inlist(scfamc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oopenup = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1 
replace r`wavenum'oopenup = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oopenup = scfamc if inrange(scfamc,1,4)

label variable r`wavenum'oopenup "r`wavenum'oopenup:w`wavenum' r can open up their worries to other family members" 
label value r`wavenum'oopenup attnof

*wave 2 open up when need tp talk about worries
gen s`wavenum'oopenup =.
spouse r`wavenum'oopenup, result(s`wavenum'oopenup) wave(`wavenum')
label variable s`wavenum'oopenup "s`wavenum'oopenup:w`wavenum' s can open up their worries to other family members"
label value s`wavenum'oopenup attnof

****Criticize by other family members
gen r`wavenum'ocritze = . 
replace r`wavenum'ocritze = .m if (outscw2 == 2 | inlist(scfamd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'ocritze = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1 
replace r`wavenum'ocritze = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ocritze = scfamd if inrange(scfamd,1,4)

label variable r`wavenum'ocritze "r`wavenum'ocritze:w`wavenum' how much other family members criticize r" 
label value r`wavenum'ocritze attnof

*wave 2 Criticize by other family members
gen s`wavenum'ocritze =.
spouse r`wavenum'ocritze, result(s`wavenum'ocritze) wave(`wavenum')
label variable s`wavenum'ocritze "s`wavenum'ocritze:w`wavenum' how much other family members criticize s"
label value s`wavenum'ocritze attnof

*****let down when counting on them
gen r`wavenum'oletdow = . 
replace r`wavenum'oletdow = .m if (outscw2 == 2 | inlist(scfame,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oletdow = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'oletdow = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oletdow = scfame if inrange(scfame,1,4)

label variable r`wavenum'oletdow "r`wavenum'oletdow:w`wavenum' other family members let r down when counting on them" 
label value r`wavenum'oletdow attnof

*wave 2 let down when counting on them
gen s`wavenum'oletdow =.
spouse r`wavenum'oletdow, result(s`wavenum'oletdow) wave(`wavenum')
label variable s`wavenum'oletdow "s`wavenum'oletdow:w`wavenum' other family members let s down when counting on them"
label value s`wavenum'oletdow attnof

*****Get on nerves
gen r`wavenum'ogetnev = . 
replace r`wavenum'ogetnev = .m if (outscw2 == 2 | inlist(scfamf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ogetnev = scfamf if inrange(scfamf,1,4)

label variable r`wavenum'ogetnev "r`wavenum'ogetnev:w`wavenum' other family members get on r's nerve" 
label value r`wavenum'ogetnev attnof

*wave 2 get on nerves
gen s`wavenum'ogetnev =.
spouse r`wavenum'ogetnev, result(s`wavenum'ogetnev) wave(`wavenum')
label variable s`wavenum'ogetnev "s`wavenum'ogetnev:w`wavenum' other family members get on s's nerve"
label value s`wavenum'ogetnev attnof

****Other family members support summary****
recode r`wavenum'ocritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ocritze)	
recode r`wavenum'oletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'oletdow)	
recode r`wavenum'ogetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ogetnev)	

egen r`wavenum'osupport6m =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'osupport6m "r`wavenum'osupport6m:w`wavenum' missings in r's lack of other family members support 6-item score"

gen s`wavenum'osupport6m=.
spouse r`wavenum'osupport6m, result(s`wavenum'osupport6m) wave(`wavenum')  
label variable s`wavenum'osupport6m "s`wavenum'osupport6m:w`wavenum' missings in s's lack of other family members support 6-item score"

egen r`wavenum'osupport6 =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) if inw`wavenum' == 1
replace r`wavenum'osupport6  = .m if r`wavenum'osupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'osupport6  = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1 
replace r`wavenum'osupport6  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport6)

label variable r`wavenum'osupport6 "r`wavenum'osupport6:w`wavenum' r's lack of other family members support 6-item score"

gen s`wavenum'osupport6 =.
spouse r`wavenum'osupport6, result(s`wavenum'osupport6) wave(`wavenum')
label variable s`wavenum'osupport6 "s`wavenum'osupport6:w`wavenum' s's lack of other family members support 6-item score"

drop xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev

******Friend support***
***understand the way you feel
gen r`wavenum'fustdfe = . 
replace r`wavenum'fustdfe = .m if (outscw2 == 2 | inlist(scfrda,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fustdfe = scfrda if inrange(scfrda,1,4)

label variable r`wavenum'fustdfe "r`wavenum'fustdfe:w`wavenum' r thinks friends understand the way he/she feels" 
label value r`wavenum'fustdfe attnf

*wave 2 understand the way you feel
gen s`wavenum'fustdfe =.
spouse r`wavenum'fustdfe, result(s`wavenum'fustdfe) wave(`wavenum')
label variable s`wavenum'fustdfe "s`wavenum'fustdfe:w`wavenum' s thinks friends understand the way he/she feels"
label value s`wavenum'fustdfe attnf

***rely on serious problem
gen r`wavenum'frely = . 
replace r`wavenum'frely = .m if (outscw2 == 2 | inlist(scfrdb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'frely = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1 
replace r`wavenum'frely = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'frely = scfrdb if inrange(scfrdb,1,4)

label variable r`wavenum'frely "r`wavenum'frely:w`wavenum' r can rely on friends for a serious problem" 
label value r`wavenum'frely attnf

*wave 2 rely on serious problem
gen s`wavenum'frely =.
spouse r`wavenum'frely, result(s`wavenum'frely) wave(`wavenum')
label variable s`wavenum'frely "s`wavenum'frely:w`wavenum' s can rely on friends for a serious problem"
label value s`wavenum'frely attnf

***open up when need tp talk about worries
gen r`wavenum'fopenup = . 
replace r`wavenum'fopenup = .m if (outscw2 == 2 | inlist(scfrdc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fopenup = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fopenup = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fopenup = scfrdc if inrange(scfrdc,1,4)

label variable r`wavenum'fopenup "r`wavenum'fopenup:w`wavenum' r can open up their worries to friends" 
label value r`wavenum'fopenup attnf

*wave 2 open up when need tp talk about worries
gen s`wavenum'fopenup =.
spouse r`wavenum'fopenup, result(s`wavenum'fopenup) wave(`wavenum')
label variable s`wavenum'fopenup "s`wavenum'fopenup:w`wavenum' s can open up their worries to friends"
label value s`wavenum'fopenup attnf

****Criticize by friend
gen r`wavenum'fcritze = . 
replace r`wavenum'fcritze = .m if (outscw2 == 2 | inlist(scfrdd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fcritze = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fcritze = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fcritze = scfrdd if inrange(scfrdd,1,4)

label variable r`wavenum'fcritze "r`wavenum'fcritze:w`wavenum' how much friends criticize r" 
label value r`wavenum'fcritze attnf

*wave 2 Criticize by friend
gen s`wavenum'fcritze =.
spouse r`wavenum'fcritze, result(s`wavenum'fcritze) wave(`wavenum')
label variable s`wavenum'fcritze "s`wavenum'fcritze:w`wavenum' how much friends criticize s"
label value s`wavenum'fcritze attnf

*****let down when counting on them
gen r`wavenum'fletdow = . 
replace r`wavenum'fletdow = .m if (outscw2 == 2 | inlist(scfrde,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fletdow = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fletdow = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fletdow = scfrde if inrange(scfrde,1,4)

label variable r`wavenum'fletdow "r`wavenum'fletdow:w`wavenum' friends let r down when counting on them" 
label value r`wavenum'fletdow attnf

*wave 2 let down when counting on them
gen s`wavenum'fletdow =.
spouse r`wavenum'fletdow, result(s`wavenum'fletdow) wave(`wavenum')
label variable s`wavenum'fletdow "s`wavenum'fletdow:w`wavenum' friends let s down when counting on them"
label value s`wavenum'fletdow attnf

*****Get on nerves
gen r`wavenum'fgetnev = . 
replace r`wavenum'fgetnev = .m if (outscw2 == 2 | inlist(scfrdf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fgetnev = scfrdf if inrange(scfrdf,1,4)

label variable r`wavenum'fgetnev "r`wavenum'fgetnev:w`wavenum' friends gets on r's nerve" 
label value r`wavenum'fgetnev attnf

*wave 2 get on nerves
gen s`wavenum'fgetnev =.
spouse r`wavenum'fgetnev, result(s`wavenum'fgetnev) wave(`wavenum')
label variable s`wavenum'fgetnev "s`wavenum'fgetnev:w`wavenum' friends gets on s's nerve"
label value s`wavenum'fgetnev attnf

****Friends support summary****
recode r`wavenum'fcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fcritze)	
recode r`wavenum'fletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fletdow)	
recode r`wavenum'fgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fgetnev)	

egen r`wavenum'fsupport6m =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'fsupport6m "r`wavenum'fsupport6m:w`wavenum' missings in r's lack of friends support 6-item score"

gen s`wavenum'fsupport6m=.
spouse r`wavenum'fsupport6m, result(s`wavenum'fsupport6m) wave(`wavenum')  
label variable s`wavenum'fsupport6m "s`wavenum'fsupport6m:w`wavenum' missings in s's lack of friends support 6-item score"

egen r`wavenum'fsupport6 =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'fsupport6  = .m if r`wavenum'fsupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .c if inlist(outscw2,-1,-2,3) & inw`wavenum' == 1  
replace r`wavenum'fsupport6  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport6)

label variable r`wavenum'fsupport6 "r`wavenum'fsupport6:w`wavenum' r's lack of friends support 6-item score"

gen s`wavenum'fsupport6 =.
spouse r`wavenum'fsupport6, result(s`wavenum'fsupport6) wave(`wavenum')
label variable s`wavenum'fsupport6 "s`wavenum'fsupport6:w`wavenum' s's lack of friends support 6-item score"

drop xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev


**drop ELSA wave core file raw variables***
drop `stre_w2_core'
*
***drop rand ELSA variables***
drop `stre_w2_index'


*****************************************************************************************

pause on
*set wave number
local wavenum =3
local pre_wavenum = `wavenum' -1

*file core**
local stre_w3_core scempl scworka scworkb scworkc scworkd scworke scworkf scworkg scworkh scworki /// 
                   scworkj scworkk scworkl scsca scscb scscc scscd scsce scscf scscg scsch scsci ///
                   scfeela scfeelb scfeelc scfeeld scptra scptrb scptrc scptrd scptre scptrf scfrd scfrda scfrdb scfrdc scfrdd scfrde scfrdf ///
                   scptr scchd scchda scchdb scchdc scchdd scchde scchdf scfam scfama scfamb scfamc scfamd scfame scfamf
                    
merge 1:1 idauniq using "$wave_3_core", keepusing(`stre_w3_core') nogen

*file index
local stre_w`wavenum'_index outscw3

merge 1:1 idauniq using "$index", keepusing(`stre_w3_index') nogen



***Satisfied with the job***
gen r`wavenum'satjob = . 
replace r`wavenum'satjob = .m if (outscw3 == 2 | inlist(scworka,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'satjob = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'satjob = .w if scempl == 2
replace r`wavenum'satjob = 1 if scworka == 4 
replace r`wavenum'satjob = 2 if scworka == 3
replace r`wavenum'satjob = 3 if scworka == 2
replace r`wavenum'satjob = 4 if scworka == 1

label variable r`wavenum'satjob "r`wavenum'satjob:w`wavenum' whether r is satisfied with job"
label values r`wavenum'satjob job

*wave 3 spouse satisfied with the job
gen s`wavenum'satjob =.
spouse r`wavenum'satjob, result(s`wavenum'satjob) wave(`wavenum')
label variable s`wavenum'satjob "s`wavenum'satjob:w`wavenum' whether s is satisfied with job"
label value s`wavenum'satjob job

***physically demanding***
gen r`wavenum'demand = . 
replace r`wavenum'demand = .m if (outscw3 == 2 | inlist(scworkb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'demand = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'demand = .w if scempl == 2
replace r`wavenum'demand = 1 if scworkb == 4 
replace r`wavenum'demand = 2 if scworkb == 3
replace r`wavenum'demand = 3 if scworkb == 2
replace r`wavenum'demand = 4 if scworkb == 1

label variable r`wavenum'demand "r`wavenum'demand:w`wavenum' whether r's job is physically demanding"
label values r`wavenum'demand job

*wave 3 spouse job demanding
gen s`wavenum'demand =.
spouse r`wavenum'demand, result(s`wavenum'demand) wave(`wavenum')
label variable s`wavenum'demand "s`wavenum'demand:w`wavenum' whether s's job is physically demanding"
label value s`wavenum'demand job

***Deserve recognition***
gen r`wavenum'deserve = . 
replace r`wavenum'deserve = .m if (outscw3 == 2 | inlist(scworkc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'deserve = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'deserve = .w if scempl == 2
replace r`wavenum'deserve = 1 if scworkc == 4 
replace r`wavenum'deserve = 2 if scworkc == 3
replace r`wavenum'deserve = 3 if scworkc == 2
replace r`wavenum'deserve = 4 if scworkc == 1

label variable r`wavenum'deserve "r`wavenum'deserve:w`wavenum' whether r received deserved recognition from work"
label values r`wavenum'deserve job

*wave 3 spouse deserve recognition
gen s`wavenum'deserve =.
spouse r`wavenum'deserve, result(s`wavenum'deserve) wave(`wavenum')
label variable s`wavenum'deserve "s`wavenum'deserve:w`wavenum' whether s received deserved recognition from work"
label value s`wavenum'deserve job

***Salary is adequate***
gen r`wavenum'salary = . 
replace r`wavenum'salary = .m if (outscw3 == 2 | inlist(scworkd,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'salary = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'salary = .w if scempl == 2
replace r`wavenum'salary = 1 if scworkd == 4 
replace r`wavenum'salary = 2 if scworkd == 3
replace r`wavenum'salary = 3 if scworkd == 2
replace r`wavenum'salary = 4 if scworkd == 1

label variable r`wavenum'salary "r`wavenum'salary:w`wavenum' whether r's salary is adequate"
label values r`wavenum'salary job

*wave 3 spouse salary is adequate
gen s`wavenum'salary =.
spouse r`wavenum'salary, result(s`wavenum'salary) wave(`wavenum')
label variable s`wavenum'salary "s`wavenum'salary:w`wavenum' whether s's salary is adequate"
label value s`wavenum'salary job

***Job promotion is poor***
gen r`wavenum'promot = . 
replace r`wavenum'promot = .m if (outscw3 == 2 | inlist(scworke,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'promot = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'promot = .w if scempl == 2
replace r`wavenum'promot = 1 if scworke == 4 
replace r`wavenum'promot = 2 if scworke == 3
replace r`wavenum'promot = 3 if scworke == 2
replace r`wavenum'promot = 4 if scworke == 1

label variable r`wavenum'promot "r`wavenum'promot:w`wavenum' whether r job promotion prospects are poor"
label values r`wavenum'promot job

*wave 3 spouse job promotion is poor
gen s`wavenum'promot =.
spouse r`wavenum'promot, result(s`wavenum'promot) wave(`wavenum')
label variable s`wavenum'promot "s`wavenum'promot:w`wavenum' whether s job promotion prospects are poor"
label value s`wavenum'promot job

***Job security***
gen r`wavenum'secure = . 
replace r`wavenum'secure = .m if (outscw3 == 2 | inlist(scworkf,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'secure = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'secure = .w if scempl == 2
replace r`wavenum'secure = 1 if scworkf == 4 
replace r`wavenum'secure = 2 if scworkf == 3
replace r`wavenum'secure = 3 if scworkf == 2
replace r`wavenum'secure = 4 if scworkf == 1

label variable r`wavenum'secure "r`wavenum'secure:w`wavenum' whether r job security is poor"
label values r`wavenum'secure job

*wave 3 spouse job security
gen s`wavenum'secure =.
spouse r`wavenum'secure, result(s`wavenum'secure) wave(`wavenum')
label variable s`wavenum'secure "s`wavenum'secure:w`wavenum' whether s job security is poor"
label value s`wavenum'secure job

***Constant time pressure due to a heavy workload***
gen r`wavenum'timepre = . 
replace r`wavenum'timepre = .m if (outscw3 == 2 | inlist(scworkg,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'timepre = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'timepre = .w if scempl == 2
replace r`wavenum'timepre = 1 if scworkg == 4 
replace r`wavenum'timepre = 2 if scworkg == 3
replace r`wavenum'timepre = 3 if scworkg == 2
replace r`wavenum'timepre = 4 if scworkg == 1

label variable r`wavenum'timepre "r`wavenum'timepre:w`wavenum' whether r is under constant time pressure due to a heavy workload"
label values r`wavenum'timepre job

*wave 3 spouse constant time pressure due to heavy workload
gen s`wavenum'timepre =.
spouse r`wavenum'timepre, result(s`wavenum'timepre) wave(`wavenum')
label variable s`wavenum'timepre "s`wavenum'timepre:w`wavenum' whether s is under constant time pressure due to a heavy workload"
label value s`wavenum'timepre job

***has the opportunity to develop new skills*
gen r`wavenum'ltlfree = . 
replace r`wavenum'ltlfree = .m if (outscw3 == 2 | inlist(scworkh,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .w if scempl == 2
replace r`wavenum'ltlfree = 1 if scworkh == 4 
replace r`wavenum'ltlfree = 2 if scworkh == 3
replace r`wavenum'ltlfree = 3 if scworkh == 2
replace r`wavenum'ltlfree = 4 if scworkh == 1

label variable r`wavenum'ltlfree "r`wavenum'ltlfree:w`wavenum' whether r has very little freedom to do work"
label values r`wavenum'ltlfree job

*wave 3 spouse has the opportunity to develop new skills
gen s`wavenum'ltlfree =.
spouse r`wavenum'ltlfree, result(s`wavenum'ltlfree) wave(`wavenum')
label variable s`wavenum'ltlfree "s`wavenum'ltlfree:w`wavenum' whether s has very little freedom to do work"
label value s`wavenum'ltlfree job

***develop new skills***
gen r`wavenum'nskills = . 
replace r`wavenum'nskills = .m if (outscw3 == 2 | inlist(scworki,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'nskills = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'nskills = .w if scempl == 2
replace r`wavenum'nskills = 1 if scworki == 4 
replace r`wavenum'nskills = 2 if scworki == 3
replace r`wavenum'nskills = 3 if scworki == 2
replace r`wavenum'nskills = 4 if scworki == 1

label variable r`wavenum'nskills "r`wavenum'nskills:w`wavenum' whether r has the opportunity to develop new skills"
label values r`wavenum'nskills job

*wave 3 spouse develop new skills
gen s`wavenum'nskills =.
spouse r`wavenum'nskills, result(s`wavenum'nskills) wave(`wavenum')
label variable s`wavenum'nskills "s`wavenum'nskills:w`wavenum' whether s has the opportunity to develop new skills"
label value s`wavenum'nskills job

***support in difficult situation***
gen r`wavenum'support = . 
replace r`wavenum'support = .m if (outscw3 == 2 | inlist(scworkj,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'support = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'support = .w if scempl == 2
replace r`wavenum'support = 1 if scworkj == 4 
replace r`wavenum'support = 2 if scworkj == 3
replace r`wavenum'support = 3 if scworkj == 2
replace r`wavenum'support = 4 if scworkj == 1

label variable r`wavenum'support "r`wavenum'support:w`wavenum' whether r received adequate support in difficult situations"
label values r`wavenum'support job

*wave 3 spouse support in difficult situation
gen s`wavenum'support =.
spouse r`wavenum'support, result(s`wavenum'support) wave(`wavenum')
label variable s`wavenum'support "s`wavenum'support:w`wavenum' whether s received adequate support in difficult situations"
label value s`wavenum'support job

***Feel control over what happens in most situations***
gen r`wavenum'control = . 
replace r`wavenum'control = .m if (outscw3 == 2 | inlist(scworkk,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'control = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'control = .w if scempl == 2
replace r`wavenum'control = 1 if scworkk == 4 
replace r`wavenum'control = 2 if scworkk == 3
replace r`wavenum'control = 3 if scworkk == 2
replace r`wavenum'control = 4 if scworkk == 1

label variable r`wavenum'control "r`wavenum'control:w`wavenum' whether r feels control over what happens in most situations"
label values r`wavenum'control job

*wave 3 spouse feel control over what happens in most situations
gen s`wavenum'control =.
spouse r`wavenum'control, result(s`wavenum'control) wave(`wavenum')
label variable s`wavenum'control "s`wavenum'control:w`wavenum' whether s feels control over what happens in most situations"
label value s`wavenum'control job

***Have to work very fast***
gen r`wavenum'workfast = . 
replace r`wavenum'workfast = .m if (outscw3 == 2 | inlist(scworkl,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'workfast = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'workfast = .w if scempl == 2
replace r`wavenum'workfast = 1 if scworkl == 4 
replace r`wavenum'workfast = 2 if scworkl == 3
replace r`wavenum'workfast = 3 if scworkl == 2
replace r`wavenum'workfast = 4 if scworkl == 1

label variable r`wavenum'workfast "r`wavenum'workfast:w`wavenum' whether r has to work very fast"
label values r`wavenum'workfast job

*wave 3 spouse has to work very fast
gen s`wavenum'workfast =.
spouse r`wavenum'workfast, result(s`wavenum'workfast) wave(`wavenum')
label variable s`wavenum'workfast "s`wavenum'workfast:w`wavenum' whether s has to work very fast"
label value s`wavenum'workfast job

***Job stress summary***
recode r`wavenum'satjob (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'satjob)
recode r`wavenum'deserve  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'deserve)	
recode r`wavenum'salary (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'salary)	
recode r`wavenum'nskills  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'nskills)	
recode r`wavenum'support  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'support)	
recode r`wavenum'control (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'control)	
	

egen r`wavenum'jobsumm =rowmiss(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) if inw`wavenum' == 1
label variable r`wavenum'jobsumm "r`wavenum'jobsumm:w`wavenum' missings in r's job stress summary mean score"

gen s`wavenum'jobsumm =.
spouse r`wavenum'jobsumm, result(s`wavenum'jobsumm) wave(`wavenum')
label variable s`wavenum'jobsumm "s`wavenum'jobsumm:w`wavenum' missings in s's job stress summary mean score"

egen r`wavenum'jobsum =rowmean(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) 
replace r`wavenum'jobsum  = .m if r`wavenum'jobsumm ==6 & inw`wavenum' == 1
replace r`wavenum'jobsum  = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'jobsum  = .w if scempl == 2
label variable r`wavenum'jobsum "r`wavenum'jobsum:w`wavenum' r's job stress summary mean score"

*wave `wavenum' spouse job stress summary
gen s`wavenum'jobsum =.
spouse r`wavenum'jobsum, result(s`wavenum'jobsum) wave(`wavenum')
label variable s`wavenum'jobsum "s`wavenum'jobsum:w`wavenum' s's job stress summary mean score"

drop xr`wavenum'satjob xr`wavenum'deserve xr`wavenum'salary xr`wavenum'nskills xr`wavenum'support xr`wavenum'control

***Dont belong in this area***
gen r`wavenum'belong = . 
missing_w`wavenum' outscw3 scsca, result(r`wavenum'belong)
replace r`wavenum'belong = .m if outscw3 == 2 & inw`wavenum' == 1
replace r`wavenum'belong = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'belong = scsca if inrange(scsca,1,7)

label variable r`wavenum'belong "r`wavenum'belong:w`wavenum' whether r feels part of/doesn't belong in this area"

*wave 3 spouse dont belong this area
gen s`wavenum'belong =.
spouse r`wavenum'belong, result(s`wavenum'belong) wave(`wavenum')
label variable s`wavenum'belong "s`wavenum'belong:w`wavenum' whether s feels part of/doesn't belong in this area"

***Vandalism and Graffitti*
gen r`wavenum'vandal =. 
missing_w`wavenum' outscw3 scscb, result(r`wavenum'vandal)
replace r`wavenum'vandal = .m if outscw3 == 2 & inw`wavenum' == 1
replace r`wavenum'vandal = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'vandal = 7 if scscb == 1
replace r`wavenum'vandal = 6 if scscb == 2 
replace r`wavenum'vandal = 5 if scscb == 3 
replace r`wavenum'vandal = 4 if scscb == 4 
replace r`wavenum'vandal = 3 if scscb == 5 
replace r`wavenum'vandal = 2 if scscb == 6 
replace r`wavenum'vandal = 1 if scscb == 7 

label variable r`wavenum'vandal "r`wavenum'vandal:w`wavenum' whether r vandalism is no problem/big problem in this area"

*wave 3 spouse vandalism and graffiti
gen s`wavenum'vandal =.
spouse r`wavenum'vandal, result(s`wavenum'vandal) wave(`wavenum')
label variable s`wavenum'vandal "s`wavenum'vandal:w`wavenum' whether s vandalism is no problem/big problem in this area"

****Feel alone in this area***
gen r`wavenum'alone=. 
missing_w`wavenum' outscw3 scscc, result(r`wavenum'alone)
replace r`wavenum'alone = .m if outscw3 == 2  & inw`wavenum' == 1
replace r`wavenum'alone = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'alone = 7 if scscc == 1
replace r`wavenum'alone = 6 if scscc == 2 
replace r`wavenum'alone = 5 if scscc == 3 
replace r`wavenum'alone = 4 if scscc == 4 
replace r`wavenum'alone = 3 if scscc == 5 
replace r`wavenum'alone = 2 if scscc == 6 
replace r`wavenum'alone = 1 if scscc == 7 

label variable r`wavenum'alone "r`wavenum'vandal:w`wavenum' whether r never felt lonely/feel lonely in this area"

*wave 3 spouse feel alone in this area
gen s`wavenum'alone =.
spouse r`wavenum'alone, result(s`wavenum'alone) wave(`wavenum')
label variable s`wavenum'alone "s`wavenum'alone:w`wavenum' whether s never felt lonely/feel lonely in this area"

***Dont trust in this area***
gen r`wavenum'trust = . 
missing_w`wavenum' outscw3 scscd, result(r`wavenum'trust)
replace r`wavenum'trust = .m if outscw3 == 2 & inw`wavenum' == 1
replace r`wavenum'trust = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'trust = scscd if inrange(scscd,1,7)

label variable r`wavenum'trust "r`wavenum'trust:w`wavenum' whether r feels people can be/can't be trusted in this area"

*wave 3 spouse dont trust people
gen s`wavenum'trust =.
spouse r`wavenum'trust, result(s`wavenum'trust) wave(`wavenum')
label variable s`wavenum'trust "s`wavenum'trust:w`wavenum' whether s feels people can be/can't be trusted in this area"

**Afraid to walk around alone***
gen r`wavenum'afwalk = . 
missing_w`wavenum' outscw3 scsce, result(r`wavenum'afwalk)
replace r`wavenum'afwalk = .m if outscw3 == 2 & inw`wavenum' == 1
replace r`wavenum'afwalk = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'afwalk = 7 if scsce == 1
replace r`wavenum'afwalk = 6 if scsce == 2 
replace r`wavenum'afwalk = 5 if scsce == 3 
replace r`wavenum'afwalk = 4 if scsce == 4 
replace r`wavenum'afwalk = 3 if scsce == 5 
replace r`wavenum'afwalk = 2 if scsce == 6 
replace r`wavenum'afwalk = 1 if scsce == 7 
label variable r`wavenum'afwalk "r`wavenum'afwalk:w`wavenum' whether r feels safe/afraid walking alone in this area"

*wave 3 spouse afraid walk
gen s`wavenum'afwalk =.
spouse r`wavenum'afwalk, result(s`wavenum'afwalk) wave(`wavenum')
label variable s`wavenum'afwalk "s`wavenum'afwalk:w`wavenum' whether s feels safe/afraid walking alone in this area"

***Unfriendly people ***
gen r`wavenum'unfriend = . 
missing_w`wavenum' outscw3 scscf, result(r`wavenum'unfriend)
replace r`wavenum'unfriend = .m if outscw3 == 2 & inw`wavenum' == 1
replace r`wavenum'unfriend = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'unfriend = scscf if inrange(scscf,1,7)

label variable r`wavenum'unfriend "r`wavenum'unfriend:w`wavenum' whether r feels people are friendly/unfriendly in this area"

*wave 3 spouse unfriendly people
gen s`wavenum'unfriend =.
spouse r`wavenum'unfriend, result(s`wavenum'unfriend) wave(`wavenum')
label variable s`wavenum'unfriend "s`wavenum'unfriend:w`wavenum' whether s feels people are friendly/unfriendly in this area"

***Take advantage of respondent
gen r`wavenum'tadvan=. 
missing_w`wavenum' outscw3 scscg, result(r`wavenum'tadvan)
replace r`wavenum'tadvan = .m if outscw3 == 2 & inw`wavenum' == 1
replace r`wavenum'tadvan = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'tadvan = 7 if scscg == 1
replace r`wavenum'tadvan = 6 if scscg == 2 
replace r`wavenum'tadvan = 5 if scscg == 3 
replace r`wavenum'tadvan = 4 if scscg == 4 
replace r`wavenum'tadvan = 3 if scscg == 5 
replace r`wavenum'tadvan = 2 if scscg == 6 
replace r`wavenum'tadvan = 1 if scscg == 7 

label variable r`wavenum'tadvan "r`wavenum'tadvan:w`wavenum' r feels people take advantage of/treat r fairly in this area"

*wave 3 spouse take advantage of
gen s`wavenum'tadvan =.
spouse r`wavenum'tadvan, result(s`wavenum'tadvan) wave(`wavenum')
label variable s`wavenum'tadvan "s`wavenum'tadvan:w`wavenum' s feels people take advantage of/treat s fairly in this area"

***Full of rubbish and litter***
gen r`wavenum'rubbish = . 
missing_w`wavenum' outscw3 scsch, result(r`wavenum'rubbish)
replace r`wavenum'rubbish = .m if outscw3 == 2 & inw`wavenum' == 1
replace r`wavenum'rubbish = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'rubbish = scsch if inrange(scsch,1,7)

label variable r`wavenum'rubbish "r`wavenum'rubbish:w`wavenum' whether r feels area is clean/full of rubbish and litter"

*wave 3 spouse full of rubbish and litter
gen s`wavenum'rubbish =.
spouse r`wavenum'rubbish, result(s`wavenum'rubbish) wave(`wavenum')
label variable s`wavenum'rubbish "s`wavenum'rubbish:w`wavenum' whether s feels area is clean/full of rubbish and litter"

***Don't get help from other***
gen r`wavenum'hlpntr = . 
missing_w`wavenum' outscw3 scsci, result(r`wavenum'hlpntr)
replace r`wavenum'hlpntr = .m if outscw3 == 2 & inw`wavenum' == 1
replace r`wavenum'hlpntr = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'hlpntr = scsci if inrange(scsci,1,7)

label variable r`wavenum'hlpntr "r`wavenum'hlpntr:w`wavenum' whether r feels people will help/won't help in this area"

*wave 3 spouse don't get help from other
gen s`wavenum'hlpntr =.
spouse r`wavenum'hlpntr, result(s`wavenum'hlpntr) wave(`wavenum')
label variable s`wavenum'hlpntr "s`wavenum'hlpntr:w`wavenum' whether s feels people will help/won't help in this area"


****Neighborhood phsyical disorder summary****
egen r`wavenum'npdisumm_e =rowmiss(r`wavenum'vandal r`wavenum'afwalk r`wavenum'rubbish)  if inw`wavenum' == 1
label variable r`wavenum'npdisumm_e "r`wavenum'npdisumm_e:w`wavenum' missings in r's neighborhood physical disorder summary mean score"

gen s`wavenum'npdisumm_e =.
spouse r`wavenum'npdisumm_e, result(s`wavenum'npdisumm_e) wave(`wavenum')
label variable s`wavenum'npdisumm_e "s`wavenum'npdisumm_e:w`wavenum' missings in s's neighborhood physical disorder summary mean score"

egen r`wavenum'npdisum_e =rowmean(r`wavenum'vandal r`wavenum'afwalk r`wavenum'rubbish)  if inw`wavenum' == 1
replace r`wavenum'npdisum_e  = .m if r`wavenum'npdisumm_e ==3 & inw`wavenum' == 1
replace r`wavenum'npdisum_e  = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
label variable r`wavenum'npdisum_e "r`wavenum'npdisum_e:w`wavenum' r's neighborhood physical disorder summary mean score"

gen s`wavenum'npdisum_e =.
spouse r`wavenum'npdisum_e, result(s`wavenum'npdisum_e) wave(`wavenum')
label variable s`wavenum'npdisum_e "s`wavenum'npdisum_e:w`wavenum' s's neighborhood physical disorder summary mean score"

****Neighborhood social cohesion***
egen r`wavenum'nsocosumm =rowmiss(r`wavenum'belong r`wavenum'trust r`wavenum'unfriend r`wavenum'hlpntr) if inw`wavenum' == 1
label variable r`wavenum'nsocosumm "r`wavenum'nsocoumm:w`wavenum' missings in r's neighborhood social cohesion summary mean score"

gen s`wavenum'nsocosumm =.
spouse r`wavenum'nsocosumm, result(s`wavenum'nsocosumm) wave(`wavenum')
label variable s`wavenum'nsocosumm "s`wavenum'nsocosumm:w`wavenum' missings in s's neighborhood social cohesion summary mean score"

egen r`wavenum'nsocosum =rowmean(r`wavenum'belong r`wavenum'trust r`wavenum'unfriend r`wavenum'hlpntr) if inw`wavenum' == 1
replace r`wavenum'nsocosum  = .m if r`wavenum'nsocosumm ==4 & inw`wavenum' == 1
replace r`wavenum'nsocosum  = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
label variable r`wavenum'nsocosum "r`wavenum'nsocosum:w`wavenum' r's neighborhood social cohesion summary mean score"

gen s`wavenum'nsocosum =.
spouse r`wavenum'nsocosum, result(s`wavenum'nsocosum) wave(`wavenum')
label variable s`wavenum'nsocosum "s`wavenum'nsocosum:w`wavenum' s's neighborhood social cohesion summary mean score"



***feel lack of companionship***
gen r`wavenum'complac = . 
replace r`wavenum'complac = .m if (outscw3 == 2 | inlist(scfeela,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'complac = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'complac = scfeela if inrange(scfeela,1,3)

label variable r`wavenum'complac "r`wavenum'complac:w`wavenum' whether r often feels lack of companionship"
label value r`wavenum'complac tim

*wave 3 feel lack of companionship
gen s`wavenum'complac =.
spouse r`wavenum'complac, result(s`wavenum'complac) wave(`wavenum')
label variable s`wavenum'complac "s`wavenum'complac:w`wavenum' whether s often feels lack of companionship"
label value s`wavenum'complac tim

***feel left out***
gen r`wavenum'leftout = . 
replace r`wavenum'leftout = .m if (outscw3 == 2 | inlist(scfeelb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'leftout = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'leftout = scfeelb if inrange(scfeelb,1,3)

label variable r`wavenum'leftout "r`wavenum'leftout:w`wavenum' whether r often feels left out"
label value r`wavenum'leftout tim

*wave 3 feel left out
gen s`wavenum'leftout =.
spouse r`wavenum'leftout, result(s`wavenum'leftout) wave(`wavenum')
label variable s`wavenum'leftout "s`wavenum'leftout:w`wavenum' whether s often feels left out"
label value s`wavenum'leftout tim


***feel isolated from others***
gen r`wavenum'isolate = . 
replace r`wavenum'isolate = .m if (outscw3 == 2 | inlist(scfeelc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'isolate = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'isolate = scfeelc if inrange(scfeelc,1,3)


label variable r`wavenum'isolate "r`wavenum'isolate:w`wavenum' whether r often feels isolated from others" 
label value r`wavenum'isolate tim

*wave 3 feel isolated from others
gen s`wavenum'isolate =.
spouse r`wavenum'isolate, result(s`wavenum'isolate) wave(`wavenum')
label variable s`wavenum'isolate "s`wavenum'isolate:w`wavenum' whether s often feels isolated from others"
label value s`wavenum'isolate tim


***feel in tune with the people around***
gen r`wavenum'intune = . 
replace r`wavenum'intune = .m if (outscw3 == 2 | inlist(scfeeld,-1,-2,-9)) & inw`wavenum' == 1 
replace r`wavenum'intune = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'intune = scfeeld if inrange(scfeeld,1,3)

label variable r`wavenum'intune "r`wavenum'intune:w`wavenum' whether r often feels not in tune with the people around" 
label value r`wavenum'intune tim

*wave 3 feel in tune with the people around
gen s`wavenum'intune =.
spouse r`wavenum'intune, result(s`wavenum'intune) wave(`wavenum')
label variable s`wavenum'intune "s`wavenum'intune:w`wavenum' whether s often feels not in tune with the people around"
label value s`wavenum'intune tim

****summary score 4 components
recode r`wavenum'intune (1=3) (2=2) (3=1), gen(xr`wavenum'intune) 
egen r`wavenum'lnlysm =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate r`wavenum'intune) if inw`wavenum' == 1
label variable r`wavenum'lnlysm "r`wavenum'lnlysm:w`wavenum' missings in r's 4-item loneliness summary mean score"

gen s`wavenum'lnlysm =.
spouse r`wavenum'lnlysm, result(s`wavenum'lnlysm) wave(`wavenum')
label variable s`wavenum'lnlysm "s`wavenum'lnlysm:w`wavenum' missings in s's 4-item loneliness summary mean score"

egen r`wavenum'lnlys =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate xr`wavenum'intune) if inw`wavenum' == 1
replace r`wavenum'lnlys  = .m if r`wavenum'lnlysm == 4 & inw`wavenum' == 1
replace r`wavenum'lnlys  = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1

label variable r`wavenum'lnlys "r`wavenum'lnlys:w`wavenum' r's 4-item loneliness summary mean score"

gen s`wavenum'lnlys =.
spouse r`wavenum'lnlys, result(s`wavenum'lnlys) wave(`wavenum')
label variable s`wavenum'lnlys "s`wavenum'lnlys:w`wavenum' s's 4-item loneliness summary mean score"

****summary score 3 components
egen r`wavenum'lnlys3m =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
label variable r`wavenum'lnlys3m "r`wavenum'lnlys3m:w`wavenum' missings in r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3m =.
spouse r`wavenum'lnlys3m, result(s`wavenum'lnlys3m) wave(`wavenum')
label variable s`wavenum'lnlys3m "s`wavenum'lnlys3m:w`wavenum' missings in s's 3-item loneliness summary mean score"

egen r`wavenum'lnlys3 =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
replace r`wavenum'lnlys3  = .m if r`wavenum'complac == .m & r`wavenum'leftout == .m & r`wavenum'isolate == .m
replace r`wavenum'lnlys3  = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'lnlys3  = .r if r`wavenum'complac == .r & r`wavenum'leftout == .r & r`wavenum'isolate == .r 


label variable r`wavenum'lnlys3 "r`wavenum'lnlys3:w`wavenum' r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3 =.
spouse r`wavenum'lnlys3, result(s`wavenum'lnlys3) wave(`wavenum')
label variable s`wavenum'lnlys3 "s`wavenum'lnlys3:w`wavenum' s's 3-item loneliness summary mean score"

drop xr`wavenum'intune

*************************
******Spouse support***
***understand the way you feel
gen r`wavenum'sustdfe = . 
replace r`wavenum'sustdfe = .m if (outscw3 == 2 | inlist(scptra,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .n if  scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sustdfe = scptra if inrange(scptra,1,4)

label variable r`wavenum'sustdfe "r`wavenum'sustdfe:w`wavenum' r thinks spouse understands the way he/she feels" 
label value r`wavenum'sustdfe attns

*wave 3 understand the way you feel
gen s`wavenum'sustdfe =.
spouse r`wavenum'sustdfe, result(s`wavenum'sustdfe) wave(`wavenum')
label variable s`wavenum'sustdfe "s`wavenum'sustdfe:w`wavenum' s thinks spouse understands the way he/she feels"
label value s`wavenum'sustdfe attns

***rely on serious problem
gen r`wavenum'srely = . 
replace r`wavenum'srely = .m if (outscw3 == 2 | inlist(scptrb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'srely = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'srely = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'srely = scptrb if inrange(scptrb,1,4)

label variable r`wavenum'srely "r`wavenum'srely:w`wavenum' r can rely on spouse for a serious problem" 
label value r`wavenum'srely attns

*wave 3 rely on serious problem
gen s`wavenum'srely =.
spouse r`wavenum'srely, result(s`wavenum'srely) wave(`wavenum')
label variable s`wavenum'srely "s`wavenum'srely:w`wavenum' s can rely on spouse for a serious problem"
label value s`wavenum'srely attns

***open up when need to talk about worries
gen r`wavenum'sopenup = . 
replace r`wavenum'sopenup = .m if (outscw3 == 2 | inlist(scptrc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sopenup = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sopenup = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sopenup = scptrc if inrange(scptrc,1,4)

label variable r`wavenum'sopenup "r`wavenum'sopenup:w`wavenum' r can open up their worries to spouse" 
label value r`wavenum'sopenup attns

*wave 3 open up when need tp talk about worries
gen s`wavenum'sopenup =.
spouse r`wavenum'sopenup, result(s`wavenum'sopenup) wave(`wavenum')
label variable s`wavenum'sopenup "s`wavenum'sopenup:w`wavenum' s can open up their worries to spouse"
label value s`wavenum'sopenup attns

****Criticize  by spouse
gen r`wavenum'scritze = . 
replace r`wavenum'scritze = .m if (outscw3 == 2 | inlist(scptrd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'scritze = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'scritze = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'scritze = scptrd if inrange(scptrd,1,4)

label variable r`wavenum'scritze "r`wavenum'scritze:w`wavenum' how much spouse criticizes r" 
label value r`wavenum'scritze attns

*wave 3 Criticize  by spouse
gen s`wavenum'scritze =.
spouse r`wavenum'scritze, result(s`wavenum'scritze) wave(`wavenum')
label variable s`wavenum'scritze "s`wavenum'scritze:w`wavenum' how much spouse criticizes s"
label value s`wavenum'scritze attns

*****let down when counting on them
gen r`wavenum'sletdow = . 
replace r`wavenum'sletdow = .m if (outscw3 == 2 | inlist(scptre,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sletdow = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sletdow = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sletdow = scptre if inrange(scptre,1,4)

label variable r`wavenum'sletdow "r`wavenum'sletdow:w`wavenum' spouse let r down when counting on him/her" 
label value r`wavenum'sletdow attns

*wave 3 let down when counting on them
gen s`wavenum'sletdow =.
spouse r`wavenum'sletdow, result(s`wavenum'sletdow) wave(`wavenum')
label variable s`wavenum'sletdow "s`wavenum'sletdow:w`wavenum' spouse let s down when counting on him/her"
label value s`wavenum'sletdow attns

*****Get on nerves
gen r`wavenum'sgetnev = . 
replace r`wavenum'sgetnev = .m if (outscw3 == 2 | inlist(scptrf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sgetnev = scptrf if inrange(scptrf,1,4)

label variable r`wavenum'sgetnev "r`wavenum'sgetnev:w`wavenum' spouse gets on r's nerve" 
label value r`wavenum'sgetnev attns

*wave 3 get on nerves
gen s`wavenum'sgetnev =.
spouse r`wavenum'sgetnev, result(s`wavenum'sgetnev) wave(`wavenum')
label variable s`wavenum'sgetnev "s`wavenum'sgetnev:w`wavenum' spouse gets on s's nerve"
label value s`wavenum'sgetnev attns


****spouse support summary****
recode r`wavenum'scritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'scritze)	
recode r`wavenum'sletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sletdow)	
recode r`wavenum'sgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sgetnev)	

egen r`wavenum'ssupport6m =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                           if inw`wavenum' == 1
label variable  r`wavenum'ssupport6m "r`wavenum'ssupport6m:w`wavenum' missings in r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6m=.
spouse r`wavenum'ssupport6m, result(s`wavenum'ssupport6m) wave(`wavenum')  
label variable s`wavenum'ssupport6m "s`wavenum'ssupport6m:w`wavenum' missings in s's lack of spouse support 6-item score"

egen r`wavenum'ssupport6 =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'ssupport6  = .m if r`wavenum'ssupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .n if scptr == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport6)

label variable r`wavenum'ssupport6 "r`wavenum'ssupport6:w`wavenum' r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6 =.
spouse r`wavenum'ssupport6, result(s`wavenum'ssupport6) wave(`wavenum')
label variable s`wavenum'ssupport6 "s`wavenum'ssupport6:w`wavenum' s's lack of spouse support 6-item score"

drop xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev

******Child support***
***understand the way you feel
gen r`wavenum'kustdfe = . 
replace r`wavenum'kustdfe = .m if (outscw3 == 2 | inlist(scchda,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kustdfe = scchda if inrange(scchda,1,4)

label variable r`wavenum'kustdfe "r`wavenum'kustdfe:w`wavenum' r thinks children understand the way he/she feels" 
label value r`wavenum'kustdfe attnk

*wave 3 understand the way you feel
gen s`wavenum'kustdfe =.
spouse r`wavenum'kustdfe, result(s`wavenum'kustdfe) wave(`wavenum')
label variable s`wavenum'kustdfe "s`wavenum'kustdfe:w`wavenum' s thinks children understand the way he/she feels"
label value s`wavenum'kustdfe attnk

***rely on serious problem
gen r`wavenum'krely = . 
replace r`wavenum'krely = .m if (outscw3 == 2 | inlist(scchdb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'krely = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'krely = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'krely = scchdb if inrange(scchdb,1,4)

label variable r`wavenum'krely "r`wavenum'krely:w`wavenum' r can rely on children for a serious problem" 
label value r`wavenum'krely attnk

*wave 3 rely on serious problem
gen s`wavenum'krely =.
spouse r`wavenum'krely, result(s`wavenum'krely) wave(`wavenum')
label variable s`wavenum'krely "s`wavenum'krely:w`wavenum' s can rely on children for a serious problem"
label value s`wavenum'krely attnk

***open up when need tp talk about worries
gen r`wavenum'kopenup = . 
replace r`wavenum'kopenup = .m if (outscw3 == 2 | inlist(scchdc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kopenup = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kopenup = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kopenup = scchdc if inrange(scchdc,1,4)

label variable r`wavenum'kopenup "r`wavenum'kopenup:w`wavenum' r can open up their worries to children" 
label value r`wavenum'kopenup attnk

*wave 3 open up when need tp talk about worries
gen s`wavenum'kopenup =.
spouse r`wavenum'kopenup, result(s`wavenum'kopenup) wave(`wavenum')
label variable s`wavenum'kopenup "s`wavenum'kopenup:w`wavenum' s can open up their worries to children"
label value s`wavenum'kopenup attnk

****Criticize by children
gen r`wavenum'kcritze = . 
replace r`wavenum'kcritze = .m if (outscw3 == 2 | inlist(scchdd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kcritze = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kcritze = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kcritze = scchdd if inrange(scchdd,1,4)

label variable r`wavenum'kcritze "r`wavenum'kcritze:w`wavenum' how much children criticize r" 
label value r`wavenum'kcritze attnk

*wave 3 Criticize by children
gen s`wavenum'kcritze =.
spouse r`wavenum'kcritze, result(s`wavenum'kcritze) wave(`wavenum')
label variable s`wavenum'kcritze "s`wavenum'kcritze:w`wavenum' how much children criticize s"
label value s`wavenum'kcritze attnk

*****let down when counting on them
gen r`wavenum'kletdow = . 
replace r`wavenum'kletdow = .m if (outscw3 == 2 | inlist(scchde,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kletdow = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kletdow = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kletdow = scchde if inrange(scchde,1,4)

label variable r`wavenum'kletdow "r`wavenum'kletdow:w`wavenum' children let r down when counting on them" 
label value r`wavenum'kletdow attnk

*wave 3 let down when counting on them
gen s`wavenum'kletdow =.
spouse r`wavenum'kletdow, result(s`wavenum'kletdow) wave(`wavenum')
label variable s`wavenum'kletdow "s`wavenum'kletdow:w`wavenum' children let s down when counting on them"
label value s`wavenum'kletdow attnk

*****Get on nerves
gen r`wavenum'kgetnev = . 
replace r`wavenum'kgetnev = .m if (outscw3 == 2 | inlist(scchdf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kgetnev = scchdf if inrange(scchdf,1,4)

label variable r`wavenum'kgetnev "r`wavenum'kgetnev:w`wavenum' children get on r's nerve" 
label value r`wavenum'kgetnev attnk

*wave 3 get on nerves
gen s`wavenum'kgetnev =.
spouse r`wavenum'kgetnev, result(s`wavenum'kgetnev) wave(`wavenum')
label variable s`wavenum'kgetnev "s`wavenum'kgetnev:w`wavenum' children get on s's nerve"
label value s`wavenum'kgetnev attnk

****Children support summary****
recode r`wavenum'kcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kcritze)	
recode r`wavenum'kletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kletdow)	
recode r`wavenum'kgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kgetnev)	

egen r`wavenum'ksupport6m =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev)  ///
                           if inw`wavenum' == 1
label variable r`wavenum'ksupport6m "r`wavenum'ksupport6m:w`wavenum' missings in r's lack of children support 6-item score"

gen s`wavenum'ksupport6m=.
spouse r`wavenum'ksupport6m, result(s`wavenum'ksupport6m) wave(`wavenum')  
label variable s`wavenum'ksupport6m "s`wavenum'ksupport6m:w`wavenum' missings in s's lack of children support 6-item score"

egen r`wavenum'ksupport6 =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev) ///
                           if inw`wavenum' == 1
replace r`wavenum'ksupport6  = .m if r`wavenum'ksupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport6)

label variable r`wavenum'ksupport6 "r`wavenum'ksupport6:w`wavenum' r's lack of children support 6-item score"

gen s`wavenum'ksupport6 =.
spouse r`wavenum'ksupport6, result(s`wavenum'ksupport6) wave(`wavenum')
label variable s`wavenum'ksupport6 "s`wavenum'ksupport6:w`wavenum' s's lack of children support 6-item score"

drop xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev

******other family members support***
***understand the way you feel
gen r`wavenum'oustdfe = . 
replace r`wavenum'oustdfe = .m if (outscw3 == 2 | inlist(scfama,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oustdfe = scfama if inrange(scfama,1,4)

label variable r`wavenum'oustdfe "r`wavenum'oustdfe:w`wavenum' r thinks other family members understand the way he/she feels" 
label value r`wavenum'oustdfe attnof

*wave 3 understand the way you feel
gen s`wavenum'oustdfe =.
spouse r`wavenum'oustdfe, result(s`wavenum'oustdfe) wave(`wavenum')
label variable s`wavenum'oustdfe "s`wavenum'oustdfe:w`wavenum' s thinks other family members understand the way he/she feels"
label value s`wavenum'oustdfe attnof

***rely on serious problem
gen r`wavenum'orely = . 
replace r`wavenum'orely = .m if (outscw3 == 2 | inlist(scfamb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'orely = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'orely = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'orely = scfamb if inrange(scfamb,1,4)

label variable r`wavenum'orely "r`wavenum'orely:w`wavenum' r can rely on other family members for a serious problem" 

label value r`wavenum'orely attnof

*wave 3 rely on serious problem
gen s`wavenum'orely =.
spouse r`wavenum'orely, result(s`wavenum'orely) wave(`wavenum')
label variable s`wavenum'orely "s`wavenum'orely:w`wavenum' s can rely on other family members for a serious problem"
label value s`wavenum'orely attnof

***open up when need tp talk about worries
gen r`wavenum'oopenup = . 
replace r`wavenum'oopenup = .m if (outscw3 == 2 | inlist(scfamc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oopenup = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'oopenup = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oopenup = scfamc if inrange(scfamc,1,4)

label variable r`wavenum'oopenup "r`wavenum'oopenup:w`wavenum' r can open up their worries to other family members" 
label value r`wavenum'oopenup attnof

*wave 3 open up when need tp talk about worries
gen s`wavenum'oopenup =.
spouse r`wavenum'oopenup, result(s`wavenum'oopenup) wave(`wavenum')
label variable s`wavenum'oopenup "s`wavenum'oopenup:w`wavenum' s can open up their worries to other family members"
label value s`wavenum'oopenup attnof

****Criticize by other family members
gen r`wavenum'ocritze = . 
replace r`wavenum'ocritze = .m if (outscw3 == 2 | inlist(scfamd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'ocritze = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ocritze = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ocritze = scfamd if inrange(scfamd,1,4)

label variable r`wavenum'ocritze "r`wavenum'ocritze:w`wavenum' how much other family members criticize r" 
label value r`wavenum'ocritze attnof

*wave 3 Criticize by other family members
gen s`wavenum'ocritze =.
spouse r`wavenum'ocritze, result(s`wavenum'ocritze) wave(`wavenum')
label variable s`wavenum'ocritze "s`wavenum'ocritze:w`wavenum' how much other family members criticize s"
label value s`wavenum'ocritze attnof

*****let down when counting on them
gen r`wavenum'oletdow = . 
replace r`wavenum'oletdow = .m if (outscw3 == 2 | inlist(scfame,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oletdow = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'oletdow = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oletdow = scfame if inrange(scfame,1,4)

label variable r`wavenum'oletdow "r`wavenum'oletdow:w`wavenum' other family members let r down when counting on them" 
label value r`wavenum'oletdow attnof

*wave 3 let down when counting on them
gen s`wavenum'oletdow =.
spouse r`wavenum'oletdow, result(s`wavenum'oletdow) wave(`wavenum')
label variable s`wavenum'oletdow "s`wavenum'oletdow:w`wavenum' other family members let s down when counting on them"
label value s`wavenum'oletdow attnof

*****Get on nerves
gen r`wavenum'ogetnev = . 
replace r`wavenum'ogetnev = .m if (outscw3 == 2 | inlist(scfamf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ogetnev = scfamf if inrange(scfamf,1,4)

label variable r`wavenum'ogetnev "r`wavenum'ogetnev:w`wavenum' other family members get on r's nerve" 
label value r`wavenum'ogetnev attnof

*wave 3 get on nerves
gen s`wavenum'ogetnev =.
spouse r`wavenum'ogetnev, result(s`wavenum'ogetnev) wave(`wavenum')
label variable s`wavenum'ogetnev "s`wavenum'ogetnev:w`wavenum' other family members get on s's nerve"
label value s`wavenum'ogetnev attnof

****Other family members support summary****
recode r`wavenum'ocritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ocritze)	
recode r`wavenum'oletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'oletdow)	
recode r`wavenum'ogetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ogetnev)	

egen r`wavenum'osupport6m =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'osupport6m "r`wavenum'osupport6m:w`wavenum' missings in r's lack of other family members support 6-item score"

gen s`wavenum'osupport6m=.
spouse r`wavenum'osupport6m, result(s`wavenum'osupport6m) wave(`wavenum')  
label variable s`wavenum'osupport6m "s`wavenum'osupport6m:w`wavenum' missings in s's lack of other family members support 6-item score"

egen r`wavenum'osupport6 =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) if inw`wavenum' == 1
replace r`wavenum'osupport6  = .m if r`wavenum'osupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'osupport6  = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'osupport6  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport6)

label variable r`wavenum'osupport6 "r`wavenum'osupport6:w`wavenum' r's lack of other family members support 6-item score"

gen s`wavenum'osupport6 =.
spouse r`wavenum'osupport6, result(s`wavenum'osupport6) wave(`wavenum')
label variable s`wavenum'osupport6 "s`wavenum'osupport6:w`wavenum' s's lack of other family members support 6-item score"

drop xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev

******Friend support***
***understand the way you feel
gen r`wavenum'fustdfe = . 
replace r`wavenum'fustdfe = .m if (outscw3 == 2 | inlist(scfrda,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fustdfe = scfrda if inrange(scfrda,1,4)

label variable r`wavenum'fustdfe "r`wavenum'fustdfe:w`wavenum' r thinks friends understand the way he/she feels" 
label value r`wavenum'fustdfe attnf

*wave 3 understand the way you feel
gen s`wavenum'fustdfe =.
spouse r`wavenum'fustdfe, result(s`wavenum'fustdfe) wave(`wavenum')
label variable s`wavenum'fustdfe "s`wavenum'fustdfe:w`wavenum' s thinks friends understand the way he/she feels"
label value s`wavenum'fustdfe attnf

***rely on serious problem
gen r`wavenum'frely = . 
replace r`wavenum'frely = .m if (outscw3 == 2 | inlist(scfrdb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'frely = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'frely = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'frely = scfrdb if inrange(scfrdb,1,4)

label variable r`wavenum'frely "r`wavenum'frely:w`wavenum' r can rely on friends for a serious problem" 
label value r`wavenum'frely attnf

*wave 3 rely on serious problem
gen s`wavenum'frely =.
spouse r`wavenum'frely, result(s`wavenum'frely) wave(`wavenum')
label variable s`wavenum'frely "s`wavenum'frely:w`wavenum' s can rely on friends for a serious problem"
label value s`wavenum'frely attnf

***open up when need tp talk about worries
gen r`wavenum'fopenup = . 
replace r`wavenum'fopenup = .m if (outscw3 == 2 | inlist(scfrdc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fopenup = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fopenup = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fopenup = scfrdc if inrange(scfrdc,1,4)

label variable r`wavenum'fopenup "r`wavenum'fopenup:w`wavenum' r can open up their worries to friends" 
label value r`wavenum'fopenup attnf

*wave 3 open up when need tp talk about worries
gen s`wavenum'fopenup =.
spouse r`wavenum'fopenup, result(s`wavenum'fopenup) wave(`wavenum')
label variable s`wavenum'fopenup "s`wavenum'fopenup:w`wavenum' s can open up their worries to friends"
label value s`wavenum'fopenup attnf

****Criticize by friend
gen r`wavenum'fcritze = . 
replace r`wavenum'fcritze = .m if (outscw3 == 2 | inlist(scfrdd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fcritze = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fcritze = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fcritze = scfrdd if inrange(scfrdd,1,4)

label variable r`wavenum'fcritze "r`wavenum'fcritze:w`wavenum' how much friends criticize r" 
label value r`wavenum'fcritze attnf

*wave 3 Criticize by friend
gen s`wavenum'fcritze =.
spouse r`wavenum'fcritze, result(s`wavenum'fcritze) wave(`wavenum')
label variable s`wavenum'fcritze "s`wavenum'fcritze:w`wavenum' how much friends criticize s"
label value s`wavenum'fcritze attnf

*****let down when counting on them
gen r`wavenum'fletdow = . 
replace r`wavenum'fletdow = .m if (outscw3 == 2 | inlist(scfrde,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fletdow = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fletdow = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fletdow = scfrde if inrange(scfrde,1,4)

label variable r`wavenum'fletdow "r`wavenum'fletdow:w`wavenum' friends let r down when counting on them" 
label value r`wavenum'fletdow attnf

*wave 3 let down when counting on them
gen s`wavenum'fletdow =.
spouse r`wavenum'fletdow, result(s`wavenum'fletdow) wave(`wavenum')
label variable s`wavenum'fletdow "s`wavenum'fletdow:w`wavenum' friends let s down when counting on them"
label value s`wavenum'fletdow attnf

*****Get on nerves
gen r`wavenum'fgetnev = . 
replace r`wavenum'fgetnev = .m if (outscw3 == 2 | inlist(scfrdf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fgetnev = scfrdf if inrange(scfrdf,1,4)

label variable r`wavenum'fgetnev "r`wavenum'fgetnev:w`wavenum' friends gets on r's nerve" 
label value r`wavenum'fgetnev attnf

*wave 3 get on nerves
gen s`wavenum'fgetnev =.
spouse r`wavenum'fgetnev, result(s`wavenum'fgetnev) wave(`wavenum')
label variable s`wavenum'fgetnev "s`wavenum'fgetnev:w`wavenum' friends gets on s's nerve"
label value s`wavenum'fgetnev attnf

****Friends support summary****
recode r`wavenum'fcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fcritze)	
recode r`wavenum'fletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fletdow)	
recode r`wavenum'fgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fgetnev)	

egen r`wavenum'fsupport6m =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'fsupport6m "r`wavenum'fsupport6m:w`wavenum' missings in r's lack of friends support 6-item score"

gen s`wavenum'fsupport6m=.
spouse r`wavenum'fsupport6m, result(s`wavenum'fsupport6m) wave(`wavenum')  
label variable s`wavenum'fsupport6m "s`wavenum'fsupport6m:w`wavenum' missings in s's lack of friends support 6-item score"

egen r`wavenum'fsupport6 =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'fsupport6  = .m if r`wavenum'fsupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .c if inlist(outscw3,-1,-2,3) & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport6)

label variable r`wavenum'fsupport6 "r`wavenum'fsupport6:w`wavenum' r's lack of friends support 6-item score"

gen s`wavenum'fsupport6 =.
spouse r`wavenum'fsupport6, result(s`wavenum'fsupport6) wave(`wavenum')
label variable s`wavenum'fsupport6 "s`wavenum'fsupport6:w`wavenum' s's lack of friends support 6-item score"

drop xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev


**drop ELSA wave core file raw variables***
drop `stre_w3_core'
*
***drop rand ELSA variables***
drop `stre_w3_index'


*****************************************************************************************

pause on
*set wave number
local wavenum =4
local pre_wavenum = `wavenum' -1

*file core**
local stre_w4_core scempl scworka scworkb scworkc scworkd scworke scworkf scworkg scworkh scworki /// 
                   scworkj scworkk scworkl scfeela scfeelb scfeelc scfeeld scptra scptrb scptrc scptrd scptre scptrf ///
                   scptr scchd scchda scchdb scchdc scchdd scchde scchdf scfam scfama scfamb scfamc scfamd scfame scfamf ///
                   scfrd scfrda scfrdb scfrdc scfrdd scfrde scfrdf
                    
merge 1:1 idauniq using "$wave_4_core", keepusing(`stre_w4_core') nogen

*file index
local stre_w`wavenum'_index outscw4

merge 1:1 idauniq using "$index", keepusing(`stre_w4_index') nogen



***Satisfied with the job***
gen r`wavenum'satjob = . 
replace r`wavenum'satjob = .m if (outscw4 == 2 | inlist(scworka,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'satjob = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'satjob = .w if scempl == 2
replace r`wavenum'satjob = 1 if scworka == 4 
replace r`wavenum'satjob = 2 if scworka == 3
replace r`wavenum'satjob = 3 if scworka == 2
replace r`wavenum'satjob = 4 if scworka == 1

label variable r`wavenum'satjob "r`wavenum'satjob:w`wavenum' whether r is satisfied with job"
label values r`wavenum'satjob job


*wave 4 spouse satisfied with the job
gen s`wavenum'satjob =.
spouse r`wavenum'satjob, result(s`wavenum'satjob) wave(`wavenum')
label variable s`wavenum'satjob "s`wavenum'satjob:w`wavenum' whether s is satisfied with job"
label value s`wavenum'satjob job

***physically demanding***
gen r`wavenum'demand = . 
replace r`wavenum'demand = .m if (outscw4 == 2 | inlist(scworkb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'demand = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'demand = .w if scempl == 2
replace r`wavenum'demand = 1 if scworkb == 4 
replace r`wavenum'demand = 2 if scworkb == 3
replace r`wavenum'demand = 3 if scworkb == 2
replace r`wavenum'demand = 4 if scworkb == 1

label variable r`wavenum'demand "r`wavenum'demand:w`wavenum' whether r's job is physically demanding"
label values r`wavenum'demand job

*wave 4 spouse job demanding
gen s`wavenum'demand =.
spouse r`wavenum'demand, result(s`wavenum'demand) wave(`wavenum')
label variable s`wavenum'demand "s`wavenum'demand:w`wavenum' whether s's job is physically demanding"
label value s`wavenum'demand job

***Deserve recognition***
gen r`wavenum'deserve = . 
replace r`wavenum'deserve = .m if (outscw4 == 2 | inlist(scworkc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'deserve = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'deserve = .w if scempl == 2
replace r`wavenum'deserve = 1 if scworkc == 4 
replace r`wavenum'deserve = 2 if scworkc == 3
replace r`wavenum'deserve = 3 if scworkc == 2
replace r`wavenum'deserve = 4 if scworkc == 1

label variable r`wavenum'deserve "r`wavenum'deserve:w`wavenum' whether r received deserved recognition from work"
label values r`wavenum'deserve job

*wave 4 spouse deserve recognition
gen s`wavenum'deserve =.
spouse r`wavenum'deserve, result(s`wavenum'deserve) wave(`wavenum')
label variable s`wavenum'deserve "s`wavenum'deserve:w`wavenum' whether s received deserved recognition from work"
label value s`wavenum'deserve job

***Salary is adequate***
gen r`wavenum'salary = . 
replace r`wavenum'salary = .m if (outscw4 == 2 | inlist(scworkd,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'salary = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'salary = .w if scempl == 2
replace r`wavenum'salary = 1 if scworkd == 4 
replace r`wavenum'salary = 2 if scworkd == 3
replace r`wavenum'salary = 3 if scworkd == 2
replace r`wavenum'salary = 4 if scworkd == 1

label variable r`wavenum'salary "r`wavenum'salary:w`wavenum' whether r's salary is adequate"
label values r`wavenum'salary job

*wave 4 spouse salary is adequate
gen s`wavenum'salary =.
spouse r`wavenum'salary, result(s`wavenum'salary) wave(`wavenum')
label variable s`wavenum'salary "s`wavenum'salary:w`wavenum' whether s's salary is adequate"
label value s`wavenum'salary job

***Job promotion is poor***
gen r`wavenum'promot = . 
replace r`wavenum'promot = .m if (outscw4 == 2 | inlist(scworke,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'promot = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'promot = .w if scempl == 2
replace r`wavenum'promot = 1 if scworke == 4 
replace r`wavenum'promot = 2 if scworke == 3
replace r`wavenum'promot = 3 if scworke == 2
replace r`wavenum'promot = 4 if scworke == 1

label variable r`wavenum'promot "r`wavenum'promot:w`wavenum' whether r job promotion prospects are poor"
label values r`wavenum'promot job

*wave 4 spouse job promotion is poor
gen s`wavenum'promot =.
spouse r`wavenum'promot, result(s`wavenum'promot) wave(`wavenum')
label variable s`wavenum'promot "s`wavenum'promot:w`wavenum' whether s job promotion prospects are poor"
label value s`wavenum'promot job

***Job security***
gen r`wavenum'secure = . 
replace r`wavenum'secure = .m if (outscw4 == 2 | inlist(scworkf,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'secure = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'secure = .w if scempl == 2
replace r`wavenum'secure = 1 if scworkf == 4 
replace r`wavenum'secure = 2 if scworkf == 3
replace r`wavenum'secure = 3 if scworkf == 2
replace r`wavenum'secure = 4 if scworkf == 1

label variable r`wavenum'secure "r`wavenum'secure:w`wavenum' whether r job security is poor"
label values r`wavenum'secure job

*wave 4 spouse job security
gen s`wavenum'secure =.
spouse r`wavenum'secure, result(s`wavenum'secure) wave(`wavenum')
label variable s`wavenum'secure "s`wavenum'secure:w`wavenum' whether s job security is poor"
label value s`wavenum'secure job

***Constant time pressure due to a heavy workload***
gen r`wavenum'timepre = . 
replace r`wavenum'timepre = .m if (outscw4 == 2 | inlist(scworkg,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'timepre = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'timepre = .w if scempl == 2
replace r`wavenum'timepre = 1 if scworkg == 4 
replace r`wavenum'timepre = 2 if scworkg == 3
replace r`wavenum'timepre = 3 if scworkg == 2
replace r`wavenum'timepre = 4 if scworkg == 1

label variable r`wavenum'timepre "r`wavenum'timepre:w`wavenum' whether r is under constant time pressure due to a heavy workload"
label values r`wavenum'timepre job

*wave 4 spouse constant time pressure due to heavy workload
gen s`wavenum'timepre =.
spouse r`wavenum'timepre, result(s`wavenum'timepre) wave(`wavenum')
label variable s`wavenum'timepre "s`wavenum'timepre:w`wavenum' whether s is under constant time pressure due to a heavy workload"
label value s`wavenum'timepre job

***has the opportunity to develop new skills*
gen r`wavenum'ltlfree = . 
replace r`wavenum'ltlfree = .m if (outscw4 == 2 | inlist(scworkh,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .w if scempl == 2
replace r`wavenum'ltlfree = 1 if scworkh == 4 
replace r`wavenum'ltlfree = 2 if scworkh == 3
replace r`wavenum'ltlfree = 3 if scworkh == 2
replace r`wavenum'ltlfree = 4 if scworkh == 1

label variable r`wavenum'ltlfree "r`wavenum'ltlfree:w`wavenum' whether r has very little freedom to do work"
label values r`wavenum'ltlfree job

*wave 4 spouse has the opportunity to develop new skills
gen s`wavenum'ltlfree =.
spouse r`wavenum'ltlfree, result(s`wavenum'ltlfree) wave(`wavenum')
label variable s`wavenum'ltlfree "s`wavenum'ltlfree:w`wavenum' whether s has very little freedom to do work"
label value s`wavenum'ltlfree job

***develop new skills***
gen r`wavenum'nskills = . 
replace r`wavenum'nskills = .m if (outscw4 == 2 | inlist(scworki,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'nskills = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'nskills = .w if scempl == 2
replace r`wavenum'nskills = 1 if scworki == 4 
replace r`wavenum'nskills = 2 if scworki == 3
replace r`wavenum'nskills = 3 if scworki == 2
replace r`wavenum'nskills = 4 if scworki == 1

label variable r`wavenum'nskills "r`wavenum'nskills:w`wavenum' whether r has the opportunity to develop new skills"
label values r`wavenum'nskills job

*wave 4 spouse develop new skills
gen s`wavenum'nskills =.
spouse r`wavenum'nskills, result(s`wavenum'nskills) wave(`wavenum')
label variable s`wavenum'nskills "s`wavenum'nskills:w`wavenum' whether s has the opportunity to develop new skills"
label value s`wavenum'nskills job

***support in difficult situation***
gen r`wavenum'support = . 
replace r`wavenum'support = .m if (outscw4 == 2 | inlist(scworkj,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'support = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'support = .w if scempl == 2
replace r`wavenum'support = 1 if scworkj == 4 
replace r`wavenum'support = 2 if scworkj == 3
replace r`wavenum'support = 3 if scworkj == 2
replace r`wavenum'support = 4 if scworkj == 1

label variable r`wavenum'support "r`wavenum'support:w`wavenum' whether r received adequate support in difficult situations"
label values r`wavenum'support job

*wave 4 spouse support in difficult situation
gen s`wavenum'support =.
spouse r`wavenum'support, result(s`wavenum'support) wave(`wavenum')
label variable s`wavenum'support "s`wavenum'support:w`wavenum' whether s received adequate support in difficult situations"
label value s`wavenum'support job

***Feel control over what happens in most situations***
gen r`wavenum'control = . 
replace r`wavenum'control = .m if (outscw4 == 2 | inlist(scworkk,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'control = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'control = .w if scempl == 2
replace r`wavenum'control = 1 if scworkk == 4 
replace r`wavenum'control = 2 if scworkk == 3
replace r`wavenum'control = 3 if scworkk == 2
replace r`wavenum'control = 4 if scworkk == 1

label variable r`wavenum'control "r`wavenum'control:w`wavenum' whether r feels control over what happens in most situations"
label values r`wavenum'control job

*wave 4 spouse feel control over what happens in most situations
gen s`wavenum'control =.
spouse r`wavenum'control, result(s`wavenum'control) wave(`wavenum')
label variable s`wavenum'control "s`wavenum'control:w`wavenum' whether s feels control over what happens in most situations"
label value s`wavenum'control job

***Have to work very fast***
gen r`wavenum'workfast = . 
replace r`wavenum'workfast = .m if (outscw4 == 2 | inlist(scworkl,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'workfast = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'workfast = .w if scempl == 2
replace r`wavenum'workfast = 1 if scworkl == 4 
replace r`wavenum'workfast = 2 if scworkl == 3
replace r`wavenum'workfast = 3 if scworkl == 2
replace r`wavenum'workfast = 4 if scworkl == 1

label variable r`wavenum'workfast "r`wavenum'workfast:w`wavenum' whether r has to work very fast"
label values r`wavenum'workfast job

*wave 4 spouse has to work very fast
gen s`wavenum'workfast =.
spouse r`wavenum'workfast, result(s`wavenum'workfast) wave(`wavenum')
label variable s`wavenum'workfast "s`wavenum'workfast:w`wavenum' whether s has to work very fast"
label value s`wavenum'workfast job

***Job stress summary***
recode r`wavenum'satjob (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'satjob)
recode r`wavenum'deserve  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'deserve)	
recode r`wavenum'salary (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'salary)	
recode r`wavenum'nskills  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'nskills)	
recode r`wavenum'support  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'support)	
recode r`wavenum'control (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'control)	

egen r`wavenum'jobsumm =rowmiss(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) if inw`wavenum' == 1
label variable r`wavenum'jobsumm "r`wavenum'jobsumm:w`wavenum' missings in r's job stress summary mean score"

gen s`wavenum'jobsumm =.
spouse r`wavenum'jobsumm, result(s`wavenum'jobsumm) wave(`wavenum')
label variable s`wavenum'jobsumm "s`wavenum'jobsumm:w`wavenum' missings in s's job stress summary mean score"

egen r`wavenum'jobsum =rowmean(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) 
replace r`wavenum'jobsum  = .m if r`wavenum'jobsumm ==6 & inw`wavenum' == 1
replace r`wavenum'jobsum = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'jobsum = .w if scempl == 2
label variable r`wavenum'jobsum "r`wavenum'jobsum:w`wavenum' r's job stress summary mean score"

*wave `wavenum' spouse job stress summary
gen s`wavenum'jobsum =.
spouse r`wavenum'jobsum, result(s`wavenum'jobsum) wave(`wavenum')
label variable s`wavenum'jobsum "s`wavenum'jobsum:w`wavenum' s's job stress summary mean score"

drop xr`wavenum'satjob xr`wavenum'deserve xr`wavenum'salary xr`wavenum'nskills xr`wavenum'support xr`wavenum'control

***feel lack of companionship***
gen r`wavenum'complac = . 
replace r`wavenum'complac = .m if (outscw4 == 2 | inlist(scfeela,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'complac = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'complac = scfeela if inrange(scfeela,1,3)

label variable r`wavenum'complac "r`wavenum'complac:w`wavenum' whether r often feels lack of companionship"
label value r`wavenum'complac tim

*wave 4 feel lack of companionship
gen s`wavenum'complac =.
spouse r`wavenum'complac, result(s`wavenum'complac) wave(`wavenum')
label variable s`wavenum'complac "s`wavenum'complac:w`wavenum' whether s often feels lack of companionship"
label value s`wavenum'complac tim

***feel left out***
gen r`wavenum'leftout = . 
replace r`wavenum'leftout = .m if (outscw4 == 2 | inlist(scfeelb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'leftout = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'leftout = scfeelb if inrange(scfeelb,1,3)

label variable r`wavenum'leftout "r`wavenum'leftout:w`wavenum' whether r often feels left out"
label value r`wavenum'leftout tim

*wave 4 feel left out
gen s`wavenum'leftout =.
spouse r`wavenum'leftout, result(s`wavenum'leftout) wave(`wavenum')
label variable s`wavenum'leftout "s`wavenum'leftout:w`wavenum' whether s often feels left out"
label value s`wavenum'leftout tim


***feel isolated from others***
gen r`wavenum'isolate = . 
replace r`wavenum'isolate = .m if (outscw4 == 2 | inlist(scfeelc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'isolate = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'isolate = scfeelc if inrange(scfeelc,1,3)

label variable r`wavenum'isolate "r`wavenum'isolate:w`wavenum' whether r often feels isolated from others" 
label value r`wavenum'isolate tim

*wave 4 feel isolated from others
gen s`wavenum'isolate =.
spouse r`wavenum'isolate, result(s`wavenum'isolate) wave(`wavenum')
label variable s`wavenum'isolate "s`wavenum'isolate:w`wavenum' whether s often feels isolated from others"
label value s`wavenum'isolate tim


***feel in tune with the people around***
gen r`wavenum'intune = . 
replace r`wavenum'intune = .m if (outscw4 == 2 | inlist(scfeeld,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'intune = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'intune = scfeeld if inrange(scfeeld,1,3)

label variable r`wavenum'intune "r`wavenum'intune:w`wavenum' whether r often feels not in tune with the people around" 
label value r`wavenum'intune tim

*wave 4 feel in tune with the people around
gen s`wavenum'intune =.
spouse r`wavenum'intune, result(s`wavenum'intune) wave(`wavenum')
label variable s`wavenum'intune "s`wavenum'intune:w`wavenum' whether s often feels not in tune with the people around"
label value s`wavenum'intune tim

****summary score 4 components
recode r`wavenum'intune (1=3) (2=2) (3=1), gen(xr`wavenum'intune) 
egen r`wavenum'lnlysm =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate r`wavenum'intune) if inw`wavenum' == 1
label variable r`wavenum'lnlysm "r`wavenum'lnlysm:w`wavenum' missings in r's 4-item loneliness summary mean score"

gen s`wavenum'lnlysm =.
spouse r`wavenum'lnlysm, result(s`wavenum'lnlysm) wave(`wavenum')
label variable s`wavenum'lnlysm "s`wavenum'lnlysm:w`wavenum' missings in s's 4-item loneliness summary mean score"

egen r`wavenum'lnlys =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate xr`wavenum'intune) if inw`wavenum' == 1
replace r`wavenum'lnlys  = .m if r`wavenum'lnlysm == 4 & inw`wavenum' == 1
replace r`wavenum'lnlys  = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1

label variable r`wavenum'lnlys "r`wavenum'lnlys:w`wavenum' r's 4-item loneliness summary mean score"

gen s`wavenum'lnlys =.
spouse r`wavenum'lnlys, result(s`wavenum'lnlys) wave(`wavenum')
label variable s`wavenum'lnlys "s`wavenum'lnlys:w`wavenum' s's 4-item loneliness summary mean score"

drop xr`wavenum'intune

****summary score 3 components
egen r`wavenum'lnlys3m =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
label variable r`wavenum'lnlys3m "r`wavenum'lnlys3m:w`wavenum' missings in r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3m =.
spouse r`wavenum'lnlys3m, result(s`wavenum'lnlys3m) wave(`wavenum')
label variable s`wavenum'lnlys3m "s`wavenum'lnlys3m:w`wavenum' missings in s's 3-item loneliness summary mean score"

egen r`wavenum'lnlys3 =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
replace r`wavenum'lnlys3  = .m if r`wavenum'complac == .m & r`wavenum'leftout == .m & r`wavenum'isolate == .m
replace r`wavenum'lnlys3  = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'lnlys3  = .r if r`wavenum'complac == .r & r`wavenum'leftout == .r & r`wavenum'isolate == .r 


label variable r`wavenum'lnlys3 "r`wavenum'lnlys3:w`wavenum' r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3 =.
spouse r`wavenum'lnlys3, result(s`wavenum'lnlys3) wave(`wavenum')
label variable s`wavenum'lnlys3 "s`wavenum'lnlys3:w`wavenum' s's 3-item loneliness summary mean score"

*************************
******Spouse support***  here need to figure it out now
***understand the way you feel
gen r`wavenum'sustdfe = . 
replace r`wavenum'sustdfe = .m if (outscw4 == 2 | inlist(scptra,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .n if  scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sustdfe = scptra if inrange(scptra,1,4)

label variable r`wavenum'sustdfe "r`wavenum'sustdfe:w`wavenum' r thinks spouse understands the way he/she feels" 
label value r`wavenum'sustdfe attns

*wave 4 understand the way you feel
gen s`wavenum'sustdfe =.
spouse r`wavenum'sustdfe, result(s`wavenum'sustdfe) wave(`wavenum')
label variable s`wavenum'sustdfe "s`wavenum'sustdfe:w`wavenum' s thinks spouse understands the way he/she feels"
label value s`wavenum'sustdfe attns

***rely on serious problem
gen r`wavenum'srely = . 
replace r`wavenum'srely = .m if (outscw4 == 2 | inlist(scptrb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'srely = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'srely = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'srely = scptrb if inrange(scptrb,1,4)

label variable r`wavenum'srely "r`wavenum'srely:w`wavenum' r can rely on spouse for a serious problem" 
label value r`wavenum'srely attns

*wave 4 rely on serious problem
gen s`wavenum'srely =.
spouse r`wavenum'srely, result(s`wavenum'srely) wave(`wavenum')
label variable s`wavenum'srely "s`wavenum'srely:w`wavenum' s can rely on spouse for a serious problem"
label value s`wavenum'srely attns

***open up when need to talk about worries
gen r`wavenum'sopenup = . 
replace r`wavenum'sopenup = .m if (outscw4 == 2 | inlist(scptrc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sopenup = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'sopenup = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sopenup = scptrc if inrange(scptrc,1,4)

label variable r`wavenum'sopenup "r`wavenum'sopenup:w`wavenum' r can open up their worries to spouse" 
label value r`wavenum'sopenup attns

*wave 4 open up when need tp talk about worries
gen s`wavenum'sopenup =.
spouse r`wavenum'sopenup, result(s`wavenum'sopenup) wave(`wavenum')
label variable s`wavenum'sopenup "s`wavenum'sopenup:w`wavenum' s can open up their worries to spouse"
label value s`wavenum'sopenup attns

****Criticize  by spouse
gen r`wavenum'scritze = . 
replace r`wavenum'scritze = .m if (outscw4 == 2 | inlist(scptrd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'scritze = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'scritze = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'scritze = scptrd if inrange(scptrd,1,4)

label variable r`wavenum'scritze "r`wavenum'scritze:w`wavenum' how much spouse criticizes r" 
label value r`wavenum'scritze attns

*wave 4 Criticize  by spouse
gen s`wavenum'scritze =.
spouse r`wavenum'scritze, result(s`wavenum'scritze) wave(`wavenum')
label variable s`wavenum'scritze "s`wavenum'scritze:w`wavenum' how much spouse criticizes s"
label value s`wavenum'scritze attns

*****let down when counting on them
gen r`wavenum'sletdow = . 
replace r`wavenum'sletdow = .m if (outscw4 == 2 | inlist(scptre,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sletdow = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'sletdow = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sletdow = scptre if inrange(scptre,1,4)

label variable r`wavenum'sletdow "r`wavenum'sletdow:w`wavenum' spouse let r down when counting on him/her" 
label value r`wavenum'sletdow attns

*wave 4 let down when counting on them
gen s`wavenum'sletdow =.
spouse r`wavenum'sletdow, result(s`wavenum'sletdow) wave(`wavenum')
label variable s`wavenum'sletdow "s`wavenum'sletdow:w`wavenum' spouse let s down when counting on him/her"
label value s`wavenum'sletdow attns

*****Get on nerves
gen r`wavenum'sgetnev = . 
replace r`wavenum'sgetnev = .m if (outscw4 == 2 | inlist(scptrf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sgetnev = scptrf if inrange(scptrf,1,4)

label variable r`wavenum'sgetnev "r`wavenum'sgetnev:w`wavenum' spouse gets on r's nerve" 
label value r`wavenum'sgetnev attns

*wave 4 get on nerves
gen s`wavenum'sgetnev =.
spouse r`wavenum'sgetnev, result(s`wavenum'sgetnev) wave(`wavenum')
label variable s`wavenum'sgetnev "s`wavenum'sgetnev:w`wavenum' spouse gets on s's nerve"
label value s`wavenum'sgetnev attns


****spouse support summary****
recode r`wavenum'scritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'scritze)	
recode r`wavenum'sletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sletdow)	
recode r`wavenum'sgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sgetnev)	

egen r`wavenum'ssupport6m =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                           if inw`wavenum' == 1
label variable  r`wavenum'ssupport6m "r`wavenum'ssupport6m:w`wavenum' missings in r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6m=.
spouse r`wavenum'ssupport6m, result(s`wavenum'ssupport6m) wave(`wavenum')  
label variable s`wavenum'ssupport6m "s`wavenum'ssupport6m:w`wavenum' missings in s's lack of spouse support 6-item score"

egen r`wavenum'ssupport6 =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'ssupport6  = .m if r`wavenum'ssupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .n if scptr == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport6)

label variable r`wavenum'ssupport6 "r`wavenum'ssupport6:w`wavenum' r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6 =.
spouse r`wavenum'ssupport6, result(s`wavenum'ssupport6) wave(`wavenum')
label variable s`wavenum'ssupport6 "s`wavenum'ssupport6:w`wavenum' s's lack of spouse support 6-item score"

drop xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev

******Child support***
***understand the way you feel
gen r`wavenum'kustdfe = . 
replace r`wavenum'kustdfe = .m if (outscw4 == 2 | inlist(scchda,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kustdfe = scchda if inrange(scchda,1,4)

label variable r`wavenum'kustdfe "r`wavenum'kustdfe:w`wavenum' r thinks children understand the way he/she feels" 
label value r`wavenum'kustdfe attnk

*wave 4 understand the way you feel
gen s`wavenum'kustdfe =.
spouse r`wavenum'kustdfe, result(s`wavenum'kustdfe) wave(`wavenum')
label variable s`wavenum'kustdfe "s`wavenum'kustdfe:w`wavenum' s thinks children understand the way he/she feels"
label value s`wavenum'kustdfe attnk

***rely on serious problem
gen r`wavenum'krely = . 
replace r`wavenum'krely = .m if (outscw4 == 2 | inlist(scchdb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'krely = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'krely = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'krely = scchdb if inrange(scchdb,1,4)

label variable r`wavenum'krely "r`wavenum'krely:w`wavenum' r can rely on children for a serious problem" 
label value r`wavenum'krely attnk

*wave 4 rely on serious problem
gen s`wavenum'krely =.
spouse r`wavenum'krely, result(s`wavenum'krely) wave(`wavenum')
label variable s`wavenum'krely "s`wavenum'krely:w`wavenum' s can rely on children for a serious problem"
label value s`wavenum'krely attnk

***open up when need tp talk about worries
gen r`wavenum'kopenup = . 
replace r`wavenum'kopenup = .m if (outscw4 == 2 | inlist(scchdc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kopenup = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kopenup = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kopenup = scchdc if inrange(scchdc,1,4)

label variable r`wavenum'kopenup "r`wavenum'kopenup:w`wavenum' r can open up their worries to children" 
label value r`wavenum'kopenup attnk

*wave 4 open up when need tp talk about worries
gen s`wavenum'kopenup =.
spouse r`wavenum'kopenup, result(s`wavenum'kopenup) wave(`wavenum')
label variable s`wavenum'kopenup "s`wavenum'kopenup:w`wavenum' s can open up their worries to children"
label value s`wavenum'kopenup attnk

****Criticize by children
gen r`wavenum'kcritze = . 
replace r`wavenum'kcritze = .m if (outscw4 == 2 | inlist(scchdd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kcritze = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kcritze = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kcritze = scchdd if inrange(scchdd,1,4)

label variable r`wavenum'kcritze "r`wavenum'kcritze:w`wavenum' how much children criticize r" 
label value r`wavenum'kcritze attnk

*wave 4 Criticize by children
gen s`wavenum'kcritze =.
spouse r`wavenum'kcritze, result(s`wavenum'kcritze) wave(`wavenum')
label variable s`wavenum'kcritze "s`wavenum'kcritze:w`wavenum' how much children criticize s"
label value s`wavenum'kcritze attnk

*****let down when counting on them
gen r`wavenum'kletdow = . 
replace r`wavenum'kletdow = .m if (outscw4 == 2 | inlist(scchde,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kletdow = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kletdow = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kletdow = scchde if inrange(scchde,1,4)

label variable r`wavenum'kletdow "r`wavenum'kletdow:w`wavenum' children let r down when counting on them" 
label value r`wavenum'kletdow attnk

*wave 4 let down when counting on them
gen s`wavenum'kletdow =.
spouse r`wavenum'kletdow, result(s`wavenum'kletdow) wave(`wavenum')
label variable s`wavenum'kletdow "s`wavenum'kletdow:w`wavenum' children let s down when counting on them"
label value s`wavenum'kletdow attnk

*****Get on nerves
gen r`wavenum'kgetnev = . 
replace r`wavenum'kgetnev = .m if (outscw4 == 2 | inlist(scchdf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kgetnev = scchdf if inrange(scchdf,1,4)

label variable r`wavenum'kgetnev "r`wavenum'kgetnev:w`wavenum' children get on r's nerve" 
label value r`wavenum'kgetnev attnk

*wave 4 get on nerves
gen s`wavenum'kgetnev =.
spouse r`wavenum'kgetnev, result(s`wavenum'kgetnev) wave(`wavenum')
label variable s`wavenum'kgetnev "s`wavenum'kgetnev:w`wavenum' children get on s's nerve"
label value s`wavenum'kgetnev attnk

****Children support summary****
recode r`wavenum'kcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kcritze)	
recode r`wavenum'kletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kletdow)	
recode r`wavenum'kgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kgetnev)	

egen r`wavenum'ksupport6m =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev)  ///
                           if inw`wavenum' == 1
label variable r`wavenum'ksupport6m "r`wavenum'ksupport6m:w`wavenum' missings in r's lack of children support 6-item score"

gen s`wavenum'ksupport6m=.
spouse r`wavenum'ksupport6m, result(s`wavenum'ksupport6m) wave(`wavenum')  
label variable s`wavenum'ksupport6m "s`wavenum'ksupport6m:w`wavenum' missings in s's lack of children support 6-item score"

egen r`wavenum'ksupport6 =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev) ///
                           if inw`wavenum' == 1
replace r`wavenum'ksupport6  = .m if r`wavenum'ksupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport6)

label variable r`wavenum'ksupport6 "r`wavenum'ksupport6:w`wavenum' r's lack of children support 6-item score"

gen s`wavenum'ksupport6 =.
spouse r`wavenum'ksupport6, result(s`wavenum'ksupport6) wave(`wavenum')
label variable s`wavenum'ksupport6 "s`wavenum'ksupport6:w`wavenum' s's lack of children support 6-item score"

drop xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev

******other family members support***
***understand the way you feel
gen r`wavenum'oustdfe = . 
replace r`wavenum'oustdfe = .m if (outscw4 == 2 | inlist(scfama,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oustdfe = scfama if inrange(scfama,1,4)

label variable r`wavenum'oustdfe "r`wavenum'oustdfe:w`wavenum' r thinks other family members understand the way he/she feels" 
label value r`wavenum'oustdfe attnof

*wave 4 understand the way you feel
gen s`wavenum'oustdfe =.
spouse r`wavenum'oustdfe, result(s`wavenum'oustdfe) wave(`wavenum')
label variable s`wavenum'oustdfe "s`wavenum'oustdfe:w`wavenum' s thinks other family members understand the way he/she feels"
label value s`wavenum'oustdfe attnof

***rely on serious problem
gen r`wavenum'orely = . 
replace r`wavenum'orely = .m if (outscw4 == 2 | inlist(scfamb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'orely = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'orely = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'orely = scfamb if inrange(scfamb,1,4)

label variable r`wavenum'orely "r`wavenum'orely:w`wavenum' r can rely on other family members for a serious problem" 

label value r`wavenum'orely attnof

*wave 4 rely on serious problem
gen s`wavenum'orely =.
spouse r`wavenum'orely, result(s`wavenum'orely) wave(`wavenum')
label variable s`wavenum'orely "s`wavenum'orely:w`wavenum' s can rely on other family members for a serious problem"
label value s`wavenum'orely attnof

***open up when need tp talk about worries
gen r`wavenum'oopenup = . 
replace r`wavenum'oopenup = .m if (outscw4 == 2 | inlist(scfamc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oopenup = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'oopenup = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oopenup = scfamc if inrange(scfamc,1,4)

label variable r`wavenum'oopenup "r`wavenum'oopenup:w`wavenum' r can open up their worries to other family members" 
label value r`wavenum'oopenup attnof

*wave 4 open up when need tp talk about worries
gen s`wavenum'oopenup =.
spouse r`wavenum'oopenup, result(s`wavenum'oopenup) wave(`wavenum')
label variable s`wavenum'oopenup "s`wavenum'oopenup:w`wavenum' s can open up their worries to other family members"
label value s`wavenum'oopenup attnof

****Criticize by other family members
gen r`wavenum'ocritze = . 
replace r`wavenum'ocritze = .m if (outscw4 == 2 | inlist(scfamd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'ocritze = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ocritze = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ocritze = scfamd if inrange(scfamd,1,4)

label variable r`wavenum'ocritze "r`wavenum'ocritze:w`wavenum' how much other family members criticize r" 
label value r`wavenum'ocritze attnof

*wave 4 Criticize by other family members
gen s`wavenum'ocritze =.
spouse r`wavenum'ocritze, result(s`wavenum'ocritze) wave(`wavenum')
label variable s`wavenum'ocritze "s`wavenum'ocritze:w`wavenum' how much other family members criticize s"
label value s`wavenum'ocritze attnof

*****let down when counting on them
gen r`wavenum'oletdow = . 
replace r`wavenum'oletdow = .m if (outscw4 == 2 | inlist(scfame,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'oletdow = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'oletdow = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oletdow = scfame if inrange(scfame,1,4)

label variable r`wavenum'oletdow "r`wavenum'oletdow:w`wavenum' other family members let r down when counting on them" 
label value r`wavenum'oletdow attnof

*wave 4 let down when counting on them
gen s`wavenum'oletdow =.
spouse r`wavenum'oletdow, result(s`wavenum'oletdow) wave(`wavenum')
label variable s`wavenum'oletdow "s`wavenum'oletdow:w`wavenum' other family members let s down when counting on them"
label value s`wavenum'oletdow attnof

*****Get on nerves
gen r`wavenum'ogetnev = . 
replace r`wavenum'ogetnev = .m if (outscw4 == 2 | inlist(scfamf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ogetnev = scfamf if inrange(scfamf,1,4)

label variable r`wavenum'ogetnev "r`wavenum'ogetnev:w`wavenum' other family members get on r's nerve" 
label value r`wavenum'ogetnev attnof

*wave 4 get on nerves
gen s`wavenum'ogetnev =.
spouse r`wavenum'ogetnev, result(s`wavenum'ogetnev) wave(`wavenum')
label variable s`wavenum'ogetnev "s`wavenum'ogetnev:w`wavenum' other family members get on s's nerve"
label value s`wavenum'ogetnev attnof

****Other family members support summary****
recode r`wavenum'ocritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ocritze)	
recode r`wavenum'oletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'oletdow)	
recode r`wavenum'ogetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ogetnev)	

egen r`wavenum'osupport6m =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'osupport6m "r`wavenum'osupport6m:w`wavenum' missings in r's lack of other family members support 6-item score"

gen s`wavenum'osupport6m=.
spouse r`wavenum'osupport6m, result(s`wavenum'osupport6m) wave(`wavenum')  
label variable s`wavenum'osupport6m "s`wavenum'osupport6m:w`wavenum' missings in s's lack of other family members support 6-item score"

egen r`wavenum'osupport6 =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) if inw`wavenum' == 1
replace r`wavenum'osupport6  = .m if r`wavenum'osupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'osupport6  = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'osupport6  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport6)

label variable r`wavenum'osupport6 "r`wavenum'osupport6:w`wavenum' r's lack of other family members support 6-item score"

gen s`wavenum'osupport6 =.
spouse r`wavenum'osupport6, result(s`wavenum'osupport6) wave(`wavenum')
label variable s`wavenum'osupport6 "s`wavenum'osupport6:w`wavenum' s's lack of other family members support 6-item score"

drop xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev

******Friend support***
***understand the way you feel
gen r`wavenum'fustdfe = . 
replace r`wavenum'fustdfe = .m if (outscw4 == 2 | inlist(scfrda,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fustdfe = scfrda if inrange(scfrda,1,4)

label variable r`wavenum'fustdfe "r`wavenum'fustdfe:w`wavenum' r thinks friends understand the way he/she feels" 
label value r`wavenum'fustdfe attnf

*wave 4 understand the way you feel
gen s`wavenum'fustdfe =.
spouse r`wavenum'fustdfe, result(s`wavenum'fustdfe) wave(`wavenum')
label variable s`wavenum'fustdfe "s`wavenum'fustdfe:w`wavenum' s thinks friends understand the way he/she feels"
label value s`wavenum'fustdfe attnf

***rely on serious problem
gen r`wavenum'frely = . 
replace r`wavenum'frely = .m if (outscw4 == 2 | inlist(scfrdb,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'frely = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'frely = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'frely = scfrdb if inrange(scfrdb,1,4)

label variable r`wavenum'frely "r`wavenum'frely:w`wavenum' r can rely on friends for a serious problem" 
label value r`wavenum'frely attnf

*wave 4 rely on serious problem
gen s`wavenum'frely =.
spouse r`wavenum'frely, result(s`wavenum'frely) wave(`wavenum')
label variable s`wavenum'frely "s`wavenum'frely:w`wavenum' s can rely on friends for a serious problem"
label value s`wavenum'frely attnf

***open up when need tp talk about worries
gen r`wavenum'fopenup = . 
replace r`wavenum'fopenup = .m if (outscw4 == 2 | inlist(scfrdc,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fopenup = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fopenup = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fopenup = scfrdc if inrange(scfrdc,1,4)

label variable r`wavenum'fopenup "r`wavenum'fopenup:w`wavenum' r can open up their worries to friends" 
label value r`wavenum'fopenup attnf

*wave 4 open up when need tp talk about worries
gen s`wavenum'fopenup =.
spouse r`wavenum'fopenup, result(s`wavenum'fopenup) wave(`wavenum')
label variable s`wavenum'fopenup "s`wavenum'fopenup:w`wavenum' s can open up their worries to friends"
label value s`wavenum'fopenup attnf

****Criticize by friend
gen r`wavenum'fcritze = . 
replace r`wavenum'fcritze = .m if (outscw4 == 2 | inlist(scfrdd,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fcritze = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fcritze = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fcritze = scfrdd if inrange(scfrdd,1,4)

label variable r`wavenum'fcritze "r`wavenum'fcritze:w`wavenum' how much friends criticize r" 
label value r`wavenum'fcritze attnf

*wave 4 Criticize by friend
gen s`wavenum'fcritze =.
spouse r`wavenum'fcritze, result(s`wavenum'fcritze) wave(`wavenum')
label variable s`wavenum'fcritze "s`wavenum'fcritze:w`wavenum' how much friends criticize s"
label value s`wavenum'fcritze attnf

*****let down when counting on them
gen r`wavenum'fletdow = . 
replace r`wavenum'fletdow = .m if (outscw4 == 2 | inlist(scfrde,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fletdow = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fletdow = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fletdow = scfrde if inrange(scfrde,1,4)

label variable r`wavenum'fletdow "r`wavenum'fletdow:w`wavenum' friends let r down when counting on them" 
label value r`wavenum'fletdow attnf

*wave 4 let down when counting on them
gen s`wavenum'fletdow =.
spouse r`wavenum'fletdow, result(s`wavenum'fletdow) wave(`wavenum')
label variable s`wavenum'fletdow "s`wavenum'fletdow:w`wavenum' friends let s down when counting on them"
label value s`wavenum'fletdow attnf

*****Get on nerves
gen r`wavenum'fgetnev = . 
replace r`wavenum'fgetnev = .m if (outscw4 == 2 | inlist(scfrdf,-1,-9)) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fgetnev = scfrdf if inrange(scfrdf,1,4)

label variable r`wavenum'fgetnev "r`wavenum'fgetnev:w`wavenum' friends gets on r's nerve" 
label value r`wavenum'fgetnev attnf

*wave 4 get on nerves
gen s`wavenum'fgetnev =.
spouse r`wavenum'fgetnev, result(s`wavenum'fgetnev) wave(`wavenum')
label variable s`wavenum'fgetnev "s`wavenum'fgetnev:w`wavenum' friends gets on s's nerve"
label value s`wavenum'fgetnev attnf

****Friends support summary****
recode r`wavenum'fcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fcritze)	
recode r`wavenum'fletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fletdow)	
recode r`wavenum'fgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fgetnev)	

egen r`wavenum'fsupport6m =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'fsupport6m "r`wavenum'fsupport6m:w`wavenum' missings in r's lack of friends support 6-item score"

gen s`wavenum'fsupport6m=.
spouse r`wavenum'fsupport6m, result(s`wavenum'fsupport6m) wave(`wavenum')  
label variable s`wavenum'fsupport6m "s`wavenum'fsupport6m:w`wavenum' missings in s's lack of friends support 6-item score"

egen r`wavenum'fsupport6 =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'fsupport6  = .m if r`wavenum'fsupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .c if inlist(outscw4,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport6)

label variable r`wavenum'fsupport6 "r`wavenum'fsupport6:w`wavenum' r's lack of friends support 6-item score"

gen s`wavenum'fsupport6 =.
spouse r`wavenum'fsupport6, result(s`wavenum'fsupport6) wave(`wavenum')
label variable s`wavenum'fsupport6 "s`wavenum'fsupport6:w`wavenum' s's lack of friends support 6-item score"

drop xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev


**drop ELSA wave core file raw variables***
drop `stre_w4_core'
*
***drop rand ELSA variables***
drop `stre_w4_index'


*****************************************************************************************

pause on
*set wave number
local wavenum =5
local pre_wavenum = `wavenum' -1

*file core**
local stre_w5_core scempl scworka scworkb scworkc scworkd scworke scworkf scworkg scworkh scworki /// 
                   scworkj scworkk scworkl scfeela scfeelb scfeelc scfeeld scptra scptrb scptrc scptrd scptre scptrf scptrx ///
                   scptr scchd scchda scchdb scchdc scchdd scchde scchdf scchdx scfam scfama scfamb scfamc scfamd scfame scfamf ///
                   scfamx scfrd scfrda scfrdb scfrdc scfrdd scfrde scfrdf scfrdx scdtdre scdtdst scdtdcl scdtdha scdtddr scdtd01 ///
                   scdtd02 scdtd03 scdtd04 scdtd05 scdtd06 scdtd07 scdtd08 scdtd85
                   
merge 1:1 idauniq using "$wave_5_core", keepusing(`stre_w5_core') nogen

*file index
local stre_w`wavenum'_index outscw5

merge 1:1 idauniq using "$index", keepusing(`stre_w5_index') nogen


***Satisfied with the job***
gen r`wavenum'satjob = . 
replace r`wavenum'satjob = .m if (outscw5 == 2 | inlist(scworka,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'satjob = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'satjob = .w if scempl == 2
replace r`wavenum'satjob = 1 if scworka == 4 
replace r`wavenum'satjob = 2 if scworka == 3
replace r`wavenum'satjob = 3 if scworka == 2
replace r`wavenum'satjob = 4 if scworka == 1

label variable r`wavenum'satjob "r`wavenum'satjob:w`wavenum' whether r is satisfied with job"
label values r`wavenum'satjob job

*wave 5 spouse satisfied with the job
gen s`wavenum'satjob =.
spouse r`wavenum'satjob, result(s`wavenum'satjob) wave(`wavenum')
label variable s`wavenum'satjob "s`wavenum'satjob:w`wavenum' whether s is satisfied with job"
label value s`wavenum'satjob job

***physically demanding***
gen r`wavenum'demand = . 
replace r`wavenum'demand = .m if (outscw5 == 2 | inlist(scworkb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'demand = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'demand = .w if scempl == 2
replace r`wavenum'demand = 1 if scworkb == 4 
replace r`wavenum'demand = 2 if scworkb == 3
replace r`wavenum'demand = 3 if scworkb == 2
replace r`wavenum'demand = 4 if scworkb == 1

label variable r`wavenum'demand "r`wavenum'demand:w`wavenum' whether r's job is physically demanding"
label values r`wavenum'demand job

*wave 5 spouse job demanding
gen s`wavenum'demand =.
spouse r`wavenum'demand, result(s`wavenum'demand) wave(`wavenum')
label variable s`wavenum'demand "s`wavenum'demand:w`wavenum' whether s's job is physically demanding"
label value s`wavenum'demand job

***Deserve recognition***
gen r`wavenum'deserve = .
replace r`wavenum'deserve = .m if (outscw5 == 2 | inlist(scworkc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'deserve = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'deserve = .w if scempl == 2
replace r`wavenum'deserve = 1 if scworkc == 4 
replace r`wavenum'deserve = 2 if scworkc == 3
replace r`wavenum'deserve = 3 if scworkc == 2
replace r`wavenum'deserve = 4 if scworkc == 1

label variable r`wavenum'deserve "r`wavenum'deserve:w`wavenum' whether r received deserved recognition from work"
label values r`wavenum'deserve job

*wave 5 spouse deserve recognition
gen s`wavenum'deserve =.
spouse r`wavenum'deserve, result(s`wavenum'deserve) wave(`wavenum')
label variable s`wavenum'deserve "s`wavenum'deserve:w`wavenum' whether s received deserved recognition from work"
label value s`wavenum'deserve job

***Salary is adequate***
gen r`wavenum'salary = . 
replace r`wavenum'salary = .m if (outscw5 == 2 | inlist(scworkd,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'salary = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'salary = .w if scempl == 2
replace r`wavenum'salary = 1 if scworkd == 4 
replace r`wavenum'salary = 2 if scworkd == 3
replace r`wavenum'salary = 3 if scworkd == 2
replace r`wavenum'salary = 4 if scworkd == 1

label variable r`wavenum'salary "r`wavenum'salary:w`wavenum' whether r's salary is adequate"
label values r`wavenum'salary job

*wave 5 spouse salary is adequate
gen s`wavenum'salary =.
spouse r`wavenum'salary, result(s`wavenum'salary) wave(`wavenum')
label variable s`wavenum'salary "s`wavenum'salary:w`wavenum' whether s's salary is adequate"
label value s`wavenum'salary job

***Job promotion is poor***
gen r`wavenum'promot = . 
missing_w`wavenum' outscw5 scworke scempl, result(r`wavenum'promot)
replace r`wavenum'promot = .m if (outscw5 == 2 | inlist(scworke,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'promot = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'promot = .w if scempl == 2
replace r`wavenum'promot = 1 if scworke == 4 
replace r`wavenum'promot = 2 if scworke == 3
replace r`wavenum'promot = 3 if scworke == 2
replace r`wavenum'promot = 4 if scworke == 1

label variable r`wavenum'promot "r`wavenum'promot:w`wavenum' whether r job promotion prospects are poor"
label values r`wavenum'promot job

*wave 5 spouse job promotion is poor
gen s`wavenum'promot =.
spouse r`wavenum'promot, result(s`wavenum'promot) wave(`wavenum')
label variable s`wavenum'promot "s`wavenum'promot:w`wavenum' whether s job promotion prospects are poor"
label value s`wavenum'promot job

***Job security***
gen r`wavenum'secure = . 
replace r`wavenum'secure = .m if (outscw5 == 2 | inlist(scworkf,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'secure = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'secure = .w if scempl == 2
replace r`wavenum'secure = 1 if scworkf == 4 
replace r`wavenum'secure = 2 if scworkf == 3
replace r`wavenum'secure = 3 if scworkf == 2
replace r`wavenum'secure = 4 if scworkf == 1

label variable r`wavenum'secure "r`wavenum'secure:w`wavenum' whether r job security is poor"
label values r`wavenum'secure job

*wave 5 spouse job security
gen s`wavenum'secure =.
spouse r`wavenum'secure, result(s`wavenum'secure) wave(`wavenum')
label variable s`wavenum'secure "s`wavenum'secure:w`wavenum' whether s job security is poor"
label value s`wavenum'secure job

***Constant time pressure due to a heavy workload***
gen r`wavenum'timepre = . 
replace r`wavenum'timepre = .m if (outscw5 == 2 | inlist(scworkg,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'timepre = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'timepre = .w if scempl == 2
replace r`wavenum'timepre = 1 if scworkg == 4 
replace r`wavenum'timepre = 2 if scworkg == 3
replace r`wavenum'timepre = 3 if scworkg == 2
replace r`wavenum'timepre = 4 if scworkg == 1

label variable r`wavenum'timepre "r`wavenum'timepre:w`wavenum' whether r is under constant time pressure due to a heavy workload"
label values r`wavenum'timepre job

*wave 5 spouse constant time pressure due to heavy workload
gen s`wavenum'timepre =.
spouse r`wavenum'timepre, result(s`wavenum'timepre) wave(`wavenum')
label variable s`wavenum'timepre "s`wavenum'timepre:w`wavenum' whether s is under constant time pressure due to a heavy workload"
label value s`wavenum'timepre job

***has the opportunity to develop new skills*
gen r`wavenum'ltlfree = . 
replace r`wavenum'ltlfree = .m if (outscw5 == 2 | inlist(scworkh,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .w if scempl == 2
replace r`wavenum'ltlfree = 1 if scworkh == 4 
replace r`wavenum'ltlfree = 2 if scworkh == 3
replace r`wavenum'ltlfree = 3 if scworkh == 2
replace r`wavenum'ltlfree = 4 if scworkh == 1

label variable r`wavenum'ltlfree "r`wavenum'ltlfree:w`wavenum' whether r has very little freedom to do work"
label values r`wavenum'ltlfree job

*wave 5 spouse has the opportunity to develop new skills
gen s`wavenum'ltlfree =.
spouse r`wavenum'ltlfree, result(s`wavenum'ltlfree) wave(`wavenum')
label variable s`wavenum'ltlfree "s`wavenum'ltlfree:w`wavenum' whether s has very little freedom to do work"
label value s`wavenum'ltlfree job

***develop new skills***
gen r`wavenum'nskills = . 
replace r`wavenum'nskills = .m if (outscw5 == 2 | inlist(scworki,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'nskills = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'nskills = .w if scempl == 2
replace r`wavenum'nskills = 1 if scworki == 4 
replace r`wavenum'nskills = 2 if scworki == 3
replace r`wavenum'nskills = 3 if scworki == 2
replace r`wavenum'nskills = 4 if scworki == 1

label variable r`wavenum'nskills "r`wavenum'nskills:w`wavenum' whether r has the opportunity to develop new skills"
label values r`wavenum'nskills job

*wave 5 spouse develop new skills
gen s`wavenum'nskills =.
spouse r`wavenum'nskills, result(s`wavenum'nskills) wave(`wavenum')
label variable s`wavenum'nskills "s`wavenum'nskills:w`wavenum' whether s has the opportunity to develop new skills"
label value s`wavenum'nskills job

***support in difficult situation***
gen r`wavenum'support = . 
replace r`wavenum'support = .m if (outscw5 == 2 | inlist(scworkj,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'support = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'support = .w if scempl == 2
replace r`wavenum'support = 1 if scworkj == 4 
replace r`wavenum'support = 2 if scworkj == 3
replace r`wavenum'support = 3 if scworkj == 2
replace r`wavenum'support = 4 if scworkj == 1

label variable r`wavenum'support "r`wavenum'support:w`wavenum' whether r received adequate support in difficult situations"
label values r`wavenum'support job

*wave 5 spouse support in difficult situation
gen s`wavenum'support =.
spouse r`wavenum'support, result(s`wavenum'support) wave(`wavenum')
label variable s`wavenum'support "s`wavenum'support:w`wavenum' whether s received adequate support in difficult situations"
label value s`wavenum'support job

***Feel control over what happens in most situations***
gen r`wavenum'control = . 
replace r`wavenum'control = .m if (outscw5 == 2 | inlist(scworkk,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'control = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'control = .w if scempl == 2
replace r`wavenum'control = 1 if scworkk == 4 
replace r`wavenum'control = 2 if scworkk == 3
replace r`wavenum'control = 3 if scworkk == 2
replace r`wavenum'control = 4 if scworkk == 1

label variable r`wavenum'control "r`wavenum'control:w`wavenum' whether r feels control over what happens in most situations"
label values r`wavenum'control job

*wave 5 spouse feel control over what happens in most situations
gen s`wavenum'control =.
spouse r`wavenum'control, result(s`wavenum'control) wave(`wavenum')
label variable s`wavenum'control "s`wavenum'control:w`wavenum' whether s feels control over what happens in most situations"
label value s`wavenum'control job

***Have to work very fast***
gen r`wavenum'workfast = . 
replace r`wavenum'workfast = .m if (outscw5 == 2 | inlist(scworkl,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'workfast = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'workfast = .w if scempl == 2
replace r`wavenum'workfast = 1 if scworkl == 4 
replace r`wavenum'workfast = 2 if scworkl == 3
replace r`wavenum'workfast = 3 if scworkl == 2
replace r`wavenum'workfast = 4 if scworkl == 1

label variable r`wavenum'workfast "r`wavenum'workfast:w`wavenum' whether r has to work very fast"
label values r`wavenum'workfast job

*wave 5 spouse has to work very fast
gen s`wavenum'workfast =.
spouse r`wavenum'workfast, result(s`wavenum'workfast) wave(`wavenum')
label variable s`wavenum'workfast "s`wavenum'workfast:w`wavenum' whether s has to work very fast"
label value s`wavenum'workfast job

***Job stress summary***
recode r`wavenum'satjob (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'satjob)
recode r`wavenum'deserve  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'deserve)	
recode r`wavenum'salary (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'salary)	
recode r`wavenum'nskills  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'nskills)	
recode r`wavenum'support  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'support)	
recode r`wavenum'control (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'control)	

egen r`wavenum'jobsumm =rowmiss(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) if inw`wavenum' == 1
label variable r`wavenum'jobsumm "r`wavenum'jobsumm:w`wavenum' missings in r's job stress summary mean score"

gen s`wavenum'jobsumm =.
spouse r`wavenum'jobsumm, result(s`wavenum'jobsumm) wave(`wavenum')
label variable s`wavenum'jobsumm "s`wavenum'jobsumm:w`wavenum' missings in s's job stress summary mean score"

egen r`wavenum'jobsum =rowmean(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) 
replace r`wavenum'jobsum = .m if r`wavenum'jobsumm ==6 & inw`wavenum' == 1
replace r`wavenum'jobsum = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'jobsum = .w if scempl == 2
label variable r`wavenum'jobsum "r`wavenum'jobsum:w`wavenum' r's job stress summary mean score"

*wave `wavenum' spouse job stress summary
gen s`wavenum'jobsum =.
spouse r`wavenum'jobsum, result(s`wavenum'jobsum) wave(`wavenum')
label variable s`wavenum'jobsum "s`wavenum'jobsum:w`wavenum' s's job stress summary mean score"

drop xr`wavenum'satjob xr`wavenum'deserve xr`wavenum'salary xr`wavenum'nskills xr`wavenum'support xr`wavenum'control

***feel lack of companionship***
gen r`wavenum'complac = . 
replace r`wavenum'complac = .m if (outscw5 == 2 | inlist(scfeela,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'complac = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'complac = scfeela if inrange(scfeela,1,3)

label variable r`wavenum'complac "r`wavenum'complac:w`wavenum' whether r often feels lack of companionship"
label value r`wavenum'complac tim

*wave 5 feel lack of companionship
gen s`wavenum'complac =.
spouse r`wavenum'complac, result(s`wavenum'complac) wave(`wavenum')
label variable s`wavenum'complac "s`wavenum'complac:w`wavenum' whether s often feels lack of companionship"
label value s`wavenum'complac tim

***feel left out***
gen r`wavenum'leftout = . 
replace r`wavenum'leftout = .m if (outscw5 == 2 | inlist(scfeelb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'leftout = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'leftout = scfeelb if inrange(scfeelb,1,3)

label variable r`wavenum'leftout "r`wavenum'leftout:w`wavenum' whether r often feels left out"
label value r`wavenum'leftout tim

*wave 5 feel left out
gen s`wavenum'leftout =.
spouse r`wavenum'leftout, result(s`wavenum'leftout) wave(`wavenum')
label variable s`wavenum'leftout "s`wavenum'leftout:w`wavenum' whether s often feels left out"
label value s`wavenum'leftout tim


***feel isolated from others***
gen r`wavenum'isolate = . 
replace r`wavenum'isolate = .m if (outscw5 == 2 | inlist(scfeelc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'isolate = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'isolate = scfeelc if inrange(scfeelc,1,3)

label variable r`wavenum'isolate "r`wavenum'isolate:w`wavenum' whether r often feels isolated from others" 
label value r`wavenum'isolate tim

*wave 5 feel isolated from others
gen s`wavenum'isolate =.
spouse r`wavenum'isolate, result(s`wavenum'isolate) wave(`wavenum')
label variable s`wavenum'isolate "s`wavenum'isolate:w`wavenum' whether s often feels isolated from others"
label value s`wavenum'isolate tim


***feel in tune with the people around***
gen r`wavenum'intune = .
replace r`wavenum'intune = .m if (outscw5 == 2 | inlist(scfeeld,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'intune = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'intune = scfeeld if inrange(scfeeld,1,3)

label variable r`wavenum'intune "r`wavenum'intune:w`wavenum' whether r often feels not in tune with the people around" 
label value r`wavenum'intune tim

*wave 5 feel in tune with the people around
gen s`wavenum'intune =.
spouse r`wavenum'intune, result(s`wavenum'intune) wave(`wavenum')
label variable s`wavenum'intune "s`wavenum'intune:w`wavenum' whether s often feels not in tune with the people around"
label value s`wavenum'intune tim

****summary score 4 components
recode r`wavenum'intune (1=3) (2=2) (3=1), gen(xr`wavenum'intune) 
egen r`wavenum'lnlysm =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate r`wavenum'intune) if inw`wavenum' == 1
label variable r`wavenum'lnlysm "r`wavenum'lnlysm:w`wavenum' missings in r's 4-item loneliness summary mean score"

gen s`wavenum'lnlysm =.
spouse r`wavenum'lnlysm, result(s`wavenum'lnlysm) wave(`wavenum')
label variable s`wavenum'lnlysm "s`wavenum'lnlysm:w`wavenum' missings in s's 4-item loneliness summary mean score"

egen r`wavenum'lnlys =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate xr`wavenum'intune) if inw`wavenum' == 1
replace r`wavenum'lnlys  = .m if r`wavenum'lnlysm == 4 & inw`wavenum' == 1
replace r`wavenum'lnlys  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1

label variable r`wavenum'lnlys "r`wavenum'lnlys:w`wavenum' r's 4-item loneliness summary mean score"

gen s`wavenum'lnlys =.
spouse r`wavenum'lnlys, result(s`wavenum'lnlys) wave(`wavenum')
label variable s`wavenum'lnlys "s`wavenum'lnlys:w`wavenum' s's 4-item loneliness summary mean score"

drop xr`wavenum'intune

****summary score 3 components
egen r`wavenum'lnlys3m =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
label variable r`wavenum'lnlys3m "r`wavenum'lnlys3m:w`wavenum' missings in r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3m =.
spouse r`wavenum'lnlys3m, result(s`wavenum'lnlys3m) wave(`wavenum')
label variable s`wavenum'lnlys3m "s`wavenum'lnlys3m:w`wavenum' missings in s's 3-item loneliness summary mean score"

egen r`wavenum'lnlys3 =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
replace r`wavenum'lnlys3  = .m if r`wavenum'complac == .m & r`wavenum'leftout == .m & r`wavenum'isolate == .m
replace r`wavenum'lnlys3  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'lnlys3  = .r if r`wavenum'complac == .r & r`wavenum'leftout == .r & r`wavenum'isolate == .r 

label variable r`wavenum'lnlys3 "r`wavenum'lnlys3:w`wavenum' r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3 =.
spouse r`wavenum'lnlys3, result(s`wavenum'lnlys3) wave(`wavenum')
label variable s`wavenum'lnlys3 "s`wavenum'lnlys3:w`wavenum' s's 3-item loneliness summary mean score"


*************************
******Spouse support***
***understand the way you feel
gen r`wavenum'sustdfe = . 
replace r`wavenum'sustdfe = .m if (outscw5 == 2 | inlist(scptra,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .n if  scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sustdfe = scptra if inrange(scptra,1,4)

label variable r`wavenum'sustdfe "r`wavenum'sustdfe:w`wavenum' r thinks spouse understands the way he/she feels" 
label value r`wavenum'sustdfe attns

*wave 5 understand the way you feel
gen s`wavenum'sustdfe =.
spouse r`wavenum'sustdfe, result(s`wavenum'sustdfe) wave(`wavenum')
label variable s`wavenum'sustdfe "s`wavenum'sustdfe:w`wavenum' s thinks spouse understands the way he/she feels"
label value s`wavenum'sustdfe attns

***rely on serious problem
gen r`wavenum'srely = . 
replace r`wavenum'srely = .m if (outscw5 == 2 | inlist(scptrb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'srely = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'srely = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'srely = scptrb if inrange(scptrb,1,4)

label variable r`wavenum'srely "r`wavenum'srely:w`wavenum' r can rely on spouse for a serious problem" 
label value r`wavenum'srely attns

*wave 5 rely on serious problem
gen s`wavenum'srely =.
spouse r`wavenum'srely, result(s`wavenum'srely) wave(`wavenum')
label variable s`wavenum'srely "s`wavenum'srely:w`wavenum' s can rely on spouse for a serious problem"
label value s`wavenum'srely attns

***open up when need to talk about worries
gen r`wavenum'sopenup = . 
replace r`wavenum'sopenup = .m if (outscw5 == 2 | inlist(scptrc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'sopenup = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'sopenup = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sopenup = scptrc if inrange(scptrc,1,4)

label variable r`wavenum'sopenup "r`wavenum'sopenup:w`wavenum' r can open up their worries to spouse" 
label value r`wavenum'sopenup attns

*wave 5 open up when need tp talk about worries
gen s`wavenum'sopenup =.
spouse r`wavenum'sopenup, result(s`wavenum'sopenup) wave(`wavenum')
label variable s`wavenum'sopenup "s`wavenum'sopenup:w`wavenum' s can open up their worries to spouse"
label value s`wavenum'sopenup attns

****Criticize  by spouse
gen r`wavenum'scritze = . 
replace r`wavenum'scritze = .m if (outscw5 == 2 | inlist(scptrd,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'scritze = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'scritze = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'scritze = scptrd if inrange(scptrd,1,4)

label variable r`wavenum'scritze "r`wavenum'scritze:w`wavenum' how much spouse criticizes r" 
label value r`wavenum'scritze attns

*wave 5 Criticize  by spouse
gen s`wavenum'scritze =.
spouse r`wavenum'scritze, result(s`wavenum'scritze) wave(`wavenum')
label variable s`wavenum'scritze "s`wavenum'scritze:w`wavenum' how much spouse criticizes s"
label value s`wavenum'scritze attns

*****let down when counting on them
gen r`wavenum'sletdow = . 
replace r`wavenum'sletdow = .m if (outscw5 == 2 | inlist(scptre,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'sletdow = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'sletdow = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sletdow = scptre if inrange(scptre,1,4)

label variable r`wavenum'sletdow "r`wavenum'sletdow:w`wavenum' spouse let r down when counting on him/her" 
label value r`wavenum'sletdow attns

*wave 5 let down when counting on them
gen s`wavenum'sletdow =.
spouse r`wavenum'sletdow, result(s`wavenum'sletdow) wave(`wavenum')
label variable s`wavenum'sletdow "s`wavenum'sletdow:w`wavenum' spouse let s down when counting on him/her"
label value s`wavenum'sletdow attns

*****Get on nerves
gen r`wavenum'sgetnev = . 
replace r`wavenum'sgetnev = .m if (outscw5 == 2 | inlist(scptrf,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sgetnev = scptrf if inrange(scptrf,1,4)

label variable r`wavenum'sgetnev "r`wavenum'sgetnev:w`wavenum' spouse gets on r's nerve" 
label value r`wavenum'sgetnev attns

*wave 5 get on nerves
gen s`wavenum'sgetnev =.
spouse r`wavenum'sgetnev, result(s`wavenum'sgetnev) wave(`wavenum')
label variable s`wavenum'sgetnev "s`wavenum'sgetnev:w`wavenum' spouse gets on s's nerve"
label value s`wavenum'sgetnev attns

*****Too many demand on respondent 
gen r`wavenum'sdemand = . 
replace r`wavenum'sdemand = .m if (outscw5 == 2 | inlist(scptrx,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'sdemand = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'sdemand = .n if scptr == 2 & inw`wavenum' == 1
replace r`wavenum'sdemand = scptrx if inrange(scptrx,1,4)

label variable r`wavenum'sdemand "r`wavenum'sdemand:w`wavenum' spouse puts too many demands on r" 
label value r`wavenum'sdemand attns

*wave 5 to many demand on respondent
gen s`wavenum'sdemand =.
spouse r`wavenum'sdemand, result(s`wavenum'sdemand) wave(`wavenum')
label variable s`wavenum'sdemand "s`wavenum'sdemand:w`wavenum' spouse puts too many demands on s"
label value s`wavenum'sdemand attns


****spouse support summary****
recode r`wavenum'scritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'scritze)	
recode r`wavenum'sletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sletdow)	
recode r`wavenum'sgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sgetnev)	
recode r`wavenum'sdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sdemand)	


egen r`wavenum'ssupport6m =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                           if inw`wavenum' == 1
label variable  r`wavenum'ssupport6m "r`wavenum'ssupport6m:w`wavenum' missings in r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6m=.
spouse r`wavenum'ssupport6m, result(s`wavenum'ssupport6m) wave(`wavenum')  
label variable s`wavenum'ssupport6m "s`wavenum'ssupport6m:w`wavenum' missings in s's lack of spouse support 6-item score"

egen r`wavenum'ssupport6 =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'ssupport6  = .m if r`wavenum'ssupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .n if scptr == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport6)

label variable r`wavenum'ssupport6 "r`wavenum'ssupport6:w`wavenum' r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6 =.
spouse r`wavenum'ssupport6, result(s`wavenum'ssupport6) wave(`wavenum')
label variable s`wavenum'ssupport6 "s`wavenum'ssupport6:w`wavenum' s's lack of spouse support 6-item score"
****7 items
egen r`wavenum'ssupportm =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand) if inw`wavenum' == 1
label variable  r`wavenum'ssupportm "r`wavenum'ssupportm:w`wavenum' missings in r's lack of spouse support 7-item score"

gen s`wavenum'ssupportm=.
spouse r`wavenum'ssupportm, result(s`wavenum'ssupportm) wave(`wavenum')  
label variable s`wavenum'ssupportm "s`wavenum'ssupportm:w`wavenum' missings in s's lack of spouse support 7-item score"

egen r`wavenum'ssupport =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand) if inw`wavenum' == 1
replace r`wavenum'ssupport  = .m if r`wavenum'ssupportm ==7 & inw`wavenum' == 1
replace r`wavenum'ssupport  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ssupport  = .n if scptr == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport)

label variable r`wavenum'ssupport "r`wavenum'ssupport:w`wavenum' r's lack of spouse support 7-item score"

gen s`wavenum'ssupport =.
spouse r`wavenum'ssupport, result(s`wavenum'ssupport) wave(`wavenum')
label variable s`wavenum'ssupport "s`wavenum'ssupport:w`wavenum' s's lack of spouse support 7-item score"

drop xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand

******Child support***
***understand the way you feel
gen r`wavenum'kustdfe = . 
replace r`wavenum'kustdfe = .m if (outscw5 == 2 | inlist(scchda,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kustdfe = scchda if inrange(scchda,1,4)

label variable r`wavenum'kustdfe "r`wavenum'kustdfe:w`wavenum' r thinks children understand the way he/she feels" 
label value r`wavenum'kustdfe attnk

*wave 5 understand the way you feel
gen s`wavenum'kustdfe =.
spouse r`wavenum'kustdfe, result(s`wavenum'kustdfe) wave(`wavenum')
label variable s`wavenum'kustdfe "s`wavenum'kustdfe:w`wavenum' s thinks children understand the way he/she feels"
label value s`wavenum'kustdfe attnk

***rely on serious problem
gen r`wavenum'krely = . 
replace r`wavenum'krely = .m if (outscw5 == 2 | inlist(scchdb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'krely = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'krely = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'krely = scchdb if inrange(scchdb,1,4)

label variable r`wavenum'krely "r`wavenum'krely:w`wavenum' r can rely on children for a serious problem" 
label value r`wavenum'krely attnk

*wave 5 rely on serious problem
gen s`wavenum'krely =.
spouse r`wavenum'krely, result(s`wavenum'krely) wave(`wavenum')
label variable s`wavenum'krely "s`wavenum'krely:w`wavenum' s can rely on children for a serious problem"
label value s`wavenum'krely attnk

***open up when need tp talk about worries
gen r`wavenum'kopenup = . 
replace r`wavenum'kopenup = .m if (outscw5 == 2 | inlist(scchdc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'kopenup = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kopenup = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kopenup = scchdc if inrange(scchdc,1,4)

label variable r`wavenum'kopenup "r`wavenum'kopenup:w`wavenum' r can open up their worries to children" 
label value r`wavenum'kopenup attnk

*wave 5 open up when need tp talk about worries
gen s`wavenum'kopenup =.
spouse r`wavenum'kopenup, result(s`wavenum'kopenup) wave(`wavenum')
label variable s`wavenum'kopenup "s`wavenum'kopenup:w`wavenum' s can open up their worries to children"
label value s`wavenum'kopenup attnk

****Criticize by children
gen r`wavenum'kcritze = . 
replace r`wavenum'kcritze = .m if (outscw5 == 2 | inlist(scchdd,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'kcritze = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kcritze = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kcritze = scchdd if inrange(scchdd,1,4)

label variable r`wavenum'kcritze "r`wavenum'kcritze:w`wavenum' how much children criticize r" 
label value r`wavenum'kcritze attnk

*wave 5 Criticize by children
gen s`wavenum'kcritze =.
spouse r`wavenum'kcritze, result(s`wavenum'kcritze) wave(`wavenum')
label variable s`wavenum'kcritze "s`wavenum'kcritze:w`wavenum' how much children criticize s"
label value s`wavenum'kcritze attnk

*****let down when counting on them
gen r`wavenum'kletdow = . 
replace r`wavenum'kletdow = .m if (outscw5 == 2 | inlist(scchde,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'kletdow = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kletdow = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kletdow = scchde if inrange(scchde,1,4)

label variable r`wavenum'kletdow "r`wavenum'kletdow:w`wavenum' children let r down when counting on them" 
label value r`wavenum'kletdow attnk

*wave 5 let down when counting on them
gen s`wavenum'kletdow =.
spouse r`wavenum'kletdow, result(s`wavenum'kletdow) wave(`wavenum')
label variable s`wavenum'kletdow "s`wavenum'kletdow:w`wavenum' children let s down when counting on them"
label value s`wavenum'kletdow attnk

*****Get on nerves
gen r`wavenum'kgetnev = . 
replace r`wavenum'kgetnev = .m if (outscw5 == 2 | inlist(scchdf,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kgetnev = scchdf if inrange(scchdf,1,4)

label variable r`wavenum'kgetnev "r`wavenum'kgetnev:w`wavenum' children get on r's nerve" 
label value r`wavenum'kgetnev attnk

*wave 5 get on nerves
gen s`wavenum'kgetnev =.
spouse r`wavenum'kgetnev, result(s`wavenum'kgetnev) wave(`wavenum')
label variable s`wavenum'kgetnev "s`wavenum'kgetnev:w`wavenum' children get on s's nerve"
label value s`wavenum'kgetnev attnk

*****Too many demand on respondent 
gen r`wavenum'kdemand = . 
replace r`wavenum'kdemand = .m if (outscw5 == 2 | inlist(scchdx,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'kdemand = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'kdemand = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kdemand = scchdx if inrange(scchdx,1,4)

label variable r`wavenum'kdemand "r`wavenum'kdemand:w`wavenum' children put too many demands on r" 
label value r`wavenum'kdemand attnk

*wave5 to many demand on respondent
gen s`wavenum'kdemand =.
spouse r`wavenum'kdemand, result(s`wavenum'kdemand) wave(`wavenum')
label variable s`wavenum'kdemand "s`wavenum'kdemand:w`wavenum' children put too many demands on s"
label value s`wavenum'kdemand attnk

****Children support summary****
recode r`wavenum'kcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kcritze)	
recode r`wavenum'kletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kletdow)	
recode r`wavenum'kgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kgetnev)	
recode r`wavenum'kdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kdemand)	

egen r`wavenum'ksupport6m =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev)  ///
                           if inw`wavenum' == 1
label variable r`wavenum'ksupport6m "r`wavenum'ksupport6m:w`wavenum' missings in r's lack of children support 6-item score"

gen s`wavenum'ksupport6m=.
spouse r`wavenum'ksupport6m, result(s`wavenum'ksupport6m) wave(`wavenum')  
label variable s`wavenum'ksupport6m "s`wavenum'ksupport6m:w`wavenum' missings in s's lack of children support 6-item score"

egen r`wavenum'ksupport6 =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev) ///
                           if inw`wavenum' == 1
replace r`wavenum'ksupport6  = .m if r`wavenum'ksupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport6)

label variable r`wavenum'ksupport6 "r`wavenum'ksupport6:w`wavenum' r's lack of children support 6-item score"

gen s`wavenum'ksupport6 =.
spouse r`wavenum'ksupport6, result(s`wavenum'ksupport6) wave(`wavenum')
label variable s`wavenum'ksupport6 "s`wavenum'ksupport6:w`wavenum' s's lack of children support 6-item score"

**7 item
egen r`wavenum'ksupportm =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand)  if inw`wavenum' == 1
label variable r`wavenum'ksupportm "r`wavenum'ksupportm:w`wavenum' missings in r's lack of children support 7-item score"

gen s`wavenum'ksupportm=.
spouse r`wavenum'ksupportm, result(s`wavenum'ksupportm) wave(`wavenum')  
label variable s`wavenum'ksupportm "s`wavenum'ksupportm:w`wavenum' missings in s's lack of children support 7-item score"

egen r`wavenum'ksupport =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand) if inw`wavenum' == 1
replace r`wavenum'ksupport  = .m if r`wavenum'ksupportm ==7 & inw`wavenum' == 1
replace r`wavenum'ksupport  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ksupport  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport)

label variable r`wavenum'ksupport "r`wavenum'ksupport:w`wavenum' r's lack of children support 7-item score"

gen s`wavenum'ksupport =.
spouse r`wavenum'ksupport, result(s`wavenum'ksupport) wave(`wavenum')
label variable s`wavenum'ksupport "s`wavenum'ksupport:w`wavenum' s's lack of children support 7-item score"

drop xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand

******other family members support***
***understand the way you feel
gen r`wavenum'oustdfe = . 
replace r`wavenum'oustdfe = .m if (outscw5 == 2 | inlist(scfama,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oustdfe = scfama if inrange(scfama,1,4)

label variable r`wavenum'oustdfe "r`wavenum'oustdfe:w`wavenum' r thinks other family members understand the way he/she feels" 
label value r`wavenum'oustdfe attnof

*wave 5 understand the way you feel
gen s`wavenum'oustdfe =.
spouse r`wavenum'oustdfe, result(s`wavenum'oustdfe) wave(`wavenum')
label variable s`wavenum'oustdfe "s`wavenum'oustdfe:w`wavenum' s thinks other family members understand the way he/she feels"
label value s`wavenum'oustdfe attnof

***rely on serious problem
gen r`wavenum'orely = . 
replace r`wavenum'orely = .m if (outscw5 == 2 | inlist(scfamb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'orely = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'orely = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'orely = scfamb if inrange(scfamb,1,4)

label variable r`wavenum'orely "r`wavenum'orely:w`wavenum' r can rely on other family members for a serious problem" 

label value r`wavenum'orely attnof

*wave 5 rely on serious problem
gen s`wavenum'orely =.
spouse r`wavenum'orely, result(s`wavenum'orely) wave(`wavenum')
label variable s`wavenum'orely "s`wavenum'orely:w`wavenum' s can rely on other family members for a serious problem"
label value s`wavenum'orely attnof

***open up when need tp talk about worries
gen r`wavenum'oopenup = . 
replace r`wavenum'oopenup = .m if (outscw5 == 2 | inlist(scfamc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'oopenup = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'oopenup = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oopenup = scfamc if inrange(scfamc,1,4)

label variable r`wavenum'oopenup "r`wavenum'oopenup:w`wavenum' r can open up their worries to other family members" 
label value r`wavenum'oopenup attnof

*wave 5 open up when need tp talk about worries
gen s`wavenum'oopenup =.
spouse r`wavenum'oopenup, result(s`wavenum'oopenup) wave(`wavenum')
label variable s`wavenum'oopenup "s`wavenum'oopenup:w`wavenum' s can open up their worries to other family members"
label value s`wavenum'oopenup attnof

****Criticize by other family members
gen r`wavenum'ocritze = . 
replace r`wavenum'ocritze = .m if (outscw5 == 2 | inlist(scfamd,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'ocritze = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ocritze = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ocritze = scfamd if inrange(scfamd,1,4)

label variable r`wavenum'ocritze "r`wavenum'ocritze:w`wavenum' how much other family members criticize r" 
label value r`wavenum'ocritze attnof

*wave 5 Criticize by other family members
gen s`wavenum'ocritze =.
spouse r`wavenum'ocritze, result(s`wavenum'ocritze) wave(`wavenum')
label variable s`wavenum'ocritze "s`wavenum'ocritze:w`wavenum' how much other family members criticize s"
label value s`wavenum'ocritze attnof

*****let down when counting on them
gen r`wavenum'oletdow = . 
replace r`wavenum'oletdow = .m if (outscw5 == 2 | inlist(scfame,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'oletdow = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'oletdow = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oletdow = scfame if inrange(scfame,1,4)

label variable r`wavenum'oletdow "r`wavenum'oletdow:w`wavenum' other family members let r down when counting on them" 
label value r`wavenum'oletdow attnof

*wave 5 let down when counting on them
gen s`wavenum'oletdow =.
spouse r`wavenum'oletdow, result(s`wavenum'oletdow) wave(`wavenum')
label variable s`wavenum'oletdow "s`wavenum'oletdow:w`wavenum' other family members let s down when counting on them"
label value s`wavenum'oletdow attnof

*****Get on nerves
gen r`wavenum'ogetnev = . 
replace r`wavenum'ogetnev = .m if (outscw5 == 2 | inlist(scfamf,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ogetnev = scfamf if inrange(scfamf,1,4)

label variable r`wavenum'ogetnev "r`wavenum'ogetnev:w`wavenum' other family members get on r's nerve" 
label value r`wavenum'ogetnev attnof

*wave 5 get on nerves
gen s`wavenum'ogetnev =.
spouse r`wavenum'ogetnev, result(s`wavenum'ogetnev) wave(`wavenum')
label variable s`wavenum'ogetnev "s`wavenum'ogetnev:w`wavenum' other family members get on s's nerve"
label value s`wavenum'ogetnev attnof


*****Too many demand on respondent 
gen r`wavenum'odemand = . 
replace r`wavenum'odemand = .m if (outscw5 == 2 | inlist(scfamx,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'odemand = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'odemand = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'odemand = scfamx if inrange(scfamx,1,4)

label variable r`wavenum'odemand "r`wavenum'odemand:w`wavenum' other family members put too many demands on r" 
label value r`wavenum'odemand attnof

*wave5 to many demand on respondent
gen s`wavenum'odemand =.
spouse r`wavenum'odemand, result(s`wavenum'odemand) wave(`wavenum')
label variable s`wavenum'odemand "s`wavenum'odemand:w`wavenum' other family members put too many demands on s"
label value s`wavenum'odemand attnof

****Other family members support summary****
recode r`wavenum'ocritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ocritze)	
recode r`wavenum'oletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'oletdow)	
recode r`wavenum'ogetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ogetnev)	
recode r`wavenum'odemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'odemand)	

egen r`wavenum'osupport6m =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'osupport6m "r`wavenum'osupport6m:w`wavenum' missings in r's lack of other family members support 6-item score"

gen s`wavenum'osupport6m=.
spouse r`wavenum'osupport6m, result(s`wavenum'osupport6m) wave(`wavenum')  
label variable s`wavenum'osupport6m "s`wavenum'osupport6m:w`wavenum' missings in s's lack of other family members support 6-item score"

egen r`wavenum'osupport6 =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) if inw`wavenum' == 1
replace r`wavenum'osupport6  = .m if r`wavenum'osupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'osupport6  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'osupport6  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport6)

label variable r`wavenum'osupport6 "r`wavenum'osupport6:w`wavenum' r's lack of other family members support 6-item score"

gen s`wavenum'osupport6 =.
spouse r`wavenum'osupport6, result(s`wavenum'osupport6) wave(`wavenum')
label variable s`wavenum'osupport6 "s`wavenum'osupport6:w`wavenum' s's lack of other family members support 6-item score"

***7 items
egen r`wavenum'osupportm =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand)  if inw`wavenum' == 1
label variable r`wavenum'osupportm "r`wavenum'osupportm:w`wavenum' missings in r's lack of other family members support 7-item score"

gen s`wavenum'osupportm=.
spouse r`wavenum'osupportm, result(s`wavenum'osupportm) wave(`wavenum')  
label variable s`wavenum'osupportm "s`wavenum'osupportm:w`wavenum' missings in s's lack of other family members support 7-item score"

egen r`wavenum'osupport =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand) if inw`wavenum' == 1                      
replace r`wavenum'osupport  = .m if r`wavenum'osupportm ==7 & inw`wavenum' == 1
replace r`wavenum'osupport  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'osupport  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport)

label variable r`wavenum'osupport "r`wavenum'osupport:w`wavenum' r's lack of other family members support 7-item score"

gen s`wavenum'osupport =.
spouse r`wavenum'osupport, result(s`wavenum'osupport) wave(`wavenum')
label variable s`wavenum'osupport "s`wavenum'osupport:w`wavenum' s's lack of other family members support 7-item score"

drop xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand

******Friend support***
***understand the way you feel
gen r`wavenum'fustdfe = . 
replace r`wavenum'fustdfe = .m if (outscw5 == 2 | inlist(scfrda,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fustdfe = scfrda if inrange(scfrda,1,4)

label variable r`wavenum'fustdfe "r`wavenum'fustdfe:w`wavenum' r thinks friends understand the way he/she feels" 
label value r`wavenum'fustdfe attnf

*wave 5 understand the way you feel
gen s`wavenum'fustdfe =.
spouse r`wavenum'fustdfe, result(s`wavenum'fustdfe) wave(`wavenum')
label variable s`wavenum'fustdfe "s`wavenum'fustdfe:w`wavenum' s thinks friends understand the way he/she feels"
label value s`wavenum'fustdfe attnf

***rely on serious problem
gen r`wavenum'frely = . 
replace r`wavenum'frely = .m if (outscw5 == 2 | inlist(scfrdb,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'frely = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'frely = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'frely = scfrdb if inrange(scfrdb,1,4)

label variable r`wavenum'frely "r`wavenum'frely:w`wavenum' r can rely on friends for a serious problem" 
label value r`wavenum'frely attnf

*wave 5 rely on serious problem
gen s`wavenum'frely =.
spouse r`wavenum'frely, result(s`wavenum'frely) wave(`wavenum')
label variable s`wavenum'frely "s`wavenum'frely:w`wavenum' s can rely on friends for a serious problem"
label value s`wavenum'frely attnf

***open up when need tp talk about worries
gen r`wavenum'fopenup = . 
replace r`wavenum'fopenup = .m if (outscw5 == 2 | inlist(scfrdc,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'fopenup = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fopenup = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fopenup = scfrdc if inrange(scfrdc,1,4)

label variable r`wavenum'fopenup "r`wavenum'fopenup:w`wavenum' r can open up their worries to friends" 
label value r`wavenum'fopenup attnf

*wave 5 open up when need tp talk about worries
gen s`wavenum'fopenup =.
spouse r`wavenum'fopenup, result(s`wavenum'fopenup) wave(`wavenum')
label variable s`wavenum'fopenup "s`wavenum'fopenup:w`wavenum' s can open up their worries to friends"
label value s`wavenum'fopenup attnf

****Criticize by friend
gen r`wavenum'fcritze = . 
replace r`wavenum'fcritze = .m if (outscw5 == 2 | inlist(scfrdd,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'fcritze = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fcritze = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fcritze = scfrdd if inrange(scfrdd,1,4)

label variable r`wavenum'fcritze "r`wavenum'fcritze:w`wavenum' how much friends criticize r" 
label value r`wavenum'fcritze attnf

*wave 5 Criticize by friend
gen s`wavenum'fcritze =.
spouse r`wavenum'fcritze, result(s`wavenum'fcritze) wave(`wavenum')
label variable s`wavenum'fcritze "s`wavenum'fcritze:w`wavenum' how much friends criticize s"
label value s`wavenum'fcritze attnf

*****let down when counting on them
gen r`wavenum'fletdow = . 
replace r`wavenum'fletdow = .m if (outscw5 == 2 | inlist(scfrde,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'fletdow = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fletdow = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fletdow = scfrde if inrange(scfrde,1,4)

label variable r`wavenum'fletdow "r`wavenum'fletdow:w`wavenum' friends let r down when counting on them" 
label value r`wavenum'fletdow attnf

*wave 5 let down when counting on them
gen s`wavenum'fletdow =.
spouse r`wavenum'fletdow, result(s`wavenum'fletdow) wave(`wavenum')
label variable s`wavenum'fletdow "s`wavenum'fletdow:w`wavenum' friends let s down when counting on them"
label value s`wavenum'fletdow attnf

*****Get on nerves
gen r`wavenum'fgetnev = . 
replace r`wavenum'fgetnev = .m if (outscw5 == 2 | inlist(scfrdf,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fgetnev = scfrdf if inrange(scfrdf,1,4)

label variable r`wavenum'fgetnev "r`wavenum'fgetnev:w`wavenum' friends gets on r's nerve" 
label value r`wavenum'fgetnev attnf

*wave 5 get on nerves
gen s`wavenum'fgetnev =.
spouse r`wavenum'fgetnev, result(s`wavenum'fgetnev) wave(`wavenum')
label variable s`wavenum'fgetnev "s`wavenum'fgetnev:w`wavenum' friends gets on s's nerve"
label value s`wavenum'fgetnev attnf

*****Too many demand on respondent 
gen r`wavenum'fdemand = . 
replace r`wavenum'fdemand = .m if (outscw5 == 2 | inlist(scfrdx,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'fdemand = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fdemand = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fdemand = scfrdx if inrange(scfrdx,1,4)

label variable r`wavenum'fdemand "r`wavenum'fdemand:w`wavenum' friends put too many demands on r" 
label value r`wavenum'fdemand attnf

*wave5 to many demand on respondent
gen s`wavenum'fdemand =.
spouse r`wavenum'fdemand, result(s`wavenum'fdemand) wave(`wavenum')
label variable s`wavenum'fdemand "s`wavenum'fdemand:w`wavenum' friends put too many demands on s"
label value s`wavenum'fdemand attnf

****Friends support summary****
recode r`wavenum'fcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fcritze)	
recode r`wavenum'fletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fletdow)	
recode r`wavenum'fgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fgetnev)	
recode r`wavenum'fdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fdemand)	

egen r`wavenum'fsupport6m =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'fsupport6m "r`wavenum'fsupport6m:w`wavenum' missings in r's lack of friends support 6-item score"

gen s`wavenum'fsupport6m=.
spouse r`wavenum'fsupport6m, result(s`wavenum'fsupport6m) wave(`wavenum')  
label variable s`wavenum'fsupport6m "s`wavenum'fsupport6m:w`wavenum' missings in s's lack of friends support 6-item score"

egen r`wavenum'fsupport6 =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'fsupport6  = .m if r`wavenum'fsupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport6)

label variable r`wavenum'fsupport6 "r`wavenum'fsupport6:w`wavenum' r's lack of friends support 6-item score"

gen s`wavenum'fsupport6 =.
spouse r`wavenum'fsupport6, result(s`wavenum'fsupport6) wave(`wavenum')
label variable s`wavenum'fsupport6 "s`wavenum'fsupport6:w`wavenum' s's lack of friends support 6-item score"

***7 items
egen r`wavenum'fsupportm =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand)  if inw`wavenum' == 1
label variable r`wavenum'fsupportm "r`wavenum'fsupportm:w`wavenum' missings in r's lack of friends support 7-item score"

gen s`wavenum'fsupportm=.
spouse r`wavenum'fsupportm, result(s`wavenum'fsupportm) wave(`wavenum')  
label variable s`wavenum'fsupportm "s`wavenum'fsupportm:w`wavenum' missings in s's lack of friends support 7-item score"

egen r`wavenum'fsupport =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand) if inw`wavenum' == 1
replace r`wavenum'fsupport  = .m if r`wavenum'fsupportm ==7 & inw`wavenum' == 1
replace r`wavenum'fsupport  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'fsupport  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport)

label variable r`wavenum'fsupport "r`wavenum'fsupport:w`wavenum' r's lack of friends support 7-item score"

gen s`wavenum'fsupport =.
spouse r`wavenum'fsupport, result(s`wavenum'fsupport) wave(`wavenum')
label variable s`wavenum'fsupport "s`wavenum'fsupport:w`wavenum' s's lack of friends support 7-item score"

drop xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand

****discrimination*****
****wave 5 treated with less courtesy or respect
gen r`wavenum'lsrspct = . 
replace r`wavenum'lsrspct = .m if (outscw5 == 2 | inlist(scdtdre,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'lsrspct = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'lsrspct = scdtdre if inrange(scdtdre,1,6)

label variable r`wavenum'lsrspct "r`wavenum'lsrspct:w`wavenum' r was treated with less courtesy or respect" 
label value r`wavenum'lsrspct resp

*wave 5 treated with less courtesy or respect
gen s`wavenum'lsrspct =.
spouse r`wavenum'lsrspct, result(s`wavenum'lsrspct) wave(`wavenum')
label variable s`wavenum'lsrspct "s`wavenum'lsrspct:w`wavenum' s was treated with less courtesy or respect"
label value s`wavenum'lsrspct resp

****wave 5 receives poorer service than other people at restaurants or stores
gen r`wavenum'prsrvc = . 
replace r`wavenum'prsrvc = .m if (outscw5 == 2 | inlist(scdtdst,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'prsrvc = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'prsrvc = scdtdst if inrange(scdtdst,1,6)

label variable r`wavenum'prsrvc "r`wavenum'prsrvc:w`wavenum' r received poorer service than other people at restaurants or stores" 
label value r`wavenum'prsrvc resp

*wave 5 received poorer service than other people at restaurants or stores
gen s`wavenum'prsrvc =.
spouse r`wavenum'prsrvc, result(s`wavenum'prsrvc) wave(`wavenum')
label variable s`wavenum'prsrvc "s`wavenum'prsrvc:w`wavenum' s received poorer service than other people at restaurants or stores"
label value s`wavenum'prsrvc resp

****wave 5 acted as if you are not smart
gen r`wavenum'notsmrt = . 
replace r`wavenum'notsmrt = .m if (outscw5 == 2 | inlist(scdtdcl,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'notsmrt = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'notsmrt = scdtdcl if inrange(scdtdcl,1,6)

label variable r`wavenum'notsmrt "r`wavenum'notsmrt:w`wavenum' people act as if r is not clever" 
label value r`wavenum'notsmrt resp

*wave 5 acted as if you are not smart
gen s`wavenum'notsmrt =.
spouse r`wavenum'notsmrt, result(s`wavenum'notsmrt) wave(`wavenum')
label variable s`wavenum'notsmrt "s`wavenum'notsmrt:w`wavenum' people act as if s is not clever"
label value s`wavenum'notsmrt resp

****wave 5 are threatened or harassed
gen r`wavenum'harass = . 
replace r`wavenum'harass = .m if (outscw5 == 2 | inlist(scdtdha,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'harass = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'harass = scdtdha if inrange(scdtdha,1,6)

label variable r`wavenum'harass "r`wavenum'harass:w`wavenum' r was threatened or harassed" 
label value r`wavenum'harass resp

*wave 5 are threatened or harassed
gen s`wavenum'harass =.
spouse r`wavenum'harass, result(s`wavenum'harass) wave(`wavenum')
label variable s`wavenum'harass "s`wavenum'harass:w`wavenum' s was threatened or harassed"
label value s`wavenum'harass resp

****wave 5 poorer service or treatment than other people from doctors or hospitals
gen r`wavenum'prtrmt = . 
replace r`wavenum'prtrmt = .m if (outscw5 == 2 | inlist(scdtddr,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'prtrmt = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'prtrmt = scdtddr if inrange(scdtddr,1,6)

label variable r`wavenum'prtrmt "r`wavenum'prtrmt:w`wavenum' r received poorer service from doctors or hospitals" 
label value r`wavenum'prtrmt resp

*wave 5 poorer service or treatment than other people from doctors or hospitals
gen s`wavenum'prtrmt =.
spouse r`wavenum'prtrmt, result(s`wavenum'prtrmt) wave(`wavenum')
label variable s`wavenum'prtrmt "s`wavenum'prtrmt:w`wavenum' s received poorer service from doctors or hospitals"
label value s`wavenum'prtrmt resp

****Summary discrimination****
recode r`wavenum'lsrspct (1=6) (2=5) (3=4) (4=3) (5=2) (6=1), gen(xr`wavenum'lsrspct)
recode r`wavenum'prsrvc  (1=6) (2=5) (3=4) (4=3) (5=2) (6=1), gen(xr`wavenum'prsrvc)	
recode r`wavenum'notsmrt (1=6) (2=5) (3=4) (4=3) (5=2) (6=1), gen(xr`wavenum'notsmrt)	
recode r`wavenum'harass  (1=6) (2=5) (3=4) (4=3) (5=2) (6=1), gen(xr`wavenum'harass)	
recode r`wavenum'prtrmt  (1=6) (2=5) (3=4) (4=3) (5=2) (6=1), gen(xr`wavenum'prtrmt)	

egen r`wavenum'dscrim5m =rowmiss(xr`wavenum'lsrspct xr`wavenum'prsrvc xr`wavenum'notsmrt xr`wavenum'harass xr`wavenum'prtrmt)  if inw`wavenum' == 1
label variable r`wavenum'dscrim5m "r`wavenum'dscrim5m:w`wavenum' missings in r's discrimination summary mean score"

gen s`wavenum'dscrim5m=.
spouse r`wavenum'dscrim5m, result(s`wavenum'dscrim5m) wave(`wavenum')  
label variable s`wavenum'dscrim5m "s`wavenum'dscrim5m:w`wavenum' missings in s's discrimination summary mean score"

egen r`wavenum'dscrim5 =rowmean(xr`wavenum'lsrspct xr`wavenum'prsrvc xr`wavenum'notsmrt xr`wavenum'harass xr`wavenum'prtrmt) if inw`wavenum' == 1
replace r`wavenum'dscrim5  = .m if r`wavenum'dscrim5m ==5 & inw`wavenum' == 1
replace r`wavenum'dscrim5  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1

label variable r`wavenum'dscrim5 "r`wavenum'dscrim5:w`wavenum' r's discrimination summary mean score"

gen s`wavenum'dscrim5 =.
spouse r`wavenum'dscrim5, result(s`wavenum'dscrim5) wave(`wavenum')
label variable s`wavenum'dscrim5 "s`wavenum'dscrim5:w`wavenum' s's discrimination summary mean score"

drop xr`wavenum'lsrspct xr`wavenum'prsrvc xr`wavenum'notsmrt xr`wavenum'harass xr`wavenum'prtrmt

****reason cause day to day life discrimination****
****Gender
gen r`wavenum'dcgendr= . 
replace r`wavenum'dcgendr = .m if (outscw5 == 2 | inlist(scdtd01,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'dcgendr = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcgendr = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 
replace r`wavenum'dcgendr = 0 if scdtd01 == 0 | scdtd02 == 1 | scdtd03 == 1 | scdtd04 == 1 | scdtd05 == 1 | scdtd06 == 1 | scdtd07 == 1 | ///
                                 scdtd08 == 1 | scdtd85 == 1
replace r`wavenum'dcgendr = 1 if scdtd01 == 1

label variable r`wavenum'dcgendr "r`wavenum'dcgendr:w`wavenum' r discrimination reason: gender" 
label value r`wavenum'dcgendr yesnost

*wave 5 gender
gen s`wavenum'dcgendr =.
spouse r`wavenum'dcgendr, result(s`wavenum'dcgendr) wave(`wavenum')
label variable s`wavenum'dcgendr "s`wavenum'dcgendr:w`wavenum' s discrimination reason: gender"
label value s`wavenum'dcgendr yesnost

****race
gen r`wavenum'dcrace= . 
replace r`wavenum'dcrace = .m if (outscw5 == 2 | inlist(scdtd02,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'dcrace = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcrace = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 
replace r`wavenum'dcrace = 0 if scdtd01 == 1 | scdtd02 == 0 | scdtd03 == 1 | scdtd04 == 1 | scdtd05 == 1 | scdtd06 == 1 | scdtd07 == 1 | ///
                                scdtd08 == 1 | scdtd85 == 1
replace r`wavenum'dcrace = 1 if scdtd02 == 1

label variable r`wavenum'dcrace "r`wavenum'dcrace:w`wavenum' r discrimination reason: race" 
label value r`wavenum'dcrace yesnost

*wave 5 race
gen s`wavenum'dcrace =.
spouse r`wavenum'dcrace, result(s`wavenum'dcrace) wave(`wavenum')
label variable s`wavenum'dcrace "s`wavenum'dcrace:w`wavenum' s discrimination reason: race"
label value s`wavenum'dcrace yesnost

****age
gen r`wavenum'dcage = . 
replace r`wavenum'dcage = .m if (outscw5 == 2 | inlist(scdtd03,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'dcage = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcage = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 
replace r`wavenum'dcage = 0 if scdtd01 == 1 | scdtd02 == 1 | scdtd03 == 0 | scdtd04 == 1 | scdtd05 == 1 | scdtd06 == 1 | scdtd07 == 1 | ///
                               scdtd08 == 1 | scdtd85 == 1
replace r`wavenum'dcage = 1 if scdtd03 == 1

label variable r`wavenum'dcage "r`wavenum'dcage:w`wavenum' r discrimination reason: age" 
label value r`wavenum'dcage yesnost

*wave 5 age
gen s`wavenum'dcage =.
spouse r`wavenum'dcage, result(s`wavenum'dcage) wave(`wavenum')
label variable s`wavenum'dcage "s`wavenum'dcage:w`wavenum' s discrimination reason: age"
label value s`wavenum'dcage yesnost

****Weight
gen r`wavenum'dcwegt = . 
replace r`wavenum'dcwegt = .m if (outscw5 == 2 | inlist(scdtd04,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'dcwegt = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcwegt = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 
replace r`wavenum'dcwegt = 0 if scdtd01 == 1 | scdtd02 == 1 | scdtd03 == 1 | scdtd04 == 0 | scdtd05 == 1 | scdtd06 == 1 | scdtd07 == 1 | ///
                                scdtd08 == 1 | scdtd85 == 1
replace r`wavenum'dcwegt = 1 if scdtd04 == 1

label variable r`wavenum'dcwegt "r`wavenum'dcwegt:w`wavenum' r discrimination reason: weight" 
label value r`wavenum'dcwegt yesnost

*wave 5 wegt
gen s`wavenum'dcwegt =.
spouse r`wavenum'dcwegt, result(s`wavenum'dcwegt) wave(`wavenum')
label variable s`wavenum'dcwegt "s`wavenum'dcwegt:w`wavenum' s discrimination reason: weight"
label value s`wavenum'dcwegt yesnost

****Physical disability
gen r`wavenum'dcdstat = . 
replace r`wavenum'dcdstat = .m if (outscw5 == 2 | inlist(scdtd05,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'dcdstat = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcdstat = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 
replace r`wavenum'dcdstat = 0 if scdtd01 == 1 | scdtd02 == 1 | scdtd03 == 1 | scdtd04 == 1 | scdtd05 == 0 | scdtd06 == 1 | scdtd07 == 1 | ///
                                 scdtd08 == 1 | scdtd85 == 1
replace r`wavenum'dcdstat = 1 if scdtd05 == 1

label variable r`wavenum'dcdstat "r`wavenum'dcdstat:w`wavenum' r discrimination reason: physical disability" 
label value r`wavenum'dcdstat yesnost

*wave 5 dstat
gen s`wavenum'dcdstat =.
spouse r`wavenum'dcdstat, result(s`wavenum'dcdstat) wave(`wavenum')
label variable s`wavenum'dcdstat "s`wavenum'dcdstat:w`wavenum' s discrimination reason: physical disability"
label value s`wavenum'dcdstat yesnost

****Other aspect of your physical appearance
gen r`wavenum'dcaprnc = . 
replace r`wavenum'dcaprnc = .m if (outscw5 == 2 | inlist(scdtd06,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'dcaprnc = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcaprnc = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 
replace r`wavenum'dcaprnc = 0 if scdtd01 == 1 | scdtd02 == 1 | scdtd03 == 1 | scdtd04 == 1 | scdtd05 == 1 | scdtd06 == 0 | scdtd07 == 1 | ///
                                 scdtd08 == 1 | scdtd85 == 1
replace r`wavenum'dcaprnc = 1 if scdtd06 == 1

label variable r`wavenum'dcaprnc "r`wavenum'dcaprnc:w`wavenum' r discrimination reason: other aspect of your physical appearance" 
label value r`wavenum'dcaprnc yesnost

*wave 5 Other aspect of your physical appearance
gen s`wavenum'dcaprnc =.
spouse r`wavenum'dcaprnc, result(s`wavenum'dcaprnc) wave(`wavenum')
label variable s`wavenum'dcaprnc "s`wavenum'dcaprnc:w`wavenum' s discrimination reason: other aspect of your physical appearance"
label value s`wavenum'dcaprnc yesnost

****sexual orientation
gen r`wavenum'dcsxori = . 
replace r`wavenum'dcsxori = .m if (outscw5 == 2 | inlist(scdtd07,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'dcsxori = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcsxori = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 
replace r`wavenum'dcsxori = 0 if scdtd01 == 1 | scdtd02 == 1 | scdtd03 == 1 | scdtd04 == 1 | scdtd05 == 1 | scdtd06 == 1 | scdtd07 == 0 | ///
                                 scdtd08 == 1 | scdtd85 == 1
replace r`wavenum'dcsxori = 1 if scdtd07 == 1

label variable r`wavenum'dcsxori "r`wavenum'dcsxori:w`wavenum' r discrimination reason: sexual orientation" 
label value r`wavenum'dcsxori yesnost

*wave 5 sexual orientation
gen s`wavenum'dcsxori =.
spouse r`wavenum'dcsxori, result(s`wavenum'dcsxori) wave(`wavenum')
label variable s`wavenum'dcsxori "s`wavenum'dcsxori:w`wavenum' s discrimination reason: sexual orientation"
label value s`wavenum'dcsxori yesnost

****financial status
gen r`wavenum'dcfinan = . 
replace r`wavenum'dcfinan = .m if (outscw5 == 2 | inlist(scdtd08,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'dcfinan = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcfinan = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 
replace r`wavenum'dcfinan = 0 if scdtd01 == 1 | scdtd02 == 1 | scdtd03 == 1 | scdtd04 == 1 | scdtd05 == 1 | scdtd06 == 1 | scdtd07 == 1 | ///
                                 scdtd08 == 0 | scdtd85 == 1
replace r`wavenum'dcfinan = 1 if scdtd08 == 1

label variable r`wavenum'dcfinan "r`wavenum'dcfinan:w`wavenum' r discrimination reason: financial status" 
label value r`wavenum'dcfinan yesnost

*wave 5 financial status
gen s`wavenum'dcfinan =.
spouse r`wavenum'dcfinan, result(s`wavenum'dcfinan) wave(`wavenum')
label variable s`wavenum'dcfinan "s`wavenum'dcfinan:w`wavenum' s discrimination reason: financial status"
label value s`wavenum'dcfinan yesnost

****other
gen r`wavenum'dcother = . 
replace r`wavenum'dcother = .m if (outscw5 == 2 | inlist(scdtd08,-1,-2,-9)) & inw`wavenum' == 1
replace r`wavenum'dcother = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcother = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 
replace r`wavenum'dcother = 0 if scdtd01 == 1 | scdtd02 == 1 | scdtd03 == 1 | scdtd04 == 1 | scdtd05 == 1 | scdtd06 == 1 | scdtd07 == 1 | ///
                                 scdtd08 == 1 | scdtd85 == 0
replace r`wavenum'dcother = 1 if scdtd85 == 1

label variable r`wavenum'dcother "r`wavenum'dcother:w`wavenum' r discrimination reason: other" 
label value r`wavenum'dcother yesnost

*wave 5 other
gen s`wavenum'dcother =.
spouse r`wavenum'dcother, result(s`wavenum'dcother) wave(`wavenum')
label variable s`wavenum'dcother "s`wavenum'dcother:w`wavenum' s discrimination reason: other"
label value s`wavenum'dcother yesnost

***summary reason
egen r`wavenum'dcreas_e =rowtotal(r`wavenum'dcgendr r`wavenum'dcrace r`wavenum'dcwegt r`wavenum'dcage r`wavenum'dcdstat r`wavenum'dcaprnc r`wavenum'dcsxori r`wavenum'dcother r`wavenum'dcfinan) ///
                   if inw`wavenum' == 1
replace r`wavenum'dcreas_e  = .c if inlist(outscw5,-1,-3,3) & inw`wavenum' == 1
replace r`wavenum'dcreas_e  = .n if r`wavenum'lsrspct == 6 & r`wavenum'prsrvc == 6 & r`wavenum'notsmrt == 6 & r`wavenum'harass == 6 & r`wavenum'prtrmt== 6 

label variable r`wavenum'dcreas_e "r`wavenum'dcreas_e:w`wavenum' r's number reasons for discrimination"

gen s`wavenum'dcreas_e =.
spouse r`wavenum'dcreas_e, result(s`wavenum'dcreas_e) wave(`wavenum')
label variable s`wavenum'dcreas_e "s`wavenum'dcreas_e:w`wavenum' s's number reasons for discrimination"


**drop ELSA wave core file raw variables***
drop `stre_w5_core'
*
***drop rand ELSA variables***
drop `stre_w5_index'







*****************************************************************************************

pause on
*set wave number
local wavenum =6
local pre_wavenum = `wavenum' -1

*file core**
local stre_w6_core scempl scworka scworkb scworkc scworkd scworke scworkf scworkg scworkh scworki /// 
                   scworkj scworkk scworkl w6scwt scfeela scfeelb scfeelc scfeeld scptra scptrb scptrc scptrd scptre scptrf ///
                   scchd scchda scchdb scchdc scchdd scchde scchdf scfam scfama scfamb scfamc scfamd scfame scfamf ///
                   scfrd scfrda scfrdb scfrdc scfrdd scfrde scfrdf scprtr q18g q21g q25g q29g askpx
                   
merge 1:1 idauniq using "$wave_6_core", keepusing(`stre_w6_core') nogen


***Satisfied with the job***
gen r`wavenum'satjob = .
replace r`wavenum'satjob = .m if inlist(scworka,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'satjob = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'satjob = .w if scempl == 2
replace r`wavenum'satjob = 1 if scworka == 4 
replace r`wavenum'satjob = 2 if scworka == 3
replace r`wavenum'satjob = 3 if scworka == 2
replace r`wavenum'satjob = 4 if scworka == 1

label variable r`wavenum'satjob "r`wavenum'satjob:w`wavenum' whether r is satisfied with job"
label values r`wavenum'satjob job

*wave 6 spouse satisfied with the job
gen s`wavenum'satjob =.
spouse r`wavenum'satjob, result(s`wavenum'satjob) wave(`wavenum')
label variable s`wavenum'satjob "s`wavenum'satjob:w`wavenum' whether s is satisfied with job"
label value s`wavenum'satjob job

***Physical demanding***
gen r`wavenum'demand = . 
replace r`wavenum'demand = .m if inlist(scworkb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'demand = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'demand = .w if scempl == 2
replace r`wavenum'demand = 1 if scworkb == 4 
replace r`wavenum'demand = 2 if scworkb == 3
replace r`wavenum'demand = 3 if scworkb == 2
replace r`wavenum'demand = 4 if scworkb == 1

label variable r`wavenum'demand "r`wavenum'demand:w`wavenum' whether r's job is physically demanding"
label values r`wavenum'demand job

*wave 6 spouse job demanding
gen s`wavenum'demand =.
spouse r`wavenum'demand, result(s`wavenum'demand) wave(`wavenum')
label variable s`wavenum'demand "s`wavenum'demand:w`wavenum' whether s's job is physically demanding"
label value s`wavenum'demand job

***Deserve recognition***
gen r`wavenum'deserve = . 
replace r`wavenum'deserve = .m if inlist(scworkc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'deserve = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'deserve = .w if scempl == 2
replace r`wavenum'deserve = 1 if scworkc == 4 
replace r`wavenum'deserve = 2 if scworkc == 3
replace r`wavenum'deserve = 3 if scworkc == 2
replace r`wavenum'deserve = 4 if scworkc == 1

label variable r`wavenum'deserve "r`wavenum'deserve:w`wavenum' whether r received deserved recognition from work"
label values r`wavenum'deserve job

*wave 6 spouse deserve recognition
gen s`wavenum'deserve =.
spouse r`wavenum'deserve, result(s`wavenum'deserve) wave(`wavenum')
label variable s`wavenum'deserve "s`wavenum'deserve:w`wavenum' whether s received deserved recognition from work"
label value s`wavenum'deserve job

***Salary is adequate***
gen r`wavenum'salary = . 
replace r`wavenum'salary = .m if inlist(scworkd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'salary = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'salary = .w if scempl == 2
replace r`wavenum'salary = 1 if scworkd == 4 
replace r`wavenum'salary = 2 if scworkd == 3
replace r`wavenum'salary = 3 if scworkd == 2
replace r`wavenum'salary = 4 if scworkd == 1

label variable r`wavenum'salary "r`wavenum'salary:w`wavenum' whether r's salary is adequate"
label values r`wavenum'salary job

*wave 6 spouse salary is adequate
gen s`wavenum'salary =.
spouse r`wavenum'salary, result(s`wavenum'salary) wave(`wavenum')
label variable s`wavenum'salary "s`wavenum'salary:w`wavenum' whether s's salary is adequate"
label value s`wavenum'salary job

***Job promotion is poor***
gen r`wavenum'promot = . 
replace r`wavenum'promot = .m if inlist(scworke,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'promot = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'promot = .w if scempl == 2
replace r`wavenum'promot = 1 if scworke == 4 
replace r`wavenum'promot = 2 if scworke == 3
replace r`wavenum'promot = 3 if scworke == 2
replace r`wavenum'promot = 4 if scworke == 1

label variable r`wavenum'promot "r`wavenum'promot:w`wavenum' whether r job promotion prospects are poor"
label values r`wavenum'promot job

*wave 6 spouse job promotion is poor
gen s`wavenum'promot =.
spouse r`wavenum'promot, result(s`wavenum'promot) wave(`wavenum')
label variable s`wavenum'promot "s`wavenum'promot:w`wavenum' whether s job promotion prospects are poor"
label value s`wavenum'promot job

***Job security***
gen r`wavenum'secure = . 
replace r`wavenum'secure = .m if inlist(scworkf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'secure = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'secure = .w if scempl == 2
replace r`wavenum'secure = 1 if scworkf == 4 
replace r`wavenum'secure = 2 if scworkf == 3
replace r`wavenum'secure = 3 if scworkf == 2
replace r`wavenum'secure = 4 if scworkf == 1

label variable r`wavenum'secure "r`wavenum'secure:w`wavenum' whether r job security is poor"
label values r`wavenum'secure job

*wave 6 spouse job security
gen s`wavenum'secure =.
spouse r`wavenum'secure, result(s`wavenum'secure) wave(`wavenum')
label variable s`wavenum'secure "s`wavenum'secure:w`wavenum' whether s job security is poor"
label value s`wavenum'secure job

***Constant time pressure due to a heavy workload***
gen r`wavenum'timepre = . 
replace r`wavenum'timepre = .m if inlist(scworkg,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'timepre = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'timepre = .w if scempl == 2
replace r`wavenum'timepre = 1 if scworkg == 4 
replace r`wavenum'timepre = 2 if scworkg == 3
replace r`wavenum'timepre = 3 if scworkg == 2
replace r`wavenum'timepre = 4 if scworkg == 1

label variable r`wavenum'timepre "r`wavenum'timepre:w`wavenum' whether r is under constant time pressure due to a heavy workload"
label values r`wavenum'timepre job

*wave 6 spouse constant time pressure due to heavy workload
gen s`wavenum'timepre =.
spouse r`wavenum'timepre, result(s`wavenum'timepre) wave(`wavenum')
label variable s`wavenum'timepre "s`wavenum'timepre:w`wavenum' whether s is under constant time pressure due to a heavy workload"
label value s`wavenum'timepre job

***has the opportunity to develop new skills*
gen r`wavenum'ltlfree = . 
replace r`wavenum'ltlfree = .m if inlist(scworkh,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .w if scempl == 2
replace r`wavenum'ltlfree = 1 if scworkh == 4 
replace r`wavenum'ltlfree = 2 if scworkh == 3
replace r`wavenum'ltlfree = 3 if scworkh == 2
replace r`wavenum'ltlfree = 4 if scworkh == 1

label variable r`wavenum'ltlfree "r`wavenum'ltlfree:w`wavenum' whether r has very little freedom to do work"
label values r`wavenum'ltlfree job

*wave 6 spouse has the opportunity to develop new skills
gen s`wavenum'ltlfree =.
spouse r`wavenum'ltlfree, result(s`wavenum'ltlfree) wave(`wavenum')
label variable s`wavenum'ltlfree "s`wavenum'ltlfree:w`wavenum' whether s has very little freedom to do work"
label value s`wavenum'ltlfree job

***develop new skills***
gen r`wavenum'nskills = . 
replace r`wavenum'nskills = .m if inlist(scworki,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'nskills = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'nskills = .w if scempl == 2
replace r`wavenum'nskills = 1 if scworki == 4 
replace r`wavenum'nskills = 2 if scworki == 3
replace r`wavenum'nskills = 3 if scworki == 2
replace r`wavenum'nskills = 4 if scworki == 1

label variable r`wavenum'nskills "r`wavenum'nskills:w`wavenum' whether r has the opportunity to develop new skills"
label values r`wavenum'nskills job

*wave 6 spouse develop new skills
gen s`wavenum'nskills =.
spouse r`wavenum'nskills, result(s`wavenum'nskills) wave(`wavenum')
label variable s`wavenum'nskills "s`wavenum'nskills:w`wavenum' whether s has the opportunity to develop new skills"
label value s`wavenum'nskills job

***support in difficult situation***
gen r`wavenum'support = . 
replace r`wavenum'support = .m if inlist(scworkj,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'support = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'support = .w if scempl == 2
replace r`wavenum'support = 1 if scworkj == 4 
replace r`wavenum'support = 2 if scworkj == 3
replace r`wavenum'support = 3 if scworkj == 2
replace r`wavenum'support = 4 if scworkj == 1

label variable r`wavenum'support "r`wavenum'support:w`wavenum' whether r received adequate support in difficult situations"
label values r`wavenum'support job

*wave 6 spouse support in difficult situation
gen s`wavenum'support =.
spouse r`wavenum'support, result(s`wavenum'support) wave(`wavenum')
label variable s`wavenum'support "s`wavenum'support:w`wavenum' whether s received adequate support in difficult situations"
label value s`wavenum'support job

***Feel control over what happens in most situations***
gen r`wavenum'control = . 
replace r`wavenum'control = .m if inlist(scworkk,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'control = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'control = .w if scempl == 2
replace r`wavenum'control = 1 if scworkk == 4 
replace r`wavenum'control = 2 if scworkk == 3
replace r`wavenum'control = 3 if scworkk == 2
replace r`wavenum'control = 4 if scworkk == 1

label variable r`wavenum'control "r`wavenum'control:w`wavenum' whether r feels control over what happens in most situations"
label values r`wavenum'control job

*wave 6 spouse feel control over what happens in most situations
gen s`wavenum'control =.
spouse r`wavenum'control, result(s`wavenum'control) wave(`wavenum')
label variable s`wavenum'control "s`wavenum'control:w`wavenum' whether s feels control over what happens in most situations"
label value s`wavenum'control job

***Have to work very fast***
gen r`wavenum'workfast = . 
replace r`wavenum'workfast = .m if inlist(scworkl,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'workfast = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'workfast = .w if scempl == 2
replace r`wavenum'workfast = 1 if scworkl == 4 
replace r`wavenum'workfast = 2 if scworkl == 3
replace r`wavenum'workfast = 3 if scworkl == 2
replace r`wavenum'workfast = 4 if scworkl == 1

label variable r`wavenum'workfast "r`wavenum'workfast:w`wavenum' whether r has to work very fast"
label values r`wavenum'workfast job

*wave 6 spouse has to work very fast
gen s`wavenum'workfast =.
spouse r`wavenum'workfast, result(s`wavenum'workfast) wave(`wavenum')
label variable s`wavenum'workfast "s`wavenum'workfast:w`wavenum' whether s has to work very fast"
label value s`wavenum'workfast job

***Job stress summary***
recode r`wavenum'satjob (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'satjob)
recode r`wavenum'deserve  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'deserve)	
recode r`wavenum'salary (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'salary)	
recode r`wavenum'nskills  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'nskills)	
recode r`wavenum'support  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'support)	
recode r`wavenum'control (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'control)	


egen r`wavenum'jobsumm =rowmiss(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) if inw`wavenum' == 1
label variable r`wavenum'jobsumm "r`wavenum'jobsumm:w`wavenum' missings in r's job stress summary mean score"

gen s`wavenum'jobsumm =.
spouse r`wavenum'jobsumm, result(s`wavenum'jobsumm) wave(`wavenum')
label variable s`wavenum'jobsumm "s`wavenum'jobsumm:w`wavenum' missings in s's job stress summary mean score"

egen r`wavenum'jobsum =rowmean(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) 
replace r`wavenum'jobsum  = .m if r`wavenum'jobsumm ==6 & inw`wavenum' == 1
replace r`wavenum'jobsum  = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'jobsum  = .w if scempl == 2
label variable r`wavenum'jobsum "r`wavenum'jobsum:w`wavenum' r's job stress summary mean score"

*wave `wavenum' spouse job stress summary
gen s`wavenum'jobsum =.
spouse r`wavenum'jobsum, result(s`wavenum'jobsum) wave(`wavenum')
label variable s`wavenum'jobsum "s`wavenum'jobsum:w`wavenum' s's job stress summary mean score"

drop xr`wavenum'satjob xr`wavenum'deserve xr`wavenum'salary xr`wavenum'nskills xr`wavenum'support xr`wavenum'control

***feel lack of companionship***
gen r`wavenum'complac = . 
replace r`wavenum'complac = .m if inlist(scfeela,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'complac = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'complac = scfeela if inrange(scfeela,1,3)

label variable r`wavenum'complac "r`wavenum'complac:w`wavenum' whether r often feels lack of companionship"
label value r`wavenum'complac tim

*wave 6 feel lack of companionship
gen s`wavenum'complac =.
spouse r`wavenum'complac, result(s`wavenum'complac) wave(`wavenum')
label variable s`wavenum'complac "s`wavenum'complac:w`wavenum' whether s often feels lack of companionship"
label value s`wavenum'complac tim

***feel left out***
gen r`wavenum'leftout = . 
replace r`wavenum'leftout = .m if inlist(scfeelb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'leftout = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'leftout = scfeelb if inrange(scfeelb,1,3)

label variable r`wavenum'leftout "r`wavenum'leftout:w`wavenum' whether r often feels left out"
label value r`wavenum'leftout tim

*wave 6 feel left out
gen s`wavenum'leftout =.
spouse r`wavenum'leftout, result(s`wavenum'leftout) wave(`wavenum')
label variable s`wavenum'leftout "s`wavenum'leftout:w`wavenum' whether s often feels left out"
label value s`wavenum'leftout tim


***feel isolated from others***
gen r`wavenum'isolate = . 
replace r`wavenum'isolate = .m if inlist(scfeelc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'isolate = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'isolate = scfeelc if inrange(scfeelc,1,3)

label variable r`wavenum'isolate "r`wavenum'isolate:w`wavenum' whether r often feels isolated from others" 
label value r`wavenum'isolate tim

*wave 6 feel isolated from others
gen s`wavenum'isolate =.
spouse r`wavenum'isolate, result(s`wavenum'isolate) wave(`wavenum')
label variable s`wavenum'isolate "s`wavenum'isolate:w`wavenum' whether s often feels isolated from others"
label value s`wavenum'isolate tim


***feel in tune with the people around***
gen r`wavenum'intune = . 
replace r`wavenum'intune = .m if inlist(scfeeld,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'intune = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'intune = scfeeld if inrange(scfeeld,1,3)

label variable r`wavenum'intune "r`wavenum'intune:w`wavenum' whether r often feels not in tune with the people around" 
label value r`wavenum'intune tim

*wave 6 feel in tune with the people around
gen s`wavenum'intune =.
spouse r`wavenum'intune, result(s`wavenum'intune) wave(`wavenum')
label variable s`wavenum'intune "s`wavenum'intune:w`wavenum' whether s often feels not in tune with the people around"
label value s`wavenum'intune tim

****summary score 4 components
recode r`wavenum'intune (1=3) (2=2) (3=1), gen(xr`wavenum'intune)  
egen r`wavenum'lnlysm =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate r`wavenum'intune) if inw`wavenum' == 1
label variable r`wavenum'lnlysm "r`wavenum'lnlysm:w`wavenum' missings in r's 4-item loneliness summary mean score"

gen s`wavenum'lnlysm =.
spouse r`wavenum'lnlysm, result(s`wavenum'lnlysm) wave(`wavenum')
label variable s`wavenum'lnlysm "s`wavenum'lnlysm:w`wavenum' missings in s's 4-item loneliness summary mean score"

egen r`wavenum'lnlys =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate xr`wavenum'intune) if inw`wavenum' == 1
replace r`wavenum'lnlys  = .m if r`wavenum'lnlysm == 4 & inw`wavenum' == 1
replace r`wavenum'lnlys  = .c if mi(w6scwt) & inw`wavenum' == 1

label variable r`wavenum'lnlys "r`wavenum'lnlys:w`wavenum' r's 4-item loneliness summary mean score"

gen s`wavenum'lnlys =.
spouse r`wavenum'lnlys, result(s`wavenum'lnlys) wave(`wavenum')
label variable s`wavenum'lnlys "s`wavenum'lnlys:w`wavenum' s's 4-item loneliness summary mean score"

drop xr`wavenum'intune

****summary score 3 components
egen r`wavenum'lnlys3m =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
label variable r`wavenum'lnlys3m "r`wavenum'lnlys3m:w`wavenum' missings in r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3m =.
spouse r`wavenum'lnlys3m, result(s`wavenum'lnlys3m) wave(`wavenum')
label variable s`wavenum'lnlys3m "s`wavenum'lnlys3m:w`wavenum' missings in s's 3-item loneliness summary mean score"

egen r`wavenum'lnlys3 =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
replace r`wavenum'lnlys3  = .m if r`wavenum'complac == .m & r`wavenum'leftout == .m & r`wavenum'isolate == .m
replace r`wavenum'lnlys3  = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'lnlys3  = .r if r`wavenum'complac == .r & r`wavenum'leftout == .r & r`wavenum'isolate == .r 

label variable r`wavenum'lnlys3 "r`wavenum'lnlys3:w`wavenum' r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3 =.
spouse r`wavenum'lnlys3, result(s`wavenum'lnlys3) wave(`wavenum')
label variable s`wavenum'lnlys3 "s`wavenum'lnlys3:w`wavenum' s's 3-item loneliness summary mean score"

*************************
******Spouse support***
***understand the way you feel
gen r`wavenum'sustdfe = . 
replace r`wavenum'sustdfe = .m if inlist(scptra,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .n if scprtr== 2 & inw`wavenum' == 1
replace r`wavenum'sustdfe = scptra if inrange(scptra,1,4)

label variable r`wavenum'sustdfe "r`wavenum'sustdfe:w`wavenum' r thinks spouse understands the way he/she feels" 
label value r`wavenum'sustdfe attns

*wave 6 understand the way you feel
gen s`wavenum'sustdfe =.
spouse r`wavenum'sustdfe, result(s`wavenum'sustdfe) wave(`wavenum')
label variable s`wavenum'sustdfe "s`wavenum'sustdfe:w`wavenum' s thinks spouse understands the way he/she feels"
label value s`wavenum'sustdfe attns

***rely on serious problem
gen r`wavenum'srely = . 
replace r`wavenum'srely = .m if inlist(scptrb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'srely = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'srely = .n if scprtr == 2 & inw`wavenum' == 1
replace r`wavenum'srely = scptrb if inrange(scptrb,1,4)

label variable r`wavenum'srely "r`wavenum'srely:w`wavenum' r can rely on spouse for a serious problem" 
label value r`wavenum'srely attns

*wave 6 rely on serious problem
gen s`wavenum'srely =.
spouse r`wavenum'srely, result(s`wavenum'srely) wave(`wavenum')
label variable s`wavenum'srely "s`wavenum'srely:w`wavenum' s can rely on spouse for a serious problem"
label value s`wavenum'srely attns

***open up when need to talk about worries
gen r`wavenum'sopenup = . 
replace r`wavenum'sopenup = .m if inlist(scptrc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sopenup = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'sopenup = .n if scprtr == 2 & inw`wavenum' == 1
replace r`wavenum'sopenup = scptrc if inrange(scptrc,1,4)

label variable r`wavenum'sopenup "r`wavenum'sopenup:w`wavenum' r can open up their worries to spouse" 
label value r`wavenum'sopenup attns

*wave 6 open up when need tp talk about worries
gen s`wavenum'sopenup =.
spouse r`wavenum'sopenup, result(s`wavenum'sopenup) wave(`wavenum')
label variable s`wavenum'sopenup "s`wavenum'sopenup:w`wavenum' s can open up their worries to spouse"
label value s`wavenum'sopenup attns

****Criticize  by spouse
gen r`wavenum'scritze = . 
replace r`wavenum'scritze = .m if inlist(scptrd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'scritze = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'scritze = .n if scprtr == 2 & inw`wavenum' == 1
replace r`wavenum'scritze = scptrd if inrange(scptrd,1,4)

label variable r`wavenum'scritze "r`wavenum'scritze:w`wavenum' how much spouse criticizes r" 
label value r`wavenum'scritze attns

*wave 6 Criticize  by spouse
gen s`wavenum'scritze =.
spouse r`wavenum'scritze, result(s`wavenum'scritze) wave(`wavenum')
label variable s`wavenum'scritze "s`wavenum'scritze:w`wavenum' how much spouse criticizes s"
label value s`wavenum'scritze attns

*****let down when counting on them
gen r`wavenum'sletdow = . 
replace r`wavenum'sletdow = .m if inlist(scptre,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sletdow = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'sletdow = .n if scprtr == 2 & inw`wavenum' == 1
replace r`wavenum'sletdow = scptre if inrange(scptre,1,4)

label variable r`wavenum'sletdow "r`wavenum'sletdow:w`wavenum' spouse let r down when counting on him/her" 
label value r`wavenum'sletdow attns

*wave 6 let down when counting on them
gen s`wavenum'sletdow =.
spouse r`wavenum'sletdow, result(s`wavenum'sletdow) wave(`wavenum')
label variable s`wavenum'sletdow "s`wavenum'sletdow:w`wavenum' spouse let s down when counting on him/her"
label value s`wavenum'sletdow attns

*****Get on nerves
gen r`wavenum'sgetnev = . 
replace r`wavenum'sgetnev = .m if inlist(scptrf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .n if scprtr == 2 & inw`wavenum' == 1
replace r`wavenum'sgetnev = scptrf if inrange(scptrf,1,4)

label variable r`wavenum'sgetnev "r`wavenum'sgetnev:w`wavenum' spouse gets on r's nerve" 
label value r`wavenum'sgetnev attns

*wave 6 get on nerves
gen s`wavenum'sgetnev =.
spouse r`wavenum'sgetnev, result(s`wavenum'sgetnev) wave(`wavenum')
label variable s`wavenum'sgetnev "s`wavenum'sgetnev:w`wavenum' spouse gets on s's nerve"
label value s`wavenum'sgetnev attns

*****Too many demand on respondent 
gen r`wavenum'sdemand = . 
replace r`wavenum'sdemand = .m if inlist(q18g,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sdemand = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'sdemand = .n if scprtr == 2 & inw`wavenum' == 1
replace r`wavenum'sdemand = q18g if inrange(q18g,1,4)

label variable r`wavenum'sdemand "r`wavenum'sdemand:w`wavenum' spouse puts too many demands on r" 
label value r`wavenum'sdemand attns

*wave6 to many demand on respondent
gen s`wavenum'sdemand =.
spouse r`wavenum'sdemand, result(s`wavenum'sdemand) wave(`wavenum')
label variable s`wavenum'sdemand "s`wavenum'sdemand:w`wavenum' spouse puts too many demands on s"
label value s`wavenum'sdemand attns

****spouse support summary****
recode r`wavenum'scritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'scritze)	
recode r`wavenum'sletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sletdow)	
recode r`wavenum'sgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sgetnev)	
recode r`wavenum'sdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sdemand)	


egen r`wavenum'ssupport6m =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                           if inw`wavenum' == 1
label variable  r`wavenum'ssupport6m "r`wavenum'ssupport6m:w`wavenum' missings in r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6m=.
spouse r`wavenum'ssupport6m, result(s`wavenum'ssupport6m) wave(`wavenum')  
label variable s`wavenum'ssupport6m "s`wavenum'ssupport6m:w`wavenum' missings in s's lack of spouse support 6-item score"

egen r`wavenum'ssupport6 =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'ssupport6  = .m if r`wavenum'ssupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .n if scprtr == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport6)

label variable r`wavenum'ssupport6 "r`wavenum'ssupport6:w`wavenum' r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6 =.
spouse r`wavenum'ssupport6, result(s`wavenum'ssupport6) wave(`wavenum')
label variable s`wavenum'ssupport6 "s`wavenum'ssupport6:w`wavenum' s's lack of spouse support 6-item score"

****7 items
egen r`wavenum'ssupportm =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand) if inw`wavenum' == 1
label variable  r`wavenum'ssupportm "r`wavenum'ssupportm:w`wavenum' missings in r's lack of spouse support 7-item score"

gen s`wavenum'ssupportm=.
spouse r`wavenum'ssupportm, result(s`wavenum'ssupportm) wave(`wavenum')  
label variable s`wavenum'ssupportm "s`wavenum'ssupportm:w`wavenum' missings in s's lack of spouse support 7-item score"

egen r`wavenum'ssupport =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand) if inw`wavenum' == 1
replace r`wavenum'ssupport  = .m if r`wavenum'ssupportm ==7 & inw`wavenum' == 1
replace r`wavenum'ssupport  = .c if  mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'ssupport  = .n if scprtr == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport)

label variable r`wavenum'ssupport "r`wavenum'ssupport:w`wavenum' r's lack of spouse support 7-item score"

gen s`wavenum'ssupport =.
spouse r`wavenum'ssupport, result(s`wavenum'ssupport) wave(`wavenum')
label variable s`wavenum'ssupport "s`wavenum'ssupport:w`wavenum' s's lack of spouse support 7-item score"

drop xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand

******Child support***
***understand the way you feel
gen r`wavenum'kustdfe = . 
replace r`wavenum'kustdfe = .m if  inlist(scchda,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kustdfe = scchda if inrange(scchda,1,4)

label variable r`wavenum'kustdfe "r`wavenum'kustdfe:w`wavenum' r thinks children understand the way he/she feels" 
label value r`wavenum'kustdfe attnk

*wave 6 understand the way you feel
gen s`wavenum'kustdfe =.
spouse r`wavenum'kustdfe, result(s`wavenum'kustdfe) wave(`wavenum')
label variable s`wavenum'kustdfe "s`wavenum'kustdfe:w`wavenum' s thinks children understand the way he/she feels"
label value s`wavenum'kustdfe attnk

***rely on serious problem
gen r`wavenum'krely = . 
replace r`wavenum'krely = .m if  inlist(scchdb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'krely = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'krely = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'krely = scchdb if inrange(scchdb,1,4)

label variable r`wavenum'krely "r`wavenum'krely:w`wavenum' r can rely on children for a serious problem" 
label value r`wavenum'krely attnk

*wave 6 rely on serious problem
gen s`wavenum'krely =.
spouse r`wavenum'krely, result(s`wavenum'krely) wave(`wavenum')
label variable s`wavenum'krely "s`wavenum'krely:w`wavenum' s can rely on children for a serious problem"
label value s`wavenum'krely attnk

***open up when need tp talk about worries
gen r`wavenum'kopenup = . 
replace r`wavenum'kopenup = .m if inlist(scchdc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kopenup = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'kopenup = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kopenup = scchdc if inrange(scchdc,1,4)

label variable r`wavenum'kopenup "r`wavenum'kopenup:w`wavenum' r can open up their worries to children" 
label value r`wavenum'kopenup attnk

*wave 6 open up when need tp talk about worries
gen s`wavenum'kopenup =.
spouse r`wavenum'kopenup, result(s`wavenum'kopenup) wave(`wavenum')
label variable s`wavenum'kopenup "s`wavenum'kopenup:w`wavenum' s can open up their worries to children"
label value s`wavenum'kopenup attnk

****Criticize by children
gen r`wavenum'kcritze = . 
replace r`wavenum'kcritze = .m if inlist(scchdd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kcritze = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'kcritze = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kcritze = scchdd if inrange(scchdd,1,4)

label variable r`wavenum'kcritze "r`wavenum'kcritze:w`wavenum' how much children criticize r" 
label value r`wavenum'kcritze attnk

*wave 6 Criticize by children
gen s`wavenum'kcritze =.
spouse r`wavenum'kcritze, result(s`wavenum'kcritze) wave(`wavenum')
label variable s`wavenum'kcritze "s`wavenum'kcritze:w`wavenum' how much children criticize s"
label value s`wavenum'kcritze attnk

*****let down when counting on them
gen r`wavenum'kletdow = . 
replace r`wavenum'kletdow = .m if  inlist(scchde,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kletdow = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'kletdow = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kletdow = scchde if inrange(scchde,1,4)

label variable r`wavenum'kletdow "r`wavenum'kletdow:w`wavenum' children let r down when counting on them" 
label value r`wavenum'kletdow attnk

*wave 6 let down when counting on them
gen s`wavenum'kletdow =.
spouse r`wavenum'kletdow, result(s`wavenum'kletdow) wave(`wavenum')
label variable s`wavenum'kletdow "s`wavenum'kletdow:w`wavenum' children let s down when counting on them"
label value s`wavenum'kletdow attnk

*****Get on nerves
gen r`wavenum'kgetnev = . 
replace r`wavenum'kgetnev = .m if inlist(scchdf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kgetnev = scchdf if inrange(scchdf,1,4)

label variable r`wavenum'kgetnev "r`wavenum'kgetnev:w`wavenum' children get on r's nerve" 
label value r`wavenum'kgetnev attnk

*wave 6 get on nerves
gen s`wavenum'kgetnev =.
spouse r`wavenum'kgetnev, result(s`wavenum'kgetnev) wave(`wavenum')
label variable s`wavenum'kgetnev "s`wavenum'kgetnev:w`wavenum' children get on s's nerve"
label value s`wavenum'kgetnev attnk

*****Too many demand on respondent 
gen r`wavenum'kdemand = . 
replace r`wavenum'kdemand = .m if inlist(q21g,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kdemand = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'kdemand = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kdemand = q21g if inrange(q21g,1,4)

label variable r`wavenum'kdemand "r`wavenum'kdemand:w`wavenum' children put too many demands on r" 
label value r`wavenum'kdemand attnk

*wave6 to many demand on respondent
gen s`wavenum'kdemand =.
spouse r`wavenum'kdemand, result(s`wavenum'kdemand) wave(`wavenum')
label variable s`wavenum'kdemand "s`wavenum'kdemand:w`wavenum' children put too many demands on s"
label value s`wavenum'kdemand attnk

****Children support summary****
recode r`wavenum'kcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kcritze)	
recode r`wavenum'kletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kletdow)	
recode r`wavenum'kgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kgetnev)	
recode r`wavenum'kdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kdemand)	

egen r`wavenum'ksupport6m =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev)  ///
                           if inw`wavenum' == 1
label variable r`wavenum'ksupport6m "r`wavenum'ksupport6m:w`wavenum' missings in r's lack of children support 6-item score"

gen s`wavenum'ksupport6m=.
spouse r`wavenum'ksupport6m, result(s`wavenum'ksupport6m) wave(`wavenum')  
label variable s`wavenum'ksupport6m "s`wavenum'ksupport6m:w`wavenum' missings in s's lack of children support 6-item score"

egen r`wavenum'ksupport6 =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev) ///
                           if inw`wavenum' == 1
replace r`wavenum'ksupport6  = .m if r`wavenum'ksupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport6)

label variable r`wavenum'ksupport6 "r`wavenum'ksupport6:w`wavenum' r's lack of children support 6-item score"

gen s`wavenum'ksupport6 =.
spouse r`wavenum'ksupport6, result(s`wavenum'ksupport6) wave(`wavenum')
label variable s`wavenum'ksupport6 "s`wavenum'ksupport6:w`wavenum' s's lack of children support 6-item score"

**7 item
egen r`wavenum'ksupportm =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand)  if inw`wavenum' == 1
label variable r`wavenum'ksupportm "r`wavenum'ksupportm:w`wavenum' missings in r's lack of children support 7-item score"

gen s`wavenum'ksupportm=.
spouse r`wavenum'ksupportm, result(s`wavenum'ksupportm) wave(`wavenum')  
label variable s`wavenum'ksupportm "s`wavenum'ksupportm:w`wavenum' missings in s's lack of children support 7-item score"

egen r`wavenum'ksupport =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand) if inw`wavenum' == 1
replace r`wavenum'ksupport  = .m if r`wavenum'ksupportm ==7 & inw`wavenum' == 1
replace r`wavenum'ksupport  = .c if  mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'ksupport  = .n if scchd == 2  & inw`wavenum' == 1 & mi(r`wavenum'ksupport)

label variable r`wavenum'ksupport "r`wavenum'ksupport:w`wavenum' r's lack of children support 7-item score"

gen s`wavenum'ksupport =.
spouse r`wavenum'ksupport, result(s`wavenum'ksupport) wave(`wavenum')
label variable s`wavenum'ksupport "s`wavenum'ksupport:w`wavenum' s's lack of children support 7-item score"

drop xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand

******other family members support***
***understand the way you feel
gen r`wavenum'oustdfe = . 
replace r`wavenum'oustdfe = .m if inlist(scfama,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oustdfe = scfama if inrange(scfama,1,4)

label variable r`wavenum'oustdfe "r`wavenum'oustdfe:w`wavenum' r thinks other family members understand the way he/she feels" 
label value r`wavenum'oustdfe attnof

*wave 6 understand the way you feel
gen s`wavenum'oustdfe =.
spouse r`wavenum'oustdfe, result(s`wavenum'oustdfe) wave(`wavenum')
label variable s`wavenum'oustdfe "s`wavenum'oustdfe:w`wavenum' s thinks other family members understand the way he/she feels"
label value s`wavenum'oustdfe attnof

***rely on serious problem
gen r`wavenum'orely = . 
replace r`wavenum'orely = .m if inlist(scfamb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'orely = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'orely = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'orely = scfamb if inrange(scfamb,1,4)

label variable r`wavenum'orely "r`wavenum'orely:w`wavenum' r can rely on other family members for a serious problem" 

label value r`wavenum'orely attnof

*wave 6 rely on serious problem
gen s`wavenum'orely =.
spouse r`wavenum'orely, result(s`wavenum'orely) wave(`wavenum')
label variable s`wavenum'orely "s`wavenum'orely:w`wavenum' s can rely on other family members for a serious problem"
label value s`wavenum'orely attnof

***open up when need tp talk about worries
gen r`wavenum'oopenup = . 
replace r`wavenum'oopenup = .m if inlist(scfamc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'oopenup = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'oopenup = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oopenup = scfamc if inrange(scfamc,1,4)

label variable r`wavenum'oopenup "r`wavenum'oopenup:w`wavenum' r can open up their worries to other family members" 
label value r`wavenum'oopenup attnof

*wave 6 open up when need tp talk about worries
gen s`wavenum'oopenup =.
spouse r`wavenum'oopenup, result(s`wavenum'oopenup) wave(`wavenum')
label variable s`wavenum'oopenup "s`wavenum'oopenup:w`wavenum' s can open up their worries to other family members"
label value s`wavenum'oopenup attnof

****Criticize by other family members
gen r`wavenum'ocritze = . 
replace r`wavenum'ocritze = .m if inlist(scfamd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'ocritze = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'ocritze = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ocritze = scfamd if inrange(scfamd,1,4)

label variable r`wavenum'ocritze "r`wavenum'ocritze:w`wavenum' how much other family members criticize r" 
label value r`wavenum'ocritze attnof

*wave 6 Criticize by other family members
gen s`wavenum'ocritze =.
spouse r`wavenum'ocritze, result(s`wavenum'ocritze) wave(`wavenum')
label variable s`wavenum'ocritze "s`wavenum'ocritze:w`wavenum' how much other family members criticize s"
label value s`wavenum'ocritze attnof

*****let down when counting on them
gen r`wavenum'oletdow = . 
replace r`wavenum'oletdow = .m if inlist(scfame,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'oletdow = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'oletdow = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oletdow = scfame if inrange(scfame,1,4)

label variable r`wavenum'oletdow "r`wavenum'oletdow:w`wavenum' other family members let r down when counting on them" 
label value r`wavenum'oletdow attnof

*wave 6 let down when counting on them
gen s`wavenum'oletdow =.
spouse r`wavenum'oletdow, result(s`wavenum'oletdow) wave(`wavenum')
label variable s`wavenum'oletdow "s`wavenum'oletdow:w`wavenum' other family members let s down when counting on them"
label value s`wavenum'oletdow attnof

*****Get on nerves
gen r`wavenum'ogetnev = . 
replace r`wavenum'ogetnev = .m if inlist(scfamf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ogetnev = scfamf if inrange(scfamf,1,4)

label variable r`wavenum'ogetnev "r`wavenum'ogetnev:w`wavenum' other family members get on r's nerve" 
label value r`wavenum'ogetnev attnof

*wave 6 get on nerves
gen s`wavenum'ogetnev =.
spouse r`wavenum'ogetnev, result(s`wavenum'ogetnev) wave(`wavenum')
label variable s`wavenum'ogetnev "s`wavenum'ogetnev:w`wavenum' other family members get on s's nerve"
label value s`wavenum'ogetnev attnof


*****Too many demand on respondent 
gen r`wavenum'odemand = . 
replace r`wavenum'odemand = .m if inlist(q25g,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'odemand = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'odemand = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'odemand = q25g if inrange(q25g,1,4)

label variable r`wavenum'odemand "r`wavenum'odemand:w`wavenum' other family members put too many demands on r" 
label value r`wavenum'odemand attnof

*wave6 to many demand on respondent
gen s`wavenum'odemand =.
spouse r`wavenum'odemand, result(s`wavenum'odemand) wave(`wavenum')
label variable s`wavenum'odemand "s`wavenum'odemand:w`wavenum' other family members put too many demands on s"
label value s`wavenum'odemand attnof

****Other family members support summary****
recode r`wavenum'ocritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ocritze)	
recode r`wavenum'oletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'oletdow)	
recode r`wavenum'ogetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ogetnev)	
recode r`wavenum'odemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'odemand)	

egen r`wavenum'osupport6m =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'osupport6m "r`wavenum'osupport6m:w`wavenum' missings in r's lack of other family members support 6-item score"

gen s`wavenum'osupport6m=.
spouse r`wavenum'osupport6m, result(s`wavenum'osupport6m) wave(`wavenum')  
label variable s`wavenum'osupport6m "s`wavenum'osupport6m:w`wavenum' missings in s's lack of other family members support 6-item score"

egen r`wavenum'osupport6 =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) if inw`wavenum' == 1
replace r`wavenum'osupport6  = .m if r`wavenum'osupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'osupport6  = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'osupport6  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport6)

label variable r`wavenum'osupport6 "r`wavenum'osupport6:w`wavenum' r's lack of other family members support 6-item score"

gen s`wavenum'osupport6 =.
spouse r`wavenum'osupport6, result(s`wavenum'osupport6) wave(`wavenum')
label variable s`wavenum'osupport6 "s`wavenum'osupport6:w`wavenum' s's lack of other family members support 6-item score"

***7 items
egen r`wavenum'osupportm =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand)  if inw`wavenum' == 1
label variable r`wavenum'osupportm "r`wavenum'osupportm:w`wavenum' missings in r's lack of other family members support 7-item score"

gen s`wavenum'osupportm=.
spouse r`wavenum'osupportm, result(s`wavenum'osupportm) wave(`wavenum')  
label variable s`wavenum'osupportm "s`wavenum'osupportm:w`wavenum' missings in s's lack of other family members support 7-item score"

egen r`wavenum'osupport =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand) if inw`wavenum' == 1
replace r`wavenum'osupport  = .m if r`wavenum'osupportm ==7 & inw`wavenum' == 1
replace r`wavenum'osupport  = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'osupport  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport)

label variable r`wavenum'osupport "r`wavenum'osupport:w`wavenum' r's lack of other family members support 7-item score"

gen s`wavenum'osupport =.
spouse r`wavenum'osupport, result(s`wavenum'osupport) wave(`wavenum')
label variable s`wavenum'osupport "s`wavenum'osupport:w`wavenum' s's lack of other family members support 7-item score"

drop xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand


******Friend support***
***understand the way you feel
gen r`wavenum'fustdfe = . 
replace r`wavenum'fustdfe = .m if inlist(scfrda,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fustdfe = scfrda if inrange(scfrda,1,4)

label variable r`wavenum'fustdfe "r`wavenum'fustdfe:w`wavenum' r thinks friends understand the way he/she feels" 
label value r`wavenum'fustdfe attnf

*wave 6 understand the way you feel
gen s`wavenum'fustdfe =.
spouse r`wavenum'fustdfe, result(s`wavenum'fustdfe) wave(`wavenum')
label variable s`wavenum'fustdfe "s`wavenum'fustdfe:w`wavenum' s thinks friends understand the way he/she feels"
label value s`wavenum'fustdfe attnf

***rely on serious problem
gen r`wavenum'frely = . 
replace r`wavenum'frely = .m if inlist(scfrdb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'frely = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'frely = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'frely = scfrdb if inrange(scfrdb,1,4)

label variable r`wavenum'frely "r`wavenum'frely:w`wavenum' r can rely on friends for a serious problem" 
label value r`wavenum'frely attnf

*wave 6 rely on serious problem
gen s`wavenum'frely =.
spouse r`wavenum'frely, result(s`wavenum'frely) wave(`wavenum')
label variable s`wavenum'frely "s`wavenum'frely:w`wavenum' s can rely on friends for a serious problem"
label value s`wavenum'frely attnf

***open up when need tp talk about worries
gen r`wavenum'fopenup = . 
replace r`wavenum'fopenup = .m if inlist(scfrdc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fopenup = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'fopenup = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fopenup = scfrdc if inrange(scfrdc,1,4)

label variable r`wavenum'fopenup "r`wavenum'fopenup:w`wavenum' r can open up their worries to friends" 
label value r`wavenum'fopenup attnf

*wave 6 open up when need tp talk about worries
gen s`wavenum'fopenup =.
spouse r`wavenum'fopenup, result(s`wavenum'fopenup) wave(`wavenum')
label variable s`wavenum'fopenup "s`wavenum'fopenup:w`wavenum' s can open up their worries to friends"
label value s`wavenum'fopenup attnf

****Criticize by friend
gen r`wavenum'fcritze = . 
replace r`wavenum'fcritze = .m if inlist(scfrdd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fcritze = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'fcritze = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fcritze = scfrdd if inrange(scfrdd,1,4)

label variable r`wavenum'fcritze "r`wavenum'fcritze:w`wavenum' how much friends criticize r" 
label value r`wavenum'fcritze attnf

*wave 6 Criticize by friend
gen s`wavenum'fcritze =.
spouse r`wavenum'fcritze, result(s`wavenum'fcritze) wave(`wavenum')
label variable s`wavenum'fcritze "s`wavenum'fcritze:w`wavenum' how much friends criticize s"
label value s`wavenum'fcritze attnf

*****let down when counting on them
gen r`wavenum'fletdow = . 
replace r`wavenum'fletdow = .m if inlist(scfrde,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fletdow = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'fletdow = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fletdow = scfrde if inrange(scfrde,1,4)

label variable r`wavenum'fletdow "r`wavenum'fletdow:w`wavenum' friends let r down when counting on them" 
label value r`wavenum'fletdow attnf

*wave 6 let down when counting on them
gen s`wavenum'fletdow =.
spouse r`wavenum'fletdow, result(s`wavenum'fletdow) wave(`wavenum')
label variable s`wavenum'fletdow "s`wavenum'fletdow:w`wavenum' friends let s down when counting on them"
label value s`wavenum'fletdow attnf

*****Get on nerves
gen r`wavenum'fgetnev = . 
replace r`wavenum'fgetnev = .m if inlist(scfrdf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fgetnev = scfrdf if inrange(scfrdf,1,4)

label variable r`wavenum'fgetnev "r`wavenum'fgetnev:w`wavenum' friends gets on r's nerve" 
label value r`wavenum'fgetnev attnf

*wave 6 get on nerves
gen s`wavenum'fgetnev =.
spouse r`wavenum'fgetnev, result(s`wavenum'fgetnev) wave(`wavenum')
label variable s`wavenum'fgetnev "s`wavenum'fgetnev:w`wavenum' friends gets on s's nerve"
label value s`wavenum'fgetnev attnf

*****Too many demand on respondent 
gen r`wavenum'fdemand = . 
replace r`wavenum'fdemand = .m if inlist(q29g,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fdemand = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'fdemand = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fdemand = q29g if inrange(q29g,1,4)

label variable r`wavenum'fdemand "r`wavenum'fdemand:w`wavenum' friends put too many demands on r" 
label value r`wavenum'fdemand attnf

*wave6 to many demand on respondent
gen s`wavenum'fdemand =.
spouse r`wavenum'fdemand, result(s`wavenum'fdemand) wave(`wavenum')
label variable s`wavenum'fdemand "s`wavenum'fdemand:w`wavenum' friends put too many demands on s"
label value s`wavenum'fdemand attnf

****Friends support summary****
recode r`wavenum'fcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fcritze)	
recode r`wavenum'fletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fletdow)	
recode r`wavenum'fgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fgetnev)	
recode r`wavenum'fdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fdemand)	


egen r`wavenum'fsupport6m =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'fsupport6m "r`wavenum'fsupport6m:w`wavenum' missings in r's lack of friends support 6-item score"

gen s`wavenum'fsupport6m=.
spouse r`wavenum'fsupport6m, result(s`wavenum'fsupport6m) wave(`wavenum')  
label variable s`wavenum'fsupport6m "s`wavenum'fsupport6m:w`wavenum' missings in s's lack of friends support 6-item score"

egen r`wavenum'fsupport6 =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'fsupport6  = .m if r`wavenum'fsupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport6)

label variable r`wavenum'fsupport6 "r`wavenum'fsupport6:w`wavenum' r's lack of friends support 6-item score"

gen s`wavenum'fsupport6 =.
spouse r`wavenum'fsupport6, result(s`wavenum'fsupport6) wave(`wavenum')
label variable s`wavenum'fsupport6 "s`wavenum'fsupport6:w`wavenum' s's lack of friends support 6-item score"

***7 items
egen r`wavenum'fsupportm =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand)  if inw`wavenum' == 1
label variable r`wavenum'fsupportm "r`wavenum'fsupportm:w`wavenum' missings in r's lack of friends support 7-item score"

gen s`wavenum'fsupportm=.
spouse r`wavenum'fsupportm, result(s`wavenum'fsupportm) wave(`wavenum')  
label variable s`wavenum'fsupportm "s`wavenum'fsupportm:w`wavenum' missings in s's lack of friends support 7-item score"

egen r`wavenum'fsupport =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand) if inw`wavenum' == 1
replace r`wavenum'fsupport  = .m if r`wavenum'fsupportm ==7 & inw`wavenum' == 1
replace r`wavenum'fsupport  = .c if mi(w6scwt) & inw`wavenum' == 1
replace r`wavenum'fsupport  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport)

label variable r`wavenum'fsupport "r`wavenum'fsupport:w`wavenum' r's lack of friends support 7-item score"

gen s`wavenum'fsupport =.
spouse r`wavenum'fsupport, result(s`wavenum'fsupport) wave(`wavenum')
label variable s`wavenum'fsupport "s`wavenum'fsupport:w`wavenum' s's lack of friends support 7-item score"

drop xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand


**drop ELSA wave core file raw variables***
drop `stre_w6_core'



*****************************************************************************************

pause on
*set wave number
local wavenum = 7
local pre_wavenum = `wavenum' -1

*file core**
local stre_w7_core scempl scworka scworkb scworkc scworkd scworke scworkf scworkg scworkh scworki /// 
                   scworkj scworkk scworkl scarea1 scarea2 scarea3 scarea4 scarea5 scarea6 scarea7 scarea8 scprt ///
                   scarea9 w7scwt scfeela scfeelb scfeelc scfeeld scptra scptrb scptrc scptrd scptre scptrf scfrd scfrda scfrdb scfrdc scfrdd scfrde scfrdf ///
                   scchd scchda scchdb scchdc scchdd scchde scchdf scfam scfama scfamb scfamc scfamd scfame scfamf scptrg scchdg scfamg scfrdg askpx
                    
merge 1:1 idauniq using "$wave_7_core", keepusing(`stre_w7_core') nogen



***Satisfied with the job***
gen r`wavenum'satjob = . 
replace r`wavenum'satjob = .m if inlist(scworka,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'satjob = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'satjob = .w if scempl == 2
replace r`wavenum'satjob = 1 if scworka == 4 
replace r`wavenum'satjob = 2 if scworka == 3
replace r`wavenum'satjob = 3 if scworka == 2
replace r`wavenum'satjob = 4 if scworka == 1

label variable r`wavenum'satjob "r`wavenum'satjob:w`wavenum' whether r is satisfied with job"
label values r`wavenum'satjob job

*wave 7 spouse satisfied with the job
gen s`wavenum'satjob =.
spouse r`wavenum'satjob, result(s`wavenum'satjob) wave(`wavenum')
label variable s`wavenum'satjob "s`wavenum'satjob:w`wavenum' whether s is satisfied with job"
label value s`wavenum'satjob job

***Physical demanding***
gen r`wavenum'demand = . 
replace r`wavenum'demand = .m if inlist(scworkb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'demand = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'demand = .w if scempl == 2
replace r`wavenum'demand = 1 if scworkb == 4 
replace r`wavenum'demand = 2 if scworkb == 3
replace r`wavenum'demand = 3 if scworkb == 2
replace r`wavenum'demand = 4 if scworkb == 1

label variable r`wavenum'demand "r`wavenum'demand:w`wavenum' whether r's job is physically demanding"
label values r`wavenum'demand job

*wave 7 spouse job demanding
gen s`wavenum'demand =.
spouse r`wavenum'demand, result(s`wavenum'demand) wave(`wavenum')
label variable s`wavenum'demand "s`wavenum'demand:w`wavenum' whether s's job is physically demanding"
label value s`wavenum'demand job

*** Received deserved recognition***
gen r`wavenum'deserve = . 
replace r`wavenum'deserve = .m if inlist(scworkc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'deserve = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'deserve = .w if scempl == 2
replace r`wavenum'deserve = 1 if scworkc == 4 
replace r`wavenum'deserve = 2 if scworkc == 3
replace r`wavenum'deserve = 3 if scworkc == 2
replace r`wavenum'deserve = 4 if scworkc == 1

label variable r`wavenum'deserve "r`wavenum'deserve:w`wavenum' whether r received deserved recognition from work"
label values r`wavenum'deserve job

*wave 7 spouse received deserved recognition
gen s`wavenum'deserve =.
spouse r`wavenum'deserve, result(s`wavenum'deserve) wave(`wavenum')
label variable s`wavenum'deserve "s`wavenum'deserve:w`wavenum' whether s received deserved recognition from work"
label value s`wavenum'deserve job

***Salary is adequate***
gen r`wavenum'salary = .
replace r`wavenum'salary = .m if inlist(scworkd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'salary = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'salary = .w if scempl == 2
replace r`wavenum'salary = 1 if scworkd == 4 
replace r`wavenum'salary = 2 if scworkd == 3
replace r`wavenum'salary = 3 if scworkd == 2
replace r`wavenum'salary = 4 if scworkd == 1

label variable r`wavenum'salary "r`wavenum'salary:w`wavenum' whether r's salary is adequate"
label values r`wavenum'salary job

*wave 7 spouse salary is adequate
gen s`wavenum'salary =.
spouse r`wavenum'salary, result(s`wavenum'salary) wave(`wavenum')
label variable s`wavenum'salary "s`wavenum'salary:w`wavenum' whether s's salary is adequate"
label value s`wavenum'salary job

***Job promotion is poor***
gen r`wavenum'promot = . 
replace r`wavenum'promot = .m if inlist(scworke,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'promot = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'promot = .w if scempl == 2
replace r`wavenum'promot = 1 if scworke == 4 
replace r`wavenum'promot = 2 if scworke == 3
replace r`wavenum'promot = 3 if scworke == 2
replace r`wavenum'promot = 4 if scworke == 1

label variable r`wavenum'promot "r`wavenum'promot:w`wavenum' whether r job promotion prospects are poor"
label values r`wavenum'promot job

*wave 7 spouse job promotion is poor
gen s`wavenum'promot =.
spouse r`wavenum'promot, result(s`wavenum'promot) wave(`wavenum')
label variable s`wavenum'promot "s`wavenum'promot:w`wavenum' whether s job promotion prospects are poor"
label value s`wavenum'promot job

***Job security***
gen r`wavenum'secure = . 
replace r`wavenum'secure = .m if inlist(scworkf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'secure = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'secure = .w if scempl == 2
replace r`wavenum'secure = 1 if scworkf == 4 
replace r`wavenum'secure = 2 if scworkf == 3
replace r`wavenum'secure = 3 if scworkf == 2
replace r`wavenum'secure = 4 if scworkf == 1

label variable r`wavenum'secure "r`wavenum'secure:w`wavenum' whether r job security is poor"
label values r`wavenum'secure job

*wave 7 spouse job security
gen s`wavenum'secure =.
spouse r`wavenum'secure, result(s`wavenum'secure) wave(`wavenum')
label variable s`wavenum'secure "s`wavenum'secure:w`wavenum' whether s job security is poor"
label value s`wavenum'secure job

***Constant time pressure due to a heavy workload***
gen r`wavenum'timepre = . 
replace r`wavenum'timepre = .m if inlist(scworkg,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'timepre = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'timepre = .w if scempl == 2
replace r`wavenum'timepre = 1 if scworkg == 4 
replace r`wavenum'timepre = 2 if scworkg == 3
replace r`wavenum'timepre = 3 if scworkg == 2
replace r`wavenum'timepre = 4 if scworkg == 1

label variable r`wavenum'timepre "r`wavenum'timepre:w`wavenum' whether r is under constant time pressure due to a heavy workload"
label values r`wavenum'timepre job

*wave 7 spouse constant time pressure due to heavy workload
gen s`wavenum'timepre =.
spouse r`wavenum'timepre, result(s`wavenum'timepre) wave(`wavenum')
label variable s`wavenum'timepre "s`wavenum'timepre:w`wavenum' whether s is under constant time pressure due to a heavy workload"
label value s`wavenum'timepre job

***has the opportunity to develop new skills*
gen r`wavenum'ltlfree = . 
replace r`wavenum'ltlfree = .m if inlist(scworkh,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .w if scempl == 2
replace r`wavenum'ltlfree = 1 if scworkh == 4 
replace r`wavenum'ltlfree = 2 if scworkh == 3
replace r`wavenum'ltlfree = 3 if scworkh == 2
replace r`wavenum'ltlfree = 4 if scworkh == 1

label variable r`wavenum'ltlfree "r`wavenum'ltlfree:w`wavenum' whether r has very little freedom to do work"
label values r`wavenum'ltlfree job

*wave 7 spouse has the opportunity to develop new skills
gen s`wavenum'ltlfree =.
spouse r`wavenum'ltlfree, result(s`wavenum'ltlfree) wave(`wavenum')
label variable s`wavenum'ltlfree "s`wavenum'ltlfree:w`wavenum' whether s has very little freedom to do work"
label value s`wavenum'ltlfree job

***develop new skills***
gen r`wavenum'nskills = . 
replace r`wavenum'nskills = .m if inlist(scworki,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'nskills = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'nskills = .w if scempl == 2
replace r`wavenum'nskills = 1 if scworki == 4 
replace r`wavenum'nskills = 2 if scworki == 3
replace r`wavenum'nskills = 3 if scworki == 2
replace r`wavenum'nskills = 4 if scworki == 1

label variable r`wavenum'nskills "r`wavenum'nskills:w`wavenum' whether r has the opportunity to develop new skills"
label values r`wavenum'nskills job

*wave 7 spouse develop new skills
gen s`wavenum'nskills =.
spouse r`wavenum'nskills, result(s`wavenum'nskills) wave(`wavenum')
label variable s`wavenum'nskills "s`wavenum'nskills:w`wavenum' whether s has the opportunity to develop new skills"
label value s`wavenum'nskills job

***support in difficult situation***
gen r`wavenum'support = . 
replace r`wavenum'support = .m if inlist(scworkj,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'support = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'support = .w if scempl == 2
replace r`wavenum'support = 1 if scworkj == 4 
replace r`wavenum'support = 2 if scworkj == 3
replace r`wavenum'support = 3 if scworkj == 2
replace r`wavenum'support = 4 if scworkj == 1

label variable r`wavenum'support "r`wavenum'support:w`wavenum' whether r received adequate support in difficult situations"
label values r`wavenum'support job

*wave 7 spouse support in difficult situation
gen s`wavenum'support =.
spouse r`wavenum'support, result(s`wavenum'support) wave(`wavenum')
label variable s`wavenum'support "s`wavenum'support:w`wavenum' whether s received adequate support in difficult situations"
label value s`wavenum'support job

***Feel control over what happens in most situations***
gen r`wavenum'control = . 
replace r`wavenum'control = .m if inlist(scworkk,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'control = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'control = .w if scempl == 2
replace r`wavenum'control = 1 if scworkk == 4 
replace r`wavenum'control = 2 if scworkk == 3
replace r`wavenum'control = 3 if scworkk == 2
replace r`wavenum'control = 4 if scworkk == 1

label variable r`wavenum'control "r`wavenum'control:w`wavenum' whether r feels control over what happens in most situations"
label values r`wavenum'control job

*wave 7 spouse feel control over what happens in most situations
gen s`wavenum'control =.
spouse r`wavenum'control, result(s`wavenum'control) wave(`wavenum')
label variable s`wavenum'control "s`wavenum'control:w`wavenum' whether s feels control over what happens in most situations"
label value s`wavenum'control job

***Have to work very fast***
gen r`wavenum'workfast = . 
replace r`wavenum'workfast = .m if inlist(scworkl,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'workfast = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'workfast = .w if scempl == 2
replace r`wavenum'workfast = 1 if scworkl == 4 
replace r`wavenum'workfast = 2 if scworkl == 3
replace r`wavenum'workfast = 3 if scworkl == 2
replace r`wavenum'workfast = 4 if scworkl == 1

label variable r`wavenum'workfast "r`wavenum'workfast:w`wavenum' whether r has to work very fast"
label values r`wavenum'workfast job

*wave 7 spouse has to work very fast
gen s`wavenum'workfast =.
spouse r`wavenum'workfast, result(s`wavenum'workfast) wave(`wavenum')
label variable s`wavenum'workfast "s`wavenum'workfast:w`wavenum' whether s has to work very fast"
label value s`wavenum'workfast job

***Job stress summary***
recode r`wavenum'satjob (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'satjob)
recode r`wavenum'deserve  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'deserve)	
recode r`wavenum'salary (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'salary)	
recode r`wavenum'nskills  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'nskills)	
recode r`wavenum'support  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'support)	
recode r`wavenum'control (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'control)	


egen r`wavenum'jobsumm =rowmiss(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) if inw`wavenum' == 1
label variable r`wavenum'jobsumm "r`wavenum'jobsumm:w`wavenum' missings in r's job stress summary mean score"

gen s`wavenum'jobsumm =.
spouse r`wavenum'jobsumm, result(s`wavenum'jobsumm) wave(`wavenum')
label variable s`wavenum'jobsumm "s`wavenum'jobsumm:w`wavenum' missings in s's job stress summary mean score"

egen r`wavenum'jobsum =rowmean(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) 
replace r`wavenum'jobsum  = .m if r`wavenum'jobsumm ==6  & inw`wavenum' == 1
replace r`wavenum'jobsum  = .c if mi(w7scwt)  & inw`wavenum' == 1
replace r`wavenum'jobsum  = .w if scempl == 2
label variable r`wavenum'jobsum "r`wavenum'jobsum:w`wavenum' r's job stress summary mean score"

*wave `wavenum' spouse job stress summary
gen s`wavenum'jobsum =.
spouse r`wavenum'jobsum, result(s`wavenum'jobsum) wave(`wavenum')
label variable s`wavenum'jobsum "s`wavenum'jobsum:w`wavenum' s's job stress summary mean score"

drop xr`wavenum'satjob xr`wavenum'deserve xr`wavenum'salary xr`wavenum'nskills xr`wavenum'support xr`wavenum'control

***Belong in this area***
gen r`wavenum'belong = . 
missing_w`wavenum' w7scwt scarea1, result(r`wavenum'belong) 
replace r`wavenum'belong = .c if mi(w7scwt)
replace r`wavenum'belong = scarea1 if inrange(scarea1,1,7)

label variable r`wavenum'belong "r`wavenum'belong:w`wavenum' whether r feels part of/doesn't belong in this area"

*wave 7 spouse belongs in this area
gen s`wavenum'belong =.
spouse r`wavenum'belong, result(s`wavenum'belong) wave(`wavenum')
label variable s`wavenum'belong "s`wavenum'belong:w`wavenum' whether s feels part of/doesn't belong in this area"

***Vandalism and Graffitti*
gen r`wavenum'vandal =. 
missing_w`wavenum' w7scwt scarea2, result(r`wavenum'vandal)
replace r`wavenum'vandal = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'vandal = 7 if scarea2 == 1
replace r`wavenum'vandal = 6 if scarea2 == 2 
replace r`wavenum'vandal = 5 if scarea2 == 3 
replace r`wavenum'vandal = 4 if scarea2 == 4 
replace r`wavenum'vandal = 3 if scarea2 == 5 
replace r`wavenum'vandal = 2 if scarea2 == 6 
replace r`wavenum'vandal = 1 if scarea2 == 7 

label variable r`wavenum'vandal "r`wavenum'vandal:w`wavenum' whether r vandalism is no problem/big problem in this area"

*wave 7 spouse vandalism and graffiti
gen s`wavenum'vandal =.
spouse r`wavenum'vandal, result(s`wavenum'vandal) wave(`wavenum')
label variable s`wavenum'vandal "s`wavenum'vandal:w`wavenum' whether s vandalism is no problem/big problem in this area"

****Feel alone in this area***
gen r`wavenum'alone=. 
missing_w`wavenum' w7scwt scarea3, result(r`wavenum'alone)
replace r`wavenum'alone = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'alone = 7 if scarea3 == 1
replace r`wavenum'alone = 6 if scarea3 == 2 
replace r`wavenum'alone = 5 if scarea3 == 3 
replace r`wavenum'alone = 4 if scarea3 == 4 
replace r`wavenum'alone = 3 if scarea3 == 5 
replace r`wavenum'alone = 2 if scarea3 == 6 
replace r`wavenum'alone = 1 if scarea3 == 7 

label variable r`wavenum'alone "r`wavenum'vandal:w`wavenum' whether r never felt lonely/feel lonely in this area"

*wave 7 spouse feel alone in this area
gen s`wavenum'alone =.
spouse r`wavenum'alone, result(s`wavenum'alone) wave(`wavenum')
label variable s`wavenum'alone "s`wavenum'alone:w`wavenum' whether s never felt lonely/feel lonely in this area"

***Dont trust in this area***
gen r`wavenum'trust = . 
missing_w`wavenum' w7scwt scarea4, result(r`wavenum'trust)
replace r`wavenum'trust = .c if mi(w7scwt)
replace r`wavenum'trust = scarea4 if inrange(scarea4,1,7)

label variable r`wavenum'trust "r`wavenum'trust:w`wavenum' whether r feels people can be/can't be trusted in this area"

*wave 7 spouse dont trust people
gen s`wavenum'trust =.
spouse r`wavenum'trust, result(s`wavenum'trust) wave(`wavenum')
label variable s`wavenum'trust "s`wavenum'trust:w`wavenum' whether s feels people can be/can't be trusted in this area"

**Afraid to walk around alone***
gen r`wavenum'afwalk = . 
missing_w`wavenum' w7scwt scarea5, result(r`wavenum'afwalk)
replace r`wavenum'afwalk = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'afwalk = 7 if scarea5 == 1
replace r`wavenum'afwalk = 6 if scarea5 == 2 
replace r`wavenum'afwalk = 5 if scarea5 == 3 
replace r`wavenum'afwalk = 4 if scarea5 == 4 
replace r`wavenum'afwalk = 3 if scarea5 == 5 
replace r`wavenum'afwalk = 2 if scarea5 == 6 
replace r`wavenum'afwalk = 1 if scarea5 == 7 
label variable r`wavenum'afwalk "r`wavenum'afwalk:w`wavenum' whether r feels safe/afraid walking alone in this area"

*wave 7 spouse afraid walk
gen s`wavenum'afwalk =.
spouse r`wavenum'afwalk, result(s`wavenum'afwalk) wave(`wavenum')
label variable s`wavenum'afwalk "s`wavenum'afwalk:w`wavenum' whether s feels safe/afraid walking alone in this area"

***Unfriendly people ***
gen r`wavenum'unfriend = . 
missing_w`wavenum' w7scwt scarea6, result(r`wavenum'unfriend)
replace r`wavenum'unfriend = .c if mi(w7scwt)
replace r`wavenum'unfriend = scarea6 if inrange(scarea6 ,1,7)

label variable r`wavenum'unfriend "r`wavenum'unfriend:w`wavenum' whether r feels people are friendly/unfriendly in this area"

*wave 7 spouse unfriendly people
gen s`wavenum'unfriend =.
spouse r`wavenum'unfriend, result(s`wavenum'unfriend) wave(`wavenum')
label variable s`wavenum'unfriend "s`wavenum'unfriend:w`wavenum' whether s feels people are friendly/unfriendly in this area"

***Take advantage of respondent
gen r`wavenum'tadvan=. 
missing_w`wavenum' w7scwt scarea7, result(r`wavenum'tadvan)
replace r`wavenum'tadvan = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'tadvan = 7 if scarea7 == 1
replace r`wavenum'tadvan = 6 if scarea7 == 2 
replace r`wavenum'tadvan = 5 if scarea7 == 3 
replace r`wavenum'tadvan = 4 if scarea7 == 4 
replace r`wavenum'tadvan = 3 if scarea7 == 5 
replace r`wavenum'tadvan = 2 if scarea7 == 6 
replace r`wavenum'tadvan = 1 if scarea7 == 7 

label variable r`wavenum'tadvan "r`wavenum'tadvan:w`wavenum' r feels people take advantage of/treat r fairly in this area"

*wave 7 spouse take advantage of
gen s`wavenum'tadvan =.
spouse r`wavenum'tadvan, result(s`wavenum'tadvan) wave(`wavenum')
label variable s`wavenum'tadvan "s`wavenum'tadvan:w`wavenum' s feels people take advantage of/treat s fairly in this area"

***Full of rubbish and litter***
gen r`wavenum'rubbish = . 
missing_w`wavenum' w7scwt scarea8, result(r`wavenum'rubbish)
replace r`wavenum'rubbish = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'rubbish = scarea8 if inrange(scarea8,1,7)

label variable r`wavenum'rubbish "r`wavenum'rubbish:w`wavenum' whether r feels area is clean/full of rubbish and litter"

*wave 7 spouse full of rubbish and litter
gen s`wavenum'rubbish =.
spouse r`wavenum'rubbish, result(s`wavenum'rubbish) wave(`wavenum')
label variable s`wavenum'rubbish "s`wavenum'rubbish:w`wavenum' whether s feels area is clean/full of rubbish and litter"

***Don't get help from other***
gen r`wavenum'hlpntr = . 
missing_w`wavenum' w7scwt scarea9, result(r`wavenum'hlpntr)
replace r`wavenum'hlpntr = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'hlpntr = scarea9 if inrange(scarea9,1,7)

label variable r`wavenum'hlpntr "r`wavenum'hlpntr:w`wavenum' whether r feels people will help/won't help in this area"

*wave 7 spouse don't get help from other
gen s`wavenum'hlpntr =.
spouse r`wavenum'hlpntr, result(s`wavenum'hlpntr) wave(`wavenum')
label variable s`wavenum'hlpntr "s`wavenum'hlpntr:w`wavenum' whether s feels people will help/won't help in this area"

****Neighborhood phsyical disorder summary****
egen r`wavenum'npdisumm_e =rowmiss(r`wavenum'vandal r`wavenum'afwalk r`wavenum'rubbish)  if inw`wavenum' == 1
label variable r`wavenum'npdisumm_e "r`wavenum'npdisumm_e:w`wavenum' missings in r's neighborhood physical disorder summary mean score"

gen s`wavenum'npdisumm_e =.
spouse r`wavenum'npdisumm_e, result(s`wavenum'npdisumm_e) wave(`wavenum')
label variable s`wavenum'npdisumm_e "s`wavenum'npdisumm_e:w`wavenum' missings in s's neighborhood physical disorder summary mean score"

egen r`wavenum'npdisum_e =rowmean(r`wavenum'vandal r`wavenum'afwalk r`wavenum'rubbish)  if inw`wavenum' == 1
replace r`wavenum'npdisum_e  = .m if r`wavenum'npdisumm_e ==3
replace r`wavenum'npdisum_e  = .c if mi(w7scwt)

label variable r`wavenum'npdisum_e "r`wavenum'npdisum_e:w`wavenum' r's neighborhood physical disorder summary mean score"

gen s`wavenum'npdisum_e =.
spouse r`wavenum'npdisum_e, result(s`wavenum'npdisum_e) wave(`wavenum')
label variable s`wavenum'npdisum_e "s`wavenum'npdisum_e:w`wavenum' s's neighborhood physical disorder summary mean score"

****Neighborhood social cohesion***
egen r`wavenum'nsocosumm =rowmiss(r`wavenum'belong r`wavenum'trust r`wavenum'unfriend r`wavenum'hlpntr) if inw`wavenum' == 1
label variable r`wavenum'nsocosumm "r`wavenum'nsocoumm:w`wavenum' missings in r's neighborhood social cohesion summary mean score"

gen s`wavenum'nsocosumm =.
spouse r`wavenum'nsocosumm, result(s`wavenum'nsocosumm) wave(`wavenum')
label variable s`wavenum'nsocosumm "s`wavenum'nsocosumm:w`wavenum' missings in s's neighborhood social cohesion summary mean score"

egen r`wavenum'nsocosum =rowmean(r`wavenum'belong r`wavenum'trust r`wavenum'unfriend r`wavenum'hlpntr) if inw`wavenum' == 1
replace r`wavenum'nsocosum  = .m if r`wavenum'nsocosumm ==4
replace r`wavenum'nsocosum  = .c if  mi(w7scwt)

label variable r`wavenum'nsocosum "r`wavenum'nsocosum:w`wavenum' r's neighborhood social cohesion summary mean score"

gen s`wavenum'nsocosum =.
spouse r`wavenum'nsocosum, result(s`wavenum'nsocosum) wave(`wavenum')
label variable s`wavenum'nsocosum "s`wavenum'nsocosum:w`wavenum' s's neighborhood social cohesion summary mean score"

***feel lack of companionship***
gen r`wavenum'complac = . 
replace r`wavenum'complac = .m if inlist(scfeela,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'complac = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'complac = scfeela if inrange(scfeela,1,3)

label variable r`wavenum'complac "r`wavenum'complac:w`wavenum' whether r often feels lack of companionship"
label value r`wavenum'complac tim

*wave 7 feel lack of companionship
gen s`wavenum'complac =.
spouse r`wavenum'complac, result(s`wavenum'complac) wave(`wavenum')
label variable s`wavenum'complac "s`wavenum'complac:w`wavenum' whether s often feels lack of companionship"
label value s`wavenum'complac tim

***feel left out***
gen r`wavenum'leftout = . 
replace r`wavenum'leftout = .m if inlist(scfeelb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'leftout = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'leftout = scfeelb if inrange(scfeelb,1,3)

label variable r`wavenum'leftout "r`wavenum'leftout:w`wavenum' whether r often feels left out"
label value r`wavenum'leftout tim

*wave 7 feel left out
gen s`wavenum'leftout =.
spouse r`wavenum'leftout, result(s`wavenum'leftout) wave(`wavenum')
label variable s`wavenum'leftout "s`wavenum'leftout:w`wavenum' whether s often feels left out"
label value s`wavenum'leftout tim

***feel isolated from others***
gen r`wavenum'isolate = . 
replace r`wavenum'isolate = .m if inlist(scfeelc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'isolate = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'isolate = scfeelc if inrange(scfeelc,1,3)

label variable r`wavenum'isolate "r`wavenum'isolate:w`wavenum' whether r often feels isolated from others" 
label value r`wavenum'isolate tim

*wave 7 feel isolated from others
gen s`wavenum'isolate =.
spouse r`wavenum'isolate, result(s`wavenum'isolate) wave(`wavenum')
label variable s`wavenum'isolate "s`wavenum'isolate:w`wavenum' whether s often feels isolated from others"
label value s`wavenum'isolate tim

***feel in tune with the people around***
gen r`wavenum'intune = . 
replace r`wavenum'intune = .m if inlist(scfeeld,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'intune = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'intune = scfeeld if inrange(scfeeld,1,3)

label variable r`wavenum'intune "r`wavenum'intune:w`wavenum' whether r often feels not in tune with the people around" 
label value r`wavenum'intune tim

*wave 7 feel in tune with the people around
gen s`wavenum'intune =.
spouse r`wavenum'intune, result(s`wavenum'intune) wave(`wavenum')
label variable s`wavenum'intune "s`wavenum'intune:w`wavenum' whether s often feels not in tune with the people around"
label value s`wavenum'intune tim

****summary score 4 components
recode r`wavenum'intune (1=3) (2=2) (3=1), gen(xr`wavenum'intune) 
egen r`wavenum'lnlysm =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate r`wavenum'intune) if inw`wavenum' == 1
label variable r`wavenum'lnlysm "r`wavenum'lnlysm:w`wavenum' missings in r's 4-item loneliness summary mean score"

gen s`wavenum'lnlysm =.
spouse r`wavenum'lnlysm, result(s`wavenum'lnlysm) wave(`wavenum')
label variable s`wavenum'lnlysm "s`wavenum'lnlysm:w`wavenum' missings in s's 4-item loneliness summary mean score"

egen r`wavenum'lnlys =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate xr`wavenum'intune) if inw`wavenum' == 1
replace r`wavenum'lnlys  = .m if r`wavenum'lnlysm == 4 & inw`wavenum' == 1
replace r`wavenum'lnlys  = .c if mi(w7scwt) & inw`wavenum' == 1


label variable r`wavenum'lnlys "r`wavenum'lnlys:w`wavenum' r's 4-item loneliness summary mean score"

gen s`wavenum'lnlys =.
spouse r`wavenum'lnlys, result(s`wavenum'lnlys) wave(`wavenum')
label variable s`wavenum'lnlys "s`wavenum'lnlys:w`wavenum' s's 4-item loneliness summary mean score"

drop xr`wavenum'intune

****summary score 3 components
egen r`wavenum'lnlys3m =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
label variable r`wavenum'lnlys3m "r`wavenum'lnlys3m:w`wavenum' missings in r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3m =.
spouse r`wavenum'lnlys3m, result(s`wavenum'lnlys3m) wave(`wavenum')
label variable s`wavenum'lnlys3m "s`wavenum'lnlys3m:w`wavenum' missings in s's 3-item loneliness summary mean score"

egen r`wavenum'lnlys3 =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
replace r`wavenum'lnlys3  = .m if r`wavenum'complac == .m & r`wavenum'leftout == .m & r`wavenum'isolate == .m
replace r`wavenum'lnlys3  = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'lnlys3  = .r if r`wavenum'complac == .r & r`wavenum'leftout == .r & r`wavenum'isolate == .r 

label variable r`wavenum'lnlys3 "r`wavenum'lnlys3:w`wavenum' r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3 =.
spouse r`wavenum'lnlys3, result(s`wavenum'lnlys3) wave(`wavenum')
label variable s`wavenum'lnlys3 "s`wavenum'lnlys3:w`wavenum' s's 3-item loneliness summary mean score"


*************************
******Spouse support***
***understand the way you feel
gen r`wavenum'sustdfe = . 
replace r`wavenum'sustdfe = .m if  inlist(scptra,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sustdfe = scptra if inrange(scptra,1,4)

label variable r`wavenum'sustdfe "r`wavenum'sustdfe:w`wavenum' r thinks spouse understands the way he/she feels" 
label value r`wavenum'sustdfe attns

*wave 7 understand the way you feel
gen s`wavenum'sustdfe =.
spouse r`wavenum'sustdfe, result(s`wavenum'sustdfe) wave(`wavenum')
label variable s`wavenum'sustdfe "s`wavenum'sustdfe:w`wavenum' s thinks spouse understands the way he/she feels"
label value s`wavenum'sustdfe attns

***rely on serious problem
gen r`wavenum'srely = . 
replace r`wavenum'srely = .m if inlist(scptrb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'srely = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'srely = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'srely = scptrb if inrange(scptrb,1,4)

label variable r`wavenum'srely "r`wavenum'srely:w`wavenum' r can rely on spouse for a serious problem" 
label value r`wavenum'srely attns

*wave 7 rely on serious problem
gen s`wavenum'srely =.
spouse r`wavenum'srely, result(s`wavenum'srely) wave(`wavenum')
label variable s`wavenum'srely "s`wavenum'srely:w`wavenum' s can rely on spouse for a serious problem"
label value s`wavenum'srely attns

***open up when need to talk about worries
gen r`wavenum'sopenup = . 
replace r`wavenum'sopenup = .m if  inlist(scptrc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sopenup = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'sopenup = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sopenup = scptrc if inrange(scptrc,1,4)

label variable r`wavenum'sopenup "r`wavenum'sopenup:w`wavenum' r can open up their worries to spouse" 
label value r`wavenum'sopenup attns

*wave 7 open up when need tp talk about worries
gen s`wavenum'sopenup =.
spouse r`wavenum'sopenup, result(s`wavenum'sopenup) wave(`wavenum')
label variable s`wavenum'sopenup "s`wavenum'sopenup:w`wavenum' s can open up their worries to spouse"
label value s`wavenum'sopenup attns

****Criticize  by spouse
gen r`wavenum'scritze = . 
replace r`wavenum'scritze = .m if inlist(scptrd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'scritze = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'scritze = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'scritze = scptrd if inrange(scptrd,1,4)

label variable r`wavenum'scritze "r`wavenum'scritze:w`wavenum' how much spouse criticizes r" 
label value r`wavenum'scritze attns

*wave 7 Criticize  by spouse
gen s`wavenum'scritze =.
spouse r`wavenum'scritze, result(s`wavenum'scritze) wave(`wavenum')
label variable s`wavenum'scritze "s`wavenum'scritze:w`wavenum' how much spouse criticizes s"
label value s`wavenum'scritze attns

*****let down when counting on them
gen r`wavenum'sletdow = . 
replace r`wavenum'sletdow = .m if inlist(scptre,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sletdow = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'sletdow = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sletdow = scptre if inrange(scptre,1,4)

label variable r`wavenum'sletdow "r`wavenum'sletdow:w`wavenum' spouse let r down when counting on him/her" 
label value r`wavenum'sletdow attns

*wave 7 let down when counting on them
gen s`wavenum'sletdow =.
spouse r`wavenum'sletdow, result(s`wavenum'sletdow) wave(`wavenum')
label variable s`wavenum'sletdow "s`wavenum'sletdow:w`wavenum' spouse let s down when counting on him/her"
label value s`wavenum'sletdow attns

*****Get on nerves
gen r`wavenum'sgetnev = . 
replace r`wavenum'sgetnev = .m if  inlist(scptrf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sgetnev = scptrf if inrange(scptrf,1,4)

label variable r`wavenum'sgetnev "r`wavenum'sgetnev:w`wavenum' spouse gets on r's nerve" 
label value r`wavenum'sgetnev attns

*wave 7 get on nerves
gen s`wavenum'sgetnev =.
spouse r`wavenum'sgetnev, result(s`wavenum'sgetnev) wave(`wavenum')
label variable s`wavenum'sgetnev "s`wavenum'sgetnev:w`wavenum' spouse gets on s's nerve"
label value s`wavenum'sgetnev attns

*****Too many demand on respondent 
gen r`wavenum'sdemand = . 
replace r`wavenum'sdemand = .m if inlist(scptrg,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'sdemand = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'sdemand = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sdemand = scptrg if inrange(scptrg,1,4)

label variable r`wavenum'sdemand "r`wavenum'sdemand:w`wavenum' spouse puts too many demands on r" 
label value r`wavenum'sdemand attns

*wave7 to many demand on respondent
gen s`wavenum'sdemand =.
spouse r`wavenum'sdemand, result(s`wavenum'sdemand) wave(`wavenum')
label variable s`wavenum'sdemand "s`wavenum'sdemand:w`wavenum' spouse puts too many demands on s"
label value s`wavenum'sdemand attns


****spouse support summary****
recode r`wavenum'scritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'scritze)	
recode r`wavenum'sletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sletdow)	
recode r`wavenum'sgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sgetnev)	
recode r`wavenum'sdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sdemand)	


egen r`wavenum'ssupport6m =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                           if inw`wavenum' == 1
label variable  r`wavenum'ssupport6m "r`wavenum'ssupport6m:w`wavenum' missings in r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6m=.
spouse r`wavenum'ssupport6m, result(s`wavenum'ssupport6m) wave(`wavenum')  
label variable s`wavenum'ssupport6m "s`wavenum'ssupport6m:w`wavenum' missings in s's lack of spouse support 6-item score"

egen r`wavenum'ssupport6 =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'ssupport6  = .m if r`wavenum'ssupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .n if scprt == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport6)

label variable r`wavenum'ssupport6 "r`wavenum'ssupport6:w`wavenum' r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6 =.
spouse r`wavenum'ssupport6, result(s`wavenum'ssupport6) wave(`wavenum')
label variable s`wavenum'ssupport6 "s`wavenum'ssupport6:w`wavenum' s's lack of spouse support 6-item score"

*****7 items
egen r`wavenum'ssupportm =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand) if inw`wavenum' == 1
label variable  r`wavenum'ssupportm "r`wavenum'ssupportm:w`wavenum' missings in r's lack of spouse support 7-item score"

gen s`wavenum'ssupportm=.
spouse r`wavenum'ssupportm, result(s`wavenum'ssupportm) wave(`wavenum')  
label variable s`wavenum'ssupportm "s`wavenum'ssupportm:w`wavenum' missings in s's lack of spouse support 7-item score"

egen r`wavenum'ssupport =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand) if inw`wavenum' == 1
replace r`wavenum'ssupport  = .m if r`wavenum'ssupportm ==7 & inw`wavenum' == 1
replace r`wavenum'ssupport  = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'ssupport  = .n if scprt == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport)

label variable r`wavenum'ssupport "r`wavenum'ssupport:w`wavenum' r's lack of spouse support 7-item score"

gen s`wavenum'ssupport =.
spouse r`wavenum'ssupport, result(s`wavenum'ssupport) wave(`wavenum')
label variable s`wavenum'ssupport "s`wavenum'ssupport:w`wavenum' s's lack of spouse support 7-item score"

drop xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand

******Child support***
***understand the way you feel
gen r`wavenum'kustdfe = . 
replace r`wavenum'kustdfe = .m if inlist(scchda,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kustdfe = scchda if inrange(scchda,1,4)

label variable r`wavenum'kustdfe "r`wavenum'kustdfe:w`wavenum' r thinks children understand the way he/she feels" 
label value r`wavenum'kustdfe attnk

*wave 7 understand the way you feel
gen s`wavenum'kustdfe =.
spouse r`wavenum'kustdfe, result(s`wavenum'kustdfe) wave(`wavenum')
label variable s`wavenum'kustdfe "s`wavenum'kustdfe:w`wavenum' s thinks children understand the way he/she feels"
label value s`wavenum'kustdfe attnk

***rely on serious problem
gen r`wavenum'krely = . 
replace r`wavenum'krely = .m if inlist(scchdb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'krely = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'krely = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'krely = scchdb if inrange(scchdb,1,4)

label variable r`wavenum'krely "r`wavenum'krely:w`wavenum' r can rely on children for a serious problem" 
label value r`wavenum'krely attnk

*wave 7 rely on serious problem
gen s`wavenum'krely =.
spouse r`wavenum'krely, result(s`wavenum'krely) wave(`wavenum')
label variable s`wavenum'krely "s`wavenum'krely:w`wavenum' s can rely on children for a serious problem"
label value s`wavenum'krely attnk

***open up when need tp talk about worries
gen r`wavenum'kopenup = . 
replace r`wavenum'kopenup = .m if  inlist(scchdc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kopenup = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'kopenup = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kopenup = scchdc if inrange(scchdc,1,4)

label variable r`wavenum'kopenup "r`wavenum'kopenup:w`wavenum' r can open up their worries to children" 
label value r`wavenum'kopenup attnk

*wave 7 open up when need tp talk about worries
gen s`wavenum'kopenup =.
spouse r`wavenum'kopenup, result(s`wavenum'kopenup) wave(`wavenum')
label variable s`wavenum'kopenup "s`wavenum'kopenup:w`wavenum' s can open up their worries to children"
label value s`wavenum'kopenup attnk

****Criticize by children
gen r`wavenum'kcritze = . 
replace r`wavenum'kcritze = .m if inlist(scchdd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kcritze = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'kcritze = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kcritze = scchdd if inrange(scchdd,1,4)

label variable r`wavenum'kcritze "r`wavenum'kcritze:w`wavenum' how much children criticize r" 
label value r`wavenum'kcritze attnk

*wave 7 Criticize by children
gen s`wavenum'kcritze =.
spouse r`wavenum'kcritze, result(s`wavenum'kcritze) wave(`wavenum')
label variable s`wavenum'kcritze "s`wavenum'kcritze:w`wavenum' how much children criticize s"
label value s`wavenum'kcritze attnk

*****let down when counting on them
gen r`wavenum'kletdow = . 
replace r`wavenum'kletdow = .m if  inlist(scchde,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kletdow = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'kletdow = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kletdow = scchde if inrange(scchde,1,4)

label variable r`wavenum'kletdow "r`wavenum'kletdow:w`wavenum' children let r down when counting on them" 
label value r`wavenum'kletdow attnk

*wave 7 let down when counting on them
gen s`wavenum'kletdow =.
spouse r`wavenum'kletdow, result(s`wavenum'kletdow) wave(`wavenum')
label variable s`wavenum'kletdow "s`wavenum'kletdow:w`wavenum' children let s down when counting on them"
label value s`wavenum'kletdow attnk

*****Get on nerves
gen r`wavenum'kgetnev = . 
replace r`wavenum'kgetnev = .m if inlist(scchdf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kgetnev = scchdf if inrange(scchdf,1,4)

label variable r`wavenum'kgetnev "r`wavenum'kgetnev:w`wavenum' children get on r's nerve" 
label value r`wavenum'kgetnev attnk

*wave 7 get on nerves
gen s`wavenum'kgetnev =.
spouse r`wavenum'kgetnev, result(s`wavenum'kgetnev) wave(`wavenum')
label variable s`wavenum'kgetnev "s`wavenum'kgetnev:w`wavenum' children get on s's nerve"
label value s`wavenum'kgetnev attnk

*****Too many demand on respondent 
gen r`wavenum'kdemand = . 
replace r`wavenum'kdemand = .m if inlist(scchdg,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'kdemand = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'kdemand = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kdemand = scchdg if inrange(scchdg,1,4)

label variable r`wavenum'kdemand "r`wavenum'kdemand:w`wavenum' children put too many demands on r" 
label value r`wavenum'kdemand attnk

*wave7 to many demand on respondent
gen s`wavenum'kdemand =.
spouse r`wavenum'kdemand, result(s`wavenum'kdemand) wave(`wavenum')
label variable s`wavenum'kdemand "s`wavenum'kdemand:w`wavenum' children put too many demands on s"
label value s`wavenum'kdemand attnk

****Children support summary****
recode r`wavenum'kcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kcritze)	
recode r`wavenum'kletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kletdow)	
recode r`wavenum'kgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kgetnev)	
recode r`wavenum'kdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kdemand)	

egen r`wavenum'ksupport6m =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev)  ///
                           if inw`wavenum' == 1
label variable r`wavenum'ksupport6m "r`wavenum'ksupport6m:w`wavenum' missings in r's lack of children support 6-item score"

gen s`wavenum'ksupport6m=.
spouse r`wavenum'ksupport6m, result(s`wavenum'ksupport6m) wave(`wavenum')  
label variable s`wavenum'ksupport6m "s`wavenum'ksupport6m:w`wavenum' missings in s's lack of children support 6-item score"

egen r`wavenum'ksupport6 =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev) ///
                           if inw`wavenum' == 1
replace r`wavenum'ksupport6  = .m if r`wavenum'ksupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport6)

label variable r`wavenum'ksupport6 "r`wavenum'ksupport6:w`wavenum' r's lack of children support 6-item score"

gen s`wavenum'ksupport6 =.
spouse r`wavenum'ksupport6, result(s`wavenum'ksupport6) wave(`wavenum')
label variable s`wavenum'ksupport6 "s`wavenum'ksupport6:w`wavenum' s's lack of children support 6-item score"

**7 item
egen r`wavenum'ksupportm =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand)  if inw`wavenum' == 1
label variable r`wavenum'ksupportm "r`wavenum'ksupportm:w`wavenum' missings in r's lack of children support 7-item score"

gen s`wavenum'ksupportm=.
spouse r`wavenum'ksupportm, result(s`wavenum'ksupportm) wave(`wavenum')  
label variable s`wavenum'ksupportm "s`wavenum'ksupportm:w`wavenum' missings in s's lack of children support 7-item score"

egen r`wavenum'ksupport =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand) if inw`wavenum' == 1
replace r`wavenum'ksupport  = .m if r`wavenum'ksupportm ==7 & inw`wavenum' == 1
replace r`wavenum'ksupport  = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'ksupport  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport)

label variable r`wavenum'ksupport "r`wavenum'ksupport:w`wavenum' r's lack of children support 7-item score"

gen s`wavenum'ksupport =.
spouse r`wavenum'ksupport, result(s`wavenum'ksupport) wave(`wavenum')
label variable s`wavenum'ksupport "s`wavenum'ksupport:w`wavenum' s's lack of children support 7-item score"

drop xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand

******other family members support***
***understand the way you feel
gen r`wavenum'oustdfe = . 
replace r`wavenum'oustdfe = .m if inlist(scfama,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oustdfe = scfama if inrange(scfama,1,4)

label variable r`wavenum'oustdfe "r`wavenum'oustdfe:w`wavenum' r thinks other family members understand the way he/she feels" 
label value r`wavenum'oustdfe attnof

*wave 7 understand the way you feel
gen s`wavenum'oustdfe =.
spouse r`wavenum'oustdfe, result(s`wavenum'oustdfe) wave(`wavenum')
label variable s`wavenum'oustdfe "s`wavenum'oustdfe:w`wavenum' s thinks other family members understand the way he/she feels"
label value s`wavenum'oustdfe attnof

***rely on serious problem
gen r`wavenum'orely = . 
replace r`wavenum'orely = .m if inlist(scfamb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'orely = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'orely = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'orely = scfamb if inrange(scfamb,1,4)

label variable r`wavenum'orely "r`wavenum'orely:w`wavenum' r can rely on other family members for a serious problem" 

label value r`wavenum'orely attnof

*wave 7 rely on serious problem
gen s`wavenum'orely =.
spouse r`wavenum'orely, result(s`wavenum'orely) wave(`wavenum')
label variable s`wavenum'orely "s`wavenum'orely:w`wavenum' s can rely on other family members for a serious problem"
label value s`wavenum'orely attnof

***open up when need tp talk about worries
gen r`wavenum'oopenup = . 
replace r`wavenum'oopenup = .m if inlist(scfamc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'oopenup = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'oopenup = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oopenup = scfamc if inrange(scfamc,1,4)

label variable r`wavenum'oopenup "r`wavenum'oopenup:w`wavenum' r can open up their worries to other family members" 
label value r`wavenum'oopenup attnof

*wave 7 open up when need tp talk about worries
gen s`wavenum'oopenup =.
spouse r`wavenum'oopenup, result(s`wavenum'oopenup) wave(`wavenum')
label variable s`wavenum'oopenup "s`wavenum'oopenup:w`wavenum' s can open up their worries to other family members"
label value s`wavenum'oopenup attnof

****Criticize by other family members
gen r`wavenum'ocritze = . 
replace r`wavenum'ocritze = .m if inlist(scfamd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'ocritze = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'ocritze = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ocritze = scfamd if inrange(scfamd,1,4)

label variable r`wavenum'ocritze "r`wavenum'ocritze:w`wavenum' how much other family members criticize r" 
label value r`wavenum'ocritze attnof

*wave 7 Criticize by other family members
gen s`wavenum'ocritze =.
spouse r`wavenum'ocritze, result(s`wavenum'ocritze) wave(`wavenum')
label variable s`wavenum'ocritze "s`wavenum'ocritze:w`wavenum' how much other family members criticize s"
label value s`wavenum'ocritze attnof

*****let down when counting on them
gen r`wavenum'oletdow = . 
replace r`wavenum'oletdow = .m if  inlist(scfame,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'oletdow = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'oletdow = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oletdow = scfame if inrange(scfame,1,4)

label variable r`wavenum'oletdow "r`wavenum'oletdow:w`wavenum' other family members let r down when counting on them" 
label value r`wavenum'oletdow attnof

*wave 7 let down when counting on them
gen s`wavenum'oletdow =.
spouse r`wavenum'oletdow, result(s`wavenum'oletdow) wave(`wavenum')
label variable s`wavenum'oletdow "s`wavenum'oletdow:w`wavenum' other family members let s down when counting on them"
label value s`wavenum'oletdow attnof

*****Get on nerves
gen r`wavenum'ogetnev = . 
replace r`wavenum'ogetnev = .m if inlist(scfamf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ogetnev = scfamf if inrange(scfamf,1,4)

label variable r`wavenum'ogetnev "r`wavenum'ogetnev:w`wavenum' other family members get on r's nerve" 
label value r`wavenum'ogetnev attnof

*wave 7 get on nerves
gen s`wavenum'ogetnev =.
spouse r`wavenum'ogetnev, result(s`wavenum'ogetnev) wave(`wavenum')
label variable s`wavenum'ogetnev "s`wavenum'ogetnev:w`wavenum' other family members get on s's nerve"
label value s`wavenum'ogetnev attnof

*****Too many demand on respondent 
gen r`wavenum'odemand = . 
replace r`wavenum'odemand = .m if inlist(scfamg,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'odemand = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'odemand = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'odemand = scfamg if inrange(scfamg,1,4)

label variable r`wavenum'odemand "r`wavenum'odemand:w`wavenum' other family members put too many demands on r" 
label value r`wavenum'odemand attnof

*wave7 to many demand on respondent
gen s`wavenum'odemand =.
spouse r`wavenum'odemand, result(s`wavenum'odemand) wave(`wavenum')
label variable s`wavenum'odemand "s`wavenum'odemand:w`wavenum' other family members put too many demands on s"
label value s`wavenum'odemand attnof


****Other family members support summary****
recode r`wavenum'ocritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ocritze)	
recode r`wavenum'oletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'oletdow)	
recode r`wavenum'ogetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ogetnev)	
recode r`wavenum'odemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'odemand)	

egen r`wavenum'osupport6m =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'osupport6m "r`wavenum'osupport6m:w`wavenum' missings in r's lack of other family members support 6-item score"

gen s`wavenum'osupport6m=.
spouse r`wavenum'osupport6m, result(s`wavenum'osupport6m) wave(`wavenum')  
label variable s`wavenum'osupport6m "s`wavenum'osupport6m:w`wavenum' missings in s's lack of other family members support 6-item score"

egen r`wavenum'osupport6 =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) if inw`wavenum' == 1
replace r`wavenum'osupport6  = .m if r`wavenum'osupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'osupport6  = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'osupport6  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport6)

label variable r`wavenum'osupport6 "r`wavenum'osupport6:w`wavenum' r's lack of other family members support 6-item score"

gen s`wavenum'osupport6 =.
spouse r`wavenum'osupport6, result(s`wavenum'osupport6) wave(`wavenum')
label variable s`wavenum'osupport6 "s`wavenum'osupport6:w`wavenum' s's lack of other family members support 6-item score"

***7 items
egen r`wavenum'osupportm =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand)  if inw`wavenum' == 1
label variable r`wavenum'osupportm "r`wavenum'osupportm:w`wavenum' missings in r's lack of other family members support 7-item score"

gen s`wavenum'osupportm=.
spouse r`wavenum'osupportm, result(s`wavenum'osupportm) wave(`wavenum')  
label variable s`wavenum'osupportm "s`wavenum'osupportm:w`wavenum' missings in s's lack of other family members support 7-item score"

egen r`wavenum'osupport =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand) if inw`wavenum' == 1
replace r`wavenum'osupport  = .m if r`wavenum'osupportm ==7 & inw`wavenum' == 1
replace r`wavenum'osupport  = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'osupport  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport)

label variable r`wavenum'osupport "r`wavenum'osupport:w`wavenum' r's lack of other family members support 7-item score"

gen s`wavenum'osupport =.
spouse r`wavenum'osupport, result(s`wavenum'osupport) wave(`wavenum')
label variable s`wavenum'osupport "s`wavenum'osupport:w`wavenum' s's lack of other family members support 7-item score"

drop xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand


******Friend support***
***understand the way you feel
gen r`wavenum'fustdfe = . 
replace r`wavenum'fustdfe = .m if inlist(scfrda,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fustdfe = scfrda if inrange(scfrda,1,4)

label variable r`wavenum'fustdfe "r`wavenum'fustdfe:w`wavenum' r thinks friends understand the way he/she feels" 
label value r`wavenum'fustdfe attnf

*wave 7 understand the way you feel
gen s`wavenum'fustdfe =.
spouse r`wavenum'fustdfe, result(s`wavenum'fustdfe) wave(`wavenum')
label variable s`wavenum'fustdfe "s`wavenum'fustdfe:w`wavenum' s thinks friends understand the way he/she feels"
label value s`wavenum'fustdfe attnf

***rely on serious problem
gen r`wavenum'frely = . 
replace r`wavenum'frely = .m if inlist(scfrdb,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'frely = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'frely = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'frely = scfrdb if inrange(scfrdb,1,4)

label variable r`wavenum'frely "r`wavenum'frely:w`wavenum' r can rely on friends for a serious problem" 
label value r`wavenum'frely attnf

*wave 7 rely on serious problem
gen s`wavenum'frely =.
spouse r`wavenum'frely, result(s`wavenum'frely) wave(`wavenum')
label variable s`wavenum'frely "s`wavenum'frely:w`wavenum' s can rely on friends for a serious problem"
label value s`wavenum'frely attnf

***open up when need tp talk about worries
gen r`wavenum'fopenup = . 
replace r`wavenum'fopenup = .m if inlist(scfrdc,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fopenup = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'fopenup = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fopenup = scfrdc if inrange(scfrdc,1,4)

label variable r`wavenum'fopenup "r`wavenum'fopenup:w`wavenum' r can open up their worries to friends" 
label value r`wavenum'fopenup attnf

*wave 7 open up when need tp talk about worries
gen s`wavenum'fopenup =.
spouse r`wavenum'fopenup, result(s`wavenum'fopenup) wave(`wavenum')
label variable s`wavenum'fopenup "s`wavenum'fopenup:w`wavenum' s can open up their worries to friends"
label value s`wavenum'fopenup attnf

****Criticize by friend
gen r`wavenum'fcritze = . 
replace r`wavenum'fcritze = .m if inlist(scfrdd,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fcritze = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'fcritze = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fcritze = scfrdd if inrange(scfrdd,1,4)

label variable r`wavenum'fcritze "r`wavenum'fcritze:w`wavenum' how much friends criticize r" 
label value r`wavenum'fcritze attnf

*wave 7 Criticize by friend
gen s`wavenum'fcritze =.
spouse r`wavenum'fcritze, result(s`wavenum'fcritze) wave(`wavenum')
label variable s`wavenum'fcritze "s`wavenum'fcritze:w`wavenum' how much friends criticize s"
label value s`wavenum'fcritze attnf

*****let down when counting on them
gen r`wavenum'fletdow = . 
replace r`wavenum'fletdow = .m if inlist(scfrde,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fletdow = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'fletdow = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fletdow = scfrde if inrange(scfrde,1,4)

label variable r`wavenum'fletdow "r`wavenum'fletdow:w`wavenum' friends let r down when counting on them" 
label value r`wavenum'fletdow attnf

*wave 7 let down when counting on them
gen s`wavenum'fletdow =.
spouse r`wavenum'fletdow, result(s`wavenum'fletdow) wave(`wavenum')
label variable s`wavenum'fletdow "s`wavenum'fletdow:w`wavenum' friends let s down when counting on them"
label value s`wavenum'fletdow attnf

*****Get on nerves
gen r`wavenum'fgetnev = . 
replace r`wavenum'fgetnev = .m if inlist(scfrdf,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fgetnev = scfrdf if inrange(scfrdf,1,4)

label variable r`wavenum'fgetnev "r`wavenum'fgetnev:w`wavenum' friends gets on r's nerve" 
label value r`wavenum'fgetnev attnf

*wave 7 get on nerves
gen s`wavenum'fgetnev =.
spouse r`wavenum'fgetnev, result(s`wavenum'fgetnev) wave(`wavenum')
label variable s`wavenum'fgetnev "s`wavenum'fgetnev:w`wavenum' friends gets on s's nerve"
label value s`wavenum'fgetnev attnf

*****Too many demand on respondent 
gen r`wavenum'fdemand = . 
replace r`wavenum'fdemand = .m if inlist(scfrdg,-1,-2,-9) & inw`wavenum' == 1
replace r`wavenum'fdemand = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'fdemand = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fdemand = scfrdg if inrange(scfrdg,1,4)

label variable r`wavenum'fdemand "r`wavenum'fdemand:w`wavenum' friends put too many demands on r" 
label value r`wavenum'fdemand attnf

*wave7 to many demand on respondent
gen s`wavenum'fdemand =.
spouse r`wavenum'fdemand, result(s`wavenum'fdemand) wave(`wavenum')
label variable s`wavenum'fdemand "s`wavenum'fdemand:w`wavenum' friends put too many demands on s"
label value s`wavenum'fdemand attnf

****Friends support summary****
recode r`wavenum'fcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fcritze)	
recode r`wavenum'fletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fletdow)	
recode r`wavenum'fgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fgetnev)	
recode r`wavenum'fdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fdemand)	

egen r`wavenum'fsupport6m =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'fsupport6m "r`wavenum'fsupport6m:w`wavenum' missings in r's lack of friends support 6-item score"

gen s`wavenum'fsupport6m=.
spouse r`wavenum'fsupport6m, result(s`wavenum'fsupport6m) wave(`wavenum')  
label variable s`wavenum'fsupport6m "s`wavenum'fsupport6m:w`wavenum' missings in s's lack of friends support 6-item score"

egen r`wavenum'fsupport6 =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'fsupport6  = .m if r`wavenum'fsupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport6)

label variable r`wavenum'fsupport6 "r`wavenum'fsupport6:w`wavenum' r's lack of friends support 6-item score"

gen s`wavenum'fsupport6 =.
spouse r`wavenum'fsupport6, result(s`wavenum'fsupport6) wave(`wavenum')
label variable s`wavenum'fsupport6 "s`wavenum'fsupport6:w`wavenum' s's lack of friends support 6-item score"

***7 items
egen r`wavenum'fsupportm =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand)  if inw`wavenum' == 1
label variable r`wavenum'fsupportm "r`wavenum'fsupportm:w`wavenum' missings in r's lack of friends support 7-item score"

gen s`wavenum'fsupportm=.
spouse r`wavenum'fsupportm, result(s`wavenum'fsupportm) wave(`wavenum')  
label variable s`wavenum'fsupportm "s`wavenum'fsupportm:w`wavenum' missings in s's lack of friends support 7-item score"

egen r`wavenum'fsupport =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand) if inw`wavenum' == 1
replace r`wavenum'fsupport  = .m if r`wavenum'fsupportm ==7 & inw`wavenum' == 1
replace r`wavenum'fsupport  = .c if mi(w7scwt) & inw`wavenum' == 1
replace r`wavenum'fsupport  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport)

label variable r`wavenum'fsupport "r`wavenum'fsupport:w`wavenum' r's lack of friends support 7-item score"

gen s`wavenum'fsupport =.
spouse r`wavenum'fsupport, result(s`wavenum'fsupport) wave(`wavenum')
label variable s`wavenum'fsupport "s`wavenum'fsupport:w`wavenum' s's lack of friends support 7-item score"

drop xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand


**drop ELSA wave core file raw variables***
drop `stre_w7_core'



*****************************************************************************************

pause on
*set wave number
local wavenum = 8
local pre_wavenum = `wavenum' -1

*file core**
local stre_w8_core scempl scworka scworkb scworkc scworkd scworke scworkf scworkg scworkh scworki /// 
                   scworkj scworkk scworkl /*scarea1 scarea2 scarea3 scarea4 scarea5 scarea6 scarea7 scarea8*/ scprt ///
                   /*scarea9*/ w8scwt scfeela scfeelb scfeelc scfeeld scprta scprtb scprtc scprtd scprte scprtf scfrd scfrda scfrdb scfrdc scfrdd scfrde scfrdf ///
                   scchd scchda scchdb scchdc scchdd scchde scchdf scfam scfama scfamb scfamc scfamd scfame scfamf scprtg scchdg scfamg scfrdg askpx
                    
merge 1:1 idauniq using "$wave_8_core", keepusing(`stre_w8_core') nogen



***Satisfied with the job***
gen r`wavenum'satjob = . 
replace r`wavenum'satjob = .m if inlist(scworka,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'satjob = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'satjob = .w if scempl == 2
replace r`wavenum'satjob = 1 if scworka == 4 
replace r`wavenum'satjob = 2 if scworka == 3
replace r`wavenum'satjob = 3 if scworka == 2
replace r`wavenum'satjob = 4 if scworka == 1

label variable r`wavenum'satjob "r`wavenum'satjob:w`wavenum' whether r is satisfied with job"
label values r`wavenum'satjob job

*wave 8 spouse satisfied with the job
gen s`wavenum'satjob =.
spouse r`wavenum'satjob, result(s`wavenum'satjob) wave(`wavenum')
label variable s`wavenum'satjob "s`wavenum'satjob:w`wavenum' whether s is satisfied with job"
label value s`wavenum'satjob job

***Physical demanding***
gen r`wavenum'demand = . 
replace r`wavenum'demand = .m if inlist(scworkb,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'demand = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'demand = .w if scempl == 2
replace r`wavenum'demand = 1 if scworkb == 4 
replace r`wavenum'demand = 2 if scworkb == 3
replace r`wavenum'demand = 3 if scworkb == 2
replace r`wavenum'demand = 4 if scworkb == 1

label variable r`wavenum'demand "r`wavenum'demand:w`wavenum' whether r's job is physically demanding"
label values r`wavenum'demand job

*wave 8 spouse job demanding
gen s`wavenum'demand =.
spouse r`wavenum'demand, result(s`wavenum'demand) wave(`wavenum')
label variable s`wavenum'demand "s`wavenum'demand:w`wavenum' whether s's job is physically demanding"
label value s`wavenum'demand job

*** Received deserved recognition***
gen r`wavenum'deserve = . 
replace r`wavenum'deserve = .m if inlist(scworkc,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'deserve = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'deserve = .w if scempl == 2
replace r`wavenum'deserve = 1 if scworkc == 4 
replace r`wavenum'deserve = 2 if scworkc == 3
replace r`wavenum'deserve = 3 if scworkc == 2
replace r`wavenum'deserve = 4 if scworkc == 1

label variable r`wavenum'deserve "r`wavenum'deserve:w`wavenum' whether r received deserved recognition from work"
label values r`wavenum'deserve job

*wave 8 spouse received deserved recognition
gen s`wavenum'deserve =.
spouse r`wavenum'deserve, result(s`wavenum'deserve) wave(`wavenum')
label variable s`wavenum'deserve "s`wavenum'deserve:w`wavenum' whether s received deserved recognition from work"
label value s`wavenum'deserve job

***Salary is adequate***
gen r`wavenum'salary = .
replace r`wavenum'salary = .m if inlist(scworkd,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'salary = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'salary = .w if scempl == 2
replace r`wavenum'salary = 1 if scworkd == 4 
replace r`wavenum'salary = 2 if scworkd == 3
replace r`wavenum'salary = 3 if scworkd == 2
replace r`wavenum'salary = 4 if scworkd == 1

label variable r`wavenum'salary "r`wavenum'salary:w`wavenum' whether r's salary is adequate"
label values r`wavenum'salary job

*wave 8 spouse salary is adequate
gen s`wavenum'salary =.
spouse r`wavenum'salary, result(s`wavenum'salary) wave(`wavenum')
label variable s`wavenum'salary "s`wavenum'salary:w`wavenum' whether s's salary is adequate"
label value s`wavenum'salary job

***Job promotion is poor***
gen r`wavenum'promot = . 
replace r`wavenum'promot = .m if inlist(scworke,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'promot = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'promot = .w if scempl == 2
replace r`wavenum'promot = 1 if scworke == 4 
replace r`wavenum'promot = 2 if scworke == 3
replace r`wavenum'promot = 3 if scworke == 2
replace r`wavenum'promot = 4 if scworke == 1

label variable r`wavenum'promot "r`wavenum'promot:w`wavenum' whether r job promotion prospects are poor"
label values r`wavenum'promot job

*wave 8 spouse job promotion is poor
gen s`wavenum'promot =.
spouse r`wavenum'promot, result(s`wavenum'promot) wave(`wavenum')
label variable s`wavenum'promot "s`wavenum'promot:w`wavenum' whether s job promotion prospects are poor"
label value s`wavenum'promot job

***Job security***
gen r`wavenum'secure = . 
replace r`wavenum'secure = .m if inlist(scworkf,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'secure = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'secure = .w if scempl == 2
replace r`wavenum'secure = 1 if scworkf == 4 
replace r`wavenum'secure = 2 if scworkf == 3
replace r`wavenum'secure = 3 if scworkf == 2
replace r`wavenum'secure = 4 if scworkf == 1

label variable r`wavenum'secure "r`wavenum'secure:w`wavenum' whether r job security is poor"
label values r`wavenum'secure job

*wave 8 spouse job security
gen s`wavenum'secure =.
spouse r`wavenum'secure, result(s`wavenum'secure) wave(`wavenum')
label variable s`wavenum'secure "s`wavenum'secure:w`wavenum' whether s job security is poor"
label value s`wavenum'secure job

***Constant time pressure due to a heavy workload***
gen r`wavenum'timepre = . 
replace r`wavenum'timepre = .m if inlist(scworkg,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'timepre = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'timepre = .w if scempl == 2
replace r`wavenum'timepre = 1 if scworkg == 4 
replace r`wavenum'timepre = 2 if scworkg == 3
replace r`wavenum'timepre = 3 if scworkg == 2
replace r`wavenum'timepre = 4 if scworkg == 1

label variable r`wavenum'timepre "r`wavenum'timepre:w`wavenum' whether r is under constant time pressure due to a heavy workload"
label values r`wavenum'timepre job

*wave 8 spouse constant time pressure due to heavy workload
gen s`wavenum'timepre =.
spouse r`wavenum'timepre, result(s`wavenum'timepre) wave(`wavenum')
label variable s`wavenum'timepre "s`wavenum'timepre:w`wavenum' whether s is under constant time pressure due to a heavy workload"
label value s`wavenum'timepre job

***has the opportunity to develop new skills*
gen r`wavenum'ltlfree = . 
replace r`wavenum'ltlfree = .m if inlist(scworkh,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'ltlfree = .w if scempl == 2 
replace r`wavenum'ltlfree = 1 if scworkh == 4 
replace r`wavenum'ltlfree = 2 if scworkh == 3
replace r`wavenum'ltlfree = 3 if scworkh == 2
replace r`wavenum'ltlfree = 4 if scworkh == 1

label variable r`wavenum'ltlfree "r`wavenum'ltlfree:w`wavenum' whether r has very little freedom to do work"
label values r`wavenum'ltlfree job

*wave 8 spouse has the opportunity to develop new skills
gen s`wavenum'ltlfree =.
spouse r`wavenum'ltlfree, result(s`wavenum'ltlfree) wave(`wavenum')
label variable s`wavenum'ltlfree "s`wavenum'ltlfree:w`wavenum' whether s has very little freedom to do work"
label value s`wavenum'ltlfree job

***develop new skills***
gen r`wavenum'nskills = . 
replace r`wavenum'nskills = .m if inlist(scworki,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'nskills = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'nskills = .w if scempl == 2
replace r`wavenum'nskills = 1 if scworki == 4 
replace r`wavenum'nskills = 2 if scworki == 3
replace r`wavenum'nskills = 3 if scworki == 2
replace r`wavenum'nskills = 4 if scworki == 1

label variable r`wavenum'nskills "r`wavenum'nskills:w`wavenum' whether r has the opportunity to develop new skills"
label values r`wavenum'nskills job

*wave 8 spouse develop new skills
gen s`wavenum'nskills =.
spouse r`wavenum'nskills, result(s`wavenum'nskills) wave(`wavenum')
label variable s`wavenum'nskills "s`wavenum'nskills:w`wavenum' whether s has the opportunity to develop new skills"
label value s`wavenum'nskills job

***support in difficult situation***
gen r`wavenum'support = . 
replace r`wavenum'support = .m if inlist(scworkj,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'support = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'support = .w if scempl == 2
replace r`wavenum'support = 1 if scworkj == 4 
replace r`wavenum'support = 2 if scworkj == 3
replace r`wavenum'support = 3 if scworkj == 2
replace r`wavenum'support = 4 if scworkj == 1

label variable r`wavenum'support "r`wavenum'support:w`wavenum' whether r received adequate support in difficult situations"
label values r`wavenum'support job

*wave 8 spouse support in difficult situation
gen s`wavenum'support =.
spouse r`wavenum'support, result(s`wavenum'support) wave(`wavenum')
label variable s`wavenum'support "s`wavenum'support:w`wavenum' whether s received adequate support in difficult situations"
label value s`wavenum'support job

***Feel control over what happens in most situations***
gen r`wavenum'control = . 
replace r`wavenum'control = .m if inlist(scworkk,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'control = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'control = .w if scempl == 2
replace r`wavenum'control = 1 if scworkk == 4 
replace r`wavenum'control = 2 if scworkk == 3
replace r`wavenum'control = 3 if scworkk == 2
replace r`wavenum'control = 4 if scworkk == 1

label variable r`wavenum'control "r`wavenum'control:w`wavenum' whether r feels control over what happens in most situations"
label values r`wavenum'control job

*wave 8 spouse feel control over what happens in most situations
gen s`wavenum'control =.
spouse r`wavenum'control, result(s`wavenum'control) wave(`wavenum')
label variable s`wavenum'control "s`wavenum'control:w`wavenum' whether s feels control over what happens in most situations"
label value s`wavenum'control job

***Have to work very fast***
gen r`wavenum'workfast = . 
replace r`wavenum'workfast = .m if inlist(scworkl,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'workfast = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'workfast = .w if scempl == 2
replace r`wavenum'workfast = 1 if scworkl == 4 
replace r`wavenum'workfast = 2 if scworkl == 3
replace r`wavenum'workfast = 3 if scworkl == 2
replace r`wavenum'workfast = 4 if scworkl == 1

label variable r`wavenum'workfast "r`wavenum'workfast:w`wavenum' whether r has to work very fast"
label values r`wavenum'workfast job

*wave 8 spouse has to work very fast
gen s`wavenum'workfast =.
spouse r`wavenum'workfast, result(s`wavenum'workfast) wave(`wavenum')
label variable s`wavenum'workfast "s`wavenum'workfast:w`wavenum' whether s has to work very fast"
label value s`wavenum'workfast job

***Job stress summary***
recode r`wavenum'satjob (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'satjob)
recode r`wavenum'deserve  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'deserve)	
recode r`wavenum'salary (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'salary)	
recode r`wavenum'nskills  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'nskills)	
recode r`wavenum'support  (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'support)	
recode r`wavenum'control (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'control)	


egen r`wavenum'jobsumm =rowmiss(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) if inw`wavenum' == 1
label variable r`wavenum'jobsumm "r`wavenum'jobsumm:w`wavenum' missings in r's job stress summary mean score"

gen s`wavenum'jobsumm =.
spouse r`wavenum'jobsumm, result(s`wavenum'jobsumm) wave(`wavenum')
label variable s`wavenum'jobsumm "s`wavenum'jobsumm:w`wavenum' missings in s's job stress summary mean score"

egen r`wavenum'jobsum =rowmean(xr`wavenum'satjob r`wavenum'demand xr`wavenum'salary r`wavenum'secure r`wavenum'timepre xr`wavenum'nskills) 
replace r`wavenum'jobsum  = .m if r`wavenum'jobsumm ==6  & inw`wavenum' == 1
replace r`wavenum'jobsum  = .c if mi(w8scwt)  & inw`wavenum' == 1
replace r`wavenum'jobsum  = .w if scempl == 2
label variable r`wavenum'jobsum "r`wavenum'jobsum:w`wavenum' r's job stress summary mean score"

*wave `wavenum' spouse job stress summary
gen s`wavenum'jobsum =.
spouse r`wavenum'jobsum, result(s`wavenum'jobsum) wave(`wavenum')
label variable s`wavenum'jobsum "s`wavenum'jobsum:w`wavenum' s's job stress summary mean score"

drop xr`wavenum'satjob xr`wavenum'deserve xr`wavenum'salary xr`wavenum'nskills xr`wavenum'support xr`wavenum'control

***Belong in this area***
/*gen r`wavenum'belong = . 
missing_w`wavenum' w8scwt scarea1, result(r`wavenum'belong) 
replace r`wavenum'belong = .c if mi(w8scwt)
replace r`wavenum'belong = scarea1 if inrange(scarea1,1,8)

label variable r`wavenum'belong "r`wavenum'belong:w`wavenum' whether r feel part of/doesn't belong in this area"

*wave 8 spouse belongs in this area
gen s`wavenum'belong =.
spouse r`wavenum'belong, result(s`wavenum'belong) wave(`wavenum')
label variable s`wavenum'belong "s`wavenum'belong:w`wavenum' whether s feel part of/doesn't belong in this area"

***Vandalism and Graffitti*
gen r`wavenum'vandal =. 
missing_w`wavenum' w8scwt scarea2, result(r`wavenum'vandal)
replace r`wavenum'vandal = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'vandal = 7 if scarea2 == 1
replace r`wavenum'vandal = 6 if scarea2 == 2 
replace r`wavenum'vandal = 5 if scarea2 == 3 
replace r`wavenum'vandal = 4 if scarea2 == 4 
replace r`wavenum'vandal = 3 if scarea2 == 5 
replace r`wavenum'vandal = 2 if scarea2 == 6 
replace r`wavenum'vandal = 1 if scarea2 == 7 

label variable r`wavenum'vandal "r`wavenum'vandal:w`wavenum' whether r vandalism is no problem/big problem in this area"

*wave 8 spouse vandalism and graffiti
gen s`wavenum'vandal =.
spouse r`wavenum'vandal, result(s`wavenum'vandal) wave(`wavenum')
label variable s`wavenum'vandal "s`wavenum'vandal:w`wavenum' whether s vandalism is no problem/big problem in this area"

****Feel alone in this area***
gen r`wavenum'alone=. 
missing_w`wavenum' w8scwt scarea3, result(r`wavenum'alone)
replace r`wavenum'alone = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'alone = 7 if scarea3 == 1
replace r`wavenum'alone = 6 if scarea3 == 2 
replace r`wavenum'alone = 5 if scarea3 == 3 
replace r`wavenum'alone = 4 if scarea3 == 4 
replace r`wavenum'alone = 3 if scarea3 == 5 
replace r`wavenum'alone = 2 if scarea3 == 6 
replace r`wavenum'alone = 1 if scarea3 == 7 

label variable r`wavenum'alone "r`wavenum'vandal:w`wavenum' whether r never felt lonely/feel lonely in this area"

*wave 8 spouse feel alone in this area
gen s`wavenum'alone =.
spouse r`wavenum'alone, result(s`wavenum'alone) wave(`wavenum')
label variable s`wavenum'alone "s`wavenum'alone:w`wavenum' whether s never felt lonely/feel lonely in this area"

***Dont trust in this area***
gen r`wavenum'trust = . 
missing_w`wavenum' w8scwt scarea4, result(r`wavenum'trust)
replace r`wavenum'trust = .c if mi(w8scwt)
replace r`wavenum'trust = scarea4 if inrange(scarea4,1,7)

label variable r`wavenum'trust "r`wavenum'trust:w`wavenum' whether r feel people can be/can't be trusted in this area"

*wave 8 spouse dont trust people
gen s`wavenum'trust =.
spouse r`wavenum'trust, result(s`wavenum'trust) wave(`wavenum')
label variable s`wavenum'trust "s`wavenum'trust:w`wavenum' whether s feel people can be/can't be trusted in this area"

**Afraid to walk around alone***
gen r`wavenum'afwalk = . 
missing_w`wavenum' w8scwt scarea5, result(r`wavenum'afwalk)
replace r`wavenum'afwalk = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'afwalk = 7 if scarea5 == 1
replace r`wavenum'afwalk = 6 if scarea5 == 2 
replace r`wavenum'afwalk = 5 if scarea5 == 3 
replace r`wavenum'afwalk = 4 if scarea5 == 4 
replace r`wavenum'afwalk = 3 if scarea5 == 5 
replace r`wavenum'afwalk = 2 if scarea5 == 6 
replace r`wavenum'afwalk = 1 if scarea5 == 7 
label variable r`wavenum'afwalk "r`wavenum'afwalk:w`wavenum' whether r feel safe/afraid walking alone in this area"

*wave 8 spouse afraid walk
gen s`wavenum'afwalk =.
spouse r`wavenum'afwalk, result(s`wavenum'afwalk) wave(`wavenum')
label variable s`wavenum'afwalk "s`wavenum'afwalk:w`wavenum' whether s feel safe/afraid walking alone in this area"

***Unfriendly people ***
gen r`wavenum'unfriend = . 
missing_w`wavenum' w8scwt scarea6, result(r`wavenum'unfriend)
replace r`wavenum'unfriend = .c if mi(w8scwt)
replace r`wavenum'unfriend = scarea6 if inrange(scarea6 ,1,7)

label variable r`wavenum'unfriend "r`wavenum'unfriend:w`wavenum' whether r feel people are friendly/unfriendly in this area"

*wave 8 spouse unfriendly people
gen s`wavenum'unfriend =.
spouse r`wavenum'unfriend, result(s`wavenum'unfriend) wave(`wavenum')
label variable s`wavenum'unfriend "s`wavenum'unfriend:w`wavenum' whether s feel people are friendly/unfriendly in this area"

***Take advantage of respondent
gen r`wavenum'tadvan=. 
missing_w`wavenum' w8scwt scarea7, result(r`wavenum'tadvan)
replace r`wavenum'tadvan = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'tadvan = 7 if scarea7 == 1
replace r`wavenum'tadvan = 6 if scarea7 == 2 
replace r`wavenum'tadvan = 5 if scarea7 == 3 
replace r`wavenum'tadvan = 4 if scarea7 == 4 
replace r`wavenum'tadvan = 3 if scarea7 == 5 
replace r`wavenum'tadvan = 2 if scarea7 == 6 
replace r`wavenum'tadvan = 1 if scarea7 == 7 

label variable r`wavenum'tadvan "r`wavenum'tadvan:w`wavenum' r feel people take advantage of/treat r fairly in this area"

*wave 8 spouse take advantage of
gen s`wavenum'tadvan =.
spouse r`wavenum'tadvan, result(s`wavenum'tadvan) wave(`wavenum')
label variable s`wavenum'tadvan "s`wavenum'tadvan:w`wavenum' s feel people take advantage of/treat s fairly in this area"

***Full of rubbish and litter***
gen r`wavenum'rubbish = . 
missing_w`wavenum' w8scwt scarea8, result(r`wavenum'rubbish)
replace r`wavenum'rubbish = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'rubbish = scarea8 if inrange(scarea8,1,7)

label variable r`wavenum'rubbish "r`wavenum'rubbish:w`wavenum' whether r feels area is clean/full of rubbish and litter"

*wave 8 spouse full of rubbish and litter
gen s`wavenum'rubbish =.
spouse r`wavenum'rubbish, result(s`wavenum'rubbish) wave(`wavenum')
label variable s`wavenum'rubbish "s`wavenum'rubbish:w`wavenum' whether s feels area is clean/full of rubbish and litter"

***Don't get help from other***
gen r`wavenum'hlpntr = . 
missing_w`wavenum' w8scwt scarea9, result(r`wavenum'hlpntr)
replace r`wavenum'hlpntr = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'hlpntr = scarea9 if inrange(scarea9,1,7)

label variable r`wavenum'hlpntr "r`wavenum'hlpntr:w`wavenum' whether r feel people will help/won't help in this area"

*wave 8 spouse don't get help from other
gen s`wavenum'hlpntr =.
spouse r`wavenum'hlpntr, result(s`wavenum'hlpntr) wave(`wavenum')
label variable s`wavenum'hlpntr "s`wavenum'hlpntr:w`wavenum' whether s feel people will help/won't help in this area"

****Neighborhood phsyical disorder summary****
egen r`wavenum'npdisumm_e =rowmiss(r`wavenum'vandal r`wavenum'afwalk r`wavenum'rubbish)  if inw`wavenum' == 1
label variable r`wavenum'npdisumm_e "r`wavenum'npdisumm_e:w`wavenum' missings in r's neighborhood physical disorder summary mean score"

gen s`wavenum'npdisumm_e =.
spouse r`wavenum'npdisumm_e, result(s`wavenum'npdisumm_e) wave(`wavenum')
label variable s`wavenum'npdisumm_e "s`wavenum'npdisumm_e:w`wavenum' missings in s's neighborhood physical disorder summary mean score"

egen r`wavenum'npdisum_e =rowmean(r`wavenum'vandal r`wavenum'afwalk r`wavenum'rubbish)  if inw`wavenum' == 1
replace r`wavenum'npdisum_e  = .m if r`wavenum'npdisumm_e ==3
replace r`wavenum'npdisum_e  = .c if mi(w8scwt)

label variable r`wavenum'npdisum_e "r`wavenum'npdisum_e:w`wavenum' r's neighborhood physical disorder summary mean score"

gen s`wavenum'npdisum_e =.
spouse r`wavenum'npdisum_e, result(s`wavenum'npdisum_e) wave(`wavenum')
label variable s`wavenum'npdisum_e "s`wavenum'npdisum_e:w`wavenum' s's neighborhood physical disorder summary mean score"

****Neighborhood social cohesion***
egen r`wavenum'nsocosumm =rowmiss(r`wavenum'belong r`wavenum'trust r`wavenum'unfriend r`wavenum'hlpntr) if inw`wavenum' == 1
label variable r`wavenum'nsocosumm "r`wavenum'nsocoumm:w`wavenum' missings in r's neighborhood social cohesion summary mean score"

gen s`wavenum'nsocosumm =.
spouse r`wavenum'nsocosumm, result(s`wavenum'nsocosumm) wave(`wavenum')
label variable s`wavenum'nsocosumm "s`wavenum'nsocosumm:w`wavenum' missings in s's neighborhood social cohesion summary mean score"

egen r`wavenum'nsocosum =rowmean(r`wavenum'belong r`wavenum'trust r`wavenum'unfriend r`wavenum'hlpntr) if inw`wavenum' == 1
replace r`wavenum'nsocosum  = .m if r`wavenum'nsocosumm ==4
replace r`wavenum'nsocosum  = .c if  mi(w8scwt)

label variable r`wavenum'nsocosum "r`wavenum'nsocosum:w`wavenum' r's neighborhood social cohesion summary mean score"

gen s`wavenum'nsocosum =.
spouse r`wavenum'nsocosum, result(s`wavenum'nsocosum) wave(`wavenum')
label variable s`wavenum'nsocosum "s`wavenum'nsocosum:w`wavenum' s's neighborhood social cohesion summary mean score" */

***feel lack of companionship***
gen r`wavenum'complac = . 
replace r`wavenum'complac = .m if inlist(scfeela,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'complac = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'complac = scfeela if inrange(scfeela,1,3)

label variable r`wavenum'complac "r`wavenum'complac:w`wavenum' whether r often feels lack of companionship"
label value r`wavenum'complac tim

*wave 8 feel lack of companionship
gen s`wavenum'complac =.
spouse r`wavenum'complac, result(s`wavenum'complac) wave(`wavenum')
label variable s`wavenum'complac "s`wavenum'complac:w`wavenum' whether s often feels lack of companionship"
label value s`wavenum'complac tim

***feel left out***
gen r`wavenum'leftout = . 
replace r`wavenum'leftout = .m if inlist(scfeelb,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'leftout = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'leftout = scfeelb if inrange(scfeelb,1,3)

label variable r`wavenum'leftout "r`wavenum'leftout:w`wavenum' whether r often feels left out"
label value r`wavenum'leftout tim

*wave 8 feel left out
gen s`wavenum'leftout =.
spouse r`wavenum'leftout, result(s`wavenum'leftout) wave(`wavenum')
label variable s`wavenum'leftout "s`wavenum'leftout:w`wavenum' whether s often feels left out"
label value s`wavenum'leftout tim

***feel isolated from others***
gen r`wavenum'isolate = . 
replace r`wavenum'isolate = .m if inlist(scfeelc,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'isolate = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'isolate = scfeelc if inrange(scfeelc,1,3)

label variable r`wavenum'isolate "r`wavenum'isolate:w`wavenum' whether r often feels isolated from others" 
label value r`wavenum'isolate tim

*wave 8 feel isolated from others
gen s`wavenum'isolate =.
spouse r`wavenum'isolate, result(s`wavenum'isolate) wave(`wavenum')
label variable s`wavenum'isolate "s`wavenum'isolate:w`wavenum' whether s often feels isolated from others"
label value s`wavenum'isolate tim

***feel in tune with the people around***
gen r`wavenum'intune = . 
replace r`wavenum'intune = .m if inlist(scfeeld,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'intune = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'intune = scfeeld if inrange(scfeeld,1,3)

label variable r`wavenum'intune "r`wavenum'intune:w`wavenum' whether r often feels not in tune with the people around" 
label value r`wavenum'intune tim

*wave 8 feel in tune with the people around
gen s`wavenum'intune =.
spouse r`wavenum'intune, result(s`wavenum'intune) wave(`wavenum')
label variable s`wavenum'intune "s`wavenum'intune:w`wavenum' whether s often feels not in tune with the people around"
label value s`wavenum'intune tim

****summary score 4 components
recode r`wavenum'intune (1=3) (2=2) (3=1), gen(xr`wavenum'intune) 
egen r`wavenum'lnlysm =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate r`wavenum'intune) if inw`wavenum' == 1
label variable r`wavenum'lnlysm "r`wavenum'lnlysm:w`wavenum' missings in r's 4-item loneliness summary mean score"

gen s`wavenum'lnlysm =.
spouse r`wavenum'lnlysm, result(s`wavenum'lnlysm) wave(`wavenum')
label variable s`wavenum'lnlysm "s`wavenum'lnlysm:w`wavenum' missings in s's 4-item loneliness summary mean score"

egen r`wavenum'lnlys =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate xr`wavenum'intune) if inw`wavenum' == 1
replace r`wavenum'lnlys  = .m if r`wavenum'lnlysm == 4 & inw`wavenum' == 1
replace r`wavenum'lnlys  = .c if mi(w8scwt) & inw`wavenum' == 1


label variable r`wavenum'lnlys "r`wavenum'lnlys:w`wavenum' r's 4-item loneliness summary mean score"

gen s`wavenum'lnlys =.
spouse r`wavenum'lnlys, result(s`wavenum'lnlys) wave(`wavenum')
label variable s`wavenum'lnlys "s`wavenum'lnlys:w`wavenum' s's 4-item loneliness summary mean score"

drop xr`wavenum'intune

****summary score 3 components
egen r`wavenum'lnlys3m =rowmiss(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
label variable r`wavenum'lnlys3m "r`wavenum'lnlys3m:w`wavenum' missings in r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3m =.
spouse r`wavenum'lnlys3m, result(s`wavenum'lnlys3m) wave(`wavenum')
label variable s`wavenum'lnlys3m "s`wavenum'lnlys3m:w`wavenum' missings in s's 3-item loneliness summary mean score"

egen r`wavenum'lnlys3 =rowmean(r`wavenum'complac r`wavenum'leftout r`wavenum'isolate) if inw`wavenum' == 1
replace r`wavenum'lnlys3  = .m if r`wavenum'complac == .m & r`wavenum'leftout == .m & r`wavenum'isolate == .m
replace r`wavenum'lnlys3  = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'lnlys3  = .r if r`wavenum'complac == .r & r`wavenum'leftout == .r & r`wavenum'isolate == .r 

label variable r`wavenum'lnlys3 "r`wavenum'lnlys3:w`wavenum' r's 3-item loneliness summary mean score"

gen s`wavenum'lnlys3 =.
spouse r`wavenum'lnlys3, result(s`wavenum'lnlys3) wave(`wavenum')
label variable s`wavenum'lnlys3 "s`wavenum'lnlys3:w`wavenum' s's 3-item loneliness summary mean score"


*************************
******Spouse support***
***understand the way you feel
gen r`wavenum'sustdfe = . 
replace r`wavenum'sustdfe = .m if  inlist(scprta,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'sustdfe = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sustdfe = scprta if inrange(scprta,1,4)

label variable r`wavenum'sustdfe "r`wavenum'sustdfe:w`wavenum' r thinks spouse understands the way he/she feels" 
label value r`wavenum'sustdfe attns

*wave 8 understand the way you feel
gen s`wavenum'sustdfe =.
spouse r`wavenum'sustdfe, result(s`wavenum'sustdfe) wave(`wavenum')
label variable s`wavenum'sustdfe "s`wavenum'sustdfe:w`wavenum' s thinks spouse understands the way he/she feels"
label value s`wavenum'sustdfe attns

***rely on serious problem
gen r`wavenum'srely = . 
replace r`wavenum'srely = .m if inlist(scprtb,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'srely = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'srely = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'srely = scprtb if inrange(scprtb,1,4)

label variable r`wavenum'srely "r`wavenum'srely:w`wavenum' r can rely on spouse for a serious problem" 
label value r`wavenum'srely attns

*wave 8 rely on serious problem
gen s`wavenum'srely =.
spouse r`wavenum'srely, result(s`wavenum'srely) wave(`wavenum')
label variable s`wavenum'srely "s`wavenum'srely:w`wavenum' s can rely on spouse for a serious problem"
label value s`wavenum'srely attns

***open up when need to talk about worries
gen r`wavenum'sopenup = . 
replace r`wavenum'sopenup = .m if  inlist(scprtc,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'sopenup = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'sopenup = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sopenup = scprtc if inrange(scprtc,1,4)

label variable r`wavenum'sopenup "r`wavenum'sopenup:w`wavenum' r can open up their worries to spouse" 
label value r`wavenum'sopenup attns

*wave 8 open up when need tp talk about worries
gen s`wavenum'sopenup =.
spouse r`wavenum'sopenup, result(s`wavenum'sopenup) wave(`wavenum')
label variable s`wavenum'sopenup "s`wavenum'sopenup:w`wavenum' s can open up their worries to spouse"
label value s`wavenum'sopenup attns

****Criticize  by spouse
gen r`wavenum'scritze = . 
replace r`wavenum'scritze = .m if inlist(scprtd,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'scritze = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'scritze = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'scritze = scprtd if inrange(scprtd,1,4)

label variable r`wavenum'scritze "r`wavenum'scritze:w`wavenum' how much spouse criticizes r" 
label value r`wavenum'scritze attns

*wave 8 Criticize  by spouse
gen s`wavenum'scritze =.
spouse r`wavenum'scritze, result(s`wavenum'scritze) wave(`wavenum')
label variable s`wavenum'scritze "s`wavenum'scritze:w`wavenum' how much spouse criticizes s"
label value s`wavenum'scritze attns

*****let down when counting on them
gen r`wavenum'sletdow = . 
replace r`wavenum'sletdow = .m if inlist(scprte,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'sletdow = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'sletdow = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sletdow = scprte if inrange(scprte,1,4)

label variable r`wavenum'sletdow "r`wavenum'sletdow:w`wavenum' spouse let r down when counting on him/her" 
label value r`wavenum'sletdow attns

*wave 8 let down when counting on them
gen s`wavenum'sletdow =.
spouse r`wavenum'sletdow, result(s`wavenum'sletdow) wave(`wavenum')
label variable s`wavenum'sletdow "s`wavenum'sletdow:w`wavenum' spouse let s down when counting on him/her"
label value s`wavenum'sletdow attns

*****Get on nerves
gen r`wavenum'sgetnev = . 
replace r`wavenum'sgetnev = .m if  inlist(scprtf,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'sgetnev = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sgetnev = scprtf if inrange(scprtf,1,4)

label variable r`wavenum'sgetnev "r`wavenum'sgetnev:w`wavenum' spouse gets on r's nerve" 
label value r`wavenum'sgetnev attns

*wave 8 get on nerves
gen s`wavenum'sgetnev =.
spouse r`wavenum'sgetnev, result(s`wavenum'sgetnev) wave(`wavenum')
label variable s`wavenum'sgetnev "s`wavenum'sgetnev:w`wavenum' spouse gets on s's nerve"
label value s`wavenum'sgetnev attns

*****Too many demand on respondent 
gen r`wavenum'sdemand = . 
replace r`wavenum'sdemand = .m if inlist(scprtg,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'sdemand = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'sdemand = .n if scprt == 2 & inw`wavenum' == 1
replace r`wavenum'sdemand = scprtg if inrange(scprtg,1,4)

label variable r`wavenum'sdemand "r`wavenum'sdemand:w`wavenum' spouse puts too many demands on r" 
label value r`wavenum'sdemand attns

*wave8 to many demand on respondent
gen s`wavenum'sdemand =.
spouse r`wavenum'sdemand, result(s`wavenum'sdemand) wave(`wavenum')
label variable s`wavenum'sdemand "s`wavenum'sdemand:w`wavenum' spouse puts too many demands on s"
label value s`wavenum'sdemand attns


****spouse support summary****
recode r`wavenum'scritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'scritze)	
recode r`wavenum'sletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sletdow)	
recode r`wavenum'sgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sgetnev)	
recode r`wavenum'sdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'sdemand)	


egen r`wavenum'ssupport6m =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                           if inw`wavenum' == 1
label variable  r`wavenum'ssupport6m "r`wavenum'ssupport6m:w`wavenum' missings in r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6m=.
spouse r`wavenum'ssupport6m, result(s`wavenum'ssupport6m) wave(`wavenum')  
label variable s`wavenum'ssupport6m "s`wavenum'ssupport6m:w`wavenum' missings in s's lack of spouse support 6-item score"

egen r`wavenum'ssupport6 =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'ssupport6  = .m if r`wavenum'ssupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'ssupport6  = .n if scprt == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport6)

label variable r`wavenum'ssupport6 "r`wavenum'ssupport6:w`wavenum' r's lack of spouse support 6-item score"

gen s`wavenum'ssupport6 =.
spouse r`wavenum'ssupport6, result(s`wavenum'ssupport6) wave(`wavenum')
label variable s`wavenum'ssupport6 "s`wavenum'ssupport6:w`wavenum' s's lack of spouse support 6-item score"

*****8 items
egen r`wavenum'ssupportm =rowmiss(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand) if inw`wavenum' == 1
label variable  r`wavenum'ssupportm "r`wavenum'ssupportm:w`wavenum' missings in r's lack of spouse support 7-item score"

gen s`wavenum'ssupportm=.
spouse r`wavenum'ssupportm, result(s`wavenum'ssupportm) wave(`wavenum')  
label variable s`wavenum'ssupportm "s`wavenum'ssupportm:w`wavenum' missings in s's lack of spouse support 7-item score"

egen r`wavenum'ssupport =rowmean(r`wavenum'sustdfe r`wavenum'srely r`wavenum'sopenup xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand) if inw`wavenum' == 1
replace r`wavenum'ssupport  = .m if r`wavenum'ssupportm ==7 & inw`wavenum' == 1
replace r`wavenum'ssupport  = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'ssupport  = .n if scprt == 2 & inw`wavenum' == 1 & mi(r`wavenum'ssupport)

label variable r`wavenum'ssupport "r`wavenum'ssupport:w`wavenum' r's lack of spouse support 7-item score"

gen s`wavenum'ssupport =.
spouse r`wavenum'ssupport, result(s`wavenum'ssupport) wave(`wavenum')
label variable s`wavenum'ssupport "s`wavenum'ssupport:w`wavenum' s's lack of spouse support 7-item score"

drop xr`wavenum'scritze xr`wavenum'sletdow xr`wavenum'sgetnev xr`wavenum'sdemand

******Child support***
***understand the way you feel
gen r`wavenum'kustdfe = . 
replace r`wavenum'kustdfe = .m if inlist(scchda,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'kustdfe = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kustdfe = scchda if inrange(scchda,1,4)

label variable r`wavenum'kustdfe "r`wavenum'kustdfe:w`wavenum' r thinks children understand the way he/she feels" 
label value r`wavenum'kustdfe attnk

*wave 8 understand the way you feel
gen s`wavenum'kustdfe =.
spouse r`wavenum'kustdfe, result(s`wavenum'kustdfe) wave(`wavenum')
label variable s`wavenum'kustdfe "s`wavenum'kustdfe:w`wavenum' s thinks children understand the way he/she feels"
label value s`wavenum'kustdfe attnk

***rely on serious problem
gen r`wavenum'krely = . 
replace r`wavenum'krely = .m if inlist(scchdb,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'krely = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'krely = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'krely = scchdb if inrange(scchdb,1,4)

label variable r`wavenum'krely "r`wavenum'krely:w`wavenum' r can rely on children for a serious problem" 
label value r`wavenum'krely attnk

*wave 8 rely on serious problem
gen s`wavenum'krely =.
spouse r`wavenum'krely, result(s`wavenum'krely) wave(`wavenum')
label variable s`wavenum'krely "s`wavenum'krely:w`wavenum' s can rely on children for a serious problem"
label value s`wavenum'krely attnk

***open up when need tp talk about worries
gen r`wavenum'kopenup = . 
replace r`wavenum'kopenup = .m if  inlist(scchdc,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'kopenup = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'kopenup = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kopenup = scchdc if inrange(scchdc,1,4)

label variable r`wavenum'kopenup "r`wavenum'kopenup:w`wavenum' r can open up their worries to children" 
label value r`wavenum'kopenup attnk

*wave 8 open up when need tp talk about worries
gen s`wavenum'kopenup =.
spouse r`wavenum'kopenup, result(s`wavenum'kopenup) wave(`wavenum')
label variable s`wavenum'kopenup "s`wavenum'kopenup:w`wavenum' s can open up their worries to children"
label value s`wavenum'kopenup attnk

****Criticize by children
gen r`wavenum'kcritze = . 
replace r`wavenum'kcritze = .m if inlist(scchdd,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'kcritze = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'kcritze = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kcritze = scchdd if inrange(scchdd,1,4)

label variable r`wavenum'kcritze "r`wavenum'kcritze:w`wavenum' how much children criticize r" 
label value r`wavenum'kcritze attnk

*wave 8 Criticize by children
gen s`wavenum'kcritze =.
spouse r`wavenum'kcritze, result(s`wavenum'kcritze) wave(`wavenum')
label variable s`wavenum'kcritze "s`wavenum'kcritze:w`wavenum' how much children criticize s"
label value s`wavenum'kcritze attnk

*****let down when counting on them
gen r`wavenum'kletdow = . 
replace r`wavenum'kletdow = .m if  inlist(scchde,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'kletdow = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'kletdow = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kletdow = scchde if inrange(scchde,1,4)

label variable r`wavenum'kletdow "r`wavenum'kletdow:w`wavenum' children let r down when counting on them" 
label value r`wavenum'kletdow attnk

*wave 8 let down when counting on them
gen s`wavenum'kletdow =.
spouse r`wavenum'kletdow, result(s`wavenum'kletdow) wave(`wavenum')
label variable s`wavenum'kletdow "s`wavenum'kletdow:w`wavenum' children let s down when counting on them"
label value s`wavenum'kletdow attnk

*****Get on nerves
gen r`wavenum'kgetnev = . 
replace r`wavenum'kgetnev = .m if inlist(scchdf,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'kgetnev = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kgetnev = scchdf if inrange(scchdf,1,4)

label variable r`wavenum'kgetnev "r`wavenum'kgetnev:w`wavenum' children get on r's nerve" 
label value r`wavenum'kgetnev attnk

*wave 8 get on nerves
gen s`wavenum'kgetnev =.
spouse r`wavenum'kgetnev, result(s`wavenum'kgetnev) wave(`wavenum')
label variable s`wavenum'kgetnev "s`wavenum'kgetnev:w`wavenum' children get on s's nerve"
label value s`wavenum'kgetnev attnk

*****Too many demand on respondent 
gen r`wavenum'kdemand = . 
replace r`wavenum'kdemand = .m if inlist(scchdg,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'kdemand = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'kdemand = .n if scchd == 2 & inw`wavenum' == 1
replace r`wavenum'kdemand = scchdg if inrange(scchdg,1,4)

label variable r`wavenum'kdemand "r`wavenum'kdemand:w`wavenum' children put too many demands on r" 
label value r`wavenum'kdemand attnk

*wave8 to many demand on respondent
gen s`wavenum'kdemand =.
spouse r`wavenum'kdemand, result(s`wavenum'kdemand) wave(`wavenum')
label variable s`wavenum'kdemand "s`wavenum'kdemand:w`wavenum' children put too many demands on s"
label value s`wavenum'kdemand attnk

****Children support summary****
recode r`wavenum'kcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kcritze)	
recode r`wavenum'kletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kletdow)	
recode r`wavenum'kgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kgetnev)	
recode r`wavenum'kdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'kdemand)	

egen r`wavenum'ksupport6m =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev)  ///
                           if inw`wavenum' == 1
label variable r`wavenum'ksupport6m "r`wavenum'ksupport6m:w`wavenum' missings in r's lack of children support 6-item score"

gen s`wavenum'ksupport6m=.
spouse r`wavenum'ksupport6m, result(s`wavenum'ksupport6m) wave(`wavenum')  
label variable s`wavenum'ksupport6m "s`wavenum'ksupport6m:w`wavenum' missings in s's lack of children support 6-item score"

egen r`wavenum'ksupport6 =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev) ///
                           if inw`wavenum' == 1
replace r`wavenum'ksupport6  = .m if r`wavenum'ksupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'ksupport6  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport6)

label variable r`wavenum'ksupport6 "r`wavenum'ksupport6:w`wavenum' r's lack of children support 6-item score"

gen s`wavenum'ksupport6 =.
spouse r`wavenum'ksupport6, result(s`wavenum'ksupport6) wave(`wavenum')
label variable s`wavenum'ksupport6 "s`wavenum'ksupport6:w`wavenum' s's lack of children support 6-item score"

**7 item
egen r`wavenum'ksupportm =rowmiss(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand)  if inw`wavenum' == 1
label variable r`wavenum'ksupportm "r`wavenum'ksupportm:w`wavenum' missings in r's lack of children support 7-item score"

gen s`wavenum'ksupportm=.
spouse r`wavenum'ksupportm, result(s`wavenum'ksupportm) wave(`wavenum')  
label variable s`wavenum'ksupportm "s`wavenum'ksupportm:w`wavenum' missings in s's lack of children support 7-item score"

egen r`wavenum'ksupport =rowmean(r`wavenum'kustdfe r`wavenum'krely r`wavenum'kopenup xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand) if inw`wavenum' == 1
replace r`wavenum'ksupport  = .m if r`wavenum'ksupportm ==7 & inw`wavenum' == 1
replace r`wavenum'ksupport  = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'ksupport  = .n if scchd == 2 & inw`wavenum' == 1 & mi(r`wavenum'ksupport)

label variable r`wavenum'ksupport "r`wavenum'ksupport:w`wavenum' r's lack of children support 7-item score"

gen s`wavenum'ksupport =.
spouse r`wavenum'ksupport, result(s`wavenum'ksupport) wave(`wavenum')
label variable s`wavenum'ksupport "s`wavenum'ksupport:w`wavenum' s's lack of children support 7-item score"

drop xr`wavenum'kcritze xr`wavenum'kletdow xr`wavenum'kgetnev xr`wavenum'kdemand

******other family members support***
***understand the way you feel
gen r`wavenum'oustdfe = . 
replace r`wavenum'oustdfe = .m if inlist(scfama,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'oustdfe = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oustdfe = scfama if inrange(scfama,1,4)

label variable r`wavenum'oustdfe "r`wavenum'oustdfe:w`wavenum' r thinks other family members understand the way he/she feels" 
label value r`wavenum'oustdfe attnof

*wave 8 understand the way you feel
gen s`wavenum'oustdfe =.
spouse r`wavenum'oustdfe, result(s`wavenum'oustdfe) wave(`wavenum')
label variable s`wavenum'oustdfe "s`wavenum'oustdfe:w`wavenum' s thinks other family members understand the way he/she feels"
label value s`wavenum'oustdfe attnof

***rely on serious problem
gen r`wavenum'orely = . 
replace r`wavenum'orely = .m if inlist(scfamb,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'orely = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'orely = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'orely = scfamb if inrange(scfamb,1,4)

label variable r`wavenum'orely "r`wavenum'orely:w`wavenum' r can rely on other family members for a serious problem" 

label value r`wavenum'orely attnof

*wave 8 rely on serious problem
gen s`wavenum'orely =.
spouse r`wavenum'orely, result(s`wavenum'orely) wave(`wavenum')
label variable s`wavenum'orely "s`wavenum'orely:w`wavenum' s can rely on other family members for a serious problem"
label value s`wavenum'orely attnof

***open up when need tp talk about worries
gen r`wavenum'oopenup = . 
replace r`wavenum'oopenup = .m if inlist(scfamc,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'oopenup = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'oopenup = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oopenup = scfamc if inrange(scfamc,1,4)

label variable r`wavenum'oopenup "r`wavenum'oopenup:w`wavenum' r can open up their worries to other family members" 
label value r`wavenum'oopenup attnof

*wave 8 open up when need tp talk about worries
gen s`wavenum'oopenup =.
spouse r`wavenum'oopenup, result(s`wavenum'oopenup) wave(`wavenum')
label variable s`wavenum'oopenup "s`wavenum'oopenup:w`wavenum' s can open up their worries to other family members"
label value s`wavenum'oopenup attnof

****Criticize by other family members
gen r`wavenum'ocritze = . 
replace r`wavenum'ocritze = .m if inlist(scfamd,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'ocritze = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'ocritze = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ocritze = scfamd if inrange(scfamd,1,4)

label variable r`wavenum'ocritze "r`wavenum'ocritze:w`wavenum' how much other family members criticize r" 
label value r`wavenum'ocritze attnof

*wave 8 Criticize by other family members
gen s`wavenum'ocritze =.
spouse r`wavenum'ocritze, result(s`wavenum'ocritze) wave(`wavenum')
label variable s`wavenum'ocritze "s`wavenum'ocritze:w`wavenum' how much other family members criticize s"
label value s`wavenum'ocritze attnof

*****let down when counting on them
gen r`wavenum'oletdow = . 
replace r`wavenum'oletdow = .m if  inlist(scfame,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'oletdow = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'oletdow = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'oletdow = scfame if inrange(scfame,1,4)

label variable r`wavenum'oletdow "r`wavenum'oletdow:w`wavenum' other family members let r down when counting on them" 
label value r`wavenum'oletdow attnof

*wave 8 let down when counting on them
gen s`wavenum'oletdow =.
spouse r`wavenum'oletdow, result(s`wavenum'oletdow) wave(`wavenum')
label variable s`wavenum'oletdow "s`wavenum'oletdow:w`wavenum' other family members let s down when counting on them"
label value s`wavenum'oletdow attnof

*****Get on nerves
gen r`wavenum'ogetnev = . 
replace r`wavenum'ogetnev = .m if inlist(scfamf,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'ogetnev = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'ogetnev = scfamf if inrange(scfamf,1,4)

label variable r`wavenum'ogetnev "r`wavenum'ogetnev:w`wavenum' other family members get on r's nerve" 
label value r`wavenum'ogetnev attnof

*wave 8 get on nerves
gen s`wavenum'ogetnev =.
spouse r`wavenum'ogetnev, result(s`wavenum'ogetnev) wave(`wavenum')
label variable s`wavenum'ogetnev "s`wavenum'ogetnev:w`wavenum' other family members get on s's nerve"
label value s`wavenum'ogetnev attnof

*****Too many demand on respondent 
gen r`wavenum'odemand = . 
replace r`wavenum'odemand = .m if inlist(scfamg,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'odemand = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'odemand = .n if scfam == 2 & inw`wavenum' == 1
replace r`wavenum'odemand = scfamg if inrange(scfamg,1,4)

label variable r`wavenum'odemand "r`wavenum'odemand:w`wavenum' other family members put too many demands on r" 
label value r`wavenum'odemand attnof

*wave8 to many demand on respondent
gen s`wavenum'odemand =.
spouse r`wavenum'odemand, result(s`wavenum'odemand) wave(`wavenum')
label variable s`wavenum'odemand "s`wavenum'odemand:w`wavenum' other family members put too many demands on s"
label value s`wavenum'odemand attnof


****Other family members support summary****
recode r`wavenum'ocritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ocritze)	
recode r`wavenum'oletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'oletdow)	
recode r`wavenum'ogetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'ogetnev)	
recode r`wavenum'odemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'odemand)	

egen r`wavenum'osupport6m =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'osupport6m "r`wavenum'osupport6m:w`wavenum' missings in r's lack of other family members support 6-item score"

gen s`wavenum'osupport6m=.
spouse r`wavenum'osupport6m, result(s`wavenum'osupport6m) wave(`wavenum')  
label variable s`wavenum'osupport6m "s`wavenum'osupport6m:w`wavenum' missings in s's lack of other family members support 6-item score"

egen r`wavenum'osupport6 =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev) if inw`wavenum' == 1
replace r`wavenum'osupport6  = .m if r`wavenum'osupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'osupport6  = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'osupport6  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport6)

label variable r`wavenum'osupport6 "r`wavenum'osupport6:w`wavenum' r's lack of other family members support 6-item score"

gen s`wavenum'osupport6 =.
spouse r`wavenum'osupport6, result(s`wavenum'osupport6) wave(`wavenum')
label variable s`wavenum'osupport6 "s`wavenum'osupport6:w`wavenum' s's lack of other family members support 6-item score"

***7 items
egen r`wavenum'osupportm =rowmiss(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand)  if inw`wavenum' == 1
label variable r`wavenum'osupportm "r`wavenum'osupportm:w`wavenum' missings in r's lack of other family members support 7-item score"

gen s`wavenum'osupportm=.
spouse r`wavenum'osupportm, result(s`wavenum'osupportm) wave(`wavenum')  
label variable s`wavenum'osupportm "s`wavenum'osupportm:w`wavenum' missings in s's lack of other family members support 7-item score"

egen r`wavenum'osupport =rowmean(r`wavenum'oustdfe r`wavenum'orely r`wavenum'oopenup xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand) if inw`wavenum' == 1
replace r`wavenum'osupport  = .m if r`wavenum'osupportm ==7 & inw`wavenum' == 1
replace r`wavenum'osupport  = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'osupport  = .n if scfam == 2 & inw`wavenum' == 1 & mi(r`wavenum'osupport)

label variable r`wavenum'osupport "r`wavenum'osupport:w`wavenum' r's lack of other family members support 7-item score"

gen s`wavenum'osupport =.
spouse r`wavenum'osupport, result(s`wavenum'osupport) wave(`wavenum')
label variable s`wavenum'osupport "s`wavenum'osupport:w`wavenum' s's lack of other family members support 7-item score"

drop xr`wavenum'ocritze xr`wavenum'oletdow xr`wavenum'ogetnev xr`wavenum'odemand


******Friend support***
***understand the way you feel
gen r`wavenum'fustdfe = . 
replace r`wavenum'fustdfe = .m if inlist(scfrda,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'fustdfe = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fustdfe = scfrda if inrange(scfrda,1,4)

label variable r`wavenum'fustdfe "r`wavenum'fustdfe:w`wavenum' r thinks friends understand the way he/she feels" 
label value r`wavenum'fustdfe attnf

*wave 8 understand the way you feel
gen s`wavenum'fustdfe =.
spouse r`wavenum'fustdfe, result(s`wavenum'fustdfe) wave(`wavenum')
label variable s`wavenum'fustdfe "s`wavenum'fustdfe:w`wavenum' s thinks friends understand the way he/she feels"
label value s`wavenum'fustdfe attnf

***rely on serious problem
gen r`wavenum'frely = . 
replace r`wavenum'frely = .m if inlist(scfrdb,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'frely = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'frely = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'frely = scfrdb if inrange(scfrdb,1,4)

label variable r`wavenum'frely "r`wavenum'frely:w`wavenum' r can rely on friends for a serious problem" 
label value r`wavenum'frely attnf

*wave 8 rely on serious problem
gen s`wavenum'frely =.
spouse r`wavenum'frely, result(s`wavenum'frely) wave(`wavenum')
label variable s`wavenum'frely "s`wavenum'frely:w`wavenum' s can rely on friends for a serious problem"
label value s`wavenum'frely attnf

***open up when need tp talk about worries
gen r`wavenum'fopenup = . 
replace r`wavenum'fopenup = .m if inlist(scfrdc,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'fopenup = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'fopenup = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fopenup = scfrdc if inrange(scfrdc,1,4)

label variable r`wavenum'fopenup "r`wavenum'fopenup:w`wavenum' r can open up their worries to friends" 
label value r`wavenum'fopenup attnf

*wave 8 open up when need tp talk about worries
gen s`wavenum'fopenup =.
spouse r`wavenum'fopenup, result(s`wavenum'fopenup) wave(`wavenum')
label variable s`wavenum'fopenup "s`wavenum'fopenup:w`wavenum' s can open up their worries to friends"
label value s`wavenum'fopenup attnf

****Criticize by friend
gen r`wavenum'fcritze = . 
replace r`wavenum'fcritze = .m if inlist(scfrdd,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'fcritze = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'fcritze = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fcritze = scfrdd if inrange(scfrdd,1,4)

label variable r`wavenum'fcritze "r`wavenum'fcritze:w`wavenum' how much friends criticize r" 
label value r`wavenum'fcritze attnf

*wave 8 Criticize by friend
gen s`wavenum'fcritze =.
spouse r`wavenum'fcritze, result(s`wavenum'fcritze) wave(`wavenum')
label variable s`wavenum'fcritze "s`wavenum'fcritze:w`wavenum' how much friends criticize s"
label value s`wavenum'fcritze attnf

*****let down when counting on them
gen r`wavenum'fletdow = . 
replace r`wavenum'fletdow = .m if inlist(scfrde,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'fletdow = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'fletdow = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fletdow = scfrde if inrange(scfrde,1,4)

label variable r`wavenum'fletdow "r`wavenum'fletdow:w`wavenum' friends let r down when counting on them" 
label value r`wavenum'fletdow attnf

*wave 8 let down when counting on them
gen s`wavenum'fletdow =.
spouse r`wavenum'fletdow, result(s`wavenum'fletdow) wave(`wavenum')
label variable s`wavenum'fletdow "s`wavenum'fletdow:w`wavenum' friends let s down when counting on them"
label value s`wavenum'fletdow attnf

*****Get on nerves
gen r`wavenum'fgetnev = . 
replace r`wavenum'fgetnev = .m if inlist(scfrdf,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'fgetnev = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fgetnev = scfrdf if inrange(scfrdf,1,4)

label variable r`wavenum'fgetnev "r`wavenum'fgetnev:w`wavenum' friends gets on r's nerve" 
label value r`wavenum'fgetnev attnf

*wave 8 get on nerves
gen s`wavenum'fgetnev =.
spouse r`wavenum'fgetnev, result(s`wavenum'fgetnev) wave(`wavenum')
label variable s`wavenum'fgetnev "s`wavenum'fgetnev:w`wavenum' friends gets on s's nerve"
label value s`wavenum'fgetnev attnf

*****Too many demand on respondent 
gen r`wavenum'fdemand = . 
replace r`wavenum'fdemand = .m if inlist(scfrdg,-1,-2,-3,-9) & inw`wavenum' == 1
replace r`wavenum'fdemand = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'fdemand = .n if scfrd == 2 & inw`wavenum' == 1
replace r`wavenum'fdemand = scfrdg if inrange(scfrdg,1,4)

label variable r`wavenum'fdemand "r`wavenum'fdemand:w`wavenum' friends put too many demands on r" 
label value r`wavenum'fdemand attnf

*wave8 to many demand on respondent
gen s`wavenum'fdemand =.
spouse r`wavenum'fdemand, result(s`wavenum'fdemand) wave(`wavenum')
label variable s`wavenum'fdemand "s`wavenum'fdemand:w`wavenum' friends put too many demands on s"
label value s`wavenum'fdemand attnf

****Friends support summary****
recode r`wavenum'fcritze (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fcritze)	
recode r`wavenum'fletdow (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fletdow)	
recode r`wavenum'fgetnev (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fgetnev)	
recode r`wavenum'fdemand (1=4) (2=3) (3=2)(4=1), gen(xr`wavenum'fdemand)	

egen r`wavenum'fsupport6m =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                           if inw`wavenum' == 1
label variable r`wavenum'fsupport6m "r`wavenum'fsupport6m:w`wavenum' missings in r's lack of friends support 6-item score"

gen s`wavenum'fsupport6m=.
spouse r`wavenum'fsupport6m, result(s`wavenum'fsupport6m) wave(`wavenum')  
label variable s`wavenum'fsupport6m "s`wavenum'fsupport6m:w`wavenum' missings in s's lack of friends support 6-item score"

egen r`wavenum'fsupport6 =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev) ///
                          if inw`wavenum' == 1
replace r`wavenum'fsupport6  = .m if r`wavenum'fsupport6m ==6 & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'fsupport6  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport6)

label variable r`wavenum'fsupport6 "r`wavenum'fsupport6:w`wavenum' r's lack of friends support 6-item score"

gen s`wavenum'fsupport6 =.
spouse r`wavenum'fsupport6, result(s`wavenum'fsupport6) wave(`wavenum')
label variable s`wavenum'fsupport6 "s`wavenum'fsupport6:w`wavenum' s's lack of friends support 6-item score"

***7 items
egen r`wavenum'fsupportm =rowmiss(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand)  if inw`wavenum' == 1
label variable r`wavenum'fsupportm "r`wavenum'fsupportm:w`wavenum' missings in r's lack of friends support 7-item score"

gen s`wavenum'fsupportm=.
spouse r`wavenum'fsupportm, result(s`wavenum'fsupportm) wave(`wavenum')  
label variable s`wavenum'fsupportm "s`wavenum'fsupportm:w`wavenum' missings in s's lack of friends support 7-item score"

egen r`wavenum'fsupport =rowmean(r`wavenum'fustdfe r`wavenum'frely r`wavenum'fopenup xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand) if inw`wavenum' == 1
replace r`wavenum'fsupport  = .m if r`wavenum'fsupportm ==7 & inw`wavenum' == 1
replace r`wavenum'fsupport  = .c if mi(w8scwt) & inw`wavenum' == 1
replace r`wavenum'fsupport  = .n if scfrd == 2 & inw`wavenum' == 1 & mi(r`wavenum'fsupport)

label variable r`wavenum'fsupport "r`wavenum'fsupport:w`wavenum' r's lack of friends support 7-item score"

gen s`wavenum'fsupport =.
spouse r`wavenum'fsupport, result(s`wavenum'fsupport) wave(`wavenum')
label variable s`wavenum'fsupport "s`wavenum'fsupport:w`wavenum' s's lack of friends support 7-item score"

drop xr`wavenum'fcritze xr`wavenum'fletdow xr`wavenum'fgetnev xr`wavenum'fdemand



**drop ELSA wave core file raw variables***
drop `stre_w8_core'



*****************************************************************************************

pause on
*set wave number
*local wavenum =lh
*local pre_wavenum = `wavenum' -1

*file core**
local stre_wlh_hist rapri rapri2 rapri3 rapri4 rapri5 rapri6 rapri7 rapri8 rapri9 rapri10 rapri11 rapri12 rapri13 rapri14 rapri15 rapri16 ///
                    rapri17 rapri18 rapri19 rapri20 raown raown2 raown3 raown4 raown5 raown6 raown7 raown8 raown9 raown10 raown11 raown12 ///
                    raown13 raown14 raown15 raown16 raown17 raown18 raown19 raown20 rhcia rsfinan rsfinany rsdrink rsabuse ramot radiv rhcib rsmlet ///
                    rsflet rsmcold rsfcold rsmunder rsfunder rsmdicde rsfdecid rsmnotwa rsfnotwa rsattac rsattacy rsill rsilly rsdisas  ///
                    rsdisasy rsfired rsfiredy rastb rastb2 rastb3 rastb4 rastb5 rastb6 rastb7 rastb8 rastb9 rastb10 rastb11 rastb12 rastb13 ///
                    rastb14 rastb15 rastb16 rastb17 rastb18 rastb19 rastb20 raess raess2 raess3 raess4 raess5 raess6 raess7 raess8 raess9 raess10 /// 
                    raess11 raess12 raess13 raess14 raess15 raess16 raess17 raess18 raess19 raess20 
                    
merge 1:1 idauniq using "$wave_3_hist", keepusing(`stre_wlh_hist') nogen

*file index
local stre_wlh_index retroout

merge 1:1 idauniq using "$index", keepusing(`stre_wlh_index') nogen



***Eligible for life history***
gen raelhisw3 = 0
replace raelhisw3 =1 if retroout == 110

label variable raelhisw3 "raelhisw3:r in life history sample in wave 3"
label values raelhisw3 yesnod


***life history difficult living arrangement in childhood
gen ralivdiffch =. 

replace ralivdiffch = .a if raelhisw3 == 0 
rename rapri rapri1
rename raown raown1
rename rastb rastb1
rename raess raess1

forvalue i = 1/20 {
         gen chidiff`i'=0
         gen childh1`i'=0
	     replace chidiff`i' =1 if (rastb`i'-rabyear <16) & inrange(rastb`i',1900,2010) 
	     replace childh1`i' = 1 if (raess`i'-rabyear<16) & inrange(raess`i',1900,2010) 
				replace ralivdiffch = .m if (rapri`i' == -2 | inlist(raown`i',-1,-2)) & mi(ralivdiffch)
				replace ralivdiffch = .d if (rapri`i' == -8 | raown`i' == -8) & mi(ralivdiffch)
				replace ralivdiffch = .o if inlist(rapri`i',10,51,52,53,85) & mi(ralivdiffch)
				replace ralivdiffch = 0 if (inlist(raown`i',1,2,3) | inrange(rapri`i',1,9)) & mi(ralivdiffch)
				replace ralivdiffch = 1 if inrange(rapri`i',1,9)  & (chidiff`i' == 1 | childh1`i' == 1 )
				}						
						
label variable ralivdiffch "ralivdiffch:before age 16 whether r experienced difficult living arrangement"
label value ralivdiffch yesnod

rename rapri1 rapri
rename raown1 raown
rename rastb1 rastb
rename raess1 raess
***Health status during childhood***
gen rahealthch = .
replace rahealthch = .a if raelhisw3 == 0
replace rahealthch = .m if rhcia == -1 & raelhisw3 ==1
replace rahealthch = .d if rhcia == -8 
replace rahealthch = .n if rhcia == 6
replace rahealthch = rhcia if inrange(rhcia,1,5) 

label variable rahealthch "rahealthch:up to age 16 r self-reported health during childhood"
label value rahealthch rate

***serve financial hardship ever***
gen rasfnhe = .
replace rasfnhe = .a if raelhisw3 == 0 | rsfinan == -7
replace rasfnhe = .m if rsfinan == -2 & raelhisw3 ==1
replace rasfnhe = 1 if rsfinan  == 1 
replace rasfnhe = 0 if rsfinan  == 2 

label variable rasfnhe "rasfnhe:r ever experienced severe financial hardship"
label value rasfnhe yesnod

***serve financial hardship in the childhood***
gen rasfnhch = .
replace rasfnhch = .a if raelhisw3 == 0 | rsfinany == -7
replace rasfnhch = .m if inlist(rsfinany,-1,-2) & raelhisw3 ==1
replace rasfnhch = 0 if inrange(rsfinany,16,100) | (rsfinany  == -1 | rsfinan  == 2)
replace rasfnhch = 1 if rsfinan == 1 & inrange(rsfinany,0,15)

label variable rasfnhch "rasfnhch:r experienced severe financial hardship in childhood"
label value rasfnhch yesnod

**Ever experience parent drank 
gen rapadrug = .
replace rapadrug = .a if raelhisw3 == 0 | rsdrink == -7
replace rapadrug = .m if rsdrink == -2 & raelhisw3 ==1
replace rapadrug = 0 if rsdrink == 2
replace rapadrug = 1 if rsdrink == 1 

label variable rapadrug "rapadrug:before age 16 r's parent drank excessively/took drugs/had mental health problem"
label value rapadrug yesnod

***physical abused by parents**
gen rapabused = .
replace rapabused = .a if  raelhisw3 == 0 | rsabuse == -7
replace rapabused = .m if rsabuse == -2 & raelhisw3 ==1
replace rapabused = 0 if rsabuse == 2
replace rapabused = 1 if rsabuse == 1

label variable rapabused "rapabused:before age 16 r was physically abused by either parent"
label value rapabused yesnod

*ever separated from mother in the childhood
gen rasepmom=.
replace rasepmom = .a if raelhisw3 == 0 
replace rasepmom = .m if inlist(ramot,-1,-2)
replace rasepmom = .d if ramot == -8
replace rasepmom = .r if ramot == -9
replace rasepmom = 0 if  ramot == 2 
replace rasepmom = 1 if  ramot == 1

label variable rasepmom "rasepmom:before age 16 whether r separated from mother for 6 mo+"
label value rasepmom yesnod

*biological or adoptive parents separate or divorce
gen rapadivch =.
replace rapadivch = .a if raelhisw3 == 0 
replace rapadivch = .m if inlist(radiv,-1,-2)
replace rapadivch = .d if radiv == -8
replace rapadivch = .r if radiv == -9
replace rapadivch = .o if inrange(radiv,3,5)
replace rapadivch = 0 if radiv == 2
replace rapadivch = 1 if radiv == 1

label variable rapadivch "rapadivch h:before age 16 whether r parents separated/divorced"
label value rapadivch yesnod

****Missed a month of school because of health condition****
gen ramischlth = .
replace ramischlth = .a if raelhisw3 == 0 
replace ramischlth = .m if rhcib == -1 
replace ramischlth = .d if rhcib == -8 
replace ramischlth = 0 if rhcib == 2
replace ramischlth = 1 if rhcib == 1

label variable ramischlth "ramischlth:r missed school for 1+ mo due to health"
label value ramischlth yesnod

**Mother let me do things I liked doing
gen ramomlet = .
replace ramomlet = .a if raelhisw3 == 0 | rsmlet == -7 
replace ramomlet = .m if rsmlet == -2 & raelhisw3 ==1
replace ramomlet = 1 if rsmlet == 4
replace ramomlet = 2 if rsmlet == 3
replace ramomlet = 3 if rsmlet == 2
replace ramomlet = 4 if rsmlet == 1

label variable ramomlet "ramomlet:before age 16 r's mother let them do the things they liked doing"
label value ramomlet job

**Father let me do things I liked doing
gen radadlet = .
replace radadlet = .a if raelhisw3 == 0 | rsflet == -7 
replace radadlet = .m if rsflet == -2 & raelhisw3 ==1
replace radadlet = 1 if rsflet == 4
replace radadlet = 2 if rsflet == 3
replace radadlet = 3 if rsflet == 2
replace radadlet = 4 if rsflet == 1

label variable radadlet "radadlet:before age 16 r's father let them do the things they liked doing"
label value radadlet job

***mother was emotionally cold to me
gen ramomecold = .
replace ramomecold = .a if  raelhisw3 == 0 | rsmcold == -7 
replace ramomecold = .m if rsmcold == -2 & raelhisw3 ==1
replace ramomecold = 1 if rsmcold == 4
replace ramomecold = 2 if rsmcold == 3
replace ramomecold = 3 if rsmcold == 2
replace ramomecold = 4 if rsmcold == 1

label variable ramomecold "ramomecold:before age 16 r's mother was emotionally cold to r"
label value ramomecold job

***father was emotionally cold to me
gen radadecold = .
replace radadecold = .a if  raelhisw3 == 0 | rsfcold == -7 
replace radadecold = .m if rsfcold == -2 & raelhisw3 ==1
replace radadecold = 1 if rsfcold == 4
replace radadecold = 2 if rsfcold == 3
replace radadecold = 3 if rsfcold == 2
replace radadecold = 4 if rsfcold == 1

label variable radadecold "radadecold:before age 16 r's father was emotionally cold to r"
label value radadecold job


***mother understand 
gen ramomundstd = .
replace ramomundstd = .a if  raelhisw3 == 0 | rsmunder == -7
replace ramomundstd = .m if rsmunder == -2 & raelhisw3 ==1
replace ramomundstd = 1 if rsmunder == 4
replace ramomundstd = 2 if rsmunder == 3
replace ramomundstd = 3 if rsmunder == 2
replace ramomundstd = 4 if rsmunder == 1

label variable ramomundstd "ramomundstd:before age 16 r's mother appeared to understand r's problems and worries"
label value ramomundstd job

***father understand
gen radadundstd = .
replace radadundstd = .a if raelhisw3 == 0 | rsfunder == -7
replace radadundstd = .m if rsfunder == -2 & raelhisw3 ==1
replace radadundstd = 1 if rsfunder == 4
replace radadundstd = 2 if rsfunder == 3
replace radadundstd = 3 if rsfunder == 2
replace radadundstd = 4 if rsfunder == 1

label variable radadundstd "radadundstd:before age 16 r's father appeared to understand r's problems and worries"
label value radadundstd job


***mother like me to make my own decision
gen ramomdecisn = .
replace ramomdecisn = .a if  raelhisw3 == 0 | rsmdicde == -7 
replace ramomdecisn = .m if rsmdicde == -2 & raelhisw3 ==1
replace ramomdecisn = 1 if rsmdicde == 4
replace ramomdecisn = 2 if rsmdicde == 3
replace ramomdecisn = 3 if rsmdicde == 2
replace ramomdecisn = 4 if rsmdicde == 1

label variable ramomdecisn "ramomdecisn:before age 16 r's mother liked r to make their own decisions"
label value ramomdecisn job

***father like me to make my own decision
gen radaddecisn = .
replace radaddecisn = .a if  raelhisw3 == 0 | rsfdecid == -7
replace radaddecisn = .m if rsfdecid == -2 & raelhisw3 ==1
replace radaddecisn = 1 if rsfdecid == 4
replace radaddecisn = 2 if rsfdecid == 3
replace radaddecisn = 3 if rsfdecid == 2
replace radaddecisn = 4 if rsfdecid == 1

label variable radaddecisn "radaddecisn:before age 16 r's father liked r to make their own decisions"
label value radaddecisn job

***mother made me feel i was not wanted
gen ramomnotwa = .
replace ramomnotwa = .a if  raelhisw3 == 0 | rsmnotwa == -7
replace ramomnotwa = .m if rsmnotwa == -2 & raelhisw3 ==1
replace ramomnotwa = 1 if rsmnotwa == 4
replace ramomnotwa = 2 if rsmnotwa == 3
replace ramomnotwa = 3 if rsmnotwa == 2
replace ramomnotwa = 4 if rsmnotwa == 1

label variable ramomnotwa "ramomnotwa:r's mother made r feel like r was not wanted"
label value ramomnotwa job

***father made me feel i was not wanted
gen radadnotwa = .
replace radadnotwa = .a if  raelhisw3 == 0 | rsfnotwa == -7
replace radadnotwa = .m if rsfnotwa == -2 & raelhisw3 ==1
replace radadnotwa = 1 if rsfnotwa == 4
replace radadnotwa = 2 if rsfnotwa == 3
replace radadnotwa = 3 if rsfnotwa == 2
replace radadnotwa = 4 if rsfnotwa == 1

label variable radadnotwa "radadnotwa:r's father made r feel like r was not wanted"
label value radadnotwa job

**Ever been a victim of serious physical attack or assault in life
gen raattacke = .
replace raattacke = .a if raelhisw3 == 0 | rsattac == -7 
replace raattacke = .m if rsattac == -2 & raelhisw3 ==1
replace raattacke = 0 if rsattac == 2
replace raattacke = 1 if rsattac == 1

label variable raattacke "raattacke:r has ever been a victim of serious physical attack or assault in life"
label value raattacke yesnod

**Ever experience physical attack or assault in the childhood
gen raattackch = .
replace raattackch = .a if raelhisw3 == 0 | rsattac== -7
replace raattackch = .m if inlist(rsattacy,-1,-2) & raelhisw3 ==1 
replace raattackch = 0 if inrange(rsattacy,16,100) | (rsattacy  == -1 | rsattac  == 2)
replace raattackch = 1 if rsattac == 1 & inrange(rsattacy,0,15)

label variable raattackch "raattackch:r was a victim of serious physical attack or assault in childhood"
label value raattackch yesnod

**Ever experience life-threaten illness or accident
gen ralifethe = .
replace ralifethe = .a if raelhisw3 == 0 | rsill== -7 
replace ralifethe = .m if rsill == -2 & raelhisw3 ==1
replace ralifethe = 0 if rsill == 2
replace ralifethe = 1 if rsill == 1 

label variable ralifethe "ralifethe:r ever experienced life-threatening illness or accident in life"
label value ralifethe yesnod

**Ever experience life-threaten illness or accident in the childhood
gen ralifethch = .
replace ralifethch = .a if raelhisw3 == 0 | rsill== -7
replace ralifethch = .m if inlist(rsilly,-1,-2) & raelhisw3 ==1  
replace ralifethch = 0 if inrange(rsilly,16,100) | (rsilly  == -1 | rsill  == 2)
replace ralifethch = 1 if rsill == 1 & inrange(rsilly,0,15)

label variable ralifethch "ralifethch:r experienced life-threatening illness or accident in childhood"
label value ralifethch yesnod

**here
**Ever experience natural disaster
gen ranadise = .
replace ranadise = .a if raelhisw3 == 0 | rsdisas== -7 
replace ranadise = .m if rsdisas == -2 & raelhisw3 ==1 
replace ranadise = 0 if rsdisas == 2
replace ranadise = 1 if rsdisas == 1

label variable ranadise "ranadise:r ever experienced natural disaster"
label value ranadise yesnod

**Ever experience natural disaster in childhood
gen ranadisch = .
replace ranadisch = .a if raelhisw3 == 0 | rsdisas== -7
replace ranadisch = .m if inlist(rsdisasy,-1,-2) & raelhisw3 ==1 
replace ranadisch = 0 if inrange(rsdisasy,16,100) | (rsdisasy  == -1 | rsdisas  == 2)
replace ranadisch = 1 if rsdisas == 1 & inrange(rsdisasy,0,15)

label variable ranadisch "ranadisch:r experienced natural disaster in childhood"
label value ranadisch yesnod


**Ever experience weapon in combat
gen racombate = .
replace racombate = .a if raelhisw3 == 0 | rsfired== -7 
replace racombate = .m if rsfired == -2 & raelhisw3 ==1 
replace racombate = 0 if rsfired == 2
replace racombate = 1 if rsfired == 1

label variable racombate "racombate:r ever fired weapon or was fired at in combat"
label value racombate yesnod

**Ever experience weapon in combat in the childhood
gen racombatch = .
replace racombatch = .a if raelhisw3 == 0 | rsfired== -7 
replace racombatch = .m if inlist(rsfiredy,-1,-2) & raelhisw3 ==1 
replace racombatch = 0 if inrange(rsfiredy,16,100) | (rsfiredy  == -1 | rsfired  == 2)
replace racombatch = 1 if  rsfired == 1 & inrange(rsfiredy,0,15)

label variable racombatch "racombatch:r fired weapon or was fired at in combat in childhood"
label value racombatch yesnod

******Summary count for childhood stressful events****
egen racseventm_e = rowmiss(rapabused rapadrug ramischlth ranadisch racombatch raattackch ralifethch rasfnhch ralivdiffch rapadivch rasepmom) if raelhisw3 == 1 
                         
label variable racseventm_e "racsevent_e:missings in r's summary count of childhood stressful events"
						  
egen racsevent_e = rowtotal(rapabused rapadrug ramischlth ranadisch racombatch raattackch ralifethch rasfnhch ralivdiffch rapadivch rasepmom) if raelhisw3 == 1 
                     
replace racsevent_e  = .a if raelhisw3 == 0  | (ramischlth == .a & ranadisch == .a & racombatch == .a & raattackch == .a & ralifethch== .a & ///
                                  rasfnhch == .a & ralivdiffch == .a & rapadivch == .a & rasepmom == .a & rapabused == .a & rapadrug == .a)
replace racsevent_e  = .m if ramischlth == .m & ranadisch == .m & racombatch == .m & raattackch == .m & ralifethch== .m & ///
                             rasfnhch == .m & ralivdiffch == .m & rapadivch == .m & rasepmom == .m & rapabused == .m & rapadrug == .m

label variable racsevent_e "racsevent_e:r's summary count of childhood stressful events"

******Summary count for lifetime stressful events**** ralsevent 
egen ralseventm_e =rowmiss(rapabused rapadrug ramischlth ranadise racombate raattacke ralifethe rasfnhe ralivdiffch rapadivch rasepmom) if raelhisw3 == 1 

label variable ralseventm_e "ralsevent_e:missings in r's summary count of lifetime stressful events"

egen ralsevent_e =rowtotal(rapabused rapadrug ramischlth ranadise racombate raattacke ralifethe rasfnhe ralivdiffch rapadivch rasepmom) if raelhisw3 == 1 
replace ralsevent_e  = .a if raelhisw3 == 0 | (rapabused == .a & rapadrug == .a & ranadise == .a & racombate == .a & raattacke == .a & ///
                                          ralifethe == .a & rasfnhe == .a & rasepmom == .a  & ramischlth == .a & ralivdiffch == .a & rapadivch == .a)
replace ralsevent_e  = .m if rapabused == .m & rapadrug == .m & ranadise == .m & racombate == .m & raattacke== .m & ///
                             ralifethe == .m & rasfnhe == .m & rasepmom == .m  & ramischlth == .m & ralivdiffch == .m & rapadivch == .m

label variable ralsevent_e "ralsevent_e:r's summary count of lifetime stressful events"


***Summary mean and count for parent relationship** rapwarm
egen  rapwarmm_e =rowmiss(ramomlet radadlet ramomecold radadecold ramomundstd radadundstd ramomdecisn radaddecisn ///
                         ramomnotwa radadnotwa) if raelhisw3 == 1 
						 
label variable  rapwarmm_e "rapwarmm_e:missings in r's parental warmth summary mean score"


egen  rapwarm_e =rowmean(ramomlet radadlet ramomecold radadecold ramomundstd radadundstd ramomdecisn radaddecisn ///
                        ramomnotwa radadnotwa) if raelhisw3 == 1
replace  rapwarm_e  = .a if raelhisw3 == 0  
replace  rapwarm_e  = .m if  (rapwarm_e ==10 & raelhisw3 == 1) | rapwarmm_e==10

label variable  rapwarm_e "rapwarm_e:r's parental warmth summary mean score"

***Summary mean and count for's maternal relationship** rapwarm
egen  ramwarmm_e =rowmiss(ramomlet ramomecold ramomundstd ramomdecisn ramomnotwa) if raelhisw3 == 1 
						 
label variable  ramwarmm_e "ramwarmm_e:missings in r's maternal warmth summary mean score"


egen  ramwarm_e =rowmean(ramomlet ramomecold ramomundstd ramomdecisn ramomnotwa) if raelhisw3 == 1
replace  ramwarm_e  = .a if raelhisw3 == 0 
replace  ramwarm_e  = .m if  (ramwarm_e ==5 & raelhisw3 == 1) | ramwarmm_e==5

label variable  ramwarm_e "ramwarm_e:r's maternal warmth summary mean score"

***Summary mean and count for's paternal relationship** rapwarm
egen  radwarmm_e =rowmiss(radadlet radadecold radadundstd radaddecisn radadnotwa) if raelhisw3 == 1 
						 
label variable  radwarmm_e "radwarmm_e:missings in r's paternal warmth summary mean score"

egen  radwarm_e =rowmean(radadlet radadecold radadundstd radaddecisn radadnotwa) if raelhisw3 == 1
replace  radwarm_e  = .a if raelhisw3 == 0  
replace  radwarm_e  = .m if  (radwarm_e ==5 & raelhisw3 == 1) | radwarmm_e==5

label variable  radwarm_e "radwarm_e:r's paternal warmth summary mean score"

drop chidiff* childh1*


**drop ELSA wave core file raw variables***
drop `stre_wlh_hist'
*
****drop rand ELSA variables***
drop `stre_wlh_index'


*****************************************************************************************


*set wave number
local wvs 1 2 3 4 5 6 7 8
local prv_wvs 1 2 3 4 5 6 7
local wv 1 2 3 4 5 6 7 8




*eligibility
foreach wv in `wvs' {
    gen s`wv'elhisw3 =.
    spouse raelhisw3, result(s`wv'elhisw3) wave(`wv')
    label variable s`wv'elhisw3 "s`wv'elhisw3:w`wv' s in life history sample in wave 3"
    label value s`wv'elhisw3 yesnod
}

*life history difficult living arrangement in childhood
foreach wv in `wvs' {
    gen s`wv'livdiffch =.
    spouse ralivdiffch, result(s`wv'livdiffch) wave(`wv')
    label variable s`wv'livdiffch "s`wv'livdiffch:w`wv' before age 16 s whether experienced difficult living arrangement"
    label value s`wv'livdiffch yesnod
}

***Health status while growing up***
foreach wv in `wvs' {
   gen s`wv'healthch =.
    spouse rahealthch, result(s`wv'healthch) wave(`wv')
    label variable s`wv'healthch "s`wv'healthch:w`wv' up to age 16 self-reported health during childhood"
    label value s`wv'healthch rate
}

***Serve financial hardship***
foreach wv in `wvs' {
   gen s`wv'sfnhe =.
    spouse rasfnhe, result(s`wv'sfnhe) wave(`wv')
    label variable s`wv'sfnhe "s`wv'sfnhe:w`wv' s ever experienced severe financial hardship"
    label value s`wv'sfnhe yesnod
}

***Serve financial hardship while growing up***
foreach wv in `wvs' {
   gen s`wv'sfnhch =.
    spouse rasfnhch, result(s`wv'sfnhch) wave(`wv')
    label variable s`wv'sfnhch "s`wv'sfnhch:w`wv' s  experienced severe financial hardship in childhood"
    label value s`wv'sfnhch yesnod
}



**Ever experience parent drunk or use drug that it caused problems
foreach wv in `wvs' {
   gen s`wv'padrug =.
    spouse rapadrug, result(s`wv'padrug) wave(`wv')
    label variable s`wv'padrug "s`wv'padrug:w`wv' before age 16 s's parent drank excessively/took drugs/had mental health problem"
    label value s`wv'padrug yesnod
}


*physical abused by parent before age 16
foreach wv in `wvs' {
    gen s`wv'pabused =.
    spouse rapabused, result(s`wv'pabused) wave(`wv')
    label variable s`wv'pabused "s`wv'pabused:w`wv' before age 16 s was physically abused by either parent"
    label value s`wv'pabused yesnod
}

***whether separated from mother for 6 mo+ before age 16**
foreach wv in `wvs' {
   gen s`wv'sepmom =.
    spouse rasepmom, result(s`wv'sepmom) wave(`wv')
    label variable s`wv'sepmom "s`wv'sepmom:w`wv' before age 16 whether s separated from mother for 6 mo+"
    label value s`wv'sepmom yesnod
}

***whether parents separate/divorce before age 16**
foreach wv in `wvs' {
   gen s`wv'padivch =.
    spouse rapadivch, result(s`wv'padivch) wave(`wv')
    label variable s`wv'padivch "s`wv'padivch:w`wv' before age 16 whether s's parents separated/divorced"
    label value s`wv'padivch yesnod
}


*missed school due to health
foreach wv in `wvs' {
    gen s`wv'mischlth =.
    spouse ramischlth, result(s`wv'mischlth) wave(`wv')
    label variable s`wv'mischlth "s`wv'mischlth:w`wv' s missed school for 1+ mo due to health"
    label value s`wv'mischlth yesnod
}


**Mother let me do things I liked doing
foreach wv in `wvs' {
    gen s`wv'momlet =.
    spouse ramomlet, result(s`wv'momlet) wave(`wv')
    label variable s`wv'momlet "s`wv'momlet:w`wv' before age 16 s's mother let them do the things they liked doing"
    label value s`wv'momlet job
}

**Father let me do things I liked doing
foreach wv in `wvs' {
    gen s`wv'dadlet =.
    spouse radadlet, result(s`wv'dadlet) wave(`wv')
    label variable s`wv'dadlet "s`wv'dadlet:w`wv' before age 16 s's father let them do the things they liked doing"
    label value s`wv'dadlet job
}

**Mother was emotionally cold to me
foreach wv in `wvs' {
    gen s`wv'momecold =.
    spouse ramomecold, result(s`wv'momecold) wave(`wv')
    label variable s`wv'momecold "s`wv'momecold:w`wv' before age 16 s's mother was emotionally cold to s"
    label value s`wv'momecold job
}

**Father was emotionally cold to me
foreach wv in `wvs' {
    gen s`wv'dadecold =.
    spouse radadecold, result(s`wv'dadecold) wave(`wv')
    label variable s`wv'dadecold "s`wv'dadecold:w`wv' before age 16 s's father was emotionally cold to s"
    label value s`wv'dadecold job
}

**Mother understand
foreach wv in `wvs' {
    gen s`wv'momundstd =.
    spouse ramomundstd, result(s`wv'momundstd) wave(`wv')
    label variable s`wv'momundstd "s`wv'momundstd:w`wv' before age 16 s's mother appeared to understand s's problems and worries"
    label value s`wv'momundstd job
}

**Father  understand
foreach wv in `wvs' {
    gen s`wv'dadundstd =.
    spouse radadundstd, result(s`wv'dadundstd) wave(`wv')
    label variable s`wv'dadundstd "s`wv'dadundstd:w`wv' before age 16 s's father appeared to understand s's problems and worries"
    label value s`wv'dadundstd job
}

**Mother like me to make my own decision
foreach wv in `wvs' {
    gen s`wv'momdecisn =.
    spouse ramomdecisn, result(s`wv'momdecisn) wave(`wv')
    label variable s`wv'momdecisn "s`wv'momdecisn:w`wv' before age 16 s's mother liked s to make their own decisions"
    label value s`wv'momdecisn job
}

**Father like me to make my own decision
foreach wv in `wvs' {
    gen s`wv'daddecisn =.
    spouse radaddecisn, result(s`wv'daddecisn) wave(`wv')
    label variable s`wv'daddecisn "s`wv'daddecisn:w`wv' before age 16 s's father liked s to make their own decisions"
    label value s`wv'daddecisn job
}

**Mother notwa me do things I liked doing
foreach wv in `wvs' {
    gen s`wv'momnotwa =.
    spouse ramomnotwa, result(s`wv'momnotwa) wave(`wv')
    label variable s`wv'momnotwa "s`wv'momnotwa:w`wv' s's mother made s feel like s was not wanted"
    label value s`wv'momnotwa job
}

**Father notwa me do things I liked doing
foreach wv in `wvs' {
    gen s`wv'dadnotwa =.
    spouse radadnotwa, result(s`wv'dadnotwa) wave(`wv')
    label variable s`wv'dadnotwa "s`wv'dadnotwa:w`wv' s's father made s feel like s was not wanted"
    label value s`wv'dadnotwa job
}


*ever experience physical attack or assault in life
foreach wv in `wvs' {
    gen s`wv'attacke =.
    spouse raattacke, result(s`wv'attacke) wave(`wv')
    label variable s`wv'attacke "s`wv'attacke:w`wv' s has ever been a victim of serious physical attack or assault in life"
    label value s`wv'attacke yesnod
}

*ever experience physical attack or assault in life in childhood
foreach wv in `wvs' {
   gen s`wv'attackch =.
    spouse raattackch, result(s`wv'attackch) wave(`wv')
    label variable s`wv'attackch "s`wv'attackch:w`wv' s was a victim of serious physical attack or assault in childhood"
    label value s`wv'attackch yesnod
}

*ever experience life-threaten illness or accident
foreach wv in `wvs' {
    gen s`wv'lifethe =.
    spouse ralifethe, result(s`wv'lifethe) wave(`wv')
    label variable s`wv'lifethe "s`wv'lifethe:w`wv' s ever experienced life-threatening illness or accident in life"
    label value s`wv'lifethe yesnod
}

*ever experience life-threaten illness or accident in childhood
foreach wv in `wvs' {
   gen s`wv'lifethch =.
    spouse ralifethch, result(s`wv'lifethch) wave(`wv')
    label variable s`wv'lifethch "s`wv'lifethch:w`wv' s experienced life-threatening illness or accident in childhood"
    label value s`wv'lifethch yesnod
}

*ever experience natural disaster 
foreach wv in `wvs' {
    gen s`wv'nadise =.
    spouse ranadise, result(s`wv'nadise) wave(`wv')
    label variable s`wv'nadise "s`wv'nadise:w`wv' s ever experienced natural disaster"
    label value s`wv'nadise yesnod
}

*ever experience natural disaster in childhood
foreach wv in `wvs' {
    gen s`wv'nadisch =.
    spouse ranadisch, result(s`wv'nadisch) wave(`wv')
    label variable s`wv'nadisch "s`wv'nadisch:w`wv' s experienced natural disaster in childhood"
    label value s`wv'nadisch yesnod
}

*ever experience weapon in combat
foreach wv in `wvs' {
    gen s`wv'combate =.
    spouse racombate, result(s`wv'combate) wave(`wv')
    label variable s`wv'combate "s`wv'combate:w`wv' s ever fired weapon or was fired at in combat"
    label value s`wv'combate yesnod
}

*ever experience weapon in combat in childhood
foreach wv in `wvs' {
   gen s`wv'combatch =.
    spouse racombatch, result(s`wv'combatch) wave(`wv')
    label variable s`wv'combatch "s`wv'combatch:w`wv' s ever fired weapon or was fired at in combat in childhood"
    label value s`wv'combatch yesnod
}

*Summary count for the childhood trauma****
foreach wv in `wvs' {
   gen s`wv'csevent_e =.
    spouse racsevent_e, result(s`wv'csevent_e) wave(`wv')
    label variable s`wv'csevent_e "s`wv'csevent_e:w`wv' s's summary count of childhoold stressful events"
	
	gen s`wv'cseventm_e =.
    spouse racseventm_e, result(s`wv'cseventm_e) wave(`wv')
    label variable s`wv'cseventm_e "s`wv'cseventm_e:w`wv' missings in s's summary count of childhoold stressful events"

}

*Summary count for the life time trauma****
foreach wv in `wvs' {
   gen s`wv'lsevent_e =.
    spouse ralsevent_e, result(s`wv'lsevent_e) wave(`wv')
    label variable s`wv'lsevent_e "s`wv'lsevent_e:w`wv' s's summary count of lifetime stressful events"
	
	gen s`wv'lseventm_e =.
    spouse ralseventm_e, result(s`wv'lseventm_e) wave(`wv')
    label variable s`wv'lseventm_e "s`wv'lseventm_e:w`wv' missings in s's summary count of lifetime stressful events"

}

***Summary mean and count for parent relationship**
foreach wv in `wvs' {
   gen s`wv'pwarmm_e =.
    spouse rapwarmm_e, result(s`wv'pwarmm_e) wave(`wv')
    label variable s`wv'pwarmm_e "s`wv'pwarmm_e:w`wv' missings in s's parental warmth summary mean score"
	
   gen s`wv'mwarmm_e =.
    spouse ramwarmm_e, result(s`wv'mwarmm_e) wave(`wv')
    label variable s`wv'mwarmm_e "s`wv'mwarmm_e:w`wv' missings in s's maternal warmth summary mean score"
	
   gen s`wv'dwarmm_e =.
    spouse radwarmm_e, result(s`wv'dwarmm_e) wave(`wv')
    label variable s`wv'dwarmm_e "s`wv'dwarmm_e:w`wv' missings in s's paternal warmth summary mean score"

}

foreach wv in `wvs' {
   gen s`wv'pwarm_e =.
    spouse rapwarm_e, result(s`wv'pwarm_e) wave(`wv')
    label variable s`wv'pwarm_e "s`wv'pwarm_e:w`wv' s's parental warmth summary mean score"
	
   gen s`wv'mwarm_e =.
    spouse ramwarm_e, result(s`wv'mwarm_e) wave(`wv')
    label variable s`wv'mwarm_e "s`wv'mwarm_e:w`wv' s's maternal warmth summary mean score"
	
   gen s`wv'dwarm_e =.
    spouse radwarm_e, result(s`wv'dwarm_e) wave(`wv')
    label variable s`wv'dwarm_e "s`wv'dwarm_e:w`wv' s's paternal warmth summary mean score"

}




******************************************************************************************

********************************************************************************************************************
********************************************************************************************************************

***Create inflation multiplier variables
gen c2001cpindex =  82.3 // *2001
gen c2002cpindex =  83.3 // *2002
gen c2003cpindex =  84.5 // *2003
gen c2004cpindex =  85.6 // *2004
gen c2005cpindex =  87.3 // *2005
gen c2006cpindex =  89.4 // *2006
gen c2007cpindex =  91.5 // *2007
gen c2008cpindex =  94.8 // *2008
gen c2009cpindex =  96.8 // *2009
gen c2010cpindex = 100.0 // *2010
gen c2011cpindex = 104.5 // *2011
gen c2012cpindex = 107.4 // *2012
gen c2013cpindex = 110.2 // *2013
gen c2014cpindex = 111.8 // *2014
gen c2015cpindex = 111.8 // *2015
gen c2016cpindex = 112.6 // *2016
gen c2017cpindex = 115.6 // *2017

label variable c2001cpindex "2001 consumer price index, 2010=100"
label variable c2002cpindex "2002 consumer price index, 2010=100"
label variable c2003cpindex "2003 consumer price index, 2010=100"
label variable c2004cpindex "2004 consumer price index, 2010=100"
label variable c2005cpindex "2005 consumer price index, 2010=100"
label variable c2006cpindex "2006 consumer price index, 2010=100"
label variable c2007cpindex "2007 consumer price index, 2010=100"
label variable c2008cpindex "2008 consumer price index, 2010=100"
label variable c2009cpindex "2009 consumer price index, 2010=100"
label variable c2010cpindex "2010 consumer price index, 2010=100"
label variable c2011cpindex "2011 consumer price index, 2010=100"
label variable c2012cpindex "2012 consumer price index, 2010=100"
label variable c2013cpindex "2013 consumer price index, 2010=100"
label variable c2014cpindex "2014 consumer price index, 2010=100"
label variable c2015cpindex "2015 consumer price index, 2010=100"
label variable c2016cpindex "2016 consumer price index, 2010=100"
label variable c2017cpindex "2017 consumer price index, 2010=100"

***drop temporary indicators of spouse***
drop w1spouse w2spouse w3spouse w4spouse ///
     w4conhw w5spouse w5conhw w6spouse w6conhw ///
     w7spouse w7conhw w8spouse w8conhw

***Update all value labels***
foreach v of var * {
	local vlabel : value label `v'
	if "`vlabel'" != "" {
		label define `vlabel' ///
			.v ".v:SP NR" ///
			.u ".u:Unmar" ///
			.r ".r:Refuse" ///
			.m ".m:Missing" ///
			.d ".d:DK" ///
			.p ".p:proxy", modify
	}
}

***final sort
sort idauniq

***drop respendents who did not respond to at least one wave
drop if inw1!=1 & inw2!=1 & inw3!=1 & inw4!=1 & inw5!=1 & inw6!=1 & inw7!=1 & inw8!=1

***drop any temp variables
capture drop __0*

***drop non-included variables
capture drop r0*
capture drop s0*
capture drop h0*
capture drop hh0*
capture drop inw0
capture drop raedisced s?edisced

***define variable order
order idauniq ///
    	idauniqc ///
    	pn ///
			pnc ///
			hh?hhid ///
			hh?hhidc ///
			h?coupid ///
			h?coupidc ///
			s?idauniq ///
			raspct ///
			raspid1 ///
			raspid2 ///
			raspid3 ///
			raspid4 ///
			inw? ///
			inw?sc ///
			r?iwstat ///
			s?iwstat ///
			raelhisw3 ///
			s?elhisw3 ///
			r?cohort_e ///
			s?cohort_e ///
			raelsamp ///
			s?elsamp ///
			r?strat ///
			r?clust ///
			r?cwtresp ///
			s?cwtresp ///
			r?lwtresp ///
			s?lwtresp ///
			r?lwt4resp ///
			s?lwt4resp ///
			r?scwtresp ///
			s?scwtresp ///
			hh?hhresp ///
			h?cpl ///
			r?finr ///
			s?finr ///
			h?anyfin ///
			r?hhr ///
			s?hhr ///
			r?hor ///
			s?hor ///
			hh?anyho ///
			r?proxy ///
			s?proxy ///
			hh?iwhh ///
			hh?iwhhf ///
			hh?iwhhm ///
			hh?iwhhy ///
			r?iwind ///
			s?iwind ///
			r?iwindf ///
			s?iwindf ///
			r?iwindm ///
			s?iwindm ///
			r?iwindy ///
			s?iwindy ///
			rabyear ///
			s?byear ///
			rafbyear ///
			s?fbyear ///
			radyear ///
			s?dyear ///
			r?agey ///
			s?agey ///
			r?fagey ///
			s?fagey ///
			ragender ///
			s?gender ///
			rafgendr ///
			s?fgendr ///
			raracem ///
			s?racem ///
			raracef ///
			s?racef ///
			raeduc_e ///
			s?educ_e ///
			raeducl ///
			s?educl ///
			r?mstat ///
			s?mstat ///
			r?mpart ///
			s?mpart ///
			r?mstath ///
			s?mstath ///
			r?mstatf ///
			s?mstatf ///
			r?mrct ///
			s?mrct ///
			r?mnev ///
			s?mnev ///
			r?mdiv ///
			s?mdiv ///
			r?mwid ///
			s?mwid ///
			r?mend ///
			s?mend ///
			r?mcurln ///
			s?mcurln ///
			r?mlen ///
			s?mlen ///
			rabplace ///
			s?bplace ///
			rabcountry ///
			s?bcountry ///
			rarelig_e ///
			s?relig_e ///
			///
			r?shlt ///
			s?shlt ///
			r?shltf ///
			s?shltf ///
			r?shlta ///
			s?shlta ///
			r?shltaf ///
			s?shltaf ///
			r?hlthlm ///
			s?hlthlm ///
			r?walkra ///
			s?walkra ///
			r?dressa ///
			s?dressa ///
			r?batha ///
			s?batha ///
			r?eata ///
			s?eata ///
			r?beda ///
			s?beda ///
			r?toilta ///
			s?toilta ///
			r?mapa ///
			s?mapa ///
			r?phonea ///
			s?phonea ///
			r?moneya ///
			s?moneya ///
			r?medsa ///
			s?medsa ///
			r?shopa ///
			s?shopa ///
			r?mealsa ///
			s?mealsa ///
			r?housewka ///
			s?housewka ///
			r?walk100a ///
			s?walk100a ///
			r?sita ///
			s?sita ///
			r?chaira ///
			s?chaira ///
			r?climsa ///
			s?climsa ///
			r?clim1a ///
			s?clim1a ///
			r?stoopa ///
			s?stoopa ///
			r?lifta ///
			s?lifta ///
			r?dimea ///
			s?dimea ///
			r?armsa ///
			s?armsa ///
			r?pusha ///
			s?pusha ///
			r?adla ///
			s?adla ///
			r?adlam ///
			s?adlam ///
			r?adlwa ///
			s?adlwa ///
			r?adlwam ///
			s?adlwam ///
			r?iadla ///
			s?iadla ///
			r?iadlam ///
			s?iadlam ///
			r?iadlza ///
			s?iadlza ///
			r?iadlzam ///
			s?iadlzam ///
			r?mobilb ///
			s?mobilb ///
			r?mobilbm ///
			s?mobilbm ///
			r?lgmusa ///
			s?lgmusa ///
			r?lgmusam ///
			s?lgmusam ///
			r?grossa ///
			s?grossa ///
			r?grossam ///
			s?grossam ///
			r?finea ///
			s?finea ///
			r?fineam ///
			s?fineam ///
			r?depres ///
			s?depres ///
			r?effort ///
			s?effort ///
			r?sleepr ///
			s?sleepr ///
			r?whappy ///
			s?whappy ///
			r?flone ///
			s?flone ///
			r?fsad ///
			s?fsad ///
			r?going ///
			s?going ///
			r?enlife ///
			s?enlife ///
			r?cesd ///
			s?cesd ///
			r?cesdm ///
			s?cesdm ///
			r?hibpe ///
			s?hibpe ///
			r?hibpf ///
			s?hibpf ///
			r?diabe ///
			s?diabe ///
			r?diabf ///
			s?diabf ///
			r?cancre ///
			s?cancre ///
			r?cancrf ///
			s?cancrf ///
			r?lunge ///
			s?lunge ///
			r?lungf ///
			s?lungf ///
			r?hearte ///
			s?hearte ///
			r?heartf ///
			s?heartf ///
			r?stroke ///
			s?stroke ///
			r?strokf ///
			s?strokf ///
			r?psyche ///
			s?psyche ///
			r?psychf ///
			s?psychf ///
			r?arthre ///
			s?arthre ///
			r?arthrf ///
			s?arthrf ///
			r?asthmae ///
			s?asthmae ///
			r?asthmaf ///
			s?asthmaf ///
			r?hchole ///
			s?hchole ///
		  r?hcholf ///
			s?hcholf ///
			r?catrcte ///
			s?catrcte ///
			r?catrctf ///
			s?catrctf ///
			r?parkine ///
			s?parkine ///
		  r?parkinf ///
			s?parkinf ///
			r?hipe ///
			s?hipe ///
		 	r?memrye ///
			s?memrye ///
			r?memryf ///
			s?memryf ///
			r?alzhe ///
			s?alzhe ///
			r?alzhf ///
			s?alzhf ///
			r?demene ///
			s?demene ///
			r?demenf ///
			s?demenf ///
			r?height ///
			s?height ///
			r?weight ///
			s?weight ///
			r?bmi ///
			s?bmi ///
			r?bmicat ///
			s?bmicat ///
			r?mammoge ///
			s?mammoge ///
			r?proste ///
			s?proste ///
			r?mammog ///
			s?mammog ///
			r?prost ///
			s?prost ///
			r?vgactx_e ///
			s?vgactx_e ///
			r?mdactx_e ///
			s?mdactx_e ///
			r?ltactx_e ///
			s?ltactx_e ///
			r?drink ///
			s?drink ///
			r?drinkd_e ///
			s?drinkd_e ///
			r?drinkn_e ///
			s?drinkn_e ///
			r?drinkwn_e ///
			s?drinkwn_e ///
			r?smokev ///
			s?smokev ///
			r?smoken ///
			s?smoken ///
		  r?smokef ///
			s?smokef ///
			r?shltc ///
			s?shltc ///
			r?shltcf ///
			s?shltcf ///
			r?shltac ///
			s?shltac ///
			r?shltacf ///
			s?shltacf ///
			r?adlc ///
			s?adlc ///
			r?adlf ///
			s?adlf ///
			r?grossc ///
			s?grossc ///
			r?grossf ///
			s?grossf ///
			r?finec ///
			s?finec ///
			r?finef ///
			s?finef ///
			r?hibps ///
			s?hibps ///
			r?diabs ///
			s?diabs ///
			r?cancrs ///
			s?cancrs ///
			r?lungs ///
			s?lungs ///
			r?hearts ///
			s?hearts ///
			r?stroks ///
			s?stroks ///
			r?psychs ///
			s?psychs ///
			r?arthrs ///
			s?arthrs ///
			r?asthmas ///
			s?asthmas ///
			r?hchols ///
			s?hchols ///
			r?catrcts ///
			s?catrcts ///
			r?parkins ///
			s?parkins ///
			r?hips /// 
			s?hips ///
			r?memrys ///
			s?memrys /// 
			r?alzhs ///
			s?alzhs ///
			r?demens ///
			s?demens ///
			///
			r?hipriv ///
	    s?hipriv ///
	    r?hpsrc ///
	    s?hpsrc ///	
	    r?lifein ///
	    s?lifein ///
			///
			r?cogimp ///
			s?cogimp ///
			r?cogothp ///
			s?cogothp ///
			r?slfmem ///
			s?slfmem ///
			r?readrc ///
			s?readrc ///
			r?imrc ///
			s?imrc ///
			r?dlrc ///
			s?dlrc ///
			r?mo ///
			s?mo ///
			r?dy ///
			s?dy ///
			r?yr ///
			s?yr ///
			r?dw ///
			s?dw ///
			r?orient ///
			s?orient ///
			r?verbf ///
			s?verbf ///
			r?numer_e ///
			s?numer_e ///
			r?tr20 ///
			s?tr20 ///
			r?prmt1 ///
			s?prmt1 ///
			r?prmt2 ///
			s?prmt2 ///
			r?bwc20 ///
			s?bwc20 ///
			r?ser7 ///
			s?ser7 ///
			r?scis ///
			s?scis ///
			r?cact ///
			s?cact ///
			r?mnrc ///
			s?mnrc ///
			r?pm ///
			s?pm ///
			r?pres ///
			s?pres ///
   	 	///
    	c????cpindex ///
			h?arles ///
			h?afrles ///
			h?absns ///
			h?afbsns ///
			h?aira ///
			h?afira ///
			h?astck ///
			h?afstck ///
			h?achck ///
			h?afchck ///
			h?abond ///
			h?afbond ///
			h?adebt ///
			h?afdebt ///
			h?ahown ///
			h?ahous ///
			h?afhous ///
			h?amort ///
			h?afmort ///
			h?atoth ///
			h?aftoth ///
			h?aftothn ///
			h?atotf ///
			h?aftotf ///
			h?atotb ///
			h?aftotb ///
			///
			r?itearn ///
			s?itearn ///
			r?itifearn ///
			s?itifearn ///
			h?isemp ///
			h?iifsemp ///
			h?itrent ///
			h?itifrent ///
			h?ittrest ///
			h?ittfrest ///
			h?icap ///
			h?ifcap ///
			h?itfcap ///
			r?itpena ///
			s?itpena ///
			r?itifpena ///
			s?itifpena ///
			r?issdi ///
			s?issdi ///
			r?ifssdi ///
			s?ifssdi ///
			r?isret ///
			s?isret ///
			r?ifsret ///
			s?ifsret ///
			r?ipubpen ///
			s?ipubpen ///
			r?ifpubpen ///
			s?ifpubpen ///
			r?igxfr ///
			s?igxfr ///
			r?ifgxfr ///
			s?ifgxfr ///
			h?iothr ///
			h?ifothr ///
			h?itot ///
			h?iftot ///
			h?ifttot ///
			hh?cfoodi ///
			hh?cfoodo1m ///
			hh?cfood1m ///
			hh?cclo1m ///
			hh?clei1m ///
			hh?crent ///
			hh?cutil ///
			hh?ctot1m ///
			///
			h?hhres ///
		  r?dau ///
		  s?dau ///
		  r?son ///
		  s?son ///
			r?child ///
			s?child ///	
		  r?grchild_e ///
			s?grchild_e ///	
			r?livsib ///
			s?livsib ///
			r?momliv ///
			s?momliv ///
			r?dadliv ///
			s?dadliv ///
			r?momage ///
			s?momage ///
			r?dadage ///
			s?dadage ///
			ramomeduage ///
			s?momeduage ///
			radadeduage ///
			s?dadeduage ///
			ramarela ///
			s?marela ///
			ramaoccup ///
			s?maoccup ///
			r?livpar ///
			s?livpar ///
			h?coresd ///
			h?lvnear ///
			r?kcntf ///
			s?kcntf ///
			r?kcntpm ///
			s?kcntpm ///
			r?kcnt ///
			s?kcnt ///
			r?rcntf ///
			s?rcntf ///
			r?rcntpm ///
			s?rcntpm ///
			r?rcntm ///
			s?rcntm ///
			r?rcnt ///
			s?rcnt ///
			r?fcntf ///
			s?fcntf ///
			r?fcntpm ///
			s?fcntpm ///
			r?fcnt ///
			s?fcnt ///
			r?rcaany ///
			s?rcaany ///
			r?gcaany ///
			s?gcaany ///
			r?gkcare ///
			s?gkcare ///
			h?gany ///
			h?tcany ///
			h?toany ///
			h?tfany ///
			r?socyr ///
			s?socyr ///
			///
			r?work ///
			s?work ///
			r?work2 ///
			s?work2 ///
			r?slfemp ///
			s?slfemp ///
			r?lbrf_e ///
			s?lbrf_e ///
			r?inlbrf ///
			s?inlbrf ///
			r?unemp ///
			s?unemp ///
			r?jhours ///
			s?jhours ///
			r?jhour2_e ///
			s?jhour2_e ///
			r?jweeks_e ///
			s?jweeks_e ///
			r?wgihr_e ///
			s?wgihr_e ///
			r?wgiwk_e ///
			s?wgiwk_e ///
			r?wgfhr_e ///
			s?wgfhr_e ///
			r?wgfwk_e ///
			s?wgfwk_e ///
			r?jphysa ///
			s?jphysa ///
		  r?jpress ///
		  s?jpress ///
			r?jcten ///
			s?jcten ///
			r?fjcten ///
			s?fjcten ///
			r?nssec13 ///
			s?nssec13 ///
			r?nssec8 ///
			s?nssec8 ///
			r?soc2000 ///
			s?soc2000 ///
			r?jlastm ///
			s?jlastm ///
			r?jlasty ///
			s?jlasty ///
	    ///
	    r?retemp ///
	    s?retemp ///
	    r?retage ///
	    s?retage ///
	    r?liv85 ///
	    s?liv85 ///
	    r?liv10 ///
	    s?liv10 ///
	    r?liv10a ///
	    s?liv10a ///
	    r?inher ///
	    s?inher ///
	    r?beq50p ///
	    s?beq50p ///
	    r?beq150p ///
	    s?beq150p ///
	    r?workat ///
	    s?workat ///
	    r?workata ///
	    s?workata ///
	    r?workl65 ///
	    s?workl65 ///
	    r?pnhm5y ///
	    s?pnhm5y ///
	    ///
	    r?pubpen ///
	    s?pubpen ///
	    r?peninc ///
			s?peninc ///
			r?peninm ///
			s?peninm ///
			r?penct ///
			s?penct ///
			r?jcpen ///
			s?jcpen ///
			r?ptyp1_e ///
			s?ptyp1_e ///
			r?ptyp2_e ///
			s?ptyp2_e ///
			r?ptyp3_e ///
			s?ptyp3_e ///
			///
			r?satjob ///
			s?satjob ///
			r?demand ///
			s?demand ///
			r?deserve ///
			s?deserve ///
			r?salary ///
			s?salary ///
			r?promot ///
			s?promot ///
			r?secure ///
			s?secure ///
			r?timepre ///
			s?timepre ///
			r?ltlfree ///
			s?ltlfree ///
			r?nskills ///
			s?nskills ///
			r?support ///
			s?support ///
			r?control ///
			s?control ///
			r?workfast ///
			s?workfast ///
			r?jobsum ///
			s?jobsum ///
			r?jobsumm ///
			s?jobsumm ///
			r?belong ///
			s?belong ///
			r?vandal ///
			s?vandal ///
			r?trust ///
			s?trust ///
			r?afwalk ///
			s?afwalk ///
			r?unfriend ///
			s?unfriend ///
			r?rubbish ///
			s?rubbish ///
			r?hlpntr ///
			s?hlpntr ///
			r?alone ///
			s?alone ///
			r?tadvan ///
			s?tadvan ///
			r?npdisum_e ///
			s?npdisum_e ///
			r?npdisumm_e ///
			s?npdisumm_e ///
			r?nsocosum ///
			s?nsocosum ///
			r?nsocosumm ///
			s?nsocosumm ///
			ramischlth ///
			s?mischlth ///
			rapabused ///
			s?pabused ///
			rapadrug ///
			s?padrug ///
			ranadise ///
			s?nadise ///
			ranadisch ///
			s?nadisch ///
			racombate ///
			s?combate ///
			racombatch ///
			s?combatch ///
			raattacke ///
			s?attacke ///
			raattackch ///
			s?attackch ///
			ralifethe ///
			s?lifethe ///
			ralifethch ///
			s?lifethch ///
			rahealthch ///
			s?healthch ///
			rasfnhe ///
			s?sfnhe ///
			rasfnhch ///
			s?sfnhch ///
			ramomlet ///
			s?momlet ///
			radadlet ///
			s?dadlet ///
			ramomecold ///
			s?momecold ///
			radadecold ///
			s?dadecold ///
			ramomundstd ///
			s?momundstd ///
			radadundstd ///
			s?dadundstd ///
			ramomdecisn ///
			s?momdecisn ///
			radaddecisn ///
			s?daddecisn ///
			ramomnotwa ///
			s?momnotwa ///
			radadnotwa ///
			s?dadnotwa ///
			ralivdiffch ///
			s?livdiffch ///
			rapadivch ///
			s?padivch ///
			rasepmom ///
			s?sepmom ///
			ralsevent_e ///
			s?lsevent_e ///
			ralseventm_e ///
			s?lseventm_e ///
			racsevent_e ///
			s?csevent_e ///
			racseventm_e ///
			s?cseventm_e ///
			rapwarm_e ///
			s?pwarm_e ///
			rapwarmm_e ///
			s?pwarmm_e ///
			ramwarm_e ///
			s?mwarm_e ///
			ramwarmm_e ///
			s?mwarmm_e ///
			radwarm_e ///
			s?dwarm_e ///
			radwarmm_e ///
			s?dwarmm_e ///
			r?complac ///
			s?complac ///
			r?leftout ///
			s?leftout ///
			r?isolate ///
			s?isolate ///
			r?intune ///
			s?intune ///
			r?lnlys ///
			s?lnlys ///
			r?lnlysm ///
			s?lnlysm ///
			r?lnlys3 ///
			s?lnlys3 ///
			r?lnlys3m ///
			s?lnlys3m ///
			r?sustdfe ///
			s?sustdfe ///
			r?srely ///
			s?srely ///
			r?sopenup ///
			s?sopenup ///
			r?sdemand ///
			s?sdemand ///
			r?scritze ///
			s?scritze ///
			r?sletdow ///
			s?sletdow ///
			r?sgetnev ///
			s?sgetnev ///
			r?ssupport6 ///
			s?ssupport6 ///
			r?ssupport6m ///
			s?ssupport6m ///
			r?ssupport ///
			s?ssupport ///
			r?ssupportm ///
			s?ssupportm ///
			r?kustdfe ///
			s?kustdfe ///
			r?krely ///
			s?krely ///
			r?kopenup ///
			s?kopenup ///
			r?kdemand ///
			s?kdemand ///
			r?kcritze ///
			s?kcritze ///
			r?kletdow ///
			s?kletdow ///
			r?kgetnev ///
			s?kgetnev ///
			r?ksupport6 ///
			s?ksupport6 ///
			r?ksupport6m ///
			s?ksupport6m ///
			r?ksupport ///
			s?ksupport ///
			r?ksupportm ///
			s?ksupportm ///
			r?oustdfe ///
			s?oustdfe ///
			r?orely ///
			s?orely ///
			r?oopenup ///
			s?oopenup ///
			r?odemand ///
			s?odemand ///
			r?ocritze ///
			s?ocritze ///
			r?oletdow ///
			s?oletdow ///
			r?ogetnev ///
			s?ogetnev ///
			r?osupport6 ///
			s?osupport6 ///
			r?osupport6m ///
			s?osupport6m ///
			r?osupport ///
			s?osupport ///
			r?osupportm ///
			s?osupportm ///
			r?fustdfe ///
			s?fustdfe ///
			r?frely ///
			s?frely ///
			r?fopenup ///
			s?fopenup ///
			r?fdemand ///
			s?fdemand ///
			r?fcritze ///
			s?fcritze ///
			r?fletdow ///
			s?fletdow ///
			r?fgetnev ///
			s?fgetnev ///
			r?fsupport6 ///
			s?fsupport6 ///
			r?fsupport6m ///
			s?fsupport6m ///
			r?fsupport ///
			s?fsupport ///
			r?fsupportm ///
			s?fsupportm ///
			r?lsrspct ///
			s?lsrspct ///
			r?prsrvc ///
			s?prsrvc ///
			r?notsmrt ///
			s?notsmrt ///
			r?harass ///
			s?harass ///
			r?prtrmt ///
			s?prtrmt ///
			r?dscrim5 ///
			s?dscrim5 ///
			r?dscrim5m ///
			s?dscrim5m ///
			r?dcgendr ///
			s?dcgendr ///
			r?dcrace ///
			s?dcrace ///
			r?dcage ///
			s?dcage ///
			r?dcwegt ///
			s?dcwegt ///
			r?dcdstat ///
			s?dcdstat ///
			r?dcaprnc ///
			s?dcaprnc ///
			r?dcsxori ///
			s?dcsxori ///
			r?dcfinan ///
			s?dcfinan ///
			r?dcother ///
			s?dcother ///
			r?dcreas_e ///
			s?dcreas_e
	
	
***compress dataset
compress

***remove unsued value lables
capture label drop ialoan1
capture label drop ialoan2
capture label drop ialoan3
capture label drop ialoan4
labelbook, problems
label drop `r(notused)'

***save output dataset
save "`output'/H_ELSA_f_2002-2016", replace

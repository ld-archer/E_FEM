
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   16.0   Copyright 1985-2019 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     Special Edition                  College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user Stata perpetual license:
       Serial number:  401606204723
         Licensed to:  Nik Lomax
                       The University of Leeds

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  Maximum number of variables is set to 5000; see help set_maxvar.

. do "save_est_cpp.do" 

. /** \file save_est_cpp.do This script loads binary estimation objects from St
> ata and spits them out in plain text form.
> 
> This version of the file relies on two environment variables to determine inp
> ut and output directories at runtime, so we don't need
> to have multiple versions running around.
> 
> datain - directory to read all the *.ster files from
> dataout - directory to write all the *.est files to
> 
> Usage would be something like the following:
> datain=../Estimates dataout=../../FEM_CPP_settings/models stata-mp -b do save
> _est_cpp.do
> 
> */
. 
. * Setup some environmental settings
. set more off

. 
. * Clear anything thats already in memory
. clear all

. 
. * Assume that this script is being executed in the FEM_Stata/Estimation direc
> tory
. 
. * Load environment variables from the root FEM directory, two levels up
. * these define important paths, specific to the user
. adopath ++ ../utilities
  [1]              "../utilities"
  [2]  (BASE)      "/usr/local/stata16/ado/base/"
  [3]  (SITE)      "/usr/local/ado/"
  [4]              "."
  [5]  (PERSONAL)  "~/ado/personal/"
  [6]  (PLUS)      "~/ado/plus/"
  [7]  (OLDPLACE)  "~/ado/"

. 
. local ster : env datain

. local est_out_dir : env dataout

. 
. noi di "Loading estimates from [`ster']"
Loading estimates from [/home/ld-archer/Documents/E_FEM/trunk/FEM_Stata/Estimat
> es/ELSA_bmi2]

.         * Loads all estimates
.         local all_ests :dir "`ster'" files "*.ster"

.         
.         foreach est in `all_ests' {
  2.                 noi di "Loading estimate: `est'"
  3.                 est use "`ster'/`est'"
  4.                 
.                 local test =strpos("`est'","_cond")
  5.                 if "`test'"=="0" {
  6.                         est use "`ster'/`est'"
  7.                         local est_name = substr("`est'",1,length("`est'")-
> 5)
  8.                         est store `est_name'
  9.                         local cmd = e(cmd)
 10.                         local depvar = e(depvar)
 11.                         save_eststore_txt `est_name'  using "`est_out_dir'
> /`est_name'.est" , model_name(`est_name') model_type(`cmd') predicted_var(`de
> pvar')
 12.                 }
 13.                 else {
 14.                         est use "`ster'/`est'"
 15.                         local est_name = substr("`est'",1,length("`est'")-
> 5)
 16.                         local est_namef = substr("`est_name'",1,strpos("`e
> st_name'","_cond")-1)
 17.                         if regexm("`condlist'","`est_namef'")==0 {
 18.                                 capture rm `est_out_dir'/`est_namef'.txt
 19.                                 local condlist = "`condlist' `est_namef'"
 20.                         }
 21.                         est store `est_name'
 22.                         local cmd = e(cmd)
 23.                         local depvar = e(depvar)
 24.                         save_eststore_txt `est_name'  using "`est_out_dir'
> /`est_name'.est" , model_name(`est_name') model_type(`cmd') predicted_var(`de
> pvar')                   
 25. *                       save_eststore_txt `est_name'  using "`est_out_dir'
> /`est_name'_.est" , model_name(`est_name') model_type(`cmd') predicted_var(`d
> epvar')
. *                       ! sed 's/`est_namef'/`est_name'/g' < `est_out_dir'/`e
> st_name'_.est > `est_out_dir'/`est_name'.est
. *                       rm  `est_out_dir'/`est_name'_.est
.                         ! echo `est_name' >>  `est_out_dir'/`est_namef'.txt
 26.                         ! cat `ster'/`est_name'.txt >> `est_out_dir'/`est_
> namef'.txt
 27.                 }
 28.         }
Loading estimate: logbmi.ster

.                 
. 
end of do-file
